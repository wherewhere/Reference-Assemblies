<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net</name>
  </assembly>
  <members>
    <member name="T:System.Net.Cookie">
      <summary>提供一组用于管理 Cookie 的属性和方法。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor">
      <summary>初始化 <see cref="T:System.Net.Cookie" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String)">
      <summary>使用指定的 <see cref="P:System.Net.Cookie.Name" /> 和 <see cref="P:System.Net.Cookie.Value" /> 初始化 <see cref="T:System.Net.Cookie" /> 类的新实例。</summary>
      <param name="name">
        <see cref="T:System.Net.Cookie" /> 的名称。 不能在 <paramref name="name" /> 中使用下列字符：等号、分号、逗号、换行符 (\n)、回车符 (\r)、制表符 (\t) 和空格字符。 美元符号 ("$") 不能作为第一个字符。</param>
      <param name="value">
        <see cref="T:System.Net.Cookie" /> 的值。 下列字符不得用在 <paramref name="value" /> 中：分号、逗号。</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> 参数为 null。 - 或 - <paramref name="name" /> 参数的长度为零。 - 或 - <paramref name="name" /> 参数包含无效字符。 - 或 - <paramref name="value" /> 参数为 null。 - 或 - <paramref name="value" /> 参数包含一个未使用引号引起来的字符串，且该字符串中包含无效字符。</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)">
      <summary>使用指定的 <see cref="P:System.Net.Cookie.Name" />、<see cref="P:System.Net.Cookie.Value" /> 和 <see cref="P:System.Net.Cookie.Path" /> 初始化 <see cref="T:System.Net.Cookie" /> 类的新实例。</summary>
      <param name="name">
        <see cref="T:System.Net.Cookie" /> 的名称。 不能在 <paramref name="name" /> 中使用下列字符：等号、分号、逗号、换行符 (\n)、回车符 (\r)、制表符 (\t) 和空格字符。 美元符号 ("$") 不能作为第一个字符。</param>
      <param name="value">
        <see cref="T:System.Net.Cookie" /> 的值。 下列字符不得用在 <paramref name="value" /> 中：分号、逗号。</param>
      <param name="path">此 <see cref="T:System.Net.Cookie" /> 适用于的源服务器上的 URI 的子集。 默认值为 "/"。</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> 参数为 null。 - 或 - <paramref name="name" /> 参数的长度为零。 - 或 - <paramref name="name" /> 参数包含无效字符。 - 或 - <paramref name="value" /> 参数为 null。 - 或 - <paramref name="value" /> 参数包含一个未使用引号引起来的字符串，且该字符串中包含无效字符。</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary>使用指定的 <see cref="P:System.Net.Cookie.Name" />、<see cref="P:System.Net.Cookie.Value" />、<see cref="P:System.Net.Cookie.Path" /> 和 <see cref="P:System.Net.Cookie.Domain" /> 初始化 <see cref="T:System.Net.Cookie" /> 类的新实例。</summary>
      <param name="name">
        <see cref="T:System.Net.Cookie" /> 的名称。 不能在 <paramref name="name" /> 中使用下列字符：等号、分号、逗号、换行符 (\n)、回车符 (\r)、制表符 (\t) 和空格字符。 美元符号 ("$") 不能作为第一个字符。</param>
      <param name="value">
        <see cref="T:System.Net.Cookie" /> 对象的值。 下列字符不得用在 <paramref name="value" /> 中：分号、逗号。</param>
      <param name="path">此 <see cref="T:System.Net.Cookie" /> 适用于的源服务器上的 URI 的子集。 默认值为 "/"。</param>
      <param name="domain">此 <see cref="T:System.Net.Cookie" /> 对其有效的可选 Internet 域。 默认值为已从其中接收到此 <see cref="T:System.Net.Cookie" /> 的主机。</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> 参数为 null。 - 或 - <paramref name="name" /> 参数的长度为零。 - 或 - <paramref name="name" /> 参数包含无效字符。 - 或 - <paramref name="value" /> 参数为 null。 - 或 - <paramref name="value" /> 参数包含一个未使用引号引起来的字符串，且该字符串中包含无效字符。</exception>
    </member>
    <member name="P:System.Net.Cookie.Comment">
      <summary>获取或设置服务器可添加到 <see cref="T:System.Net.Cookie" /> 中的注释。</summary>
      <returns>用于记录此 <see cref="T:System.Net.Cookie" /> 预定用途的可选注释。</returns>
    </member>
    <member name="P:System.Net.Cookie.CommentUri">
      <summary>获取或设置服务器可通过 <see cref="T:System.Net.Cookie" /> 来提供的 URI 注释。</summary>
      <returns>一个可选注释，它表示此 <see cref="T:System.Net.Cookie" /> 的 URI 引用的预定用途。 该值必须符合 URI 格式。</returns>
    </member>
    <member name="P:System.Net.Cookie.Discard">
      <summary>获取或设置由服务器设置的丢弃标志。</summary>
      <returns>如果客户端将在当前会话结束时丢弃 <see cref="T:System.Net.Cookie" />，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Net.Cookie.Domain">
      <summary>获取或设置 <see cref="T:System.Net.Cookie" /> 对其有效的 URI。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> 对其有效的 URI。</returns>
    </member>
    <member name="M:System.Net.Cookie.Equals(System.Object)">
      <summary>重写 <see cref="M:System.Object.Equals(System.Object)" /> 方法。</summary>
      <returns>如果 <see cref="T:System.Net.Cookie" /> 等于 <paramref name="comparand" />，则返回 true。 两个 <see cref="T:System.Net.Cookie" /> 实例相等的条件是它们的 <see cref="P:System.Net.Cookie.Name" />、<see cref="P:System.Net.Cookie.Value" />、<see cref="P:System.Net.Cookie.Path" />、<see cref="P:System.Net.Cookie.Domain" /> 和 <see cref="P:System.Net.Cookie.Version" /> 属性相等。 <see cref="P:System.Net.Cookie.Name" /> 和 <see cref="P:System.Net.Cookie.Domain" /> 字符串比较不区分大小写。</returns>
      <param name="comparand">对 <see cref="T:System.Net.Cookie" /> 的引用。</param>
    </member>
    <member name="P:System.Net.Cookie.Expired">
      <summary>获取或设置 <see cref="T:System.Net.Cookie" /> 的当前状态。</summary>
      <returns>如果 <see cref="T:System.Net.Cookie" /> 已过期，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Net.Cookie.Expires">
      <summary>获取或设置作为 <see cref="T:System.DateTime" /> 的 <see cref="T:System.Net.Cookie" /> 过期日期和时间。</summary>
      <returns>作为 <see cref="T:System.DateTime" /> 实例的 <see cref="T:System.Net.Cookie" /> 过期日期和时间。</returns>
    </member>
    <member name="M:System.Net.Cookie.GetHashCode">
      <summary>重写 <see cref="M:System.Object.GetHashCode" /> 方法。</summary>
      <returns>此实例的 32 位带符号整数哈希代码。</returns>
    </member>
    <member name="P:System.Net.Cookie.HttpOnly">
      <summary>确定页脚本或其他活动内容是否可访问此 Cookie。</summary>
      <returns>确定页脚本或其他活动内容是否可访问此 Cookie 的布尔值。</returns>
    </member>
    <member name="P:System.Net.Cookie.Name">
      <summary>获取或设置 <see cref="T:System.Net.Cookie" /> 的名称。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> 的名称。</returns>
      <exception cref="T:System.Net.CookieException">为 Set 操作指定的值为 null 或是空字符串 - 或 - 为 Set 操作指定的值包含非法字符。 不能在 <see cref="P:System.Net.Cookie.Name" /> 属性中使用下列字符：等号、分号、逗号、换行符 (\n)、回车符 (\r)、制表符 (\t) 和空格字符。 美元符号 ("$") 不能作为第一个字符。</exception>
    </member>
    <member name="P:System.Net.Cookie.Path">
      <summary>获取或设置此 <see cref="T:System.Net.Cookie" /> 适用于的 URI。</summary>
      <returns>此 <see cref="T:System.Net.Cookie" /> 适用于的 URI。</returns>
    </member>
    <member name="P:System.Net.Cookie.Port">
      <summary>获取或设置此 <see cref="T:System.Net.Cookie" /> 适用于的 TCP 端口的列表。</summary>
      <returns>此 <see cref="T:System.Net.Cookie" /> 适用于的 TCP 端口的列表。</returns>
      <exception cref="T:System.Net.CookieException">未能分析为 Set 操作指定的值或者该值没有用双引号括起来。</exception>
    </member>
    <member name="P:System.Net.Cookie.Secure">
      <summary>获取或设置 <see cref="T:System.Net.Cookie" /> 的安全级别。</summary>
      <returns>如果客户端仅在使用安全超文本传输协议 (HTTPS) 的后继请求中返回 Cookie，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Net.Cookie.TimeStamp">
      <summary>获取此 Cookie 作为 <see cref="T:System.DateTime" /> 发出的时间。</summary>
      <returns>此 Cookie 作为 <see cref="T:System.DateTime" /> 发出的时间。</returns>
    </member>
    <member name="M:System.Net.Cookie.ToString">
      <summary>重写 <see cref="M:System.Object.ToString" /> 方法。</summary>
      <returns>返回此 <see cref="T:System.Net.Cookie" /> 对象的一个字符串表示形式，该表示形式适合包含在 HTTP Cookie: 请求标头中。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Cookie.Value">
      <summary>获取或设置 <see cref="T:System.Net.Cookie" /> 的 <see cref="P:System.Net.Cookie.Value" />。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> 的 <see cref="P:System.Net.Cookie.Value" />。</returns>
    </member>
    <member name="P:System.Net.Cookie.Version">
      <summary>获取或设置此 Cookie 符合的 HTTP 状态维护版本。</summary>
      <returns>此 Cookie 符合的 HTTP 状态维护版本。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">不允许使用为版本指定的值。</exception>
    </member>
    <member name="T:System.Net.CookieCollection">
      <summary>为 <see cref="T:System.Net.Cookie" /> 类的实例提供集合容器。</summary>
    </member>
    <member name="M:System.Net.CookieCollection.#ctor">
      <summary>初始化 <see cref="T:System.Net.CookieCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
      <summary>将 <see cref="T:System.Net.Cookie" /> 添加到 <see cref="T:System.Net.CookieCollection" />。</summary>
      <param name="cookie">要添加到 <see cref="T:System.Net.CookieCollection" /> 中的 <see cref="T:System.Net.Cookie" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> 为 null。</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
      <summary>将 <see cref="T:System.Net.CookieCollection" /> 的内容添加到当前实例中。</summary>
      <param name="cookies">要添加的 <see cref="T:System.Net.CookieCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookies" /> 为 null。</exception>
    </member>
    <member name="P:System.Net.CookieCollection.Count">
      <summary>获取 <see cref="T:System.Net.CookieCollection" /> 中包含的 Cookie 的数目。</summary>
      <returns>
        <see cref="T:System.Net.CookieCollection" /> 中包含的 Cookie 的数目。</returns>
    </member>
    <member name="M:System.Net.CookieCollection.GetEnumerator">
      <summary>获取一个枚举数，该枚举数可以循环访问 <see cref="T:System.Net.CookieCollection" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 接口实现的实例，该接口可以循环访问 <see cref="T:System.Net.CookieCollection" />。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.String)">
      <summary>从 <see cref="T:System.Net.CookieCollection" /> 中获取具有特定名称的 <see cref="T:System.Net.Cookie" />。</summary>
      <returns>
        <see cref="T:System.Net.CookieCollection" /> 中具有特定名称的 <see cref="T:System.Net.Cookie" />。</returns>
      <param name="name">要查找的 <see cref="T:System.Net.Cookie" /> 的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
    </member>
    <member name="M:System.Net.CookieCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    </member>
    <member name="P:System.Net.CookieCollection.System#Collections#ICollection#IsSynchronized">
    </member>
    <member name="P:System.Net.CookieCollection.System#Collections#ICollection#SyncRoot">
    </member>
    <member name="T:System.Net.CookieContainer">
      <summary>为 <see cref="T:System.Net.CookieCollection" /> 对象的集合提供容器。</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor">
      <summary>初始化 <see cref="T:System.Net.CookieContainer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
      <summary>将 <see cref="T:System.Net.Cookie" /> 添加到特定 URI 的 <see cref="T:System.Net.CookieContainer" /> 中。</summary>
      <param name="uri">要添加到 <see cref="T:System.Net.CookieContainer" /> 的 <see cref="T:System.Net.Cookie" /> 的 URI。</param>
      <param name="cookie">要添加到 <see cref="T:System.Net.CookieContainer" /> 的 <see cref="T:System.Net.Cookie" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null 或 <paramref name="cookie" /> 为 null。</exception>
      <exception cref="T:System.Net.CookieException">
        <paramref name="cookie" /> 大于 <paramref name="maxCookieSize" />。 - 或 - <paramref name="cookie" /> 的域不是有效的 URI。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
      <summary>将 <see cref="T:System.Net.CookieCollection" /> 的内容添加到特定 URI 的 <see cref="T:System.Net.CookieContainer" /> 中。</summary>
      <param name="uri">要添加到 <see cref="T:System.Net.CookieContainer" /> 的 <see cref="T:System.Net.CookieCollection" /> 的 URI。</param>
      <param name="cookies">要添加到 <see cref="T:System.Net.CookieContainer" /> 的 <see cref="T:System.Net.CookieCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookies" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cookies" /> 中的某一个 Cookie 的域是 null。</exception>
      <exception cref="T:System.Net.CookieException">
        <paramref name="cookies" /> 中的某一个 Cookie 包含无效的域。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.CookieContainer.Capacity">
      <summary>获取和设置 <see cref="T:System.Net.CookieContainer" /> 可以包含的 <see cref="T:System.Net.Cookie" /> 实例数。</summary>
      <returns>
        <see cref="T:System.Net.CookieContainer" /> 可以包含的 <see cref="T:System.Net.Cookie" /> 实例数。 这是硬性限制，不能通过添加 <see cref="T:System.Net.Cookie" /> 超过此限制。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="Capacity" /> 小于或等于零，或者（值小于 <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> 且 <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> 不等于 <see cref="F:System.Int32.MaxValue" />）。</exception>
    </member>
    <member name="P:System.Net.CookieContainer.Count">
      <summary>获取 <see cref="T:System.Net.CookieContainer" /> 当前包含的 <see cref="T:System.Net.Cookie" /> 实例数。</summary>
      <returns>
        <see cref="T:System.Net.CookieContainer" /> 当前包含的 <see cref="T:System.Net.Cookie" /> 实例数。 这是所有域中 <see cref="T:System.Net.Cookie" /> 实例的总数。</returns>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLengthLimit">
      <summary>表示 <see cref="T:System.Net.CookieContainer" /> 可以包含的 <see cref="T:System.Net.Cookie" /> 实例的默认最大大小（以字节为单位）。 此字段为常数。</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLimit">
      <summary>表示 <see cref="T:System.Net.CookieContainer" /> 可以包含的 <see cref="T:System.Net.Cookie" /> 实例的默认最大数目。 此字段为常数。</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit">
      <summary>表示 <see cref="T:System.Net.CookieContainer" /> 可以在每个域引用的 <see cref="T:System.Net.Cookie" /> 实例的默认最大数目。 此字段为常数。</summary>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
      <summary>获取 HTTP Cookie 标头，该标头包含表示与特定 URI 关联的 <see cref="T:System.Net.Cookie" /> 实例的 HTTP Cookie。</summary>
      <returns>一个 HTTP Cookie 标头，其中包含表示由分号分隔的 <see cref="T:System.Net.Cookie" /> 实例的字符串。</returns>
      <param name="uri">所需的 <see cref="T:System.Net.Cookie" /> 实例的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookies(System.Uri)">
      <summary>获取包含与特定 URI 关联的 <see cref="T:System.Net.Cookie" /> 实例的 <see cref="T:System.Net.CookieCollection" />。</summary>
      <returns>包含与特定 URI 关联的 <see cref="T:System.Net.Cookie" /> 实例的 <see cref="T:System.Net.CookieCollection" />。</returns>
      <param name="uri">所需的 <see cref="T:System.Net.Cookie" /> 实例的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.CookieContainer.MaxCookieSize">
      <summary>表示 <see cref="T:System.Net.Cookie" /> 的最大允许长度。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> 的最大允许长度（以字节为单位）。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="MaxCookieSize" /> 小于或等于零。</exception>
    </member>
    <member name="P:System.Net.CookieContainer.PerDomainCapacity">
      <summary>获取和设置 <see cref="T:System.Net.CookieContainer" /> 可以在每个域包含的 <see cref="T:System.Net.Cookie" /> 实例数。</summary>
      <returns>每个域允许的 <see cref="T:System.Net.Cookie" /> 实例数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="PerDomainCapacity" /> 小于或等于零。 - 或 - （<paramref name="PerDomainCapacity" /> 大于允许的最大 Cookie 实例数 300 且不等于 <see cref="F:System.Int32.MaxValue" />）。</exception>
    </member>
    <member name="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
      <summary>将 HTTP Cookie 标头中的一个或多个 Cookie 的 <see cref="T:System.Net.Cookie" /> 实例添加到特定 URI 的 <see cref="T:System.Net.CookieContainer" /> 中。</summary>
      <param name="uri">
        <see cref="T:System.Net.CookieCollection" /> 的 URI。</param>
      <param name="cookieHeader">HTTP 服务器所返回的 HTTP Set-Cookie 标头的内容，其中的 <see cref="T:System.Net.Cookie" /> 实例用逗号分隔。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null。</exception>
      <exception cref="T:System.Net.CookieException">某一个 Cookie 是无效的。 - 或 - 当将某一个 Cookie 添加到容器中时发生错误。</exception>
    </member>
    <member name="T:System.Net.CookieException">
      <summary>向 <see cref="T:System.Net.CookieContainer" /> 添加 <see cref="T:System.Net.Cookie" /> 出错时引发的异常。</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor">
      <summary>初始化 <see cref="T:System.Net.CookieException" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Net.HttpRequestHeader">
      <summary>可以在客户端请求中指定的 HTTP 标头。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Accept">
      <summary>Accept 标头，指定响应可接受的 MIME 类型。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.AcceptCharset">
      <summary>Accept-Charset 标头，指定响应可接受的字符集。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.AcceptEncoding">
      <summary>Accept-Encoding 标头，指定响应可接受的内容编码。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.AcceptLanguage">
      <summary>Accept-Langauge 标头，指定响应首选的自然语言。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Allow">
      <summary>Allow 标头，指定支持的 HTTP 方法集。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Authorization">
      <summary>Authorization 标头，指定客户端为向服务器验证自身身份而出示的凭据。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.CacheControl">
      <summary>Cache-Control 标头，指定请求/响应链上所有缓存控制机制必须服从的指令。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Connection">
      <summary>Connection 标头，指定特定连接需要的选项。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentEncoding">
      <summary>Content-Encoding 标头，指定已应用于伴随正文数据的编码。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentLanguage">
      <summary>Content-Langauge 标头，指定伴随正文数据的自然语言。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentLength">
      <summary>Content-Length 标头，指定伴随正文数据的长度（以字节为单位）。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentLocation">
      <summary>Content-Location 标头，指定可从其中获得伴随正文的 URI。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentMd5">
      <summary>Content-MD5 标头，指定伴随正文数据的 MD5 摘要，用于提供端到端消息完整性检查。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentRange">
      <summary>Content-Range 标头，指定在完整正文中应用伴随部分正文数据的位置。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentType">
      <summary>Content-Type 标头，指定伴随正文数据的 MIME 类型。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Cookie">
      <summary>Cookie 标头，指定向服务器提供的 Cookie 数据。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Date">
      <summary>Date 标头，指定开始创建请求的日期和时间。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Expect">
      <summary>Expect 标头，指定客户端要求的特定服务器行为。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Expires">
      <summary>Expires 标头，指定日期和时间，在此之后伴随的正文数据应视为陈旧的。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.From">
      <summary>From 标头，指定控制请求用户代理的用户的 Internet 电子邮件地址。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Host">
      <summary>Host 标头，指定所请求资源的主机名和端口号。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfMatch">
      <summary>If-Match 标头，指定仅当客户端的指示资源的缓存副本是最新的时，才执行请求的操作。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfModifiedSince">
      <summary>If-Modified-Since 标头，指定仅当自指示的数据和时间之后修改了请求的资源时，才执行请求的操作。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfNoneMatch">
      <summary>If-None-Match 标头，指定仅当客户端的指示资源的缓存副本都不是最新的时，才执行请求的操作。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfRange">
      <summary>If-Range 标头，指定如果客户端的缓存副本是最新的，仅发送指定范围的请求资源。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfUnmodifiedSince">
      <summary>If-Unmodified-Since 标头，指定仅当自指示的日期和时间之后修改了请求的资源时，才执行请求的操作。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.KeepAlive">
      <summary>Keep-Alive 标头，指定用以维护持久性连接的参数。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.LastModified">
      <summary>Last-Modified 标头，指定上次修改伴随的正文数据的日期和时间。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.MaxForwards">
      <summary>Max-Forwards 标头，指定一个整数，表示此请求还可转发的次数。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Pragma">
      <summary>Pragma 标头，指定可应用于请求/响应链上的任何代理的特定于实现的指令。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ProxyAuthorization">
      <summary>Proxy-Authorization 标头，指定客户端为向代理验证自身身份而出示的凭据。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Range">
      <summary>Range 标头，指定代替整个响应返回的客户端请求的响应的子范围。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Referer">
      <summary>Referer 标头，指定从中获得请求 URI 的资源的 URI。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Te">
      <summary>TE 标头，指定响应可接受的传输编码方式。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Trailer">
      <summary>Trailer 标头，指定标头字段显示在以 chunked 传输编码方式编码的消息的尾部。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.TransferEncoding">
      <summary>Transfer-Encoding 标头，指定对消息正文应用的转换的类型（如果有）。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Translate">
      <summary>Translate 标头，与 WebDAV 功能一起使用的 HTTP 规范的 Microsoft 扩展。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Upgrade">
      <summary>Upgrade 标头，指定客户端支持的附加通信协议。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.UserAgent">
      <summary>User-Agent 标头，指定有关客户端代理的信息。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Via">
      <summary>Via 标头，指定网关和代理程序要使用的中间协议。</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Warning">
      <summary>Warning 标头，指定关于可能未在消息中反映的消息的状态或转换的附加信息。</summary>
    </member>
    <member name="T:System.Net.HttpStatusCode">
      <summary>包含为 HTTP 定义的状态代码的值。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Accepted">
      <summary>等效于 HTTP 状态 202。 <see cref="F:System.Net.HttpStatusCode.Accepted" /> 指示请求已被接受做进一步处理。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Ambiguous">
      <summary>等效于 HTTP 状态 300。 <see cref="F:System.Net.HttpStatusCode.Ambiguous" /> 指示请求的信息有多种表示形式。 默认操作是将此状态视为重定向，并遵循与此响应关联的 Location 标头的内容。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadGateway">
      <summary>等效于 HTTP 状态 502。 <see cref="F:System.Net.HttpStatusCode.BadGateway" /> 指示中间代理服务器从另一代理或原始服务器接收到错误响应。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadRequest">
      <summary>等效于 HTTP 状态 400。 <see cref="F:System.Net.HttpStatusCode.BadRequest" /> 指示服务器未能识别请求。 如果没有其他适用的错误，或者不知道准确的错误或错误没有自己的错误代码，则发送 <see cref="F:System.Net.HttpStatusCode.BadRequest" />。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Conflict">
      <summary>等效于 HTTP 状态 409。 <see cref="F:System.Net.HttpStatusCode.Conflict" /> 指示由于服务器上的冲突而未能执行请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Continue">
      <summary>等效于 HTTP 状态 100。 <see cref="F:System.Net.HttpStatusCode.Continue" /> 指示客户端可能继续其请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Created">
      <summary>等效于 HTTP 状态 201。 <see cref="F:System.Net.HttpStatusCode.Created" /> 指示请求导致在响应被发送前创建新资源。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ExpectationFailed">
      <summary>等效于 HTTP 状态 417。 <see cref="F:System.Net.HttpStatusCode.ExpectationFailed" /> 指示服务器未能符合 Expect 头中给定的预期值。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Forbidden">
      <summary>等效于 HTTP 状态 403。 <see cref="F:System.Net.HttpStatusCode.Forbidden" /> 指示服务器拒绝满足请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Found">
      <summary>等效于 HTTP 状态 302。 <see cref="F:System.Net.HttpStatusCode.Found" /> 指示请求的信息位于 Location 头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 头。 原始请求方法为 POST 时，重定向的请求将使用 GET 方法。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.GatewayTimeout">
      <summary>等效于 HTTP 状态 504。 <see cref="F:System.Net.HttpStatusCode.GatewayTimeout" /> 指示中间代理服务器在等待来自另一个代理或原始服务器的响应时已超时。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Gone">
      <summary>等效于 HTTP 状态 410。 <see cref="F:System.Net.HttpStatusCode.Gone" /> 指示请求的资源不再可用。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.HttpVersionNotSupported">
      <summary>等效于 HTTP 状态 505。 <see cref="F:System.Net.HttpStatusCode.HttpVersionNotSupported" /> 指示服务器不支持请求的 HTTP 版本。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InternalServerError">
      <summary>等效于 HTTP 状态 500。 <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> 指示服务器上发生了一般错误。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LengthRequired">
      <summary>等效于 HTTP 状态 411。 <see cref="F:System.Net.HttpStatusCode.LengthRequired" /> 指示缺少必需的 Content-length 头。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MethodNotAllowed">
      <summary>等效于 HTTP 状态 405。 <see cref="F:System.Net.HttpStatusCode.MethodNotAllowed" /> 指示请求的资源上不允许请求方法（POST 或 GET）。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Moved">
      <summary>等效于 HTTP 状态 301。 <see cref="F:System.Net.HttpStatusCode.Moved" /> 指示请求的信息已移到 Location 头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 头。 原始请求方法为 POST 时，重定向的请求将使用 GET 方法。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MovedPermanently">
      <summary>等效于 HTTP 状态 301。 <see cref="F:System.Net.HttpStatusCode.MovedPermanently" /> 指示请求的信息已移到 Location 头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 头。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultipleChoices">
      <summary>等效于 HTTP 状态 300。 <see cref="F:System.Net.HttpStatusCode.MultipleChoices" /> 指示请求的信息有多种表示形式。 默认操作是将此状态视为重定向，并遵循与此响应关联的 Location 标头的内容。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NoContent">
      <summary>等效于 HTTP 状态 204。 <see cref="F:System.Net.HttpStatusCode.NoContent" /> 指示已成功处理请求并且响应已被设定为无内容。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NonAuthoritativeInformation">
      <summary>等效于 HTTP 状态 203。 <see cref="F:System.Net.HttpStatusCode.NonAuthoritativeInformation" /> 指示返回的元信息来自缓存副本而不是原始服务器，因此可能不正确。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotAcceptable">
      <summary>等效于 HTTP 状态 406。 <see cref="F:System.Net.HttpStatusCode.NotAcceptable" /> 指示客户端已用 Accept 头指示将不接受资源的任何可用表示形式。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotFound">
      <summary>等效于 HTTP 状态 404。 <see cref="F:System.Net.HttpStatusCode.NotFound" /> 指示请求的资源不在服务器上。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotImplemented">
      <summary>等效于 HTTP 状态 501。 <see cref="F:System.Net.HttpStatusCode.NotImplemented" /> 指示服务器不支持请求的函数。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotModified">
      <summary>等效于 HTTP 状态 304。 <see cref="F:System.Net.HttpStatusCode.NotModified" /> 指示客户端的缓存副本是最新的。 未传输此资源的内容。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.OK">
      <summary>等效于 HTTP 状态 200。 <see cref="F:System.Net.HttpStatusCode.OK" /> 指示请求成功，且请求的信息包含在响应中。 这是最常接收的状态代码。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PartialContent">
      <summary>等效于 HTTP 状态 206。 <see cref="F:System.Net.HttpStatusCode.PartialContent" /> 指示响应是包括字节范围的 GET 请求所请求的部分响应。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PaymentRequired">
      <summary>等效于 HTTP 状态 402。 保留 <see cref="F:System.Net.HttpStatusCode.PaymentRequired" /> 以供将来使用。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionFailed">
      <summary>等效于 HTTP 状态 412。 <see cref="F:System.Net.HttpStatusCode.PreconditionFailed" /> 指示为此请求设置的条件失败，且无法执行此请求。 条件是用条件请求标头（如 If-Match、If-None-Match 或 If-Unmodified-Since）设置的。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired">
      <summary>等效于 HTTP 状态 407。 <see cref="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired" /> 指示请求的代理要求身份验证。 Proxy-authenticate 头包含如何执行身份验证的详细信息。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Redirect">
      <summary>等效于 HTTP 状态 302。 <see cref="F:System.Net.HttpStatusCode.Redirect" /> 指示请求的信息位于 Location 头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 头。 原始请求方法为 POST 时，重定向的请求将使用 GET 方法。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectKeepVerb">
      <summary>等效于 HTTP 状态 307。 <see cref="F:System.Net.HttpStatusCode.RedirectKeepVerb" /> 指示请求信息位于 Location 头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 头。 原始请求方法为 POST 时，重定向的请求还将使用 POST 方法。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectMethod">
      <summary>等效于 HTTP 状态 303。 作为 POST 的结果，<see cref="F:System.Net.HttpStatusCode.RedirectMethod" /> 将客户端自动重定向到 Location 头中指定的 URI。 用 GET 生成对 Location 标头所指定的资源的请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
      <summary>等效于 HTTP 状态 416。 <see cref="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable" /> 指示无法返回从资源请求的数据范围，因为范围的开头在资源的开头之前，或因为范围的结尾在资源的结尾之后。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestEntityTooLarge">
      <summary>等效于 HTTP 状态 413。 <see cref="F:System.Net.HttpStatusCode.RequestEntityTooLarge" /> 指示请求太大，服务器无法处理。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestTimeout">
      <summary>等效于 HTTP 状态 408。 <see cref="F:System.Net.HttpStatusCode.RequestTimeout" /> 指示客户端没有在服务器期望请求的时间内发送请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestUriTooLong">
      <summary>等效于 HTTP 状态 414。 <see cref="F:System.Net.HttpStatusCode.RequestUriTooLong" /> 指示 URI 太长。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ResetContent">
      <summary>等效于 HTTP 状态 205。 <see cref="F:System.Net.HttpStatusCode.ResetContent" /> 指示客户端应重置（或重新加载）当前资源。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SeeOther">
      <summary>等效于 HTTP 状态 303。 作为 POST 的结果，<see cref="F:System.Net.HttpStatusCode.SeeOther" /> 将客户端自动重定向到 Location 头中指定的 URI。 用 GET 生成对 Location 标头所指定的资源的请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ServiceUnavailable">
      <summary>等效于 HTTP 状态 503。 <see cref="F:System.Net.HttpStatusCode.ServiceUnavailable" /> 指示服务器暂时不可用，通常是由于过多加载或维护。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SwitchingProtocols">
      <summary>等效于 HTTP 状态 101。 <see cref="F:System.Net.HttpStatusCode.SwitchingProtocols" /> 指示正在更改协议版本或协议。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TemporaryRedirect">
      <summary>等效于 HTTP 状态 307。 <see cref="F:System.Net.HttpStatusCode.TemporaryRedirect" /> 指示请求信息位于 Location 头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 头。 原始请求方法为 POST 时，重定向的请求还将使用 POST 方法。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unauthorized">
      <summary>等效于 HTTP 状态 401。 <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> 指示请求的资源要求身份验证。 WWW-Authenticate 头包含如何执行身份验证的详细信息。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnsupportedMediaType">
      <summary>等效于 HTTP 状态 415。 <see cref="F:System.Net.HttpStatusCode.UnsupportedMediaType" /> 指示请求是不支持的类型。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unused">
      <summary>等效于 HTTP 状态 306。 <see cref="F:System.Net.HttpStatusCode.Unused" /> 是未完全指定的 HTTP/1.1 规范的建议扩展。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UseProxy">
      <summary>等效于 HTTP 状态 305。 <see cref="F:System.Net.HttpStatusCode.UseProxy" /> 指示请求应使用位于 Location 头中指定的 URI 的代理服务器。</summary>
    </member>
    <member name="T:System.Net.HttpWebRequest">
      <summary>提供 <see cref="T:System.Net.WebRequest" /> 类的 HTTP 特定的实现。</summary>
    </member>
    <member name="M:System.Net.HttpWebRequest.Abort">
      <summary>取消对 Internet 资源的请求。</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.HttpWebRequest.Accept">
      <summary>获取或设置 Accept HTTP 标头的值。</summary>
      <returns>Accept HTTP 标头的值。 默认值为 null。</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>开始对用来写入数据的 <see cref="T:System.IO.Stream" /> 对象的异步请求。</summary>
      <returns>引用该异步请求的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">此请求的状态对象。</param>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" /> 属性为 GET 或 HEAD。 - 或 - <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> 为 true，<see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> 为 false，<see cref="P:System.Net.HttpWebRequest.ContentLength" /> 为 -1，<see cref="P:System.Net.HttpWebRequest.SendChunked" /> 为 false，<see cref="P:System.Net.HttpWebRequest.Method" /> 为 POST 或 PUT。</exception>
      <exception cref="T:System.InvalidOperationException">流正由上一个 <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> 调用使用。 - 或 - <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> 被设置为一个值，并且 <see cref="P:System.Net.HttpWebRequest.SendChunked" /> 为 false。 - 或 - 线程池中的线程即将用完。</exception>
      <exception cref="T:System.NotSupportedException">请求缓存验证程序指示对此请求的响应可从缓存中提供；但是写入数据的请求不得使用缓存。 如果您正在使用错误实现的自定义缓存验证程序，则会发生此异常。</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> 以前被调用过。</exception>
      <exception cref="T:System.ObjectDisposedException">在 .NET Compact Framework 应用程序中，未正确获得和关闭一个内容长度为零的请求流。 有关处理内容长度为零的请求的更多信息，请参见 Network Programming in the .NET Compact Framework。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.DnsPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>开始对 Internet 资源的异步请求。</summary>
      <returns>引用对响应的异步请求的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托</param>
      <param name="state">此请求的状态对象。</param>
      <exception cref="T:System.InvalidOperationException">流正由上一个 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 调用使用 - 或 - <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> 被设置为一个值，并且 <see cref="P:System.Net.HttpWebRequest.SendChunked" /> 为 false。 - 或 - 线程池中的线程即将用完。</exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" /> 为 GET 或 HEAD，且 <see cref="P:System.Net.HttpWebRequest.ContentLength" /> 大于零或 <see cref="P:System.Net.HttpWebRequest.SendChunked" /> 为 true。 - 或 - <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> 为 true，<see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> 为 false，同时 <see cref="P:System.Net.HttpWebRequest.ContentLength" /> 为 -1，<see cref="P:System.Net.HttpWebRequest.SendChunked" /> 为 false，或者 <see cref="P:System.Net.HttpWebRequest.Method" /> 为 POST 或 PUT。 - 或 - 该 <see cref="T:System.Net.HttpWebRequest" /> 具有实体，但不用调用 <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> 方法调用 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 方法。 - 或 - <see cref="P:System.Net.HttpWebRequest.ContentLength" /> 大于零，但应用程序不会写入所有承诺的数据。</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> 以前被调用过。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.DnsPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContentType">
      <summary>获取或设置 Content-type HTTP 标头的值。</summary>
      <returns>Content-type HTTP 标头的值。 默认值为 null。</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.CookieContainer">
      <summary>获取或设置与此请求关联的 cookie。</summary>
      <returns>包含与此请求关联的 Cookie 的 <see cref="T:System.Net.CookieContainer" />。</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>结束对用于写入数据的 <see cref="T:System.IO.Stream" /> 对象的异步请求。</summary>
      <returns>用来写入请求数据的 <see cref="T:System.IO.Stream" />。</returns>
      <param name="asyncResult">流的待定的请求。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 null。</exception>
      <exception cref="T:System.IO.IOException">请求未完成，没有可用的流。</exception>
      <exception cref="T:System.ArgumentException">当前实例没有从 <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> 调用返回 <paramref name="asyncResult" />。</exception>
      <exception cref="T:System.InvalidOperationException">以前使用 <paramref name="asyncResult" /> 调用过此方法。</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> 以前被调用过。 - 或 - 处理请求时发生错误。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>结束对 Internet 资源的异步请求。</summary>
      <returns>包含来自 Internet 资源的响应的 <see cref="T:System.Net.WebResponse" />。</returns>
      <param name="asyncResult">挂起的对响应的请求。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">以前使用 <paramref name="asyncResult" /> 调用过此方法。 - 或 - <see cref="P:System.Net.HttpWebRequest.ContentLength" /> 属性大于 0，但是数据尚未写入请求流。</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> 以前被调用过。 - 或 - 处理请求时发生错误。</exception>
      <exception cref="T:System.ArgumentException">当前实例没有从 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 调用返回 <paramref name="asyncResult" />。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.HttpWebRequest.HaveResponse">
      <summary>获取一个值，该值指示是否收到了来自 Internet 资源的响应。</summary>
      <returns>如果接收到了响应，则为 true，否则为 false。</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Headers">
      <summary>指定构成 HTTP 标头的名称/值对的集合。</summary>
      <returns>包含构成 HTTP 请求标头的名称/值对的 <see cref="T:System.Net.WebHeaderCollection" />。</returns>
      <exception cref="T:System.InvalidOperationException">已通过调用 <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />、<see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />、<see cref="M:System.Net.HttpWebRequest.GetResponse" /> 或 <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> 方法启动了该请求。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.HttpWebRequest.Method">
      <summary>获取或设置请求的方法。</summary>
      <returns>用于联系 Internet 资源的请求方法。 默认值为 GET。</returns>
      <exception cref="T:System.ArgumentException">未提供任何方法。 - 或 - 方法字符串包含无效字符。</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.RequestUri">
      <summary>获取请求的原始统一资源标识符 (URI)。</summary>
      <returns>一个 <see cref="T:System.Uri" />，其中包含传递给 <see cref="M:System.Net.WebRequest.Create(System.String)" /> 方法的 Internet 资源的 URI。</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.SupportsCookieContainer">
      <summary>获取一个值，该值指示请求是否为 <see cref="T:System.Net.CookieContainer" /> 提供支持。</summary>
      <returns>返回 <see cref="T:System.Boolean" />。 如果支持 <see cref="T:System.Net.CookieContainer" />，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Net.HttpWebResponse">
      <summary>提供 <see cref="T:System.Net.WebResponse" /> 类的 HTTP 特定的实现。</summary>
    </member>
    <member name="P:System.Net.HttpWebResponse.Cookies">
      <summary>获取或设置与此响应关联的 Cookie。</summary>
      <returns>
        <see cref="T:System.Net.CookieCollection" />，包含与此响应关联的 Cookie。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放当前的实例。</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Method">
      <summary>获取用于返回响应的方法。</summary>
      <returns>一个字符串，包含用于返回响应的 HTTP 方法。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放当前的实例。</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusCode">
      <summary>获取响应的状态。</summary>
      <returns>
        <see cref="T:System.Net.HttpStatusCode" /> 值之一。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放当前的实例。</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusDescription">
      <summary>获取与响应一起返回的状态说明。</summary>
      <returns>一个字符串，描述响应的状态。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放当前的实例。</exception>
    </member>
    <member name="T:System.Net.ICredentials">
      <summary>提供用于为 Web 客户端身份验证检索凭据的基身份验证接口。</summary>
    </member>
    <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <summary>返回与指定的 URI 关联的 <see cref="T:System.Net.NetworkCredential" /> 对象，以及身份验证类型。</summary>
      <returns>与指定的 URI 和身份验证类型关联的 <see cref="T:System.Net.NetworkCredential" />；如果没有可用的凭据，则为 null。</returns>
      <param name="uri">客户端为其提供身份验证的 <see cref="T:System.Uri" />。</param>
      <param name="authType">
        <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> 属性中定义的身份验证类型。</param>
    </member>
    <member name="T:System.Net.IWebRequestCreate">
      <summary>提供用于创建 <see cref="T:System.Net.WebRequest" /> 实例的基接口。</summary>
    </member>
    <member name="M:System.Net.IWebRequestCreate.Create(System.Uri)">
      <summary>创建一个 <see cref="T:System.Net.WebRequest" /> 实例。</summary>
      <returns>一个 <see cref="T:System.Net.WebRequest" /> 实例。</returns>
      <param name="uri">Web 资源的统一资源标识符 (URI)。</param>
      <exception cref="T:System.NotSupportedException">此 <see cref="T:System.Net.IWebRequestCreate" /> 实例不支持在 <paramref name="uri" /> 中指定的请求方案。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null。</exception>
      <exception cref="T:System.UriFormatException">在 .NET for Windows Store 应用程序 或 可移植类库 中，请改为捕获基类异常 <see cref="T:System.FormatException" />。 <paramref name="uri" /> 中指定的 URI 不是有效的 URI。</exception>
    </member>
    <member name="T:System.Net.NetworkCredential">
      <summary>为基于密码的身份验证方案（如基本、简要、NTLM 和 Kerberos 身份验证）提供凭据。</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor">
      <summary>初始化 <see cref="T:System.Net.NetworkCredential" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <summary>用指定的用户名和密码初始化 <see cref="T:System.Net.NetworkCredential" /> 类的新实例。</summary>
      <param name="userName">与凭据关联的用户名。</param>
      <param name="password">与凭据关联的用户名的密码。</param>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <summary>用指定的用户名、密码和域初始化 <see cref="T:System.Net.NetworkCredential" /> 类的新实例。</summary>
      <param name="userName">与凭据关联的用户名。</param>
      <param name="password">与凭据关联的用户名的密码。</param>
      <param name="domain">与这些凭据关联的域。</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Domain">
      <summary>获取或设置验证凭据的域名或计算机名。</summary>
      <returns>与凭据关联的域名。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <summary>针对指定的统一资源标识符 (URI) 和身份验证类型返回 <see cref="T:System.Net.NetworkCredential" /> 类的实例。</summary>
      <returns>
        <see cref="T:System.Net.NetworkCredential" /> 对象。</returns>
      <param name="uri">客户端为其提供身份验证的 URI。</param>
      <param name="authType">
        <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> 属性中定义的所请求的身份验证类型。</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Password">
      <summary>获取或设置与凭据关联的用户名的密码。</summary>
      <returns>与该凭据关联的密码。 如果已通过设置为 null 的 <paramref name="password" /> 参数初始化此 <see cref="T:System.Net.NetworkCredential" /> 实例，则 <see cref="P:System.Net.NetworkCredential.Password" /> 属性将返回空字符串。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.NetworkCredential.UserName">
      <summary>获取或设置与凭据关联的用户名。</summary>
      <returns>与凭据关联的用户名。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.ProtocolViolationException">
      <summary>使用网络协议期间出错时引发的异常。</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor">
      <summary>初始化 <see cref="T:System.Net.ProtocolViolationException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.String)">
      <summary>用指定消息初始化 <see cref="T:System.Net.ProtocolViolationException" /> 类的新实例。</summary>
      <param name="message">错误消息字符串。</param>
    </member>
    <member name="T:System.Net.WebException">
      <summary>通过可插接协议访问网络期间出错时引发的异常。</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor">
      <summary>初始化 <see cref="T:System.Net.WebException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String)">
      <summary>使用指定的错误消息初始化 <see cref="T:System.Net.WebException" /> 类的新实例。</summary>
      <param name="message">错误消息的文本。</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception)">
      <summary>用指定的错误信息和嵌套异常初始化 <see cref="T:System.Net.WebException" /> 类的新实例。</summary>
      <param name="message">错误消息的文本。</param>
      <param name="innerException">嵌套异常。</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)">
      <summary>用指定的错误信息、嵌套异常、状态和响应初始化 <see cref="T:System.Net.WebException" /> 类的新实例。</summary>
      <param name="message">错误消息的文本。</param>
      <param name="innerException">嵌套异常。</param>
      <param name="status">
        <see cref="T:System.Net.WebExceptionStatus" /> 值之一。</param>
      <param name="response">包含来自远程主机的响应的 <see cref="T:System.Net.WebResponse" /> 实例。</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)">
      <summary>用指定的错误信息和状态初始化 <see cref="T:System.Net.WebException" /> 类的新实例。</summary>
      <param name="message">错误消息的文本。</param>
      <param name="status">
        <see cref="T:System.Net.WebExceptionStatus" /> 值之一。</param>
    </member>
    <member name="P:System.Net.WebException.Response">
      <summary>获取远程主机返回的响应。</summary>
      <returns>如果可从 Internet 资源获得响应，则为包含来自 Internet 资源的错误响应的 <see cref="T:System.Net.WebResponse" /> 实例；否则为 null。</returns>
    </member>
    <member name="P:System.Net.WebException.Status">
      <summary>获取响应的状态。</summary>
      <returns>
        <see cref="T:System.Net.WebExceptionStatus" /> 值之一。</returns>
    </member>
    <member name="T:System.Net.WebExceptionStatus">
      <summary>为 <see cref="T:System.Net.WebException" /> 类定义状态代码。</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectFailure">
      <summary>未能在传输级联系到远程服务点。</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.MessageLengthLimitExceeded">
      <summary>当发送请求或从服务器接收响应时，会接收到超出指定限制的消息。</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Pending">
      <summary>内部异步请求挂起。</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestCanceled">
      <summary>请求被取消，<see cref="M:System.Net.WebRequest.Abort" /> 方法被调用，或者发生了不可分类的错误。 这是 <see cref="P:System.Net.WebException.Status" /> 的默认值。</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SendFailure">
      <summary>未能将完整请求发送到远程服务器。</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Success">
      <summary>未遇到任何错误。</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.UnknownError">
      <summary>发生未知类型的异常。</summary>
    </member>
    <member name="T:System.Net.WebHeaderCollection">
      <summary>包含与请求或响应关联的协议标头。</summary>
    </member>
    <member name="M:System.Net.WebHeaderCollection.#ctor">
      <summary>初始化 <see cref="T:System.Net.WebHeaderCollection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Net.WebHeaderCollection.AllKeys">
      <summary>获取集合中的所有标头名（关键字）。</summary>
      <returns>包含 Web 请求中所有标头名称的 <see cref="T:System.String" /> 类型的数组。</returns>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Count">
      <summary>获取集合中的标头数。</summary>
      <returns>
        <see cref="T:System.Int32" />，它指示请求中的标头数。</returns>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Item(System.Net.HttpRequestHeader)">
      <summary>获取或设置指定的请求标头。</summary>
      <returns>包含指定标头值的 <see cref="T:System.String" /> 实例。</returns>
      <param name="header">请求标头值。</param>
      <exception cref="T:System.InvalidOperationException">此 <see cref="T:System.Net.WebHeaderCollection" /> 实例不允许使用 <see cref="T:System.Net.HttpRequestHeader" /> 的实例。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Item(System.String)">
    </member>
    <member name="M:System.Net.WebHeaderCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回可循环访问 <see cref="T:System.Net.WebHeaderCollection" /> 实例的枚举数。</summary>
      <returns>返回 <see cref="T:System.Collections.IEnumerator" />。 可循环访问 <see cref="T:System.Net.WebHeaderCollection" /> 实例的枚举数。</returns>
    </member>
    <member name="T:System.Net.WebRequest">
      <summary>对统一资源标识符 (URI) 发出请求。 这是一个 abstract 类。</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor">
      <summary>初始化 <see cref="T:System.Net.WebRequest" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.WebRequest.Abort">
      <summary>中止请求</summary>
      <exception cref="T:System.NotImplementedException">当未在子类中重写该方法时，试图访问该方法。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>当在子类中重写时，提供 <see cref="M:System.Net.WebRequest.GetRequestStream" /> 方法的异步版本。</summary>
      <returns>引用该异步请求的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">包含此异步请求的状态信息的对象。</param>
      <exception cref="T:System.NotImplementedException">当未在子类中重写该方法时，试图访问该方法。</exception>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>当在子类中被重写时，开始对 Internet 资源的异步请求。</summary>
      <returns>引用该异步请求的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 委托。</param>
      <param name="state">包含此异步请求的状态信息的对象。</param>
      <exception cref="T:System.NotImplementedException">当未在子类中重写该方法时，试图访问该方法。</exception>
    </member>
    <member name="P:System.Net.WebRequest.ContentType">
      <summary>当在子类中被重写时，获取或设置所发送的请求数据的内容类型。</summary>
      <returns>请求数据的内容类型。</returns>
      <exception cref="T:System.NotImplementedException">当未在子类中重写该属性时，试图获取或设置该属性。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.String)">
      <summary>为指定的 URI 方案初始化新的 <see cref="T:System.Net.WebRequest" /> 实例。</summary>
      <returns>特定 URI 方案的 <see cref="T:System.Net.WebRequest" /> 子代。</returns>
      <param name="requestUriString">标识 Internet 资源的 URI。</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="requestUriString" /> 中指定的请求方案尚未注册。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" /> 为 null。</exception>
      <exception cref="T:System.Security.SecurityException">调用方没有连接到请求的 URI 或请求重定向到的 URI 上的权限。</exception>
      <exception cref="T:System.UriFormatException">在 .NET for Windows Store 应用程序 或 可移植类库 中，请改为捕获基类异常 <see cref="T:System.FormatException" />。 <paramref name="requestUriString" /> 中指定的 URI 不是有效的 URI。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.Uri)">
      <summary>为指定的 URI 方案初始化新的 <see cref="T:System.Net.WebRequest" /> 实例。</summary>
      <returns>指定的 URI 方案的 <see cref="T:System.Net.WebRequest" /> 子代。</returns>
      <param name="requestUri">包含请求的资源的 URI 的 <see cref="T:System.Uri" />。</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="requestUri" /> 中指定的请求方案未注册。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 为 null。</exception>
      <exception cref="T:System.Security.SecurityException">调用方没有连接到请求的 URI 或请求重定向到的 URI 上的权限。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.String)">
      <summary>为指定的 URI 字符串初始化新的 <see cref="T:System.Net.HttpWebRequest" /> 实例。</summary>
      <returns>返回 <see cref="T:System.Net.HttpWebRequest" />。 特定 URI 字符串的一个 <see cref="T:System.Net.HttpWebRequest" /> 实例。</returns>
      <param name="requestUriString">标识 Internet 资源的 URI 字符串。</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="requestUriString" /> 中指定的请求方案为 http 或 https 方案。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" /> 为 null。</exception>
      <exception cref="T:System.Security.SecurityException">调用方没有连接到请求的 URI 或请求重定向到的 URI 上的权限。</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="requestUriString" /> 中指定的 URI 不是有效的 URI。</exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.Uri)">
      <summary>为指定的 URI 初始化新的 <see cref="T:System.Net.HttpWebRequest" /> 实例。</summary>
      <returns>返回 <see cref="T:System.Net.HttpWebRequest" />。 特定 URI 字符串的一个 <see cref="T:System.Net.HttpWebRequest" /> 实例。</returns>
      <param name="requestUri">标识 Internet 资源的 URI。</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="requestUri" /> 中指定的请求方案为 http 或 https 方案。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> 为 null。</exception>
      <exception cref="T:System.Security.SecurityException">调用方没有连接到请求的 URI 或请求重定向到的 URI 上的权限。</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="requestUri" /> 中指定的 URI 不是有效的 URI。</exception>
    </member>
    <member name="P:System.Net.WebRequest.Credentials">
      <summary>当在子类中被重写时，获取或设置用于对 Internet 资源请求进行身份验证的网络凭据。</summary>
      <returns>包含与该请求关联的身份验证凭据的 <see cref="T:System.Net.ICredentials" />。 默认值为 null。</returns>
      <exception cref="T:System.NotImplementedException">当未在子类中重写该属性时，试图获取或设置该属性。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>当在子类中重写时，返回用于将数据写入 Internet 资源的 <see cref="T:System.IO.Stream" />。</summary>
      <returns>将数据写入的 <see cref="T:System.IO.Stream" />。</returns>
      <param name="asyncResult">引用对流的挂起请求的 <see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.NotImplementedException">当未在子类中重写该方法时，试图访问该方法。</exception>
    </member>
    <member name="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>当在子类中重写时，返回 <see cref="T:System.Net.WebResponse" />。</summary>
      <returns>包含对 Internet 请求的响应的 <see cref="T:System.Net.WebResponse" />。</returns>
      <param name="asyncResult">引用对响应的挂起请求的 <see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.NotImplementedException">当未在子类中重写该方法时，试图访问该方法。</exception>
    </member>
    <member name="P:System.Net.WebRequest.Headers">
      <summary>当在子类中被重写时，获取或设置与请求关联的标头名称/值对的集合。</summary>
      <returns>包含与此请求关联的标题名/值对的 <see cref="T:System.Net.WebHeaderCollection" />。</returns>
      <exception cref="T:System.NotImplementedException">当未在子类中重写该属性时，试图获取或设置该属性。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebRequest.Method">
      <summary>当在子类中被重写时，获取或设置要在此请求中使用的协议方法。</summary>
      <returns>在此请求中使用的协议方法。</returns>
      <exception cref="T:System.NotImplementedException">在子类中未重写该属性的情况下，试图获取或设置该属性。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
      <summary>为指定的 URI 注册 <see cref="T:System.Net.WebRequest" /> 子代。</summary>
      <returns>如果注册成功，则为 true；否则为 false。</returns>
      <param name="prefix">
        <see cref="T:System.Net.WebRequest" /> 子代为其提供服务的完整 URI 或 URI 前缀。</param>
      <param name="creator">创建方法，<see cref="T:System.Net.WebRequest" /> 调用它以创建 <see cref="T:System.Net.WebRequest" /> 子代。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> 为 null - 或 - <paramref name="creator" /> 为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebRequest.RequestUri">
      <summary>当在子类中被重写时，获取与请求关联的 Internet 资源的 URI。</summary>
      <returns>表示与请求关联的资源的 <see cref="T:System.Uri" />。</returns>
      <exception cref="T:System.NotImplementedException">当未在子类中重写该属性时，试图获取或设置该属性。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebRequest.UseDefaultCredentials">
      <summary>当在子代类中重写时，获取或设置一个 <see cref="T:System.Boolean" /> 值，该值控制 <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 是否随请求一起发送。</summary>
      <returns>如果使用默认凭据，则为 true；否则为 false。 默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">您尝试在该请求发送之后设置此属性。</exception>
      <exception cref="T:System.NotImplementedException">当未在子类中重写该属性时，尝试访问该属性。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.WebResponse">
      <summary>提供来自统一资源标识符 (URI) 的响应。 这是一个 abstract 类。</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor">
      <summary>初始化 <see cref="T:System.Net.WebResponse" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Net.WebResponse.ContentLength">
      <summary>当在子类中重写时，获取或设置接收的数据的内容长度。</summary>
      <returns>从 Internet 资源返回的字节数。</returns>
      <exception cref="T:System.NotSupportedException">当未在子类中重写该属性时，试图获取或设置该属性。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebResponse.ContentType">
      <summary>当在派生类中重写时，获取或设置接收的数据的内容类型。</summary>
      <returns>包含响应的内容类型的字符串。</returns>
      <exception cref="T:System.NotSupportedException">当未在子类中重写该属性时，试图获取或设置该属性。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.WebResponse.Dispose">
      <summary>释放 <see cref="T:System.Net.WebResponse" /> 对象使用的非托管资源。</summary>
    </member>
    <member name="M:System.Net.WebResponse.GetResponseStream">
      <summary>当在子类中重写时，从 Internet 资源返回数据流。</summary>
      <returns>用于从 Internet 资源中读取数据的 <see cref="T:System.IO.Stream" /> 类的实例。</returns>
      <exception cref="T:System.NotSupportedException">当未在子类中重写该方法时，试图访问该方法。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebResponse.Headers">
      <summary>当在派生类中重写时，获取与此请求关联的标头名称/值对的集合。</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> 类的实例，包含与此响应关联的标头值。</returns>
      <exception cref="T:System.NotSupportedException">当未在子类中重写该属性时，试图获取或设置该属性。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebResponse.ResponseUri">
      <summary>当在派生类中重写时，获取实际响应此请求的 Internet 资源的 URI。</summary>
      <returns>
        <see cref="T:System.Uri" /> 类的实例，包含实际响应此请求的 Internet 资源的 URI。</returns>
      <exception cref="T:System.NotSupportedException">当未在子类中重写该属性时，试图获取或设置该属性。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.WebResponse.SupportsHeaders">
      <summary>获取指示是否支持标题的值。</summary>
      <returns>返回 <see cref="T:System.Boolean" />。 如果标题受支持，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkAddressChangedEventHandler">
      <summary>引用在网络接口地址更改时调用的一个或多个方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkChange">
      <summary>使应用程序可以在网络接口（也称为网卡或网络适配器）的 Internet 协议 (IP) 地址更改时收到通知。</summary>
    </member>
    <member name="E:System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged">
      <summary>在网络接口的 IP 地址更改时发生。</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInterface">
      <summary>提供网络接口的配置和统计信息。</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable">
      <summary>指示是否有任何可用的网络连接。</summary>
      <returns>如果网络连接可用，则为 true；否则为 false。</returns>
    </member>
  </members>
</doc>