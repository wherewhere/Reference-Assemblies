<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Text.Encoding.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.Text.UnicodeEncoding">
      <summary>表示 Unicode 字符的 UTF-16 编码。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor">
      <summary>初始化 <see cref="T:System.Text.UnicodeEncoding" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean)">
      <summary>初始化 <see cref="T:System.Text.UnicodeEncoding" /> 类的新实例。 参数指定是否使用 Big-Endian 字节顺序以及是否提供 Unicode 字节顺序标记。</summary>
      <param name="bigEndian">如果为 true，则使用 big-endian 字节顺序（从最高有效字节开始）；如果为 false，则使用 little-endian 字节顺序（从最低有效字节开始）。</param>
      <param name="byteOrderMark">如果为 true，则指定提供 Unicode 字节顺序标记；否则为 false。</param>
    </member>
    <member name="M:System.Text.UnicodeEncoding.#ctor(System.Boolean,System.Boolean,System.Boolean)">
      <summary>初始化 <see cref="T:System.Text.UnicodeEncoding" /> 类的新实例。 参数指定是否使用 Big-Endian 字节顺序，是否提供 Unicode 字节顺序标记，以及当检测到无效编码时是否引发异常。</summary>
      <param name="bigEndian">如果为 true，则使用 Big-Endian 字节顺序（从最高有效字节开始）；如果为 false，则使用 Little-Endian 字节顺序（从最低有效字节开始）。</param>
      <param name="byteOrderMark">如果为 true，则指定提供 Unicode 字节顺序标记；否则为 false。</param>
      <param name="throwOnInvalidBytes">如果为 true，则指定在检测到无效的编码时应当引发异常；否则为 false。</param>
    </member>
    <member name="M:System.Text.UnicodeEncoding.Equals(System.Object)">
      <summary>确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Text.UnicodeEncoding" /> 对象。</summary>
      <returns>如果 <paramref name="value" /> 是 <see cref="T:System.Text.UnicodeEncoding" /> 的一个实例并且等于当前对象，则为 true；否则，为 false。</returns>
      <param name="value">将与当前对象进行比较的 <see cref="T:System.Object" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary>计算对指定字符数组中的一组字符进行编码时产生的字节数。</summary>
      <returns>对指定字符进行编码后生成的字节数。</returns>
      <param name="chars">包含要编码的字符集的字符数组。</param>
      <param name="index">第一个要编码的字符的索引。</param>
      <param name="count">要编码的字符的数目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> 为 null (Nothing)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 或 <paramref name="count" /> 小于零。 - 或 - <paramref name="index" /> 和 <paramref name="count" /> 不表示 <paramref name="chars" /> 中的有效范围。 - 或 - 产生的字节数超过了作为一个整数返回时允许的最大字节数。</exception>
      <exception cref="T:System.ArgumentException">启用了错误检测，检测到 <paramref name="chars" /> 包含无效字符序列。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得更详细的解释） －和－ 将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetByteCount(System.String)">
      <summary>计算对指定 <see cref="T:System.String" /> 中的字符进行编码时所产生的字节数。</summary>
      <returns>对指定字符进行编码后生成的字节数。</returns>
      <param name="s">包含要编码的字符集的 <see cref="T:System.String" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> 为 null (Nothing)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">产生的字节数超过了作为一个整数返回时允许的最大字节数。</exception>
      <exception cref="T:System.ArgumentException">启用了错误检测，检测到 <paramref name="s" /> 包含无效字符序列。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得更详细的解释） －和－ 将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>将指定字符数组中的一组字符编码到指定的字节数组中。</summary>
      <returns>写入 <paramref name="bytes" /> 的实际字节数。</returns>
      <param name="chars">包含要编码的字符集的字符数组。</param>
      <param name="charIndex">第一个要编码的字符的索引。</param>
      <param name="charCount">要编码的字符的数目。</param>
      <param name="bytes">要包含所产生的字节序列的字节数组。</param>
      <param name="byteIndex">开始写入所产生的字节序列的索引位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> 为 null (Nothing)。 - 或 - <paramref name="bytes" /> 为 null (Nothing)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小于零。 - 或 - <paramref name="charIndex" /> 和 <paramref name="charCount" /> 不表示 <paramref name="chars" /> 中的有效范围。 - 或 - <paramref name="byteIndex" /> 不是 <paramref name="bytes" /> 中的有效索引。</exception>
      <exception cref="T:System.ArgumentException">启用了错误检测，检测到 <paramref name="chars" /> 包含无效字符序列。 - 或 - <paramref name="bytes" /> 中从 <paramref name="byteIndex" /> 到数组结尾没有足够的容量来容纳所产生的字节。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得更详细的解释） －和－ 将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>将指定 <see cref="T:System.String" /> 中的一组字符编码到指定的字节数组中。</summary>
      <returns>写入 <paramref name="bytes" /> 的实际字节数。</returns>
      <param name="s">包含要编码的字符集的 <see cref="T:System.String" />。</param>
      <param name="charIndex">第一个要编码的字符的索引。</param>
      <param name="charCount">要编码的字符的数目。</param>
      <param name="bytes">要包含所产生的字节序列的字节数组。</param>
      <param name="byteIndex">开始写入所产生的字节序列的索引位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> 为 null (Nothing)。 - 或 - <paramref name="bytes" /> 为 null (Nothing)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小于零。 - 或 - <paramref name="charIndex" /> 和 <paramref name="charCount" /> 不表示 <paramref name="chars" /> 中的有效范围。 - 或 - <paramref name="byteIndex" /> 不是 <paramref name="bytes" /> 中的有效索引。</exception>
      <exception cref="T:System.ArgumentException">启用了错误检测，检测到 <paramref name="s" /> 包含无效字符序列。 - 或 - <paramref name="bytes" /> 中从 <paramref name="byteIndex" /> 到数组结尾没有足够的容量来容纳所产生的字节。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得更详细的解释） －和－ 将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary>计算对指定字节数组中的一个字节序列进行解码所产生的字符数。</summary>
      <returns>对指定字节序列进行解码所产生的字符数。</returns>
      <param name="bytes">包含要解码的字节序列的字节数组。</param>
      <param name="index">第一个要解码的字节的索引。</param>
      <param name="count">要解码的字节数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> 为 null (Nothing)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 或 <paramref name="count" /> 小于零。 - 或 - <paramref name="index" /> 和 <paramref name="count" /> 不表示 <paramref name="bytes" /> 中的有效范围。 - 或 - 产生的字节数超过了作为一个整数返回时允许的最大字节数。</exception>
      <exception cref="T:System.ArgumentException">启用了错误检测，检测到 <paramref name="bytes" /> 包含无效字节序列。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得更详细的解释） －和－ 将 <see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary>将指定字节数组中的一个字节序列解码为指定的字符数组。</summary>
      <returns>写入 <paramref name="chars" /> 的实际字符数。</returns>
      <param name="bytes">包含要解码的字节序列的字节数组。</param>
      <param name="byteIndex">第一个要解码的字节的索引。</param>
      <param name="byteCount">要解码的字节数。</param>
      <param name="chars">要用于包含所产生的字符集的字符数组。</param>
      <param name="charIndex">开始写入所产生的字符集的索引位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> 为 null (Nothing)。 - 或 - <paramref name="chars" /> 为 null (Nothing)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="byteIndex" />、<paramref name="byteCount" /> 或 <paramref name="charIndex" /> 小于零。 - 或 - <paramref name="byteindex" /> 和 <paramref name="byteCount" /> 不表示 <paramref name="bytes" /> 中的有效范围。 - 或 - <paramref name="charIndex" /> 不是 <paramref name="chars" /> 中的有效索引。</exception>
      <exception cref="T:System.ArgumentException">启用了错误检测，检测到 <paramref name="bytes" /> 包含无效字节序列。 - 或 - <paramref name="chars" /> 中从 <paramref name="charIndex" /> 到数组结尾没有足够容量来容纳所产生的字符。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得更详细的解释） －和－ 将 <see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetDecoder">
      <summary>获取可以将 UTF-16 编码的字节序列转换为 Unicode 字符序列的解码器。</summary>
      <returns>一个 <see cref="T:System.Text.Decoder" />，用于将 UTF-16 编码的字节序列转换为 Unicode 字符序列。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetEncoder">
      <summary>获取可将 Unicode 字符序列转换为 UTF-16 编码的字节序列的编码器。</summary>
      <returns>将 Unicode 字符序列转换为 UTF-16 编码字节序列的 <see cref="T:System.Text.Encoder" /> 对象。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetHashCode">
      <summary>返回当前实例的哈希代码。</summary>
      <returns>当前 <see cref="T:System.Text.UnicodeEncoding" /> 对象的哈希代码。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetMaxByteCount(System.Int32)">
      <summary>计算对指定数目的字符进行编码时产生的最大字节数。</summary>
      <returns>对指定数目的字符进行编码所产生的最大字节数。</returns>
      <param name="charCount">要编码的字符的数目。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charCount" /> 小于零。 - 或 - 产生的字节数超过了作为一个整数返回时允许的最大字节数。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得更详细的解释） －和－ 将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetMaxCharCount(System.Int32)">
      <summary>计算对指定数目的字节进行解码时产生的最大字符数。</summary>
      <returns>对指定数目的字节进行解码时所产生的最大字符数。</returns>
      <param name="byteCount">要解码的字节数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="byteCount" /> 小于零。 - 或 - 产生的字节数超过了作为一个整数返回时允许的最大字节数。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得更详细的解释） －和－ 将 <see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetPreamble">
      <summary>如果此实例的构造函数请求一个字节顺序标记，则将返回用 UTF-16 格式编码的 Unicode 字节顺序标记。</summary>
      <returns>如果此实例的构造函数请求一个字节顺序标记，则将返回一个包含 Unicode 字节顺序标记的字节数组。 否则，此方法将返回一个长度零的字节数组。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UnicodeEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary>将字节数组中某个范围的字节解码为一个字符串。</summary>
      <returns>包含指定字节序列解码结果的 <see cref="T:System.String" /> 对象。</returns>
      <param name="bytes">包含要解码的字节序列的字节数组。</param>
      <param name="index">第一个要解码的字节的索引。</param>
      <param name="count">要解码的字节数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> 为 null (Nothing)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 或 <paramref name="count" /> 小于零。 - 或 - <paramref name="index" /> 和 <paramref name="count" /> 不表示 <paramref name="bytes" /> 中的有效范围。</exception>
      <exception cref="T:System.ArgumentException">启用了错误检测，检测到 <paramref name="bytes" /> 包含无效字节序列。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得更详细的解释） －和－ 将 <see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Text.UTF8Encoding">
      <summary>表示 Unicode 字符的 UTF-8 编码。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor">
      <summary>初始化 <see cref="T:System.Text.UTF8Encoding" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor(System.Boolean)">
      <summary>初始化 <see cref="T:System.Text.UTF8Encoding" /> 类的新实例。 参数指定是否提供一个 Unicode 字节顺序标记。</summary>
      <param name="encoderShouldEmitUTF8Identifier">如果为 true，则指定提供 Unicode 字节顺序标记；否则为 false。</param>
    </member>
    <member name="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)">
      <summary>初始化 <see cref="T:System.Text.UTF8Encoding" /> 类的新实例。 参数指定是否提供 Unicode 字节顺序标记，以及是否在检测到无效的编码时引发异常。</summary>
      <param name="encoderShouldEmitUTF8Identifier">如果为 true，则指定提供 Unicode 字节顺序标记；否则为 false。</param>
      <param name="throwOnInvalidBytes">true 则指定在检测到无效的编码时引发异常；否则为 false。</param>
    </member>
    <member name="M:System.Text.UTF8Encoding.Equals(System.Object)">
      <summary>确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Text.UTF8Encoding" /> 对象。</summary>
      <returns>如果 <paramref name="value" /> 是 <see cref="T:System.Text.UTF8Encoding" /> 的一个实例并且等于当前对象，则为 true；否则，为 false。</returns>
      <param name="value">与当前实例进行比较的 <see cref="T:System.Object" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary>计算对指定字符数组中的一组字符进行编码时产生的字节数。</summary>
      <returns>对指定字符进行编码后生成的字节数。</returns>
      <param name="chars">包含要编码的字符集的字符数组。</param>
      <param name="index">第一个要编码的字符的索引。</param>
      <param name="count">要编码的字符的数目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 或 <paramref name="count" /> 小于零。 - 或 - <paramref name="index" /> 和 <paramref name="count" /> 不表示 <paramref name="chars" /> 中的有效范围。 - 或 - 产生的字节数超过了作为一个整数返回时允许的最大字节数。</exception>
      <exception cref="T:System.ArgumentException">启用了错误检测，检测到 <paramref name="chars" /> 包含无效字符序列。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得完整的解释） －和－ 将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetByteCount(System.String)">
      <summary>计算对指定 <see cref="T:System.String" /> 中的字符进行编码时所产生的字节数。</summary>
      <returns>对指定字符进行编码后生成的字节数。</returns>
      <param name="chars">包含要编码的字符集的 <see cref="T:System.String" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">产生的字节数超过了作为一个整数返回时允许的最大字节数。</exception>
      <exception cref="T:System.ArgumentException">启用了错误检测，检测到 <paramref name="chars" /> 包含无效字符序列。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得完整的解释） －和－ 将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>将指定字符数组中的一组字符编码到指定的字节数组中。</summary>
      <returns>写入 <paramref name="bytes" /> 的实际字节数。</returns>
      <param name="chars">包含要编码的字符集的字符数组。</param>
      <param name="charIndex">第一个要编码的字符的索引。</param>
      <param name="charCount">要编码的字符的数目。</param>
      <param name="bytes">要包含所产生的字节序列的字节数组。</param>
      <param name="byteIndex">开始写入所产生的字节序列的索引位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> 为 null。 - 或 - <paramref name="bytes" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小于零。 - 或 - <paramref name="charIndex" /> 和 <paramref name="charCount" /> 不表示 <paramref name="chars" /> 中的有效范围。 - 或 - <paramref name="byteIndex" /> 不是 <paramref name="bytes" /> 中的有效索引。</exception>
      <exception cref="T:System.ArgumentException">启用了错误检测，检测到 <paramref name="chars" /> 包含无效字符序列。 - 或 - <paramref name="bytes" /> 中从 <paramref name="byteIndex" /> 到数组结尾没有足够的容量来容纳所产生的字节。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得完整的解释） －和－ 将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>将指定 <see cref="T:System.String" /> 中的一组字符编码到指定的字节数组中。</summary>
      <returns>写入 <paramref name="bytes" /> 的实际字节数。</returns>
      <param name="s">包含要编码的字符集的 <see cref="T:System.String" />。</param>
      <param name="charIndex">第一个要编码的字符的索引。</param>
      <param name="charCount">要编码的字符的数目。</param>
      <param name="bytes">要包含所产生的字节序列的字节数组。</param>
      <param name="byteIndex">开始写入所产生的字节序列的索引位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> 为 null。 - 或 - <paramref name="bytes" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" />、<paramref name="charCount" /> 或 <paramref name="byteIndex" /> 小于零。 - 或 - <paramref name="charIndex" /> 和 <paramref name="charCount" /> 不表示 <paramref name="chars" /> 中的有效范围。 - 或 - <paramref name="byteIndex" /> 不是 <paramref name="bytes" /> 中的有效索引。</exception>
      <exception cref="T:System.ArgumentException">启用了错误检测，检测到 <paramref name="s" /> 包含无效字符序列。 - 或 - <paramref name="bytes" /> 中从 <paramref name="byteIndex" /> 到数组结尾没有足够的容量来容纳所产生的字节。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得完整的解释） －和－ 将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary>计算对指定字节数组中的一个字节序列进行解码所产生的字符数。</summary>
      <returns>对指定字节序列进行解码所产生的字符数。</returns>
      <param name="bytes">包含要解码的字节序列的字节数组。</param>
      <param name="index">第一个要解码的字节的索引。</param>
      <param name="count">要解码的字节数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 或 <paramref name="count" /> 小于零。 - 或 - <paramref name="index" /> 和 <paramref name="count" /> 不表示 <paramref name="bytes" /> 中的有效范围。 - 或 - 产生的字节数超过了作为一个整数返回时允许的最大字节数。</exception>
      <exception cref="T:System.ArgumentException">启用了错误检测，检测到 <paramref name="bytes" /> 包含无效字节序列。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得完整的解释） －和－ 将 <see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary>将指定字节数组中的一个字节序列解码为指定的字符数组。</summary>
      <returns>写入 <paramref name="chars" /> 的实际字符数。</returns>
      <param name="bytes">包含要解码的字节序列的字节数组。</param>
      <param name="byteIndex">第一个要解码的字节的索引。</param>
      <param name="byteCount">要解码的字节数。</param>
      <param name="chars">要用于包含所产生的字符集的字符数组。</param>
      <param name="charIndex">开始写入所产生的字符集的索引位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> 为 null。 - 或 - <paramref name="chars" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="byteIndex" />、<paramref name="byteCount" /> 或 <paramref name="charIndex" /> 小于零。 - 或 - <paramref name="byteindex" /> 和 <paramref name="byteCount" /> 不表示 <paramref name="bytes" /> 中的有效范围。 - 或 - <paramref name="charIndex" /> 不是 <paramref name="chars" /> 中的有效索引。</exception>
      <exception cref="T:System.ArgumentException">启用了错误检测，检测到 <paramref name="bytes" /> 包含无效字节序列。 - 或 - <paramref name="chars" /> 中从 <paramref name="charIndex" /> 到数组结尾没有足够容量来容纳所产生的字符。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得完整的解释） －和－ 将 <see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetDecoder">
      <summary>获取可以将 UTF-8 编码的字节序列转换为 Unicode 字符序列的解码器。</summary>
      <returns>
        <see cref="T:System.Text.Decoder" /> 用于将 UTF-8 编码的字节序列转换为 Unicode 字符序列。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetEncoder">
      <summary>获取可将 Unicode 字符序列转换为 UTF-8 编码的字节序列的编码器。</summary>
      <returns>一个 <see cref="T:System.Text.Encoder" />，用于将 Unicode 字符序列转换为 UTF-8 编码的字节序列。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetHashCode">
      <summary>返回当前实例的哈希代码。</summary>
      <returns>当前实例的哈希代码。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)">
      <summary>计算对指定数目的字符进行编码时产生的最大字节数。</summary>
      <returns>对指定数目的字符进行编码所产生的最大字节数。</returns>
      <param name="charCount">要编码的字符的数目。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charCount" /> 小于零。 - 或 - 产生的字节数超过了作为一个整数返回时允许的最大字节数。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得完整的解释） －和－ 将 <see cref="P:System.Text.Encoding.EncoderFallback" /> 设置为 <see cref="T:System.Text.EncoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)">
      <summary>计算对指定数目的字节进行解码时产生的最大字符数。</summary>
      <returns>对指定数目的字节进行解码时所产生的最大字符数。</returns>
      <param name="byteCount">要解码的字节数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="byteCount" /> 小于零。 - 或 - 产生的字节数超过了作为一个整数返回时允许的最大字节数。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得完整的解释） －和－ 将 <see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetPreamble">
      <summary>如果此实例的构造函数请求一个字节顺序标记，则将返回用 UTF-8 格式编码的 Unicode 字节顺序标记。</summary>
      <returns>如果此实例的构造函数请求一个字节顺序标记，则将返回一个包含 Unicode 字节顺序标记的字节数组。 否则，此方法将返回一个长度零的字节数组。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary>将字节数组中某个范围的字节解码为一个字符串。</summary>
      <returns>包含指定字节序列解码结果的 <see cref="T:System.String" />。</returns>
      <param name="bytes">包含要解码的字节序列的字节数组。</param>
      <param name="index">第一个要解码的字节的索引。</param>
      <param name="count">要解码的字节数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 或 <paramref name="count" /> 小于零。 - 或 - <paramref name="index" /> 和 <paramref name="count" /> 不表示 <paramref name="bytes" /> 中的有效范围。</exception>
      <exception cref="T:System.ArgumentException">启用了错误检测，检测到 <paramref name="bytes" /> 包含无效字节序列。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">发生回退（请参见.NET Framework 中的字符编码以获得完整的解释） －和－ 将 <see cref="P:System.Text.Encoding.DecoderFallback" /> 设置为 <see cref="T:System.Text.DecoderExceptionFallback" />。</exception>
      <filterpriority>1</filterpriority>
    </member>
  </members>
</doc>