<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Tasks.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Tasks.Parallel">
      <summary>提供对并行循环和区域的支持。</summary>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
      <summary>执行 for（在 Visual Basic 中为 For）循环，其中可能会并行运行迭代。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="fromInclusive">开始索引（含）。</param>
      <param name="toExclusive">结束索引（不含）。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <summary>执行 for（在 Visual Basic 中为 For）循环，其中可能会并行运行迭代，而且可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="fromInclusive">开始索引（含）。</param>
      <param name="toExclusive">结束索引（不含）。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary>执行具有线程本地数据的 for（在 Visual Basic 中为 For）循环，其中可能会并行运行迭代，而且可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="fromInclusive">开始索引（含）。</param>
      <param name="toExclusive">结束索引（不含）。</param>
      <param name="localInit">用于返回每个任务的本地数据的初始状态的函数委托。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <param name="localFinally">用于对每个任务的本地状态执行一个最终操作的委托。</param>
      <typeparam name="TLocal">线程本地数据的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="body" /> 参数为 null。 - 或 - <paramref name="localInit" /> 参数为 null。 - 或 - <paramref name="localFinally" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
      <summary>执行 for（在 Visual Basic 中为 For）循环，其中可能会并行运行迭代，而且可以配置循环选项。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="fromInclusive">开始索引（含）。</param>
      <param name="toExclusive">结束索引（不含）。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" /> 参数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="body" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <summary>执行 for（在 Visual Basic 中为 For）循环，其中可能会并行运行迭代，而且可以配置循环选项，可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="fromInclusive">开始索引（含）。</param>
      <param name="toExclusive">结束索引（不含）。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" /> 参数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="body" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary>执行具有线程本地数据的 for（在 Visual Basic 中为 For）循环，其中可能会并行运行迭代，而且可以配置循环选项，可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="fromInclusive">开始索引（含）。</param>
      <param name="toExclusive">结束索引（不含）。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="localInit">用于返回每个任务的本地数据的初始状态的函数委托。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <param name="localFinally">用于对每个任务的本地状态执行一个最终操作的委托。</param>
      <typeparam name="TLocal">线程本地数据的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="body" /> 参数为 null。 - 或 - <paramref name="localInit" /> 参数为 null。 - 或 - <paramref name="localFinally" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。</exception>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" /> 参数。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
      <summary>执行具有 64 位索引的 for（在 Visual Basic 中为 For）循环，其中可能会并行运行迭代。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="fromInclusive">开始索引（含）。</param>
      <param name="toExclusive">结束索引（不含）。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <summary>执行具有 64 位索引的 for（在 Visual Basic 中为 For）循环，其中可能会并行运行迭代，而且可以监视和操作循环的状态。</summary>
      <returns>一个 <see cref="T:System.Threading.Tasks.ParallelLoopResult" /> 结构，其中包含有关已完成的循环部分的信息。</returns>
      <param name="fromInclusive">开始索引（含）。</param>
      <param name="toExclusive">结束索引（不含）。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary>执行具有 64 位索引和线程本地数据的 for（在 Visual Basic 中为 For）循环，其中可能会并行运行迭代，而且可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="fromInclusive">开始索引（含）。</param>
      <param name="toExclusive">结束索引（不含）。</param>
      <param name="localInit">用于返回每个任务的本地数据的初始状态的函数委托。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <param name="localFinally">用于对每个任务的本地状态执行一个最终操作的委托。</param>
      <typeparam name="TLocal">线程本地数据的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="body" /> 参数为 null。 - 或 - <paramref name="localInit" /> 参数为 null。 - 或 - <paramref name="localFinally" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
      <summary>执行具有 64 位索引的 for（在 Visual Basic 中为 For）循环，其中可能会并行运行迭代，而且可以配置循环选项。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="fromInclusive">开始索引（含）。</param>
      <param name="toExclusive">结束索引（不含）。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" /> 参数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="body" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <summary>执行具有 64 位索引的 for（在 Visual Basic 中为 For）循环，其中可能会并行运行迭代，而且可以配置循环选项，可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="fromInclusive">开始索引（含）。</param>
      <param name="toExclusive">结束索引（不含）。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" /> 参数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="body" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary>执行具有 64 位索引和线程本地数据的 for（（在 Visual Basic 中为 For）循环，其中可能会并行运行迭代，而且可以配置循环选项，可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="fromInclusive">开始索引（含）。</param>
      <param name="toExclusive">结束索引（不含）。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="localInit">用于返回每个线程的本地数据的初始状态的函数委托。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <param name="localFinally">用于对每个线程的本地状态执行一个最终操作的委托。</param>
      <typeparam name="TLocal">线程本地数据的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="body" /> 参数为 null。 - 或 - <paramref name="localInit" /> 参数为 null。 - 或 - <paramref name="localFinally" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。</exception>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" /> 参数。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary>执行 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> 中可能会并行运行迭代，而且可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">包含原始数据源的可排序分区程序。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <typeparam name="TSource">
        <paramref name="source" /> 中的元素的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.InvalidOperationException">在 <paramref name="source" /> 可排序的分区程序的 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 属性返回 false。 - 或 - 在 false 可排序的分区程序的 <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> 属性返回 。 - 或 - 在源可排序的分区程序的所有方法都返回 null。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary>执行具有线程本地数据的 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> 上可能会并行运行迭代，而且可以配置循环选项，可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">包含原始数据源的可排序分区程序。</param>
      <param name="localInit">用于返回每个任务的本地数据的初始状态的函数委托。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <param name="localFinally">用于对每个任务的本地状态执行一个最终操作的委托。</param>
      <typeparam name="TSource">
        <paramref name="source" /> 中的元素的类型。</typeparam>
      <typeparam name="TLocal">线程本地数据的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。 - 或 - <paramref name="localInit" /> 参数为 null。 - 或 - <paramref name="localFinally" /> 参数为 null。</exception>
      <exception cref="T:System.InvalidOperationException">在 <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> 的 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 属性返回 false 或分区程序返回 null 分区。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary>执行 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> 中可能会并行运行迭代，而且可以配置循环选项，可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">包含原始数据源的可排序分区程序。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <typeparam name="TSource">
        <paramref name="source" /> 中的元素的类型。</typeparam>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" />参数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
      <exception cref="T:System.InvalidOperationException">在 <paramref name="source" /> 可排序的分区程序的 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 属性返回 false。 - 或 - 在 <paramref name="source" /> 可排序的分区程序的 <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> 属性返回 false。 - 或 - 当 <paramref name="source" /> 可排序分区程序中的任何方法返回 null 时引发的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary>执行具有 64 位索引和线程本地数据的 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> 上可能会并行运行迭代，而且可以配置循环选项，可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">包含原始数据源的可排序分区程序。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="localInit">用于返回每个任务的本地数据的初始状态的函数委托。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <param name="localFinally">用于对每个任务的本地状态执行一个最终操作的委托。</param>
      <typeparam name="TSource">
        <paramref name="source" /> 中的元素的类型。</typeparam>
      <typeparam name="TLocal">线程本地数据的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。 - 或 - <paramref name="localInit" /> 或 <paramref name="localFinally" /> 参数为 null。</exception>
      <exception cref="T:System.InvalidOperationException">在 <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> 中的 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 属性返回 false 或分区程序返回 null 分区。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" /> 参数。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
      <summary>执行 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.Concurrent.Partitioner" /> 上可能会并行运行迭代。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">包含原始数据源的分区程序。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <typeparam name="TSource">
        <paramref name="source" /> 中的元素的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.InvalidOperationException">在 <paramref name="source" /> 的分区程序的 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 属性返回 false。 - 或 - 在 <paramref name="source" /> 分区程序中的任何方法返回 null 时引发的异常。 - 或 - <paramref name="source" /> 分区程序中的 <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> 方法未返回正确的分区数时引发的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary>执行 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.Concurrent.Partitioner" /> 中可能会并行运行迭代，而且可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">包含原始数据源的分区程序。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <typeparam name="TSource">
        <paramref name="source" /> 中的元素的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.InvalidOperationException">在 <paramref name="source" /> 的分区程序的 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 属性返回 false。 - 或 - <paramref name="source" /> 分区程序中的方法返回 null。 - 或 - <paramref name="source" /> 分区程序中的 <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" /> 方法未返回正确的分区数时引发的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary>执行具有线程本地数据的 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.Concurrent.Partitioner" /> 上可能会并行运行迭代，而且可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">包含原始数据源的分区程序。</param>
      <param name="localInit">用于返回每个任务的本地数据的初始状态的函数委托。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <param name="localFinally">用于对每个任务的本地状态执行一个最终操作的委托。</param>
      <typeparam name="TSource">
        <paramref name="source" /> 中的元素的类型。</typeparam>
      <typeparam name="TLocal">线程本地数据的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。 - 或 - <paramref name="localInit" /> 参数为 null。 - 或 - <paramref name="localFinally" /> 参数为 null。</exception>
      <exception cref="T:System.InvalidOperationException">在 <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> 的 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 属性返回 false 或分区程序返回 null 分区。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <summary>执行 following examplereach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.Concurrent.Partitioner" /> 中可能会并行运行迭代，而且可以配置循环选项。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">包含原始数据源的分区程序。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <typeparam name="TSource">
        <paramref name="source" /> 中的元素的类型。</typeparam>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" /> 参数。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.InvalidOperationException">在 <paramref name="source" /> 的分区程序的 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 属性返回 false。 - 或 - 在 <paramref name="source" /> 分区程序中的任何方法返回 null 时引发的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary>执行 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.Concurrent.Partitioner" /> 中可能会并行运行迭代，而且可以配置循环选项，可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">包含原始数据源的分区程序。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <typeparam name="TSource">
        <paramref name="source" /> 中的元素的类型。</typeparam>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" /> 参数。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.InvalidOperationException">在 <paramref name="source" /> 的分区程序的 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 属性返回 false。 - 或 - 在 <paramref name="source" /> 分区程序中的任何方法返回 null 时引发的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary>执行具有线程本地数据的 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.Concurrent.Partitioner" /> 上可能会并行运行迭代，而且可以配置循环选项，可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">包含原始数据源的分区程序。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="localInit">用于返回每个任务的本地数据的初始状态的函数委托。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <param name="localFinally">用于对每个任务的本地状态执行一个最终操作的委托。</param>
      <typeparam name="TSource">
        <paramref name="source" /> 中的元素的类型。</typeparam>
      <typeparam name="TLocal">线程本地数据的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。 - 或 - <paramref name="localInit" /> 参数为 null。 - 或 - <paramref name="localFinally" /> 参数为 null。</exception>
      <exception cref="T:System.InvalidOperationException">在 <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> 的 <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" /> 属性返回 false 或分区程序返回 null 分区。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" /> 参数。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
      <summary>执行 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.IEnumerable" /> 上可能会并行运行迭代。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">可枚举的数据源。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <typeparam name="TSource">源中数据的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary>执行 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.IEnumerable" /> 中可能会并行运行迭代，而且可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">可枚举的数据源。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <typeparam name="TSource">源中数据的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary>执行具有 64 位索引的 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.IEnumerable" /> 上可能会并行运行迭代，而且可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">可枚举的数据源。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <typeparam name="TSource">源中数据的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary>执行具有线程本地数据的 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.IEnumerable" /> 上可能会并行运行迭代，而且可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">可枚举的数据源。</param>
      <param name="localInit">用于返回每个任务的本地数据的初始状态的函数委托。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <param name="localFinally">用于对每个任务的本地状态执行一个最终操作的委托。</param>
      <typeparam name="TSource">源中数据的类型。</typeparam>
      <typeparam name="TLocal">线程本地数据的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。 - 或 - <paramref name="localInit" /> 参数为 null。 - 或 - <paramref name="localFinally" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary>执行具有线程本地数据的 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.IEnumerable" /> 上可能会并行运行迭代，而且可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">可枚举的数据源。</param>
      <param name="localInit">用于返回每个任务的本地数据的初始状态的函数委托。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <param name="localFinally">用于对每个任务的本地状态执行一个最终操作的委托。</param>
      <typeparam name="TSource">源中数据的类型。</typeparam>
      <typeparam name="TLocal">线程本地数据的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。 - 或 - <paramref name="localInit" /> 参数为 null。 - 或 - <paramref name="localFinally" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <summary>执行 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.IEnumerable" /> 中可能会并行运行迭代，而且可以匹配配置循环选项。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">可枚举的数据源。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <typeparam name="TSource">源中数据的类型。</typeparam>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" />参数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary>执行 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.IEnumerable" /> 中可能会并行运行迭代，而且可以配置循环选项，可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">可枚举的数据源。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <typeparam name="TSource">源中数据的类型。</typeparam>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" />参数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary>执行具有 64 位索引的 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.IEnumerable" /> 上可能会并行运行迭代，而且可以配置循环选项，可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">可枚举的数据源。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <typeparam name="TSource">源中数据的类型。</typeparam>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" />参数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary>执行具有线程本地数据的 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.IEnumerable" /> 上可能会并行运行迭代，而且可以配置循环选项，可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">可枚举的数据源。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="localInit">用于返回每个任务的本地数据的初始状态的函数委托。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <param name="localFinally">用于对每个任务的本地状态执行一个最终操作的委托。</param>
      <typeparam name="TSource">源中数据的类型。</typeparam>
      <typeparam name="TLocal">线程本地数据的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。 - 或 - <paramref name="localInit" /> 参数为 null。 - 或 - <paramref name="localFinally" /> 参数为 null。</exception>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" /> 参数。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary>执行具有线程本地数据和 64 位索引的 foreach（在 Visual Basic 中为 For Each）操作，其中在 <see cref="T:System.Collections.IEnumerable" /> 上可能会并行运行迭代，而且可以配置循环选项，可以监视和操作循环的状态。</summary>
      <returns>包含有关已完成的循环部分的信息的结构。</returns>
      <param name="source">可枚举的数据源。</param>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="localInit">用于返回每个任务的本地数据的初始状态的函数委托。</param>
      <param name="body">将为每个迭代调用一次的委托。</param>
      <param name="localFinally">用于对每个任务的本地状态执行一个最终操作的委托。</param>
      <typeparam name="TSource">源中数据的类型。</typeparam>
      <typeparam name="TLocal">线程本地数据的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。 - 或 - <paramref name="body" /> 参数为 null。 - 或 - <paramref name="localInit" /> 参数为 null。 - 或 - <paramref name="localFinally" /> 参数为 null。</exception>
      <exception cref="T:System.OperationCanceledException">在 <paramref name="parallelOptions" /> 取消的 <see cref="T:System.Threading.CancellationToken" /> 参数。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
      <exception cref="T:System.AggregateException">包含在所有线程上引发的全部单个异常的异常。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
      <summary>尽可能并行执行提供的每个操作。</summary>
      <param name="actions">要执行的 <see cref="T:System.Action" /> 数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actions" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">当 <paramref name="actions" /> 数组中的任何操作引发异常时引发的异常。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actions" />数组包含 null 个元素。</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
      <summary>执行所提供的每个操作，而且尽可能并行运行，除非用户取消了操作。</summary>
      <param name="parallelOptions">一个对象，用于配置此操作的行为。</param>
      <param name="actions">要执行的操作数组。</param>
      <exception cref="T:System.OperationCanceledException">
        <see cref="T:System.Threading.CancellationToken" /> 处于 <paramref name="parallelOptions" /> 设置。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actions" /> 参数为 null。 - 或 - <paramref name="parallelOptions" /> 参数为 null。</exception>
      <exception cref="T:System.AggregateException">当 <paramref name="actions" /> 数组中的任何操作引发异常时引发的异常。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="actions" />数组包含 null 个元素。</exception>
      <exception cref="T:System.ObjectDisposedException">在 <paramref name="parallelOptions" /> 中与 <see cref="T:System.Threading.CancellationToken" /> 关联的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</exception>
    </member>
    <member name="T:System.Threading.Tasks.ParallelLoopResult">
      <summary>提供执行 <see cref="T:System.Threading.Tasks.Parallel" /> 循环的完成状态。</summary>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopResult.IsCompleted">
      <summary>获取该循环是否已运行完成（即，该循环的所有迭代均已执行，并且该循环没有收到提前结束的请求）。</summary>
      <returns>如果该循环已运行完成，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration">
      <summary>获取从中调用 <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> 的最低迭代的索引。</summary>
      <returns>返回一个表示从中调用 Break 语句的最低迭代的整数。</returns>
    </member>
    <member name="T:System.Threading.Tasks.ParallelLoopState">
      <summary>可用来使 <see cref="T:System.Threading.Tasks.Parallel" /> 循环的迭代与其他迭代交互。 此类的实例由 Parallel 类提供给每个循环；不能在您的用户代码中创建实例。</summary>
    </member>
    <member name="M:System.Threading.Tasks.ParallelLoopState.Break">
      <summary>告知 <see cref="T:System.Threading.Tasks.Parallel" /> 循环应在系统方便的时候尽早停止执行当前迭代之外的迭代。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> 方法以前被调用过。 <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> 和 <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> 不能被相同循环的迭代组合使用。</exception>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.IsExceptional">
      <summary>获取循环的任何迭代是否已引发相应迭代未处理的异常。</summary>
      <returns>如果引发了未经处理的异常，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.IsStopped">
      <summary>获取循环的任何迭代是否已调用 <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" />。</summary>
      <returns>如果任何迭代已停止循环，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration">
      <summary>获取从中调用 <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> 的最低循环迭代。</summary>
      <returns>一个表示从中调用 Break 的最低迭代的整数。 如果是 <see cref="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" /> 循环，该值会基于内部生成的索引。</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration">
      <summary>获取循环的当前迭代是否应基于此迭代或其他迭代发出的请求退出。</summary>
      <returns>如果当前迭代应退出，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Threading.Tasks.ParallelLoopState.Stop">
      <summary>告知 <see cref="T:System.Threading.Tasks.Parallel" /> 循环应在系统方便的时候尽早停止执行。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> 方法以前被调用过。 <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> 和 <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> 不能被相同循环的迭代组合使用。</exception>
    </member>
    <member name="T:System.Threading.Tasks.ParallelOptions">
      <summary>存储用于配置 <see cref="T:System.Threading.Tasks.Parallel" /> 类的方法的操作的选项。</summary>
    </member>
    <member name="M:System.Threading.Tasks.ParallelOptions.#ctor">
      <summary>初始化 <see cref="T:System.Threading.Tasks.ParallelOptions" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.CancellationToken">
      <summary>获取或设置与此 <see cref="T:System.Threading.Tasks.ParallelOptions" /> 实例关联的 <see cref="T:System.Threading.CancellationToken" />。</summary>
      <returns>与此实例关联的标记。</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism">
      <summary>获取或设置此 ParallelOptions 实例所允许的最大并行度。</summary>
      <returns>一个表示最大并行度的整数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">当此 <see cref="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" /> 设置为 0 或小于 -1 的某个值时引发的异常。</exception>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.TaskScheduler">
      <summary>获取或设置与此 <see cref="T:System.Threading.Tasks.ParallelOptions" /> 实例关联的 <see cref="T:System.Threading.Tasks.TaskScheduler" />。 将此属性设置为 null，以指示应使用当前计划程序。</summary>
      <returns>与此实例关联的任务计划程序。</returns>
    </member>
  </members>
</doc>