<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Timer</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Timer">
      <summary>提供以指定的时间间隔执行方法的机制。 此类不能被继承。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)">
      <summary>使用 32 位的有符号整数指定时间间隔，初始化 Timer 类的新实例。</summary>
      <param name="callback">一个 <see cref="T:System.Threading.TimerCallback" /> 委托，表示要执行的方法。</param>
      <param name="state">一个包含回调方法要使用的信息的对象，或者为 null。</param>
      <param name="dueTime">调用 <paramref name="callback" /> 之前延迟的时间量（以毫秒为单位）。 指定 <see cref="F:System.Threading.Timeout.Infinite" /> 可防止启动计时器。 指定零 (0) 可立即启动计时器。</param>
      <param name="period">调用 <paramref name="callback" /> 的时间间隔（以毫秒为单位）。 指定 <see cref="F:System.Threading.Timeout.Infinite" /> 可以禁用定期终止。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> 或 <paramref name="period" /> 参数为负，并且不等于 <see cref="F:System.Threading.Timeout.Infinite" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)">
      <summary>初始化 Timer 类的新实例，使用 <see cref="T:System.TimeSpan" /> 值来度量时间间隔。</summary>
      <param name="callback">一个 <see cref="T:System.Threading.TimerCallback" /> 委托，表示要执行的方法。</param>
      <param name="state">一个包含回调方法要使用的信息的对象，或者为 null。</param>
      <param name="dueTime">
        <see cref="T:System.TimeSpan" />，表示在 <paramref name="callback" /> 参数调用它的方法之前延迟的时间量。 指定 -1 毫秒以防止启动计时器。 指定零 (0) 可立即启动计时器。</param>
      <param name="period">在调用 <paramref name="callback" /> 所引用的方法之间的时间间隔。 指定 -1 毫秒可以禁用定期终止。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> 或 <paramref name="period" /> 值中的毫秒数为负并且不等于 <see cref="F:System.Threading.Timeout.Infinite" />，或者大于 <see cref="F:System.Int32.MaxValue" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Threading.Timer.Change(System.Int32,System.Int32)">
      <summary>更改计时器的启动时间和方法调用之间的间隔，用 32 位有符号整数度量时间间隔。</summary>
      <returns>如果计时器更新成功，则为 true；否则为 false。</returns>
      <param name="dueTime">在调用构造 <see cref="T:System.Threading.Timer" /> 时指定的回调方法之前的延迟时间量（以毫秒为单位）。 指定 <see cref="F:System.Threading.Timeout.Infinite" /> 可防止重新启动计时器。 指定零 (0) 可立即重新启动计时器。</param>
      <param name="period">调用构造 <see cref="T:System.Threading.Timer" /> 时指定的回调方法的时间间隔（以毫秒为单位）。 指定 <see cref="F:System.Threading.Timeout.Infinite" /> 可以禁用定期终止。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Threading.Timer" /> 已被释放。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> 或 <paramref name="period" /> 参数为负，并且不等于 <see cref="F:System.Threading.Timeout.Infinite" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)">
      <summary>更改计时器的启动时间和方法调用之间的时间间隔，使用 <see cref="T:System.TimeSpan" /> 值度量时间间隔。</summary>
      <returns>如果计时器更新成功，则为 true；否则为 false。</returns>
      <param name="dueTime">一个 <see cref="T:System.TimeSpan" />，表示在调用构造 <see cref="T:System.Threading.Timer" /> 时指定的回调方法之前的延迟时间量。 指定负 -1 毫秒以防止计时器重新启动。 指定零 (0) 可立即重新启动计时器。</param>
      <param name="period">在构造 <see cref="T:System.Threading.Timer" /> 时指定的回调方法调用之间的时间间隔。 指定 -1 毫秒可以禁用定期终止。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Threading.Timer" /> 已被释放。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dueTime" /> 或 <paramref name="period" /> 参数（单位为毫秒）小于 -1。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="dueTime" /> 或 <paramref name="period" /> 参数（单位为毫秒）大于 4294967294。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.Timer.Dispose">
      <summary>释放由 <see cref="T:System.Threading.Timer" /> 的当前实例使用的所有资源。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Threading.TimerCallback">
      <summary>表示处理来自 <see cref="T:System.Threading.Timer" /> 的调用的方法。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.TimerCallback.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Threading.TimerCallback.BeginInvoke(System.Object,System.AsyncCallback,System.Object)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.TimerCallback.EndInvoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.TimerCallback.Invoke(System.Object)">
      <filterpriority>2</filterpriority>
    </member>
  </members>
</doc>