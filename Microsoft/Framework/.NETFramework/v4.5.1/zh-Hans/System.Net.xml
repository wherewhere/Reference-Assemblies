<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net</name>
  </assembly>
  <members>
    <member name="T:System.Net.INetworkProgress">
      <summary>提供有关通过网络发送数据的网络进度的信息。</summary>
    </member>
    <member name="E:System.Net.INetworkProgress.ProgressChanged">
      <summary>网络进度已变化。</summary>
    </member>
    <member name="E:System.Net.INetworkProgress.ProgressCompleted">
      <summary>网络进度已完成。</summary>
    </member>
    <member name="E:System.Net.INetworkProgress.ProgressFailed">
      <summary>网络进度已失败。</summary>
    </member>
    <member name="T:System.Net.IPEndPointCollection">
      <summary>表示一个集合，该集合用于将网络终结点存储为 <see cref="T:System.Net.IPEndPoint" /> 对象。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.IPEndPointCollection.#ctor">
      <summary>初始化 <see cref="T:System.Net.IPEndPointCollection" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.IPEndPointCollection.InsertItem(System.Int32,System.Net.IPEndPoint)">
      <summary>将 <see cref="T:System.Net.IPEndPoint" /> 元素插入 <see cref="T:System.Net.IPEndPointCollection" /> 的指定索引处。</summary>
      <param name="index">从零开始的索引，应在该位置插入 <paramref name="item" />。</param>
      <param name="item">要插入的 <see cref="T:System.Net.IPEndPoint" /> 对象。 对于引用类型，该值可以为 null。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 参数小于零 - 或 - <paramref name="index" /> 参数大于 <see cref="T:System.Net.IPEndPointCollection" /> 中当前的项计数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Net.IPEndPointCollection.SetItem(System.Int32,System.Net.IPEndPoint)">
      <summary>替换指定索引处的 <see cref="T:System.Net.IPEndPoint" /> 元素。</summary>
      <param name="index">待替换元素的从零开始的索引。</param>
      <param name="item">位于指定索引处的元素的新 <see cref="T:System.Net.IPEndPoint" /> 值。 对于引用类型，该值可以为 null。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 参数小于零 - 或 - <paramref name="index" /> 参数大于 <see cref="T:System.Net.IPEndPointCollection" /> 中当前的项计数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 参数为 null。</exception>
    </member>
    <member name="T:System.Net.IUnsafeWebRequestCreate">
      <summary>对统一资源标识符 (URI) 创建一个不安全的 <see cref="T:System.Net.WebRequest" />。</summary>
    </member>
    <member name="M:System.Net.IUnsafeWebRequestCreate.Create(System.Uri)">
      <summary>为指定的 URI 方案初始化新 <see cref="T:System.Net.WebRequest" />。</summary>
      <returns>返回 <see cref="T:System.Net.WebRequest" />。 指定的 URI 方案的 <see cref="T:System.Net.WebRequest" /> 子代。</returns>
      <param name="uri">请求的资源的 URI。</param>
    </member>
    <member name="T:System.Net.NetworkProgressChangedEventArgs">
      <summary>提供网络进度已更改事件的数据。</summary>
    </member>
    <member name="M:System.Net.NetworkProgressChangedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Object)">
      <summary>初始化 <see cref="T:System.Net.NetworkProgressChangedEventArgs" /> 类的新实例。</summary>
      <param name="percentage">已完成的异步任务的百分比。</param>
      <param name="processedBytes">已处理的字节数。</param>
      <param name="totalBytes">总字节数。</param>
      <param name="userState">唯一的用户状态。</param>
    </member>
    <member name="P:System.Net.NetworkProgressChangedEventArgs.ProcessedBytes">
      <summary>获取已处理的字节数。</summary>
      <returns>返回 <see cref="T:System.Int32" />。 要处理的字节数。</returns>
    </member>
    <member name="P:System.Net.NetworkProgressChangedEventArgs.TotalBytes">
      <summary>获取已传输的总字节数。</summary>
      <returns>返回 <see cref="T:System.Int32" />。 已传输的总字节数。</returns>
    </member>
    <member name="T:System.Net.UiSynchronizationContext">
      <summary>为同步模型中使用的托管 UI 提供同步上下文。</summary>
    </member>
    <member name="P:System.Net.UiSynchronizationContext.Current">
      <summary>获取当前线程的同步上下文。</summary>
      <returns>返回 <see cref="T:System.Threading.SynchronizationContext" />。 当前线程的同步上下文。</returns>
    </member>
    <member name="P:System.Net.UiSynchronizationContext.ManagedUiThreadId">
      <summary>获取当前托管线程的唯一标识符。</summary>
      <returns>返回 <see cref="T:System.Int32" />。 一个整数，表示此托管线程的唯一标识符。</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.Cloud">
      <summary>指定用来定义对等 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象的值。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> 类型的新实例。 此操作用序列化 Cloud 对象所需的数据填充序列化信息对象。</summary>
      <param name="info">引用包含反序列化此实例所需的数据的对象。</param>
      <param name="context">为反序列化数据提供途径的上下文。 也称为序列化数据的源。</param>
    </member>
    <member name="F:System.Net.PeerToPeer.Cloud.AllLinkLocal">
      <summary>返回对 <see cref="T:System.Net.PeerToPeer.Cloud" />（表示客户端或对等方当前参与的所有链接本地群）的引用。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Cloud.Available">
      <summary>返回对 <see cref="T:System.Net.PeerToPeer.Cloud" />（表示客户端当前参与的所有可用的群）的静态引用。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.Equals(System.Net.PeerToPeer.Cloud)">
      <summary>在两个群对象之间执行区分大小写的比较。</summary>
      <returns>如果指定的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 与当前群标识相同的资源，则返回 True；否则返回 false。</returns>
      <param name="other">要与此 <see cref="T:System.Net.PeerToPeer.Cloud" /> 进行比较的群。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.Equals(System.Object)">
      <summary>确定此对等 <see cref="T:System.Net.PeerToPeer.Cloud" /> 的内容是否与 <see cref="N:System" /> 对象的内容等效。</summary>
      <returns>如果 <see cref="T:System.Net.PeerToPeer.PeerName" /> 和用来比较的对象包含相同的信息，则为 True；否则为 false。</returns>
      <param name="obj">与此 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.GetAvailableClouds">
      <summary>获取调用对等方已知的对等群的集合。</summary>
      <returns>一个 <see cref="T:System.Net.PeerToPeer.CloudCollection" /> 对象，该对象指定调用对等方已知的对等群的集合。如果没有可用的群，将返回 null。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.GetCloudByName(System.String)">
      <summary>返回具有指定群名称的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象。</summary>
      <returns>具有指定群名称的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象。</returns>
      <param name="cloudName">包含 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> 的名称。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Net.PeerToPeer.Cloud" /> 名称未知。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.GetHashCode">
      <summary>重写 <see cref="M:System.Object.GetHashCode" />。</summary>
      <returns>当前 <see cref="T:System.Object" /> 的哈希代码。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化 <see cref="T:System.Net.PeerToPeer.Cloud" /> 所需的数据来填充 <see cref="N:System.Runtime.Serialization" /> 信息对象。</summary>
      <param name="info">包含与 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象关联的序列化数据。</param>
      <param name="context">包含与 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象关联的序列化流的目标。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Cloud.Global">
      <summary>获取一个 <see cref="T:System.Net.PeerToPeer.Cloud" /> 实例，其中包含全局 (Internet) 范围的对等方。</summary>
      <returns>包含将要通过全局网络范围进行通信的对等方的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Cloud.Name">
      <summary>获取对等 <see cref="T:System.Net.PeerToPeer.Cloud" /> 的名称。</summary>
      <returns>对等 <see cref="T:System.Net.PeerToPeer.Cloud" /> 的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Cloud.Scope">
      <summary>获取对等 <see cref="T:System.Net.PeerToPeer.Cloud" /> 的网络范围。</summary>
      <returns>用来指定当前对等群实例的 PNRP 范围的 <see cref="T:System.Net.PeerToPeer.PnrpScope" /> 枚举值。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Cloud.ScopeId">
      <summary>获取此对等 <see cref="T:System.Net.PeerToPeer.Cloud" /> 的特定 IP 地址的标识符。</summary>
      <returns>一个整数值，它为此对等群指定特定于范围的 ID。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Net.PeerToPeer.Cloud" /> 实例所需的数据。</summary>
      <param name="info">包含与 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象关联的序列化数据。</param>
      <param name="context">包含与 <see cref="T:System.Net.PeerToPeer.Cloud" /> 对象关联的序列化流的目标。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Cloud.ToString">
      <summary>返回当前 <see cref="T:System.Net.PeerToPeer.Cloud" /> 的字符串表示形式。</summary>
      <returns>表示当前 <see cref="T:System.Net.PeerToPeer.Cloud" /> 的字符串。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.CloudCollection">
      <summary>表示 <see cref="T:System.Net.PeerToPeer.CloudCollection" /> 元素的容器。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.CloudCollection.#ctor">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.CloudCollection" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.CloudCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Cloud)">
      <summary>将 <see cref="T:System.Net.PeerToPeer.Cloud" /> 插入 <see cref="T:System.Net.PeerToPeer.CloudCollection" /> 中的指定索引处。</summary>
      <param name="index">待替换元素的从零开始的索引。</param>
      <param name="item">位于指定索引处的新元素的值。</param>
      <exception cref="T:System.ArgumentNullException">提供的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 不能为 null。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.CloudCollection.SetItem(System.Int32,System.Net.PeerToPeer.Cloud)">
      <summary>替换指定索引处的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</summary>
      <param name="index">待替换元素的从零开始的索引。</param>
      <param name="item">要被替换的元素的新值。</param>
      <exception cref="T:System.ArgumentNullException">提供的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 不能为 null。</exception>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerName">
      <summary>指定用来定义对等 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象的值。 对等名称通常是用于标识对等资源的字符串。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化 <see cref="T:System.Net.PeerToPeer.PeerName" /> 所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info">引用包含反序列化此实例所需的数据的对象。</param>
      <param name="context">为反序列化数据提供途径的上下文。 也称为序列化数据的源。</param>
      <exception cref="T:System.ArgumentNullException">一个或多个参数为 null。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)">
      <summary>使用提供的完全限定对等名称 <see cref="T:System.String" /> 值初始化 <see cref="T:System.Net.PeerToPeer.PeerName" /> 类型的新对象。</summary>
      <param name="remotePeerName">包含要编码为 <see cref="T:System.Net.PeerToPeer.PeerName" /> 实例的对等名称。</param>
      <exception cref="T:System.ArgumentException">提供的 <see cref="T:System.String" /> 不是有效的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remotePeerName" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.PeerName" /> 类的新实例。</summary>
      <param name="classifier">包含要编码为 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的对等名称的<see cref="T:System.String" />。</param>
      <param name="peerNameType">
        <see cref="T:System.Net.PeerToPeer.PeerNameType" /> 枚举值，用于指定要创建的对等名称类型。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> 包含一个或多个非法字符。</exception>
      <exception cref="T:System.ArgumentNullException">一个或多个参数为 null。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法检索用作 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的基础的默认标识。 未能创建 <see cref="T:System.Net.PeerToPeer.PeerName" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerName.Authority">
      <summary>返回一个字符串，该字符串指定此 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象使用的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />。</summary>
      <returns>包含指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的身份验证部分的字符串。 对于安全的对等名称，此属性包含公钥，该公钥是一个长度为 40 个字符的十六进制字符串。 对于不安全的对等名称，此属性设置为零 (0)。</returns>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerName.Classifier">
      <summary>返回一个字符串，其中包含对等 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的分类器。</summary>
      <returns>包含分类器部分的字符串，该部分用于标识 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 的对等名称或 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> 内的解析。 除非显式指定，否则对于引用类型，所有属性的默认值均为 null；对于 int 类型的属性，默认值为零 (0)。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)">
      <summary>用指定的对等主机名称创建指定的 <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> 对象的新实例。</summary>
      <returns>一个表示指定的对等主机名称的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象。</returns>
      <param name="peerHostName">一个字符串，其中包含 DNS 限定的主机名。</param>
      <exception cref="T:System.ArgumentException">提供的 <see cref="T:System.String" /> 不是一个有效的对等主机名称字符串。</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> 为 null。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
        <see cref="T:System.Net.PeerToPeer.PeerName" /> 无法从供给的 <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> 中创建。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)">
      <summary>通过用指定的分类器字符串值替换在提供的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象上定义的 <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> 字段，来创建一个新的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</summary>
      <returns>包含更新后的分类器的新 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象。</returns>
      <param name="peerName">要为其设置新的分类器字符串值的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象。</param>
      <param name="classifier">要对返回的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 设置的 <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" />。</param>
      <exception cref="T:System.ArgumentException">提供的 <see cref="T:System.String" /> 不是一个有效的对等名称分类器。</exception>
      <exception cref="T:System.ArgumentNullException">一个或多个参数为 null。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
        <see cref="T:System.Net.PeerToPeer.PeerName" /> 无法从供给的 <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> 中创建。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)">
      <summary>对当前 <see cref="T:System.Net.PeerToPeer.PeerName" /> 和指定的对等名称执行区分大小写的比较。</summary>
      <returns>如果指定的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 与当前对等名称对象标识相同的资源，则返回 True；否则此方法返回 False。 如果 <paramref name="other" /> 设置为 null，此方法也会返回 False。</returns>
      <param name="other">要与此 <see cref="T:System.Net.PeerToPeer.PeerName" /> 比较的对等名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)">
      <summary>确定此 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象的内容是否等于另一个对象的内容。</summary>
      <returns>如果 <see cref="T:System.Net.PeerToPeer.PeerName" /> 和用来比较的对象包含相同的信息，则为 True；否则为 false。</returns>
      <param name="obj">与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.GetHashCode">
      <summary>重写 <see cref="M:System.Object.GetHashCode" /> 方法。</summary>
      <returns>当前 <see cref="T:System.Object" /> 的哈希代码。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化 <see cref="T:System.Net.PeerToPeer.PeerName" /> 所需的数据填充序列化信息对象。</summary>
      <param name="info">包含与 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象关联的序列化数据。</param>
      <param name="context">包含与 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象关联的序列化流的目标。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerName.IsSecured">
      <summary>获取一个布尔值，该值指定这是否是一个安全的对等名称。</summary>
      <returns>如果为 true，则此对等名称是使用私钥/公钥对进行保护的。 其名称包含该对等计算机的用户证书公钥的安全哈希算法 (SHA) 哈希。 否则，如果为 false，则对等名称没有关联的标识。 除非显式指定，否则对于引用类型，所有属性的默认值均为 null；对于 int 类型的属性，默认值为零 (0)。</returns>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerName.PeerHostName">
      <summary>获取对等主机的名称。 这是 DNS 编码版本的 <see cref="T:System.Net.PeerToPeer.PeerName" />，它相当于 <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" />，因为它们都是标识符。二者之间的不同之处在于可视化表示形式。</summary>
      <returns>一个表示对等主机名称的 <see cref="T:System.String" /> 值。 除非显式指定，否则对于引用类型，所有属性的默认值均为 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Net.PeerToPeer.PeerName" /> 实例所需的数据。</summary>
      <param name="info">包含与 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象关联的序列化数据。</param>
      <param name="context">包含与 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象关联的序列化流的目标。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerName.ToString">
      <summary>返回当前 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象的字符串表示形式。</summary>
      <returns>一个表示当前 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的字符串，其格式指定为：颁发机构.分类器。 例如，“0.MyInternetPeer”。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerNameRecord">
      <summary>定义构成对等名称记录对象的一组值。 此记录包括对等名称以及与之通信的终结点集合等项。 对等名称记录用于定义 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中的各个对等节点。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecord.#ctor">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 类的新默认实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecord.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 类的新默认实例。</summary>
      <param name="info">引用包含反序列化此实例所需的数据的对象。</param>
      <param name="context">为反序列化数据提供途径的上下文。 也称为序列化数据的源。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRecord.Comment">
      <summary>获取或设置有关 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象的其他信息。</summary>
      <returns>与 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象关联的注释。 此属性的默认值为 null。</returns>
      <exception cref="T:System.ArgumentException">要设置的注释要么大于 39 个 Unicode 字符，要么少于 1 个字符。</exception>
      <exception cref="T:System.ArgumentNullException">要设置的注释为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRecord.Data">
      <summary>获取或设置 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象的应用程序定义的二进制数据。</summary>
      <returns>包含与此项关联的二进制数据的字节数组。 此属性的默认值是一个空（长度为零）数组实例。</returns>
      <exception cref="T:System.ArgumentException">要设置的二进制数据数组的长度要么大于 4096，要么小于 1。</exception>
      <exception cref="T:System.ArgumentNullException">要设置的数据为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection">
      <summary>获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 对象，该对象包含可供与此 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象关联的对等方使用的所有终结点。</summary>
      <returns>一个包含 <see cref="T:System.Net.IPEndPoint" /> 对象集合的 <see cref="T:System.Net.IPEndPointCollection" /> 对象。 这些对象包含参与关联对等方群的其他对等方的终结点。 此属性的默认值为 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecord.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 所需的数据填充序列化信息对象。</summary>
      <param name="info">包含与 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象关联的序列化数据。</param>
      <param name="context">包含与 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象关联的序列化流的目标。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRecord.PeerName">
      <summary>获取或设置此 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象中的 <see cref="T:System.Net.PeerToPeer.PeerName" />。 对等名称是用于标识对等资源的字符串。</summary>
      <returns>此 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象中的 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />。 此属性的默认值为 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecord.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 实例所需的数据。</summary>
      <param name="info">包含与 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 实例关联的序列化数据。</param>
      <param name="context">包含与 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 实例关联的序列化流的目标。</param>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerNameRecordCollection">
      <summary>表示 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 元素的容器。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecordCollection.#ctor">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecordCollection.InsertItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)">
      <summary>将 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 元素插入到 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 中的指定索引处。</summary>
      <param name="index">待替换元素的从零开始的索引。</param>
      <param name="item">位于指定索引处的新元素的值。</param>
      <exception cref="T:System.ArgumentNullException">提供的项不能为 null。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRecordCollection.SetItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)">
      <summary>替换指定索引处的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />。</summary>
      <param name="index">待替换元素的从零开始的索引。</param>
      <param name="item">要被替换的元素的新值。</param>
      <exception cref="T:System.ArgumentNullException">提供的项不能为 null。</exception>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerNameRegistration">
      <summary>在一个 <see cref="T:System.Net.PeerToPeer.Cloud" /> 或一组群中注册 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 类的新默认实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
      <summary>用指定的名称和端口号初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 类的新实例。</summary>
      <param name="name">要注册的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象。</param>
      <param name="port">用来指定要注册的端口号的整数值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数不能为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的端口号小于零。端口号必须大于或等于零并小于 65,535 (0xFFFF)。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">已从此主机上注册指定的 <see cref="T:System.Net.PeerToPeer.PeerName" />。 提供的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> 不归远程对等方所有。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
      <summary>用指定的对等名称、端口号和 <see cref="T:System.Net.PeerToPeer.Cloud" /> 初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 类的新实例。</summary>
      <param name="name">要注册的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象。</param>
      <param name="port">用来指定要注册的端口号的整数值。</param>
      <param name="cloud">要在其中注册对等名称的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 参数不能为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的端口号小于零。端口号必须大于或等于零并小于 65,535 (0xFFFF)。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">已从此主机上注册指定的 <see cref="T:System.Net.PeerToPeer.PeerName" />。 提供的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> 不归远程对等方所有。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化一个新的可序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象。</summary>
      <param name="info">引用包含反序列化此实例所需的数据的对象。</param>
      <param name="context">为反序列化数据提供途径的上下文。 也称为序列化数据的源。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
      <summary>获取或设置要在其中注册此对此 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 对象的 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 中的信息。</summary>
      <returns>一个 <see cref="T:System.Net.PeerToPeer.Cloud" /> 类型的对象，它指定为其定义此注册的对等群。 默认情况下，此属性设置为 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
      <summary>获取或设置将要在 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中注册的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 对象的其他信息。</summary>
      <returns>包含要与 <see cref="T:System.Net.PeerToPeer.Cloud" /> 关联的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的其他信息的注释。 默认情况下，此属性设置为 null。</returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">指定的字符串值大于 39 个 Unicode 字符。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
      <summary>获取或设置 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象的应用程序定义的二进制数据。</summary>
      <returns>包含与此项关联的二进制数据的字节数组。 默认情况下，此属性设置为 null。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> 大于 4096 字节。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
      <summary>释放由 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象使用的所有资源。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
      <summary>释放 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象使用的非托管资源，并可以选择释放托管资源。</summary>
      <param name="disposing">True 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
      <summary>获取为其注册关联对等名称的网络终结点的集合。</summary>
      <returns>一个 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> 对象，其中包含为其注册关联对等名称的网络终结点。 除非显式指定，否则对于引用类型，所有属性的默认值均为 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 实例所需的数据填充序列化信息对象。</summary>
      <param name="info">包含与 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象关联的序列化数据。</param>
      <param name="context">包含与 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象关联的序列化流的目标。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
      <summary>获取或设置在 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性中指定的对等名称是否向主机上的特定 <see cref="T:System.Net.PeerToPeer.Cloud" /> 进行了注册。</summary>
      <returns>如果为 true，则说明对等名称向对等主机的 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 进行了注册。 如果为 false，则说明可以使用 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> 启动注册过程。</returns>
      <exception cref="T:System.ObjectDisposedException">不能注册已经释放的对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
      <summary>获取或设置要向对等群注册的对等名称。</summary>
      <returns>一个 <see cref="T:System.Net.PeerToPeer.PeerName" /> 类型的对象，其中包含与此 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象关联的值。 除非显式指定，否则对于引用类型，所有属性的默认值均为 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
      <summary>获取或设置正在 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象中注册的对等方使用的 TCP/IP 端口号。</summary>
      <returns>一个整数值，指示 <see cref="T:System.Net.IPEndPoint" /> 的 TCP 端口号。 除非显式指定，否则此属性的默认值设置为零 (0)。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的端口值小于零。端口号必须大于或等于零并小于 65,535 (0xFFFF)。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
      <summary>在 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 中注册 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />。 如果未指定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />，将使用自动地址选择，并使用由 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> 属性指定的端口值。</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性设置为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">之前已经对此对象调用了 Dispose()。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">已注册指定的 <see cref="T:System.Net.PeerToPeer.PeerName" />。 必须使用 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> 方法来更新注册。 指定的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> 不归远程对等方所有。 未指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 或 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" />；二者中至少需要提供一个。 消息或数据元素无效。 或者，未设置 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />，并且未指定数据块或 <see cref="T:System.Net.IPEndPoint" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
      <summary>从注册由 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性指定的对等名称的所有群中取消注册该对等名称。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性尚未注册。 使用空构造函数构造 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 对象时，会发生这种情况。 必须在调用 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> 之前在此实例中填充 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性。</exception>
      <exception cref="T:System.ObjectDisposedException">之前已经对此对象调用了 Dispose()。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 实例所需的数据。</summary>
      <param name="info">包含与 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 实例关联的序列化数据。</param>
      <param name="context">包含与 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 实例关联的序列化流的目标。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
      <summary>更新向特定 <see cref="T:System.Net.PeerToPeer.Cloud" /> 注册的节点的 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />。 将使用属性中指定的信息执行更新。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性设置为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性尚未注册。 只有在一个或多个群中注册由 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性指定的对等名称之后，才能调用 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> 方法。 在注册对应的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 以后，由 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 属性指定的对等名称已发生更改。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">不能注册已经释放的对象。</exception>
      <exception cref="T:System.ArgumentNullException">已把 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 属性设置为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
      <summary>获取或设置一个值，该值指定当遍历对等网格或 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 时是否使用自动终结点选择。</summary>
      <returns>如果使用自动终结点选择，则为 True；如果使用其他某个方法来确定终结点，则为 false。 默认值为 true。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerNameResolver">
      <summary>指定使用 PNRP 命名空间提供程序 API 协议将 <see cref="T:System.Net.PeerToPeer.PeerName" /> 解析为 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 的值。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.#ctor">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> 类的一个新默认实例。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)">
      <summary>在引发 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件后返回对等解析数据。</summary>
      <param name="e">包含由 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件返回的数据的 <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)">
      <summary>当引发 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 事件时，返回对等解析进度数据。</summary>
      <param name="e">包含由 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 事件返回的对等名称解析进度信息的 <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
      <summary>解析调用对等方已知的所有群中指定的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</summary>
      <returns>包含与指定的对等名称关联的所有对等名称记录（表示为 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象）的 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />。 对于不安全的对等名称，可由不同的用户在同一个 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中注册同一个 <see cref="T:System.Net.PeerToPeer.PeerName" />，并将其与不同的终结点关联。</returns>
      <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerName" /> 参数设置为 null。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">指定的对等名称无法解析。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
      <summary>解析调用对等方已知的所有群中的指定对等名称，并返回不超过指定数目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。</summary>
      <returns>大小小于或等于 <paramref name="maxRecords" /> 条目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />。 此集合包含与解析的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 关联的对等名称记录。</returns>
      <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
      <param name="maxRecords">要从所有 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中获取提供的 <paramref name="peerName" /> 的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象的最大数目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerName" /> 参数设置为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxRecords" /> 参数小于或等于零。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">提供的对等名称无法解析。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
      <summary>解析指定 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中的指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />。</summary>
      <returns>包含与指定的对等名称关联的所有对等名称记录（表示为 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象）的 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />。 对于不安全的对等名称，可由不同的用户在同一个 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中注册同一个 <see cref="T:System.Net.PeerToPeer.PeerName" />，并将其与不同的终结点关联。</returns>
      <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
      <param name="cloud">要在其中解析对等名称的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerName" /> 参数设置为 null。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">提供的对等名称无法解析。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
      <summary>解析指定 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中的指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />，并返回不超过指定数目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。</summary>
      <returns>大小小于或等于 <paramref name="maxRecords" /> 条目的 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />。 此集合包含与解析的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 关联的对等名称记录。</returns>
      <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
      <param name="cloud">要在其中解析 <paramref name="peerName" /> 的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</param>
      <param name="maxRecords">要从指定群中获取指定 <paramref name="peerName" /> 的最大对等名称记录对象数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerName" /> 参数设置为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxRecords" /> 参数小于或等于零。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">提供的对等名称无法解析。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
      <summary>在调用对等方已知的所有群中开始指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的异步对等名称解析操作，并返回不超过 <paramref name="maxRecords" /> 个对等名称条目。</summary>
      <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
      <param name="maxRecords">要为 Peer Name 获取的最大记录数。</param>
      <param name="userState">一个用户定义对象，其中包含解析操作的相关信息。</param>
      <exception cref="T:System.ArgumentNullException">要设置为 null 的 <paramref name="peerName" /> 和 <paramref name="userState" /> 参数或二者之一。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxRecords" /> 参数小于或等于零。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
      <summary>在指定 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中开始指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的异步对等名称解析操作。解析操作将为指定的对等名称解析不超过 <paramref name="maxRecords" /> 个条目。</summary>
      <param name="peerName">要解析的 <paramref name="peerName" />。</param>
      <param name="cloud">要在其中解析 <paramref name="peerName" /> 的 <paramref name="cloud" />。</param>
      <param name="maxRecords">要从 <paramref name="cloud" /> 中为 <paramref name="peerName" /> 获取的最大记录数。</param>
      <param name="userState">一个用户定义的对象，其中包含对等名称解析操作的相关信息。</param>
      <exception cref="T:System.ArgumentNullException">要设置为 null 的 <paramref name="peerName" /> 和 <paramref name="userState" /> 参数或二者之一。</exception>
      <exception cref="T:System.ArgumentException">一个或多个提供的参数无效。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">成功完成此操作至少需要一个事件处理程序。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxRecords" /> 参数小于或等于零。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
      <summary>在指定 <see cref="T:System.Net.PeerToPeer.Cloud" /> 中开始指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的异步对等名称解析操作。</summary>
      <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
      <param name="cloud">要在其中解析 <paramref name="peerName" /> 的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</param>
      <param name="userState">一个用户定义的 <see cref="T:System.Object" />，其中包含对等名称解析操作的相关信息。</param>
      <exception cref="T:System.ArgumentNullException">要设置为 null 的 <paramref name="peerName" /> 和 <paramref name="userState" /> 参数或二者之一。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
      <summary>在调用对等方已知的所有群中开始指定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 的异步对等名称解析操作。</summary>
      <param name="peerName">要解析的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</param>
      <param name="userState">一个用户定义的对象，其中包含对等名称解析操作的状态信息。</param>
      <exception cref="T:System.ArgumentNullException">要设置为 null 的 <paramref name="peerName" /> 和 <paramref name="userState" /> 参数或二者之一。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
      <summary>取消指定的异步对等名称解析请求。</summary>
      <param name="userState">为启动解析操作的 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 方法实例提供的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userState" /> 参数不能为 null。</exception>
    </member>
    <member name="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted">
      <summary>当特定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 的对等名称解析请求完成后，将终止 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件。</summary>
    </member>
    <member name="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged">
      <summary>只要在特定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作的响应中发现 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象，就终止此事件。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerNameType">
      <summary>定义要创建的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的类型。 对等名称可以是安全的，也可以是不安全的。 安全的对等名称提供名称所有权证明。 不安全的对等名称没有关联的标识。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Net.PeerToPeer.PeerNameType.Secured">
      <summary>使用当前用户的标识创建一个安全 <see cref="T:System.Net.PeerToPeer.PeerName" />。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PeerNameType.Unsecured">
      <summary>使用当前用户的标识创建一个不安全的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</summary>
    </member>
    <member name="T:System.Net.PeerToPeer.PeerToPeerException">
      <summary>表示当对等基础结构引发错误时所引发的异常。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.#ctor">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 类的一个新默认实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 类的新实例。</summary>
      <param name="info">引用包含反序列化对象所需的数据的对象。</param>
      <param name="context">为反序列化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 数据提供途径的上下文。 也称为序列化数据的源。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String)">
      <summary>使用提供的消息字符串初始化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 类的新实例。</summary>
      <param name="message">提供发生异常的原因的错误消息。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String,System.Exception)">
      <summary>使用提供的消息字符串和异常来初始化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 类的新实例。</summary>
      <param name="message">解释 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 原因的错误消息。</param>
      <param name="innerException">导致当前 <see cref="T:System.Exception" /> 的异常实例。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口并返回序列化对等对象所需的数据。</summary>
      <param name="info">包含序列化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 对象所需的信息。</param>
      <param name="context">包含与 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 对象关联的序列化流的目标。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PeerToPeerException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 实例所需的数据。</summary>
      <param name="info">包含序列化 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 实例所需的信息。</param>
      <param name="context">包含与 <see cref="T:System.Net.PeerToPeer.PeerToPeerException" /> 实例关联的序列化流的目标。</param>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermission">
      <summary>指定在 <see cref="N:System.Net.PeerToPeer" /> 对象权限中使用的值。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用提供的初始权限状态初始化 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 类的新实例。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 枚举中的一个值。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Copy">
      <summary>创建并返回当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 的一个相同副本。</summary>
      <returns>具有 IPermission 接口的对象，其实例包含 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 的当前实例的副本。</returns>
      <exception cref="T:System.ArgumentException">该参数不是一个有效的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 元素。 不支持该参数的版本号。</exception>
      <exception cref="T:System.ArgumentNullException">该参数是一个 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
      <summary>用 XML 编码重新构造具有指定状态的安全对象。</summary>
      <param name="e">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentException">该参数不是一个有效的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 元素。 不支持该参数的版本号。</exception>
      <exception cref="T:System.ArgumentNullException">该参数是一个 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
      <summary>创建并返回一个权限，该权限是当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 与指定权限的交集。</summary>
      <returns>一个新权限，它表示当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 与指定权限的交集。 如果交集为空，则此新权限是一个 null 引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="target">与当前权限 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> 的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException">目标参数不是一个 null 引用（在 Visual Basic 中为 Nothing），并且不是与当前权限相同的类的实例。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>确定当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是否为指定权限的子集。</summary>
      <returns>如果当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是指定权限的子集，则为 True；否则为 false。</returns>
      <param name="target">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException">目标参数不是一个 null 引用（在 Visual Basic 中为 Nothing），并且不是与当前权限相同的类的实例。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
      <summary>返回一个值，该值指定当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是否不受限制。</summary>
      <returns>如果当前权限是无限制的，则为 True；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.ToXml">
      <summary>创建 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 及其当前状态的 XML 编码。</summary>
      <returns>一个 <see cref="T:System.Security.SecurityElement" /> 对象，该对象包含权限的 XML 编码（包括任何状态信息）。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
      <summary>创建一个权限，该权限是当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 与指定权限的并集。</summary>
      <returns>一个新权限，它表示当前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 与指定权限的 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />。</returns>
      <param name="target">将与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 参数无效。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <summary>允许对使用声明安全性应用到代码中的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 进行安全操作。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>用指定的 <see cref="T:System.Security.Permissions.SecurityAction" /> 初始化 <see cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" /> 类的新实例。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission">
      <summary>创建并返回一个新的 <see cref="T:System.Security.IPermission" />。</summary>
      <returns>一个新的 <see cref="T:System.Security.IPermission" /> 对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpScope">
      <summary>指定 PNRP 群的不同范围。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.All">
      <summary>允许所有 IP 地址向 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> 进行注册。 任一范围和所有范围之间没有任何区别。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.Global">
      <summary>该范围是全局范围；允许所有有效的 IP 地址向 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> 进行注册。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.LinkLocal">
      <summary>该范围是链接本地范围；只有为本地局域子网定义的 IP 地址才能向 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> 进行注册。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.SiteLocal">
      <summary>该范围是站点本地范围；只有为站点定义的 IP 地址才能向 PNRP 进行注册。</summary>
    </member>
    <member name="T:System.Net.PeerToPeer.ResolveCompletedEventArgs">
      <summary>与 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> 事件结合使用，当特定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的解析请求完成时，就会终止此事件。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecordCollection,System.Exception,System.Boolean,System.Object)">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> 类的新实例。</summary>
      <param name="peerNameRecordCollection">与解析的对等名称关联的集合。</param>
      <param name="error">如果发生错误，则返回异常。</param>
      <param name="canceled">如果 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver" /> 操作被取消，则为 True；否则为 False。</param>
      <param name="userToken">启动 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作时指定的用户标记。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection">
      <summary>获取要解析的 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 对象。</summary>
      <returns>要解析的 <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> 对象就是在特定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作的响应中发现的对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
      <summary>与通知 <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> 事件结合使用。只要在特定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作的响应中发现 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象，就终止此事件。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> 类的新实例。</summary>
      <param name="peerNameRecord">将要查找的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。</param>
      <param name="userToken">启动 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作时提供的唯一用户状态对象。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord">
      <summary>获取要解析的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 对象。</summary>
      <returns>在特定 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 的 <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作的响应中发现的对等名称记录对象。 除非显式指定，否则对于引用类型，所有属性的默认值均为 null；对于 int 类型的属性，默认值为零 (0)。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs">
      <summary>在发生 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged" /> 事件时向回调方法提供限定信息。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerApplication">
      <summary>获取引发的事件所针对的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
      <returns>已更新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerChangeType">
      <summary>获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 所发生的更改类型。</summary>
      <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> 枚举值，指定对 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 执行的更改类型。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerContact">
      <summary>获取与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
      <returns>与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs.PeerEndPoint">
      <summary>获取已更改 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 信息的终结点。</summary>
      <returns>包含已更改应用程序信息的终结点的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。 除非显式指定，否则对于引用类型，所有属性的默认值均为 null；对于 int 类型的属性，默认值为零 (0)。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.ContactManager">
      <summary>表示持久保存在 Windows 通讯簿中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.AddContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>将指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 添加到本地对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中。</summary>
      <param name="peerContact">要添加到 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。</param>
      <exception cref="T:System.ArgumentException">由 <paramref name="peerContact" /> 指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 已经存在。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerContact" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放指定的 <paramref name="peerContact" />。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">由 <paramref name="peerContact" /> 指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 未能基于其序列化的 XML 格式重建。 无法将本地对等方添加到正在构造的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 实例中。</exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.ApplicationChanged">
      <summary>每当与 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 发生更改时引发。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放调用对象。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <summary>为指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象创建一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。</summary>
      <returns>所指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 的一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。</returns>
      <param name="peerNearMe">要与新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerNearMe" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">未能到达传入 <paramref name="peerNearMe" /> 的远程对等方的联系人管理器，或者未能从其中读取该联系人。 传入 <paramref name="peerNearMe" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例未设置任何终结点。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)">
      <summary>为指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象创建一个联系人实例。</summary>
      <param name="peerNearMe">要与新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。</param>
      <param name="userToken">一个用户定义的 <see cref="T:System.Object" />，其中包含与 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactAsync(System.Net.PeerToPeer.Collaboration.PeerNearMe,System.Object)" /> 操作有关的信息。 它将被传递给异步操作的回调，以作标识之用。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="userToken" /> 已存在且正在使用。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerNearMe" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例未设置任何终结点。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted">
      <summary>每当 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact(System.Net.PeerToPeer.Collaboration.PeerNearMe)" /> 方法完成时引发。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放调用对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>从本地对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中移除指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
      <param name="peerContact">要从 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 移除的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerContact" /> 为 null。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact(System.Net.PeerToPeer.PeerName)">
      <summary>从本地对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中移除与指定 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
      <param name="peerName">与要从 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中移除的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />。</param>
      <exception cref="T:System.ArgumentException">未能在联系人管理器中找到与 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerName" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">之前已对此对象调用 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose" />，因而无法将其用于未来的操作。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="Overload:System.Net.PeerToPeer.Collaboration.ContactManager.DeleteContact" /> 操作。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.Dispose">
      <summary>释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 对象使用的所有资源。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact(System.Net.PeerToPeer.PeerName)">
      <summary>返回具有指定 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</summary>
      <returns>与所提供的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</returns>
      <param name="peerName">与要检索的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerName" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">在 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中找不到联系人。 无法获取具有提供的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 的联系人。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts">
      <summary>返回一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />，其中包含远程对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中的所有联系人。</summary>
      <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />，其中包含远程对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中的所有联系人。 如果联系人管理器为空，则返回一个大小为零 (0) 的集合。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">此方法在尝试枚举此对等联系人集合中的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 时返回了无效的值。</exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact">
      <summary>获取表示本地对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
      <returns>表示本地对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。</returns>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.NameChanged">
      <summary>每当与 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 发生更改时引发。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放调用对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.ObjectChanged">
      <summary>每当联系人注册的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 对象中有对象发生更改时引发。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 对象。</exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged">
      <summary>每当 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 在 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中的状态发生更改时引发。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged">
      <summary>在订阅的联系人列表发生更改时引发。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放此对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ContactManager.SynchronizingObject">
      <summary>设置此属性值后，将在创建特定 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" /> 的线程上为因异步操作而未激发的所有事件回调关联的事件处理程序。</summary>
      <returns>实现 <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 接口的对象，此对象在创建它的线程上供该事件处理程序同步类型的实例使用。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放调用对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>更新与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的数据。</summary>
      <param name="peerContact">要更新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</param>
      <exception cref="T:System.ArgumentException">在 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 中找不到 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerContact" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.UpdateContact(System.Net.PeerToPeer.Collaboration.PeerContact)" /> 操作。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs">
      <summary>在发生 <see cref="E:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContactCompleted" /> 事件时向回调方法提供限定信息。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.CreateContactCompletedEventArgs.PeerContact">
      <summary>获取引发的事件所针对的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
      <returns>与此事件关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs">
      <summary>在发生 <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" /> 事件时向回调方法提供限定信息。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs.InviteResponse">
      <summary>获取对邀请操作的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />。</summary>
      <returns>对邀请的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs">
      <summary>在发生 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged" /> 事件时向回调方法提供限定信息。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.Name">
      <summary>获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 的新 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" />。</summary>
      <returns>获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 的新 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.PeerContact">
      <summary>获取与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
      <returns>与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs.PeerEndPoint">
      <summary>获取与 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</summary>
      <returns>与 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs">
      <summary>在发生 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerObject.ObjectChanged" /> 事件时向回调方法提供限定信息。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerChangeType">
      <summary>获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />，它指定 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 或 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 所发生的更改类型。</summary>
      <returns>指定已发生的更改类型的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerContact">
      <summary>获取与已更改对象信息的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
      <returns>与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 信息已更改的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。如果该终结点没有关联的联系人，则返回 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerEndPoint">
      <summary>获取已更改对象信息的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</summary>
      <returns>已更改 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 信息的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs.PeerObject">
      <summary>获取已添加、删除或更新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</summary>
      <returns>已添加、删除或更新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.Peer">
      <summary>此类表示远程对等方。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 类型的新实例。</summary>
      <param name="serializationInfo">引用包含反序列化此实例所需的数据的对象。</param>
      <param name="streamingContext">为反序列化数据提供途径的上下文。 也称为序列化数据的源。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose">
      <summary>释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象使用的所有资源。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象使用的非托管资源，还可以选择释放托管资源。</summary>
      <param name="disposing">设置为 true 可释放托管资源和非托管资源；设置为 false 只能释放非托管资源。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)">
      <summary>对当前的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 和指定对等方执行区分大小写的比较。</summary>
      <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 实例与此对等实例具有相同的 <see cref="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" />，则返回 true；否则返回 false。 如果对等参数为 null，此方法也会返回 false。</returns>
      <param name="other">要与此实例进行比较的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 实例。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化目标 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的目标。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects">
      <summary>从本地缓存中获取数据对象的集合。</summary>
      <returns>由此实例指定的对等方或终结点的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 集合。</returns>
      <exception cref="T:System.InvalidOperationException">调用方未订阅终结点或尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">此方法因基础对等方协作基础结构中的错误而无法完成。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)">
      <summary>从 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 中获取与提供的 <see cref="T:System.Guid" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象。</summary>
      <returns>与所提供的 <see cref="T:System.Guid" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象。 如果未找到对象，则返回一个大小为零 (0) 的集合。</returns>
      <param name="objectId">要从集合中检索的 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象的 <see cref="T:System.Guid" /></param>
      <exception cref="T:System.ArgumentNullException">对象 ID 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">调用方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 或尚未对其调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">从对等方获取对象信息时出错。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 的可用状态信息。</summary>
      <returns>如果存在可用的终结点，则返回一个包含其状态信息的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 对象；否则返回 null。</returns>
      <param name="peerEndPoint">要检索其状态信息的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="peerEndPoint" /> 未包含有效的终结点。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerEndPoint" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">此对象已被释放，无法用于当前的对等操作。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">从对等方中检索状态信息时出错。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.Invite">
      <summary>向 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 发送邀请以启动特定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
      <returns>从收到邀请的对等方发出的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />。</returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">邀请过程中发生了错误。 当前执行的应用程序未在对等方协作基础结构中注册。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <summary>向 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 发送邀请以启动特定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
      <returns>从收到邀请的对等方发出的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />。</returns>
      <param name="applicationToInvite">要为其发送邀请的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</param>
      <param name="message">要随应用程序邀请一起发送至远程对等方的消息。此消息不能超过 255 个 Unicode 字符。</param>
      <param name="invitationData">要与邀请关联的用户定义数据 Blob。其大小不能超过 16,384 字节。</param>
      <exception cref="T:System.ArgumentException">该应用程序并不是为协作注册的。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="invitationData" /> 大于 16,384 字节。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">邀请过程中发生了错误。 当前执行的应用程序未在对等方协作基础结构中注册。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)">
      <summary>开始异步邀请操作，此操作将向 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 发送邀请，以启动特定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
      <param name="applicationToInvite">要为其发送邀请的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</param>
      <param name="message">要随应用程序邀请一起发送至远程对等方的消息。 此消息的最大大小为 255 个 Unicode 字符。</param>
      <param name="invitationData">要与邀请关联的用户定义数据 Blob。其大小不能超过 16,384 字节。</param>
      <param name="userToken">要传递给异步操作回调以用作标识的用户定义的对象。 此必选参数在当前执行的所有异步邀请操作中必须是唯一的。</param>
      <exception cref="T:System.ArgumentException">该应用程序未在协作基础结构中注册。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userToken" /> 为null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="invitationData" /> 大于 16,384 字节。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">邀请过程中发生了错误。 当前执行的应用程序未在协作基础结构中注册。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)">
      <summary>开始异步邀请操作，此操作将向 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 发送邀请，以启动特定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
      <param name="userToken">要传递给异步操作回调以用作标识的用户定义的对象。 此必选参数在当前执行的所有异步邀请操作中必须是唯一的。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userToken" /> 为null.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">邀请过程中发生了错误。 当前执行的应用程序未在协作基础结构中注册。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)">
      <summary>取消使用 <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" /> 方法发送的邀请。</summary>
      <param name="userToken">要传递给 <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" /> 操作回调以用作标识的用户定义的对象。 此必选参数在当前执行的所有异步邀请操作中必须是唯一的。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userToken" /> 参数不能为 null。</exception>
      <exception cref="T:System.InvalidOperationException">不存在尚未处理的异步邀请。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted">
      <summary>在完成对远程对等方的邀请过程时引发。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.Peer.IsOnline">
      <summary>获取一个值，该值指定 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 当前是否处于“联机状态”。</summary>
      <returns>如果 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 在与之关联的所有终结点上都处于联机状态，则返回 true；否则返回 false。 除非指定，否则此属性的默认值为 null。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)">
      <summary>引发 <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" /> 事件。</summary>
      <param name="e">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 对象，其中包含要传递给与 <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" /> 事件关联的委托的事件数据。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints">
      <summary>获取与 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />。</summary>
      <returns>与 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject">
      <summary>设置此属性值后，将在创建特定 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" /> 的线程上为因异步操作而未激发的所有事件回调关联的事件处理程序。</summary>
      <returns>实现 <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 接口的对象，此对象在创建它的线程上供该事件处理程序同步类型的实例使用。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放调用对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类实例。 派生类型必须调用基类型 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">序列化的目标。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.Peer.ToString">
      <summary>返回一个 <see cref="T:System.String" />，它表示与 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 关联的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />。</summary>
      <returns>表示 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> 的 <see cref="T:System.String" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerApplication">
      <summary>表示可在对等方协作基础结构中使用的应用程序。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 类型的一个新默认实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Guid,System.String,System.Byte[],System.String,System.String,System.Net.PeerToPeer.Collaboration.PeerScope)">
      <summary>使用提供的应用程序 ID、说明、范围和数据元素初始化一个新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例。</summary>
      <param name="id">一个用户指定的 <see cref="T:System.Guid" />，用于标识 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</param>
      <param name="description">一个关于对等应用程序的 <see cref="T:System.String" /> 说明。</param>
      <param name="data">一个要与对等应用程序关联的二进制数据对象，例如小图像。</param>
      <param name="path">对等应用程序的本地文件系统路径。</param>
      <param name="commandLineArgs">用于启动对等应用程序的命令行参数。</param>
      <param name="peerScope">将在其中注册应用程序以进行对等方协作的范围。</param>
      <exception cref="T:System.ArgumentException">二进制数据对象的长度不能小于 1 或大于 16k。 将 <paramref name="id" /> 设置为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化所需的数据初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 类型的新实例。</summary>
      <param name="serializationInfo">与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="streamingContext">与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的序列化目标。</param>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged">
      <summary>每当已订阅终结点上的远程对等方添加、更新或删除 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 时，都将引发此事件。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.CommandLineArgs">
      <summary>获取或设置要在启动 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 时使用的命令行参数。</summary>
      <returns>一个 <see cref="T:System.String" />，表示要在启动 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 时使用的应用程序特定的命令行参数。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Data">
      <summary>获取或设置与当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例关联的数据。</summary>
      <returns>
        <see cref="T:System.Byte" /> 数据的数组，其中包含要与对等应用程序关联的二进制对象。 它通常是一个小图像或 XML Blob。</returns>
      <exception cref="T:System.ArgumentException">此二进制数据对象的大小小于 0 字节或大于 4,096 字节。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description">
      <summary>获取或设置一个描述 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 的 Unicode <see cref="T:System.String" />。</summary>
      <returns>一个描述应用程序的 <see cref="T:System.String" /> 值。 除非指定，否则此属性的默认值为 null。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose">
      <summary>释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象使用的资源。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象使用的非托管资源，并可选择释放托管资源。</summary>
      <param name="disposing">设置为 true 可释放托管资源和非托管资源；设置为 false 只能释放非托管资源。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Net.PeerToPeer.Collaboration.PeerApplication)">
      <summary>将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 与指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例进行比较。</summary>
      <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例具有匹配的数据，则返回 true；否则返回 false。 如果 <paramref name="other" /> 为 null，此方法也会返回 false。</returns>
      <param name="other">要进行相等性测试的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例。</param>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object)">
      <summary>将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 与指定的 <see cref="T:System.Object" /> 进行比较。</summary>
      <returns>如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 等于指定的对象实例，则返回 true；否则返回 false。</returns>
      <param name="obj">要进行相等性测试的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Object" /> 已被释放。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.Equals(System.Object,System.Object)">
      <summary>确定指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象是否被视为相等。</summary>
      <returns>如果指定的对象具有相同的全局唯一应用程序 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 和 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" />，则返回 true；否则返回 false。</returns>
      <param name="objA">要比较的第一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</param>
      <param name="objB">要比较的第二个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.GetHashCode">
      <summary>返回 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例的哈希代码。</summary>
      <returns>一个 32 位的有符号整数哈希代码，用于比较此类型的实例。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化目标 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的目标。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id">
      <summary>获取或设置与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 关联的用户定义的 <see cref="T:System.Guid" />。</summary>
      <returns>与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例关联的 <see cref="T:System.Guid" />。 除非指定，否则此属性的默认值为 null。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)">
      <summary>引发 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged" /> 事件。</summary>
      <param name="appChangedArgs">
        <see cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" /> 对象，其中包含要传递给 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerApplication.ApplicationChanged" /> 事件的委托的数据。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path">
      <summary>获取或设置一个路径，该路径指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 可执行文件在本地文件系统中的位置。</summary>
      <returns>一个表示文件路径的 <see cref="T:System.String" />。 除非显式指定，否则此属性的默认值为 null。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.PeerScope">
      <summary>获取或设置在其中注册 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 以进行协作的范围。</summary>
      <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> 对象，指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 的协作范围。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplication.SynchronizingObject">
      <summary>设置此属性值后，将在创建特定 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" /> 的线程上为因异步操作而未激发的所有事件回调关联的事件处理程序。</summary>
      <returns>实现 <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 接口的对象，此对象在创建它的线程上供该事件处理程序同步类型的实例使用。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放调用对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口并返回序列化目标 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 所需的数据。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context">此序列化的目标。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplication.ToString">
      <summary>返回一个字符串，其中包含 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 和 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" />。</summary>
      <returns>一个字符串，它包含 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 和 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Description" />，并用空格分隔二者。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection">
      <summary>表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 元素的容器。 此类型的实例由 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" /> 静态方法返回。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerApplication)">
      <summary>在 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 的指定索引或键处插入一个新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 元素。</summary>
      <param name="index">待替换元素的从零开始的索引</param>
      <param name="item">位于指定索引处的元素的新值</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerApplication)">
      <summary>替换指定索引处的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
      <param name="index">待替换元素的从零开始的索引。</param>
      <param name="item">位于指定索引处的元素的新值。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection.ToString">
      <summary>返回一个 <see cref="T:System.String" />，它表示每个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象的当前值（用逗号分隔）。</summary>
      <returns>一个 <see cref="T:System.String" />，表示每个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 在 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 中的当前值（用逗号分隔）。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo">
      <summary>表示为响应对等方协作邀请而启动的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 所需的启动信息。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Data">
      <summary>获取或设置与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 邀请关联的应用程序定义的二进制数据。</summary>
      <returns>一个字节数据，其中包含与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 邀请关联的数据。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Message">
      <summary>获取或设置一条与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 邀请的响应关联的消息。</summary>
      <returns>一条与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 邀请的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 关联的文本消息。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerApplication">
      <summary>获取或设置发送邀请时所针对的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
      <returns>发送 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 邀请时所针对的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerContact">
      <summary>获取或设置发送邀请的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
      <returns>发送邀请的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.PeerEndPoint">
      <summary>获取或设置发送 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 邀请的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</summary>
      <returns>发送邀请的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType">
      <summary>指定要为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 或 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 注册执行的注册类型。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType.AllUsers">
      <summary>将为应用程序主机的所有对等方注册 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 或 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType.CurrentUser">
      <summary>将仅为与调用对等方关联的用户注册应用程序或对象。</summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerChangeType">
      <summary>指定对等方已发生的更改类型。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerChangeType.Added">
      <summary>已添加一个对等方对象、终结点或应用程序。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerChangeType.Deleted">
      <summary>已删除一个对等方对象、终结点或应用程序。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerChangeType.Updated">
      <summary>已更新一个对等方对象、终结点或应用程序。</summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration">
      <summary>与对等方协作基础结构进行交互。 很多核心协作方案都是从此类着手的。</summary>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo">
      <summary>获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" /> 对象，该对象包含应用程序在远程对等方的协作请求下启动时所需的信息。</summary>
      <returns>如果应用程序是在邀请下启动的，将返回一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" /> 对象（其中既包含有关发送应用程序邀请的对等方的信息，也包含邀请本身）；否则将返回 null。此属性的默认值为 null。</returns>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager">
      <summary>获取包含远程对等方的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象的持久性存储区。</summary>
      <returns>包含远程对等方的所有对等联系人对象的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 对象。 此属性的默认值为 null。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)">
      <summary>对与调用对等方关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 取消注册。</summary>
      <param name="peerObject">要取消注册的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerObject" /> 参数不能为 null。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)" /> 操作。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications">
      <summary>获取在本地计算机上注册的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />，其中包含在本地计算机上注册的所有应用程序。 如果未找到应用程序，则返回一个大小为零 (0) 的集合。</returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">此方法在尝试向此对等方枚举已注册的应用程序时返回了无效的值。 请确保所有应用程序都具有有效的注册表值。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)">
      <summary>获取在本地计算机上为指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> 注册的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象的集合。</summary>
      <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />，其中包含在本地计算机上注册且属于指定 <paramref name="type" /> 的所有应用程序。 如果未找到应用程序，则返回一个大小为零 (0) 的集合。</returns>
      <param name="type">要返回的指定应用程序的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="type" /> 参数未设置为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> 枚举中的已知值。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">此方法在尝试向此对等方枚举已注册的应用程序时返回了无效的值。 请确保所有应用程序都具有有效的注册表值。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects">
      <summary>获取调用对等方在此计算机的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 基础结构中注册的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。</summary>
      <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" />，其中包含调用对等方在本地计算机的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 基础结构中注册的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。 如果未在本地计算机上发现已注册的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例，将返回一个大小为零 (0) 的集合。</returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">此方法在尝试枚举所有可用的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例时返回了无效的值。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe">
      <summary>返回一个集合，其中包含当前在调用对等方的网络子网中登录的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 终结点。</summary>
      <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" />，其中包含当前在“网络邻居”范围中登录的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 终结点。 如果未在子网上发现对等方，将返回一个大小为零 (0) 的集合。</returns>
      <exception cref="T:System.InvalidOperationException">该对等方尚未登录“网络邻居”范围。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">此方法在尝试枚举所有已知的网络邻居终结点时返回了无效的值。</exception>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged">
      <summary>当本地主机上的本地对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 中有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 发生更改时引发。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName">
      <summary>获取或设置与调用对等方关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 的名称。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含与调用对等方的终结点（作为 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" /> 属性提供）关联的名称。 此属性的默认值为 null。</returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法设置 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged">
      <summary>当本地对等方所在的本地主机上的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 名称更改时引发。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged">
      <summary>在本地主机上，本地对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 中有一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 已发生更改。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged">
      <summary>在本地主机上，本地对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 已更改。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo">
      <summary>获取或设置调用对等方在 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 基础结构中的状态。</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />，其中包含为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 会话注册的调用对等方的状态信息。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 无法指定null</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" /> 正处于脱机状态 无法设置 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /></exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)">
      <summary>为与调用对等方进行协作会话注册指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
      <param name="application">要为其在关联范围（全局、本地和链接本地）内注册调用对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</param>
      <param name="type">要执行的注册类型。可以仅为调用对等方注册应用程序，也可以为使用该计算机的所有对等方注册应用程序。</param>
      <exception cref="T:System.ArgumentException">传递给 <paramref name="application" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path" /> 属性为 null。 所提供的对等应用程序实例与某个已注册的应用程序具有相同的全局唯一 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />。必须取消对现有注册的注册，然后才能使用提供的标识符注册新的应用程序。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="application" /> 和 <paramref name="type" /> 参数不能为 null。这两个参数必须全部指定。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">type 参数未设置为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> 枚举中的已知值。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">在调用方登录基础结构之前，无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" /> 操作。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)">
      <summary>注册与调用对等方关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</summary>
      <param name="peerObject">要注册的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</param>
      <exception cref="T:System.ArgumentException">已注册该对象</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 不能为null. <see cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.Id" /> 不能为null.</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">未能完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" /> 操作。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)">
      <summary>使对等方以指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> 登录协作基础结构。</summary>
      <param name="peerScope">对等方加入 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 活动时使用的范围。</param>
      <exception cref="T:System.ArgumentException">将 <paramref name="peerScope" /> 设置为 <see cref="F:System.Net.PeerToPeer.Collaboration.PeerScope.None" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="peerScope" /> 参数包含无效的枚举值。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">未能完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" /> 操作。</exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope">
      <summary>获取调用对等方可在其中发布状态、功能和对象信息的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />。</summary>
      <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> 对象，指定调用对等方将参与的范围。 此属性的默认值为 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)">
      <summary>使对等方注销指定的范围。</summary>
      <param name="peerScope">由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> 指定的范围枚举。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="peerScope" /> 参数包含无效的枚举值。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">未能完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" /> 操作。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject">
      <summary>获取或设置所有事件处理程序的事件处理程序回调对象。</summary>
      <returns>一个已实现 <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 的对象，将用于应用程序线程同步。 此属性的默认值为 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)">
      <summary>从 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 基础结构中取消对指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 的注册。</summary>
      <param name="application">要为调用对等方取消注册的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</param>
      <param name="type">要为调用对等方或计算机上存在的所有对等方执行的取消注册的类型。</param>
      <exception cref="T:System.ArgumentException">指定应用程序的全局唯一 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或为空。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="application" /> 或 <paramref name="type" /> 参数设置为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="type" /> 参数未设置为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> 中的已知值。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">未能完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" /> 操作。</exception>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
      <summary>指定用于定义 <see cref="N:System.Net.PeerToPeer.Collaboration" /> 对象权限或在这些权限中使用的值。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 的新实例。 调用构造函数时，将传递此实例的初始 <see cref="T:System.Security.Permissions.PermissionState" />。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 枚举中的一个值。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy">
      <summary>创建并返回当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 的一个副本。</summary>
      <returns>一个 <see cref="T:System.Object" />，其中包含当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 实例的一个副本。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)">
      <summary>表示编码安全对象的 XML 对象模型。</summary>
      <param name="e">用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentException">该参数不是有效的权限元素。 该参数不包含有效的类型或类。 不支持该参数的版本号。</exception>
      <exception cref="T:System.ArgumentNullException">该参数是一个 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)">
      <summary>创建并返回一个权限，该权限是当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 与指定 <paramref name="target" /> 权限的交集。</summary>
      <returns>一个新权限，表示当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 与指定 <paramref name="target" /> 权限的交集。 如果交集为空，则此新权限是一个 null 引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="target">要与当前权限求 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" /> 的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException">目标参数不是一个 null 引用（在 Visual Basic 中为 Nothing），并且不是与当前权限相同的类的实例。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>确定当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 是否为指定 <paramref name="target" /> 权限的子集。</summary>
      <returns>如果当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 是指定权限的子集，则为 True；否则为 false。</returns>
      <param name="target">将要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException">该参数是一个 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted">
      <summary>返回一个值，指定当前的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 是否不受限制。</summary>
      <returns>如果当前权限是无限制的，则为 True；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml">
      <summary>创建 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 及其当前状态的 XML 编码。</summary>
      <returns>权限的 XML 编码，包括任何状态信息。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)">
      <summary>创建一个权限，该权限是当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 与指定 <paramref name="target" /> 权限的并集。</summary>
      <returns>一个新权限，表示当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 与指定权限的 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />。</returns>
      <param name="target">将与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException">该参数是一个 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute">
      <summary>允许对使用声明安全性应用到代码中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 进行安全操作。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>用指定的 <see cref="T:System.Security.Permissions.SecurityAction" /> 初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" /> 类的新实例。</summary>
      <param name="action">指定一个 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission">
      <summary>创建并返回一个新的 <see cref="T:System.Security.IPermission" />。</summary>
      <returns>一个新的 <see cref="T:System.Security.IPermission" /> 对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerContact">
      <summary>表示用户已检索其扩展信息的对等方。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>未为此类定义公共构造函数。</summary>
      <param name="serializationInfo">与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="streamingContext">与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的序列化目标。</param>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged">
      <summary>只要与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的应用程序发生更改，就会引发此事件。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.Credentials">
      <summary>获取或设置由此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例标识的对等方的 X509Certificate（公钥）。</summary>
      <returns>由此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例标识的对等方的 X509Certificate（公钥）。 此属性的默认值为 null。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName">
      <summary>获取或设置一个字符串，该字符串表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的显示名称。</summary>
      <returns>一个 <see cref="T:System.String" />，表示此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的显示名称。 除非显式指定，否则对于引用类型，所有属性的默认值均为 null。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose(System.Boolean)">
      <summary>释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象使用的非托管资源，并可以选择释放托管资源。</summary>
      <param name="disposing">True 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress">
      <summary>获取或设置与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的电子邮件地址。</summary>
      <returns>一个 <see cref="T:System.Net.Mail.MailAddress" /> 对象，它包含与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的电子邮件地址。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 与指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例进行比较。</summary>
      <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例具有匹配的数据，则返回 true；否则返回 false。</returns>
      <param name="other">要进行相等性测试的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。</param>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object)">
      <summary>将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例与指定对象进行比较。</summary>
      <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例具有匹配的数据，则返回 true；否则返回 false。 如果传递的参数为 null，此方法也会返回 false。</returns>
      <param name="obj">将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例与指定对象进行比较。</param>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object,System.Object)">
      <summary>确定指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例是否被视为相等。</summary>
      <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例具有匹配的数据，则返回 true；否则返回 false。</returns>
      <param name="objA">要比较的第一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</param>
      <param name="objB">要比较的第二个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)">
      <summary>基于提供的 XML 数据创建一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例。</summary>
      <returns>一个字符串，表示用于编写 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例的 XML 对象模型。</returns>
      <param name="peerContactXml">用于重新构造 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException">参数不能为 null。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" /> 操作。 参数不是有效的 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications">
      <summary>检索远程对等方在本地缓存中注册的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</summary>
      <returns>本地缓存中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />。 如果未找到与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的应用程序，则返回一个大小为零 (0) 的集合。</returns>
      <exception cref="T:System.InvalidOperationException">调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。 调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Guid)">
      <summary>从本地缓存中获取具有指定 <see cref="T:System.Guid" /> 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象的集合。</summary>
      <returns>本地缓存中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />。 如果未找到具有指定 <paramref name="applicationId" /> 的任何应用程序，则返回一个大小为零 (0) 的集合。</returns>
      <param name="applicationId">要检索的对等应用程序的 <see cref="T:System.Guid" />。</param>
      <exception cref="T:System.InvalidOperationException">调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。 调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>获取与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />。</summary>
      <returns>与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />。 如果没有与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的应用程序，则返回一个大小为零 (0) 的集合。</returns>
      <param name="peerEndPoint">包含与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的终结点信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不能为 null。</exception>
      <exception cref="T:System.InvalidOperationException">调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。 调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)">
      <summary>获取与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />。</summary>
      <returns>与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象的集合。 如果未为 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 找到由该 ID 标识的应用程序，或者终结点的 ID 为 null 或无效，则返回一个大小为零 (0) 的集合。</returns>
      <param name="peerEndPoint">与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> 关联的终结点。</param>
      <param name="applicationId">包含与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的应用程序信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不能为 null。</exception>
      <exception cref="T:System.InvalidOperationException">调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。 调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" /> 操作。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetHashCode">
      <summary>返回 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例的哈希代码。</summary>
      <returns>32 位有符号整数哈希代码。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info">保存与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象关联的已序列化的数据。</param>
      <param name="context">包含与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象关联的序列化流的目标。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>获取由指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 注册并存储在本地缓存中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" />。</summary>
      <returns>与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" />。 如果没有与该终结点关联的应用程序，则返回一个大小为零 (0) 的集合。</returns>
      <param name="peerEndPoint">要从中检索对象的终结点。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不能为 null。</exception>
      <exception cref="T:System.InvalidOperationException">调用对等方未订阅与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。 调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> 操作。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)">
      <summary>获取指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 在由指定 <see cref="T:System.Guid" /> 标识的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 中注册的对等对象的集合。</summary>
      <returns>与指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" />。 如果没有与该终结点关联的应用程序，则返回一个大小为零 (0) 的集合。</returns>
      <param name="peerEndPoint">要从中检索对象的终结点。</param>
      <param name="objectId">要检索的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 的 <see cref="T:System.Guid" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不能为 null。</exception>
      <exception cref="T:System.InvalidOperationException">调用对等方未订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。 调用对等方尚未调用 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 方法。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" /> 操作。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite">
      <summary>发送加入由发送方发起的对等方协作的邀请。</summary>
      <returns>从收到该邀请的对等方发出的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">不存在当前应用程序的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <summary>发送加入由发送方发起的指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 的指定邀请。</summary>
      <returns>从收到该邀请的对等方发出的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />。</returns>
      <param name="applicationToInvite">要为其发送邀请的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</param>
      <param name="message">要随应用程序邀请一起发送至远程对等方的消息。</param>
      <param name="invitationData">要与邀请关联的用户定义数据 Blob。其大小不能超过 16,384 字节。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 不能为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">当前应用程序的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或为空。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>向特定终结点发送邀请，以使之加入与邀请发送方之间的对等方协作。</summary>
      <returns>从收到该邀请的对等终结点发出的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />。</returns>
      <param name="peerEndPoint">将收到邀请的终结点。</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 不能为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" /> 操作。 当前执行的应用程序未在对等方协作基础结构中注册。 由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象指定的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> 无效。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <summary>向指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 发送指定的邀请，以使之加入由发送方发起的指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 应用程序。</summary>
      <returns>从收到该邀请的对等方发出的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />。</returns>
      <param name="peerEndPoint">要向其发送邀请的终结点或远程对等方。</param>
      <param name="applicationToInvite">要为其发送邀请的应用程序。</param>
      <param name="message">要随应用程序邀请一起发送至远程对等方的消息。此消息不能超过 255 个 Unicode 字符。</param>
      <param name="invitationData">要与邀请关联的用户定义数据 Blob。其大小不能超过 16,384 字节。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="PeerEndPoint" /> 中的终结点不能为 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象不能为空。 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 和 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象不能为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">当前应用程序的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或为空。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)">
      <summary>开始执行异步邀请操作，以使指定的对等终结点加入由邀请发送方发起的指定协作 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
      <param name="applicationToInvite">要为其发送邀请的应用程序。</param>
      <param name="message">要随应用程序邀请一起发送至远程对等方的消息。此消息不能超过 255 个 Unicode 字符。</param>
      <param name="invitationData">要与邀请关联的用户定义数据 Blob。其大小不能超过 16,384 字节。</param>
      <param name="userToken">要传递给异步操作回调的用户定义的对象。 它还用于标识待取消的异步操作。 必须指定此参数，并且它在正在进行的所有异步邀请操作中都必须是唯一的。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="UserToken" /> 不能为 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象不能为null.</exception>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">当前应用程序的 <see cref="T:System.Guid" /> 不存在或为空。 终结点集合为空或 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Object)">
      <summary>开始执行异步邀请操作，以使指定的对等终结点加入由邀请发送方发起的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 应用程序。 邀请使用指定的 <see cref="T:System.Object" /> 进行标识。</summary>
      <param name="peerEndPoint">要向其发送邀请的终结点或远程对等方。</param>
      <param name="userToken">要传递给异步操作回调的用户定义的对象。 它还用于标识待取消的异步操作。 必须指定此参数，并且它在正在进行的所有异步邀请操作中都必须是唯一的。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="UserToken" /> 不能为null. <paramref name="peerEndPoint" /> 中的终结点不能为 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerEndPoint" /> 对象不能为null.</exception>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">当前应用程序的 <see cref="T:System.Guid" /> 不存在或为空。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.String,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerApplication,System.Object)">
      <summary>开始执行异步邀请操作，以使指定的 <paramref name="peerEndPoint" /> 加入由邀请发送方发起的指定协作 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />。</summary>
      <param name="peerEndPoint">要向其发送邀请的终结点或远程对等方。</param>
      <param name="message">要随应用程序邀请一起发送至远程对等方的消息。此消息不能超过 255 个 Unicode 字符。</param>
      <param name="invitationData">要与邀请关联的用户定义数据 Blob。其大小不能超过 16,384 字节。</param>
      <param name="applicationToInvite">要为其发送邀请的应用程序。</param>
      <param name="userToken">要传递给异步操作回调的用户定义的对象。 它还用于标识待取消的异步操作。 必须指定此参数，并且它在正在进行的所有异步邀请操作中都必须是唯一的。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="UserToken" /> 不能为 null。 由 <paramref name="peerEndPoint" /> 指定的终结点不能为 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 和 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象不能为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">当前应用程序的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或为空。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Object)">
      <summary>开始执行异步邀请操作，以使终结点加入由邀请发送方发起的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 应用程序。 邀请使用指定的 <see cref="T:System.Object" /> 进行标识。</summary>
      <param name="userToken">要传递给异步操作回调的用户定义的对象。 它还用于标识待取消的异步操作。 必须指定此参数，并且它在正在进行的所有异步邀请操作中都必须是唯一的。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="UserToken" /> 不能为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">当前应用程序的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> 不存在或为空。 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 不能为null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed">
      <summary>获取或设置一个值，该值指定当前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 是已订阅终结点，还是已取消对终结点的订阅。 此属性还会获取或设置另一个值，该值指定当前对等主机或宿主应用程序是已订阅此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />，还是已取消对它的订阅。</summary>
      <returns>如果此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 已订阅此终结点，则为 True；如果联系人尚未订阅或已取消订阅，则为 false。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.Nickname">
      <summary>获取或设置一个字符串，该字符串表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的 <paramref name="Nickname" />。</summary>
      <returns>一个 <see cref="T:System.String" />，表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的昵称。 此属性的默认值为 null。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged">
      <summary>只要与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 发生更改，就会发出此事件信号。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)">
      <summary>引发 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> 事件。</summary>
      <param name="appChangedArgs">要传递给与 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" /> 事件关联的委托的 <see cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)">
      <summary>在远程对等方添加、更新或移除 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 时引发 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" /> 事件。</summary>
      <param name="objChangedArgs">由 <see cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" /> 指定的对象更改类型。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)">
      <summary>在对等方的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 更改时引发 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> 事件。</summary>
      <param name="presenceChangedArgs">要传递给与 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> 事件关联的委托的 <see cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)">
      <summary>引发 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> 事件。</summary>
      <param name="e">与 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> 事件关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" /> 或 <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" /> 对象。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints">
      <summary>获取与此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />。</summary>
      <returns>与此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 集合。 此属性的默认值为 null。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName">
      <summary>获取或设置与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="T:System.Net.PeerToPeer.PeerName" />。</summary>
      <returns>一个 <see cref="T:System.String" />，表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的 <see cref="T:System.Net.PeerToPeer.PeerName" />。 除非显式指定，否则对于引用类型，所有属性的默认值均为 null。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged">
      <summary>只要 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的状态发生更改，就会引发此事件。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe">
      <summary>使调用对等方订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。这样，该对等方将收到未来与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 事件。</summary>
      <exception cref="T:System.InvalidOperationException">调用对等方未登录网络邻居。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" /> 操作。 失败可能是由于无法建立与对等方之间的 TCP 连接而导致的。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed">
      <summary>获取或设置一个值，该值指定是否将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 公开给特定的协作事件，这些事件与拥有此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象所驻留的 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 的对等方或应用程序关联。</summary>
      <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" /> 枚举值，指定是否将此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 公开给属于对等主机或承载应用程序的协作事件。 除非显式指定，否则对于引用类型，所有属性的默认值均为 null。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)">
      <summary>使调用对等方异步订阅 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。这样，该对等方将收到未来与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的所有 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 事件。</summary>
      <param name="userToken">一个用户定义的 <see cref="T:System.Object" />，其中包含与 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> 操作有关的信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="UserToken" /> 不能为null.</exception>
      <exception cref="T:System.InvalidOperationException">调用对等方未登录网络邻居。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
        <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> 标识符重复。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted">
      <summary>在完成订阅操作时引发。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例所需的数据。</summary>
      <param name="info">保存与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象关联的已序列化的数据。</param>
      <param name="context">包含与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象关联的序列化流的目标。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString">
      <summary>返回与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" /> 的 <see cref="T:System.String" /> 表示形式。</summary>
      <returns>
        <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" /> 的 <see cref="T:System.String" /> 表示形式。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml">
      <summary>将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 序列化为一个 XML 字符串，以供持久存储或网络传输时使用。</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的 XML 编码。</returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">无法完成 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" /> 操作。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe">
      <summary>移除对 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的订阅。这样，调用对等方将不再收到与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> 事件。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection">
      <summary>表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 元素的容器。 此类型的实例由 <see cref="M:System.Net.PeerToPeer.Collaboration.ContactManager.GetContacts" /> 静态方法返回。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>在 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" /> 的指定索引或键处插入一个新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 元素。</summary>
      <param name="index">待替换元素的从零开始的索引</param>
      <param name="item">位于指定索引处的元素的新值</param>
      <exception cref="T:System.ArgumentNullException">提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 为 null</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)">
      <summary>替换指定索引处的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
      <param name="index">待替换元素的从零开始的索引。</param>
      <param name="item">位于指定索引处的元素的新值。</param>
      <exception cref="T:System.ArgumentNullException">提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 为 null</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.ToString">
      <summary>返回一个 Unicode <see cref="T:System.String" />，它表示每个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的当前值（用逗号分隔）。</summary>
      <returns>一个 Unicode <see cref="T:System.String" />，表示每个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 的当前值（用逗号分隔）。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint">
      <summary>表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 或 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 实例的位置，该位置由唯一网络地址配置通过描述对等协作基础结构中的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 或 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 的当前实例进行指定。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor">
      <summary>生成 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 类的一个新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Net.IPEndPoint)">
      <summary>使用 <see cref="T:System.Net.IPEndPoint" /> 中包含的与对等方关联的终结点初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 类的新实例。</summary>
      <param name="endPoint">与对等方关联的终结点。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Net.IPEndPoint,System.String)">
      <summary>使用 <see cref="T:System.Net.IPEndPoint" /> 中包含的与对等方关联的终结点以及一个指定 <paramref name="endPointName" /> 的字符串初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 类的新实例。</summary>
      <param name="endPoint">与对等方关联的终结点。</param>
      <param name="endPointName">指定与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endPoint" /> 参数指定了 null。</exception>
      <exception cref="T:System.ArgumentException">指定的 <paramref name="endPoint" /> 不是有效的 IPv6 终结点。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化所需的关联参数初始化一个新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例。</summary>
      <param name="serializationInfo">与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="streamingContext">与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的序列化目标。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose">
      <summary>释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象使用的所有资源。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象使用的非托管资源，还可以选择释放托管资源。</summary>
      <param name="disposing">设置为 true 可释放托管资源和非托管资源；设置为 false 只能释放非托管资源。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint">
      <summary>获取或设置一个 <see cref="T:System.Net.IPEndPoint" />，其中包含与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例关联的 IP 地址。</summary>
      <returns>与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例关联的 IP 地址。</returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">指定的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> 终结点不是有效的 IPv6 终结点。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 与指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例进行比较。</summary>
      <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例具有匹配的数据，则返回 true；否则返回 false。</returns>
      <param name="other">要进行相等性测试的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例。</param>
      <exception cref="T:System.ObjectDisposedException">已释放此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object)">
      <summary>将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 与指定的 <see cref="T:System.Object" /> 进行比较。</summary>
      <returns>如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 等于指定的对象实例，则返回 true；否则返回 false。</returns>
      <param name="obj">要进行相等性测试的 <see cref="T:System.Object" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Equals(System.Object,System.Object)">
      <summary>确定指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象是否被视为相等。</summary>
      <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例具有匹配的数据，则返回 true；否则返回 false。</returns>
      <param name="objA">要比较的第一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</param>
      <param name="objB">要比较的第二个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.GetHashCode">
      <summary>返回 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例的哈希代码。</summary>
      <returns>一个 32 位的有符号整数哈希代码，用于比较此类型的实例。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类实例。 派生类型必须调用基类型 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">序列化的目标。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name">
      <summary>获取或设置一个 <see cref="T:System.String" />，它表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例的显示名称。</summary>
      <returns>表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 的显示名称的 <see cref="T:System.String" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged">
      <summary>在与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象关联的名称更改时发出信号。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)">
      <summary>在与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 所指定的 <paramref name="PeerName" /> 发生更改时调用。</summary>
      <param name="nameChangedArgs">指定 <paramref name="PeerName" /> 所发生的更改类型。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject">
      <summary>设置此属性值后，将在创建特定 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" /> 的线程上为因异步操作而未激发的所有事件回调关联的事件处理程序。</summary>
      <returns>实现 <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 接口的对象，此对象在创建它的线程上供该事件处理程序同步类型的实例使用。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放调用对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用从已序列化的源中获取的数据填充当前的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">序列化的目标。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.ToString">
      <summary>返回一个表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例的 <see cref="T:System.String" />。</summary>
      <returns>表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 的 <see cref="T:System.String" />。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection">
      <summary>表示一个容器，用于保存 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象的元素。 此类型的实例由 <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> 类返回。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.Equals(System.Net.PeerToPeer.Collaboration.PeerEndPointCollection)">
      <summary>将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 与指定的对象进行比较。</summary>
      <returns>如果 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 等于指定的对象，则返回 true。</returns>
      <param name="other">要作为比较基准的对象。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>在 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 的指定索引或键处插入一个新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 元素。</summary>
      <param name="index">待替换元素的从零开始的索引</param>
      <param name="item">位于指定索引处的元素的新值</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>替换指定索引处的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 元素。</summary>
      <param name="index">待替换元素的从零开始的索引</param>
      <param name="item">位于指定索引处的元素的新值</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection.ToString">
      <summary>返回一个 <see cref="T:System.String" />，它表示每个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例的当前值（用逗号分隔）。</summary>
      <returns>一个 Unicode <see cref="T:System.String" />，表示每个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 实例的当前值。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse">
      <summary>表示接收的远程对等方对通过 <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.Invite" /> 或 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite" /> 方法所发送的邀请的响应。</summary>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse.PeerInvitationResponseType">
      <summary>获取或设置由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" /> 类指定的远程对等方对邀请的响应。</summary>
      <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" /> 对象，其中包含远程对等方对邀请的响应。</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType">
      <summary>指定本地对等方可以在应用程序驱动的协作邀请请求下收到的响应。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType.Accepted">
      <summary>该对等方已接受邀请请求。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType.Declined">
      <summary>该对等方已拒绝邀请请求。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType.Expired">
      <summary>邀请请求已过期。</summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerNearMe">
      <summary>表示通过“网络邻居”基础结构找到的对等方。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 类的新默认实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化所需的关联参数初始化一个新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例。</summary>
      <param name="serializationInfo">与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 关联的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="streamingContext">与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 关联的序列化目标。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager">
      <summary>从 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象生成 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />，并将其与 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 关联。</summary>
      <returns>与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</returns>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">协作基础结构未能创建 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 并将其与 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 关联。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.AddToContactManager(System.String,System.String,System.Net.Mail.MailAddress)">
      <summary>使用关联的描述性参数从 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象生成 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />，并将其与 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 关联。</summary>
      <returns>与包含描述性参数的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</returns>
      <param name="displayName">分配给新创建的联系人的显示名称。</param>
      <param name="nickname">要分配给新创建的联系人的 <paramref name="nickname" />。</param>
      <param name="emailAddress">
        <see cref="T:System.Net.Mail.MailAddress" /> 对象，它指定要分配给新创建的联系人的电子邮件地址。</param>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">协作基础结构未能使用 <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> 创建或更新 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.CreateFromPeerEndPoint(System.Net.PeerToPeer.Collaboration.PeerEndPoint)">
      <summary>从提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 生成 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。</summary>
      <returns>与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。</returns>
      <param name="peerEndPoint">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象，它指定与对等方关联的终结点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="peerEndPoint" /> 为 null。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">引用的 <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> 指定 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象使用的非托管资源，还可以选择释放托管资源。</summary>
      <param name="disposing">设置为 true 可释放托管资源和非托管资源；设置为 false 只能释放非托管资源。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <summary>将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 与指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例进行比较。</summary>
      <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例具有匹配的数据，则返回 true；否则返回 false。</returns>
      <param name="other">要进行相等性测试的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> 参数为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object)">
      <summary>将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例与指定对象进行比较。</summary>
      <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例具有匹配的数据，则返回 true；否则返回 false。</returns>
      <param name="obj">要测试相等的对象。</param>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Equals(System.Object,System.Object)">
      <summary>确定指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例是否被视为相等。</summary>
      <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例具有匹配的数据，则返回 true；否则返回 false。</returns>
      <param name="objA">要比较的第一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。</param>
      <param name="objB">要比较的第二个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.GetHashCode">
      <summary>返回 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例的哈希代码。</summary>
      <returns>一个 32 位的有符号整数哈希代码，用于比较此类型的实例。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。 派生类型必须调用基类型 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">序列化的目标。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InternalRefreshData(System.Object)">
      <summary>启动网络操作，以检索特定于 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例的应用程序、对象和显示状态数据。</summary>
      <param name="state">指定与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例相关的应用程序、对象和显示状态数据。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite">
      <summary>向远程对等方发送加入对等协作应用程序的邀请。</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 对象，其中包含由远程对等方指定的相关 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" /> 值。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 为 null 或其关联的终结点的值计数为“0”。 当前的对等应用程序尚不具有关联的 <see cref="T:System.Guid" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])">
      <summary>向远程对等方发送加入对等协作应用程序的邀请，其中包含描述或指定应用程序邀请的数据。</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> 对象，其中包含由远程对等方指定的相关 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" /> 值。</returns>
      <param name="applicationToInvite">指定由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 实例表示的相关对等协作应用程序。</param>
      <param name="message">要随应用程序邀请一起发送至远程对等方的消息。此消息不能超过 255 个 Unicode 字符。</param>
      <param name="invitationData">要与邀请关联的用户定义数据 Blob。其大小限制为 16K（16,384 字节）。</param>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationToInvite" /> 参数指定了 null。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
        <paramref name="applicationToInvite" /> 参数指定了空 <see cref="T:System.Guid" />。 与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> 指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 为 null 或其关联的终结点的值计数为“0”。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)">
      <summary>接收来自对等方有关加入对等协作应用程序的邀请的邀请响应。</summary>
      <param name="applicationToInvite">指定由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象表示的相关对等协作应用程序信息。</param>
      <param name="message">要随应用程序邀请一起发送至远程对等方的消息。 此消息不能超过 255 个 Unicode 字符。</param>
      <param name="invitationData">要与邀请关联的用户定义数据 Blob。其大小限制为 16K。</param>
      <param name="userToken">传递给异步操作回调以用于标识的用户定义的对象。 此必选参数在仍在执行的所有异步邀请操作中必须是唯一的。</param>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationToInvite" /> 参数指定了 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="userToken" /> 参数指定了 null。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">找不到 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 指定的终点。 <paramref name="applicationToInvite" /> 参数指定了空 <see cref="T:System.Guid" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.InviteAsync(System.Object)">
      <summary>接收来自对等方的有关加入对等协作应用程序的邀请响应。</summary>
      <param name="userToken">传递给异步操作回调以用于标识的用户定义的对象。 此必选参数在仍在执行的所有异步邀请操作中必须是唯一的。</param>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="userToken" /> 参数指定了 null。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">此 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> 对象指定的 <see cref="T:System.Guid" /> 无效。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname">
      <summary>获取或设置一个表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象的昵称的 <see cref="T:System.String" />。</summary>
      <returns>表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象的昵称的 <see cref="T:System.String" />。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)">
      <summary>发出 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted" /> 事件信号。</summary>
      <param name="e">包含在 <see cref="T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs" /> 实例中的事件数据。</param>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged">
      <summary>在下列情况下发出此信号：找到新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例，该实例不再可用或关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象信息发生更改。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData">
      <summary>启动网络操作，以检索特定于 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例的应用程序、对象和显示状态数据。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)">
      <summary>启动网络操作，以检索特定于 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例的应用程序、对象和显示状态数据。</summary>
      <param name="userToken">在此方法完成操作时传递给委托的用户指定的状态对象。</param>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userToken" /> 参数指定了 null。</exception>
      <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">之前的 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" /> 调用尚未完成。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted">
      <summary>在 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例的 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" /> 或 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" /> 操作完成时发出此信号。</summary>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用从已序列化的源中获取的数据填充当前的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">序列化的目标。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.ToString">
      <summary>返回一个表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例的 <see cref="T:System.String" />。</summary>
      <returns>表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 的 <see cref="T:System.String" />。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs">
      <summary>在发生 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.PeerNearMeChanged" /> 事件时向回调方法提供限定信息。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs.PeerChangeType">
      <summary>获取 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象已发生的更改类型。</summary>
      <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> 对象，指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例已发生的更改类型。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerNearMeChangedEventArgs.PeerNearMe">
      <summary>获取已发生更改的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例。</summary>
      <returns>已更改的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection">
      <summary>表示一个容器，用于保存 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象的元素。 此类型的实例由 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" /> 静态方法返回。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <summary>在 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" /> 的指定索引或键处插入一个新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 元素。</summary>
      <param name="index">该元素所在位置的从零开始的索引。</param>
      <param name="item">位于指定索引处的元素的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerNearMe)">
      <summary>替换指定索引处的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 元素。</summary>
      <param name="index">该元素所在位置的从零开始的索引。</param>
      <param name="item">位于指定索引处的元素的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection.ToString">
      <summary>返回一个字符串，它表示每个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例的当前值（用逗号分隔）。</summary>
      <returns>一个 Unicode 字符串，表示每个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 实例的当前值。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerObject">
      <summary>表示 PeerObject 类的一个新实例，此实例具有自动生成的 <see cref="T:System.Guid" />。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 类的一个新默认实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor(System.Guid,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerScope)">
      <summary>使用关联的范围和数据初始化一个新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。</summary>
      <param name="Id">
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 的用户定义标识符。</param>
      <param name="data">一个包含有关 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 的信息的数据 Blob。 此参数的大小必须小于或等于 16K。</param>
      <param name="peerScope">指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 的注册范围。</param>
      <exception cref="T:System.ArgumentException">为此方法提供的一个参数无效。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化所需的关联参数初始化一个新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。</summary>
      <param name="serializationInfo">与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 关联的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="streamingContext">与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 关联的序列化目标。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerObject.Data">
      <summary>获取或设置与对等方协作基础结构的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例关联的描述性数据。</summary>
      <returns>与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 关联的描述性数据（例如文本或小图像）。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。</exception>
      <exception cref="T:System.ArgumentException">为此方法提供的一个参数无效。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose">
      <summary>释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 利用的所有资源。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">设置为 true 可释放托管资源和非托管资源；设置为 false 只能释放非托管资源。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Net.PeerToPeer.Collaboration.PeerObject)">
      <summary>将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 与指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例进行比较。</summary>
      <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例具有匹配的数据，则返回 true；否则返回 false。</returns>
      <param name="other">要进行相等性测试的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。</param>
      <exception cref="T:System.ObjectDisposedException">已释放由 <paramref name="other" /> 指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Object)">
      <summary>将 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 与指定的对象进行比较。</summary>
      <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例具有匹配的数据，则返回 true； 否则返回 false。</returns>
      <param name="obj">要测试相等的对象。</param>
      <exception cref="T:System.ObjectDisposedException">已释放由 <paramref name="obj" /> 指定的对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.Equals(System.Object,System.Object)">
      <summary>确定指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例是否被视为相等。</summary>
      <returns>如果提供的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例具有匹配的数据，则返回 true；否则返回 false。</returns>
      <param name="objA">要比较的第一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</param>
      <param name="objB">要比较的第二个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.GetHashCode">
      <summary>返回 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例的哈希代码。</summary>
      <returns>一个 32 位的有符号整数哈希代码，用于比较此类型的实例。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 实例。</param>
      <param name="context">序列化的目标。</param>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerObject.Id">
      <summary>获取或设置一个与 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例关联的 <see cref="T:System.Guid" />。</summary>
      <returns>
        <see cref="T:System.Guid" /> 关联的<see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> .</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Net.PeerToPeer.Collaboration.PeerObject.ObjectChanged">
      <summary>在 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例更改时发出信号。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)">
      <summary>在远程对等方添加、更新或移除具有指定 ID 的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例时发出信号。</summary>
      <param name="objChangedArgs">由 <see cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" /> 指定的对象更改类型。</param>
      <exception cref="T:System.ObjectDisposedException">与该更改关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例已处理。</exception>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerObject.PeerScope">
      <summary>获取或设置要在其中注册 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />。</summary>
      <returns>指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 的注册范围的 PeerScope。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerObject.SynchronizingObject">
      <summary>获取或设置用于封送因 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例更改而发出的事件处理程序调用的对象。</summary>
      <returns>具有 <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> 接口的实现的对象。 此对象用于事件处理程序同步。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放调用对象。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用从已序列化的源中获取的数据填充当前的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">序列化的目标。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObject.ToString">
      <summary>返回一个表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例的 <see cref="T:System.String" />。</summary>
      <returns>一个表示 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 的 <see cref="T:System.String" />。</returns>
      <exception cref="T:System.ObjectDisposedException">已释放 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection">
      <summary>表示一个容器，用于保存 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例的元素。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerObject)">
      <summary>在 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> 的指定索引或键处插入一个新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 元素。</summary>
      <param name="index">该元素所在位置的从零开始的索引。</param>
      <param name="item">位于指定索引处的元素的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.SetItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerObject)">
      <summary>替换指定索引处的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 元素。</summary>
      <param name="index">该元素所在位置的从零开始的索引。</param>
      <param name="item">位于指定索引处的元素的新值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerObjectCollection.ToString">
      <summary>返回一个字符串，它表示每个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> 实例的当前值（用逗号分隔）。</summary>
      <returns>一个字符串，表示每个 PeerObject 实例的当前值（用逗号分隔）。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo">
      <summary>表示对等方的状态信息。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 对象的一个默认新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.#ctor(System.Net.PeerToPeer.Collaboration.PeerPresenceStatus,System.String)">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 对象的一个实例，该对象包含一个 Unicode 字符串，用于描述本地对等方的状态。</summary>
      <param name="presenceStatus">对等方的状态。</param>
      <param name="description">关于状态的说明。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.DescriptiveText">
      <summary>获取或设置一个 Unicode 字符串，以进一步描述本地对等方的状态。</summary>
      <returns>描述对等方状态的 Unicode 字符串。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo.PresenceStatus">
      <summary>获取或设置本地对等方的状态。</summary>
      <returns>指定对等方状态的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" /> 枚举。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus">
      <summary>指定对等方的状态。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Away">
      <summary>指定对等方的状态为“离开”，无法进行响应。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.BeRightBack">
      <summary>指定对等方已暂时离开应用程序，马上即可回来参与。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Busy">
      <summary>指定对等方正“忙”，不希望被打扰。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Idle">
      <summary>指定对等方的状态为空闲。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Offline">
      <summary>指定对等方的状态为“脱机”。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.Online">
      <summary>指定对等方正在参与对等方协作网络。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.OnThePhone">
      <summary>指定对等方当前正在接听电话，不希望被打扰。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus.OutToLunch">
      <summary>指定对等方的当前状态为“外出午餐”，无法进行响应。</summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerScope">
      <summary>指定对等方的当前网络范围。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerScope.All">
      <summary>指定登录“网络邻居”范围和“Internet”范围。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerScope.Internet">
      <summary>指定登录“Internet”范围。 此范围有利于与联系人管理器中的所有联系人建立连接。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerScope.NearMe">
      <summary>指定登录“网络邻居”范围。 此范围有利于通过对等方协作方法连接至同一子网中的所有对等方。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.PeerScope.None">
      <summary>指定对等方不登录对等方协作范围。 如果将此值传递给 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" /> 方法，将不会生成任何结果。</summary>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs">
      <summary>在发生 <see cref="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged" /> 或 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged" /> 事件时向回调方法提供限定信息。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerChangeType">
      <summary>指定对等方状态已发生的更改类型。</summary>
      <returns>一个 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> 对象，其中包含指定对等方状态所发生的更改类型的数据。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerContact">
      <summary>指定已更改状态信息的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
      <returns>与已更改状态信息的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 关联的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerEndPoint">
      <summary>指定已更改状态信息的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</summary>
      <returns>状态信息已发生更改的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs.PeerPresenceInfo">
      <summary>指定 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 的状态更改信息，以及一个由描述更新状态的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> 提供的字符串。</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 的状态更改信息，以及一个描述更新后的状态的字符串。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs">
      <summary>在发生 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataCompleted" /> 事件时向 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.OnRefreshDataCompleted(System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs)" /> 方法提供限定信息。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.RefreshDataCompletedEventArgs.PeerEndPoint">
      <summary>指定更新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</summary>
      <returns>已更新的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象，其中包含一个对等方的终结点数据。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs">
      <summary>在发出 <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" /> 事件信号时向回调方法提供限定信息。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs.PeerContact">
      <summary>指定为其请求订阅的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
      <returns>为其请求订阅的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs.PeerNearMe">
      <summary>指定为其请求订阅的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />。</summary>
      <returns>为其请求订阅的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" /> 对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs">
      <summary>在发出 <see cref="E:System.Net.PeerToPeer.Collaboration.ContactManager.SubscriptionListChanged" /> 事件信号时向回调方法提供限定信息。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerChangeType">
      <summary>指定已发生的更改类型。</summary>
      <returns>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" /> 枚举，指定对订阅列表所执行的更改类型。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerContact">
      <summary>指定已更改其订阅列表的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />。</summary>
      <returns>已更改其订阅列表的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> 对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs.PeerEndPoint">
      <summary>指定已收到其订阅通知的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />。</summary>
      <returns>已更改其订阅列表的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> 对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.SubscriptionType">
      <summary>指定订阅本地对等方的远程对等方是否可以收到事件通知。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.SubscriptionType.Allowed">
      <summary>指定远程对等方可以订阅本地对等方并接收事件通知。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.Collaboration.SubscriptionType.Blocked">
      <summary>指定远程对等方可以订阅本地对等方，但无法收到事件通知。</summary>
    </member>
    <member name="T:System.Net.Sockets.HttpPolicyDownloaderProtocol">
      <summary>下载 <see cref="T:System.Net.Sockets.Socket" /> 类的实例将使用的策略文件。</summary>
    </member>
    <member name="M:System.Net.Sockets.HttpPolicyDownloaderProtocol.#ctor(System.Uri,System.Net.IPAddress)">
      <summary>初始化 <see cref="T:System.Net.Sockets.HttpPolicyDownloaderProtocol" /> 类的新实例。</summary>
      <param name="appUri">其中承载应用程序的 URI。</param>
      <param name="address">其中将运行应用程序的 IP 地址。</param>
    </member>
    <member name="M:System.Net.Sockets.HttpPolicyDownloaderProtocol.Abort">
      <summary>中止策略文件的下载。</summary>
    </member>
    <member name="M:System.Net.Sockets.HttpPolicyDownloaderProtocol.BeginDownload(System.Net.Sockets.SecurityCriticalAction)">
      <summary>开始下载策略文件。</summary>
      <param name="callback">用于提供关键安全操作的回调函数。</param>
    </member>
    <member name="M:System.Net.Sockets.HttpPolicyDownloaderProtocol.DownloadCallback(System.IAsyncResult)">
      <summary>用于接收结果的下载回调函数。</summary>
      <param name="ar">用于在异步操作完成时接收结果的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.Net.Sockets.HttpPolicyDownloaderProtocol.ReadCallback(System.IAsyncResult)">
      <summary>用于读取策略文件的读取回调函数。</summary>
      <param name="ar">用于在异步操作完成时接收结果的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:System.Net.Sockets.HttpPolicyDownloaderProtocol.RegisterUnsafeWebRequestCreator(System.Net.IUnsafeWebRequestCreate)">
      <summary>注册对象以创建对统一资源标识符 (URI) 的不安全的 <see cref="T:System.Net.WebRequest" />。</summary>
      <param name="creator">要创建不安全 <see cref="T:System.Net.WebRequest" /> 的对象。</param>
    </member>
    <member name="P:System.Net.Sockets.HttpPolicyDownloaderProtocol.Result">
      <summary>获取下载套接字策略文件的结果。</summary>
      <returns>返回 <see cref="T:System.Net.Sockets.SocketPolicy" />。 下载的套接字策略文件。</returns>
    </member>
    <member name="T:System.Net.Sockets.SecurityCriticalAction">
      <summary>表示安全关键操作。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketPolicy">
      <summary>
        <see cref="T:System.Net.Sockets" /> 类的实例将使用的策略文件。</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketPolicy.#ctor">
      <summary>初始化 <see cref="T:System.Net.Sockets.SocketPolicy" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Net.Sockets.UdpAnySourceMulticastClient">
      <summary>从任意源接收多播流量的客户端接收器，亦称为任意源多播 (ASM) 或 Internet 标准多播 (ISM)。</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>创建一个可以订阅组地址并从任意源接收数据报的新 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> UDP 客户端。</summary>
      <param name="groupAddress">此接收器要订阅的多路广播组的地址。</param>
      <param name="localPort">此接收器要绑定到的本地端口。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groupAddress" /> 是 null 引用</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="localPort" /> 小于 0
- 或 -
<paramref name="localPort" /> 大于 65,535。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
      <summary>绑定套接字并开始执行多播组的联接操作，以便允许接收来自任何组参与者的数据报。</summary>
      <returns>返回 <see cref="T:System.IAsyncResult" />。 一个引用此操作的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">要在操作完成时调用的回调方法。</param>
      <param name="state">要传递给此操作的 <paramref name="callback" /> 方法的可选状态信息。</param>
      <exception cref="T:System.InvalidOperationException">已经连接多播组，或联接操作正在进行。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始执行从已联接的多路广播组接收数据包的操作，并在来自任何发送器的数据包到达组时调用指定的回调。</summary>
      <returns>返回 <see cref="T:System.IAsyncResult" />。 一个引用此操作的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="buffer">要存储已接收的数据的缓冲区。</param>
      <param name="offset">应存储数据的 <paramref name="buffer" />开始处的偏移量（以字节为单位）。</param>
      <param name="count">要接收并存储在 <paramref name="buffer" /> 中的最大字节数。</param>
      <param name="callback">要在操作完成时调用的回调方法。</param>
      <param name="state">要传递给此操作的 <paramref name="callback" /> 方法的可选状态信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0 - 或 - <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。 - 或 - <paramref name="count" /> 小于 0 - 或 - <paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</exception>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary>开始执行向指定目标发送单播数据包的操作。</summary>
      <returns>返回 <see cref="T:System.IAsyncResult" />。 一个引用此操作的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="buffer">包含要发送的数据的缓冲区。</param>
      <param name="offset">要从中读取待发送数据的 <paramref name="buffer" /> 开始处的偏移量（以字节为单位）。</param>
      <param name="count">要从 <paramref name="buffer" /> 中发送的字节数。</param>
      <param name="remoteEndPoint">要向其发送数据包的远程终结点。</param>
      <param name="callback">要在操作完成时调用的回调方法。</param>
      <param name="state">要传递给此操作的 <paramref name="callback" /> 方法的可选状态信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0 - 或 - <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。 - 或 - <paramref name="count" /> 小于 0 - 或 - <paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</exception>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始执行向已联接的多路广播组发送数据包的操作，并在数据包已发送到该组时调用指定的回调。</summary>
      <returns>返回 <see cref="T:System.IAsyncResult" />。 一个引用此操作的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="buffer">包含要发送的数据的缓冲区。</param>
      <param name="offset">要从中读取待发送数据的 <paramref name="buffer" /> 开始处的偏移量（以字节为单位）。</param>
      <param name="count">要从 <paramref name="buffer" /> 中发送的字节数。</param>
      <param name="callback">要在操作完成时调用的回调方法。</param>
      <param name="state">要传递给此操作的 <paramref name="callback" /> 方法的可选状态信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0 - 或 - <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。 - 或 - <paramref name="count" /> 小于 0 - 或 - <paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</exception>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
      <summary>阻止一个源，以便再也不能接收到来自该源的多播数据包。</summary>
      <param name="sourceAddress">要阻止的源的地址。</param>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose">
      <summary>退出多播组并释放由 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 类的当前实例和基础 <see cref="T:System.Net.Sockets.Socket" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
      <summary>完成多路广播组的异步联接组操作。</summary>
      <param name="result">异步联接操作的结果。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary>完成从已联接的多路广播组接收数据包的异步操作并提供接收到的信息。</summary>
      <returns>返回 <see cref="T:System.Int32" />。 存储在传递给 <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup" /> 方法的缓冲区参数中的消息的长度（以字节为单位）。</returns>
      <param name="result">异步接收操作的结果。</param>
      <param name="source">从中接收数据包的源终结点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)">
      <summary>完成向指定目标发送单播数据包的操作。</summary>
      <param name="result">异步发送操作的结果。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)">
      <summary>完成向多路广播组发送数据包的操作。</summary>
      <param name="result">异步发送操作的结果。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback">
      <summary>获取或设置一个值，该值指定传出的多路广播数据包是否传递到发送应用程序。</summary>
      <returns>返回 <see cref="T:System.Boolean" />。 一个值，该值指示向多路广播组发送的传出数据包是否传递到发送应用程序。</returns>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 已释放。</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
      <summary>获取或设置 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 的接收缓冲区的大小（以字节为单位），该缓冲区用于此 <see cref="T:System.Net.Sockets.Socket" /> 实例上的多播接收操作。</summary>
      <returns>返回 <see cref="T:System.Int32" />。 接收缓冲区的大小（以字节为单位）。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的缓冲区大小小于 0。</exception>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 已释放。</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize">
      <summary>获取或设置 <see cref="T:System.Net.Sockets.Socket" /> 的发送缓冲区的大小（以字节为单位），该缓冲区用于此 <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 实例上的多播发送操作。</summary>
      <returns>返回 <see cref="T:System.Int32" />。 发送缓冲区的大小（以字节为单位）。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的缓冲区大小小于 0。</exception>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 已释放。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
      <summary>取消阻止以前通过调用 <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource" /> 方法阻止的源，以便可以接收来自该源的多播数据包。</summary>
      <param name="sourceAddress">要取消阻止的源的地址。</param>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
      <summary>一个从单一源接收多播流量的客户端，亦称为源特定多播 (SSM)。</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
      <summary>创建一个可以订阅组地址并从单一源接收数据报的新 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> UDP 客户端。</summary>
      <param name="sourceAddress">此接收器要订阅的发送方源地址。</param>
      <param name="groupAddress">此接收器要订阅的多路广播组的地址。</param>
      <param name="localPort">此接收器要绑定到的本地端口。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceAddress" /> 和 <paramref name="groupAddress" /> 必须为相同地址族。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceAddress" /> 是 null 引用（在 Visual Basic 中为 Nothing）。 - 或 - <paramref name="groupAddress" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="localPort" /> 小于 0 - 或 - <paramref name="localPort" /> 大于 65,535。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="localPort" /> 小于 1024</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
      <summary>绑定套接字并开始执行多路广播组的联接操作，以便允许接收来自单一源地址的数据报。</summary>
      <returns>返回 <see cref="T:System.IAsyncResult" />。 一个引用此操作的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">要在操作完成时调用的回调方法。</param>
      <param name="state">要传递给此操作的 <paramref name="callback" /> 方法的可选状态信息。</param>
      <exception cref="T:System.InvalidOperationException">已经连接多播组，或联接操作正在进行。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始执行从已联接的多路广播组接收数据包的操作，并在来自指定发送器的数据包到达组时调用指定的回调。</summary>
      <returns>返回 <see cref="T:System.IAsyncResult" />。 一个引用此操作的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="buffer">要存储已接收的数据的缓冲区。</param>
      <param name="offset">应存储数据的 <paramref name="buffer" />开始处的偏移量（以字节为单位）。</param>
      <param name="count">要接收并存储在 <paramref name="buffer" /> 中的最大字节数。</param>
      <param name="callback">要在操作完成时调用的回调方法。</param>
      <param name="state">要传递给此操作的 <paramref name="callback" /> 方法的可选状态信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0 - 或 - <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。 - 或 - <paramref name="count" /> 小于 0 - 或 - <paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</exception>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets. UdpSingleSourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问供接收的套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始执行向以前指定的源发送单播数据包的操作。</summary>
      <returns>返回 <see cref="T:System.IAsyncResult" />。 一个引用此操作的 <see cref="T:System.IAsyncResult" />。</returns>
      <param name="buffer">包含要发送的数据的缓冲区。</param>
      <param name="offset">要从中读取待发送数据的 <paramref name="buffer" /> 开始处的偏移量（以字节为单位）。</param>
      <param name="count">要从 <paramref name="buffer" /> 中发送的字节数。</param>
      <param name="remotePort">要向其发送数据包的远程端点。 由 <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 构造函数指定的远程地址。</param>
      <param name="callback">要在操作完成时调用的回调方法。</param>
      <param name="state">要传递给此操作的 <paramref name="callback" /> 方法的可选状态信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 小于 0 - 或 - <paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。 - 或 - <paramref name="count" /> 小于 0 - 或 - <paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。 - 或 - <paramref name="remotePort" /> 小于 0 或大于 65,535。</exception>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
      <summary>退出多播组并释放由 <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 类的当前实例和基础 <see cref="T:System.Net.Sockets.Socket" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
      <summary>完成多路广播组的异步联接组操作。</summary>
      <param name="result">异步联接操作的结果。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
      <summary>完成从已联接的多路广播组接收数据包的异步操作并提供接收到的信息。</summary>
      <returns>返回 <see cref="T:System.Int32" />。 存储到传递给 <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource" /> 方法的 <paramref name="buffer" /> 参数中的消息的长度（以字节为单位）。</returns>
      <param name="result">异步接收操作的结果。</param>
      <param name="sourcePort">从中接收数据包的源终结点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
      <summary>完成向单一源发送单播数据包的操作。</summary>
      <param name="result">异步发送操作的结果。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 已释放。</exception>
      <exception cref="T:System.Net.Sockets.SocketException">试图访问套接字时发生错误。 有关更多信息，请参见备注部分。</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
      <summary>获取或设置接收缓冲区的大小（以字节为单位），该缓冲区用于接收在此 <see cref="P:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 实例上执行的多播接收操作所用的 <see cref="P:System.Net.Sockets.Socket" />。</summary>
      <returns>返回 <see cref="T:System.Int32" />。 接收缓冲区的大小（以字节为单位）。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的缓冲区大小小于 0。</exception>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 已释放。</exception>
    </member>
    <member name="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
      <summary>获取或设置 <see cref="P:System.Net.Sockets.Socket" /> 的发送缓冲区的大小（以字节为单位），该缓冲区用于此 <see cref="P:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 实例上的多播发送操作。</summary>
      <returns>返回 <see cref="T:System.Int32" />。 发送缓冲区的大小（以字节为单位）。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的缓冲区大小小于 0。</exception>
      <exception cref="T:System.InvalidOperationException">尚未联接多播组。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> 已释放。</exception>
    </member>
  </members>
</doc>