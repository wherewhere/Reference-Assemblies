<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Speech</name>
  </assembly>
  <members>
    <member name="T:System.Speech.AudioFormat.AudioBitsPerSample">
      <summary>枚举描述音频格式每个样本位数的值。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.AudioFormat.AudioBitsPerSample.Eight">
      <summary>音频格式为每示例 8 位。</summary>
    </member>
    <member name="F:System.Speech.AudioFormat.AudioBitsPerSample.Sixteen">
      <summary>音频格式为每示例 16 位。</summary>
    </member>
    <member name="T:System.Speech.AudioFormat.AudioChannel">
      <summary>枚举在音频格式中指示通道数的值。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.AudioFormat.AudioChannel.Mono">
      <summary>该音频格式有一个通道。</summary>
    </member>
    <member name="F:System.Speech.AudioFormat.AudioChannel.Stereo">
      <summary>该音频格式有两条通道。</summary>
    </member>
    <member name="T:System.Speech.AudioFormat.EncodingFormat">
      <summary>枚举描述音频编码格式的值。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.AudioFormat.EncodingFormat.ALaw">
      <summary>这种音频是 ALaw 的编码格式。</summary>
    </member>
    <member name="F:System.Speech.AudioFormat.EncodingFormat.Pcm">
      <summary>脉冲编码调制（PCM）的编码格式。</summary>
    </member>
    <member name="F:System.Speech.AudioFormat.EncodingFormat.ULaw">
      <summary>这种音频是 ULaw 的编码格式。</summary>
    </member>
    <member name="T:System.Speech.AudioFormat.SpeechAudioFormatInfo">
      <summary>表示有关音频格式的信息。</summary>
    </member>
    <member name="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)">
      <summary>初始化 <see cref="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" /> 类的新实例并指定每秒示例、每个示例的位数和通道的数目。</summary>
      <param name="samplesPerSecond">每秒示例数的值。</param>
      <param name="bitsPerSample">每个示例的位数的值。</param>
      <param name="channel">
        <see cref="T:System.Speech.AudioFormat.AudioChannel" />  枚举的成员（指示 <paramref name="Mono" /> 或 <paramref name="Stereo" />）。</param>
    </member>
    <member name="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])">
      <summary>初始化 <see cref="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" /> 类的新实例并指定编码格式、每秒的示例、每个示例的位数、通道的数目、每秒平均字节、块对齐值和包含格式特定数据的数组。</summary>
      <param name="encodingFormat">编码格式。</param>
      <param name="samplesPerSecond">每秒示例数的值。</param>
      <param name="bitsPerSample">每个示例的位数的值。</param>
      <param name="channelCount">通道计数的值。</param>
      <param name="averageBytesPerSecond">每秒平均字节数的值。</param>
      <param name="blockAlign">BlockAlign 的值。</param>
      <param name="formatSpecificData">包含要特定格式数据的字节数组。</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond">
      <summary>获取音频的每秒平均字节数。</summary>
      <returns>每秒平均字节数的值。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample">
      <summary>获取音频的每样本位数。</summary>
      <returns>每个示例的位数的值。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign">
      <summary>获取和设置字节中的块对齐。</summary>
      <returns>块对齐方式的值。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount">
      <summary>获取音频的通道计数。</summary>
      <returns>通道计数的值。</returns>
    </member>
    <member name="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat">
      <summary>获取这种音频的编码格式。</summary>
      <returns>这种音频的编码格式。</returns>
    </member>
    <member name="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(System.Object)">
      <summary>返回给定的对象是否为 <see cref="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" /> 的实例，并与当前 <see cref="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" /> 实例相等。</summary>
      <returns>如果 <see cref="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" /> 的当前实例和从 <paramref name="obj" /> 参数获得的当前实例相等，则返回 true；否则返回 false。</returns>
      <param name="obj">要比较的对象。</param>
    </member>
    <member name="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData">
      <summary>返回音频格式的格式特定数据。</summary>
      <returns>包含要特定格式数据的字节数组。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode">
      <summary>返回音频格式的哈希代码。</summary>
      <returns>哈希代码的值。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond">
      <summary>获取音频格式的每秒样本数。</summary>
      <returns>每秒示例数的值。</returns>
    </member>
    <member name="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs">
      <summary>为 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 类的 AudioLevelUpdated 事件提供数据。</summary>
    </member>
    <member name="P:System.Speech.Recognition.AudioLevelUpdatedEventArgs.AudioLevel">
      <summary>获取 <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevelUpdated" /> 或 <see cref="E:System.Speech.Recognition.SpeechRecognizer.AudioLevelUpdated" /> 事件引发后的新音频输入级别。</summary>
      <returns>音频输入的新嵌套级别。</returns>
    </member>
    <member name="T:System.Speech.Recognition.AudioSignalProblem">
      <summary>在转到语音识别引擎的音频信号中包含可能问题列表。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Recognition.AudioSignalProblem.None">
      <summary>音频输入没有任何问题。</summary>
    </member>
    <member name="F:System.Speech.Recognition.AudioSignalProblem.NoSignal">
      <summary>未检测到音频输入。</summary>
    </member>
    <member name="F:System.Speech.Recognition.AudioSignalProblem.TooFast">
      <summary>音频输入太快。</summary>
    </member>
    <member name="F:System.Speech.Recognition.AudioSignalProblem.TooLoud">
      <summary>音频输入太大声。</summary>
    </member>
    <member name="F:System.Speech.Recognition.AudioSignalProblem.TooNoisy">
      <summary>音频输入具有太多背景噪音。</summary>
    </member>
    <member name="F:System.Speech.Recognition.AudioSignalProblem.TooSlow">
      <summary>音频输入太慢。</summary>
    </member>
    <member name="F:System.Speech.Recognition.AudioSignalProblem.TooSoft">
      <summary>音频输入太安静。</summary>
    </member>
    <member name="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs">
      <summary>为 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 的 AudioSignalProblemOccurred 事件提供数据。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioLevel">
      <summary>获取与事件关联的音频级别。</summary>
      <returns>当提出事件时的AudioSignalProblemOccurred 音频水平 。</returns>
    </member>
    <member name="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioPosition">
      <summary>获取输入设备音频流中指示何处发生问题的位置。</summary>
      <returns>当引起事件时，输入设备的音频流中 AudioSignalProblemOccurred 关联的位置。</returns>
    </member>
    <member name="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioSignalProblem">
      <summary>获取音频信号问题。</summary>
      <returns>导致 AudioSignalProblemOccurred 引发事件的可侦听声信号问题。</returns>
    </member>
    <member name="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.RecognizerAudioPosition">
      <summary>获取识别器已接收的音频输入中指示何处发生问题的位置。</summary>
      <returns>引发事件时，在识别器接收的 AudioSignalProblemOccurred 音频输入的位置。</returns>
    </member>
    <member name="T:System.Speech.Recognition.AudioState">
      <summary>音频输入到语音识别引擎包含可能状态列表。</summary>
    </member>
    <member name="F:System.Speech.Recognition.AudioState.Silence">
      <summary>接收沈默或非语音背景噪音。</summary>
    </member>
    <member name="F:System.Speech.Recognition.AudioState.Speech">
      <summary>接收语音输入。</summary>
    </member>
    <member name="F:System.Speech.Recognition.AudioState.Stopped">
      <summary>没有处理音频输入。</summary>
    </member>
    <member name="T:System.Speech.Recognition.AudioStateChangedEventArgs">
      <summary>为 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 类的 AudioStateChanged 事件提供数据。</summary>
    </member>
    <member name="P:System.Speech.Recognition.AudioStateChangedEventArgs.AudioState">
      <summary>获取识别器的新音频输入状态。</summary>
      <returns>音频输入状态 <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioStateChanged" /> 或 <see cref="E:System.Speech.Recognition.SpeechRecognizer.AudioStateChanged" /> 事件之后引发。</returns>
    </member>
    <member name="T:System.Speech.Recognition.Choices">
      <summary>表示一组在语音识别语法约束的选择。</summary>
    </member>
    <member name="M:System.Speech.Recognition.Choices.#ctor">
      <summary>初始化包含空备选项集的 <see cref="T:System.Speech.Recognition.Choices" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])">
      <summary>从包含一个或多个 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象数组初始化 <see cref="T:System.Speech.Recognition.Choices" /> 类的新实例。</summary>
      <param name="alternateChoices">包含替代组的数组。</param>
    </member>
    <member name="M:System.Speech.Recognition.Choices.#ctor(System.String[])">
      <summary>从包含一个或多个 <see cref="T:System.String" /> 对象数组初始化 <see cref="T:System.Speech.Recognition.Choices" /> 类的新实例。</summary>
      <param name="phrases">包含替代组的数组。</param>
    </member>
    <member name="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])">
      <summary>将包含一个或多个 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象的数组添加到替代项组中。</summary>
      <param name="alternateChoices">要添加到 <see cref="T:System.Speech.Recognition.Choices" /> 对象中的 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象。</param>
    </member>
    <member name="M:System.Speech.Recognition.Choices.Add(System.String[])">
      <summary>将包含一个或多个 <see cref="T:System.String" /> 对象的数组添加到替代项组中。</summary>
      <param name="phrases">要添加到该<see cref="T:System.Speech.Recognition.Choices" />对象的字符串。</param>
    </member>
    <member name="M:System.Speech.Recognition.Choices.ToGrammarBuilder">
      <summary>从 <see cref="T:System.Speech.Recognition.Choices" /> 对象返回此 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Speech.Recognition.GrammarBuilder" />，匹配此 <see cref="T:System.Speech.Recognition.Choices" /> 对象。</returns>
    </member>
    <member name="T:System.Speech.Recognition.DictationGrammar">
      <summary>表示用于自由文本口述的语音识别语法。</summary>
    </member>
    <member name="M:System.Speech.Recognition.DictationGrammar.#ctor">
      <summary>初始化 <see cref="T:System.Speech.Recognition.DictationGrammar" /> 类的新实例用于 Windows 桌面语音技术提供的默认命令语法。</summary>
    </member>
    <member name="M:System.Speech.Recognition.DictationGrammar.#ctor(System.String)">
      <summary>用特定的口述语法初始化 <see cref="T:System.Speech.Recognition.DictationGrammar" /> 类的新实例。</summary>
      <param name="topic">一个符合 XML 的统一资源标识符 (URI) 指示该听写语法、<paramref name="grammar:dictation" /> 或 <paramref name="grammar:dictation#spelling" />。</param>
    </member>
    <member name="M:System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)">
      <summary>添加上下文到由 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 对象加载的听写语法。</summary>
      <param name="precedingText">文本指示口述上下文的开端。</param>
      <param name="subsequentText">文本指示口述上下文的末尾。</param>
    </member>
    <member name="T:System.Speech.Recognition.DisplayAttributes">
      <summary>列出 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 可用于为显示单词或标点符号指定空白的选项。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces">
      <summary>该项不具有其前的空间。</summary>
    </member>
    <member name="F:System.Speech.Recognition.DisplayAttributes.None">
      <summary>该项不指定空白的处理方式。</summary>
    </member>
    <member name="F:System.Speech.Recognition.DisplayAttributes.OneTrailingSpace">
      <summary>该项不具有其后的一个空间。</summary>
    </member>
    <member name="F:System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces">
      <summary>该项不具有其后的两个空间。</summary>
    </member>
    <member name="F:System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces">
      <summary>该项不具有其后的空间。</summary>
    </member>
    <member name="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs">
      <summary>为 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 和 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 类的 EmulateRecognizeCompleted 事件提供数据。</summary>
    </member>
    <member name="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result">
      <summary>获取所模拟识别的结果。</summary>
      <returns>有关识别结果的详细信息，如果发生错误，则为 null。</returns>
    </member>
    <member name="T:System.Speech.Recognition.Grammar">
      <summary>引用语音识别语法的运行时对象，应用程序可以用之来定义语音识别的约束。</summary>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor">
      <summary>初始化 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)">
      <summary>从 <see cref="T:System.IO.Stream" /> 初始化 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例。</summary>
      <param name="stream">以受支持的格式描述语音识别语法的流。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 描述未包含根规则的语法。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
      <exception cref="T:System.FormatException">流不包含有效的语法说明,也不描述包含一个规则引用无法解析的语法。</exception>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)">
      <summary>从 <see cref="T:System.IO.Stream" /> 和指定根规则中来初始化 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例。</summary>
      <param name="stream">以受支持的格式描述语音识别语法的流。</param>
      <param name="ruleName">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 null 。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ruleName" /> 无法解析或非公共，或者 <paramref name="ruleName" /> 为 null，并且语法说明不定义根规则。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
      <exception cref="T:System.FormatException">流不包含有效的说明,也不描述包含一个规则引用无法解析的语法。</exception>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])">
      <summary>从 <see cref="T:System.IO.Stream" /> 和指定根规则中来初始化 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例。</summary>
      <param name="stream">连接到包含语法规范的输入 / 输出对象（包括文件、VisualStudio 资源和 DLL）的 <see cref="T:System.IO.Stream" />。</param>
      <param name="ruleName">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 null 。</param>
      <param name="parameters">通过入口点或创建的根规则的属性指定设置为指定的 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" /> 参数要传递至的 <see cref="T:System.Speech.Recognition.Grammar" /> 初始化处理程序。 此参数可以为 null。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 连接到该语法: 不包含 <paramref name="ruleName" /> 指定的规则 需要与 <paramref name="parameters" />指定的那些不同的初始化参数。 包含无法由语法的默认基 <see cref="T:System.Uri" /> 规则解决的相对规则引用</exception>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)">
      <summary>初始化来自流的 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例，指定根规则并定义一个基统一资源字符识别（URI）来解析相对规则引用。</summary>
      <param name="stream">以受支持的格式描述语音识别语法的流。</param>
      <param name="ruleName">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 null 。</param>
      <param name="baseUri">使用的基 URI 解决所有在语法描述中的任何相关规则 null引用，或</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ruleName" /> 无法解析或非公共，或者 <paramref name="ruleName" /> 为 null，并且语法说明不定义根规则。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
      <exception cref="T:System.FormatException">流不包含有效的说明,也不描述包含一个规则引用无法解析的语法。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])">
      <summary>初始化 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例 <see cref="T:System.IO.Stream" /> 并指定根规则和基 URI 来解析相对引用。</summary>
      <param name="stream">连接到包含语法规范的输入 / 输出对象（包括文件、VisualStudio 资源和 DLL）的 <see cref="T:System.IO.Stream" />。</param>
      <param name="ruleName">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 null 。</param>
      <param name="baseUri">使用的基 URI 解决所有在语法描述中的任何相关规则 null引用，或</param>
      <param name="parameters">通过入口点或创建的根规则的属性指定设置为指定的 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" /> 参数要传递至的 <see cref="T:System.Speech.Recognition.Grammar" /> 初始化处理程序。 此参数可以为 null。</param>
      <exception cref="T:System.ArgumentException">包含无效值的任何参数。 <paramref name="stream" /> 连接到不包含 <paramref name="ruleName" />指定规则的语法。 数组参数的内容与初始化处理程序的任何规则的参数不匹配。 语法包含无法由语法的默认基或 <paramref name="baseUri" />提供的 URI <see cref="T:System.Uri" /> 解决的相对规则引用。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)">
      <summary>从 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象初始化 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例。</summary>
      <param name="builder">包含语音识别语法的约束的 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 的实例。</param>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)">
      <summary>从 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 对象初始化 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例。</summary>
      <param name="srgsDocument">语音识别语法的约束。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="srgsDocument" /> 不包含根规则。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="srgsDocument" /> 为 null。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="srgsDocument" /> 包含无法解析的规则引用。</exception>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)">
      <summary>初始化来自 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 对象的 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例并指定一个根规则。</summary>
      <param name="srgsDocument">语音识别语法的约束。</param>
      <param name="ruleName">规则标识符作为语音识别语法的入口点，按 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />默认根规则使用 null 。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ruleName" /> 无法解析或非公共，或者 <paramref name="ruleName" /> 为 null，并且 <paramref name="srgsDocument" /> 不包含根规则。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="srgsDocument" /> 为 null。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="srgsDocument" /> 包含无法解析的规则引用。</exception>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])">
      <summary>初始化来自 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 的实例的 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例，并指定成为语法入口点的规则的名称。</summary>
      <param name="srgsDocument">包含语音识别语法的约束的 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 的实例。</param>
      <param name="ruleName">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 null 。</param>
      <param name="parameters">通过入口点或创建的根规则的属性指定设置为指定的 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" /> 参数要传递至的 <see cref="T:System.Speech.Recognition.Grammar" /> 初始化处理程序。 此参数可以为 null。</param>
      <exception cref="T:System.ArgumentException">包含无效值的任何参数。 <paramref name="srgsDocument" /> 指定的 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 不包含 <paramref name="ruleName" />指定的规则。 数组参数的内容与初始化处理程序的任何规则的参数不匹配。</exception>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)">
      <summary>初始化来自 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 对象的 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例，指定一个根规则，并定义一个基统一资源标识符（URI）来解析相对规则引用。</summary>
      <param name="srgsDocument">语音识别语法的约束。</param>
      <param name="ruleName">规则标识符作为语音识别语法的入口点，按 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />默认根规则使用 null 。</param>
      <param name="baseUri">
        <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />或者 null中使用的基 URI 解决所有在语法描述中的任何相关规则引用，或</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ruleName" /> 无法解析或非公共，或者 <paramref name="ruleName" /> 为 null，并且 <paramref name="srgsDocument" /> 不包含根规则。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="srgsDocument" /> 为 null。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="srgsDocument" /> 包含无法解析的规则引用。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])">
      <summary>初始化来自 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 的实例的 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例，并指定成为语法入口的规则的名称及一个基 URI 来解析相对引用。</summary>
      <param name="srgsDocument">包含语音识别语法的约束的 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 的实例。</param>
      <param name="ruleName">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 null 。</param>
      <param name="baseUri">使用的基 URI 解决所有在语法描述中的任何相关规则 null引用，或</param>
      <param name="parameters">为项点或要创建的 <see cref="T:System.Speech.Recognition.Grammar" /> 的根规则传递到 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" /> 属性指定的初始化处理程序的参数。此参数可能为 Null。</param>
      <exception cref="T:System.ArgumentException">包含无效值的任何参数。 <paramref name="srgsDocument" /> 不包含 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 指定的规则 <paramref name="ruleName" />的指定中。 数组参数的内容与初始化处理程序的任何规则的参数不匹配。 语法具有无法由语法的默认基或<paramref name="baseUri" />提供的 URI <see cref="T:System.Uri" /> 解决的相对规则引用。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.String)">
      <summary>从文件中初始化 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例。</summary>
      <param name="path">以受支持的格式描述语音识别语法的文件路径。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> 包含了空字符串 ("")，或该文件对不包含根规则的语法进行了介绍。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 null。</exception>
      <exception cref="T:System.FormatException">文件不包含有效的说明,也不描述包含一个规则引用无法解析的语法。</exception>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例并指定根规则。</summary>
      <param name="path">以受支持的格式描述语音识别语法的文件路径。</param>
      <param name="ruleName">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 null 。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ruleName" /> 无法解析或非公共，<paramref name="path" /> 为空字符串 ("")，或者 <paramref name="ruleName" /> 为 null，并且语法说明不定义根规则。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 null。</exception>
      <exception cref="T:System.FormatException">文件不包含有效的说明,也不描述包含一个规则引用无法解析的语法。</exception>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])">
      <summary>初始化来自包含语法定义的文件的 <see cref="T:System.Speech.Recognition.Grammar" /> 类的新实例并指定成为语法入口的规则的名称。</summary>
      <param name="path">一个文件的路径，包括 DLL，包含语法规范。</param>
      <param name="ruleName">用作语音识别语法的入口点的规则标识符，或以使用语法说明的默认根规则 null 。</param>
      <param name="parameters">通过入口点或创建的根规则的属性指定设置为指定的 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" /> 参数要传递至的 <see cref="T:System.Speech.Recognition.Grammar" /> 初始化处理程序。 此参数可以为 null。</param>
      <exception cref="T:System.ArgumentException">包含无效值的任何参数。 <paramref name="path" /> 指定的文件不包含在 <paramref name="ruleName" />有效语法或规则指定的。 数组参数的内容与初始化处理程序的任何规则的参数不匹配。 语法具有无法由语法的默认基 <see cref="T:System.Uri" /> 规则解决的相对规则引用。</exception>
    </member>
    <member name="P:System.Speech.Recognition.Grammar.Enabled">
      <summary>获取或设置一个值，此值控制语音识别器是否可以使用 <see cref="T:System.Speech.Recognition.Grammar" /> 来进行识别。</summary>
      <returns>如果引用的语音识别语法在语音识别器当前加载， Enabled 属性返回 true；否则该属性返回 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Speech.Recognition.Grammar.IsStg">
      <summary>获取语法是否是强类型的。</summary>
      <returns>如果语法是强类型；IsStg 属性返回 true，否则属性返回 false。</returns>
    </member>
    <member name="P:System.Speech.Recognition.Grammar.Loaded">
      <summary>获取 <see cref="T:System.Speech.Recognition.Grammar" /> 是否已经由语音识别器加载。</summary>
      <returns>如果引用的语音识别语法在语音识别器当前加载， Loaded 属性返回 true ;否则该属性返回 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])">
      <summary>LoadLocalizedGrammarFromType 方法返回从 <see cref="T:System.Type" />派生的 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的本地化的实例。</summary>
      <returns>如果存在错误， LoadLocalizedGrammarFromType 方法返回 <see cref="T:System.Speech.Recognition.Grammar" />的有效对象基于 null 。</returns>
      <param name="type">在程序集中，基于 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的 <see cref="T:System.Type" />。</param>
      <param name="onInitParameters">要基于 <see cref="T:System.Speech.Recognition.Grammar" /> 被传递到本地化对象的初始化方法的参数。 此参数可以为 null。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.Grammar.Name">
      <summary>获取或设置 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的名称。</summary>
      <returns>Name 属性返回 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的名称。 默认值为 null。</returns>
    </member>
    <member name="P:System.Speech.Recognition.Grammar.Priority">
      <summary>获取或设置 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的优先级别值。</summary>
      <returns>Priority 属性返回表示特定 <see cref="T:System.Speech.Recognition.Grammar" />的相对优先级的整数值。 该范围包含从 -128 到 127。 默认值为 0。</returns>
    </member>
    <member name="P:System.Speech.Recognition.Grammar.ResourceName">
      <summary>使用用于加载当前 <see cref="T:System.Speech.Recognition.Grammar" /> 的二进制资源名称获取或设置值。</summary>
      <returns>ResourceName 属性返回强类型的语法，使用该 <see cref="T:System.Speech.Recognition.Grammar" />，加载二进制资源的名称。</returns>
    </member>
    <member name="P:System.Speech.Recognition.Grammar.RuleName">
      <summary>获取根规则或 <see cref="T:System.Speech.Recognition.Grammar" /> 对象入口点的名称。</summary>
      <returns>RuleName 属性返回识别引用的语音语法的根规则的标识符。 默认值为 null。</returns>
    </member>
    <member name="E:System.Speech.Recognition.Grammar.SpeechRecognized">
      <summary>当语音识别器执行使用 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的标识时引发。</summary>
    </member>
    <member name="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])">
      <summary>StgInit 方法初始的强类型语法。</summary>
      <param name="parameters">将被传递以初始化强类型语法的参数。此参数可能为 Null。</param>
    </member>
    <member name="P:System.Speech.Recognition.Grammar.Weight">
      <summary>获取或设置 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的宽度值。</summary>
      <returns>Weight 返回一个表明标识引擎实例当处理语音输入时应分配给语法的相对权重的浮点值的属性。 该范围包含从 0.0 到 1.0。 默认值为 1.0。</returns>
    </member>
    <member name="T:System.Speech.Recognition.GrammarBuilder">
      <summary>提供机制以便以编程方式为语音识别语法生成约束。</summary>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor">
      <summary>初始化 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 类的新的空实例。</summary>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)">
      <summary>从备选项的集合中初始化 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 类的新实例。</summary>
      <param name="alternateChoices">其他注意事项的集合。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)">
      <summary>从重复元素中初始化 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 类的新实例。</summary>
      <param name="builder">被重复元素。</param>
      <param name="minRepeat">必须发生构成匹配的输入匹配的要素定义的 <paramref name="builder" /> 的最小次数。</param>
      <param name="maxRepeat">可能发生构成匹配的输入匹配的要素定义的 <paramref name="builder" /> 的最大次数。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)">
      <summary>初始化语义钥中的 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 类的新实例。</summary>
      <param name="key">语义键。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)">
      <summary>初始化语义值中的 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 类的新实例。</summary>
      <param name="value">语义值或名称/值对。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)">
      <summary>从字序列中初始化 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 类的新实例。</summary>
      <param name="phrase">字符序列。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)">
      <summary>初始化来自 <see cref="T:System.String" /> 中的单词的序列的 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 类的新实例并指定 <see cref="T:System.String" /> 可以重复使用的次数。</summary>
      <param name="phrase">重复的字符序列。</param>
      <param name="minRepeat">必须发生构成匹配的输入匹配的短语的最小次数。</param>
      <param name="maxRepeat">可能发生构成匹配的输入匹配的短语的最大次数。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)">
      <summary>根据字序列的子集初始化 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 类的新实例。</summary>
      <param name="phrase">字符序列。</param>
      <param name="subsetMatchingCriteria">用于识别短语的语法识别语法的匹配模式。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)">
      <summary>创建包含后跟 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象的 <see cref="T:System.Speech.Recognition.Choices" /> 对象的新 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</summary>
      <returns>后跟 <paramref name="builder" /> 元素的 <paramref name="choices" /> 元素序列的 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</returns>
      <param name="choices">第一个表示重置系列的语法元素。</param>
      <param name="builder">第二个语法元素。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)">
      <summary>创建包含 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象后跟一 <see cref="T:System.Speech.Recognition.Choices" /> 对象的新 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</summary>
      <returns>后跟 <paramref name="choices" /> 元素的 <paramref name="builder" /> 元素序列的 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</returns>
      <param name="builder">第一个语法元素。</param>
      <param name="choices">第一个表示替换系列的语法元素。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)">
      <summary>创建包含两个 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象序列的新 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</summary>
      <returns>后跟 <paramref name="builder2" /> 元素的 <paramref name="builder1" /> 元素序列的 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</returns>
      <param name="builder1">第一个语法元素。</param>
      <param name="builder2">第二个语法元素。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)">
      <summary>创建包含后跟一个短语的 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象的新 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</summary>
      <returns>后跟 <paramref name="phrase" /> 元素的 <paramref name="builder" /> 元素序列的 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</returns>
      <param name="builder">第一个语法元素。</param>
      <param name="phrase">第二个表示字序列的语法元素。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)">
      <summary>创建包含 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象后跟的一个短语的新 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</summary>
      <returns>后跟 <paramref name="builder" /> 元素的 <paramref name="phrase" /> 元素序列的 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</returns>
      <param name="phrase">第一个表示字序列的语法元素。</param>
      <param name="builder">第二个语法元素。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)">
      <summary>为语法元素的当前顺序追加替代项集合。</summary>
      <param name="alternateChoices">要追加的替代组。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)">
      <summary>为语法元素的当前顺序追加语法元素。</summary>
      <param name="builder">追加的语法元素。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)">
      <summary>为语法元素的当前顺序追加重复的语法元素。</summary>
      <param name="builder">追加的重复语法元素。</param>
      <param name="minRepeat">必须发生构成匹配的输入匹配的要素定义的 <paramref name="builder" /> 的最小次数。</param>
      <param name="maxRepeat">可能发生构成匹配的输入匹配的要素定义的 <paramref name="builder" /> 的最大次数。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)">
      <summary>为语法元素的当前顺序追加语义密钥。</summary>
      <param name="key">要转换的语义键。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)">
      <summary>为语法元素的当前顺序追加语义值。</summary>
      <param name="value">要追加的语义值。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)">
      <summary>为语法元素的当前顺序追加短语。</summary>
      <param name="phrase">追加的字符序列。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)">
      <summary>为语法元素的当前顺序追加重复的短语。</summary>
      <param name="phrase">追加的重复的字符序列。</param>
      <param name="minRepeat">必须发生构成匹配的输入匹配的 <paramref name="phrase" /> 的最小次数。</param>
      <param name="maxRepeat">可能发生构成匹配的输入匹配的 <paramref name="phrase" /> 的最大次数。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)">
      <summary>为语法元素的当前顺序追加一个短语子集元素。</summary>
      <param name="phrase">追加的字符序列。</param>
      <param name="subsetMatchingCriteria">使用的语法识别该声明匹配的模式。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.AppendDictation">
      <summary>为语法元素的当前顺序追加默认的听写语法。</summary>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)">
      <summary>为语法元素的当前顺序追加指定的听写语法。</summary>
      <param name="category">附加口述语法的类别。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)">
      <summary>为语法元素的当前顺序追加语法定义文件。</summary>
      <param name="path">在一个支持的布局描述语音识别语法的路径通用资源标识符（URI）的文件。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)">
      <summary>为语法元素的当前顺序追加指定的语法定义文件规则。</summary>
      <param name="path">在一个支持的布局描述语音识别语法的路径通用资源标识符（URI）的文件路径。</param>
      <param name="rule">规则的追加、或追加语法文件的默认根规则的标识符 null 。</param>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard">
      <summary>为语法元素的当前顺序追加与任何输入匹配的识别语法元素。</summary>
    </member>
    <member name="P:System.Speech.Recognition.GrammarBuilder.Culture">
      <summary>获取或设置语音识别语法的区域性。</summary>
      <returns>
        <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 的区域性。 区域性是执行线程的<see cref="T:System.Threading.Thread.CurrentUICulture" />属性。</returns>
    </member>
    <member name="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases">
      <summary>获取一个字符串，此字符串显示  <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 包含的语法的内容和结构。</summary>
      <returns>当前内容和结构 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 的。</returns>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)">
      <summary>创建包含后跟 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象的 <see cref="T:System.Speech.Recognition.Choices" /> 对象的新 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</summary>
      <returns>返回 <paramref name="builder" /> 参数后面的 <paramref name="choices" /> 参数序列的 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</returns>
      <param name="choices">第一个表示重置系列的语法元素。</param>
      <param name="builder">第二个语法元素。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)">
      <summary>创建包含后跟一个 <see cref="T:System.Speech.Recognition.Choices" /> 的 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 的新 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</summary>
      <returns>返回 <paramref name="choices" /> 参数后面的 <paramref name="builder" /> 参数序列的 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</returns>
      <param name="builder">第一个语法元素。</param>
      <param name="choices">第二个表示重置系列的替换元素。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)">
      <summary>创建包含两个 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象序列的新 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</summary>
      <returns>返回 <paramref name="builder2" /> 参数后面的 <paramref name="builder1" /> 参数序列的 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</returns>
      <param name="builder1">第一个语法元素。</param>
      <param name="builder2">第二个语法元素。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)">
      <summary>创建包含后跟一个短语的 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 的新 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</summary>
      <returns>返回 <paramref name="phrase" /> 参数后面的 <paramref name="builder" /> 参数序列的 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</returns>
      <param name="builder">第一个语法元素。</param>
      <param name="phrase">第二个表示字序列的语法元素。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)">
      <summary>创建包含 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 后跟的一个短语的新 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</summary>
      <returns>返回 <paramref name="builder" /> 参数后面的 <paramref name="phrase" /> 参数序列的 <see cref="T:System.Speech.Recognition.GrammarBuilder" />。</returns>
      <param name="phrase">第一个表示字序列的语法元素。</param>
      <param name="builder">第二个语法元素。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder">
      <summary>将 <see cref="T:System.Speech.Recognition.Choices" /> 对象转换为 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象。</summary>
      <returns>被转换的 <see cref="T:System.Speech.Recognition.Choices" /> 对象。</returns>
      <param name="choices">要转换的替代组。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder">
      <summary>将 <see cref="T:System.Speech.Recognition.SemanticResultKey" /> 对象转换为 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象。</summary>
      <returns>被转换的 <see cref="T:System.Speech.Recognition.SemanticResultKey" /> 对象。</returns>
      <param name="semanticKey">要转换的语义键。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder">
      <summary>将 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 对象转换为 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象。</summary>
      <returns>被转换的<see cref="T:System.Speech.Recognition.SemanticResultValue" /> 对象。</returns>
      <param name="semanticValue">要转换的 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 对象。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder">
      <summary>将字符串转换为 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象。</summary>
      <returns>已转换的字符串。</returns>
      <param name="phrase">要转换的字符串。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs">
      <summary>为 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 对象的 LoadGrammarCompleted 事件提供数据。</summary>
    </member>
    <member name="P:System.Speech.Recognition.LoadGrammarCompletedEventArgs.Grammar">
      <summary>完成加载的 <see cref="T: System.Speech.Recognition.Grammar" /> 对象。</summary>
      <returns>识别器加载的<see cref="T:System.Speech.Recognition.Grammar" />。</returns>
    </member>
    <member name="T:System.Speech.Recognition.RecognitionEventArgs">
      <summary>提供有关语音识别事件的信息。</summary>
    </member>
    <member name="P:System.Speech.Recognition.RecognitionEventArgs.Result">
      <summary>获取与语音识别事件关联的识别结果数据。</summary>
      <returns>包含有关标识信息的 <see cref="P:System.Speech.Recognition.RecognitionEventArgs.Result" /> 属性返回 <see cref="T:System.Speech.Recognition.RecognitionResult" /> 。</returns>
    </member>
    <member name="T:System.Speech.Recognition.RecognitionResult">
      <summary>包含有关由 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 实例识别的输入的详细信息。</summary>
    </member>
    <member name="P:System.Speech.Recognition.RecognitionResult.Alternates">
      <summary>获取可能的匹配集合，以便输入至语音识别器。</summary>
      <returns>识别备用项的只读集合。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognitionResult.Audio">
      <summary>获取与识别结果关联的音频。</summary>
      <returns>如果识别器从启动调用的结果 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 实例的 EmulateRecognize 或 EmulateRecognizeAsync 方法，音频与标识结果或 null 。</returns>
    </member>
    <member name="M:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange(System.Speech.Recognition.RecognizedWordUnit,System.Speech.Recognition.RecognizedWordUnit)">
      <summary>在识别结果中获取与特定范围单词关联的音频部分。</summary>
      <returns>与字范围关联的音频的部分。</returns>
      <param name="firstWord">所表示范围中的第一个字。</param>
      <param name="lastWord">所表示范围中的最后一个日期。</param>
      <exception cref="T:System.NullReferenceException">从启动调用的结果生成的识别器 EmulateRecognize 或 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 对象的 EmulateRecognizeAsync 方法。</exception>
    </member>
    <member name="M:System.Speech.Recognition.RecognitionResult.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化目标对象所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 的实例。</summary>
      <param name="info">要填充数据的对象。</param>
      <param name="context">序列化的目标。</param>
    </member>
    <member name="T:System.Speech.Recognition.RecognizeCompletedEventArgs">
      <summary>为由 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 对象引发的 RecognizeCompleted 事件提供数据。</summary>
    </member>
    <member name="P:System.Speech.Recognition.RecognizeCompletedEventArgs.AudioPosition">
      <summary>获取输入设备音频流中与 <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted" /> 事件关联的位置。</summary>
      <returns>输入设备的音频流中关联的 <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted" /> 事件的位置。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizeCompletedEventArgs.BabbleTimeout">
      <summary>获取指示干扰超时是否生成了 <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted" /> 事件的值。</summary>
      <returns>true ，如果 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 检测到背景噪音比其 <see cref="P:System.Speech.Recognition.SpeechRecognitionEngine.BabbleTimeout" /> 属性指定的时间长；否则 false.</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InitialSilenceTimeout">
      <summary>获取指示初始无声段超时是否生成了 <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted" /> 事件的值。</summary>
      <returns>true 如果 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 检测到静止比其 <see cref="P:System.Speech.Recognition.SpeechRecognitionEngine.InitialSilenceTimeout" /> 属性指定的时间长；否则 false.</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InputStreamEnded">
      <summary>获取一个值，该值指示输入流是否已结束。</summary>
      <returns>true 如果识别器不再具有音频输入；否则， false。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizeCompletedEventArgs.Result">
      <summary>获取识别结果。</summary>
      <returns>如果标识操作成功的标识结果；否则， null。</returns>
    </member>
    <member name="T:System.Speech.Recognition.RecognizedAudio">
      <summary>表示与 <see cref="T:System.Speech.Recognition.RecognitionResult" /> 关联的音频输入。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedAudio.AudioPosition">
      <summary>获取可识别音频的开头在输入音频流中的位置。</summary>
      <returns>可识别的音频开始的输入音频流的位置。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedAudio.Duration">
      <summary>获取已识别音频的输入音频流的持续时间。</summary>
      <returns>可识别的音频开始的输入音频流中的持续时间。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedAudio.Format">
      <summary>获取识别引擎处理的音频格式。</summary>
      <returns>语音识别器处理的音频的格式。</returns>
    </member>
    <member name="M:System.Speech.Recognition.RecognizedAudio.GetRange(System.TimeSpan,System.TimeSpan)">
      <summary>选择并返回当前已识别音频为二进制数据的部分。</summary>
      <returns>返回可识别的音频的小节，如 <paramref name="audioPosition" /> 和 <paramref name="duration" /> 所定义。</returns>
      <param name="audioPosition">将返回的起点音频数据。</param>
      <param name="duration">要返回的段的长度。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="audioPosition" /> 和 <paramref name="duration" /> 在当前段范围之外定义音频段。</exception>
      <exception cref="T:System.InvalidOperationException">识别出当前的音频不包含任何数据。</exception>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedAudio.StartTime">
      <summary>获取在标识操作开始时的系统时间。</summary>
      <returns>在识别操作开始时的系统时间。</returns>
    </member>
    <member name="M:System.Speech.Recognition.RecognizedAudio.WriteToAudioStream(System.IO.Stream)">
      <summary>向一个流写入作为原始数据的整个音频。</summary>
      <param name="outputStream">将接收经过音频数据的流。</param>
    </member>
    <member name="M:System.Speech.Recognition.RecognizedAudio.WriteToWaveStream(System.IO.Stream)">
      <summary>编写音频定向到波形格式的流。</summary>
      <param name="outputStream">将接收经过音频数据的流。</param>
    </member>
    <member name="T:System.Speech.Recognition.RecognizedPhrase">
      <summary>包含由语音识别器生成的有关识别的输入的详细信息。</summary>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.Confidence">
      <summary>获取识别器分配的值，此值表示 <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> 与给定输入匹配的可能性。</summary>
      <returns>对正确识别语法的确定性的相对度量。 该值分别为从 0.0 到 1.0，从低到高置信。</returns>
    </member>
    <member name="M:System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics">
      <summary>返回在 <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> 对象的语义信息的一个语义标记语言 (SML) 文档。</summary>
      <returns>返回 <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> 的语义 SML 声明作为 XPath 可导航对象。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.Grammar">
      <summary>获取语音识别器用于返回 <see cref="T:System.Speech.Recognition.RecognizedPhrase" /> 的  <see cref="T:System.Speech.Recognition.Grammar" />。</summary>
      <returns>语法对象用于语音识别器标识输入。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId">
      <summary>获取短语同音字组的标识符。</summary>
      <returns>短语同音字组的标识符。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.Homophones">
      <summary>获取识别备用项的集合，该备用项具有与此识别语法一样的发音。</summary>
      <returns>只读识别备用项的集合，该备用项具有与此识别语法一样的发音。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits">
      <summary>获取语音识别器作为语音到文本规范化一部分更改的文本的相关信息。</summary>
      <returns>
        <see cref="T:System.Speech.Recognition.ReplacementText" /> 对象的集合，这些对象在语音识别器规范化已识别输入时所替换的文本部分。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.Semantics">
      <summary>获取与所识别的短语相关的语义信息。</summary>
      <returns>与所识别的声明的语义信息。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.Text">
      <summary>获取通过语音识别器从识别的输入中生成的规划法文本。</summary>
      <returns>通过语音识别器从识别的输入中生产的常规文本。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedPhrase.Words">
      <summary>通过语音识别器从识别的输入中获取词句。</summary>
      <returns>
        <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> 语音识别器生成的识别输入的对象的集合。</returns>
    </member>
    <member name="T:System.Speech.Recognition.RecognizedWordUnit">
      <summary>提供可识别的语音的原子单元。</summary>
    </member>
    <member name="M:System.Speech.Recognition.RecognizedWordUnit.#ctor(System.String,System.Single,System.String,System.String,System.Speech.Recognition.DisplayAttributes,System.TimeSpan,System.TimeSpan)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> 类的新实例。</summary>
      <param name="text">一个无法识别的字符串的正常化的文本。 该值可以是 null、"" 或 <see cref="P:System.String.Empty" />。</param>
      <param name="confidence">0.0 到 1.0 中指示单词标识的确定性的 float 值。</param>
      <param name="pronunciation">一个无法识别的单词的语音拼写。 该值可以是 null、"" 或 <see cref="F:System.String.Empty" />。</param>
      <param name="lexicalForm">一个识别字的非正常化文本。 需要使用此参数可能不是 null， " "或 <see cref="F:System.String.Empty" />。</param>
      <param name="displayAttributes">定义使用空白显示识别的词。</param>
      <param name="audioPosition">音频输入流的已识别的单词的位置。 此值可为 <see cref="F:System.TimeSpan.Zero" />。</param>
      <param name="audioDuration">音频输入的长度对应已识别的单词。 此值可为 <see cref="F:System.TimeSpan.Zero" />。</param>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedWordUnit.Confidence">
      <summary>获取识别器分配的值，此值表示已识别的单词与给定输入匹配的可能性。</summary>
      <returns>对正确识别单词的确定性的相对度量。 该值分别为从 0.0 到 1.0，从低到高置信。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes">
      <summary>获取用于通过当前 <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> 实例创建文本输出的格式化信息。</summary>
      <returns>指定<see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> 显示对象的内容的空白使用。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedWordUnit.LexicalForm">
      <summary>获取已识别的字符串的非正常化的文本。</summary>
      <returns>返回没有任何正常化的无法识别的单词的文本的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedWordUnit.Pronunciation">
      <summary>获取已识别单词的注音拼写。</summary>
      <returns>支持的语音字母表中的字符组成的字符串，如国际音标 (IPA) 或通用电话集 (UPS)。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizedWordUnit.Text">
      <summary>获取已识别单词的规划化文本。</summary>
      <returns>包含给定输入单词的规范化文本输出的字符串。</returns>
    </member>
    <member name="T:System.Speech.Recognition.RecognizeMode">
      <summary>枚举识别模式的值。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Recognition.RecognizeMode.Multiple">
      <summary>指定了不在完成之后终止的识别。</summary>
    </member>
    <member name="F:System.Speech.Recognition.RecognizeMode.Single">
      <summary>指定了不在完成之后终止的识别。</summary>
    </member>
    <member name="T:System.Speech.Recognition.RecognizerInfo">
      <summary>表示有关 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 接口的信息。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.RecognizerInfo.AdditionalInfo">
      <summary>获取有关 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 实例的相关附加信息。</summary>
      <returns>返回包含有关 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 对象配置信息的 <see cref="T:System.Collections.Generic.IDictionary" /> 实例。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizerInfo.Culture">
      <summary>获取 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 实例支持的区域性。</summary>
      <returns>返回有关给定的 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 实例支持的区域性的信息。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizerInfo.Description">
      <summary>获取 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 实例的说明。</summary>
      <returns>返回描述特定 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 实例的配置的 string。</returns>
    </member>
    <member name="M:System.Speech.Recognition.RecognizerInfo.Dispose">
      <summary>处置此 RecognizerInfo 对象。</summary>
    </member>
    <member name="P:System.Speech.Recognition.RecognizerInfo.Id">
      <summary>获取 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 实例的标识符。</summary>
      <returns>返回特定 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 实例的标识符。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizerInfo.Name">
      <summary>获取 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 实例的友好名称。</summary>
      <returns>返回特定 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 实例的友好名称。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats">
      <summary>获取 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 实例支持的音频格式。</summary>
      <returns>返回给定 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 实例支持的音频格式列表。</returns>
    </member>
    <member name="T:System.Speech.Recognition.RecognizerState">
      <summary>枚举识别器状态的值。</summary>
    </member>
    <member name="F:System.Speech.Recognition.RecognizerState.Listening">
      <summary>标识引擎可接收和分析音频输入。</summary>
    </member>
    <member name="F:System.Speech.Recognition.RecognizerState.Stopped">
      <summary>标识引擎不接收或不分析音频输入。</summary>
    </member>
    <member name="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs">
      <summary>从 <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerUpdateReached" /> 或 <see cref="E:System.Speech.Recognition.SpeechRecognizer.RecognizerUpdateReached" /> 事件返回数据。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.AudioPosition">
      <summary>获取与事件关联的音频位置。</summary>
      <returns>返回 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 或 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 的语音缓冲区暂停和引发 RecognizerUpdateReached 事件时，该缓冲区内的位置。</returns>
    </member>
    <member name="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.UserToken">
      <summary>当应用程序调用 <see cref="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate" /> 或 <see cref="Overload:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate" /> 时，获取 UserToken 传递到系统。</summary>
      <returns>返回包含 UserToken 的对象。</returns>
    </member>
    <member name="T:System.Speech.Recognition.ReplacementText">
      <summary>包含有关在识别结果中执行的语音规范化程序的信息。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.ReplacementText.CountOfWords">
      <summary>获取语音规范化程序替换的已识别单词的数量。</summary>
      <returns>返回语音规范化程序替换的已识别字的数目。</returns>
    </member>
    <member name="P:System.Speech.Recognition.ReplacementText.DisplayAttributes">
      <summary>获取语音规范化程序替换的文本的前导和尾随空格的相关信息。</summary>
      <returns>返回指定使用空白规范化显示替换文本的 <see cref="T:System.Speech.Recognition.DisplayAttributes" /> 对象。</returns>
    </member>
    <member name="P:System.Speech.Recognition.ReplacementText.FirstWordIndex">
      <summary>获取由语音规范化程序替换的第一个可识别单词的位置。</summary>
      <returns>返回语音规范化程序替换的识别的第一个字的位置。</returns>
    </member>
    <member name="P:System.Speech.Recognition.ReplacementText.Text">
      <summary>获取语音规范化程序替换的已识别文本。</summary>
      <returns>返回语音规范化程序替换的已识别文本。</returns>
    </member>
    <member name="T:System.Speech.Recognition.SemanticResultKey">
      <summary>将密匙字符串与 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 值关联，以定义 <see cref="T:System.Speech.Recognition.SemanticValue" /> 对象。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])">
      <summary>分配一个语义密匙给一个或多个 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象，用于创建语音识别语法。</summary>
      <param name="semanticResultKey">要用于作为语义关键访问 <see cref="T:System.Speech.Recognition.SemanticValue" /> 与参数指定的对象 <see cref="T:System.Speech.Recognition.GrammarBuilder" />关联的实例 <paramref name="builders" /> 的标记。</param>
      <param name="builders">将与可用 <paramref name="semanticResultKey" /> 中定义的标记访问的 <see cref="T:System.Speech.Recognition.SemanticValue" /> 对象相关联的语法组件的数组。</param>
    </member>
    <member name="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])">
      <summary>分配一个语义密匙给一个或多个 <see cref="T:System.String" /> 实例，用于创建语音识别语法。</summary>
      <param name="semanticResultKey">要用于访问 <see cref="T:System.Speech.Recognition.SemanticValue" /> 与参数指定的对象 <see cref="T:System.String" />关联的实例 <paramref name="phrases" /> 的标记。</param>
      <param name="phrases">一个或多个 <see cref="T:System.String" /> 对象，其连接文本将与使用定义在 <paramref name="semanticResultKey" /> 标记可访问的 <see cref="T:System.Speech.Recognition.SemanticValue" /> 对象关联。</param>
    </member>
    <member name="M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder">
      <summary>从 <see cref="T:System.Speech.Recognition.SemanticResultKey" /> 实例返回 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 结构的实例。</summary>
    </member>
    <member name="T:System.Speech.Recognition.SemanticResultValue">
      <summary>表示一个语义值和选择性地将该值与语音识别语法的组件关联。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)">
      <summary>使用指定的语义值初始化 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 类的新实例。</summary>
      <param name="value">由 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 托管的值。 必须是类型 bool、int、float，或 string。</param>
    </member>
    <member name="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)">
      <summary>使用 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 和 <see cref="" /> 对象初始化 T:System.Speech.Recognition.SemanticResultValue 类和关联语义值的一个新实例。</summary>
      <param name="builder">要用于识别的语法组件。</param>
      <param name="value">由 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 托管的值。 必须是类型 bool、int、float，或 string。</param>
    </member>
    <member name="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)">
      <summary>使用 <see cref="T:System.String" /> 和 <see cref="" /> 对象初始化 T:System.Speech.Recognition.SemanticResultValue 类和关联语义值的一个新实例。</summary>
      <param name="phrase">要用于识别的短语。</param>
      <param name="value">由 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 托管的值。 必须是类型 bool、int、float，或 string。</param>
    </member>
    <member name="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder">
      <summary>从 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 实例返回 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 结构的实例。</summary>
      <returns>从 <see cref="T:System.Speech.Recognition.SemanticResultValue" /> 实例返回 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 结构的实例。</returns>
    </member>
    <member name="T:System.Speech.Recognition.SemanticValue">
      <summary>表示一个识别的短语的语义组织。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SemanticValue.#ctor(System.Object)">
      <summary>使用指定的语义值初始化 <see cref="T:System.Speech.Recognition.SemanticValue" /> 类的新实例。</summary>
      <param name="value">在 <see cref="T:System.Speech.Recognition.SemanticValue" /> 对象要存储的信息。</param>
    </member>
    <member name="M:System.Speech.Recognition.SemanticValue.#ctor(System.String,System.Object,System.Single)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SemanticValue" /> 类的新实例并指定一个语义值、键名称和置信度。</summary>
      <param name="keyName">可用于引用此 <see cref="T:System.Speech.Recognition.SemanticValue" /> 实例的密钥。</param>
      <param name="value">一个对象包含要存储在 <see cref="T:System.Speech.Recognition.SemanticValue" /> 对象中的信息。</param>
      <param name="confidence">包含对语义分析的确定性进行估计的 float。</param>
    </member>
    <member name="P:System.Speech.Recognition.SemanticValue.Confidence">
      <summary>返回有关返回 <see cref="T:System.Speech.Recognition.SemanticValue" /> 的当前实例的语义分析的正确性的某个相对度量。</summary>
      <returns>返回某个返回 <see cref="T:System.Speech.Recognition.SemanticValue" /> 的当前实例的语义分析的相对度量的 float。</returns>
    </member>
    <member name="M:System.Speech.Recognition.SemanticValue.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})">
      <summary>指示当前 <see cref="T:System.Speech.Recognition.SemanticValue" /> 实例集合是否包含特定键和表示为键/值对的 <see cref="T:System.Speech.Recognition.SemanticValue" /> 的特定实例。</summary>
      <returns>如果当前 <see cref="T:System.Speech.Recognition.SemanticValue" /> 包含 KeyValuePair&lt;String, SemanticValue&gt; 的实例键字符串和 <see cref="T:System.Speech.Recognition.SemanticValue" /> 的指定值，则返回 bool 即 true。 否则将返回 false。</returns>
      <param name="item">为键字符串和 <see cref="T:System.Speech.Recognition.SemanticValue" /> 实例的给定值实例化的 <see cref="T:System.Collections.Generic.KeyValuePair" /> 实例。</param>
    </member>
    <member name="M:System.Speech.Recognition.SemanticValue.ContainsKey(System.String)">
      <summary>指示当前 <see cref="T:System.Speech.Recognition.SemanticValue" /> 实例集合是否包含具有给定的键字符串的子 <see cref="T:System.Speech.Recognition.SemanticValue" /> 实例。</summary>
      <returns>返回 bool、true ，如果以字符串 <paramref name="key" /> 标记的 <see cref="T:System.Speech.Recognition.SemanticValue" /> 子实例被找到， 如果没有，返回 false。</returns>
      <param name="key">包含<see cref="T:System.String" /> 用于标识 <see cref="T:System.Speech.Recognition.SemanticValue" /> 子实例在当前 <see cref="T:System.Speech.Recognition.SemanticValue" />下的键字符串。</param>
    </member>
    <member name="P:System.Speech.Recognition.SemanticValue.Count">
      <summary>返回当前 <see cref="T:System.Speech.Recognition.SemanticValue" /> 实例下子 <see cref="T:System.Speech.Recognition.SemanticValue" /> 对象的数目。</summary>
      <returns>返回当前 <see cref="T:System.Speech.Recognition.SemanticValue" /> 实例下的子 <see cref="T:System.Speech.Recognition.SemanticValue" /> 对象的数目。</returns>
    </member>
    <member name="M:System.Speech.Recognition.SemanticValue.Equals(System.Object)">
      <summary>确定指定的对象是否为 SemanticValue 的实例，并与当前 SemanticValue 实例相等。</summary>
      <returns>如果指定的对象等于当前对象，则为 true；否则为 false。</returns>
      <param name="obj">要计算的对象。</param>
    </member>
    <member name="M:System.Speech.Recognition.SemanticValue.GetHashCode">
      <summary>提供 SemanticValue 对象的哈希代码。</summary>
      <returns>当前 <see cref="T:System.Speech.Recognition.SemanticValue" /> 对象的哈希代码。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SemanticValue.Item(System.String)">
      <summary>返回属于当前 <see cref="T:System.Speech.Recognition.SemanticValue" />的子 <see cref="T:System.Speech.Recognition.SemanticValue" /> 实例。</summary>
      <returns>返回当前 <see cref="T:System.Speech.Recognition.SemanticValue" /> 可以索引作为键值对的部分：KeyValuePair&lt;String,SemanticValue&gt; 的子级。</returns>
      <param name="key">在 <see cref="T:System.Speech.Recognition.SemanticValue" /> 的当前实例中包含 KeyValuePair&lt;String, SemanticValue&gt; 的密钥。</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">如果当前实例<see cref="T:System.Speech.Recognition.SemanticValue" /> 的子成员没有与<paramref name="key" /> 参数匹配 ，放弃安装。</exception>
      <exception cref="T:System.InvalidOperationException">如果代码在给定索引下尝试更改 <see cref="T:System.Speech.Recognition.SemanticValue" />，放弃安装。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})">
      <summary>将指定键的和 <see cref="T:System.Speech.Recognition.SemanticValue" /> 添加到集合。</summary>
      <param name="key">
        <see cref="T:System.Speech.Recognition.SemanticValue" />的密钥。</param>
    </member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{T}#Clear">
      <summary>从集合中移除所有的键/值对。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}[],System.Int32)">
      <summary>将一个键/值对复制到目标数组的特定位置。</summary>
      <param name="array">操作的目标的键/值对的数组。</param>
      <param name="index">指定将复制键/值对到数组中的位置的整数。</param>
    </member>
    <member name="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>获取一个值，该值指示该集合是否为只读集合。</summary>
      <returns>返回一个值，该值指示该集合是否为只读集合。</returns>
    </member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})">
      <summary>从集合中移除指定的键和 <see cref="T:System.Speech.Recognition.SemanticValue" />。</summary>
      <returns>如果该键/值对已成功从集合移除，则返回 true；否则该方法返回 false。 如果在集合中找不到该键/值对，此方法也会返回 false。</returns>
      <param name="key">
        <see cref="T:System.Speech.Recognition.SemanticValue" />的密钥。</param>
    </member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{TKey@TValue}#Add(System.String,System.Speech.Recognition.SemanticValue)">
      <summary>将指定的键和 <see cref="T:System.Speech.Recognition.SemanticValue" /> 添加到字典中。</summary>
      <param name="key">
        <see cref="T:System.Speech.Recognition.SemanticValue" />的密钥。</param>
      <param name="value">要相加的 <see cref="T:System.Speech.Recognition.SemanticValue" />。</param>
    </member>
    <member name="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary>获取包含来自据键/值对的字典的密钥的集合。</summary>
      <returns>返回包含来自键/值对的字典的密钥的集合。</returns>
    </member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{TKey@TValue}#Remove(System.String)">
      <summary>从字典中移除指定的键和 <see cref="T:System.Speech.Recognition.SemanticValue" />。</summary>
      <returns>如果该键/值对已成功从目录移除，则返回 true；否则该方法返回 false。 如果在字典中找不到该键/值对，此方法也会返回 false。</returns>
      <param name="key">
        <see cref="T:System.Speech.Recognition.SemanticValue" />的密钥。</param>
    </member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{TKey@TValue}#TryGetValue(System.String,System.Speech.Recognition.SemanticValue@)">
      <summary>获取具有指定键的 <see cref="T:System.Speech.Recognition.SemanticValue" /> 相关联。</summary>
      <returns>如果字典包含具有指定键的键/值对，则返回 true；否则该方法返回 false。</returns>
      <param name="key">
        <see cref="T:System.Speech.Recognition.SemanticValue" />的密钥。</param>
      <param name="value">要获取的 <see cref="T:System.Speech.Recognition.SemanticValue" />。</param>
    </member>
    <member name="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary>获取包含来自键或值对的值的集合。</summary>
      <returns>返回包含来自键或值对的值的集合。</returns>
    </member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>返回一个循环访问集合的枚举器。</summary>
      <returns>返回一个循环访问集合的枚举器。</returns>
    </member>
    <member name="M:System.Speech.Recognition.SemanticValue.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回一个循环访问集合的枚举器。</summary>
      <returns>返回一个循环访问集合的枚举器。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SemanticValue.Value">
      <summary>返回当前 <see cref="T:System.Speech.Recognition.SemanticValue" /> 中包含的信息的只读属性。</summary>
      <returns>返回包含存储在当前 <see cref="T:System.Speech.Recognition.SemanticValue" /> 实例信息的 <see cref="T:System.Object" /> 实例。</returns>
    </member>
    <member name="T:System.Speech.Recognition.SpeechDetectedEventArgs">
      <summary>从 <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected" /> 或 <see cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechDetected" /> 事件返回数据。</summary>
    </member>
    <member name="P:System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition">
      <summary>获取语音在音频流中的检测位置。</summary>
      <returns>返回识别引起的语音缓冲区内检测到的短语的位置。</returns>
    </member>
    <member name="T:System.Speech.Recognition.SpeechHypothesizedEventArgs">
      <summary>从 <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" /> 或 <see cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" /> 事件返回通知。 此类支持 .NET Framework 基础结构，但不应在应用程序代码中直接使用。</summary>
    </member>
    <member name="T:System.Speech.Recognition.SpeechRecognitionEngine">
      <summary>提供访问和管理进程内语音识别引擎。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor">
      <summary>使用系统的默认语音识别器来初始化 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Globalization.CultureInfo)">
      <summary>使用指定的区域设置的默认语音识别器来初始化 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 类的新实例。</summary>
      <param name="culture">语音识别器必须支持的区域设置。</param>
      <exception cref="T:System.ArgumentException">未安装的语音识别器都不支持区域设置，或者 <paramref name="culture" /> 为固定区域性。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Culture" /> 为 null。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Speech.Recognition.RecognizerInfo)">
      <summary>用 <see cref="T:System.Speech.Recognition.RecognizerInfo" /> 对象中的信息初始化  <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 来指定要使用的识别器。</summary>
      <param name="recognizerInfo">特定语音识别器的信息。</param>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.String)">
      <summary>使用字符串参数初始化 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 类的新实例，该参数指定要使用的识别器的名称。</summary>
      <param name="recognizerId">使用一个识别器的标记名称。</param>
      <exception cref="T:System.ArgumentException">没有带有此标记名称的语音识别器未安装，或者 <paramref name="recognizerId" /> 是空字符串 ("")。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recognizerId" /> 为 null。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioFormat">
      <summary>获取 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 接收的音频格式。</summary>
      <returns>音频格式于实例 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 输入或 null ，如果输入不配置或设置为无效输入。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevel">
      <summary>获取 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 接收的音频级别.</summary>
      <returns>输入的音频级别到语音识别器，从 0 到 100。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevelUpdated">
      <summary>当 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 报告其音频输入的级别的时候引发。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioPosition">
      <summary>获取音频流中的当前位置，此音频流由向 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 提供输入的设备产生。</summary>
      <returns>输入设备生成的音频流中的当前位置。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioSignalProblemOccurred">
      <summary>当 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 检测在音频信号的问题的时候引发。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioState">
      <summary>获取 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />接收的状态音频.</summary>
      <returns>语音识别器处理的音频输入的状态。</returns>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioStateChanged">
      <summary>当状态在 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 接收的音频更改的时候引发。</summary>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.BabbleTimeout">
      <summary>获取或设置时间间隔，在此时间间隔内，<see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 将在终结识别之前接受仅包含背景噪音的输入。</summary>
      <returns>计时器间隔的持续时间。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">该属性已设置为小于 0 秒。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose">
      <summary>处置此 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 对象。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose(System.Boolean)">
      <summary>处置 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 对象并释放对该会话期间使用的资源。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)">
      <summary>使用文本代替同步语音识别的音频来模拟特定字输入到语音识别器，并指定识别器如何处理单词和加载的语音识别语法间的 Unicode 比较。</summary>
      <returns>输入的标识结果或 null ，如果操作不成功或识别器未启用。</returns>
      <param name="wordUnits">词单元数组，包含识别操作输入。</param>
      <param name="compareOptions">描述用于模拟识别操作的比较说明类型的枚举值的按位组合。</param>
      <exception cref="T:System.InvalidOperationException">识别器没有加载的语音识别语法。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wordUnits" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="wordUnits" /> 包含一个或多个 null 元素。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="compareOptions" /> 包含值 <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />， <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />，或 <see cref="F:System.Globalization.CompareOptions.StringSort" /> 标志。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String)">
      <summary>使用文本代替同步语音识别的音频来模拟输入短语到语音识别器。</summary>
      <returns>输入的标识结果或 null ，如果操作不成功或识别器未启用。</returns>
      <param name="inputText">标识操作的输入。</param>
      <exception cref="T:System.InvalidOperationException">识别器没有加载的语音识别语法。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputText" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputText" /> 是空字符串 ("")。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String,System.Globalization.CompareOptions)">
      <summary>使用文本代替异步语音识别的音频来模拟短语输入到语音识别器，并指定识别器如何处理短语和加载的语音识别语法间的 Unicode 比较。</summary>
      <returns>输入的标识结果或 null ，如果操作不成功或识别器未启用。</returns>
      <param name="inputText">标识操作的输入相。</param>
      <param name="compareOptions">描述用于模拟识别操作的比较说明类型的枚举值的按位组合。</param>
      <exception cref="T:System.InvalidOperationException">识别器没有加载的语音识别语法。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputText" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputText" /> 是空字符串 ("")。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="compareOptions" /> 包含值 <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />， <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />，或 <see cref="F:System.Globalization.CompareOptions.StringSort" /> 标志。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)">
      <summary>使用 <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> 对象的数组代替异步语音识别的音频来模拟特定字输入到语音识别器，并指定识别器如何处理单词和加载的语音识别语法间的 Unicode 比较。</summary>
      <param name="wordUnits">词单元数组，包含识别操作输入。</param>
      <param name="compareOptions">描述用于模拟识别操作的比较说明类型的枚举值的按位组合。</param>
      <exception cref="T:System.InvalidOperationException">识别器没有加载的语音识别语法，或者识别器不是完全标识的异步操作。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wordUnits" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="wordUnits" /> 包含一个或多个 null 元素。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="compareOptions" /> 包含值 <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />， <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />，或 <see cref="F:System.Globalization.CompareOptions.StringSort" /> 标志。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String)">
      <summary>使用文本代替异步语音识别的音频来模拟输入到语音识别器。</summary>
      <param name="inputText">标识操作的输入。</param>
      <exception cref="T:System.InvalidOperationException">识别器没有加载的语音识别语法，或者识别器不是完全标识的异步操作。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputText" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputText" /> 是空字符串 ("")。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)">
      <summary>使用文本代替异步语音识别的音频来模拟短语输入到语音识别器，并指定识别器如何处理短语和加载的语音识别语法间的 Unicode 比较。</summary>
      <param name="inputText">标识操作的输入相。</param>
      <param name="compareOptions">描述用于模拟识别操作的比较说明类型的枚举值的按位组合。</param>
      <exception cref="T:System.InvalidOperationException">识别器没有加载的语音识别语法，或者识别器不是完全标识的异步操作。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputText" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputText" /> 是空字符串 ("")。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="compareOptions" /> 包含值 <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />， <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />，或 <see cref="F:System.Globalization.CompareOptions.StringSort" /> 标志。</exception>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted">
      <summary>当 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 完成模拟输入的异步标识操作的时候引发。</summary>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeout">
      <summary>获取或设置 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 将在终结识别操作之前，于明确输入末尾接受的无声段间隔。</summary>
      <returns>安静间隔的持续时间。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">将属性设置为小于 0 秒或大于 10 秒。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeoutAmbiguous">
      <summary>获取或设置 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 将在终结识别操作之前，于二义性输入末尾接受的无声段间隔。</summary>
      <returns>安静间隔的持续时间。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">将属性设置为小于 0 秒或大于 10 秒。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.Grammars">
      <summary>获取 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 中的实例加载 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的集合。</summary>
      <returns>
        <see cref="T:System.Speech.Recognition.Grammar" /> 对象的集合。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.InitialSilenceTimeout">
      <summary>获取或设置时间间隔，在此时间间隔内，<see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 将在终结识别之前接受仅包含无声段的输入。</summary>
      <returns>安静间隔的持续时间。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">该属性已设置为小于 0 秒。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.InstalledRecognizers">
      <summary>返回有关当前系统中安装的所有语音识别器的信息。</summary>
      <returns>描述安装的识别器的 <see cref="T:System.Speech.Recognition.RecognizerInfo" /> 对象的只读集合。</returns>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammar(System.Speech.Recognition.Grammar)">
      <summary>同步加载 <see cref="T:System.Speech.Recognition.Grammar" /> 对象。</summary>
      <param name="grammar">要加载的语法对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Grammar" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="Grammar" /> 不在有效状态中。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarAsync(System.Speech.Recognition.Grammar)">
      <summary>异步加载语音识别语法。</summary>
      <param name="grammar">加载语音识别语法。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Grammar" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="Grammar" /> 不在有效状态中。</exception>
      <exception cref="T:System.OperationCanceledException">取消异步操作。</exception>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarCompleted">
      <summary>当 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 完成 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的异步加载时候引发。</summary>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.MaxAlternates">
      <summary>获取或设置 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 为每个识别操作返回的备用识别结果的最大数量。</summary>
      <returns>要返回的替换结果的数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Speech.Recognition.SpeechRecognitionEngine.MaxAlternates" /> 设置为小于 0 的值。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.QueryRecognizerSetting(System.String)">
      <summary>为识别器返回设置的值。</summary>
      <returns>设置的值。</returns>
      <param name="settingName">要返回的设置的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settingName" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="settingName" /> 是空字符串 ("")。</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">不用该名称设置的识别器。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize">
      <summary>执行同步语音识别操作。</summary>
      <returns>输入的标识结果或 null ，如果操作不成功或识别器未启用。</returns>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize(System.TimeSpan)">
      <summary>使用指定初始静音超时执行同步语音识别操作。</summary>
      <returns>输入的标识结果或 null ，如果操作不成功或识别器未启用。</returns>
      <param name="initialSilenceTimeout">时间间隔语音识别器接受仅包含在完成标识之前的无声输入。</param>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync">
      <summary>执行单个异步语音识别操作。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync(System.Speech.Recognition.RecognizeMode)">
      <summary>执行一个或多个异步语音识别操作。</summary>
      <param name="mode">指示是否执行一个或多个识别操作。</param>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncCancel">
      <summary>停止异步标识，而不必等待当前标识该操作完成。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncStop">
      <summary>当前标识该操作完成后，停止异步标识。</summary>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted">
      <summary>当 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 完成异步标识操作的时候引发。</summary>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerAudioPosition">
      <summary>获取在处理的音频输入中的 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 当前位置。</summary>
      <returns>识别器的位置在处理音频的输入。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerInfo">
      <summary>获取有关 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 的当前实例的信息。</summary>
      <returns>有关当前语音识别器的相关信息。</returns>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerUpdateReached">
      <summary>当运行的 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 暂停接受修改时引发。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate">
      <summary>请求识别器暂停更新其状态。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object)">
      <summary>请求识别器暂停更新其状态并为关联的事件提供用户标记。</summary>
      <param name="userToken">用户定义信息包含该操作的信息。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object,System.TimeSpan)">
      <summary>请求识别器暂停更新其状态并为关联的事件提供偏移量和用户标记。</summary>
      <param name="userToken">用户定义信息包含该操作的信息。</param>
      <param name="audioPositionAheadToRaiseUpdate">从延迟请求的当前 <see cref="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioPosition" /> 的偏移量。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)">
      <summary>配置 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 对象以接收来自音频流的输入。</summary>
      <param name="audioSource">音频输入流。</param>
      <param name="audioFormat">这种音频输入的格式。</param>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToDefaultAudioDevice">
      <summary>配置 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 对象以接收来自默认音频设备的输入。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull">
      <summary>禁用到语音识别器的输入。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveFile(System.String)">
      <summary>配置 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 对象以接收从波形音频格式 (.wav) 文件的输入。</summary>
      <param name="path">要作为输入的文件的路径。</param>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveStream(System.IO.Stream)">
      <summary>配置 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 对象以接收来自包含波形音频格式 (.wav) 数据的流的输入。</summary>
      <param name="audioSource">包含音频数据的流。</param>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected">
      <summary>当 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 检测它可以标识为语音的输入的时候引发。</summary>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized">
      <summary>当 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 识别了可能是一个语法的多个完整的短语的组件的一个或多个单词的时候引发。</summary>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected">
      <summary>当 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 采用不与其加载启用的 <see cref="T:System.Speech.Recognition.Grammar" /> 对象匹配的输入的时候引发。</summary>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized">
      <summary>当 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 采用与其加载启用的 <see cref="T:System.Speech.Recognition.Grammar" /> 对象匹配的输入的时候引发。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadAllGrammars">
      <summary>从卸载识别器的所有 <see cref="T:System.Speech.Recognition.Grammar" /> 对象。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadGrammar(System.Speech.Recognition.Grammar)">
      <summary>从指定的 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 实例卸载一个指定的 <see cref="T:System.Speech.Recognition.Grammar" /> 对象。</summary>
      <param name="grammar">未加载的语法对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Grammar" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">此语法识别器未加载，或者此识别器当前加载的语法异步。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.Int32)">
      <summary>指定的整数值的 <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> 指定设置。</summary>
      <param name="settingName">设置为更新的名称。</param>
      <param name="updatedValue">设置的新建值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settingName" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="settingName" /> 是空字符串 ("")。</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">不用该名称设置的识别器。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.String)">
      <summary>更新指定字符串值设定的指定语音识别引擎。</summary>
      <param name="settingName">设置为更新的名称。</param>
      <param name="updatedValue">设置的新建值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settingName" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="settingName" /> 是空字符串 ("")。</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">不用该名称设置的识别器。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs">
      <summary>提供有关 <see cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected" /> 和 <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected" /> 事件的信息。</summary>
    </member>
    <member name="T:System.Speech.Recognition.SpeechRecognizedEventArgs">
      <summary>为 <see cref="E:System.Speech.Recognition.Grammar.SpeechRecognized" />、<see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized" /> 和 <see cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized" /> 事件提供信息。</summary>
    </member>
    <member name="T:System.Speech.Recognition.SpeechRecognizer">
      <summary>提供对在 Windows 桌面上可用的共享语言识别服务的访问。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.#ctor">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.AudioFormat">
      <summary>获取语音识别器接收的音频格式。</summary>
      <returns>语音识别器的音频输入的格式或 null ，如果识别器输入未配置。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.AudioLevel">
      <summary>获取语音识别器接收的音频级别。</summary>
      <returns>输入的音频级别到语音识别器，从 0 到 100。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.AudioLevelUpdated">
      <summary>当共享识别器报告其音频输入的级别时发生。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.AudioPosition">
      <summary>获取音频流中的当前位置，此音频流由向语音识别器提供输入的设备产生。</summary>
      <returns>它接收输入一个识别器的音频输入流中的当前位置。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.AudioSignalProblemOccurred">
      <summary>当识别器在音频信号中遇到问题时发生。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.AudioState">
      <summary>获取语音识别器接收的状态音频。</summary>
      <returns>语音识别器处理的音频输入的状态。</returns>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.AudioStateChanged">
      <summary>当音频中的状态更改正被识别器接收时发生。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.Dispose">
      <summary>处置此 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 对象。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.Dispose(System.Boolean)">
      <summary>处置 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 对象并释放对该会话期间使用的资源。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)">
      <summary>使用文本代替同步语音识别的音频来模拟特定字输入到共享语音识别器，并指定识别器如何处理单词和加载的语音识别语法间的 Unicode 比较。</summary>
      <returns>标识操作的标识结果或 null，因此，如果操作不成功还是窗口语音识别在 睡眠 状态。</returns>
      <param name="wordUnits">词单元数组，包含识别操作输入。</param>
      <param name="compareOptions">描述用于模拟识别操作的比较说明类型的枚举值的按位组合。</param>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String)">
      <summary>使用文本而不是异步语音识别的音频来模拟输入短语到共享语音识别器。</summary>
      <returns>标识操作的标识结果或 null，因此，如果操作不成功还是窗口语音识别在 睡眠 状态。</returns>
      <param name="inputText">标识操作的输入。</param>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String,System.Globalization.CompareOptions)">
      <summary>使用文本代替异步语音识别的音频来模拟短语输入到共享语音识别器，并指定识别器如何处理短语和加载的语音识别语法间的 Unicode 比较。</summary>
      <returns>标识操作的标识结果或 null，因此，如果操作不成功还是窗口语音识别在 睡眠 状态。</returns>
      <param name="inputText">标识操作的输入相。</param>
      <param name="compareOptions">描述用于模拟识别操作的比较说明类型的枚举值的按位组合。</param>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)">
      <summary>使用文本代替异步语音识别的音频来模拟特定字输入到共享语音识别器，并指定识别器如何处理单词和加载的语音识别语法间的 Unicode 比较。</summary>
      <param name="wordUnits">词单元数组，包含识别操作输入。</param>
      <param name="compareOptions">描述用于模拟识别操作的比较说明类型的枚举值的按位组合。</param>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String)">
      <summary>使用文本而不是异步语音识别的音频来模拟输入短语到共享语音识别器。</summary>
      <param name="inputText">标识操作的输入。</param>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)">
      <summary>使用文本代替异步语音识别的音频来模拟短语输入到共享语音识别器，并指定识别器如何处理短语和加载的语音识别语法间的 Unicode 比较。</summary>
      <param name="inputText">标识操作的输入相。</param>
      <param name="compareOptions">描述用于模拟识别操作的比较说明类型的枚举值的按位组合。</param>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted">
      <summary>当共享的识别器终结模拟输入的异步识别操作时发生。</summary>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.Enabled">
      <summary>获取或设置一个值，该值指示此 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 对象是否准备好处理语音。</summary>
      <returns>true 如果此 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 对象执行语音识别；否则false。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.Grammars">
      <summary>获取在此 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 实例中加载的 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的集合。</summary>
      <returns>应用程序加载到共享识别器的当前实例的 <see cref="T:System.Speech.Recognition.Grammar" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammar(System.Speech.Recognition.Grammar)">
      <summary>加载语音识别语法。</summary>
      <param name="grammar">加载语音识别语法。</param>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammarAsync(System.Speech.Recognition.Grammar)">
      <summary>异步加载语音识别语法。</summary>
      <param name="grammar">加载语音识别语法。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.LoadGrammarCompleted">
      <summary>当识别器完成语音识别语法的异步加载时发生。</summary>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.MaxAlternates">
      <summary>获取或设置共享识别器为每个识别操作返回的备用识别结果的最大数量。</summary>
      <returns>语音识别器返回每个标识操作的替换结果的最大数目。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.PauseRecognizerOnRecognition">
      <summary>获取或设置一个值，此值指示共享识别器是否在应用程序处理 <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized" /> 事件时暂停识别操作。</summary>
      <returns>true 如果共享识别器等待处理输入，当所有应用程序处理 <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized" /> 事件时；否则false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.RecognizerAudioPosition">
      <summary>获取在处理的音频输入中的识别器当前位置。</summary>
      <returns>识别器的位置在处理音频的输入。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.RecognizerInfo">
      <summary>获取共享语音识别器的相关信息。</summary>
      <returns>该共享语音识别器的相关信息。</returns>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.RecognizerUpdateReached">
      <summary>当识别器暂停以同步识别和其他操作时发生。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate">
      <summary>请求共享识别器暂停和更新其状态。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object)">
      <summary>请求共享识别器暂停和更新其状态并为关联的事件提供用户标记。</summary>
      <param name="userToken">用户定义信息包含该操作的信息。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object,System.TimeSpan)">
      <summary>请求共享识别器暂停和更新其状态并为关联的事件提供偏移量和用户标记。</summary>
      <param name="userToken">用户定义信息包含该操作的信息。</param>
      <param name="audioPositionAheadToRaiseUpdate">从当前到延迟请求的 <see cref="P:System.Speech.Recognition.SpeechRecognizer.AudioPosition" /> 偏移量。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.SpeechDetected">
      <summary>当识别器删除它可以标识为语音的输入时发生。</summary>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized">
      <summary>当识别器已识别可以为语法中多个完整的短语的组件的一个字或多个字时发生。</summary>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected">
      <summary>当识别器接收不与它已加载的任何语音识别语法匹配的输入时发生。</summary>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized">
      <summary>当识别器接收与其语音识别语法匹配的输入时发生。</summary>
    </member>
    <member name="P:System.Speech.Recognition.SpeechRecognizer.State">
      <summary>获取 <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> 对象的状态。</summary>
      <returns>SpeechRecognizer 对象的状态。</returns>
    </member>
    <member name="E:System.Speech.Recognition.SpeechRecognizer.StateChanged">
      <summary>当 Windows“桌面语音技术”识别引擎的运行状态更改时发生。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.UnloadAllGrammars">
      <summary>从共享识别器卸载所有语音识别语法。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechRecognizer.UnloadGrammar(System.Speech.Recognition.Grammar)">
      <summary>从共享识别器卸载指定语音识别语法。</summary>
      <param name="grammar">卸载的语法。</param>
    </member>
    <member name="T:System.Speech.Recognition.SpeechUI">
      <summary>在语音平台用户界面中显示的标识操作提供文本和状态信息。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SpeechUI.SendTextFeedback(System.Speech.Recognition.RecognitionResult,System.String,System.Boolean)">
      <summary>发送有关识别操作状态的状态和描述性文本到语音平台用户界面。</summary>
      <returns>true 如果将信息提供给方法(<paramref name="Feedback" />和 <paramref name="isSuccessfulAction" />)成功用于平台用户界面和 false ，如果操作失败。</returns>
      <param name="result">有效的 <see cref="T:System.Speech.Recognition.RecognitionResult" /> 实例。</param>
      <param name="feedback">包含有关生成 <see cref="T:System.Speech.Recognition.RecognitionResult" /><paramref name="result" />的识别操作的注释的 <see cref="T:System.String" />。</param>
      <param name="isSuccessfulAction">指示应用程序是否将标识操作视为成功操作的 bool。</param>
    </member>
    <member name="T:System.Speech.Recognition.StateChangedEventArgs">
      <summary>从 <see cref="E:System.Speech.Recognition.SpeechRecognizer.StateChanged" /> 事件返回数据。</summary>
    </member>
    <member name="P:System.Speech.Recognition.StateChangedEventArgs.RecognizerState">
      <summary>获取 Windows 中的共享语音识别引擎的当前状态。</summary>
      <returns>指示共享语音识别引擎的状态是否是 Listening or或 Stopped 的 <see cref="T:System.Speech.Recognition.RecognizerState" /> 实例。</returns>
    </member>
    <member name="T:System.Speech.Recognition.SubsetMatchingMode">
      <summary>枚举匹配模式的子集值。</summary>
    </member>
    <member name="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubset">
      <summary>指示子集匹配模式是 OrderedSubset。</summary>
    </member>
    <member name="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubsetContentRequired">
      <summary>指示子集匹配模式是 OrderedSubsetContentRequired。</summary>
    </member>
    <member name="F:System.Speech.Recognition.SubsetMatchingMode.Subsequence">
      <summary>指示子集匹配模式是 Subsequence。</summary>
    </member>
    <member name="F:System.Speech.Recognition.SubsetMatchingMode.SubsequenceContentRequired">
      <summary>指示子集匹配模式是 SubsequenceContentRequired。</summary>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument">
      <summary>定义用于生成强类型的运行时语法的设计时对象，符合 语音识别语法规范 (SRGS) 1.0版 。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.GrammarBuilder)">
      <summary>从 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类的新实例。</summary>
      <param name="builder">用于创建此 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 实例的 <see cref="T:System.Speech.Recognition.GrammarBuilder" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="builder" /> 为 null。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类的新实例并指定一个  <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> 对象成为语法的根规则。</summary>
      <param name="grammarRootRule">
        <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 对象中的 root rule。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="grammarRootRule" /> 为 null。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.String)">
      <summary>初始化指定填充 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 实例的 XML 文档的位置的  <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类的新实例。</summary>
      <param name="path">SRGS XML 文件的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> 是空字符串。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.#ctor(System.Xml.XmlReader)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类的新实例，该类来自引用 XML 格式语法文件的  <see cref="T:System.Xml.XmlReader" /> 的实例。</summary>
      <param name="srgsGrammar">与 XML <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 实例创建的 <see cref="T:System.Xml.XmlReader" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="srgsGrammar" /> 为 null。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences">
      <summary>获取 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 的程序集引用信息。</summary>
      <returns>
        <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.AssemblyReferences" /> 属性返回包含程序集列表的字符串集合引用。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind">
      <summary>获取 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 实例的代码隐藏信息。</summary>
      <returns>
        <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.CodeBehind" /> 属性返回之后包含列表代码文档的字符串集合。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture">
      <summary>获取或设置 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 的区域性信息。</summary>
      <returns>包含有关当前区域性信息的 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</returns>
      <exception cref="T:System.ArgumentNullException">赋予 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture" /> 的值为 null。</exception>
      <exception cref="T:System.ArgumentException">赋予 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Culture" /> 的值为 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug">
      <summary>获取或设置行号是否应添加至内联脚本。</summary>
      <returns>如果行号应将添加在用于调试目的， <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Debug" /> 属性返回 true ;否则该属性返回 false。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces">
      <summary>获取当前 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 实例的相关命名空间。</summary>
      <returns>
        <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />实例中，<see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.ImportNamespaces" /> 属性返回之后包含列表代码文档的字符串集合。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language">
      <summary>获取或设置用于 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类中的内联代码的编程语言。</summary>
      <returns>
        <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Language" /> 属性返回 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 当前设置的编程语言。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Mode">
      <summary>获取或设置 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类的模式。</summary>
      <returns>
        <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />的标识模式。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace">
      <summary>获取或设置 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类的命名空间。</summary>
      <returns>
        <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Namespace" /> 属性返回当前 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 的命名空间。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet">
      <summary>获取或设置 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类的注音字母表。</summary>
      <returns>返回必须用于在 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> 对象中指定自定义发音的语音字母表。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Root">
      <summary>获取或设置 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 的根规则。</summary>
      <returns>返回指定为 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 的根规则的规则。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Rules">
      <summary>获取目前已为 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类定义的规则的集合。</summary>
      <returns>返回为 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 对象定义的规则。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script">
      <summary>获取或设置  <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 类的 .NET 脚本语音。</summary>
      <returns>对于 Script 类，<see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 属性始终返回当前的.NET 脚本语言。</returns>
      <exception cref="T:System.ArgumentNullException">已尝试将该属性设置为空 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script" />。</exception>
      <exception cref="T:System.ArgumentException">试图将 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.Script" /> 属性设置为空字符串。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsDocument.WriteSrgs(System.Xml.XmlWriter)">
      <summary>编写 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 对象的内容是符合 语音识别语法规范（SRGS）1.0版的 XML 格式文件的语法。</summary>
      <param name="srgsGrammar">用于编写 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 实例的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="srgsGrammar" /> 为 null。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.XmlBase">
      <summary>获取或设置 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 的基 URL 类。</summary>
      <returns>
        <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 的当前基 URI。</returns>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsElement">
      <summary>定义对应于 SRGS 语法中元素 <see cref="N:System.Speech.Recognition.SrgsGrammar" /> 命名空间中的类的基类。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsElement.#ctor">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler">
      <summary>使用 .cfg 扩展将 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 和 XML 格式语法文件编译到二进制语法文件，并发送输出到流。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.IO.Stream)">
      <summary>使用 .cfg 扩展将 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 对象编译到二进制语法文件，并发送输出到流。</summary>
      <param name="srgsGrammar">生成的语法。</param>
      <param name="outputStream">接收生成的结果的流。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="srgsGrammar" /> 为 null。 <paramref name="outputStream" /> 为 null。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.String,System.IO.Stream)">
      <summary>使用 .cfg 扩展将 XML 格式语法文件编译到二进制语法文件，并发送输出到流。</summary>
      <param name="inputPath">要编译的文件的路径。</param>
      <param name="outputStream">接收生成的结果的流。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputPath" /> 为 null。 <paramref name="outputStream" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="inputPath" /> 是空字符串。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile(System.Xml.XmlReader,System.IO.Stream)">
      <summary>使用 .cfg 扩展将由 <see cref="T:System.Xml.XmlReader" /> 引用的 XML 格式语法文件编译到二进制语法文件，并发送输出到流。</summary>
      <param name="reader">
        <see cref="" /> 读取的 T:System.Xml.XmlReader语法的。 语法可能位于物理文件或内存。</param>
      <param name="outputStream">将接收生成的结果的流。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 null。 <paramref name="outputStream" /> 为 null。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.String[],System.String)">
      <summary>将 SRGS 文档编译到 DLL。</summary>
      <param name="srgsGrammar">
        <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />包含要编译的语法的。</param>
      <param name="outputPath">输出 DLL 的路径。</param>
      <param name="referencedAssemblies">从输入语法引用的程序集列表。</param>
      <param name="keyFile">包含一对密钥，从而使输出 DLL 被签署的文件名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="srgsGrammar" /> 为 null。 <paramref name="outputPath" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="outputPath" /> 是空字符串。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.String[],System.String,System.String[],System.String)">
      <summary>将多个 SRGS 语法编译到 DLL。</summary>
      <param name="inputPaths">要编译的语法列表。</param>
      <param name="outputPath">输出 DLL 的路径。</param>
      <param name="referencedAssemblies">从输入语法引用的程序集列表。</param>
      <param name="keyFile">包含一对密钥，从而使输出 DLL 被签署的文件名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputPaths" /> 为 null。 <paramref name="outputPath" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="outputPath" /> 是空字符串。 <paramref name="inputPaths" /> 数组的任何元素为 null。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.CompileClassLibrary(System.Xml.XmlReader,System.String,System.String[],System.String)">
      <summary>将 SRGS 语法编译到 DLL。</summary>
      <param name="reader">
        <see cref="" /> 读取的 T:System.Xml.XmlReader语法的。</param>
      <param name="outputPath">输出 DLL 的路径。</param>
      <param name="referencedAssemblies">从输入语法引用的程序集列表。</param>
      <param name="keyFile">包含一对密钥，从而使输出 DLL 被签署的文件名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 为 null。 <paramref name="outputPath" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="outputPath" /> 是空字符串。</exception>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode">
      <summary>指示由 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 定义的符合语法的输入的类型。</summary>
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode.Dtmf">
      <summary>
        <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 与 DTMF 语气匹配的对象类似于电话中找到的，而不是语音。</summary>
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsGrammarMode.Voice">
      <summary>
        <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> 将与语音输入匹配的对象。</summary>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsItem">
      <summary>表示包含短语或用户可以调用产生成功的识别的其他实体的语法元素。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 类的新实例并指定其内容必须口述的次数。</summary>
      <param name="repeatCount">该项必须说出的最小次数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="repeatCount" /> 为负或大于 255。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32,System.Int32)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 类和指定的最小值和最大值的重复计数的一个新实例。</summary>
      <param name="min">该项中的文本必须重复的最小次数。</param>
      <param name="max">该项中的文本可以重复的最大次数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="min" /> 为负或大于 255。 <paramref name="max" /> 为负或大于 255。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="min" /> 大于 <paramref name="max" />。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32,System.Int32,System.Speech.Recognition.SrgsGrammar.SrgsElement[])">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 类的新实例，指定 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> 对象的数组添加到此实例中并设置最小和最大的循环数。</summary>
      <param name="min">必须重复的<see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" />对象内容的最小次数。</param>
      <param name="max">可以重复的<see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" />对象内容的最大次数。</param>
      <param name="elements">要添加到 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 实例对象的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elements" /> 数组的任何成员是 null。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Int32,System.Int32,System.String)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 类的新实例，指定与项关联的文本并指定最小和最大的循环数。</summary>
      <param name="min">该项可以重复的最小次数。</param>
      <param name="max">该项可以重复的最大次数。</param>
      <param name="text">与项关联的文本。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="min" /> 为负或大于 255。 <paramref name="max" /> 为负或大于 255。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="min" /> 大于 <paramref name="max" />。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsElement[])">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 类的新实例，并指定 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> 对象的数组添加到此实例中。</summary>
      <param name="elements">要添加到 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 实例对象的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elements" /> 数组的任何成员是 null。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 类的新实例，并指定它的文本内容。</summary>
      <param name="text">与项关联的文本。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> 是空字符串。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)">
      <summary>添加对象到此 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 实例包含的对象的集合。</summary>
      <param name="element">要添加的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为  null。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.Elements">
      <summary>获取 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 实例包含的对象的集合。</summary>
      <returns>
        <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 实例包含的对象的集合。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.MaxRepeat">
      <summary>获取用户可以说出 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 内容的最大次数。</summary>
      <returns>用户可以说出该项内容的最大次数。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.MinRepeat">
      <summary>获取用户必须说出 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 内容的最小次数。</summary>
      <returns>用户可以说出该项内容的最小次数。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.RepeatProbability">
      <summary>获取或设置用户将会重复此 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 实例内容的可能性。</summary>
      <returns>概率，作为浮点值，此项目内容将重复调用。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">尝试设置 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.RepeatProbability" /> 为负或大于 1.0 的值。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat(System.Int32)">
      <summary>设置 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 的内容必须被朗读的次数。</summary>
      <param name="count">该项必须说出的最小次数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> 小于 0 或大于 255。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsItem.SetRepeat(System.Int32,System.Int32)">
      <summary>设置项可被朗读的最小次数和最大次数。</summary>
      <param name="minRepeat">该项可以说出的最小次数。</param>
      <param name="maxRepeat">该项可以说出的最大次数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="minRepeat" /> 小于零或大于 255。 <paramref name="maxRepeat" /> 小于零或大于 255。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="minRepeat" /> 大于 <paramref name="maxRepeat" />。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.Weight">
      <summary>获取或设置可以调整  <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" /> 对象中的 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 将会被朗读的可能性的倍数因子。</summary>
      <returns>调整要拼写此项的可能性的浮点值。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">尝试将 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsItem.Weight" /> 设置为负值。</exception>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag">
      <summary>表示关联一个语义值与语法短语的元素。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor(System.Object)">
      <summary>在指定实例值的情况下，初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" /> 类的新实例。</summary>
      <param name="value">用于设置此 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value" /> 属性的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.#ctor(System.String,System.Object)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" /> 类的新实例，同时指定实例的名称和值。</summary>
      <param name="name">在<see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" />对象上用于设置 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Name" /> 属性的字符串。</param>
      <param name="value">
        <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" />对象上用于设置 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value" /> 属性的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。 <paramref name="name" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 是空字符串。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Name">
      <summary>获取或设置 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" /> 实例的名称。</summary>
      <returns>包含 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" /> 实例名称的字符串。</returns>
      <exception cref="T:System.ArgumentNullException">尝试将 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Name" /> 设置为 null。</exception>
      <exception cref="T:System.ArgumentException">试图将 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Name" /> 设置为空字符串。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value">
      <summary>获取或设置 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" /> 中包含的值。</summary>
      <returns>包含在 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag" /> 实例中的值。</returns>
      <exception cref="T:System.Exception.ArgumentNullException">尝试将 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value" /> 设置为 null。</exception>
      <exception cref="T:System.ArgumentException">尝试将 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag.Value" /> 设置为无效的类型。</exception>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf">
      <summary>表示可选的单词或短语的列表，其中所有可用于匹配语音输入。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsItem[])">
      <summary>从 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 对象数组初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" /> 类的新实例。</summary>
      <param name="items">要添加的替代项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items" /> 为 null。 <paramref name="items" /> 数组中的任何元素为 null。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.#ctor(System.String[])">
      <summary>从 <see cref="T:System.String" /> 对象数组初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" /> 类的新实例。</summary>
      <param name="items">要添加的替代项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items" /> 为 null。 <paramref name="items" /> 数组中的任何元素为 null。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Add(System.Speech.Recognition.SrgsGrammar.SrgsItem)">
      <summary>添加包含单词或短语的 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsItem" /> 到替换选项列表。</summary>
      <param name="item">要添加到选项列表的项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsOneOf.Items">
      <summary>获取 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsOneOf" /> 元素中包含的所有备选项的列表。</summary>
      <returns>返回备选项列表。</returns>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet">
      <summary>枚举支持的注音字母表。</summary>
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet.Ipa">
      <summary>“国际音标”音素设置。</summary>
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet.Sapi">
      <summary>指定语音 API 音素。</summary>
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsPhoneticAlphabet.Ups">
      <summary>泛型电话设置的音素，是音素 ASCII 编码 IPA 。</summary>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsRule">
      <summary>表示语法规则。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> 类和指定规则的标识符的新实例。</summary>
      <param name="id">规则的标识符。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="id" /> 为空。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="id" /> 不是正确的规则标识符。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])">
      <summary>从 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> 对象数组初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" />  类的新实例。</summary>
      <param name="id">规则的标识符。</param>
      <param name="elements">一个由 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> 元素组成的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 为 null。 <paramref name="elements" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="id" /> 为空。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="id" /> 不是正确的规则标识符。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)">
      <summary>向 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> 对象添加一个 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" />。</summary>
      <param name="element">从 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> 继承并指定能识别的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 为 null。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass">
      <summary>目前不支持此属性。</summary>
      <returns>不支持。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements">
      <summary>获取 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> 实例中 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> 对象的集合。</summary>
      <returns>规则中元素的集合。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id">
      <summary>获取或设置规则的标识符。</summary>
      <returns>该规则的标识符。</returns>
      <exception cref="T:System.FormatException">尝试将 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" /> 设置为无效的值。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError">
      <summary>目前不支持此属性。</summary>
      <returns>不支持。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit">
      <summary>目前不支持此属性。</summary>
      <returns>不支持。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse">
      <summary>目前不支持此属性。</summary>
      <returns>不支持。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition">
      <summary>目前不支持此属性。</summary>
      <returns>不支持。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope">
      <summary>获取或设置是否可以为识别激活一条规则，以及此规则何时可由其他规则引用。</summary>
      <returns>设置规则范围的值。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Script">
      <summary>目前不支持此属性。</summary>
      <returns>不支持。</returns>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef">
      <summary>表示指定对规则引用的语法元素。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" /> 类和指定引用的规则的新实例。</summary>
      <param name="rule">要引用的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 为 null。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" /> 类的新实例，指定引用规则和包含一语义键的字符串。</summary>
      <param name="rule">要引用的对象。</param>
      <param name="semanticKey">语义键。</param>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsRule,System.String,System.String)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" /> 类的新实例，指定要引用的规则，语义字典的字符串别名和初始参数。</summary>
      <param name="rule">要引用的对象。</param>
      <param name="semanticKey">语义键。</param>
      <param name="parameters">
        <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" /> 对象的初始化参数。</param>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" /> 类的新实例并指定要引用的外部语法文件的位置。</summary>
      <param name="uri">包含的语法外的语法文件位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" /> 类的新实例，指定要引用的外部语法文件的位置和规则的标识符。</summary>
      <param name="uri">包含的语法外的语法文件位置。</param>
      <param name="rule">参考的规则的标识符。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null。 <paramref name="rule" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="rule" /> 为空。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" /> 类的新实例，指定外部语法文件的位置，规则的标识符和语义字典的字符串别名。</summary>
      <param name="uri">包含的语法外的语法文件位置。</param>
      <param name="rule">参考的规则的标识符。</param>
      <param name="semanticKey">获取语义字典的别名字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null。 <paramref name="semanticKey" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="semanticKey" /> 为空。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.#ctor(System.Uri,System.String,System.String,System.String)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" /> 类的新实例，指定外部语法文件的位置，规则的标识符，语义字典的字符串别名和初始参数。</summary>
      <param name="uri">包含的语法外的语法文件位置。</param>
      <param name="rule">参考的规则的标识符。</param>
      <param name="semanticKey">语义键。</param>
      <param name="parameters">
        <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" /> 对象的初始化参数。</param>
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Dictation">
      <summary>定义可与与此语法关联的听写主题定义的朗读输入匹配的规则。</summary>
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Garbage">
      <summary>定义可与任何语音（到下一个规则匹配、下一个标记、或知道朗读输入结束）匹配。</summary>
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.MnemonicSpelling">
      <summary>指示语音输入可以包含单词的拼写的字母，并且拼写的字母可以识别为单词。</summary>
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Null">
      <summary>定义在缺少任何音频输入时自动匹配的规则。</summary>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Params">
      <summary>获取 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" /> 元素的初始化参数。</summary>
      <returns>
        <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" /> 元素的初始化参数。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.SemanticKey">
      <summary>获取语义字典的别名字符串。</summary>
      <returns>获取语义字典的别名字符串。</returns>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Uri">
      <summary>获取此 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef" /> 元素引用的规则的 URI。</summary>
      <returns>参考的规则的位置。</returns>
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef.Void">
      <summary>定义不能朗读的规则。 将 VOID 插入到序列中自动使该序列不能口述。</summary>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection">
      <summary>表示 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.#ctor">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection.Add(System.Speech.Recognition.SrgsGrammar.SrgsRule[])">
      <summary>将 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> 的数组的内容对象添加到 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" />对象中。</summary>
      <param name="rules">要添加到 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRulesCollection" /> 对象中的规则对象的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rules" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rules" /> 数组中的任何 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> 对象都为 null。</exception>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope">
      <summary>枚举 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> 对象的范围的值。</summary>
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope.Private">
      <summary>除非它是其包含的语法，根规则不能是引用外部语法的规则的目标。</summary>
    </member>
    <member name="F:System.Speech.Recognition.SrgsGrammar.SrgsRuleScope.Public">
      <summary>规则是外部语法可以引用的规则的目标，可以使用规则执行标识。 可始终针对识别激活公共规则。</summary>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag">
      <summary>表示当规则匹配时运行的包含 ECMAScript 的标记。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor">
      <summary>创建 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" /> 类的实例。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.#ctor(System.String)">
      <summary>创建 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag" /> 类的实例，指定标记的脚本内容。</summary>
      <param name="script">包含标记的 ECMAScript 的字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="script" /> 为 null。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag.Script">
      <summary>获取或设置标记的 ECMAScript。</summary>
      <returns>包含标记的语义转译脚本的字符串。</returns>
      <exception cref="T:System.ArgumentNullException">尝试将 Script 设置为 null。</exception>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset">
      <summary>定义可用于使用朗读短语匹配给定字符串的方法和属性。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsSubset.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" /> 类的新实例，指定要匹配的短语部分。</summary>
      <param name="text">要匹配的短语的部分。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> 为 null。</exception>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsSubset.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsSubset" /> 类的新实例，指定要匹配的部分和文本应该被匹配的模式。</summary>
      <param name="text">要匹配的短语的部分。</param>
      <param name="matchingMode">
        <paramref name="text" /> 应与该调用的短语匹配的模式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> 为空。 <paramref name="text" /> 只包含空白字符（即, ' ', '\t', '\n', '\r'）。 <paramref name="matchingMode" /> 设置为 <see cref="T:System.Speech.Recognition.SubsetMatchingMode" /> 枚举中的值。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsSubset.MatchingMode">
      <summary>获取或设置子集的匹配模式。</summary>
      <returns>
        <see cref="T:System.Speech.Recognition.SubsetMatchingMode" /> 枚举的一个成员。</returns>
      <exception cref="T:System.ArgumentException">尝试为不是 <see cref="T:System.Speech.Recognition.SubsetMatchingMode" /> 枚举成员的 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsSubset.MatchingMode" /> 设置一个值。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsSubset.Text">
      <summary>以字符串形式获取或设置包含需匹配的朗读短语部分的字符串。</summary>
      <returns>包含要匹配的一个调用的声明部分的字符串。</returns>
      <exception cref="T:System.ArgumentNullException">试图将 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsSubset.Text" /> 设置为 null 或空字符串。</exception>
      <exception cref="T:System.ArgumentException">尝试使用仅包含空白字符 (' ', '\t', '\n', '\r') 的字符串设置 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsSubset.Text" />。</exception>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsText">
      <summary>表示由万维网联合会定义的 (W3C) 语法元素的文本内容 语音识别语法规范 (SRGS) 1.0 版 。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsText.#ctor">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsText" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsText.#ctor(System.String)">
      <summary>在指定实例文本的情况下，初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsText" /> 类的新实例。</summary>
      <param name="text">用于设置 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsText.Text" /> 属性上 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsText" /> 实例的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> 为 null。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsText.Text">
      <summary>获取或设置 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsText" /> 类实例内包含的文本。</summary>
      <returns>在 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsText" /> 实例中包含的文本。</returns>
      <exception cref="T:System.ArgumentNullException">尝试将 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsText.Text" /> 设置为 null。</exception>
    </member>
    <member name="T:System.Speech.Recognition.SrgsGrammar.SrgsToken">
      <summary>表示能识别的单词或短语。</summary>
    </member>
    <member name="M:System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> 类的新实例并指定要识别的文本。</summary>
      <param name="text">新建 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> 类实例的文本。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="text" /> 为空。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display">
      <summary>获取或设置需朗读的文本的显示形式。</summary>
      <returns>标记应显示的表示形式。</returns>
      <exception cref="T:System.ArgumentNullException">尝试将 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" /> 设置为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">试图将 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" /> 指定为空字符串。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation">
      <summary>获取或设置定义标记发音的字符串。</summary>
      <returns>返回包含在 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet" /> 中指定的语音字母表的电话的字符串。</returns>
      <exception cref="T:System.ArgumentNullException">尝试将 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" /> 设置为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">试图将 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" /> 指定为空字符串。</exception>
    </member>
    <member name="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text">
      <summary>获取或设置应朗读的单词的书写形式。</summary>
      <returns>在 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> 类别实例中包含的文本。</returns>
      <exception cref="T:System.ArgumentNullException">尝试将 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" /> 设置为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">试图将 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" /> 指定为空字符串。</exception>
      <exception cref="T:System.ArgumentException">尝试把包含引号 (") 的字符串分配到 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />。</exception>
    </member>
    <member name="T:System.Speech.Synthesis.BookmarkReachedEventArgs">
      <summary>从 <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" /> 事件返回数据。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.BookmarkReachedEventArgs.AudioPosition">
      <summary>获取在书签达到的时间偏移量。</summary>
      <returns>返回引发该事件时，合成引擎的音频输入流的位置。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.BookmarkReachedEventArgs.Bookmark">
      <summary>获取所达到的书签的名称。</summary>
      <returns>返回书签名的值。</returns>
    </member>
    <member name="T:System.Speech.Synthesis.FilePrompt">
      <summary>表示从文件创建的提示。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.FilePrompt.#ctor(System.String,System.Speech.Synthesis.SynthesisMediaType)">
      <summary>创建 <see cref="T:System.Speech.Synthesis.FilePrompt" /> 类的新实例，并指定文件和其媒体类型的路径。</summary>
      <param name="path">包含提示内容的文件的路径。</param>
      <param name="media">文件的媒体类型。</param>
    </member>
    <member name="M:System.Speech.Synthesis.FilePrompt.#ctor(System.Uri,System.Speech.Synthesis.SynthesisMediaType)">
      <summary>创建 <see cref="T:System.Speech.Synthesis.FilePrompt" /> 类的新实例，并指定文件的位置和其媒体类型。</summary>
      <param name="promptFile">包含提示内容的文件的 URL。</param>
      <param name="media">文件的媒体类型。</param>
    </member>
    <member name="T:System.Speech.Synthesis.InstalledVoice">
      <summary>包含有关在 Windows 中安装的语音合成语音的信息。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.InstalledVoice.Enabled">
      <summary>获取或设置语音是否可用于生成语音。</summary>
      <returns>返回表示语音的已启用状态的 bool。</returns>
    </member>
    <member name="M:System.Speech.Synthesis.InstalledVoice.Equals(System.Object)">
      <summary>确定给定的对象是否为 <see cref="T:System.Speech.Synthesis.InstalledVoice" /> 的实例，并与当前 <see cref="T:System.Speech.Synthesis.InstalledVoice" /> 实例相等。</summary>
      <returns>如果 <see cref="T:System.Speech.Synthesis.InstalledVoice" /> 当前从 <paramref name="obj" /> 参数获取的实例相等，则返回 true，否则返回 false。</returns>
      <param name="obj">一个可强制转换为实例 <see cref="T:System.Speech.Synthesis.InstalledVoice" /> 的对象。</param>
    </member>
    <member name="M:System.Speech.Synthesis.InstalledVoice.GetHashCode">
      <summary>提供 InstalledVoice 对象的哈希代码。</summary>
      <returns>当前 <see cref="T:System.Speech.Synthesis.InstalledVoice" /> 对象的哈希代码。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.InstalledVoice.VoiceInfo">
      <summary>获取语音的相关信息，如区域性、姓名、性别和年龄。</summary>
      <returns>有关安装语音的信息。</returns>
    </member>
    <member name="T:System.Speech.Synthesis.PhonemeReachedEventArgs">
      <summary>从 <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" /> 事件返回数据。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.PhonemeReachedEventArgs.AudioPosition">
      <summary>获取音素的音频位置。</summary>
      <returns>指示音频位置的 TimeSpan 对象。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Duration">
      <summary>获取音素的持续时间。</summary>
      <returns>指示持续时间的 TimeSpan 对象。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Emphasis">
      <summary>获取音素重点。</summary>
      <returns>指示焦点级别的 SynthesizerEmphasis 成员。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.PhonemeReachedEventArgs.NextPhoneme">
      <summary>获取紧随与 <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" /> 事件关联的音素的音素。</summary>
      <returns>包含文本音素的字符串。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Phoneme">
      <summary>与 <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" /> 事件关联的音素。</summary>
      <returns>一个包含音素的字符串。</returns>
    </member>
    <member name="T:System.Speech.Synthesis.Prompt">
      <summary>由 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />表示有关的可呈现的信息，文本或音频文件。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)">
      <summary>利用 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象创建 <see cref="T:System.Speech.Synthesis.Prompt" /> 类的新实例。</summary>
      <param name="promptBuilder">要讲的内容。</param>
    </member>
    <member name="M:System.Speech.Synthesis.Prompt.#ctor(System.String)">
      <summary>创建 <see cref="T:System.Speech.Synthesis.Prompt" /> 类的新实例并指定要朗读的文本。</summary>
      <param name="textToSpeak">要朗读的文本。</param>
    </member>
    <member name="M:System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)">
      <summary>创建 <see cref="T:System.Speech.Synthesis.Prompt" /> 类的新实例并指定要朗读的文本，和其格式是否为纯文本或标记语言。</summary>
      <param name="textToSpeak">要朗读的文本。</param>
      <param name="media">用来指定文本格式的值。</param>
    </member>
    <member name="P:System.Speech.Synthesis.Prompt.IsCompleted">
      <summary>获取 <see cref="T:System.Speech.Synthesis.Prompt" /> 是否已经完成播放。</summary>
      <returns>如果已完成提示，则返回 true，否则返回 false。</returns>
    </member>
    <member name="T:System.Speech.Synthesis.PromptBreak">
      <summary>枚举位于字边界之间诗体学的分离（中断）间隔的值。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.PromptBreak.ExtraLarge">
      <summary>指示超大型中断。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptBreak.ExtraSmall">
      <summary>指示超小型中断。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptBreak.Large">
      <summary>指示大型中断。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptBreak.Medium">
      <summary>指示中型中断。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptBreak.None">
      <summary>指示不中断。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptBreak.Small">
      <summary>指示小型中断。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.PromptBuilder">
      <summary>创建空的 <see cref="T:System.Speech.Synthesis.Prompt" /> 对象，并为添加内容、选择语音、控件语音属性和控件朗读单词的发音提供方法。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.#ctor">
      <summary>创建 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.#ctor(System.Globalization.CultureInfo)">
      <summary>创建 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 类的新实例并指定区域性。</summary>
      <param name="culture">提供有关特定区域性的信息，如其语言、区域性的名称、写入系统、使用的日历和如何设置日期和排序字符串。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)">
      <summary>将指定的音频文件追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" />。</summary>
      <param name="path">音频文件的完全限定路径。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)">
      <summary>将指定 URI 中的音频文件追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" />。</summary>
      <param name="audioFile">音频文件的 URI。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)">
      <summary>为 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 追加指定的音频文件和替代文本。</summary>
      <param name="audioFile">音频文件的 URI。</param>
      <param name="alternateText">包含表示音频的替换文本的字符串。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendBookmark(System.String)">
      <summary>为 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象追加书签。</summary>
      <param name="bookmarkName">一个包含追加书签名称的字符串。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendBreak">
      <summary>为 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象追加中断。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)">
      <summary>为 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象指定中断，并指定其强度（持续时间）。</summary>
      <param name="strength">指示中断的持续时间，使用以下增加值：</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)">
      <summary>为 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象追加指定的持续时间的中断。</summary>
      <param name="duration">在计时周期的时间，一个刻度等于 100 纳秒。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendPromptBuilder(System.Speech.Synthesis.PromptBuilder)">
      <summary>将一个 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象追加到另一个 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象。</summary>
      <param name="promptBuilder">要追加的内容。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)">
      <summary>将指定路径中的 SSML 文件追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象。</summary>
      <param name="path">追加 SSML 文件的完全限定路径。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)">
      <summary>将指定 URL 中的 SSML 文件追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象。</summary>
      <param name="ssmlFile">要追加 SSML 文件的完全限定 URI。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)">
      <summary>追加一个 XMLReader 对象，它引用 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象的 SSML 提示。</summary>
      <param name="ssmlFile">要追加的 XML 文件的完全限定名称。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup(System.String)">
      <summary>将包含 SSML 标记的指定字符串追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象。</summary>
      <param name="ssmlMarkup">一个包含 SSML 标记的字符串。</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)">
      <summary>指定文本追加到 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象。</summary>
      <param name="textToSpeak">包含要发言文本的字符串。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)">
      <summary>为 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象追加文本，并为该文本指定程度焦点。</summary>
      <param name="textToSpeak">包含要发言文本的字符串。</param>
      <param name="emphasis">重点或焦点的值可应用于文本。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)">
      <summary>为 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象追加文本，并为该文本指定语速。</summary>
      <param name="textToSpeak">包含要发言文本的字符串。</param>
      <param name="rate">应用于文本的说话率的值。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)">
      <summary>为 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象追加文本，并指定朗读该文本的音量。</summary>
      <param name="textToSpeak">包含要发言文本的字符串。</param>
      <param name="volume">应用于文本的说话率的值（响度）。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias(System.String,System.String)">
      <summary>为 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象追加文本，并指定该追加的文本位置将调用的别名文本。</summary>
      <param name="textToSpeak">包含文本表示形式的字符串。</param>
      <param name="substitute">包含要发言文本的字符串。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)">
      <summary>为 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象追加文本，并使用 <see cref="T:System.Speech.Synthesis.SayAs" /> 枚举的成员指定内容类型。</summary>
      <param name="textToSpeak">包含要发言文本的字符串。</param>
      <param name="sayAs">文本的内容类型。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)">
      <summary>为 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象追加文本，并 <see cref="T:System.String" /> 指定该文本的内容类型。</summary>
      <param name="textToSpeak">包含要发言文本的字符串。</param>
      <param name="sayAs">文本的内容类型。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation(System.String,System.String)">
      <summary>为 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象追加文本，并为该文本指定发音。</summary>
      <param name="textToSpeak">包含使用语言传统字母表写入形式的单词的字符串。</param>
      <param name="pronunciation">包含要以国际音标 (IPA) 进行演讲的电话的字符串。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.ClearContent">
      <summary>清除 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的内容。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.PromptBuilder.Culture">
      <summary>获取或设置 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象的区域性信息。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.EndParagraph">
      <summary>指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象的终点段。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.EndSentence">
      <summary>指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象的终点句。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.EndStyle">
      <summary>指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象的终点样式。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.EndVoice">
      <summary>指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象的最终使用语音。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.PromptBuilder.IsEmpty">
      <summary>获取 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 是否是为空。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartParagraph">
      <summary>指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象的开始段。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)">
      <summary>在 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象的指定区域性指定段的开头。</summary>
      <param name="culture">提供有关特定区域性的信息，如语言、区域性的名称、写入系统、使用的日历和如何设置日期和排序字符串。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartSentence">
      <summary>指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象的开始句。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)">
      <summary>在 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象的指定区域性指定句的开头。</summary>
      <param name="culture">提供有关特定区域性的信息，如语言、区域性的名称、写入系统、使用的日历和如何设置日期和排序字符串。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartStyle(System.Speech.Synthesis.PromptStyle)">
      <summary>指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象的开始样式。</summary>
      <param name="style">启动的样式。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)">
      <summary>指示合成器更改 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的语音并指定要使用的语音的区域性。</summary>
      <param name="culture">提供有关特定区域性的信息，如语言、区域性的名称、写入系统、使用的日历和如何设置日期和排序字符串。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)">
      <summary>指示合成器更改 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的语音并指定要使用的语音的性别。</summary>
      <param name="gender">使用语音的性别。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)">
      <summary>指示合成器更改 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的语音并指定新语音的性别和年龄。</summary>
      <param name="gender">使用新的语音的性别。</param>
      <param name="age">要使用的语音的年龄。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)">
      <summary>指示合成器更改 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的语音并指定其性别、年龄和与指定的性别和年龄匹配的首选语音。</summary>
      <param name="gender">使用语音的性别。</param>
      <param name="age">要使用的语音的年龄。</param>
      <param name="voiceAlternate">当多个语音与 <paramref name="gender" /> 和 <paramref name="age" /> 参数相匹配，指定首选语音的整数。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)">
      <summary>指示合成器更改 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的语音并为新的语音指定条件。</summary>
      <param name="voice">要使用的语音的条件。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)">
      <summary>指示合成器更改 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象中的语音并指定要使用的语音的名称。</summary>
      <param name="name">要使用的语音的名称。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptBuilder.ToXml">
      <summary>返回从 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象生成的 SSML。</summary>
      <returns>返回从 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象生成的作为单个行的 SSML。</returns>
    </member>
    <member name="T:System.Speech.Synthesis.PromptEmphasis">
      <summary>枚举在提示的焦点的级别值。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.PromptEmphasis.Moderate">
      <summary>指示适当级别焦点。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptEmphasis.None">
      <summary>指示没有焦点。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptEmphasis.NotSet">
      <summary>指示未指定焦点值。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptEmphasis.Reduced">
      <summary>指示级别降低的焦点。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptEmphasis.Strong">
      <summary>指示级别较强的焦点。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.PromptEventArgs">
      <summary>表示在 <see cref="N:System.Speech.Synthesis" /> 命名空间中 EventArgs 类的基类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.PromptEventArgs.Prompt">
      <summary>获取与事件关联的提示。</summary>
      <returns>与此事件关联的 Prompt 对象。</returns>
    </member>
    <member name="T:System.Speech.Synthesis.PromptRate">
      <summary>枚举提示的语速的值。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.PromptRate.ExtraFast">
      <summary>指示超快速度。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptRate.ExtraSlow">
      <summary>指示超慢速度。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptRate.Fast">
      <summary>指示快速度。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptRate.Medium">
      <summary>指示中等速率。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptRate.NotSet">
      <summary>指示不指定速度。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptRate.Slow">
      <summary>指示慢速度。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.PromptStyle">
      <summary>定义由重点、速率和音量设置组成的语音提示的样式。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.PromptStyle.#ctor">
      <summary>初始化 <see cref="T:System.Speech.Synthesis.PromptStyle" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptEmphasis)">
      <summary>初始化 <see cref="T:System.Speech.Synthesis.PromptStyle" /> 类的新实例并指定用于强调该样式的设置。</summary>
      <param name="emphasis">样式的强调设置。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptRate)">
      <summary>初始化 <see cref="T:System.Speech.Synthesis.PromptStyle" /> 类的新实例并指定用于该样式的口述频率的设置。</summary>
      <param name="rate">样式的语速的设置。</param>
    </member>
    <member name="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptVolume)">
      <summary>初始化 <see cref="T:System.Speech.Synthesis.PromptStyle" /> 类的新实例并指定该样式的口述音量的设置。</summary>
      <param name="volume">样式的音量（大声）设置。</param>
    </member>
    <member name="P:System.Speech.Synthesis.PromptStyle.Emphasis">
      <summary>获取或设置样式重点设置。</summary>
      <returns>返回样式的强调设置。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.PromptStyle.Rate">
      <summary>获取或设置样式的语速设置。</summary>
      <returns>返回样式的语速设置。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.PromptStyle.Volume">
      <summary>获取或设置样式的音量（大声）设置。</summary>
      <returns>返回样式的音量（大声）设置。</returns>
    </member>
    <member name="T:System.Speech.Synthesis.PromptVolume">
      <summary>枚举提示的卷级别的值。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.Default">
      <summary>指示引擎特定默认音量。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.ExtraLoud">
      <summary>指示一个超大音量级别。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.ExtraSoft">
      <summary>指示一个柔和音量级别。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.Loud">
      <summary>指示一个大音量级别。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.Medium">
      <summary>指示一个中音量级别。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.NotSet">
      <summary>指示该音量级别不能设置。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.Silent">
      <summary>指示一个静音级别。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.PromptVolume.Soft">
      <summary>指示一个柔和音量级别。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.SayAs">
      <summary>枚举元素朗读的内容类型如时间、日期和货币。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Date">
      <summary>将数序列作为日期进行朗读。 例如，把“05/19/2004”或“19.5.2004”读作为“may nineteenth two thousand four”。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Day">
      <summary>将数字作为日期进行朗读。 例如，把“3rd”读为“third"。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.DayMonth">
      <summary>将数序列作为日和月进行朗读。 例如，“12/05”读为“may twelfth”，以及“05/12”读为 ”December 5th“。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.DayMonthYear">
      <summary>将数序列作为日期（包括日、月、年）进行朗读。 例如，把“12/05/2004”读作“May twelfth two thousand four”。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Month">
      <summary>将字作为月份进行朗读。 例如，把“June”读作“June”。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.MonthDay">
      <summary>将数序列作为日和月进行朗读。 例如，“05/12”读为“may twelfth”，以及“12/5”读为 ”December 5th“。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.MonthDayYear">
      <summary>将数序列作为日期（包括日、月、年）进行朗读。 例如，把“12/05/2004”读作“December fifth two thousand four”。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.MonthYear">
      <summary>将数序列作为月和年进行朗读。 例如，把“05/2004”读作“May two thousand four”。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.NumberCardinal">
      <summary>将数字作为基数进行朗读。 例如，把“3”读为“three"。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.NumberOrdinal">
      <summary>将数字作为序号进行朗读。 例如，把“3rd”读为“third"。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.SpellOut">
      <summary>拼写单词或短语。 例如， “时钟”假设为“C L O C K”。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Telephone">
      <summary>将数序列作为美国电话号码进行朗读。 例如，把“(306) 555-1212”读为“区号 three zero six five five five one two one two”。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Text">
      <summary>将字或短语作为文本进行朗读。 例如，把“时间线”读作“时间线”。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Time">
      <summary>将数序列作为时间进行朗读。 例如，把“9:45”读作“nine forty-five”，并把“9:45 am”读作“nine forty-five A M”。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Time12">
      <summary>作为使用 12 小时制的时钟朗读数字序列。 例如，把“03:25”读为“three twenty-five"。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Time24">
      <summary>作为使用 24 小时制的时钟朗读数字序列。 例如，把“18:00”读作“eighteen hundred hours”。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.Year">
      <summary>将数字作为年份进行朗读。 例如，把“1998”读作“nineteen ninety-eight”。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.YearMonth">
      <summary>将数序列作为月和年进行朗读。 例如，使用 “2004/05” 作为 “May two thousand four”。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SayAs.YearMonthDay">
      <summary>将数序列作为日期（包括日、月、年）进行朗读。 例如，使用 “2004/05/12” 作为 “May twelfth two thousand four”。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.SpeakCompletedEventArgs">
      <summary>从 <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" /> 事件返回通知。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.SpeakProgressEventArgs">
      <summary>从 <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" /> 事件返回数据。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition">
      <summary>获取事件的音频位置。</summary>
      <returns>返回音频输出流中的事件的位置。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount">
      <summary>获取事件引发之前刚刚说出的单词中的字符数。</summary>
      <returns>返回引发事件之前讲出的单词中的字符数。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition">
      <summary>获取从提示开始到刚刚说出的单词的第一字母之前的位置的字符与空格数。</summary>
      <returns>返回从提示符开始到刚刚讲出的单词的第一个字母前的字符和空格数。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.SpeakProgressEventArgs.Text">
      <summary>引发事件时只读的文本。</summary>
      <returns>返回引发事件时朗读的文本。</returns>
    </member>
    <member name="T:System.Speech.Synthesis.SpeakStartedEventArgs">
      <summary>从<see cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" /> 事件返回通知。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.SpeechSynthesizer">
      <summary>提供对已安装的语音合成引擎的功能的访问。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor">
      <summary>初始化 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)">
      <summary>将 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 添加到该对象的词典中。</summary>
      <param name="uri">词典信息的位置。</param>
      <param name="mediaType">词典的媒体类型。 媒体类型值不区分大小写。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached">
      <summary>
        <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 在提示中遇到书签时引发。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose">
      <summary>处置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象并释放对该会话期间使用的资源。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt">
      <summary>获取 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 正在讲话的提示。</summary>
      <returns>返回当前正在朗读的提示对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices">
      <summary>返回所有安装的语音合成（文字到语音）语音。</summary>
      <returns>返回当前安装在系统的语音的只读集合。</returns>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)">
      <summary>返回支持特定区域设置的所有安装的语音合成（文字到语音）语音。</summary>
      <returns>返回当前安装在支持指定区域设置的系统的语音的只读集合。</returns>
      <param name="culture">语音必须支持的区域设置。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.Pause">
      <summary>暂停 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象。</summary>
    </member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached">
      <summary>当音素达到时引发。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.SpeechSynthesizer.Rate">
      <summary>获取或设置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象的语速。</summary>
      <returns>返回 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象的语速，在 -10 到 10 之间。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)">
      <summary>从 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象中移除词典。</summary>
      <param name="uri">词典文档的位置。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.Resume">
      <summary>继续 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象（在它暂停后）。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)">
      <summary>通过名称选择特定语音。</summary>
      <param name="name">要选择该的语音的名称。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)">
      <summary>选择具有特定性别的语音。</summary>
      <param name="gender">选择语音的性别。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)">
      <summary>选择具有特定性别和年龄的语音。</summary>
      <param name="gender">选择语音的性别。</param>
      <param name="age">要选择该的语音的年龄。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)">
      <summary>根据语音的排序位置选择具有特定性别和年龄的语音。</summary>
      <param name="gender">选择语音的性别。</param>
      <param name="age">要选择该的语音的年龄。</param>
      <param name="voiceAlternate">要选择该语音的位置。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)">
      <summary>根据语音的排序位置选择具有特定性别、年龄和区域设置的语音。</summary>
      <param name="gender">选择语音的性别。</param>
      <param name="age">要选择该的语音的年龄。</param>
      <param name="voiceAlternate">要选择该语音的位置。</param>
      <param name="culture">要选择该的语音的区域设置。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)">
      <summary>配置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象以追加输出到音频流。</summary>
      <param name="audioDestination">要追加合成输出的流。</param>
      <param name="formatInfo">用于合成输出的格式。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice">
      <summary>配置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象以发送输出到默认音频设备。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull">
      <summary>配置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象以不从对设备、文件或流的聚合操作中发送输出。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)">
      <summary>配置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象以追加输出到包含波形格式音频的文件。</summary>
      <param name="path">该文件的路径。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)">
      <summary>配置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象以追加输出到指定格式中的波形音频格式文件。</summary>
      <param name="path">该文件的路径。</param>
      <param name="formatInfo">音频格式信息。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)">
      <summary>配置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象以追加输出到包含波形格式音频的流。</summary>
      <param name="audioDestination">要追加合成输出的流。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)">
      <summary>同步使用 <see cref="T:System.Speech.Synthesis.Prompt" /> 对象内容的语言。</summary>
      <param name="prompt">要朗读的内容。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)">
      <summary>同步使用 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象内容的语言。</summary>
      <param name="promptBuilder">要朗读的内容。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)">
      <summary>同步使用字符串内容的语言。</summary>
      <param name="textToSpeak">要朗读的文本。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)">
      <summary>异步使用 <see cref="T:System.Speech.Synthesis.Prompt" /> 对象内容的语言。</summary>
      <param name="prompt">要朗读的内容。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)">
      <summary>异步使用 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 对象内容的语言。</summary>
      <returns>返回包含要使用的内容的对象。</returns>
      <param name="promptBuilder">要朗读的内容。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)">
      <summary>异步使用字符串内容的语言。</summary>
      <returns>返回包含要使用的内容的对象。</returns>
      <param name="textToSpeak">要朗读的文本。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)">
      <summary>取消一个排队的提示的异步合成操作。</summary>
      <param name="prompt">内容中移除调用操作。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll">
      <summary>取消所有排队、异步、语音合成操作。</summary>
    </member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted">
      <summary>当 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 完成提示的讲话的时候引发。</summary>
    </member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress">
      <summary>在 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 使用提示的每个单词后引发。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)">
      <summary>同步包含 SSML 标记的 <see cref="T:System.String" /> 的语言。</summary>
      <param name="textToSpeak">要朗读的 SSML。</param>
    </member>
    <member name="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)">
      <summary>异步使用包含 SSML 标记的 <see cref="T:System.String" /> 的语言。</summary>
      <param name="textToSpeak">要朗读的 SMML 标记。</param>
    </member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted">
      <summary>当 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 开始提示的讲话的时候引发。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.SpeechSynthesizer.State">
      <summary>获取 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象的当前语速。</summary>
      <returns>返回 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象的当前语速。</returns>
    </member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged">
      <summary>当 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 的状态更改的时候引发。</summary>
    </member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached">
      <summary>当 viseme 达到时引发。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.SpeechSynthesizer.Voice">
      <summary>获取有关当前 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象的语音的信息。</summary>
      <returns>返回有关当前 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象的语音的信息。</returns>
    </member>
    <member name="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange">
      <summary>当 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 的语音更改的时候引发。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.SpeechSynthesizer.Volume">
      <summary>获取或设置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 对象的输出量。</summary>
      <returns>返回 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 的量（0 到 100）。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Speech.Synthesis.StateChangedEventArgs">
      <summary>从 <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" /> 事件返回数据。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.StateChangedEventArgs.PreviousState">
      <summary>获取 <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" /> 事件前的 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 的状态。</summary>
      <returns>返回状态更改前合成器的状态。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.StateChangedEventArgs.State">
      <summary>获取 <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" /> 事件前的 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 的状态。</summary>
      <returns>状态更改后合成器的状态。</returns>
    </member>
    <member name="T:System.Speech.Synthesis.SynthesisMediaType">
      <summary>枚举媒体文件的类型。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.SynthesisMediaType.Ssml">
      <summary>指示该媒体类型为 SSML。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SynthesisMediaType.Text">
      <summary>指示该媒体类型为 Text。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SynthesisMediaType.WaveAudio">
      <summary>指示该媒体类型为 WaveAudio。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.SynthesisTextFormat">
      <summary>枚举可用于构造 <see cref="T:System.Speech.Synthesis.Prompt" /> 对象的文本格式的类型。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.SynthesisTextFormat.Ssml">
      <summary>指示该文本格式为 SSML。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SynthesisTextFormat.Text">
      <summary>指示该文本格式为 Text。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.SynthesizerEmphasis">
      <summary>枚举合成器焦点的级别。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Speech.Synthesis.SynthesizerEmphasis.Emphasized">
      <summary>指示低级别合成器焦点。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SynthesizerEmphasis.Stressed">
      <summary>指示高级别合成器焦点。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.SynthesizerState">
      <summary>枚举 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 状态的值。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SynthesizerState.Paused">
      <summary>指示 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 为暂停。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SynthesizerState.Ready">
      <summary>指示 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 准备从提示生成语音。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.SynthesizerState.Speaking">
      <summary>指示 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 正在讲话。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.VisemeReachedEventArgs">
      <summary>从 <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" /> 事件返回数据。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.VisemeReachedEventArgs.AudioPosition">
      <summary>获取 viseme 在音频流中的位置。</summary>
      <returns>一个 <see cref="T:System.TimeSpan" /> 对象，表示 viseme 的位置。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.VisemeReachedEventArgs.Duration">
      <summary>获取 viseme 的持续时间。</summary>
      <returns>一个 <see cref="T:System.TimeSpan" /> 对象，表示持续时间 viseme。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.VisemeReachedEventArgs.Emphasis">
      <summary>获取描述 viseme 重点的 <see cref="T:System.Speech.Synthesis.SynthesizerEmphasis" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Speech.Synthesis.SynthesizerEmphasis" /> 对象，表示强调 viseme。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.VisemeReachedEventArgs.NextViseme">
      <summary>获取下一个 viseme 的值。</summary>
      <returns>包含下一个 viseme 的值的 <see cref="T:System.Int32" /> 对象。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.VisemeReachedEventArgs.Viseme">
      <summary>获取 viseme 的值。</summary>
      <returns>包含 <see cref="T:System.Int32" /> viseme 值的对象</returns>
    </member>
    <member name="T:System.Speech.Synthesis.VoiceAge">
      <summary>定义合成语音期限的值。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.VoiceAge.Adult">
      <summary>指示成人语音(年龄 30)。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.VoiceAge.Child">
      <summary>指示子语音（年龄 10）。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.VoiceAge.NotSet">
      <summary>指示未指定语音年龄。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.VoiceAge.Senior">
      <summary>指示高龄语音（年龄 65）。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.VoiceAge.Teen">
      <summary>指示青少年语音（年龄 15）。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.VoiceChangeEventArgs">
      <summary>从 <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" /> 事件返回数据。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.VoiceChangeEventArgs.Voice">
      <summary>获取新语言的 <see cref="T:System.Speech.Synthesis.VoiceInfo" /> 对象。</summary>
      <returns>返回描述和标识新语音的信息。</returns>
    </member>
    <member name="T:System.Speech.Synthesis.VoiceGender">
      <summary>定义合成语音性别的值。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.VoiceGender.Female">
      <summary>指示女性语音。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.VoiceGender.Male">
      <summary>指示男性语音。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.VoiceGender.Neutral">
      <summary>指示不确定性别的语音。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.VoiceGender.NotSet">
      <summary>指示无语音性别规范。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.VoiceInfo">
      <summary>表示一个安装的语音合成引擎。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.AdditionalInfo">
      <summary>获取有关语音的其他信息。</summary>
      <returns>返回描述和确定语音的名称或值对的集合。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.Age">
      <summary>获取语音的年龄。</summary>
      <returns>返回语音的期限。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.Culture">
      <summary>获取语音的区域性。</summary>
      <returns>返回提供有关特定区域性的信息，如区域性，书写系统，使用的日历的名称以及如何将日期和字符串的排序顺序 <see cref="T:System.Globalization.CultureInfo" /> 对象。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.Description">
      <summary>获取语言说明。</summary>
      <returns>返回语音的说明。</returns>
    </member>
    <member name="M:System.Speech.Synthesis.VoiceInfo.Equals(System.Object)">
      <summary>将语音字段与指定的 <see cref="T:System.Speech.Synthesis.VoiceInfo" /> 对象进行比较来确定它们是否包含相同的值。</summary>
      <returns>如果两个 <see cref="T:System.Speech.Synthesis.VoiceInfo" /> 对象的字段相等，则返回 True，否则返回 False。</returns>
      <param name="obj">指定的 <see cref="T:System.Speech.Synthesis.VoiceInfo" /> 对象。</param>
    </member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.Gender">
      <summary>获取语音的性别。</summary>
      <returns>返回语音的性别。</returns>
    </member>
    <member name="M:System.Speech.Synthesis.VoiceInfo.GetHashCode">
      <summary>提供 VoiceInfo 对象的哈希代码。</summary>
      <returns>当前 <see cref="T:System.Speech.Synthesis.VoiceInfo" /> 对象的哈希代码。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.Id">
      <summary>获取语言的 ID。</summary>
      <returns>返回语音的标识符。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.Name">
      <summary>获取语言的名称。</summary>
      <returns>返回语音的名称。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.VoiceInfo.SupportedAudioFormats">
      <summary>获取语音支持的音频格式的集合。</summary>
      <returns>返回语音支持的音频格式的集合。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ContourPoint">
      <summary>表示 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的语音内容的间距的更改。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ContourPoint.#ctor(System.Single,System.Single,System.Speech.Synthesis.TtsEngine.ContourPointChangeType)">
      <summary>创建 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 类的新实例。</summary>
      <param name="start">指定在 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 中应用间距更改的点的 <see cref="T:System.Single" />。 这是以 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的持续时间表述的运行百分比。</param>
      <param name="change">指定引发或降低间距的数量的 <see cref="T:System.Single" />。</param>
      <param name="changeType">
        <see cref="P:System.Speech.Synthesis.TtsEngine.ContourPoint.ChangeType" /> 的成员，该成员指定用于在 <paramref name="change" /> 参数中指定的数值的单位。</param>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ContourPoint.Change">
      <summary>获取表示此数量在某个时间点在 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 中引发或降低间距的值。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ContourPoint.ChangeType">
      <summary>获取 <see cref="P:System.Speech.Synthesis.TtsEngine.ContourPoint.ChangeType" /> 的成员，该成员指定用于 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 对象的参数 <paramref name="change" /> 中指定的数值的单位。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals(System.Object)">
      <summary>确定给定的对象是否为 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 的实例，并与当前 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 实例相等。</summary>
      <returns>如果 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 的当前实例从 <paramref name="obj" /> 参数相等获取，则返回 true，否则返回 false。</returns>
      <param name="obj">一个可强制转换为实例 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 的对象。</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ContourPoint.Equals(System.Speech.Synthesis.TtsEngine.ContourPoint)">
      <summary>确定是否是 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 给定的实例和是否等于当前实例 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" />。</summary>
      <returns>如果 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 的当前实例和通过 <paramref name="other" /> 参数提供的当前实例相等，则返回 true；否则返回 false。</returns>
      <param name="other">要与当前实例进行比较的 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 实例。</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ContourPoint.GetHashCode">
      <summary>返回此实例的哈希代码。</summary>
      <returns>32 位有符号整数哈希代码。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ContourPoint.op_Equality(System.Speech.Synthesis.TtsEngine.ContourPoint,System.Speech.Synthesis.TtsEngine.ContourPoint)">
      <summary>确定 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 的两个实例是否相等。</summary>
      <returns>如果 <paramref name="point1" /> 和 <paramref name="point2" /> 引用的 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 实例相等，则返回 true；否则返回 false。</returns>
      <param name="point1">用于比较 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 的实例由 <paramref name="point2" /> 参数提供 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 的实例。</param>
      <param name="point2">用于比较 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 的实例由 <paramref name="point1" /> 参数提供 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 的实例。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ContourPoint.op_Inequality(System.Speech.Synthesis.TtsEngine.ContourPoint,System.Speech.Synthesis.TtsEngine.ContourPoint)">
      <summary>确定 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 的两个实例是否不相等。</summary>
      <returns>如果 <paramref name="point1" /> 和 <paramref name="point2" /> 引用的 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 实例不相等，则返回 true；否则返回 false。</returns>
      <param name="point1">用于比较 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 的实例由 <paramref name="point2" /> 参数提供 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 的实例。</param>
      <param name="point2">用于比较 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 的实例由 <paramref name="point1" /> 参数提供 <see cref="T:System.Speech.Synthesis.TtsEngine.ContourPoint" /> 的实例。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ContourPoint.Start">
      <summary>获取指定在  <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 中应用间距更改的点的  <see cref="T:System.Single" />。 这是以 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的持续时间表述的运行百分比。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ContourPointChangeType">
      <summary>枚举 ContourPoint 更改的类型的值。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ContourPointChangeType.Hz">
      <summary>指示间距值更改。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ContourPointChangeType.Percentage">
      <summary>指示时间值更改。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.EmphasisBreak">
      <summary>枚举在讲单词之间的 EmphasisBreak 长度的值。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Default">
      <summary>常规断字。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.ExtraStrong">
      <summary>最长的断字。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.ExtraWeak">
      <summary>非常小的断词。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Medium">
      <summary>中等断字。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.None">
      <summary>没有断字。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Strong">
      <summary>长断字。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisBreak.Weak">
      <summary>小型断词。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.EmphasisWord">
      <summary>枚举特定 TextFragment 的 EmphasisWord 的值。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Default">
      <summary>指示引擎特定默认级别焦点。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Moderate">
      <summary>指示中等焦点。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.None">
      <summary>指定不指示焦点。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Reduced">
      <summary>指示减少的焦点。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EmphasisWord.Strong">
      <summary>指示强焦点。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.EventParameterType">
      <summary>枚举传递到语音合成事件的数据指针的类型。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Object">
      <summary>当前不支持。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer">
      <summary>当前不支持。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EventParameterType.String">
      <summary>指示传到 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 的 <paramref name="param2" /> 参数是使用引用 System.String 的对象的 System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni 创建的 System.IntPtr；<paramref name="param1" /> 可以具有任何值。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Token">
      <summary>指示传到 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 的参数 <paramref name="param2" /> 是一个</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined">
      <summary>指示传到 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 的参数 <paramref name="param2" /> 未定义。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.FragmentState">
      <summary>提供有关 TextFragment 的详细信息。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.FragmentState.#ctor(System.Speech.Synthesis.TtsEngine.TtsEngineAction,System.Int32,System.Int32,System.Int32,System.Speech.Synthesis.TtsEngine.SayAs,System.Speech.Synthesis.TtsEngine.Prosody,System.Char[])">
      <summary>构造 FragmentState 的新实例。</summary>
      <param name="action">指定语音合成事件操作的 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" /> 枚举的成员。</param>
      <param name="langId">所使用的语言的 id。 对应于 XML xml:lang 特性。</param>
      <param name="emphasis">要应用于语音输出或暂停的焦点。</param>
      <param name="duration">调用文本分配的时间TextFragment。</param>
      <param name="sayAs">
        <see cref="T:System.Speech.Synthesis.TtsEngine.SayAs" /> 类的成员，用于指示 TextFragment 的文本类型和精确呈现包含文本时所需的详细信息的级别。 对应于 SSML 规范中的 &lt;say-as&gt; XML 标记 参数可以是 null.</param>
      <param name="prosody">指示语音输出特性（如音调、语速、音量）的 <see cref="T:System.Speech.Synthesis.TtsEngine.Prosody" /> 对象。 对应于 SSML 规范中的 &lt;prosody&gt; XML 标记</param>
      <param name="phonemes">使用国际音标 (IPA) 规范，提供 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />中包含的文本的语音发音的 char 对象数组。 对应于 SSML 规范中的 &lt;phoneme&gt; XML 标记。 参数可以是 null。</param>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.FragmentState.Action">
      <summary>返回请求的语音合成器事件。</summary>
      <returns>指示由 SSML 输入请求的语音合成事件的 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction" /> 的成员。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.FragmentState.Duration">
      <summary>返回呈现 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 所需的时间。</summary>
      <returns>返回包含呈现 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的所需时间毫秒的值的 int。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.FragmentState.Emphasis">
      <summary>返回有关如何强调 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的说明。</summary>
      <returns>返回指示如何强调的 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的 int 值。</returns>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Object)">
      <summary>确定给定的对象是否 <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> 的实例，并与当前 <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> 实例相等。</summary>
      <returns>如果当前的 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 实例和从由 <paramref name="obj" /> 参数提供的 System.Object 获取的实例都描述的是相同的 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 状态，则返回 true。 如果当前的 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 和 <paramref name="obj" /> 参数不支持相同的 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 状态，则返回 false.</returns>
      <param name="obj">一个可强制转换为实例 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的对象</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.FragmentState.Equals(System.Speech.Synthesis.TtsEngine.FragmentState)">
      <summary>确定是否是 <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> 给定的实例和是否等于当前实例 <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />。</summary>
      <returns>如果 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的当前实例和通过 <paramref name="other" /> 参数提供的当前实例均描述的是相同的 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 状态，则返回 true。 如果当前 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 和 <paramref name="other" /> 参数不支持相同的 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 状态，则返回 false。</returns>
      <param name="other">该 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的一个实例</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.FragmentState.GetHashCode">
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.FragmentState.LangId">
      <summary>返回当前 <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> 支持的语言。</summary>
      <returns>返回包含由当前 <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> 使用的语言标识符的 int。</returns>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Equality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)">
      <summary>确定 <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> 的两个实例是否描述相同的 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 状态。</summary>
      <returns>如果 <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />、<paramref name="state1" /> 和 <paramref name="state2" /> 实例均描述相同的<see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 状态，则返回 true；否则返回 false。</returns>
      <param name="state1">介绍的状态用于比较 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的实例由 <paramref name="state2" /> 参数提供 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的实例。</param>
      <param name="state2">介绍的状态用于比较 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的实例由 <paramref name="state1" /> 参数提供 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的实例。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.FragmentState.op_Inequality(System.Speech.Synthesis.TtsEngine.FragmentState,System.Speech.Synthesis.TtsEngine.FragmentState)">
      <summary>确定 <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> 的两个实例是否描述不同的 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 状态。</summary>
      <returns>如果 <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />、<paramref name="state1" /> 和 <paramref name="state2" /> 实例未描述相同的<see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 状态，则返回 true；否则返回 false。</returns>
      <param name="state1">介绍的状态用于比较 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的实例由 <paramref name="state2" /> 参数提供 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的实例。</param>
      <param name="state2">介绍的状态用于比较 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的实例由 <paramref name="state1" /> 参数提供 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的实例。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.FragmentState.Phoneme">
      <summary>返回 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 的语音信息。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody">
      <summary>返回有关语音输出音调、语速和音量的详细信息。</summary>
      <returns>返回包含间距、调用率和数量设置的 <see cref="T:System.Speech.Synthesis.TtsEngine.Prosody" /> 有效实例，并将为语音输出更改这些设置。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs">
      <summary>返回有关从文本生成语音的上下文的信息。</summary>
      <returns>如果由合成语音引擎使用的 SSML 包含有关要用于生成语音的上下文的详细信息，则返回值 <see cref="T:System.Speech.Synthesis.TtsEngine.SayAs" /> 实例；否则 null。</returns>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite">
      <summary>提供写入音频数据和事件的方法。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Actions">
      <summary>确定引擎应执行的一个或多个操作。</summary>
      <returns>int 包含 TtsEngineAction 枚举的一个或多个成员的和。</returns>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents(System.Speech.Synthesis.TtsEngine.SpeechEventInfo[],System.Int32)">
      <summary>在 EventInterest 属性中添加一个事件或多个事件。</summary>
      <param name="events">SpeechEventInfo 对象的数组。</param>
      <param name="count">数组大小。</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.CompleteSkip(System.Int32)">
      <summary>返回已跳过的项数。</summary>
      <param name="skipped">要跳过的项数。</param>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest">
      <summary>确定事件引擎应引发。</summary>
      <returns>int 包含 TtsEventId 枚举的一个或多个成员的和。</returns>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.GetSkipInfo">
      <summary>返回要跳过的项的数目和类型。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.LoadResource(System.Uri,System.String)">
      <summary>加载位于指定 URI 中的资源。</summary>
      <param name="uri">资源的 URI。</param>
      <param name="mediaType">资源的媒体类型。</param>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Rate">
      <summary>获取引擎的语速。</summary>
      <returns>包含语速的 int。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Volume">
      <summary>获取引擎的音量。</summary>
      <returns>包含音量的 int。</returns>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Write(System.IntPtr,System.Int32)">
      <summary>输出音频数据。</summary>
      <param name="data">输出音频数据的位置。</param>
      <param name="count">输出音频流的项数。</param>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.Prosody">
      <summary>表示语音属性设置的集合，如 Pitch、 Rate 和 Volume。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.Prosody.#ctor">
      <summary>构造 Prosody 类的新实例。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.Prosody.Duration">
      <summary>获取或设置 TextFragment 的持续时间（以毫秒为单位）。</summary>
      <returns>朗读文本所需时间的以毫秒为单位的值。</returns>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.Prosody.GetContourPoints">
      <summary>返回包含 TextFragment 的 ContourPoints 的数组。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.Prosody.Pitch">
      <summary>获取或设置 TextFragment 的基线间距。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.Prosody.Range">
      <summary>获取或设置 TextFragment 的范围间距。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.Prosody.Rate">
      <summary>获取或设置 TextFragment 的语速。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.Prosody.SetContourPoints(System.Speech.Synthesis.TtsEngine.ContourPoint[])">
      <summary>设置 TextFragment 的 ContourPoints。</summary>
      <param name="points">ContourPoint  对象的字节数组。</param>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.Prosody.Volume">
      <summary>获取或设置 TextFragment 的音量（大声）。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber">
      <summary>指定诗体论属性及其值。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.#ctor(System.Int32)">
      <summary>创建 ProsodyNumber 类的新实例并指为诗体论特性指定标识符。</summary>
      <param name="ssmlAttributeId">该 prosody 特性的标识符。</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.#ctor(System.Single)">
      <summary>创建 ProsodyNumber 类的新实例并指为诗体论特性指定值。</summary>
      <param name="number">诗体论特性的值。</param>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyNumber.AbsoluteNumber">
      <summary>保存一个表示韵律特性设置的值。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals(System.Object)">
      <summary>确定指定的对象是否为 ProsodyNumber 的实例，并与当前 ProsodyNumber 实例相等。</summary>
      <returns>如果 <paramref name="obj" /> 与当前的 <see cref="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" /> 对象相同，则为 true；否则为 false。</returns>
      <param name="obj">要计算的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Equals(System.Speech.Synthesis.TtsEngine.ProsodyNumber)">
      <summary>确定指定的 ProsodyNumber 对象是否等于当前 ProsodyNumber 实例。</summary>
      <returns>如果 <paramref name="other" /> 与当前的 <see cref="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" /> 对象相同，则为 true；否则为 false。</returns>
      <param name="other">要计算的 <see cref="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" /> 对象。</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.GetHashCode">
      <summary>提供 ProsodyNumber 对象的哈希代码。</summary>
      <returns>
        <see cref="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" /> 对象的哈希代码。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.IsNumberPercent">
      <summary>获取是否 Number 属性表示一个百分比值。</summary>
      <returns>如果 <see cref="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Number" /> 表示百分比值，则为 true，否则为 false。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Number">
      <summary>获取 SSML Prosody 属性的数值。</summary>
      <returns>获取 SSML prosody 属性的数值。</returns>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.op_Equality(System.Speech.Synthesis.TtsEngine.ProsodyNumber,System.Speech.Synthesis.TtsEngine.ProsodyNumber)">
      <summary>确定两个 ProsodyNumber 实例是否相等。</summary>
      <returns>如果 <paramref name="prosodyNumber1" /> 与 <paramref name="prosodyNumber2" /> 相同，则为 true；否则为 false。</returns>
      <param name="prosodyNumber1">要与 <paramref name="prosodyNumber2" /> 比较的 <see cref="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" /> 对象。</param>
      <param name="prosodyNumber2">要与 <paramref name="prosodyNumber1" /> 比较的 <see cref="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" /> 对象。</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.ProsodyNumber.op_Inequality(System.Speech.Synthesis.TtsEngine.ProsodyNumber,System.Speech.Synthesis.TtsEngine.ProsodyNumber)">
      <summary>确定两个 ProsodyNumber 实例是否不相等。</summary>
      <returns>如果 <paramref name="prosodyNumber1" /> 与 <paramref name="prosodyNumber2" /> 不同，则为 true；否则为 <paramref name="false" />。</returns>
      <param name="prosodyNumber1">要与 <paramref name="prosodyNumber2" /> 比较的 <see cref="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" /> 对象。</param>
      <param name="prosodyNumber2">要与 <paramref name="prosodyNumber1" /> 比较的 <see cref="T:System.Speech.Synthesis.TtsEngine.ProsodyNumber" /> 对象。</param>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.SsmlAttributeId">
      <summary>获取 SSML Prosody 属性的标识符。</summary>
      <returns>prosody 特性的 SSML 标识符。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.ProsodyNumber.Unit">
      <summary>获取在数量更改指定的单元。</summary>
      <returns>更改量指定的单元，如 Hz（赫兹）或半音。</returns>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ProsodyPitch">
      <summary>枚举特定 Prosody 对象的 Pitch 属性的值。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.Default">
      <summary>指示普通间距范围。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.ExtraHigh">
      <summary>指示超高间距范围。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.ExtraLow">
      <summary>指示超低间距范围。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.High">
      <summary>指示高间距范围。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.Low">
      <summary>指示低间距范围。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyPitch.Medium">
      <summary>指示中间距范围。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ProsodyRange">
      <summary>枚举特定 Prosody 对象的 Range 属性的值。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.Default">
      <summary>指示普通诗体论范围。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.ExtraHigh">
      <summary>指示高诗体论范围。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.ExtraLow">
      <summary>指示低诗体论范围。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.High">
      <summary>指示高诗体论范围。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.Low">
      <summary>指示一个低诗体论范围。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRange.Medium">
      <summary>指示中诗体论范围。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ProsodyRate">
      <summary>枚举特定 Prosody 对象的 Rate 属性的值。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Default">
      <summary>指示引擎特定默认频率。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.ExtraFast">
      <summary>指示超快速度。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.ExtraSlow">
      <summary>指示超慢速度。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Fast">
      <summary>指示快速度。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Medium">
      <summary>指示中等速率。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyRate.Slow">
      <summary>指示慢速度。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ProsodyUnit">
      <summary>枚举 Prosody 对象上的 Unit 属性的值。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyUnit.Default">
      <summary>指示引擎特定默认值。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyUnit.Hz">
      <summary>指示“单位”值是 Hz。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyUnit.Semitone">
      <summary>指示“单位”值是 semitone。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.ProsodyVolume">
      <summary>枚举特定 Prosody 对象的 Volume 属性的值。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Default">
      <summary>当前默认音量值，与支持该引擎的 <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> 站点上的 <see cref="P:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.Volume" /> 属性返回的值相同。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.ExtraLoud">
      <summary>最大体积。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.ExtraSoft">
      <summary>大约最大体积的 20%。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Loud">
      <summary>大约最大体积的 80%。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Medium">
      <summary>大约最大体积的 60%。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Silent">
      <summary>数目</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.ProsodyVolume.Soft">
      <summary>大约最大体积的 40%。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.SayAs">
      <summary>包含有关内容类型（例如货币、日期或地址）或确定文本应如何发音的语言构造的信息。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SayAs.#ctor">
      <summary>创建 SayAs 类的新实例。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SayAs.Detail">
      <summary>获取或设置提示的 SSML 标记语言中的 say-as 元素的 detail 特性值。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SayAs.Format">
      <summary>获取或设置提示的 SSML 标记语言中的 say-as 元素的 format 特性值。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs">
      <summary>获取或设置提示的 SSML 标记语言中的 say-as 元素的 interpret-as 特性值。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.SkipInfo">
      <summary>提供关于将跳过的文本流的信息。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SkipInfo.#ctor">
      <summary>创建 SkipInfo 对象的新实例。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SkipInfo.Count">
      <summary>获取或设置需要跳过的项的数量。</summary>
      <returns>包含项目数的 int。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SkipInfo.Type">
      <summary>获取或设置跳过对象的类型。</summary>
      <returns>表示类型的对象 int。</returns>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat">
      <summary>枚举语音输出格式的类型。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat.Text">
      <summary>指示文本输出。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat.WaveFormat">
      <summary>指示波形（音频）输出。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo">
      <summary>用于指定事件的类型及其将生成的参数（如果有的话）作为文本呈现到语音一部分由自定义复合语音引擎。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)">
      <summary>构造相应的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />。</summary>
      <param name="eventId">指示 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 对象将处理的语音平台事件的类型的 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> 实例。</param>
      <param name="parameterType">指示将如何解释 <paramref name="param2" /> 的 System.IntPtr 引用和暗示 <paramref name="param1" /> 用法的 <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> 实例。</param>
      <param name="param1">当要构造的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 实例要求的事件生成，要传递到语音平台的整数值。 此整数的确切含义隐式依赖于 <paramref name="parameterType" />的值。</param>
      <param name="param2">一个引用对象的 System.IntPtr 实例。当要构造的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 实例要求的事件生成，要传递到语音平台的整数值。 必须是明显地通过值定义的引用的类型 <paramref name="parameterType" />。 值 System.IntPtr.Zero。</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)">
      <summary>确定指定的对象是否为 SpeechEventInfo 的实例，并与当前 SpeechEventInfo 实例相等。</summary>
      <returns>如果 <paramref name="obj" /> 与当前的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 对象相同，则为 true；否则为 false。</returns>
      <param name="obj">要计算的对象。</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)">
      <summary>确定指定的 SpeechEventInfo 对象是否等于当前 SpeechEventInfo 实例。</summary>
      <returns>如果 <paramref name="other" /> 与当前的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 对象相同，则为 true；否则为 false。</returns>
      <param name="other">要计算的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 对象。</param>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId">
      <summary>获取和设置 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 实例用于请求的语音平台事件。</summary>
      <returns>返回作为 short 的 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> 的成员，指示该事件类型 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 对象将生成。</returns>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode">
      <summary>提供 SpeechEventInfo 对象的哈希代码。</summary>
      <returns>
        <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 对象的哈希代码。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)">
      <summary>确定两个 SpeechEventInfo 实例是否相等。</summary>
      <returns>如果 <paramref name="event1" /> 与 <paramref name="event2" /> 相同，则为 true；否则为 false。</returns>
      <param name="event1">要与 <paramref name="event2" /> 比较的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 对象。</param>
      <param name="event2">要与 <paramref name="event1" /> 比较的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 对象。</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)">
      <summary>确定两个 SpeechEventInfo 实例是否不相等。</summary>
      <returns>如果 <paramref name="event1" /> 与 <paramref name="event2" /> 不同，则为 true；否则为 false。</returns>
      <param name="event1">要与 <paramref name="event2" /> 比较的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 对象。</param>
      <param name="event2">要与 <paramref name="event1" /> 比较的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 对象。</param>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1">
      <summary>获取和设置 integer 值（构造函数中的 <paramref name="param1" />），此值需要传递至语音平台以生成 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 的当前实例用于请求的事件。</summary>
      <returns>返回生成 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 的当前实例指定的事件时，要传递到语音平台的 integer。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2">
      <summary>获取和设置 System.IntPtr 实例（构造函数中的 <paramref name="param2" />），此实例引用需要传递至语音平台以生成 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 的当前实例用于请求的事件。</summary>
      <returns>返回生成 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 的当前实例指定的事件时，引用要传递到语音平台的对象的 System.IntPtr。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType">
      <summary>返回当前 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 对象上的 <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> 参数返回的 IntPtr 所指向的对象的数据类型。</summary>
      <returns>一个 short 值，该值对应于 <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> 枚举的成员并指示由 <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> 参数返回的IntPtr 所指向的对象的数据类型，并且该类型用作当前 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 对象中构造函数的第二参数。</returns>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.TextFragment">
      <summary>通过语音合成引擎包含消耗的文本和语音特性信息。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.TextFragment.#ctor">
      <summary>构造 TextFragment 的新实例。</summary>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.TextFragment.State">
      <summary>获取或设置 TextFragment 的语音特性信息。</summary>
      <returns>返回或使用 <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> 实例来为 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 设置语音特性信息。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength">
      <summary>设置或获取片段中的语音文本的长度。</summary>
      <returns>返回或使用 int 以字符设置与此要朗读的片段相关联的文本字符串的长度。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset">
      <summary>设置或获取片段中的文本的起始位置。</summary>
      <returns>返回或使用 int 以字符设置与此要朗读的片段相关联的部分文本字符串的开始位置。</returns>
    </member>
    <member name="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak">
      <summary>设置或获取片段的语音文本。</summary>
      <returns>返回或使用 System.String 来设置语音合成引擎用来生成音频输出的语音文本。</returns>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.TtsEngineAction">
      <summary>指定在呈现特定 TextFragment将采用的语音合成标记语言(SSML)事件。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Bookmark">
      <summary>指示 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 将用作书签的内容。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.ParseUnknownTag">
      <summary>指示没有通过 SSML 输入确定的操作。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Pronounce">
      <summary>请求输入 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 文本将被解释为音素。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Silence">
      <summary>指示 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 不包含要作为语音呈现的文本。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak">
      <summary>请求应处理和通知的关联的 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.SpellOut">
      <summary>指示由 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 通过其 <see cref="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak" /> 属性提供的文本值将聚合为单独的字符。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.StartParagraph">
      <summary>指示段落的状态。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEngineAction.StartSentence">
      <summary>指示句子开头。</summary>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml">
      <summary>所有的语音合成引擎文字可实现的抽象基类。</summary>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)">
      <summary>基于相应的语音标记注册表项构建新的 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> 实例。</summary>
      <param name="registryKey">与 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> 实现引擎相关的语音标记的注册表项的全名。</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)">
      <summary>添加词典到当前 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> 实例实现的 SynthesizerVoice。</summary>
      <param name="uri">指示词典信息位置的 System.Uri 的有效实例。</param>
      <param name="mediaType">一个包含该词典的媒体类型的字符串。 媒体类型要区分大小写。</param>
      <param name="site">对用于与平台基础结构进行交互的 <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> 接口的引。</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)">
      <summary>返回对向合成器引擎请求支持特定输出格式的给定合成引擎响应支持的最佳匹配音频输出。</summary>
      <returns>返回引用包含有关输出格式的详细信息 struct 的有效 IntPtr 实例。</returns>
      <param name="speakOutputFormat">指示请求的音频输出格式的类型 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" /> 枚举的有效成员。</param>
      <param name="targetWaveFormat">指向音频格式类型中包含由 <paramref name="speakOutputFormat" /> 参数请求的详细信息设置的 struct 的指针。</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)">
      <summary>移除由当前 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> 实例实现的 SynthesizerVoice 当前加载的字典。</summary>
      <param name="uri">指示词典信息位置的 System.Uri 的有效实例。</param>
      <param name="site">对由平台基础结构传入以允许访问基础结构资源的 <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> 接口的引用。</param>
    </member>
    <member name="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)">
      <summary>在指定的输出格式呈现指定的 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 数组。</summary>
      <param name="fragment">包含呈现在语音中的文本的 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 实例数组。</param>
      <param name="waveHeader">指向包含音频输出格式结构的 IntPtr。</param>
      <param name="site">对由平台基础结构传入以允许访问基础结构资源的 <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> 接口的引用。</param>
    </member>
    <member name="T:System.Speech.Synthesis.TtsEngine.TtsEventId">
      <summary>枚举语音合成事件的类型。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.AudioLevel">
      <summary>当语音合成引擎在讲话过程中完成一个音频级别的更改时，标识生成的事件。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.Bookmark">
      <summary>当语音合成引擎在讲话过程中遇到一个书签时，标识生成的事件。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.EndInputStream">
      <summary>当语音合成引擎在讲话过程中遇到它的输入流的末尾时，标识生成的事件。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.Phoneme">
      <summary>当语音合成引擎在讲话过程中完成一个音素时，标识生成的事件。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.SentenceBoundary">
      <summary>当语音合成引擎在讲话过程中完成一个句子时，标识生成的事件。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.StartInputStream">
      <summary>当语音合成引擎开始讲话时，标识生成的事件。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.Viseme">
      <summary>当语音合成引擎在讲话过程中完成一个 viseme 时，标识生成的事件。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.VoiceChange">
      <summary>当语音合成引擎在讲话过程中遇到一个语音更改时，标识生成的事件。</summary>
    </member>
    <member name="F:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary">
      <summary>当语音合成引擎在讲话过程中完成一个词语时，标识生成的事件。</summary>
    </member>
  </members>
</doc>