<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.OracleClient</name>
  </assembly>
  <members>
    <member name="T:System.Data.OracleClient.OracleBFile">
      <summary>表示托管 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象，该对象的设计旨在与 Oracle BFILE 数据类型配合使用。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.CanRead">
      <summary>获取一个值，该值指示 BFILE 流是否可读。</summary>
      <returns>如果 BFILE 已关闭或已释放，则为 false；否则为 true。 对于 <see cref="F:System.Data.OracleClient.OracleBFile.Null" />，总是为 true。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.CanSeek">
      <summary>获取一个值，该值指示能否执行向前和向后查找操作。</summary>
      <returns>如果 BFILE 已关闭或已释放，则为 false；否则为 true。 对于 <see cref="F:System.Data.OracleClient.OracleBFile.Null" />，总是为 true。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.CanWrite">
      <summary>获取一个值，该值指示对象是否支持写入。</summary>
      <returns>因为 Oracle BFILE 数据类型是只读的，所以始终返回 false。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.Clone">
      <summary>创建此 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象的副本，该副本所关联的物理文件与原始对象所关联的相同。</summary>
      <returns>一个新 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象，该对象所关联的物理文件与原始 OracleBFile 对象所关联的相同。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.Connection">
      <summary>获取由该 <see cref="T:System.Data.OracleClient.OracleBFile" /> 实例使用的 <see cref="T:System.Data.OracleClient.OracleConnection" />。</summary>
      <returns>与数据源的连接。 默认为空值。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)">
      <summary>将此 <see cref="T:System.Data.OracleClient.OracleBFile" /> 的全部内容复制到目标 <see cref="T:System.Data.OracleClient.OracleLob" /> 的开始位置。</summary>
      <returns>已复制的字节数。</returns>
      <param name="destination">目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</param>
      <exception cref="T:System.ArgumentNullException">目标 OracleLob 为空对象引用。</exception>
      <exception cref="T:System.InvalidOperationException">该目标为空 OracleLob。 - 或 - 与该 OracleBFile 相关联的连接已关闭。</exception>
      <exception cref="T:System.ObjectDisposedException">已关闭或已释放 OracleBFile 对象。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
      <summary>将此 <see cref="T:System.Data.OracleClient.OracleBFile" /> 的全部内容复制到目标 <see cref="T:System.Data.OracleClient.OracleLob" /> 中指定的偏移位置。</summary>
      <returns>已复制的字节数。</returns>
      <param name="destination">目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</param>
      <param name="destinationOffset">要复制到的偏移量。</param>
      <exception cref="T:System.ArgumentNullException">目标 OracleLob 为空对象引用。</exception>
      <exception cref="T:System.InvalidOperationException">该目标为空 OracleLob。 - 或 - 与该 OracleBFile 相关联的连接已关闭。</exception>
      <exception cref="T:System.ObjectDisposedException">已关闭或已释放 OracleBFile 对象。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
      <summary>通过指定数据数量、源偏移量和目标偏移量，从此 <see cref="T:System.Data.OracleClient.OracleBFile" /> 复制到目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</summary>
      <returns>已复制的字节数。</returns>
      <param name="sourceOffset">要从中复制的偏移量。</param>
      <param name="destination">目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</param>
      <param name="destinationOffset">要复制到的偏移量。</param>
      <param name="amount">要复制的数据数量（以字节为单位）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">数量参数的值小于零或大于 4 GB。</exception>
      <exception cref="T:System.ArgumentNullException">目标 OracleLob 为空对象引用。</exception>
      <exception cref="T:System.InvalidOperationException">该目标为空 OracleLob。 - 或 - 与该 OracleBFile 相关联的连接已关闭。</exception>
      <exception cref="T:System.ObjectDisposedException">已关闭或已释放 OracleBFile 对象。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.DirectoryName">
      <summary>获取与 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象相关联的 DIRECTORY 对象的名称。</summary>
      <returns>DIRECTORY 对象的名称。</returns>
      <exception cref="T:System.ObjectDisposedException">尝试对已关闭或已释放的 OracleBFile 对象调用 DirectoryName。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.FileExists">
      <summary>获取一个值，该值指示操作系统中是否存在包含 BFILE 数据的物理文件。</summary>
      <returns>如果存在包含 BFILE 数据的物理文件，则为 true；否则为 false。</returns>
      <exception cref="T:System.ObjectDisposedException">已关闭或已释放 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象。</exception>
      <exception cref="T:System.InvalidOperationException">与 BFILE 相关联的连接已关闭。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.FileName">
      <summary>获取 BFILE 的名称（不带路径）。</summary>
      <returns>BFILE 的名称。</returns>
      <exception cref="T:System.ObjectDisposedException">已关闭或已释放 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.Flush">
      <summary>当前不支持。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.IsNull">
      <summary>获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleBFile" /> 是否为一个 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 流。</summary>
      <returns>如果 <see cref="T:System.Data.OracleClient.OracleBFile" /> 是 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 流，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.Length">
      <summary>获取一个值，该值返回与 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象关联的物理文件的长度（以字节为单位）。</summary>
      <returns>用字节表示物理文件长度的长值。</returns>
      <exception cref="T:System.ObjectDisposedException">关闭或释放该流后，调用方法。</exception>
    </member>
    <member name="F:System.Data.OracleClient.OracleBFile.Null">
      <summary>表示空 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象，该对象没有绑定到物理文件。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.Position">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleBFile" /> 流中的当前读取位置。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OracleBFile" /> 流中的当前位置。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">尝试用一个负值或大于该流长度的值设置位置。</exception>
      <exception cref="T:System.ObjectDisposedException">关闭或释放该流后，调用方法。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>从当前 <see cref="T:System.Data.OracleClient.OracleBFile" /> 流中读取字节序列，并在该流中按照读取的字节数提升位置。</summary>
      <returns>读入缓冲区中的总字节数。 如果当前可用的字节数没有那么多，则总字节数可能小于请求的字节数，或者如果已到达文件的末尾，则为零。</returns>
      <param name="buffer">字节数组。 此方法返回时，该缓冲区包含指定的字符数组，该数组的 <paramref name="offset" /> 和 (<paramref name="offset" />+<paramref name="count" />) 之间的值由从当前源中读取的字节替换。</param>
      <param name="offset">
        <paramref name="buffer" /> 中的从零开始的字节偏移量，从此处开始存储从当前流中读取的数据。</param>
      <param name="count">要从当前流中最多读取的字节数。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" /> 与 <paramref name="count" /> 的和大于缓冲区长度。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 或 <paramref name="count" /> 为负。</exception>
      <exception cref="T:System.InvalidOperationException">与 BFILE 相关联的连接已关闭。</exception>
      <exception cref="T:System.IO.IOException">发生了 I/O 错误。</exception>
      <exception cref="T:System.ObjectDisposedException">关闭或释放该流后，调用方法。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>在当前 <see cref="T:System.Data.OracleClient.OracleBFile" /> 流上设置位置。</summary>
      <returns>当前流中的新位置。</returns>
      <param name="offset">相对于 origin 的字节偏移量。 如果 <paramref name="offset" /> 为负，则新位置位于 <paramref name="origin" /> 指定的位置之前 <paramref name="offset" /> 指定的字节数。 如果 <paramref name="offset" /> 为零，则新位置是 <paramref name="origin" /> 指定的位置。 如果 <paramref name="offset" /> 为正，则新位置位于 <paramref name="origin" /> 指定的位置之后 <paramref name="offset" /> 指定的字节数。</param>
      <param name="origin">System.IO.SeekOrigin 类型的值，指示用于获取新位置的参考点。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">尝试用一个负值或大于该流长度的值设置位置。</exception>
      <exception cref="T:System.ObjectDisposedException">关闭或释放该流后，调用方法。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象绑定到操作系统中的其他文件。</summary>
      <param name="directory">包含物理文件的目录对象的别名。</param>
      <param name="file">操作系统中文件的名称。</param>
      <exception cref="T:System.InvalidOperationException">该操作必须在事务中。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.SetLength(System.Int64)">
      <summary>当前不支持。</summary>
      <param name="value">当前不支持。</param>
      <exception cref="T:System.NotSupportedException">当调用的方法不受支持，或试图读取、查找或写入不支持调用功能的流时引发的异常。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleBFile.Value">
      <summary>获取 <see cref="T:System.Byte" /> 类型的 <see cref="T:System.Array" />（它包含 <see cref="T:System.Data.OracleClient.OracleBFile" /> 数据）。</summary>
      <returns>
        <see cref="T:System.Byte" /> 类型的 <see cref="T:System.Array" />（它包含 <see cref="T:System.Data.OracleClient.OracleBFile" /> 数据）。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>当前不支持。</summary>
      <param name="buffer">当前不支持。</param>
      <param name="offset">当前不支持。</param>
      <param name="count">当前不支持。</param>
      <exception cref="T:System.NotSupportedException">当调用的方法不受支持，或试图读取、查找或写入不支持调用功能的流时引发的异常。</exception>
    </member>
    <member name="T:System.Data.OracleClient.OracleBinary">
      <summary>表示要存储在数据库中或从数据库中检索的二进制数据的可变长度流。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.#ctor(System.Byte[])">
      <summary>初始化 OracleBinary 结构的新实例，将 <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> 属性设置为已提供的字节数组的内容。</summary>
      <param name="b">要存储在 <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> 属性中的字节数组。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.CompareTo(System.Object)">
      <summary>将此 <see cref="T:System.Data.OracleClient.OracleBinary" /> 对象与所提供的对象进行比较，并返回其相对值的指示值。</summary>
      <returns>有符号的数，指示此 OracleBinary 结构和对象的相对值。 返回值 Condition 小于零 此 OracleBinary 对象的值小于该对象。 零 此 OracleBinary 对象与该对象相同。 大于零 此 OracleBinary 对象大于该对象。 - 或 - 对象为 null 引用。</returns>
      <param name="obj">要与此 OracleBinary 结构比较的对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.Concat(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>串联两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构以创建一个新 OracleBinary 结构。</summary>
      <returns>一个具有 <paramref name="x" /> 和 <paramref name="y" /> 参数的串联值的 OracleBinary 结构。</returns>
      <param name="x">一个 OracleBinary 结构。</param>
      <param name="y">一个 OracleBinary 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.Equals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构进行比较，以确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 OracleBinary 的任一实例为空，则 OracleBoolean 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 OracleBinary 结构。</param>
      <param name="y">一个 OracleBinary 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.Equals(System.Object)">
      <summary>将提供的对象参数与 <see cref="T:System.Data.OracleClient.OracleBinary" /> 对象的 <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> 属性进行比较。</summary>
      <returns>如果对象是 <see cref="T:System.Data.OracleClient.OracleBinary" /> 的实例并且两者相等，则为 true；否则为 false。</returns>
      <param name="value">要比较的对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.GetHashCode">
      <summary>返回此 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构的哈希代码。</summary>
      <returns>32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构进行比较，以确定第一个结构是否大于第二个结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 OracleBinary 的任一实例为空，则 OracleBoolean 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 OracleBinary 结构。</param>
      <param name="y">一个 OracleBinary 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构进行比较，以确定第一个结构是否大于或等于第二个结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 OracleBinary 的任一实例为空，则 OracleBoolean 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 OracleBinary 结构。</param>
      <param name="y">一个 OracleBinary 结构。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleBinary.IsNull">
      <summary>获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构的 <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> 属性是否为 null。</summary>
      <returns>如果 Value 为空，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBinary.Item(System.Int32)">
      <summary>从 Value 属性获取单字节，该属性位于整数参数 <paramref name="index" /> 指示的位置。 如果 <paramref name="index" /> 指示一个超出字节数组结尾的位置，则会引发一个异常。</summary>
      <returns>位于整数参数指示的位置的字节。</returns>
      <param name="index">要检索的字节的位置。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleBinary.Length">
      <summary>获取 <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> 属性的长度（以字节为单位）。 此属性是只读的。</summary>
      <returns>Value 属性中的二进制数据的长度。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构进行比较，以确定第一个结构是否小于第二个结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 OracleBinary 的任一实例为空，则 OracleBoolean 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 OracleBinary 结构。</param>
      <param name="y">一个 OracleBinary 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构进行比较，以确定第一个结构是否小于或等于第二个结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 OracleBinary 的任一实例为空，则 OracleBoolean 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 OracleBinary 结构。</param>
      <param name="y">一个 OracleBinary 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.NotEquals(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构进行比较，确定它们是否不相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 OracleBinary 的任一实例为空，则 OracleBoolean 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 OracleBinary 结构。</param>
      <param name="y">一个 OracleBinary 结构。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleBinary.Null">
      <summary>表示可分配给 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构的 <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> 属性的空值。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_Addition(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>串连两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 参数以创建一个新 OracleBinary 结构。</summary>
      <returns>
        <paramref name="x" /> 和 <paramref name="y" /> 参数的串联值。</returns>
      <param name="x">OracleBinary 对象。</param>
      <param name="y">OracleBinary 对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_Equality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构进行比较，以确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 OracleBinary 的任一实例为空，则 OracleBoolean 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">OracleBinary 对象。</param>
      <param name="y">OracleBinary 对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_Explicit(System.Data.OracleClient.OracleBinary)~System.Byte[]">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleBinary" /> 参数的 <see cref="P:System.Data.OracleClient.OracleBinary.Value" /> 属性的内容作为字节数组。</summary>
      <returns>字节数组。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleBinary" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_GreaterThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构进行比较，以确定第一个结构是否大于第二个结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 OracleBinary 的任一实例为空，则 OracleBoolean 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">OracleBinary 对象。</param>
      <param name="y">OracleBinary 对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_GreaterThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构进行比较，以确定第一个结构是否大于或等于第二个结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 OracleBinary 的任一实例为空，则 OracleBoolean 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">OracleBinary 对象。</param>
      <param name="y">OracleBinary 对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_Implicit(System.Byte[])~System.Data.OracleClient.OracleBinary">
      <summary>将字节数组转换为 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构。</summary>
      <returns>一个 OracleBinary 结构，它表示已转换的字节数组。</returns>
      <param name="b">要转换的字节数组。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_Inequality(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构进行比较，以确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 OracleBinary 的任一实例为空，则 OracleBoolean 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">OracleBinary 对象。</param>
      <param name="y">OracleBinary 对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_LessThan(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构进行比较，以确定第一个结构是否小于第二个结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 OracleBinary 的任一实例为空，则 OracleBoolean 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">OracleBinary 对象。</param>
      <param name="y">OracleBinary 对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBinary.op_LessThanOrEqual(System.Data.OracleClient.OracleBinary,System.Data.OracleClient.OracleBinary)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构进行比较，以确定第一个结构是否小于或等于第二个结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 OracleBinary 的任一实例为空，则 OracleBoolean 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">OracleBinary 对象。</param>
      <param name="y">OracleBinary 对象。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleBinary.Value">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleBinary" /> 结构的值。 此属性是只读的。</summary>
      <returns>OracleBinary 结构的值。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleBoolean">
      <summary>表示在 Oracle 数据类型之间进行数据库比较操作所返回的值，并公开用于执行数据类型转换的方法。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.#ctor(System.Boolean)">
      <summary>使用指定的 Boolean 初始化 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构的新实例。</summary>
      <param name="value">将用作 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构初始值的 Boolean。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.#ctor(System.Int32)">
      <summary>使用指定的整数初始化 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构的新实例。</summary>
      <param name="value">将用作 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构初始值的 integer。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.And(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>对两个指定的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构执行按位 AND 运算。</summary>
      <returns>下表显示了逻辑 AND 运算的结果。 <paramref name="x" /> 的值 <paramref name="y" /> 的值 结果 true true true true false false false false false true unknown unknown false unknown false unknown unknown unknown</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.CompareTo(System.Object)">
      <summary>将此 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构与指定对象进行比较，并返回它们的相对值指示。</summary>
      <returns>有符号数字，指示此实例和值的相对值。 值 描述 负整数 此实例小于 <paramref name="value" />。 零 此实例等于 <paramref name="value" />。 正整数 此实例大于 <paramref name="value" />。 - 或 - <paramref name="value" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="obj">要比较的对象，或 null 引用（在 Visual Basic 中为 Nothing）。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.Equals(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构进行比较，以确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.Equals(System.Object)">
      <summary>将提供的对象参数与 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 比较。</summary>
      <returns>如果对象是 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的实例并且两者相等，则为 true；否则为 false。</returns>
      <param name="value">要比较的对象。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleBoolean.False">
      <summary>表示可分配给 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构实例的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 属性的“假”值。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.GetHashCode">
      <summary>返回此实例的哈希代码。</summary>
      <returns>32 位有符号整数哈希代码。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBoolean.IsFalse">
      <summary>指示当前 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 是否为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。</summary>
      <returns>如果 Value 为 False，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBoolean.IsNull">
      <summary>指示 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构的值是否为 null。</summary>
      <returns>如果结构的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 值为空，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleBoolean.IsTrue">
      <summary>指示当前 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 是否为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />。</summary>
      <returns>如果 Value 为 True，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.NotEquals(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的两个实例进行比较，确定它们是否不相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleBoolean.Null">
      <summary>表示可分配给 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构实例的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 属性的空值。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleBoolean.One">
      <summary>表示可分配给 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构实例的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 属性的一个值。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.OnesComplement(System.Data.OracleClient.OracleBoolean)">
      <summary>在提供的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构上执行对 one 的求补运算。</summary>
      <returns>所提供的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 one 的补码。 如果 Boolean 含有空值，结果也将为空值。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_BitwiseAnd(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>对两个指定的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构执行按位 AND 运算。</summary>
      <returns>下表显示了逻辑 AND 运算的结果。 <paramref name="x" /> 的值 <paramref name="y" /> 的值 结果 true true true true false false false false false true unknown unknown false unknown unknown unknown unknown unknown</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_BitwiseOr(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>对其两个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 操作数执行按位“或”计算。</summary>
      <returns>下表显示了按位“或”运算的结果。 <paramref name="x" /> 的值 <paramref name="y" /> 的值 结果 true true true true false true false false false true unknown true false unknown unknown unknown unknown unknown</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_Equality(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>比较 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的两个实例是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_ExclusiveOr(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>对提供的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 参数执行按位“异或”运算。</summary>
      <returns>下表显示了按位“异或”运算的结果。 <paramref name="x" /> 的值 <paramref name="y" /> 的值 结果 true true false true false true false false false true unknown unknown false unknown unknown unknown unknown unknown</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_Explicit(System.Data.OracleClient.OracleBoolean)~System.Boolean">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 转换为 Boolean。</summary>
      <returns>Boolean，它设置为 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" />。</returns>
      <param name="x">要转换的 <see cref="T:System.Data.OracleClient.OracleBoolean" />。</param>
      <exception cref="T:System.NullReferenceException">
        <see cref="T:System.Data.OracleClient.OracleBoolean" /> 含有空值。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_Explicit(System.Data.OracleClient.OracleNumber)~System.Data.OracleClient.OracleBoolean">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数转换为 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</summary>
      <returns>新的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构，它的值等于 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性。</returns>
      <param name="x">一个将要转换为 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构的 <see cref="T:System.Data.OracleClient.OracleNumber" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_Explicit(System.String)~System.Data.OracleClient.OracleBoolean">
      <summary>将字符串转换为 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</summary>
      <returns>一个新 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构，它的值等于 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" />。</returns>
      <param name="x">一个要转换为 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构的字符串。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_False(System.Data.OracleClient.OracleBoolean)">
      <summary>用于测试 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" />，以确定其是否为 false。</summary>
      <returns>如果所提供的参数 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 为 false，则为 true；否则为 false。</returns>
      <param name="x">要测试的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_Implicit(System.Boolean)~System.Data.OracleClient.OracleBoolean">
      <summary>将 Boolean 值转换为 <see cref="T:System.Data.OracleClient.OracleBoolean" />。</summary>
      <returns>一个包含 0 或 1 的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 值。</returns>
      <param name="x">要转换为 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 Boolean 值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_Inequality(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>比较 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的两个实例是否不相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_LogicalNot(System.Data.OracleClient.OracleBoolean)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 执行 NOT 运算。</summary>
      <returns>如果参数为 true，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；如果参数为空，则为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />；其他情况为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。</returns>
      <param name="x">要对其执行“非”运算的 <see cref="T:System.Data.OracleClient.OracleBoolean" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_OnesComplement(System.Data.OracleClient.OracleBoolean)">
      <summary>在指定的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 上执行对一个值的求补运算。</summary>
      <returns>指定的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 上的一个值的补码。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.op_True(System.Data.OracleClient.OracleBoolean)">
      <summary>用于测试 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 的 <see cref="T:System.Data.OracleClient.OracleBoolean" />，以确定其是否为 true。</summary>
      <returns>如果所提供的参数 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 为 true，则为 true；否则为 false。</returns>
      <param name="x">要测试的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.Or(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>对两个指定的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构执行按位“或”运算。</summary>
      <returns>下表显示了按位“或”运算的结果。 <paramref name="x" /> 的值 <paramref name="y" /> 的值 结果 true true true true false true false false false true unknown true false unknown unknown unknown unknown unknown</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.Parse(System.String)">
      <summary>将逻辑值的指定 <see cref="T:System.String" /> 表示形式转换为它的等效 <see cref="T:System.Data.OracleClient.OracleBoolean" />。</summary>
      <returns>一个包含已分析值的 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</returns>
      <param name="s">要转换的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.ToString">
      <summary>将当前的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 转换为字符串。</summary>
      <returns>一个字符串，它包含 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的值。 如果该值为空，字符串将包含空值。</returns>
    </member>
    <member name="F:System.Data.OracleClient.OracleBoolean.True">
      <summary>表示可分配给 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构实例的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 属性的“真”值。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleBoolean.Value">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构的值。 此属性是只读的。</summary>
      <returns>如果 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleBoolean.Xor(System.Data.OracleClient.OracleBoolean,System.Data.OracleClient.OracleBoolean)">
      <summary>对提供的参数执行按位“异或”运算。</summary>
      <returns>下表显示了逻辑 XOR 运算的结果。 <paramref name="x" /> 的值 <paramref name="y" /> 的值 结果 true true false true false true false false false true unknown unknown false unknown unknown unknown unknown unknown</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleBoolean.Zero">
      <summary>表示可分配给 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 结构实例的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 属性的零值。</summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleClientFactory">
      <summary>表示一组方法，这些方法用于创建 Oracle 提供程序的数据源类实现的实例。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleClientFactory.CreateCommand">
      <summary>返回强类型的 <see cref="T:System.Data.Common.DbCommand" /> 实例。</summary>
      <returns>
        <see cref="T:System.Data.Common.DbCommand" /> 的新强类型实例。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleClientFactory.CreateCommandBuilder">
      <summary>返回强类型的 <see cref="T:System.Data.Common.DbCommandBuilder" /> 实例。</summary>
      <returns>新的强类型 <see cref="T:System.Data.Common.DbCommandBuilder" /> 实例。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleClientFactory.CreateConnection">
      <summary>返回强类型的 <see cref="T:System.Data.Common.DbConnection" /> 实例。</summary>
      <returns>新的强类型 <see cref="T:System.Data.Common.DbConnection" /> 实例。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleClientFactory.CreateConnectionStringBuilder">
      <summary>返回强类型的 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 实例。</summary>
      <returns>新的强类型 <see cref="T:System.Data.Common.DbConnectionStringBuilder" /> 实例。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleClientFactory.CreateDataAdapter">
      <summary>返回强类型的 <see cref="T:System.Data.Common.DbDataAdapter" /> 实例。</summary>
      <returns>新的强类型 <see cref="T:System.Data.Common.DbDataAdapter" /> 实例。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleClientFactory.CreateParameter">
      <summary>返回强类型的 <see cref="T:System.Data.Common.DbParameter" /> 实例。</summary>
      <returns>
        <see cref="T:System.Data.Common.DbParameter" /> 的新强类型实例。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleClientFactory.CreatePermission(System.Security.Permissions.PermissionState)">
      <summary>返回强类型的 <see cref="T:System.Security.CodeAccessPermission" /> 实例。</summary>
      <returns>
        <see cref="T:System.Security.CodeAccessPermission" /> 的强类型实例。</returns>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 枚举的成员。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleClientFactory.Instance">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleClientFactory" /> 的实例，该实例可用于检索强类型的数据对象。</summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleCommand">
      <summary>表示针对数据库执行的 SQL 语句或存储过程。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.#ctor">
      <summary>初始化 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的新实例。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.#ctor(System.String)">
      <summary>用查询文本初始化 <see cref="T:System.Data.OracleClient.OracleCommand" /> 类的新实例。</summary>
      <param name="commandText">查询的文本。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)">
      <summary>用查询文本和 <see cref="T:System.Data.OracleClient.OracleConnection" /> 对象初始化 <see cref="T:System.Data.OracleClient.OracleCommand" /> 类的新实例。</summary>
      <param name="commandText">查询的文本。</param>
      <param name="connection">一个 <see cref="T:System.Data.OracleClient.OracleConnection" /> 对象，它表示与数据库的连接。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)">
      <summary>用查询文本、<see cref="T:System.Data.OracleClient.OracleConnection" /> 对象以及 <see cref="T:System.Data.OracleClient.OracleTransaction" /> 初始化 <see cref="T:System.Data.OracleClient.OracleCommand" /> 类的新实例。</summary>
      <param name="commandText">查询的文本。</param>
      <param name="connection">一个 <see cref="T:System.Data.OracleClient.OracleConnection" /> 对象，它表示与数据库的连接。</param>
      <param name="tx">将在其中执行 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的 <see cref="T:System.Data.OracleClient.OracleTransaction" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.Cancel">
      <summary>尝试取消执行 <see cref="T:System.Data.OracleClient.OracleCommand" />。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.Clone">
      <summary>创建此 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象的一个副本。</summary>
      <returns>一个新的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象，其中所有的属性值都与原始值相同。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.CommandText">
      <summary>获取或设置针对数据库执行的 SQL 语句或存储过程。</summary>
      <returns>要执行的 SQL 语句或存储过程。 默认值为空字符串 ("")。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.CommandTimeout">
      <summary>获取或设置在终止执行命令的尝试并生成错误之前的等待时间。</summary>
      <returns>等待命令执行的时间（以秒为单位）。 默认值为 30 秒。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.CommandType">
      <summary>获取或设置一个指示如何解释 <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> 属性的值。</summary>
      <returns>
        <see cref="T:System.Data.CommandType" /> 值之一。 默认值为 Text。</returns>
      <exception cref="T:System.ArgumentException">该值不是有效的 <see cref="T:System.Data.CommandType" />。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.Connection">
      <summary>获取或设置 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的此实例使用的 <see cref="T:System.Data.OracleClient.OracleConnection" />。</summary>
      <returns>与数据源的连接。 默认为空值。</returns>
      <exception cref="T:System.InvalidOperationException">在事务进行过程中更改了 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 属性。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.CreateParameter">
      <summary>创建 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象的新实例。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.DesignTimeVisible">
      <summary>获取或设置一个值，该值指示此命令对象在自定义界面控件中是否可见。</summary>
      <returns>如果该命令对象应在控件中可见，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.ExecuteNonQuery">
      <summary>针对 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 执行 SQL 语句并返回受影响的行数。</summary>
      <returns>对于 UPDATE、INSERT 和 DELETE 语句，返回值为该命令所影响的行数。 对于 CREATE TABLE 和 DROP TABLE 语句，返回值为 0。 对于其他所有类型的语句，返回值为 -1。</returns>
      <exception cref="T:System.InvalidOperationException">连接不存在。 - 或 - 连接未打开。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)">
      <summary>针对 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 执行 SQL 语句并返回受影响的行数。</summary>
      <returns>对于 UPDATE、INSERT 和 DELETE 语句，返回值为该命令所影响的行数。 对于 CREATE TABLE 和 DROP TABLE 语句，返回值为 0。 对于其他所有类型的语句，返回值为 -1。</returns>
      <param name="rowid">服务器中实际行 ID 的 base64 字符串表示形式。</param>
      <exception cref="T:System.InvalidOperationException">连接不存在。 - 或 - 连接未打开。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar">
      <summary>执行查询，并将查询返回的结果集中第一行的第一列作为 Oracle 特定的数据类型返回。 忽略额外的列或行。</summary>
      <returns>结果中第一行的第一列会被设置为特定于 Oracle 的数据类型，或者，如果结果为 REF CURSOR，则为 null 引用。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.ExecuteReader">
      <summary>将 <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> 发送到 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 并生成一个 <see cref="T:System.Data.OracleClient.OracleDataReader" />。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OracleDataReader" /> 对象。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>将 <see cref="P:System.Data.OracleClient.OracleCommand.CommandText" /> 发送到 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />，并使用 <see cref="T:System.Data.CommandBehavior" /> 值之一构造 <see cref="T:System.Data.OracleClient.OracleDataReader" />。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OracleDataReader" /> 对象。</returns>
      <param name="behavior">
        <see cref="T:System.Data.CommandBehavior" /> 值之一。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.ExecuteScalar">
      <summary>执行查询，并将查询返回的结果集中第一行的第一列作为 .NET Framework 数据类型返回。 忽略额外的列或行。</summary>
      <returns>.NET Framework 数据类型形式的结果集第一行的第一列；如果结果集为空或结果为 REF CURSOR，则为 null 引用。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.Parameters">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleParameterCollection" />。</summary>
      <returns>SQL 语句或存储过程的参数。 默认值为空集合。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.Prepare">
      <summary>在数据源中创建命令的准备好的（即已编译的）版本。</summary>
      <exception cref="T:System.InvalidOperationException">未设置 <see cref="P:System.Data.OracleClient.OracleCommand.Connection" />。 - 或 - <see cref="P:System.Data.OracleClient.OracleCommand.Connection" /> 不为<see cref="M:System.Data.OracleClient.OracleConnection.Open" />。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommand.ResetCommandTimeout">
      <summary>将 <see cref="P:System.Data.OracleClient.OracleCommand.CommandTimeout" /> 属性重置为默认值。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.Transaction">
      <summary>获取或设置将在其中执行 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的 <see cref="T:System.Data.OracleClient.OracleTransaction" />。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleTransaction" />。 默认为空值。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommand.UpdatedRowSource">
      <summary>获取或设置一个值，该值指定 Update 方法如何将命令结果应用到 <see cref="T:System.Data.DataRow" />。</summary>
      <returns>
        <see cref="T:System.Data.UpdateRowSource" /> 值之一。</returns>
      <exception cref="T:System.ArgumentException">输入的值不是 <see cref="T:System.Data.UpdateRowSource" /> 值之一。</exception>
    </member>
    <member name="T:System.Data.OracleClient.OracleCommandBuilder">
      <summary>自动生成用于协调 <see cref="T:System.Data.DataSet" /> 的更改与关联数据库的单表命令。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.#ctor">
      <summary>初始化 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 的新实例。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.#ctor(System.Data.OracleClient.OracleDataAdapter)">
      <summary>使用关联的 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 对象初始化 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 类的新实例。</summary>
      <param name="adapter">与此 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 关联的 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 对象。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommandBuilder.CatalogLocation">
      <summary>对于 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类的实例，设置或获取 <see cref="T:System.Data.Common.CatalogLocation" />。</summary>
      <returns>
        <see cref="T:System.Data.Common.CatalogLocation" /> 对象。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommandBuilder.CatalogSeparator">
      <summary>设置或获取一个字符串，该字符串用作 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类的实例的目录分隔符。</summary>
      <returns>一个字符串，指示用于 <see cref="T:System.Data.Common.DbCommandBuilder" /> 类的实例的目录分隔符。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommandBuilder.DataAdapter">
      <summary>获取或设置此 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 对象将为其生成 SQL 语句的 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 对象。</summary>
      <returns>与此 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 关联的 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 对象。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.DeriveParameters(System.Data.OracleClient.OracleCommand)">
      <summary>从在 <see cref="T:System.Data.OracleClient.OracleCommand" /> 中指定的存储过程中检索参数信息并填充指定的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象的 <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> 集合。</summary>
      <param name="command">引用将从其中导出参数信息的存储过程的 <see cref="T:System.Data.OracleClient.OracleCommand" />。 将派生参数添加到 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的 <see cref="P:System.Data.OracleClient.OracleCommand.Parameters" /> 集合中。</param>
      <exception cref="T:System.InvalidOperationException">命令文本是无效的存储过程名称，或指定的 <see cref="T:System.Data.CommandType" /> 不是 <see cref="F:System.Data.CommandType.StoredProcedure" />。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand">
      <summary>获取自动生成的、对数据库执行删除操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
      <returns>自动生成的、执行删除操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary>获取自动生成的、对数据库执行删除操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
      <returns>自动生成的、执行删除操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</returns>
      <param name="useColumnsForParameterNames">如果为 true，则生成与列名匹配的参数名（如果可能）。 如果为 false，则生成 @p1、@p2，依此类推。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand">
      <summary>获取自动生成的、对数据库执行插入操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
      <returns>自动生成的、执行插入操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary>获取自动生成的、对数据库执行插入操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
      <returns>自动生成的、执行插入操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</returns>
      <param name="useColumnsForParameterNames">如果为 true，则生成与列名匹配的参数名（如果可能）。 如果为 false，则生成 @p1、@p2，依此类推。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand">
      <summary>获取自动生成的、对数据库执行更新操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
      <returns>自动生成的、执行更新所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary>获取自动生成的、对数据库执行更新操作所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
      <returns>自动生成的、执行更新所需的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</returns>
      <param name="useColumnsForParameterNames">如果为 true，则生成与列名匹配的参数名（如果可能）。 如果为 false，则生成 @p1、@p2，依此类推。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.QuoteIdentifier(System.String)">
      <summary>以正确的目录大小写给定一个不带引号的标识符，返回该标识符的带引号的正确形式，包括正确转义该标识符中嵌入的任何引号。</summary>
      <returns>带引号的标识符版本。 该标识符中嵌入的引号已正确转义。</returns>
      <param name="unquotedIdentifier">不带引号的原始标识符。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleCommandBuilder.SchemaSeparator">
      <summary>获取或设置要用作架构标识符和任何其他标识符之间的分隔符的字符。</summary>
      <returns>要用作架构分隔符的字符。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>给定一个带引号的标识符，返回该标识符的不带引号的正确形式，包括正确地取消转义该标识符中嵌入的任何引号。</summary>
      <returns>不带引号的标识符，其中嵌入的引号已正确进行取消转义。</returns>
      <param name="quotedIdentifier">其嵌入引号将被移除的标识符。</param>
    </member>
    <member name="T:System.Data.OracleClient.OracleConnection">
      <summary>表示一个到数据库的打开的连接。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.#ctor">
      <summary>初始化 <see cref="T:System.Data.OracleClient.OracleConnection" /> 的新实例。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.#ctor(System.String)">
      <summary>使用指定的连接字符串初始化 <see cref="T:System.Data.OracleClient.OracleConnection" /> 类的新实例。</summary>
      <param name="connectionString">用于打开数据库的连接。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.BeginTransaction">
      <summary>在数据库中开始一个事务。</summary>
      <returns>表示新事务的对象。</returns>
      <exception cref="T:System.InvalidOperationException">不支持并行事务。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>使用指定的 <see cref="T:System.Data.IsolationLevel" /> 值在数据库中开始一个事务。</summary>
      <returns>表示新事务的对象。</returns>
      <param name="il">该连接的事务隔离级别。</param>
      <exception cref="T:System.InvalidOperationException">不支持并行事务。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)">
      <summary>为打开的 <see cref="T:System.Data.OracleClient.OracleConnection" /> 更改当前数据库。</summary>
      <param name="value">要代替当前数据库加以使用的数据库的名称。</param>
      <exception cref="T:System.ArgumentException">数据库名称无效。</exception>
      <exception cref="T:System.InvalidOperationException">连接未打开。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">不能更改数据库。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.ClearAllPools">
      <summary>清空连接池。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)">
      <summary>清空与指定连接关联的连接池。</summary>
      <param name="connection">要从池中清除的 <see cref="T:System.Data.OracleClient.OracleConnection" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.Close">
      <summary>关闭与数据库的连接。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnection.ConnectionString">
      <summary>获取或设置用于打开 Oracle 数据库的字符串。</summary>
      <returns>包含设置（如服务器名称等）的 Oracle 连接字符串需要建立初始连接。 默认值为空字符串 ("")。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnection.ConnectionTimeout">
      <summary>获取在建立连接时终止尝试并生成错误之前所等待的时间。</summary>
      <returns>等待连接打开的时间（以秒为单位）。 默认值为 15 秒。</returns>
      <exception cref="T:System.ArgumentException">指定的值小于 0。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.CreateCommand">
      <summary>创建并返回一个与该 <see cref="T:System.Data.OracleClient.OracleConnection" /> 关联的 <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OracleCommand" /> 对象。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnection.Database">
      <summary>获取当前数据库或连接打开后要使用的数据库的名称。</summary>
      <returns>当前数据库的名称或连接打开后要使用的数据库的名称。 默认值为空字符串。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnection.DataSource">
      <summary>获取要连接的 Oracle 服务器的名称。</summary>
      <returns>要连接的 Oracle 服务器的名称。 默认值为空字符串 ("")。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
      <summary>在指定的事务中登记为分布式事务。</summary>
      <param name="distributedTransaction">对用于登记的现有 <see cref="T:System.EnterpriseServices.ITransaction" /> 的引用。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>在指定的事务中登记为分布式事务。</summary>
      <param name="transaction">对用于登记的现有 <see cref="T:System.Transactions.Transaction" /> 的引用。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.GetSchema">
      <summary>返回此 <see cref="T:System.Data.OracleClient.OracleConnection" /> 的数据源的架构信息。</summary>
      <returns>包含架构信息的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String)">
      <summary>使用表示架构名称的指定字符串返回此 <see cref="T:System.Data.OracleClient.OracleConnection" /> 的数据源的架构信息。</summary>
      <returns>包含架构信息的 <see cref="T:System.Data.DataTable" />。</returns>
      <param name="collectionName">指定要返回的架构的名称。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> 被指定为空。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])">
      <summary>使用表示架构名称的指定字符串以及表示限制值的指定字符串数组返回此 <see cref="T:System.Data.OracleClient.OracleConnection" /> 的数据源的架构信息。</summary>
      <returns>包含架构信息的 <see cref="T:System.Data.DataTable" />。</returns>
      <param name="collectionName">指定要返回的架构的名称。</param>
      <param name="restrictionValues">请求的架构的一组限制值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="collectionName" /> 被指定为空。</exception>
    </member>
    <member name="E:System.Data.OracleClient.OracleConnection.InfoMessage">
      <summary>当 Oracle 发送警告或信息性消息时发生。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.Open">
      <summary>使用 <see cref="P:System.Data.OracleClient.OracleConnection.ConnectionString" /> 指定的属性设置打开一个到数据库的连接。</summary>
      <exception cref="T:System.InvalidOperationException">连接未打开。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">不能更改数据库。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnection.ServerVersion">
      <summary>获取包含客户端所连接到的服务器的版本的字符串。</summary>
      <returns>连接的服务器的版本。</returns>
      <exception cref="T:System.InvalidOperationException">连接处于关闭状态。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnection.State">
      <summary>获取连接的当前状态。</summary>
      <returns>
        <see cref="T:System.Data.ConnectionState" /> 值的按位组合。 默认值为 Closed。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnection.System#ICloneable#Clone">
      <summary>创建作为当前实例副本的新对象。</summary>
      <returns>作为此实例副本的新对象。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleConnectionStringBuilder">
      <summary>为创建和管理连接字符串（由 <see cref="T:System.Data.OracleClient.OracleConnection" /> 类使用）的内容提供了一种简单方法。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnectionStringBuilder.#ctor">
      <summary>初始化 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnectionStringBuilder.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 类的新实例。 所提供的连接字符串为实例的内部连接信息提供数据。</summary>
      <param name="connectionString">对象内部连接信息的基础。 分析为名称/值对。 无效的键名将引发 <see cref="T:System.Collections.Generic.KeyNotFoundException" />。</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">连接字符串中的键名无效。</exception>
      <exception cref="T:System.FormatException">连接字符串中的值无效（特别是需要布尔值或数值型值而并未提供时）。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnectionStringBuilder.Clear">
      <summary>清除 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 实例的内容。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnectionStringBuilder.ContainsKey(System.String)">
      <summary>确定 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 是否包含特定键。</summary>
      <returns>如果 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 包含具有指定键的元素，则为 true；否则为 false。</returns>
      <param name="keyword">要在 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中定位的键。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> 为 null（在 Visual Basic 中为 Nothing）</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.DataSource">
      <summary>获取或设置要连接到的 Oracle 数据源的名称。</summary>
      <returns>
        <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.DataSource" /> 属性的值；或如果未提供任何值，则为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.Enlist">
      <summary>获取或设置一个值，该值指示池程序是否在创建线程的当前事务上下文中自动登记连接。</summary>
      <returns>
        <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.Enlist" /> 属性的值；如果以前未设置该属性，则为 true。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.IntegratedSecurity">
      <summary>获取或设置一个值，该值指示连接中是否指定了“User ID”和“Password”（当为 false 时），或者是否使用当前的 Windows 帐户凭据进行身份验证（当为 true 时）。</summary>
      <returns>
        <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.IntegratedSecurity" /> 属性的值；如果未提供任何值，则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.IsFixedSize">
      <summary>获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 的大小是否是固定的。</summary>
      <returns>任何情况下都为 true，因为 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 提供固定大小的键/值对集合。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.Item(System.String)">
      <summary>获取或设置与指定的键相关联的值。 在 C# 中，此属性为索引器。</summary>
      <returns>与指定的键相关联的值。</returns>
      <param name="keyword">要获取或设置的项的键。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">尝试添加可用键中不存在的键。</exception>
      <exception cref="T:System.FormatException">连接字符串中的值无效（特别是需要布尔值或数值型值而并未提供时）。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.Keys">
      <summary>获取一个 <see cref="T:System.Collections.ICollection" />，它包含 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中的键。</summary>
      <returns>一个 <see cref="T:System.Collections.ICollection" />，它包含 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中的键。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.LoadBalanceTimeout">
      <summary>获取或设置连接被移除之前在连接池中的最短存活时间（以秒为单位）。</summary>
      <returns>
        <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.LoadBalanceTimeout" /> 属性的值；或如果未提供任何值，则为 0。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.MaxPoolSize">
      <summary>获取或设置针对此特定连接字符串连接池中所允许的最大连接数。</summary>
      <returns>
        <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.MaxPoolSize" /> 属性的值；或者，如果未提供任何值，则为 100。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.MinPoolSize">
      <summary>获取或设置针对此特定连接字符串连接池中所允许的最小连接数。</summary>
      <returns>
        <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.MinPoolSize" /> 属性的值；或者，如果未提供任何值，则为 0。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.OmitOracleConnectionName">
      <summary>获取或设置启用 Oracle 早期版本（8.1.7.4.1 以前的版本）中的事务回滚的标志。</summary>
      <returns>如果启用了事务回滚，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.Password">
      <summary>获取或设置 Oracle 帐户的密码。</summary>
      <returns>
        <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.Password" /> 属性的值；或如果未提供任何值，则为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.PersistSecurityInfo">
      <summary>获取或设置一个布尔值，该值指示如果连接是打开的或者一直处于打开状态，那么安全敏感信息（如密码）是否将不作为连接的一部分返回。</summary>
      <returns>
        <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.PersistSecurityInfo" /> 属性的值；或者，如果未提供任何值，则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.Pooling">
      <summary>获取或设置一个布尔值，该值指示连接是否加入池中，或者在每次请求连接时，每个连接是否被显式打开。</summary>
      <returns>
        <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.Pooling" /> 属性的值；或如果未提供任何值，则为 true 。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnectionStringBuilder.Remove(System.String)">
      <summary>移除 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 实例中具有指定键的项。</summary>
      <returns>如果该键原本存在于连接字符串中但被移除，则为 true；如果连接字符串中不存在该键，则为 false。</returns>
      <param name="keyword">要从此 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中的连接字符串移除的键/值对中的键。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyword" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>指示此 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 实例中是否存在指定的键。</summary>
      <returns>如果 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 包含带有指定键的项，则为 true；否则为 false。</returns>
      <param name="keyword">要在 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中定位的键。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>从此 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中检索与所提供的键对应的值。</summary>
      <returns>如果在连接字符串中找到 <paramref name="keyword" />，则为 true；否则为 false。</returns>
      <param name="keyword">要检索的项的键。</param>
      <param name="value">与 <paramref name="keyword." /> 对应的值</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.Unicode">
      <summary>获取或设置一个布尔值，该值指示客户端是否支持较高版本的 Oracle 客户端中可用的 Unicode 功能，或者该客户端是否可以识别非 Unicode。</summary>
      <returns>
        <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.Unicode" /> 属性的值；或如果未提供任何值，则为 false 。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.UserID">
      <summary>获取或设置在连接到 Oracle 时要使用的用户 ID。</summary>
      <returns>
        <see cref="P:System.Data.OracleClient.OracleConnectionStringBuilder.UserID" /> 属性的值；或如果未提供任何值，则为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleConnectionStringBuilder.Values">
      <summary>获取包含 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中的值的 <see cref="T:System.Collections.ICollection" />。</summary>
      <returns>一个 <see cref="T:System.Collections.ICollection" />，它包含 <see cref="T:System.Data.OracleClient.OracleConnectionStringBuilder" /> 中的值。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleDataAdapter">
      <summary>表示用于填充 <see cref="T:System.Data.DataSet" /> 和更新数据库的一组数据命令和一个数据库连接。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataAdapter.#ctor">
      <summary>初始化 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataAdapter.#ctor(System.Data.OracleClient.OracleCommand)">
      <summary>用指定的 SQL SELECT 语句初始化 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 类的新实例。</summary>
      <param name="selectCommand">
        <see cref="T:System.Data.OracleClient.OracleCommand" />，它是一个 SQL SELECT 语句或存储过程，被设置为 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 的 <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> 属性。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.Data.OracleClient.OracleConnection)">
      <summary>用一个 SQL SELECT 语句和一个 <see cref="T:System.Data.OracleClient.OracleConnection" /> 初始化 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 类的新实例。</summary>
      <param name="selectCommandText">一个字符串，它是 SQL SELECT 语句或将由 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 的 <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> 属性使用的存储过程。</param>
      <param name="selectConnection">表示连接的 <see cref="T:System.Data.OracleClient.OracleConnection" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataAdapter.#ctor(System.String,System.String)">
      <summary>使用 SQL SELECT 语句和连接字符串初始化 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 类的新实例。</summary>
      <param name="selectCommandText">一个字符串，它是 SQL SELECT 语句或将由 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 的 <see cref="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand" /> 属性使用的存储过程。</param>
      <param name="selectConnectionString">连接字符串。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.DeleteCommand">
      <summary>获取或设置用于在数据库中删除记录的 SQL 语句或存储过程。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OracleCommand" />，在更新操作过程中使用，用于在数据库中删除与 DataSet 中的已删除行对应的记录。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.InsertCommand">
      <summary>获取或设置用于将新记录插入到数据库中的 SQL 语句或存储过程。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OracleCommand" />，在更新操作中使用，用于将与 <see cref="T:System.Data.DataSet" /> 中的新行对应的记录插入数据库。</returns>
    </member>
    <member name="E:System.Data.OracleClient.OracleDataAdapter.RowUpdated">
      <summary>在对数据库执行命令后的更新操作过程中发生。</summary>
    </member>
    <member name="E:System.Data.OracleClient.OracleDataAdapter.RowUpdating">
      <summary>在对数据源执行命令前的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 过程中发生。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.SelectCommand">
      <summary>获取或设置用于在数据库中选择记录的 SQL 语句或存储过程。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OracleCommand" />，在填充操作过程中使用，用于从数据库选择记录，以便放置在 <see cref="T:System.Data.DataSet" /> 中。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Data.IDbDataAdapter.DeleteCommand" />。</summary>
      <returns>表示命令的字符串。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Data.IDbDataAdapter.InsertCommand" />。</summary>
      <returns>表示命令的字符串。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Data.IDbDataAdapter.SelectCommand" />。</summary>
      <returns>表示命令的字符串。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Data.IDbDataAdapter.UpdateCommand" />。</summary>
      <returns>表示命令的字符串。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataAdapter.System#ICloneable#Clone">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ICloneable.Clone" />。</summary>
      <returns>作为此实例副本的新对象。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize">
      <summary>获取或设置一个值，该值启用或禁用批处理支持，并且指定可在一次批处理中执行的命令的数量。</summary>
      <returns>每个批处理要处理的行数。 值： 效果： 0批大小没有限制。 1禁用批量更新。 &gt; 1 使用 <see cref="P:System.Data.OracleClient.OracleDataAdapter.UpdateBatchSize" /> 操作的批处理一次性发送更改。 将此值设置为除 1 以外的值时，所有与 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 关联的命令都必须将其 <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> 属性设置为 None 或 OutputParameters。 否则将引发异常。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataAdapter.UpdateCommand">
      <summary>获取或设置用于在数据库中更新记录的 SQL 语句或存储过程。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OracleCommand" />，在更新操作过程中使用，用于在数据库中更新与 <see cref="T:System.Data.DataSet" /> 中修改的行对应的记录。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleDataReader">
      <summary>提供从数据源读取数据行的只进流的方法。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.Close">
      <summary>关闭 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 对象。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataReader.Depth">
      <summary>获取一个值，该值指示当前行的嵌套深度。</summary>
      <returns>当前行的嵌套深度。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataReader.FieldCount">
      <summary>获取当前行中的列数。</summary>
      <returns>如果不是位于有效的记录集中，则为 0；否则为当前记录的列数。 默认值为 -1。</returns>
      <exception cref="T:System.NotSupportedException">没有到数据源的当前连接。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetBoolean(System.Int32)">
      <summary>获取指定列的布尔值形式的值。</summary>
      <returns>一个表示列值的布尔值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetByte(System.Int32)">
      <summary>获取指定列的字节形式的值。</summary>
      <returns>指定列的字节形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>从指定的列偏移量将字节流作为数组从给定的缓冲区偏移量开始读入缓冲区。</summary>
      <returns>读取的实际字节数。</returns>
      <param name="i">从零开始的列序号。</param>
      <param name="fieldOffset">字段中读取操作开始位置的索引。</param>
      <param name="buffer2">要将字节流读入的缓冲区。</param>
      <param name="bufferoffset">
        <paramref name="buffer" /> 开始写操作位置的索引。</param>
      <param name="length">要读取的字节数。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetChar(System.Int32)">
      <summary>获取指定列的字符形式的值。</summary>
      <returns>指定列的字符形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>从指定的列偏移量将字符流作为数组从给定的缓冲区偏移量开始读入缓冲区。</summary>
      <returns>读取的实际字符数。</returns>
      <param name="i">从零开始的列序号。</param>
      <param name="fieldOffset">行中读取操作开始位置的索引。</param>
      <param name="buffer2">要向其中复制数据的缓冲区。</param>
      <param name="bufferoffset">
        <paramref name="buffer" /> 开始写操作位置的索引。</param>
      <param name="length">要读取的字符数。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetDataTypeName(System.Int32)">
      <summary>获取源数据类型的名称。</summary>
      <returns>源数据类型的名称。</returns>
      <param name="i">从零开始的列序号。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetDateTime(System.Int32)">
      <summary>获取指定列的 DateTime 对象形式的值。</summary>
      <returns>指定列的 DateTime 对象形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetDecimal(System.Int32)">
      <summary>获取指定列的 Decimal 对象形式的值。</summary>
      <returns>指定列的 Decimal 对象形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetDouble(System.Int32)">
      <summary>获取指定列的双精度浮点数形式的值。</summary>
      <returns>指定列的双精度浮点数形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetEnumerator">
      <summary>返回一个 <see cref="T:System.Collections.IEnumerator" />，可用于循环访问数据读取器中的行。</summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerator" />，可用于循环访问数据读取器中的行。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetFieldType(System.Int32)">
      <summary>获取是对象的数据类型的 <see cref="T:System.Type" />。</summary>
      <returns>
        <see cref="T:System.Type" />，它是对象的数据类型。</returns>
      <param name="i">从零开始的列序号。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetFloat(System.Int32)">
      <summary>获取指定列的单精度浮点数形式的值。</summary>
      <returns>指定列的单精度浮点数形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetGuid(System.Int32)">
      <summary>获取指定列的全局唯一标识符 (GUID) 形式的值。</summary>
      <returns>指定列的 GUID 形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetInt16(System.Int32)">
      <summary>获取指定列的 16 位有符号整数形式的值。</summary>
      <returns>指定列的 16 位有符号整数形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetInt32(System.Int32)">
      <summary>获取指定列的 32 位有符号整数形式的值。</summary>
      <returns>指定列的 32 位有符号整数形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetInt64(System.Int32)">
      <summary>获取指定列的 64 位有符号整数形式的值。</summary>
      <returns>指定列的 64 位有符号整数形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetName(System.Int32)">
      <summary>获取指定列的名称。</summary>
      <returns>指定列的名称的字符串。</returns>
      <param name="i">从零开始的列序号。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleBFile(System.Int32)">
      <summary>获取指定列的 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象形式的值。</summary>
      <returns>指定列的 <see cref="T:System.Data.OracleClient.OracleBFile" /> 对象形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleBinary(System.Int32)">
      <summary>获取指定列的 <see cref="T:System.Data.OracleClient.OracleBinary" /> 对象形式的值。</summary>
      <returns>指定列的 <see cref="T:System.Data.OracleClient.OracleBinary" /> 对象形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleDateTime(System.Int32)">
      <summary>获取指定列的 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 对象形式的值。</summary>
      <returns>指定列的 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 对象形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleLob(System.Int32)">
      <summary>获取指定列的 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象形式的值。</summary>
      <returns>指定列的 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(System.Int32)">
      <summary>获取指定列的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 对象形式的值。</summary>
      <returns>指定列的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 对象形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleNumber(System.Int32)">
      <summary>获取指定列的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 对象形式的值。</summary>
      <returns>指定列的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 对象形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleString(System.Int32)">
      <summary>获取指定列的 <see cref="T:System.Data.OracleClient.OracleString" /> 对象形式的值。</summary>
      <returns>指定列的 <see cref="T:System.Data.OracleClient.OracleString" /> 对象形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(System.Int32)">
      <summary>获取指定列的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 对象形式的值。</summary>
      <returns>指定列的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 对象形式的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleValue(System.Int32)">
      <summary>获取以 Oracle 格式表示的指定序号处的列的值。</summary>
      <returns>要返回的 Oracle 值。</returns>
      <param name="i">从零开始的列序号。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOracleValues(System.Object[])">
      <summary>获取以 Oracle 格式表示的当前行中所有的特性列。</summary>
      <returns>数组中 <see cref="T:System.Object" /> 的实例的数目。</returns>
      <param name="values">将特性列复制到的 <see cref="T:System.Object" /> 类型的数组。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)">
      <summary>在给定列名称的情况下获取列序号。</summary>
      <returns>从零开始的列序号。</returns>
      <param name="name">列的名称。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>获取一个 Object，该对象表示特定于基础提供程序的字段类型。</summary>
      <returns>获取一个 <see cref="T:System.Object" />，该对象表示特定于基础提供程序的字段类型。</returns>
      <param name="i">一个 <see cref="T:System.Int32" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>获取一个 Object，该对象表示特定于基础提供程序的字段类型。</summary>
      <returns>获取一个 <see cref="T:System.Object" />，该对象表示特定于基础提供程序的字段类型。</returns>
      <param name="i">一个 <see cref="T:System.Int32" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>获取表示基础提供程序特定值的对象的数组。</summary>
      <returns>数组中 <see cref="T:System.Object" /> 的实例的数目。</returns>
      <param name="values">一个 <see cref="T:System.Object" /> 数组。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetSchemaTable">
      <summary>返回一个 <see cref="T:System.Data.DataTable" />，它描述 OracleDataReader 的列元数据。</summary>
      <returns>一个描述列元数据的 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetString(System.Int32)">
      <summary>获取指定列的字符串形式的值。</summary>
      <returns>指定列的值为字符串形式。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetTimeSpan(System.Int32)">
      <summary>获取指定列的 System.TimeSpan 形式的值。</summary>
      <returns>指定列的值，为 <see cref="T:System.TimeSpan" /> 形式。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.InvalidCastException">指定的强制转换无效。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetValue(System.Int32)">
      <summary>获取以本机格式表示的指定序号处的列的值。</summary>
      <returns>要返回的值。</returns>
      <param name="i">从零开始的列序号。</param>
      <exception cref="T:System.Data.OracleClient.OracleException">该值太大，无法以 .NET Decimal 形式存储。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.GetValues(System.Object[])">
      <summary>使用当前行的列值来填充对象数组。</summary>
      <returns>数组中 <see cref="T:System.Object" /> 的实例的数目。</returns>
      <param name="values">将特性列复制到的 <see cref="T:System.Object" /> 类型的数组。</param>
      <exception cref="T:System.Data.OracleClient.OracleException">该值太大，无法以 .NET Decimal 形式存储。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataReader.HasRows">
      <summary>获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 是否包含一行或多行。</summary>
      <returns>如果 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 包含一行或多行，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataReader.IsClosed">
      <summary>指示 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 是否关闭。</summary>
      <returns>如果 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 已关闭，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.IsDBNull(System.Int32)">
      <summary>获取一个值，该值指示列中是否包含不存在的或缺少的值。</summary>
      <returns>如果指定的列值与 <see cref="T:System.DBNull" /> 等效，则为 true；否则为 false。</returns>
      <param name="i">从零开始的列序号。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataReader.Item(System.Int32)">
      <summary>在给定列序号的情况下，获取指定列的以本机格式表示的值。</summary>
      <returns>指定列的以本机格式表示的值。</returns>
      <param name="i">列序号。</param>
      <exception cref="T:System.IndexOutOfRangeException">传递的索引位于 0 至 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围之外。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataReader.Item(System.String)">
      <summary>在给定列名称的情况下，获取指定列的以本机格式表示的值。</summary>
      <returns>指定列的以本机格式表示的值。</returns>
      <param name="name">列名称。</param>
      <exception cref="T:System.IndexOutOfRangeException">未找到具有指定名称的列。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.NextResult">
      <summary>使 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 前进到下一个结果</summary>
      <returns>如果存在多个结果集，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDataReader.Read">
      <summary>使 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 前进到下一条记录。</summary>
      <returns>如果存在多个行，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDataReader.RecordsAffected">
      <summary>通过执行 SQL 语句获取更改、插入或删除的行数。</summary>
      <returns>更改、插入或删除的行数。对于 SELECT 语句为 -1；如果没影响任何行或该语句失败，则为 0。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleDateTime">
      <summary>表示日期和时间数据，取值范围从公元前 4712 年 1 月 1 日 到公元 4712 年 12 月 31 日。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Data.OracleClient.OracleDateTime)">
      <summary>从现有 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 对象初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的新实例。</summary>
      <param name="from">要从中进行复制的现有 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.DateTime)">
      <summary>用指定的 <see cref="T:System.DateTime" /> 初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的新实例。</summary>
      <param name="dt">指定的 <see cref="T:System.DateTime" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>通过使用所提供的参数初始化新结构的年、月和日来初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的新实例。</summary>
      <param name="year">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的年份值。</param>
      <param name="month">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的月份值。</param>
      <param name="day">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构中月份的第几天的值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
      <summary>通过使用所提供的参数初始化新结构的年、月、日和日历，来初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的新实例。</summary>
      <param name="year">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的年份值。</param>
      <param name="month">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的月份值。</param>
      <param name="day">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构中月份的第几天的值。</param>
      <param name="calendar">
        <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的此实例的 <see cref="T:System.Globalization.Calendar" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>通过使用所提供的参数初始化新结构的年、月、日、小时、分钟和秒，来初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的新实例。</summary>
      <param name="year">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的年份值。</param>
      <param name="month">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的月份值。</param>
      <param name="day">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构中月份的第几天的值。</param>
      <param name="hour">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的小时值。</param>
      <param name="minute">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的分钟值。</param>
      <param name="second">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的秒钟值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
      <summary>通过使用所提供的参数初始化新结构指定日历的年、月、日、小时、分钟和秒，来初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的新实例。</summary>
      <param name="year">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的年份值。</param>
      <param name="month">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的月份值。</param>
      <param name="day">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构中月份的第几天的值。</param>
      <param name="hour">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的小时值。</param>
      <param name="minute">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的分钟值。</param>
      <param name="second">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的秒钟值。</param>
      <param name="calendar">
        <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的此实例的 <see cref="T:System.Globalization.Calendar" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>通过使用所提供的参数初始化新结构的年、月、日、小时、分钟、秒和毫秒，来初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的新实例。</summary>
      <param name="year">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的年份值。</param>
      <param name="month">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的月份值。</param>
      <param name="day">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构中月份的第几天的值。</param>
      <param name="hour">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的小时值。</param>
      <param name="minute">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的分钟值。</param>
      <param name="second">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的秒钟值。</param>
      <param name="millisecond">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的毫秒。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
      <summary>通过使用所提供的参数初始化新结构的指定日历的年、月、日、小时、分钟、秒和毫秒，来初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的新实例。</summary>
      <param name="year">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的年份值。</param>
      <param name="month">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的月份值。</param>
      <param name="day">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构中月份的第几天的值。</param>
      <param name="hour">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的小时值。</param>
      <param name="minute">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的分钟值。</param>
      <param name="second">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的秒钟值。</param>
      <param name="millisecond">一个整数值，它表示新 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的毫秒。</param>
      <param name="calendar">
        <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的此实例的 <see cref="T:System.Globalization.Calendar" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.#ctor(System.Int64)">
      <summary>使用所提供的刻度数初始化 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的新实例。</summary>
      <param name="ticks">以 100 毫微秒为单位表示的时间段。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.CompareTo(System.Object)">
      <summary>将此 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构与所提供的对象进行比较，并返回其相对值的指示。</summary>
      <returns>一个有符号的数字，它指示该实例和对象的相对值。 返回值 Condition 小于零 此结构小于该对象。 零 此结构等于该对象。 大于零 此结构大于该对象， 对象为 null 引用（在 Visual Basic 中为 Nothing）</returns>
      <param name="obj">要比较的对象。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Day">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的以日表示的值。</summary>
      <returns>日期值（介于 1 和 31 之间）。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.Equals(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <returns>如果两个值相等，则为 true；否则为 false。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.Equals(System.Object)">
      <summary>将提供的对象参数与 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 对象的 <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> 属性进行比较。</summary>
      <returns>如果对象是 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的实例并且两者相等，则为 true；否则为 false。</returns>
      <param name="value">要比较的对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.GetHashCode">
      <summary>获取此实例的哈希代码。</summary>
      <returns>32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.GreaterThan(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的任一实例为 null，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.GreaterThanOrEqual(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的两个实例进行比较，以确定第一个实例是否大于或等于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的任一实例为 null，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Hour">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构以小时表示的值。</summary>
      <returns>小时数（介于 0 和 23 之间）。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.IsNull">
      <summary>获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的 <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> 属性是否为 null。</summary>
      <returns>如果 <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> 为空，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.LessThan(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的任一实例为 null，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.LessThanOrEqual(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的任一实例为 null，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleDateTime.MaxValue">
      <summary>表示 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的最大有效日期值。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Millisecond">
      <summary>获取此实例所表示日期的毫秒部分。</summary>
      <returns>毫秒数（介于 0 和 999 之间）。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Minute">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的以分钟表示的值。</summary>
      <returns>分钟数（介于 0 和 59 之间）。</returns>
    </member>
    <member name="F:System.Data.OracleClient.OracleDateTime.MinValue">
      <summary>表示 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的最小有效日期值。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Month">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的以月份表示的值。</summary>
      <returns>月份（介于 1 和 12 之间）。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.NotEquals(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的两个实例执行逻辑比较，确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的任一实例为 null，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleDateTime.Null">
      <summary>表示可分配给 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构实例的 <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> 属性的 null 值。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_Equality(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <returns>如果两个值相等，则为 true；否则为 false。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_Explicit(System.Data.OracleClient.OracleDateTime)~System.DateTime">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构转换为 <see cref="T:System.DateTime" /> 结构。</summary>
      <returns>一个 <see cref="T:System.DateTime" /> 结构，其 <see cref="P:System.DateTime.Date" /> 和 <see cref="P:System.DateTime.TimeOfDay" /> 属性与提供的 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的 <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> 属性包含相同的日期和时间值。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_Explicit(System.String)~System.Data.OracleClient.OracleDateTime">
      <summary>将 String 转换为 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构，其 <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> 等于 String 中包含的值。</returns>
      <param name="x">一个将要转换为 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的 String。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_GreaterThan(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的任一实例为 null，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_GreaterThanOrEqual(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的两个实例进行比较，以确定第一个实例是否大于或等于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的任一实例为 null，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_Inequality(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的两个实例执行逻辑比较，以确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的任一实例为 null，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_LessThan(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的任一实例为 null，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_LessThanOrEqual(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 的任一实例为 null，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.Parse(System.String)">
      <summary>将日期和时间的指定的 <see cref="T:System.String" /> 表示形式转换为其等效的 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 形式。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构，它等于指定的 String 表示的日期和时间。</returns>
      <param name="s">要分析的 String。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Second">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的以秒表示的值。</summary>
      <returns>秒数（介于 0 和 59 之间）。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.ToString">
      <summary>将此 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构转换为 <see cref="T:System.String" />。</summary>
      <returns>一个 String，它表示此 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的 <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> 属性。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Value">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的值。</summary>
      <returns>此 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的值。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Year">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleDateTime" /> 结构的以年份表示的值。</summary>
      <returns>年份（介于 1 和 4712 之间）。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleException">
      <summary>当 Oracle 数据库或用于 Oracle 的 .NET Framework 数据提供程序返回警告或错误时生成的异常。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleException.Code">
      <summary>获取错误的整数形式的代码部分。</summary>
      <returns>错误的整数形式的代码部分。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用有关异常的信息设置 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="si">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，它存有有关所引发的异常的序列化对象数据。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含有关源或目标的上下文信息。</param>
    </member>
    <member name="T:System.Data.OracleClient.OracleInfoMessageEventArgs">
      <summary>为 <see cref="E:System.Data.OracleClient.OracleConnection.InfoMessage" /> 事件提供数据。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleInfoMessageEventArgs.Code">
      <summary>获取消息的 int 形式的代码部分。</summary>
      <returns>消息的 int 形式的代码部分。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleInfoMessageEventArgs.Message">
      <summary>获取从数据库发送的全文本消息。</summary>
      <returns>描述消息的文本。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleInfoMessageEventArgs.Source">
      <summary>获取生成错误的对象的名称。</summary>
      <returns>生成错误的对象的名称。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleInfoMessageEventArgs.ToString">
      <summary>检索 <see cref="E:System.Data.OracleClient.OracleConnection.InfoMessage" /> 事件的字符串表示形式。</summary>
      <returns>表示 <see cref="E:System.Data.OracleClient.OracleConnection.InfoMessage" /> 事件的字符串。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleInfoMessageEventHandler">
      <summary>表示将要处理 <see cref="T:System.Data.OracleClient.OracleConnection" /> 的 <see cref="E:System.Data.OracleClient.OracleConnection.InfoMessage" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Data.OracleClient.OracleInfoMessageEventArgs" /> 对象。</param>
    </member>
    <member name="T:System.Data.OracleClient.OracleLob">
      <summary>表示存储在 Oracle 服务器上的大型对象二进制 (LOB) 数据类型。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
      <summary>将数据从指定的 LOB 追加到当前 LOB。</summary>
      <param name="source">要从其中追加数据的 LOB。</param>
      <exception cref="T:System.ArgumentNullException">源 <see cref="T:System.Data.OracleClient.OracleLob" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">源 <see cref="T:System.Data.OracleClient.OracleLob" /> 为 null，或者连接已关闭。</exception>
      <exception cref="T:System.ObjectDisposedException">源 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象已关闭或已释放。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.BeginBatch">
      <summary>在执行多个读操作时避免服务器端触发器激发。</summary>
      <exception cref="T:System.InvalidOperationException">连接处于关闭状态。</exception>
      <exception cref="T:System.ObjectDisposedException">对象已关闭或已释放。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
      <summary>在以指定的访问模式执行多个读写操作时避免服务器端触发器激发。</summary>
      <param name="mode">模式（<see cref="T:System.Data.OracleClient.OracleLobOpenMode" /> 值之一），在该模式下，可在此 <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /> 调用与对应的 <see cref="M:System.Data.OracleClient.OracleLob.EndBatch" /> 调用之间访问 LOB。</param>
      <exception cref="T:System.InvalidOperationException">连接处于关闭状态。</exception>
      <exception cref="T:System.ObjectDisposedException">对象已关闭或已释放。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.CanRead">
      <summary>获取一个值，该值指示 LOB 流是否可读。</summary>
      <returns>如果 LOB 流支持读取，则为 true；如果 LOB 已关闭或已释放，则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.CanSeek">
      <summary>获取一个值，该值指示能否执行向前和向后查找操作。</summary>
      <returns>如果 LOB 已关闭或已释放，则为 false；否则为 true。 对于 <see cref="F:System.Data.OracleClient.OracleLob.Null" />，总是为 true。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.CanWrite">
      <summary>不管 LOB 是否支持写入，始终返回真。</summary>
      <returns>不管已打开的或未释放的 LOB 是否支持写入，始终返回 true；如果 LOB 已关闭或已释放，则返回 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.ChunkSize">
      <summary>获取一个值，该值指示读/写操作过程中要从服务器检索或发送到服务器的最小字节数。</summary>
      <returns>要检索或发送的最小字节数。</returns>
      <exception cref="T:System.InvalidOperationException">连接处于关闭状态。</exception>
      <exception cref="T:System.ObjectDisposedException">对象已关闭或已释放。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Clone">
      <summary>创建一个新 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象，该对象与原始 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象引用相同的 Oracle LOB。</summary>
      <returns>一个与原始 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象引用相同 Oracle LOB 的新 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象。</returns>
      <exception cref="T:System.InvalidOperationException">连接处于关闭状态。</exception>
      <exception cref="T:System.ObjectDisposedException">对象已关闭或已释放。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.Connection">
      <summary>获取由该 <see cref="T:System.Data.OracleClient.OracleLob" /> 实例使用的 <see cref="T:System.Data.OracleClient.OracleConnection" />。</summary>
      <returns>与数据源的连接。</returns>
      <exception cref="T:System.ObjectDisposedException">对象已关闭或已释放。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
      <summary>从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 复制到目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</summary>
      <returns>已复制的字节数。 这排除了所有已填充的字节。</returns>
      <param name="destination">目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> 参数中指定的 <see cref="T:System.Data.OracleClient.OracleLob" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
      <summary>将指定数量的数据从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 复制到目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</summary>
      <returns>已复制的字节数。 这排除了所有已填充的字节。</returns>
      <param name="destination">目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</param>
      <param name="destinationOffset">要复制到的偏移量。 对于 CLOB 和 NCLOB 数据类型，它必须为偶数字节数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> 参数中指定的 <see cref="T:System.Data.OracleClient.OracleLob" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="destinationOffset" /> 参数中指定的值小于零，或大于 4 GB。 - 或 - <paramref name="destinationOffset" /> 参数中为 CLOB 或 NCLOB 数据类型指定的值不是偶数。 - 或 - 必须将 CLOB 和 NCLOB 数据类型指定为偶数字节数。</exception>
      <exception cref="T:System.InvalidOperationException">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
      <summary>使用该源偏移量将指定数量的数据从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 复制到目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</summary>
      <returns>已复制的字节数。 这排除了所有已填充的字节。</returns>
      <param name="sourceOffset">要从中复制的偏移量。 对于 CLOB 和 NCLOB 数据类型，它必须为偶数。</param>
      <param name="destination">目标OracleLob<see cref="N:System.Data.OracleClient" />.。</param>
      <param name="destinationOffset">要复制到的目标偏移量。 对于 CLOB 和 NCLOB 数据类型，它必须为偶数。</param>
      <param name="amount">要复制的数据数量（以字节为单位）。 对于 CLOB 和 NCLOB 数据类型，它必须为偶数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> 参数中指定的 <see cref="T:System.Data.OracleClient.OracleLob" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="amount" />、<paramref name="sourceOffset" /> 或 <paramref name="destinationOffset" /> 参数中指定的值小于零，或大于 4 GB。 - 或 - 在 <paramref name="amount" />、<paramref name="sourceOffset" /> 或 <paramref name="destinationOffset" /> 参数中为 CLOB 或 NCLOB 数据类型指定的值不是偶数。</exception>
      <exception cref="T:System.InvalidOperationException">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.EndBatch">
      <summary>允许服务器端触发器在执行多个写入操作之后继续激发。</summary>
      <exception cref="T:System.InvalidOperationException">连接处于关闭状态。</exception>
      <exception cref="T:System.ObjectDisposedException">对象已关闭或已释放。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Erase">
      <summary>从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 清除所有数据。</summary>
      <returns>清除的字节数。</returns>
      <exception cref="T:System.InvalidOperationException">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</exception>
      <exception cref="T:System.ObjectDisposedException">对象已关闭或已释放。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
      <summary>从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 清除指定数量的数据。</summary>
      <returns>清除的字节数。</returns>
      <param name="offset">要从中清除的偏移量。 对于 CLOB 和 NCLOB 数据类型，它必须为偶数。</param>
      <param name="amount">要清除的数据数量（以字节为单位）。 对于 CLOB 和 NCLOB 数据类型，它必须为偶数。</param>
      <exception cref="T:System.InvalidOperationException">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</exception>
      <exception cref="T:System.ObjectDisposedException">对象已关闭或已释放。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Flush">
      <summary>当前不支持。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.IsBatched">
      <summary>获取一个值，该值指示应用程序是否调用了 <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> 方法。</summary>
      <returns>如果应用程序调用了 <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> 方法，则为 true；否则为 false。</returns>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.IsNull">
      <summary>获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleLob" /> 是否为一个 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 流。</summary>
      <returns>如果 <see cref="T:System.Data.OracleClient.OracleLob" /> 是 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 流，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.IsTemporary">
      <summary>获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleLob" /> 是否为临时 LOB。</summary>
      <returns>如果 <see cref="T:System.Data.OracleClient.OracleLob" /> 是临时 LOB，则为 true；否则为 false。</returns>
      <exception cref="T:System.InvalidOperationException">连接处于关闭状态。</exception>
      <exception cref="T:System.ObjectDisposedException">对象已关闭或已释放。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.Length">
      <summary>获取一个值，该值返回 <see cref="T:System.Data.OracleClient.OracleLob" /> 的大小。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OracleLob" /> 的大小（以字节为单位）。</returns>
      <exception cref="T:System.InvalidOperationException">连接处于关闭状态。</exception>
      <exception cref="T:System.ObjectDisposedException">对象已关闭或已释放。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.LobType">
      <summary>获取一个值，该值返回 LOB 数据类型。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OracleType" />LOB 数据类型之一。</returns>
    </member>
    <member name="F:System.Data.OracleClient.OracleLob.Null">
      <summary>表示一个 null <see cref="T:System.Data.OracleClient.OracleLob" /> 对象。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.Position">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleLob" /> 流中的当前读取位置。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OracleLob" /> 流中的当前位置。</returns>
      <exception cref="T:System.InvalidOperationException">连接处于关闭状态。</exception>
      <exception cref="T:System.ObjectDisposedException">对象已关闭或已释放。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>从当前 <see cref="T:System.Data.OracleClient.OracleLob" /> 流中读取字节序列，并在该流中按照读取的字节数提升位置。</summary>
      <returns>读入缓冲区中的总字节数。 如果当前可用的字节数没有请求的字节数那么多，则总字节数可能小于请求的字节数，或者如果已到达流的末尾，则为零 (0)。</returns>
      <param name="buffer">字节数组。 此方法返回时，该缓冲区包含指定的字符数组，该数组的 <paramref name="offset" /> 和 (<paramref name="offset" />+<paramref name="count" />) 之间的值由从当前源中读取的字节替换。</param>
      <param name="offset">
        <paramref name="buffer" /> 中的从零开始的字节偏移量，从此处开始存储从当前流中读取的数据。 对于 CLOB 和 NCLOB 数据类型，它必须为偶数。</param>
      <param name="count">要从当前流中最多读取的字节数。 对于 CLOB 和 NCLOB 数据类型，它必须为偶数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 为 null 引用（Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 或 <paramref name="count" /> 参数中的值为非正。 - 或 - offset 参数与 count 参数之和大于 buffer 的长度。 - 或 - <paramref name="amount" /> 或 <paramref name="offset" /> 参数中指定的值小于零，或大于 4 GB。</exception>
      <exception cref="T:System.InvalidOperationException">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</exception>
      <exception cref="T:System.ObjectDisposedException">对象已关闭或已释放。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>在当前 <see cref="T:System.Data.OracleClient.OracleLob" /> 流上设置位置。</summary>
      <returns>当前流中的新位置。</returns>
      <param name="offset">相对于 origin 的字节偏移量。 如果 <paramref name="offset" /> 为负，则新位置位于 <paramref name="origin" /> 指定的位置之前 <paramref name="offset" /> 指定的字节数。 如果 <paramref name="offset" /> 为零，则新位置是 <paramref name="origin" /> 指定的位置。 如果 <paramref name="offset" /> 为正，则新位置位于 <paramref name="origin" /> 指定的位置之后 <paramref name="offset" /> 指定的字节数。</param>
      <param name="origin">
        <see cref="T:System.IO.SeekOrigin" /> 类型的值，指示用于获取新位置的参考点。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="origin" /> 参数不包含有效的值。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">结果位置在值的长度之外。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Data.OracleClient.OracleLob" /> 对象已关闭或已释放。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleLob" /> 流的长度设置为小于当前长度的值。</summary>
      <param name="value">所需的当前 <see cref="T:System.Data.OracleClient.OracleLob" /> 流的长度（以字节表示）。 对于 CLOB 和 NCLOB 数据类型，它必须为偶数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> 参数中为 CLOB 或 NCLOB 数据类型指定的值不是偶数。 - 或 - <paramref name="value" /> 参数中指定的值小于零，或大于 4 GB。</exception>
      <exception cref="T:System.InvalidOperationException">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</exception>
      <exception cref="T:System.ObjectDisposedException">对象已关闭或已释放。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.Value">
      <summary>获取公共语言运行时流值（基础值的等效值）。</summary>
      <returns>对于 <see cref="F:System.Data.OracleClient.OracleType.Blob" />，为 Byte[] 类型的数组。 对于 <see cref="F:System.Data.OracleClient.OracleType.Clob" /> 和 <see cref="F:System.Data.OracleClient.OracleType.NClob" />，为 String。 对于 null 数据，则为 <see cref="T:System.DBNull" />。</returns>
      <exception cref="T:System.ObjectDisposedException">对象已关闭或已释放。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>将一个字节序列写入当前 <see cref="T:System.Data.OracleClient.OracleLob" /> 流，并使流中的当前位置前进所写入的字节数。</summary>
      <param name="buffer">字节数组。 此方法将 <paramref name="count" /> 中指定的字节数从 <paramref name="buffer" /> 复制到当前流中。</param>
      <param name="offset">
        <paramref name="buffer" /> 中的从零开始的字节偏移量，从此处开始将字节复制到当前流。 对于 CLOB 和 NCLOB 数据类型，它必须为偶数。</param>
      <param name="count">要写入当前流的字节数。 对于 CLOB 和 NCLOB 数据类型，它必须为偶数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> 参数是空引用（Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 或 <paramref name="count" /> 参数中的值为非正。 - 或 - <paramref name="offset" /> 参数与 <paramref name="count" /> 参数之和大于 <paramref name="buffer" /> 的长度。 - 或 - <paramref name="count" /> 或 <paramref name="offset" /> 参数中指定的值小于零，或大于 4 GB。 - 或 - 必须将 CLOB 和 NCLOB 数据类型指定为偶数字节数。</exception>
      <exception cref="T:System.InvalidOperationException">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</exception>
      <exception cref="T:System.ObjectDisposedException">对象已关闭或已释放。</exception>
      <exception cref="T:System.Data.OracleClient.OracleException">发生了 Oracle 错误。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
      <summary>将一个字节写入 <see cref="T:System.Data.OracleClient.OracleLob" /> 流内的当前位置，并将流内的位置向前推进一个字节。</summary>
      <param name="value">要写入流的字节。</param>
    </member>
    <member name="T:System.Data.OracleClient.OracleLobOpenMode">
      <summary>指定 <see cref="T:System.Data.OracleClient.OracleLob" /> 应以只读模式还是以读/写模式打开。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleLobOpenMode.ReadOnly">
      <summary>
        <see cref="T:System.Data.OracleClient.OracleLob" /> 以只读模式打开。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleLobOpenMode.ReadWrite">
      <summary>
        <see cref="T:System.Data.OracleClient.OracleLob" /> 以读/写模式打开。</summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleMonthSpan">
      <summary>表示用月份表示的时间间隔，并对应于 Oracle 9i INTERVAL YEAR TO MONTH 数据类型。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.#ctor(System.Data.OracleClient.OracleMonthSpan)">
      <summary>从现有 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构中初始化新结构。</summary>
      <param name="from">一个现有的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构，可从中创建新结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.#ctor(System.Int32)">
      <summary>将新的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构初始化为指定的月份数。</summary>
      <param name="months">月份数。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.#ctor(System.Int32,System.Int32)">
      <summary>将新 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构初始化为指定的年份和月份数。</summary>
      <param name="years">年份数。</param>
      <param name="months">月份数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">该参数指定一个小于 <see cref="F:System.Data.OracleClient.OracleMonthSpan.MinValue" /> 或大于 <see cref="F:System.Data.OracleClient.OracleMonthSpan.MaxValue" /> 的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 值。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.CompareTo(System.Object)">
      <summary>将此 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构与所提供的对象进行比较，并返回其相对值的指示。</summary>
      <returns>一个有符号的数字，它指示该实例和对象的相对值。 返回值 Condition 小于零 此实例小于该对象。 零 此实例等于该对象。 大于零 此实例大于该对象 - 或 - 该对象为空引用 (Nothing)。</returns>
      <param name="obj">要比较的对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.Equals(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <returns>如果两个值相等，则为 true；否则为 false。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.Equals(System.Object)">
      <summary>将提供的对象参数与 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 对象的 <see cref="P:System.Data.OracleClient.OracleMonthSpan.Value" /> 属性进行比较。</summary>
      <returns>如果对象是 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的实例并且两者相等，则为 true；否则为 false。</returns>
      <param name="value">要比较的对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.GetHashCode">
      <summary>获取此实例的哈希代码。</summary>
      <returns>32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.GreaterThan(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.GreaterThanOrEqual(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的两个实例进行比较，以确定第一个实例是否大于或等于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleMonthSpan.IsNull">
      <summary>获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构的 <see cref="P:System.Data.OracleClient.OracleMonthSpan.Value" /> 属性是否为 null。</summary>
      <returns>如果 <see cref="P:System.Data.OracleClient.OracleMonthSpan.Value" /> 为空，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.LessThan(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.LessThanOrEqual(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleMonthSpan.MaxValue">
      <summary>表示 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构的最大有效日期值。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleMonthSpan.MinValue">
      <summary>表示 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构的最小有效日期值。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.NotEquals(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的两个实例执行逻辑比较，确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleMonthSpan.Null">
      <summary>表示可分配给 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构实例的 <see cref="P:System.Data.OracleClient.OracleMonthSpan.Value" /> 属性的 null 值。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_Equality(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <returns>如果两个值相等，则为 true；否则为 false。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_Explicit(System.Data.OracleClient.OracleMonthSpan)~System.Int32">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构转换为 Int32。</summary>
      <returns>一个 Int32。</returns>
      <param name="x">一个要转换为 Int32 的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_Explicit(System.String)~System.Data.OracleClient.OracleMonthSpan">
      <summary>将字符串转换为 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</returns>
      <param name="x">要转换为 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构的字符串。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_GreaterThan(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_GreaterThanOrEqual(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的两个实例进行比较，以确定第一个实例是否大于或等于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_Inequality(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的两个实例执行逻辑比较，以确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_LessThan(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_LessThanOrEqual(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.Parse(System.String)">
      <summary>将日期和时间的指定的 <see cref="T:System.String" /> 表示形式转换为其等效的 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 形式。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构，它等于指定的 String 表示的日期和时间。</returns>
      <param name="s">要转换的 String。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.ToString">
      <summary>将此 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构转换为 <see cref="T:System.String" />。</summary>
      <returns>一个 String，它表示此 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构的 <see cref="P:System.Data.OracleClient.OracleMonthSpan.Value" /> 属性。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleMonthSpan.Value">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构的值。</summary>
      <returns>此 <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 结构的值。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleNumber">
      <summary>表示要存储在数据库中或从数据库中检索的固定精度和小数位数数值，该数值介于 -10 27 -1 和 10 27 -1 之间。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.#ctor(System.Data.OracleClient.OracleNumber)">
      <summary>使用提供的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 初始化 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的新实例。</summary>
      <param name="from">提供的 <see cref="T:System.Data.OracleClient.OracleNumber" />，它将用作新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.#ctor(System.Decimal)">
      <summary>使用提供的 <see cref="T:System.Decimal" /> 值初始化 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的新实例。</summary>
      <param name="decValue">要作为 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构存储的 <see cref="T:System.Decimal" /> 值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.#ctor(System.Double)">
      <summary>使用所提供的双精度值初始化 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的新实例。</summary>
      <param name="dblValue">提供的双精度值，它将用作新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.#ctor(System.Int32)">
      <summary>使用提供的整数值初始化 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的新实例。</summary>
      <param name="intValue">提供的整数值，它将用作新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.#ctor(System.Int64)">
      <summary>使用提供的长整数值初始化 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的新实例。</summary>
      <param name="longValue">提供的长整数值，它将用作新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Abs(System.Data.OracleClient.OracleNumber)">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数的绝对值。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，其 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含表示 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数的绝对值的无符号数字。</returns>
      <param name="n">一个 OracleNumber 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Acos(System.Data.OracleClient.OracleNumber)">
      <summary>计算 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的反双曲余弦值。</summary>
      <returns>以弧度计量的角度。</returns>
      <param name="n">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Add(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>计算两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的和。</summary>
      <returns>一个新的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含该和。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Asin(System.Data.OracleClient.OracleNumber)">
      <summary>计算 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的反双曲正弦值。</summary>
      <returns>以弧度计量的角度。</returns>
      <param name="n">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Atan(System.Data.OracleClient.OracleNumber)">
      <summary>计算 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的反双曲正切值。</summary>
      <returns>以弧度计量的角度。</returns>
      <param name="n">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Atan2(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>计算两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的反双曲正切值。</summary>
      <returns>以弧度计量的角度。</returns>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Ceiling(System.Data.OracleClient.OracleNumber)">
      <summary>返回大于或等于指定 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的最小整数。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleNumber" />，表示大于或等于指定 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的最小整数。</returns>
      <param name="n">
        <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，将要计算其最大值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.CompareTo(System.Object)">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的此实例与所提供的对象进行比较，并返回它们的相对值的指示值。</summary>
      <returns>一个有符号的数字，它指示该实例和对象的相对值。 返回值 Condition 小于零 此实例小于该对象。 零 此实例等于该对象。 大于零 此实例大于该对象，或者该对象为空引用（Visual Basic 中为 Nothing）</returns>
      <param name="obj">要比较的对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Cos(System.Data.OracleClient.OracleNumber)">
      <summary>计算 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的余弦值。</summary>
      <returns>
        <paramref name="n" /> 的余弦值。</returns>
      <param name="n">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Cosh(System.Data.OracleClient.OracleNumber)">
      <summary>计算 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的双曲余弦值。</summary>
      <returns>
        <paramref name="n" /> 的双曲余弦值。</returns>
      <param name="n">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Divide(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>计算用第一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构除以第二个结构的结果。</summary>
      <returns>新的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含该除法运算的结果。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.E">
      <summary>返回值 e-2.718。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Equals(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Equals(System.Object)">
      <summary>将提供的对象参数与 <see cref="T:System.Data.OracleClient.OracleNumber" /> 对象的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性进行比较。</summary>
      <returns>如果对象是 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的实例并且两者相等，则为 true；否则为 false。</returns>
      <param name="value">要比较的对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Exp(System.Data.OracleClient.OracleNumber)">
      <summary>计算 e 的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 次幂。 常数 e 等于 2.71828182845904，它是自然对数的底数。</summary>
      <returns>一个数的 <paramref name="p" /> 次幂。</returns>
      <param name="p">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Floor(System.Data.OracleClient.OracleNumber)">
      <summary>将指定 <see cref="T:System.Data.OracleClient.OracleNumber" /> 数字舍入为下一个较小的整数。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它包含此 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的整数部分。</returns>
      <param name="n">
        <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，将要计算其最小值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.GetHashCode">
      <summary>返回 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的该实例的哈希代码。</summary>
      <returns>32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.GreaterThan(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构执行逻辑比较，以确定第一个结构是否大于第二个结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.GreaterThanOrEqual(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数执行逻辑比较，以确定第一个参数是否大于或等于第二个参数。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleNumber.IsNull">
      <summary>指示此 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 是否为 null。</summary>
      <returns>如果 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 为空，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.LessThan(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构执行逻辑比较，以确定第一个结构是否小于第二个结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.LessThanOrEqual(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数执行逻辑比较，以确定第一个参数是否小于或等于第二个参数。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Log(System.Data.OracleClient.OracleNumber)">
      <summary>计算 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的自然对数。 自然对数基于常数 e (2.71828182845904)。</summary>
      <returns>
        <paramref name="n" /> 的自然对数。</returns>
      <param name="n">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Log(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleNumber" /> 计算为您指定的基。</summary>
      <returns>指定数字在使用指定底时的对数。</returns>
      <param name="n">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="newBase">用户指定的 <see cref="T:System.Data.OracleClient.OracleNumber" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Log(System.Data.OracleClient.OracleNumber,System.Int32)">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleNumber" /> 计算为您指定的基。</summary>
      <returns>指定数字在使用指定底时的对数。</returns>
      <param name="n">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="newBase">用户指定的整数。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Log10(System.Data.OracleClient.OracleNumber)">
      <summary>计算数字以 10 为底的对数。</summary>
      <returns>指定数字的以 10 为底的对数。</returns>
      <param name="n">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Max(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>返回两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数值中的较大者。</summary>
      <returns>
        <paramref name="x" /> 或 <paramref name="y" /> 中的较大者。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MaxPrecision">
      <summary>一个常数，表示用于精度比较的最大可能值。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MaxScale">
      <summary>一个常数，表示小数位数比较的最大值。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MaxValue">
      <summary>一个常数，表示 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的最大值。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Min(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>返回两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数值中的较小者。</summary>
      <returns>
        <paramref name="x" /> 或 <paramref name="y" /> 的较小者。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MinScale">
      <summary>一个常数，表示用于小数位数比较的最小值。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MinusOne">
      <summary>返回值 -1。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MinValue">
      <summary>一个常数，表示 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的最小值。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Modulo(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>计算第一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构除以第二个结构所得结果的模数。</summary>
      <returns>一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含除法运算结果的模数。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Multiply(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>计算两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数的乘积。</summary>
      <returns>一个新的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含该乘法运算的乘积。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Negate(System.Data.OracleClient.OracleNumber)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数的值求反。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleNumber" />，其值为负 x，或者为零（如果 <paramref name="x" /> 为零）。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.NotEquals(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数执行逻辑比较，确定它们是否不相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.Null">
      <summary>表示可分配给 <see cref="T:System.Data.OracleClient.OracleNumber" /> 类实例的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性的空值。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.One">
      <summary>返回值 1。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Addition(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>计算两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的和。</summary>
      <returns>一个新的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含该和。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Division(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>计算用第一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构除以第二个结构的结果。</summary>
      <returns>新的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含该除法运算的结果。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Equality(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Data.OracleClient.OracleNumber)~System.Int64">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构转换为 <see cref="T:System.Int64" />。</summary>
      <returns>一个新 Int64 结构，它的值等于 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" />。</returns>
      <param name="x">要转换的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Data.OracleClient.OracleNumber)~System.Int32">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构转换为 <see cref="T:System.Int32" />。</summary>
      <returns>一个新 Int32 结构，它的值等于 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" />。</returns>
      <param name="x">要转换的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Data.OracleClient.OracleNumber)~System.Decimal">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构转换为 <see cref="T:System.Decimal" />。</summary>
      <returns>一个新 Decimal 结构，它的值等于 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" />。</returns>
      <param name="x">要转换的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Data.OracleClient.OracleNumber)~System.Double">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构转换为 <see cref="T:System.Double" />。</summary>
      <returns>一个新 Double 结构，它的值等于 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" />。</returns>
      <param name="x">要转换的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Decimal)~System.Data.OracleClient.OracleNumber">
      <summary>将提供的 Decimal 结构转换为 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</summary>
      <returns>一个新的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 等于 Decimal 结构的值。</returns>
      <param name="x">要转换的 Decimal 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Double)~System.Data.OracleClient.OracleNumber">
      <summary>将提供的 Double 结构转换为 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</summary>
      <returns>新的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性等于 Double 结构的值。</returns>
      <param name="x">要转换的 Double 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Int32)~System.Data.OracleClient.OracleNumber">
      <summary>将提供的 Int32 结构转换为 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</summary>
      <returns>新的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性等于 Int32 结构的值。</returns>
      <param name="x">要转换的整型结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Int64)~System.Data.OracleClient.OracleNumber">
      <summary>将提供的 Int64 结构转换为 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</summary>
      <returns>新的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性等于 Int64 结构的值。</returns>
      <param name="x">要转换的 Int64 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.String)~System.Data.OracleClient.OracleNumber">
      <summary>将提供的 String 转换为 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</summary>
      <returns>一个新 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，其 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 等于 String 结构的值。</returns>
      <param name="x">要转换的 String。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_GreaterThan(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构执行逻辑比较，以确定第一个结构是否大于第二个结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_GreaterThanOrEqual(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数执行逻辑比较，以确定第一个参数是否大于或等于第二个参数。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Inequality(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数执行逻辑比较，以确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_LessThan(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构执行逻辑比较，以确定第一个结构是否小于第二个结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_LessThanOrEqual(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数执行逻辑比较，以确定第一个参数是否小于或等于第二个参数。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Modulus(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>计算用 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构除以第二个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构所得的余数。</summary>
      <returns>一个新的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含该除法运算的模数。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Multiply(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>计算两个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的乘积。</summary>
      <returns>一个新的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含该乘法运算的乘积。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Subtraction(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>计算从第一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构中减去第二个结构所得的结果。</summary>
      <returns>一个新的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性包含该减法运算的结果。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_UnaryNegation(System.Data.OracleClient.OracleNumber)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构求反。</summary>
      <returns>一个新的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，其值包含求反的结果。</returns>
      <param name="x">需求反的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Parse(System.String)">
      <summary>将数字的 <see cref="T:System.String" /> 表示形式转换为其等效的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 形式。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleNumber" />，它与指定的 <see cref="T:System.String" /> 中包含的值等效。</returns>
      <param name="s">要分析的 String。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.PI">
      <summary>返回 pi-3.1415926535897932384626433832795028842 值。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Pow(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>计算指定的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的 n 次幂结果，其中 n 由第二个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构指定。</summary>
      <returns>数字 <paramref name="x" /> 的 <paramref name="y" /> 次幂。</returns>
      <param name="x">要乘幂的 <see cref="T:System.Data.OracleClient.OracleNumber" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" />，它指定一个幂。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Pow(System.Data.OracleClient.OracleNumber,System.Int32)">
      <summary>计算指定的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的 n 次幂结果，其中 n 由 Int32 结构指定。</summary>
      <returns>数字 <paramref name="x" /> 的 <paramref name="y" /> 次幂。</returns>
      <param name="x">要乘幂的 <see cref="T:System.Data.OracleClient.OracleNumber" />。</param>
      <param name="y">一个 Int32 结构，它指定一个幂。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Round(System.Data.OracleClient.OracleNumber,System.Int32)">
      <summary>以指定精度获取与指定 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的值最接近的数字。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它包含该舍入运算的结果。</returns>
      <param name="n">要舍入的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="position">返回值中的有效小数位数（精度）。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Shift(System.Data.OracleClient.OracleNumber,System.Int32)">
      <summary>向左或向右移动指定的位数。</summary>
      <returns>操作的结果。</returns>
      <param name="n">要操作的数字。</param>
      <param name="digits">要移动的小数位数。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Sign(System.Data.OracleClient.OracleNumber)">
      <summary>获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性的符号。</summary>
      <returns>一个指示 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的符号的数字。</returns>
      <param name="n">要计算其符号的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Sin(System.Data.OracleClient.OracleNumber)">
      <summary>计算 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的正弦值。</summary>
      <returns>
        <paramref name="n" /> 的正弦值。</returns>
      <param name="n">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Sinh(System.Data.OracleClient.OracleNumber)">
      <summary>计算 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的双曲正弦值。</summary>
      <returns>
        <paramref name="n" /> 的双曲正弦值。</returns>
      <param name="n">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Sqrt(System.Data.OracleClient.OracleNumber)">
      <summary>计算 <see cref="T:System.Data.OracleClient.OracleNumber" /> 参数的平方根。</summary>
      <returns>
        <paramref name="n" /> 的平方根。</returns>
      <param name="n">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Subtract(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>计算从第一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构中减去第二个结构所得的结果。</summary>
      <returns>一个新的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，它的“值”属性包含该减法运算的结果。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Tan(System.Data.OracleClient.OracleNumber)">
      <summary>计算 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的正切值。</summary>
      <returns>
        <paramref name="n" /> 的正切值。</returns>
      <param name="n">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Tanh(System.Data.OracleClient.OracleNumber)">
      <summary>计算 <see cref="T:System.Data.OracleClient.OracleNumber" /> 的双曲正切值。</summary>
      <returns>
        <paramref name="n" /> 的双曲正切值。</returns>
      <param name="n">一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.ToString">
      <summary>将此 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构转换为 <see cref="T:System.String" />。</summary>
      <returns>一个新的 <see cref="T:System.String" /> 对象，它包含 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 属性的字符串表示形式。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Truncate(System.Data.OracleClient.OracleNumber,System.Int32)">
      <summary>将指定 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的值截断到目标位置。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构，其 <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> 被截到指定的 <paramref name="position" /> 位。</returns>
      <param name="n">要截断的 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构。</param>
      <param name="position">数字将要截断到的小数位置。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleNumber.Value">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleNumber" /> 结构的值。 此属性是只读的。</summary>
      <returns>介于 -79,228,162,514,264,337,593,543,950,335 到 79,228,162,514, 264,337,593,543,950,335 之间的数字。</returns>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.Zero">
      <summary>返回值 0。</summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleParameter">
      <summary>表示 <see cref="T:System.Data.OracleClient.OracleCommand" /> 的参数，还可以表示它到 <see cref="T:System.Data.DataColumn" /> 的映射。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor">
      <summary>初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType)">
      <summary>初始化使用参数名称和数据类型的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的新实例。</summary>
      <param name="name">参数的名称。</param>
      <param name="oracleType">
        <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="oracleType" /> 参数中提供的值为无效的后端数据类型。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32)">
      <summary>初始化使用参数名称、数据类型和长度的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的新实例。</summary>
      <param name="name">参数的名称。</param>
      <param name="oracleType">
        <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。</param>
      <param name="size">参数的长度。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="oracleType" /> 参数中提供的值为无效的后端数据类型。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>使用参数名称、数据类型、长度、源列名称、参数方向、数值精度以及其他属性初始化 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的一个新实例。</summary>
      <param name="name">参数的名称。</param>
      <param name="oracleType">
        <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。</param>
      <param name="size">参数的长度。</param>
      <param name="direction">
        <see cref="T:System.Data.ParameterDirection" /> 值之一。</param>
      <param name="isNullable">如果该字段的值可为 null，则为 true；否则为 false。</param>
      <param name="precision">要将 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 解析为的小数点左右两侧的总位数。</param>
      <param name="scale">要将 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 解析为的总小数位数。</param>
      <param name="srcColumn">源列的名称。</param>
      <param name="srcVersion">
        <see cref="T:System.Data.DataRowVersion" /> 值之一。</param>
      <param name="value">一个 <see cref="T:System.Object" />，它是 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="oracleType" /> 参数中提供的值为无效的后端数据类型。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.ParameterDirection,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)">
      <summary>初始化使用参数名称、数据类型、大小、方向、源列、源版本和其他属性的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的一个新实例。</summary>
      <param name="name">要映射的参数的名称。</param>
      <param name="oracleType">
        <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。</param>
      <param name="size">参数的长度。</param>
      <param name="direction">
        <see cref="T:System.Data.ParameterDirection" /> 值之一。</param>
      <param name="sourceColumn">源列的名称。</param>
      <param name="sourceVersion">
        <see cref="T:System.Data.DataRowVersion" /> 值之一。</param>
      <param name="sourceColumnNullMapping">如果源列可为 null，则为 true；否则为 false。</param>
      <param name="value">一个 <see cref="T:System.Object" />，它是 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="oracleType" /> 参数中提供的值为无效的后端数据类型。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.String)">
      <summary>初始化使用参数名称、数据类型、长度和源列名称的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的新实例。</summary>
      <param name="name">参数的名称。</param>
      <param name="oracleType">
        <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。</param>
      <param name="size">参数的长度。</param>
      <param name="srcColumn">源列的名称。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="oracleType" /> 参数中提供的值为无效的后端数据类型。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Object)">
      <summary>初始化使用参数名和 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 类的新实例。</summary>
      <param name="name">参数的名称。</param>
      <param name="value">
        <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.DbType">
      <summary>获取或设置参数的 <see cref="T:System.Data.DbType" />。</summary>
      <returns>
        <see cref="T:System.Data.DbType" /> 值之一。 默认值为 <see cref="F:System.Data.DbType.AnsiString" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">该属性未设置为有效的 <see cref="T:System.Data.DbType" />。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Direction">
      <summary>获取或设置一个值，该值指示参数是只可输入、只可输出、双向还是存储过程返回值参数。</summary>
      <returns>
        <see cref="T:System.Data.ParameterDirection" /> 值之一。 默认值为 Input。</returns>
      <exception cref="T:System.ArgumentException">该属性未设置为有效的 <see cref="T:System.Data.ParameterDirection" /> 值之一。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.IsNullable">
      <summary>获取或设置一个值，该值指示参数是否接受空值。</summary>
      <returns>如果接受 null 值，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Offset">
      <summary>获取或设置对 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 属性的偏移量。</summary>
      <returns>对 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 的偏移量。 默认值为 0。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.OracleType">
      <summary>获取或设置参数的 <see cref="T:System.Data.OracleClient.OracleType" />。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OracleType" /> 值，它是该参数的 <see cref="T:System.Data.OracleClient.OracleType" />。 默认值为 <see cref="F:System.Data.OracleClient.OracleType.VarChar" />。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.ParameterName">
      <summary>获取或设置 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的名称。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OracleParameter" /> 的名称。 默认值为空字符串。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Precision">
      <summary>获取或设置用来表示 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 属性的最大位数。</summary>
      <returns>用于表示 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 属性的最大位数。 默认值为 0，它表示数据提供程序设置 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 的精度。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.ResetDbType">
      <summary>重置与此 <see cref="T:System.Data.OracleClient.OracleParameter" /> 关联的类型。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.ResetOracleType">
      <summary>重置与此 <see cref="T:System.Data.OracleClient.OracleParameter" /> 关联的类型。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Scale">
      <summary>获取或设置 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 解析为的小数位数。</summary>
      <returns>要将 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 解析为的小数位数。 默认值为 0。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Size">
      <summary>获取或设置列中数据的最大大小（以字节为单位）。</summary>
      <returns>列中数据的最大大小（以字节为单位）。 默认值为 0（在不想指定最大值时使用）。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.SourceColumn">
      <summary>获取或设置源列的名称，该源列映射到 <see cref="T:System.Data.DataSet" /> 并用于加载或返回 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。</summary>
      <returns>映射到 <see cref="T:System.Data.DataSet" /> 的源列的名称。 默认值为空字符串 ("")。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping">
      <summary>设置或获取一个值，该值指示源列是否可以为 null。 这使得 <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> 能够正确地为可为 null 的列生成 Update 语句。</summary>
      <returns>如果源列可为 null，则为 True；否则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.SourceVersion">
      <summary>获取或设置要在加载 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 时使用的 <see cref="T:System.Data.DataRowVersion" />。</summary>
      <returns>
        <see cref="T:System.Data.DataRowVersion" /> 值之一。 默认值为 Current。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.System#ICloneable#Clone">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ICloneable.Clone" />。</summary>
      <returns>作为此实例副本的新对象。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.ToString">
      <summary>获取一个包含 <see cref="P:System.Data.OracleClient.OracleParameter.ParameterName" /> 的字符串。</summary>
      <returns>包含 <see cref="P:System.Data.OracleClient.OracleParameter.ParameterName" /> 的字符串。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Value">
      <summary>获取或设置该参数的值。</summary>
      <returns>一个对象，它是该参数的值。 默认值为 null。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleParameterCollection">
      <summary>表示与 <see cref="T:System.Data.OracleClient.OracleCommand" /> 相关的参数的集合以及它们各自到 <see cref="T:System.Data.DataSet" /> 中列的映射。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.#ctor">
      <summary>初始化 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.Data.OracleClient.OracleParameter)">
      <summary>将指定的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 添加到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" />。</summary>
      <returns>对新 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象的引用。</returns>
      <param name="value">要添加到集合中的 <see cref="T:System.Data.OracleClient.OracleParameter" />。</param>
      <exception cref="T:System.ArgumentException">在 <paramref name="value" /> 参数中指定的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 已经添加到这个或其他 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.Object)">
      <summary>将指定的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象添加到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中。</summary>
      <returns>集合中新的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象的索引。</returns>
      <param name="value">要添加到集合的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.String,System.Data.OracleClient.OracleType)">
      <summary>在给定参数名称和数据类型的情况下，将 <see cref="T:System.Data.OracleClient.OracleParameter" /> 添加到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中。</summary>
      <returns>对新 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象的引用。</returns>
      <param name="parameterName">参数的名称。</param>
      <param name="dataType">
        <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.String,System.Data.OracleClient.OracleType,System.Int32)">
      <summary>在给定参数名称、数据类型和列长的情况下，将 <see cref="T:System.Data.OracleClient.OracleParameter" /> 添加到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中。</summary>
      <returns>对新 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象的引用。</returns>
      <param name="parameterName">参数的名称。</param>
      <param name="dataType">
        <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。</param>
      <param name="size">列的长度。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.String,System.Data.OracleClient.OracleType,System.Int32,System.String)">
      <summary>在给定参数名称、数据类型、列长和源列名称的情况下，将 <see cref="T:System.Data.OracleClient.OracleParameter" /> 添加到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中。</summary>
      <returns>对新 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象的引用。</returns>
      <param name="parameterName">参数的名称。</param>
      <param name="dataType">
        <see cref="T:System.Data.OracleClient.OracleType" /> 值之一。</param>
      <param name="size">列的长度。</param>
      <param name="srcColumn">源列的名称。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.String,System.Object)">
      <summary>在给定参数名称和参数值的情况下，将 <see cref="T:System.Data.OracleClient.OracleParameter" /> 添加到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中。</summary>
      <returns>对新 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象的引用。</returns>
      <param name="parameterName">参数的名称。</param>
      <param name="value">要添加到集合中的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的 <see cref="P:System.Data.OracleClient.OracleParameter.Value" />。</param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> 参数不是一个 <see cref="T:System.Data.OracleClient.OracleParameter" />。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.AddRange(System.Array)">
      <summary>将值数组添加到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的末尾。</summary>
      <param name="values">要添加的 <see cref="T:System.Array" /> 值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.AddRange(System.Data.OracleClient.OracleParameter[])">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleParameter" /> 值的数组添加到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的末尾。</summary>
      <param name="values">要添加的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>将一个值添加到 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的末尾。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。</returns>
      <param name="parameterName">参数的名称。</param>
      <param name="value">要添加的值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Clear">
      <summary>从 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中移除所有 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Contains(System.Data.OracleClient.OracleParameter)">
      <summary>确定指定的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 是否在 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中。</summary>
      <returns>如果 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 包含此值，则为 true；否则为 false。</returns>
      <param name="value">
        <see cref="T:System.Data.OracleClient.OracleParameter" /> 值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Contains(System.Object)">
      <summary>确定指定的对象是否在 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中。</summary>
      <returns>如果 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 包含此值，则为 true；否则为 false。</returns>
      <param name="value">
        <see cref="T:System.Object" /> 值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Contains(System.String)">
      <summary>指示集合中是否包含具有指定名称的 <see cref="T:System.Data.OracleClient.OracleParameter" />。</summary>
      <returns>如果 <see cref="T:System.Data.OracleClient.OracleParameter" /> 在集合中，则为 true；否则为 false。</returns>
      <param name="parameterName">要在集合中查找的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的名称。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>将当前 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的所有元素复制到指定的一维 <see cref="T:System.Array" /> 中（从指定的目标 <see cref="T:System.Array" /> 索引开始）。</summary>
      <param name="array">一维 <see cref="T:System.Array" />，它是从当前 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 复制的元素的目标位置。</param>
      <param name="index">一个 32 位整数，它表示 <see cref="T:System.Array" /> 中复制开始处的索引。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.CopyTo(System.Data.OracleClient.OracleParameter[],System.Int32)">
      <summary>将当前 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的所有元素复制到指定的 <see cref="T:System.Data.OracleClient.OracleParameterCollection" />，从指定的目标索引开始复制。</summary>
      <param name="array">
        <see cref="T:System.Data.OracleClient.OracleParameterCollection" />，它是从当前 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 复制的元素的目标位置。</param>
      <param name="index">一个 32 位整数，它表示 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中复制开始处的索引。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.Count">
      <summary>返回一个整数，其中包含 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中的元素的数目。 只读。</summary>
      <returns>作为整数的 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中的元素数目。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.GetEnumerator">
      <summary>返回循环访问 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的枚举数。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.IndexOf(System.Data.OracleClient.OracleParameter)">
      <summary>获取指定的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 在集合中的位置。</summary>
      <returns>指定的 <see cref="T:System.Data.OracleClient.OracleParameter" />（它是 <see cref="T:System.Data.OracleClient.OracleParameter" />）在集合中从零开始的位置。</returns>
      <param name="value">要查找的 <see cref="T:System.Data.OracleClient.OracleParameter" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.IndexOf(System.Object)">
      <summary>获取指定的 <see cref="T:System.Object" /> 在集合中的位置。</summary>
      <returns>指定的 <see cref="T:System.Object" />（它是 <see cref="T:System.Data.OracleClient.OracleParameter" />）在集合中从零开始的位置。</returns>
      <param name="value">要查找的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.IndexOf(System.String)">
      <summary>获取具有指定名称的指定 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的位置。</summary>
      <returns>指定的 <see cref="T:System.Data.OracleClient.OracleParameter" />（它是 <see cref="T:System.Data.OracleClient.OracleParameter" />）在集合中从零开始的位置。</returns>
      <param name="parameterName">要查找的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 的区分大小写的名称。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Insert(System.Int32,System.Data.OracleClient.OracleParameter)">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象插入 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中的指定索引位置。</summary>
      <param name="index">从零开始的索引，应在该位置插入 value。</param>
      <param name="value">要插入 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Insert(System.Int32,System.Object)">
      <summary>将 <see cref="T:System.Object" /> 插入 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中的指定索引处。</summary>
      <param name="index">从零开始的索引，应在该位置插入 value。</param>
      <param name="value">要插入 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 中的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.IsFixedSize">
      <summary>获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的大小是否是固定的。</summary>
      <returns>如果 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 具有固定大小，则返回 true；否则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 是否为只读。</summary>
      <returns>如果 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 为只读，则返回 true；否则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.IsSynchronized">
      <summary>获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 是否是同步的。</summary>
      <returns>如果 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 已同步，则返回 true；否则返回 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.Item(System.Int32)">
      <summary>获取或设置指定索引处的 <see cref="T:System.Data.OracleClient.OracleParameter" />。</summary>
      <returns>位于指定索引处的 <see cref="T:System.Data.OracleClient.OracleParameter" />。</returns>
      <param name="index">要检索的参数的从零开始的索引。</param>
      <exception cref="T:System.IndexOutOfRangeException">指定的索引不存在。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.Item(System.String)">
      <summary>获取或设置具有指定名称的 <see cref="T:System.Data.OracleClient.OracleParameter" />。</summary>
      <returns>具有指定名称的 <see cref="T:System.Data.OracleClient.OracleParameter" />。</returns>
      <param name="parameterName">要检索的参数的名称。</param>
      <exception cref="T:System.IndexOutOfRangeException">指定的名称不存在。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Remove(System.Data.OracleClient.OracleParameter)">
      <summary>从集合中移除指定的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。</summary>
      <param name="value">要从集合中移除的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Remove(System.Object)">
      <summary>从集合中移除指定的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。</summary>
      <param name="value">要从集合中移除的 <see cref="T:System.Object" /> 对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.RemoveAt(System.Int32)">
      <summary>从集合中移除位于指定索引位置的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。</summary>
      <param name="index">要移除的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象的从零开始的索引。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.RemoveAt(System.String)">
      <summary>从集合中移除具有指定名称的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象。</summary>
      <param name="parameterName">要移除的 <see cref="T:System.Data.OracleClient.OracleParameter" /> 对象的名称。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.SyncRoot">
      <summary>获取可用于同步对 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的访问的对象。</summary>
      <returns>可用于同步对 <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> 的访问的对象。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermission">
      <summary>启用用于 Oracle 的 .NET Framework 数据提供程序，以帮助确保用户具有足够的安全级别来访问 Oracle 数据库。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>用 <see cref="T:System.Security.Permissions.PermissionState" /> 值之一初始化 <see cref="T:System.Data.OracleClient.OraclePermission" /> 类的新实例。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>创建一组新的权限。</summary>
      <param name="connectionString">连接字符串。</param>
      <param name="restrictions">关键限制。</param>
      <param name="behavior">
        <see cref="T:System.Data.KeyRestrictionBehavior" /> 枚举之一。</param>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermission.AllowBlankPassword">
      <summary>获取一个值，该值指示是否允许使用空白密码。</summary>
      <returns>如果允许使用空白密码，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Copy">
      <returns>当前权限对象的副本。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.FromXml(System.Security.SecurityElement)">
      <param name="securityElement">
        <see cref="System.Security.SecurityElement" /> 表达式。</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Intersect(System.Security.IPermission)">
      <returns>一个新权限，它表示当前权限与指定权限的交集。   如果交集为空，则此新权限为 null。</returns>
      <param name="target">要与当前权限相交的权限。   它必须与当前权限属于同一类型。</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsSubsetOf(System.Security.IPermission)">
      <returns>如果当前权限是指定权限的子集，则为 true；否则为 false。</returns>
      <param name="target">将要测试子集关系的权限。   此权限必须与当前权限属于同一类型。</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsUnrestricted">
      <summary>返回一个值，该值指示在不了解权限语义的情况下是否可以将权限表示为无限制。</summary>
      <returns>如果可以将权限表示为无限制，则为 true。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.ToXml">
      <summary>创建安全对象及其当前状态的 XML 编码。</summary>
      <returns>安全对象的 XML 编码，包括任何状态信息。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Union(System.Security.IPermission)">
      <returns>一个新权限，它表示当前权限与指定权限的并集。</returns>
      <param name="target">
        <see cref="System.Security.IPermission" /> 表达式。</param>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermissionAttribute">
      <summary>将某安全操作与自定义安全特性相关联。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>初始化 <see cref="T:System.Data.OracleClient.OraclePermissionAttribute" /> 类的新实例。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一，它表示使用声明性安全可执行的操作。</param>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.AllowBlankPassword">
      <summary>获取或设置一个值，该值指示是否允许使用空白密码。</summary>
      <returns>如果允许使用空白密码，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.ConnectionString">
      <summary>获取或设置允许的连接字符串。</summary>
      <returns>允许的连接字符串。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.CreatePermission">
      <summary>返回一个根据特性属性配置的 <see cref="T:System.Data.OracleClient.OraclePermission" /> 对象。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OraclePermission" /> 对象。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior">
      <summary>标识由 <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions" /> 属性标识的连接字符串参数列表是否是仅有的被允许的连接字符串参数。</summary>
      <returns>
        <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior" /> 值之一。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions">
      <summary>获取或设置允许或不允许的连接字符串参数。</summary>
      <returns>允许或不允许的一个和多个连接字符串参数。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeConnectionString">
      <summary>标识特性是否应序列化连接字符串。</summary>
      <returns>如果特性应序列化连接字符串，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>标识特性是否应序列化键限制集合。</summary>
      <returns>如果特性应序列化键限制集合，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleRowUpdatedEventArgs">
      <summary>为 <see cref="E:System.Data.OracleClient.OracleDataAdapter.RowUpdated" /> 事件提供数据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>初始化 <see cref="T:System.Data.OracleClient.OracleRowUpdatedEventArgs" /> 类的新实例。</summary>
      <param name="row">通过 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 发送的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="command">当调用 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 时执行的 <see cref="T:System.Data.IDbCommand" />。</param>
      <param name="statementType">
        <see cref="T:System.Data.StatementType" /> 值之一，该值指定所执行的查询的类型。</param>
      <param name="tableMapping">通过 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 发送的 <see cref="T:System.Data.Common.DataTableMapping" />。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleRowUpdatedEventArgs.Command">
      <summary>获取或设置当调用 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 时执行的 <see cref="T:System.Data.OracleClient.OracleCommand" />。</summary>
      <returns>当调用 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 时执行的 <see cref="T:System.Data.OracleClient.OracleCommand" />。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleRowUpdatedEventHandler">
      <summary>表示将要处理 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 的 <see cref="E:System.Data.OracleClient.OracleDataAdapter.RowUpdated" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Data.OracleClient.OracleRowUpdatedEventArgs" />。</param>
    </member>
    <member name="T:System.Data.OracleClient.OracleRowUpdatingEventArgs">
      <summary>为 <see cref="E:System.Data.OracleClient.OracleDataAdapter.RowUpdating" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>初始化 <see cref="T:System.Data.OracleClient.OracleRowUpdatingEventArgs" /> 类的新实例。</summary>
      <param name="row">要更新的 <see cref="T:System.Data.DataRow" />。</param>
      <param name="command">要在更新过程中执行的 <see cref="T:System.Data.IDbCommand" />。</param>
      <param name="statementType">
        <see cref="T:System.Data.StatementType" /> 值之一，该值指定所执行的查询的类型。</param>
      <param name="tableMapping">通过更新发送的 <see cref="T:System.Data.Common.DataTableMapping" />。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleRowUpdatingEventArgs.Command">
      <summary>获取或设置进行 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 时执行的 <see cref="T:System.Data.OracleClient.OracleCommand" />。</summary>
      <returns>进行 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 时要执行的 <see cref="T:System.Data.OracleClient.OracleCommand" />。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleRowUpdatingEventHandler">
      <summary>表示将要处理 <see cref="T:System.Data.OracleClient.OracleDataAdapter" /> 的 <see cref="E:System.Data.OracleClient.OracleDataAdapter.RowUpdating" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Data.OracleClient.OracleRowUpdatingEventArgs" />。</param>
    </member>
    <member name="T:System.Data.OracleClient.OracleString">
      <summary>表示要存储在数据库中或从数据库中检索的字符的可变长度流。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Data.OracleClient.OracleString" /> 类的新实例，并指定要存储的字符串。</summary>
      <param name="s">要存储的字符串。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.CompareTo(System.Object)">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleString" /> 的此实例与所提供的对象进行比较，并返回其相对值的指示值。</summary>
      <returns>一个有符号的数字，它指示该实例和对象的相对值。 返回值 Condition 小于零 此实例小于对象。 零 此实例等于对象。 大于零 此实例大于对象 - 或 - 对象是 null 引用 (Nothing)</returns>
      <param name="obj">要比较的对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.Concat(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>串连两个指定的 <see cref="T:System.Data.OracleClient.OracleString" /> 结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleString" />，它包含表示两个 <see cref="T:System.Data.OracleClient.OracleString" /> 参数内容的新连接的值。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleString.Empty">
      <summary>表示可分配给 <see cref="T:System.Data.OracleClient.OracleString" /> 结构实例的 <see cref="P:System.Data.OracleClient.OracleString.Value" /> 属性的空字符串。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.Equals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数执行逻辑比较，以确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleString" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.Equals(System.Object)">
      <summary>将提供的对象参数与 <see cref="T:System.Data.OracleClient.OracleString" /> 对象的 <see cref="P:System.Data.OracleClient.OracleString.Value" /> 属性进行比较。</summary>
      <returns>如果对象是 <see cref="T:System.Data.OracleClient.OracleString" /> 的实例并且两者相等，则相等比较将返回 true；否则返回 false。</returns>
      <param name="value">要比较的对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.GetHashCode">
      <summary>获取此实例的哈希代码。</summary>
      <returns>32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数执行逻辑比较，以确定第一个操作数是否大于第二个操作数。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleString" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数执行逻辑比较，以确定第一个操作数是否大于或等于第二个操作数。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleString" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleString.IsNull">
      <summary>指示 <see cref="T:System.Data.OracleClient.OracleString" /> 的 <see cref="P:System.Data.OracleClient.OracleString.Value" /> 是否为 <see cref="F:System.Data.OracleClient.OracleString.Null" />。</summary>
      <returns>如果 <see cref="P:System.Data.OracleClient.OracleString.Value" /> 是 <see cref="F:System.Data.OracleClient.OracleString.Null" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleString.Item(System.Int32)">
      <summary>从 Value 属性获取单字节，该属性位于整数参数 <paramref name="index" /> 指示的位置。</summary>
      <returns>位于整数参数指示的位置的字节。</returns>
      <param name="index">要检索的字节的位置。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleString.Length">
      <summary>获取存储在此 <see cref="T:System.Data.OracleClient.OracleString" /> 结构中的字符串的长度。</summary>
      <returns>所存储的字符串的长度。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数执行逻辑比较，以确定第一个操作数是否小于第二个操作数。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleString" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数执行逻辑比较，以确定第一个操作数是否小于或等于第二个操作数。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleString" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.NotEquals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数执行逻辑比较，确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleString" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleString.Null">
      <summary>表示可分配给 <see cref="T:System.Data.OracleClient.OracleString" /> 结构实例的 <see cref="P:System.Data.OracleClient.OracleString.Value" /> 属性的 null 值。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_Addition(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>串连两个指定的 <see cref="T:System.Data.OracleClient.OracleString" /> 结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleString" />，它包含表示两个 <see cref="T:System.Data.OracleClient.OracleString" /> 参数内容的新连接的值。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_Equality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数执行逻辑比较，以确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleString" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_Explicit(System.Data.OracleClient.OracleString)~System.String">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleString" /> 转换为 <see cref="T:System.String" />。</summary>
      <returns>一个 String，它的内容与 OracleString 参数的 <see cref="P:System.Data.OracleClient.OracleString.Value" /> 属性相同。</returns>
      <param name="x">要转换的 OracleString。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数执行逻辑比较，以确定第一个操作数是否大于第二个操作数。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleString" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数执行逻辑比较，以确定第一个操作数是否大于或等于第二个操作数。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleString" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_Implicit(System.String)~System.Data.OracleClient.OracleString">
      <summary>将 <see cref="T:System.String" /> 参数转换为 <see cref="T:System.Data.OracleClient.OracleString" />。</summary>
      <returns>OracleString，它包含指定 String 的值。</returns>
      <param name="s">要转换的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_Inequality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数执行逻辑比较，以确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleString" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数执行逻辑比较，以确定第一个操作数是否小于第二个操作数。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleString" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleString" /> 操作数执行逻辑比较，以确定第一个操作数是否小于或等于第二个操作数。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleString" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleString" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.ToString">
      <summary>将 OracleString 对象转换为 String。</summary>
      <returns>与此 OracleString 结构具有相同值的 String。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleString.Value">
      <summary>获取存储在此 <see cref="T:System.Data.OracleClient.OracleString" /> 结构中的字符串。</summary>
      <returns>存储的字符串。 此属性是只读的。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleTimeSpan">
      <summary>表示时间间隔，并且对应于 Oracle 9i INTERVAL DAY TO SECOND 数据类型。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.Data.OracleClient.OracleTimeSpan)">
      <summary>从现有 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构中初始化新结构。</summary>
      <param name="from">一个现有的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构，可从中创建新结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>将新的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构初始化为指定的小时数、分钟数和秒数。</summary>
      <param name="hours">小时数。</param>
      <param name="minutes">分钟数。</param>
      <param name="seconds">秒数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">该参数指定一个小于 <see cref="F:System.Data.OracleClient.OracleTimeSpan.MinValue" /> 或大于 <see cref="F:System.Data.OracleClient.OracleTimeSpan.MaxValue" /> 的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 值。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>将新的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 初始化为指定的天数、小时数、分钟数和秒数。</summary>
      <param name="days">天数。</param>
      <param name="hours">小时数。</param>
      <param name="minutes">分钟数。</param>
      <param name="seconds">秒数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">该参数指定一个小于 <see cref="F:System.Data.OracleClient.OracleTimeSpan.MinValue" /> 或大于 <see cref="F:System.Data.OracleClient.OracleTimeSpan.MaxValue" /> 的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 值。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>将新的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构初始化为指定的天数、小时数、分钟数、秒数和毫秒数。</summary>
      <param name="days">天数。</param>
      <param name="hours">小时数。</param>
      <param name="minutes">分钟数。</param>
      <param name="seconds">秒数。</param>
      <param name="milliseconds">毫秒数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">该参数指定一个小于 <see cref="F:System.Data.OracleClient.OracleTimeSpan.MinValue" /> 或大于 <see cref="F:System.Data.OracleClient.OracleTimeSpan.MaxValue" /> 的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 值。</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.Int64)">
      <summary>将新的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构初始化为指定的刻度数。</summary>
      <param name="ticks">以 100 毫微秒为单位表示的时间段。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.TimeSpan)">
      <summary>用指定的 <see cref="T:System.TimeSpan" /> 初始化 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构的新实例。</summary>
      <param name="ts">指定的 <see cref="T:System.TimeSpan" />。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.CompareTo(System.Object)">
      <summary>将此 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构与所提供的对象进行比较，并返回其相对值的指示。</summary>
      <returns>有符号的数，指示此 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构的实例和对象的相对值。 返回值 Condition 小于零 此实例小于该对象。 零 此实例等于该对象。 大于零 此实例大于该对象，或者该对象为空引用（Visual Basic 中的 Nothing）。</returns>
      <param name="obj">要比较的对象。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Days">
      <summary>获取由此实例表示的整天数。</summary>
      <returns>此实例的天数部分。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.Equals(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <returns>如果两个值相等，则为 true；否则为 false。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.Equals(System.Object)">
      <summary>将提供的对象参数与 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 对象的 <see cref="P:System.Data.OracleClient.OracleTimeSpan.Value" /> 属性进行比较。</summary>
      <returns>如果对象是 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的实例并且两者相等，则为 true；否则为 false。</returns>
      <param name="value">要比较的对象。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.GetHashCode">
      <summary>获取此实例的哈希代码。</summary>
      <returns>32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.GreaterThan(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.GreaterThanOrEqual(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的两个实例进行比较，以确定第一个实例是否大于或等于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Hours">
      <summary>获取由此实例表示的整小时数。</summary>
      <returns>此实例的小时部分，在 0 和 23 之间。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.IsNull">
      <summary>获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构的 <see cref="P:System.Data.OracleClient.OracleTimeSpan.Value" /> 属性是否为 null。</summary>
      <returns>如果 <see cref="P:System.Data.OracleClient.OracleTimeSpan.Value" /> 为空，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.LessThan(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.LessThanOrEqual(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleTimeSpan.MaxValue">
      <summary>表示 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构的最大有效日期值。</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Milliseconds">
      <summary>获取由此实例表示的整毫秒数。</summary>
      <returns>此实例的毫秒部分，在 0 和 999 之间。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Minutes">
      <summary>获取由此实例表示的整分钟数。</summary>
      <returns>此实例的分钟部分，在 0 和 59 之间。</returns>
    </member>
    <member name="F:System.Data.OracleClient.OracleTimeSpan.MinValue">
      <summary>表示 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构的最小有效日期值。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.NotEquals(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的两个实例执行逻辑比较，确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
    </member>
    <member name="F:System.Data.OracleClient.OracleTimeSpan.Null">
      <summary>表示可分配给 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构实例的 <see cref="P:System.Data.OracleClient.OracleTimeSpan.Value" /> 属性的 null 值。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_Equality(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>对两个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构执行逻辑比较，以确定它们是否相等。</summary>
      <returns>如果两个值相等，则为 true；否则为 false。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_Explicit(System.Data.OracleClient.OracleTimeSpan)~System.TimeSpan">
      <summary>将 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构转换为 <see cref="T:System.TimeSpan" /> 结构。</summary>
      <returns>一个 <see cref="T:System.TimeSpan" /> 结构。</returns>
      <param name="x">
        <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构，可转换为 <see cref="T:System.TimeSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_Explicit(System.String)~System.Data.OracleClient.OracleTimeSpan">
      <summary>将字符串转换为 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</returns>
      <param name="x">要转换为 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构的字符串。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_GreaterThan(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的两个实例进行比较，以确定第一个实例是否大于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_GreaterThanOrEqual(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的两个实例进行比较，以确定第一个实例是否大于或等于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例大于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_Inequality(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的两个实例执行逻辑比较，以确定它们是否相等。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，它在两个实例不相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />，在两个实例相等时为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_LessThan(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的两个实例进行比较，以确定第一个实例是否小于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_LessThanOrEqual(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>对 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的两个实例进行比较，以确定第一个实例是否小于或等于第二个实例。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleBoolean" />，如果第一个实例小于或等于第二个实例，则它为 <see cref="F:System.Data.OracleClient.OracleBoolean.True" />；否则为 <see cref="F:System.Data.OracleClient.OracleBoolean.False" />。 如果 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 的任一实例为空，则 <see cref="T:System.Data.OracleClient.OracleBoolean" /> 的 <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> 将为 <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />。</returns>
      <param name="x">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
      <param name="y">一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构。</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.Parse(System.String)">
      <summary>将日期和时间的指定的 <see cref="T:System.String" /> 表示形式转换为其等效的 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 形式。</summary>
      <returns>一个 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构，它等于指定的 String 表示的日期和时间。</returns>
      <param name="s">要分析的 String。</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Seconds">
      <summary>获取由此实例表示的整秒数。</summary>
      <returns>此实例的秒部分，在 0 和 59 之间。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.ToString">
      <summary>将此 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构转换为 <see cref="T:System.String" />。</summary>
      <returns>一个 String，它表示此 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构的 <see cref="P:System.Data.OracleClient.OracleTimeSpan.Value" /> 属性。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Value">
      <summary>获取 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构的值。</summary>
      <returns>此 <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 结构的值。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleTransaction">
      <summary>表示要在数据库中生成的事务。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleTransaction.Commit">
      <summary>提交 SQL 数据库事务。</summary>
      <exception cref="T:System.Exception">尝试提交事务时出错。</exception>
      <exception cref="T:System.InvalidOperationException">事务已提交或回滚。 - 或 - 连接已断开。</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleTransaction.Connection">
      <summary>指定与该事务关联的 <see cref="T:System.Data.OracleClient.OracleConnection" /> 对象。</summary>
      <returns>与该事务关联的 <see cref="T:System.Data.OracleClient.OracleConnection" /> 对象。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTransaction.IsolationLevel">
      <summary>指定该事务的 <see cref="T:System.Data.IsolationLevel" />。</summary>
      <returns>该事务的 <see cref="T:System.Data.IsolationLevel" />。 默认值为 ReadCommitted。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTransaction.Rollback">
      <summary>从挂起状态回滚事务。</summary>
      <exception cref="T:System.Exception">尝试提交事务时出错。</exception>
      <exception cref="T:System.InvalidOperationException">事务已提交或回滚。 - 或 - 连接已断开。</exception>
    </member>
    <member name="T:System.Data.OracleClient.OracleType">
      <summary>指定字段或属性的数据类型，以用于 <see cref="T:System.Data.OracleClient.OracleParameter" />。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.BFile">
      <summary>Oracle BFILE 数据类型，它包含存储在外部文件中的最大为 4 GB 的二进制数据的引用。 使用具有 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 属性的 OracleClient <see cref="T:System.Data.OracleClient.OracleBFile" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Blob">
      <summary>包含二进制数据的 Oracle BLOB 数据类型，其最大大小为 4 GB。 使用 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中的 OracleClient <see cref="T:System.Data.OracleClient.OracleLob" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Byte">
      <summary>整型，表示值介于 0 到 255 之间的无符号 8 位整数。 这不是本机的 Oracle 数据类型，但是提供此类型以提高绑定输入参数时的性能。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.Byte" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Char">
      <summary>Oracle CHAR 数据类型，它包含最大为 2,000 字节的定长字符串。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.String" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Clob">
      <summary>包含字符数据的 Oracle CLOB 数据类型，根据服务器的默认字符集，其最大大小为 4 GB。 使用 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中的 OracleClient <see cref="T:System.Data.OracleClient.OracleLob" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Cursor">
      <summary>Oracle REF CURSOR。 <see cref="T:System.Data.OracleClient.OracleDataReader" /> 对象不可用。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.DateTime">
      <summary>Oracle DATE 数据类型，它包含固定长度的日期和时间表示形式，范围从公元前 4712 年 1 月 1 日到公元 4712 年 12 月 31 日默认格式为 dd-mmm-yy。 对于公元日期，DATE 将映射到 <see cref="T:System.DateTime" />。 要绑定公元前的日期，请分别对输入和输出参数使用 String 参数和 Oracle TO_DATE 或 TO_CHAR 转换函数。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.DateTime" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Double">
      <summary>一个双精度浮点值。 这不是本机的 Oracle 数据类型，但是提供此类型以提高绑定输入参数时的性能。 有关从 Oracle 数值转换为公共语言运行时 (CLR) 数据类型的信息，请参见 <see cref="T:System.Data.OracleClient.OracleNumber" />。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.Double" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Float">
      <summary>单精度浮点值。 这不是本机的 Oracle 数据类型，但是提供此类型以提高绑定输入参数时的性能。 有关从 Oracle 数值转换到公共语言运行时数据类型的信息，请参见 <see cref="T:System.Data.OracleClient.OracleNumber" />。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.Single" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Int16">
      <summary>整型，表示值介于 -32768 到 32767 之间的有符号 16 位整数。 这不是本机的 Oracle 数据类型，但是提供此类型以提高绑定输入参数时的性能。 有关从 Oracle 数值转换为公共语言运行时 (CLR) 数据类型的信息，请参见 <see cref="T:System.Data.OracleClient.OracleNumber" />。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.Int16" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Int32">
      <summary>整型，表示值介于 -2147483648 到 2147483647 之间的有符号 32 位整数。 这不是本机 Oracle 数据类型，但是提供此类型是为了提高绑定输入参数时的性能。 有关从 Oracle 数值转换到公共语言运行时数据类型的信息，请参见 <see cref="T:System.Data.OracleClient.OracleNumber" />。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.Int32" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.IntervalDayToSecond">
      <summary>Oracle INTERVAL DAY TO SECOND 数据类型（Oracle 9i 或更高版本），它包含以天、小时、分钟和秒为计量单位的时间间隔，大小固定，为 11 字节。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.TimeSpan" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.IntervalYearToMonth">
      <summary>Oracle INTERVAL YEAR TO MONTH 数据类型（Oracle 9i 或更高版本），它包含以年和月为单位的时间间隔，大小固定，为 5 字节。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.Int32" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.LongRaw">
      <summary>包含变长二进制数据的 Oracle LONGRAW 数据类型，其最大大小为 2 GB。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework Byte[] 或 OracleClient <see cref="T:System.Data.OracleClient.OracleBinary" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.LongVarChar">
      <summary>Oracle LONG 数据类型，它包含最大为 2 GB 的变长字符串。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.String" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.NChar">
      <summary>Oracle NCHAR 数据类型，它包含要存储在数据库的区域字符集中的定长字符串，存储在数据库中时最大大小为 2,000 字节（不是字符）。 值的大小取决于数据库的区域字符集。 有关更多信息，请参见 Oracle 文档。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.String" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.NClob">
      <summary>Oracle NCLOB 数据类型，它包含要存储在数据库的区域字符集中的字符数据，存储在数据库中时最大大小为 4 GB（不是字符）。 值的大小取决于数据库的区域字符集。 有关更多信息，请参见 Oracle 文档。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.String" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Number">
      <summary>Oracle NUMBER 数据类型，它包含最大精度和小数位数为 38 的变长数值数据。 该数据类型将映射到 <see cref="T:System.Decimal" />。 若要绑定超出 <see cref="F:System.Decimal.MaxValue" /> 可包含的大小的 Oracle NUMBER，请使用 <see cref="T:System.Data.OracleClient.OracleNumber" /> 数据类型，或为输入参数和输出参数分别使用 String 参数和 Oracle TO_NUMBER 或 TO_CHAR 转换函数。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.Decimal" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.NVarChar">
      <summary>Oracle NVARCHAR2 数据类型，它包含数据库的区域字符集中存储的变长字符串，存储在数据库中时最大大小为 4,000 字节（不是字符）。 值的大小取决于数据库的区域字符集。 有关更多信息，请参见 Oracle 文档。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.String" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Raw">
      <summary>Oracle RAW 数据类型，它包含最大为 2,000 字节的变长二进制数据。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework Byte[] 或 OracleClient <see cref="T:System.Data.OracleClient.OracleBinary" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.RowId">
      <summary>Oracle ROWID 数据类型的 base64 字符串表示形式。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.String" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.SByte">
      <summary>整型，表示值介于 -128 到 127 之间的有符号 8 位整数。 这不是本机的 Oracle 数据类型，但是提供此类型以提高绑定输入参数时的性能。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.SByte" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Timestamp">
      <summary>Oracle TIMESTAMP（Oracle 9i 或更高版本），它包含日期和时间（包括秒），大小范围从 7 字节到 11 字节。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.DateTime" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.TimestampLocal">
      <summary>Oracle TIMESTAMP WITH LOCAL TIMEZONE（Oracle 9i 或更高版本），它包含日期、时间和对原始时区的引用，大小范围从 7 字节到 11 字节。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.DateTime" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.TimestampWithTZ">
      <summary>Oracle TIMESTAMP WITH TIMEZONE（Oracle 9i 或更高版本），它包含日期、时间和指定时区，大小固定，为 13 字节。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.DateTime" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.UInt16">
      <summary>整型，表示值介于 0 到 65535 之间的无符号 16 位整数。 这不是本机的 Oracle 数据类型，但是提供此类型以提高绑定输入参数时的性能。 有关从 Oracle 数值转换为公共语言运行时 (CLR) 数据类型的信息，请参见 <see cref="T:System.Data.OracleClient.OracleNumber" />。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.UInt16" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.UInt32">
      <summary>整型，表示值介于 0 到 4294967295 之间的无符号 32 位整数。 这不是本机的 Oracle 数据类型，但是提供此类型以提高绑定输入参数时的性能。 有关从 Oracle 数值转换为公共语言运行时 (CLR) 数据类型的信息，请参见 <see cref="T:System.Data.OracleClient.OracleNumber" />。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.UInt32" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> 数据类型。</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.VarChar">
      <summary>Oracle VARCHAR2 数据类型，它包含最大为 4,000 字节的变长字符串。 在 <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> 中使用 .NET Framework <see cref="T:System.String" /> 或 OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> 数据类型。</summary>
    </member>
  </members>
</doc>