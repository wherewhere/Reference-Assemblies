<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Workflow.ComponentModel</name>
  </assembly>
  <members>
    <member name="T:System.Workflow.ComponentModel.Activity">
      <summary>表示工作流的基本构造块。 <see cref="T:System.Workflow.ComponentModel.Activity" /> 是所有活动的基类。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Activity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Activity" /> 类的新实例，同时初始化 <see cref="P:System.Workflow.ComponentModel.Activity.Name" />。</summary>
      <param name="name">与此实例关联的名称。 名称必须符合工作流项目中使用的编程语言的变量命名规则，并且在工作流中必须是唯一的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="F:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty">
      <summary>
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />，表示与 <see cref="T:System.Workflow.ComponentModel.Activity" /> 关联的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 的 <see cref="T:System.Guid" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>由工作流运行时调用，用于取消当前正在运行的活动执行。</summary>
      <returns>操作结束时的状态，确定是将活动保留在取消状态，还是将其转换为关闭状态。</returns>
      <param name="executionContext">包含要取消的实例的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
    </member>
    <member name="E:System.Workflow.ComponentModel.Activity.Canceling">
      <summary>在取消活动执行时发生。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Activity.CancelingEvent">
      <summary>表示针对 <see cref="E:System.Workflow.ComponentModel.Activity.Canceling" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Clone">
      <summary>创建 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的深层副本。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Activity" /> 的深层副本。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.ComponentModel.Activity.Closed">
      <summary>在 <see cref="T:System.Workflow.ComponentModel.Activity" /> 完成执行时发生。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Activity.ClosedEvent">
      <summary>表示针对 <see cref="E:System.Workflow.ComponentModel.Activity.Closed" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Activity.Compensating">
      <summary>在 <see cref="T:System.Workflow.ComponentModel.Activity" /> 上运行补偿方法时发生。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Activity.CompensatingEvent">
      <summary>表示针对 <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.Description">
      <summary>获取或设置 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的用户定义说明。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Activity" /> 的文本说明。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.Enabled">
      <summary>获取或设置一个值，该值指示是否启用此实例以供执行和验证。</summary>
      <returns>如果允许执行和验证，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>由工作流运行时调用，用于执行活动。</summary>
      <returns>运行任务的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />，确定活动是保留执行状态，还是转换为关闭状态。</returns>
      <param name="executionContext">与此 <see cref="T:System.Workflow.ComponentModel.Activity" /> 和执行关联的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
    </member>
    <member name="E:System.Workflow.ComponentModel.Activity.Executing">
      <summary>在运行 <see cref="T:System.Workflow.ComponentModel.Activity" /> 时发生。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Activity.ExecutingEvent">
      <summary>表示针对 <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />，该事件在执行活动时发生。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.ExecutionResult">
      <summary>获取最后一次尝试运行此实例产生的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" />。</summary>
      <returns>最后一次尝试运行此实例产生的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.ExecutionStatus">
      <summary>获取此实例的当前 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。</summary>
      <returns>此实例的当前 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。</returns>
    </member>
    <member name="E:System.Workflow.ComponentModel.Activity.Faulting">
      <summary>在实例的运行期间引发异常时发生。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Activity.FaultingEvent">
      <summary>表示 <see cref="E:System.Workflow.ComponentModel.Activity.Faulting" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)">
      <summary>返回 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的实例，其名称由此实例的根活动下（即在工作流中）运行的所有活动的集请求。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Activity" /> 的实例，其名称由此实例的根活动下运行的所有活动的集请求。</returns>
      <param name="activityQualifiedName">要搜索的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activityQualifiedID" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)">
      <summary>返回 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的实例，其名称被此实例的根 <see cref="T:System.Workflow.ComponentModel.Activity" /> 下的所有活动的集（如果第二个参数为 false）和当前 <see cref="T:System.Workflow.ComponentModel.Activity" /> 下的所有活动的集（如果第二个参数为 true）请求。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Activity" /> 的实例，其名称被此实例的根 <see cref="T:System.Workflow.ComponentModel.Activity" /> 下的所有活动的集（如果第二个参数为 false）和当前 <see cref="T:System.Workflow.ComponentModel.Activity" /> 下的所有活动的集（如果第二个参数为 true）请求。</returns>
      <param name="activityQualifiedName">要搜索的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的名称。</param>
      <param name="withinThisActivityOnly">一个值，指示是否将搜索范围限制为此实例中包含的活动。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activityQualifiedID" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
      <summary>此实例的执行上下文中引发了异常时调用。</summary>
      <returns>试图取消此实例时产生的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。</returns>
      <param name="executionContext">此实例的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <param name="exception">导致此错误的 <see cref="T:System.Exception" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="executionContext" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="executionContext" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)">
      <summary>由工作流运行时调用，用于在构造新的工作流实例期间初始化活动。 此方法在构造动态 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 期间调用。</summary>
      <param name="provider">提供初始化服务的 <see cref="T:System.IServiceProvider" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)">
      <summary>订阅 <see cref="T:System.EventHandler" /> 并调用该委托。</summary>
      <param name="handler">要调用的 <see cref="T:System.EventHandler" />。</param>
      <param name="e">要与此事件关联的 <see cref="T:System.EventArgs" /></param>
      <typeparam name="T">指定的类型。</typeparam>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)">
      <summary>Subscribes an <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" /> and invokes that delegate.</summary>
      <param name="eventListener">要调用的 <see cref="T:System.Workflow.ComponentModel.IActivityEventListener`1" />。</param>
      <param name="e">要与此事件关联的 <see cref="T:System.EventArgs" /></param>
      <typeparam name="T">指定的类型。</typeparam>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity">
      <summary>获取有关活动是否在工作流实例的默认 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 中执行的信息。</summary>
      <returns>如果在工作流实例的默认 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 中执行活动，则返回 false；否则返回 true。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)">
      <summary>从 <see cref="T:System.IO.Stream" /> 加载 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的实例。</summary>
      <returns>来自 <see cref="T:System.IO.Stream" /> 的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的实例。</returns>
      <param name="stream">从中执行加载的 <see cref="T:System.IO.Stream" />。</param>
      <param name="outerActivity">拥有反序列化的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的上下文的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)">
      <summary>使用用于反序列化的自定义 <see cref="T:System.Runtime.Serialization.IFormatter" />，从 <see cref="T:System.IO.Stream" /> 加载 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的实例。</summary>
      <returns>来自 <see cref="T:System.IO.Stream" /> 的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的实例。</returns>
      <param name="stream">加载操作的目标 <see cref="T:System.IO.Stream" />。</param>
      <param name="outerActivity">拥有反序列化的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的上下文的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <param name="formatter">用于从 <see cref="T:System.IO.Stream" /> 进行读取的 <see cref="T:System.Runtime.Serialization.IFormatter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.Name">
      <summary>获取或设置此实例的名称。 此名称必须符合工作流项目中使用的编程语言的变量命名规则。</summary>
      <returns>此实例的名称。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)">
      <summary>每当加载 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 时，由工作流运行时调用。 例如，在创建 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 期间，以及每次在从持久性存储区中加载工作流实例期间重建 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 时，会调用此方法。</summary>
      <param name="provider">提供服务的 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)">
      <summary>每当卸载 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 时，由工作流运行时调用。 例如，在完成 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 期间，以及每次在保留工作流实例期间卸载 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 时，会调用此方法。</summary>
      <param name="provider">提供服务的 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)">
      <summary>作为活动向 Closed 状态转换的一部分，由工作流运行时调用。</summary>
      <param name="provider">提供服务的 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.Parent">
      <summary>获取包含此 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />。</summary>
      <returns>作为此 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的父级的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.QualifiedName">
      <summary>获取活动的限定名。 活动的限定名在工作流实例中始终是唯一的。</summary>
      <returns>实例的限定名。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)">
      <summary>引发与指定依赖项属性关联的 <see cref="F:System.Reflection.MemberTypes.Event" />。</summary>
      <param name="dependencyEvent">与此 <see cref="F:System.Reflection.MemberTypes.Event" /> 关联的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <param name="sender">
        <see cref="F:System.Reflection.MemberTypes.Event" /> 的 <see cref="T:System.Object" /> 源。</param>
      <param name="e">与 <see cref="F:System.Reflection.MemberTypes.Event" /> 关联的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)">
      <summary>引发与引用的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 关联的事件。</summary>
      <param name="dependencyEvent">与此 <see cref="F:System.Reflection.MemberTypes.Event" /> 关联的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <param name="sender">事件的 <see cref="T:System.Object" /> 源。</param>
      <param name="e">与 <see cref="F:System.Reflection.MemberTypes.Event" /> 关联的 <see cref="T:System.EventArgs" />。</param>
      <typeparam name="T">指定的类型。</typeparam>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})">
      <summary>为状态更改事件注册指定的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <param name="dependencyProp">要注册的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <param name="activityStatusChangeListener">实现用于此注册的事件侦听器接口的对象。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dependencyProp" /> 不是以下之一： <see cref="F:System.Workflow.ComponentModel.Activity.ExecutingEvent" /><see cref="F:System.Workflow.ComponentModel.Activity.CancelingEvent" /><see cref="F:System.Workflow.ComponentModel.Activity.ClosedEvent" /><see cref="F:System.Workflow.ComponentModel.Activity.CompensatingEvent" /><see cref="F:System.Workflow.ComponentModel.Activity.FaultingEvent" /><see cref="F:System.Workflow.ComponentModel.Activity.StatusChangedEvent" /></exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)">
      <summary>将 <see cref="T:System.Workflow.ComponentModel.Activity" /> 写入到 <see cref="T:System.IO.Stream" /> 以便进行保留。</summary>
      <param name="stream">
        <see cref="T:System.Workflow.ComponentModel.Activity" /> 将保存到的 <see cref="T:System.IO.Stream" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)">
      <summary>使用为序列化提供的自定义 <see cref="T:System.Runtime.Serialization.IFormatter" /> 将 <see cref="T:System.Workflow.ComponentModel.Activity" /> 写入到 <see cref="T:System.IO.Stream" />，以便进行保留。</summary>
      <param name="stream">保存操作的目标 <see cref="T:System.IO.Stream" />。</param>
      <param name="formatter">用于序列化的二进制或自定义 <see cref="T:System.Runtime.Serialization.IFormatter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException">此实例处于设计模式。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.ComponentModel.Activity.StatusChanged">
      <summary>在运行中的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> 更改时发生。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Activity.StatusChangedEvent">
      <summary>表示针对 <see cref="E:System.Workflow.ComponentModel.Activity.StatusChanged" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.ToString">
      <summary>提供表示此实例的字符串。</summary>
      <returns>此实例。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)">
      <summary>向运行时跟踪基础结构通知有关挂起跟踪的信息。</summary>
      <param name="userData">包含跟踪信息的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userData" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)">
      <summary>向运行时跟踪基础结构通知有关挂起跟踪的信息。</summary>
      <param name="userDataKey">指向已更改的用户数据的键。</param>
      <param name="userData">包含跟踪信息的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userData" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)">
      <summary>当在派生类中重写时，为活动提供由服务提供程序执行的反初始化。</summary>
      <param name="provider">提供服务的 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})">
      <summary>注销状态更改事件的指定 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <param name="dependencyProp">要注销的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <param name="activityStatusChangeListener">实现用于此注册的事件侦听器接口的对象。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dependencyProp" /> 不是以下之一： <see cref="F:System.Workflow.ComponentModel.Activity.ExecutingEvent" /><see cref="F:System.Workflow.ComponentModel.Activity.CancelingEvent" /><see cref="F:System.Workflow.ComponentModel.Activity.ClosedEvent" /><see cref="F:System.Workflow.ComponentModel.Activity.CompensatingEvent" /><see cref="F:System.Workflow.ComponentModel.Activity.FaultingEvent" /><see cref="F:System.Workflow.ComponentModel.Activity.StatusChangedEvent" /></exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId">
      <summary>获取与实例关联的 <see cref="T:System.Guid" />。</summary>
      <returns>与实例关联的 <see cref="T:System.Guid" />。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityBind">
      <summary>将活动的属性绑定到属性、字段、索引器、方法、事件或其他活动的属性。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.#ctor(System.String)">
      <summary>使用 <paramref name="name" /> 参数初始化 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 类的新实例。</summary>
      <param name="name">
        <see cref="T:System.Workflow.ComponentModel.Activity" /> 的名称。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.#ctor(System.String,System.String)">
      <summary>使用 <paramref name="name" /> 和 <paramref name="path" /> 参数初始化 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 类的新实例。</summary>
      <param name="name">
        <see cref="T:System.Workflow.ComponentModel.Activity" /> 的名称。</param>
      <param name="path">新的 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的路径。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue(System.Workflow.ComponentModel.Activity)">
      <summary>获取表示此 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的运行时值的 <see cref="T:System.Object" />。</summary>
      <returns>表示此 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的运行时值的 <see cref="T:System.Object" />。</returns>
      <param name="activity">拥有此绑定的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activity" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue(System.Workflow.ComponentModel.Activity,System.Type)">
      <summary>获取表示此 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的运行时值的 <see cref="T:System.Object" />。</summary>
      <returns>表示此 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的运行时值的 <see cref="T:System.Object" />。</returns>
      <param name="activity">拥有此绑定的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <param name="targetType">对象的 <see cref="T:System.Type" /> （如果 <see cref="T:System.Delegate" />）；否则为 Null 引用（在 Visual Basic 中的 Nothing）。 <paramref name="activity" /> 为 null。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activity" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityBind.Name">
      <summary>获取或设置 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 指向的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的名称。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 指向的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的名称。</returns>
      <exception cref="T:System.Data.ReadOnlyException">在 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 未处于设计模式的情况下试图设置此值时发生。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityBind.Path">
      <summary>获取或设置目标活动的成员的路径。 该值可以使用以点分隔的表示法来指示嵌套值的路径。 例如，路径“A.B.C”表示 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 是一个名为“C”的字段或属性，该字段或属性是字段或属性“B”的成员，“B”又是字段或属性“A”的成员，而“A”是目标活动的成员。</summary>
      <returns>选定 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的相关数据项的路径。</returns>
      <exception cref="T:System.Data.ReadOnlyException">在 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 未处于设计模式的情况下试图设置此值时发生。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.ProvideValue(System.IServiceProvider)">
      <summary>返回此类的当前实例。</summary>
      <returns>此类的当前实例。</returns>
      <param name="provider">一个 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.SetRuntimeValue(System.Workflow.ComponentModel.Activity,System.Object)">
      <summary>设置运行时值。</summary>
      <param name="activity">拥有此绑定的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <param name="value">要将运行时值设置为的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activity" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityBind.ToString">
      <summary>计算并返回 <see cref="P:System.Workflow.ComponentModel.ActivityBind.Name" /> 和 <see cref="P:System.Workflow.ComponentModel.ActivityBind.Path" /> 属性字符串的组合。</summary>
      <returns>
        <see cref="P:System.Workflow.ComponentModel.ActivityBind.Name" /> 和 <see cref="P:System.Workflow.ComponentModel.ActivityBind.Path" /> 属性字符串的组合。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityBind.UserData">
      <summary>获取与此实例相关的用户数据的 <see cref="T:System.Collections.IDictionary" />。</summary>
      <returns>与此实例相关的用户数据的 <see cref="T:System.Collections.IDictionary" />。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityChangeAction">
      <summary>表示对运行中的工作流实例中 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 的建议的更改。 必须继承此类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityChangeAction.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.ActivityChangeAction" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityChangeAction.#ctor(System.Workflow.ComponentModel.CompositeActivity)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.ActivityChangeAction" /> 类的新实例，同时初始化关联的 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />。</summary>
      <param name="compositeActivity">与更改关联的 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="compositeActivity" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityChangeAction.OwnerActivityDottedPath">
      <summary>获取和设置与此实例关联的 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 的 <see cref="P:System.Workflow.ComponentModel.ActivityChangeAction.OwnerActivityDottedPath" />。</summary>
      <returns>与此实例关联的 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 的 <see cref="P:System.Workflow.ComponentModel.ActivityChangeAction.OwnerActivityDottedPath" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
      <summary>验证在目标活动上挂起的更改。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />，其中包含运行为目标活动定义的各个 <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> 后所产生的任何 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" />。</returns>
      <param name="contextActivity">要验证其更改的活动。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextActivity" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityCollection">
      <summary>对 <see cref="T:System.Workflow.ComponentModel.Activity" /> 类型的强类型 <see cref="T:System.Collections.ICollection" /> 进行建模。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> 类的新实例，同时初始化所有者 <see cref="T:System.Workflow.ComponentModel.Activity" />。</summary>
      <param name="owner">指定为拥有此实例的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="owner" /> 不是 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的子代。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)">
      <summary>将 <see cref="T:System.Workflow.ComponentModel.Activity" /> 添加到 <see cref="T:System.Collections.ICollection" />。</summary>
      <param name="item">要添加到 <see cref="T:System.Collections.ICollection" /> 的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.Clear">
      <summary>从 <see cref="T:System.Collections.ICollection" /> 中移除所有 <see cref="T:System.Workflow.ComponentModel.Activity" />。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)">
      <summary>提供 <see cref="T:System.Collections.ICollection" /> 中 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的成员资格测试。</summary>
      <returns>如果 <see cref="T:System.Workflow.ComponentModel.Activity" /> 属于 <see cref="T:System.Collections.ICollection" />，则为 true；否则为 false。</returns>
      <param name="item">要测试其成员资格的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.Count">
      <summary>获取 <see cref="T:System.Collections.ICollection" /> 的成员数。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 的成员数。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.GetEnumerator">
      <summary>实现到 <see cref="T:System.Collections.ICollection" /> 的枚举接口。</summary>
      <returns>返回可循环访问 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 实例的枚举数。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)">
      <summary>获取 <see cref="T:System.Collections.ICollection" /> 中 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的索引。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 中的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的索引。 否则为 -1（如果 <see cref="T:System.Workflow.ComponentModel.Activity" /> 不在 <see cref="T:System.Collections.ICollection" /> 中）。</returns>
      <param name="item">获取其索引的活动。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)">
      <summary>在 <see cref="T:System.Collections.ICollection" /> 中的索引位置插入项。</summary>
      <param name="index">集合中要插入项的从零开始的索引。</param>
      <param name="item">要插入到集合中的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)">
      <summary>根据索引获取或设置 <see cref="T:System.Collections.ICollection" /> 中的活动。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 的成员活动，<see cref="T:System.Collections.ICollection" /> 中该活动的索引已在调用中指定。</returns>
      <param name="index">
        <see cref="T:System.Collections.ICollection" /> 中的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</exception>
      <exception cref="T:System.NotSupportedException">设置该属性，而且 <see cref="T:System.Collections.IList" /> 为只读。</exception>
      <exception cref="T:System.Exception">尝试设置为不是 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的 <see cref="T:System.Object" />。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.String)">
      <summary>根据作为唯一键的字符串来获取 <see cref="T:System.Collections.ICollection" /> 中的活动。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 的成员 <see cref="T:System.Workflow.ComponentModel.Activity" />；在调用中指定的 <see cref="T:System.Collections.ICollection" /> 中的键。</returns>
      <param name="key">
        <see cref="T:System.Collections.ICollection" /> 中活动的唯一标识符。</param>
    </member>
    <member name="E:System.Workflow.ComponentModel.ActivityCollection.ListChanged">
      <summary>每当对此 <see cref="T:System.Collections.ICollection" /> 的内容进行更改时引发。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)">
      <summary>从 <see cref="T:System.Collections.ICollection" /> 中移除在调用中指定的活动。</summary>
      <returns>如果该操作成功，则为 true；否则为 false。</returns>
      <param name="item">要从 <see cref="T:System.Collections.ICollection" /> 移除的活动。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)">
      <summary>移除 <see cref="T:System.Collections.ICollection" /> 中位于指定的 <paramref name="index" /> 处的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</summary>
      <param name="index">要从集合中移除活动的从零开始的索引的位置。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{T}#Add(System.Workflow.ComponentModel.Activity)">
      <summary>将对象添加到位于 <see cref="T:System.Collections.IList" /> 末尾的 <see cref="T:System.Collections.IList" />。</summary>
      <param name="item">要添加到 <see cref="T:System.Collections.IList" /> 的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{T}#Clear">
      <summary>从 <see cref="T:System.Collections.IList" /> 中清除所有活动。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{T}#Contains(System.Workflow.ComponentModel.Activity)">
      <summary>获取一个值，该值指示 <see cref="T:System.Object" /> 是否是集合的成员。</summary>
      <returns>如果值在集合中，则为 true；否则为 false。</returns>
      <param name="item">要在 <see cref="T:System.Collections.IList" /> 中查找的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{T}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)">
      <summary>从特定的 <see cref="T:System.Array" /> 索引处开始，将 <see cref="T:System.Collections.ICollection" /> 的元素复制到一个 <see cref="T:System.Array" /> 中。</summary>
      <param name="array">作为复制操作的目标的 <see cref="T:System.Array" />。</param>
      <param name="arrayIndex">
        <see cref="T:System.Collections.ICollection" /> 中开始复制操作的从零开始的索引。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多维的。 <paramref name="index" /> 等于或大于 <paramref name="array" /> 的长度。 源 <see cref="T:System.Collections.ICollection" /> 中的元素数大于从 <paramref name="index" /> 到目标数组末尾的可用空间。</exception>
      <exception cref="T:System.InvalidCastException">无法自动将类型 <see cref="T:System.Workflow.ComponentModel.Activity" /> 强制转换为目标 <paramref name="array" /> 的类型。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{T}#Count">
      <summary>获取 <see cref="T:System.Collections.Generic.ICollection`1" /> 中包含的元素数。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" /> 中包含的元素个数。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否为只读。</summary>
      <returns>如果 <see cref="T:System.Collections.IList" /> 为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{T}#Remove(System.Workflow.ComponentModel.Activity)">
      <summary>从 <see cref="T:System.Collections.Generic.ICollection`1" /> 中移除特定对象的第一个匹配项。</summary>
      <returns>如果已从 <see cref="T:System.Collections.Generic.ICollection`1" /> 中成功移除 <paramref name="item" />，则为 true；否则为 false。 如果在原始 <see cref="T:System.Collections.Generic.ICollection`1" /> 中没有找到 <paramref name="item" />，该方法也会返回 false。</returns>
      <param name="item">要从 <see cref="T:System.Collections.Generic.ICollection`1" /> 中移除的对象。</param>
      <exception cref="T:System.NotSupportedException">ICollection 为只读。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>返回一个循环访问集合的枚举器。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{T}#IndexOf(System.Workflow.ComponentModel.Activity)">
      <summary>确定 <see cref="T:System.Collections.IList" /> 中特定项的索引。</summary>
      <returns>如果在列表中找到，则为 <paramref name="item" /> 的索引；否则为 -1。</returns>
      <param name="item">要在 <see cref="T:System.Collections.IList" /> 中定位的对象。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{T}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)">
      <summary>在 <see cref="T:System.Collections.IList" /> 中指定的从零开始的索引处插入 <see cref="T:System.Object" />。</summary>
      <param name="index">插入到的从零开始的位置。</param>
      <param name="item">要插入的对象。 该对象的类型必须是 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>获取或设置位于指定索引处的元素。</summary>
      <returns>位于指定索引处的 <see cref="T:System.Object" />。</returns>
      <param name="index">要获得或设置的元素从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</exception>
      <exception cref="T:System.NotSupportedException">ICollection 为只读。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>移除位于指定的 <paramref name="index" /> 处的 <see cref="T:System.Collections.IList" /> 项。</summary>
      <param name="index">要移除的项的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</exception>
      <exception cref="T:System.NotSupportedException">ICollection 为只读。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>从特定的 <see cref="T:System.Array" /> 索引处开始，将 <see cref="T:System.Collections.ICollection" /> 的元素复制到一个 <see cref="T:System.Array" /> 中。</summary>
      <param name="array">作为复制操作的目标的 <see cref="T:System.Array" />。</param>
      <param name="index">
        <see cref="T:System.Collections.ICollection" /> 中开始复制操作的从零开始的索引。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized">
      <summary>获取一个值，该值指示对 <see cref="T:System.Collections.Generic.ICollection`1" /> 的访问是否是同步的，即线程安全的。</summary>
      <returns>如果对 <see cref="T:System.Collections.Generic.ICollection`1" /> 的访问是同步的，即线程安全的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot">
      <summary>获取可用于同步对 <see cref="T:System.Collections.Generic.ICollection`1" /> 的访问的对象。</summary>
      <returns>可用于同步对 <see cref="T:System.Collections.Generic.ICollection`1" /> 的访问的对象。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回循环访问基础 <see cref="T:System.Collections.IList" /> 的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)">
      <summary>将对象添加到位于 <see cref="T:System.Collections.IList" /> 末尾的 <see cref="T:System.Collections.IList" />。</summary>
      <returns>返回 <see cref="T:System.Int32" />。 刚添加的 <see cref="T:System.Object" /> 的从零开始的索引。</returns>
      <param name="value">要添加到 <see cref="T:System.Collections.IList" /> 的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear">
      <summary>从 <see cref="T:System.Collections.ICollection" /> 中移除所有 <see cref="T:System.Workflow.ComponentModel.Activity" />。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)">
      <summary>获取一个值，该值指示 <see cref="T:System.Object" /> 是否是集合的成员。</summary>
      <returns>如果 <paramref name="value" /> 位于集合中，则返回 <see cref="T:System.Boolean" />true；否则返回 false。</returns>
      <param name="value">要在 <see cref="T:System.Collections.IList" /> 中查找的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>获取基础活动集合中 <see cref="T:System.Object" /> 的从零开始的索引。</summary>
      <returns>基础活动集合中 <paramref name="value" /> 从零开始的索引，如果在集合中未找到，则为 -1。</returns>
      <param name="value">要为其建立索引的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是 <see cref="T:System.Workflow.ComponentModel.Activity" /> 类型，异常对象包含“Error_InvalidListItem”错误消息。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>在 <see cref="T:System.Collections.IList" /> 中指定的从零开始的索引处插入 <see cref="T:System.Object" />。</summary>
      <param name="index">插入到的从零开始的位置。</param>
      <param name="value">要插入的对象。 该对象的类型必须是 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize">
      <summary>获取一个值，该值指示 <see cref="T:System.Collections.IList" /> 是否具有固定大小。</summary>
      <returns>如果 <see cref="T:System.Collections.IList" /> 具有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="T:System.Collections.Generic.ICollection`1" /> 是否为只读。</summary>
      <returns>如果 <see cref="T:System.Collections.Generic.ICollection`1" /> 为只读，则返回 <see cref="T:System.Boolean" />true；否则返回 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)">
      <summary>根据索引获取或设置 <see cref="T:System.Collections.ICollection" /> 中的活动。</summary>
      <returns>返回 <see cref="T:System.Object" />，它是 <see cref="T:System.Collections.ICollection" /> 的成员活动，<see cref="T:System.Collections.ICollection" /> 中该活动的索引已在调用中指定。</returns>
      <param name="index">
        <see cref="T:System.Collections.ICollection" /> 中的从零开始的索引。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)">
      <summary>从 <see cref="T:System.Collections.IList" /> 中移除特定对象的第一个匹配项。</summary>
      <param name="value">要从 <see cref="T:System.Collections.IList" /> 移除的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.IList" /> 为只读。 <see cref="T:System.Collections.IList" /> 具有固定大小。</exception>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction">
      <summary>表示可以在 <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> 上执行的允许操作的枚举，该枚举通常表示 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 的所有子活动的集合。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityCollectionChangeAction.Add">
      <summary>对应于将新的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 添加到 <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> 的操作的枚举数。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityCollectionChangeAction.Remove">
      <summary>对应于从 <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> 中移除 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的操作的枚举数。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityCollectionChangeAction.Replace">
      <summary>对应于替换 <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> 中的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的操作的枚举数。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs">
      <summary>表示每当 <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> 的内容发生更改时，事件处理程序用于执行自定义处理所需的信息。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.#ctor(System.Int32,System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Object,System.Workflow.ComponentModel.ActivityCollectionChangeAction)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> 类的新实例。</summary>
      <param name="index">主题 <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> 中的更改的索引。</param>
      <param name="removedItems">
        <see cref="T:System.Workflow.ComponentModel.Activity" /> 类型的强类型 <see cref="T:System.Collections.ICollection" />，其中包含每个移除的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <param name="addedItems">
        <see cref="T:System.Workflow.ComponentModel.Activity" /> 类型的强类型 <see cref="T:System.Collections.ICollection" />，其中包含每个添加的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <param name="owner">产生事件的 <see cref="T:System.Object" />。</param>
      <param name="action">与事件相对应的 <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.#ctor(System.Int32,System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Activity,System.Object,System.Workflow.ComponentModel.ActivityCollectionChangeAction)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> 类的新实例。</summary>
      <param name="index">主题 <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> 中的更改的索引。</param>
      <param name="removedActivity">已从集合中移除的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <param name="addedActivity">已添加到集合的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <param name="owner">产生事件的 <see cref="T:System.Object" />。</param>
      <param name="action">与事件相对应的 <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.Action">
      <summary>获取表示发生的更改类型的 <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" />。</summary>
      <returns>表示发生的更改类型的 <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.AddedItems">
      <summary>获取包含每个添加的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 类型的强类型 <see cref="T:System.Collections.ICollection" />。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Activity" /> 类型的强类型 <see cref="T:System.Collections.ICollection" />，其中包含每个添加的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.Index">
      <summary>获取产生事件的更改的索引。</summary>
      <returns>产生事件的更改的索引。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.Owner">
      <summary>获取产生事件的 <see cref="T:System.Object" />。</summary>
      <returns>产生事件的 <see cref="T:System.Object" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.RemovedItems">
      <summary>获取包含每个移除的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 类型的强类型 <see cref="T:System.Collections.ICollection" />。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Activity" /> 类型的强类型 <see cref="T:System.Collections.ICollection" />，其中包含每个移除的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityCondition">
      <summary>表示表达式的抽象类，该表达式的计算结果为 Boolean 值。 必须继承此类。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCondition.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.ComponentModel.ActivityCondition" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
      <summary>计算基础条件。</summary>
      <returns>计算基础表达式所得到的 Boolean。</returns>
      <param name="activity">与此条件关联的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <param name="provider">用于此条件计算的 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityExecutionContext">
      <summary>表示 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的执行环境。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity">
      <summary>获取当前在此执行上下文中执行的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</summary>
      <returns>与此执行上下文关联的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</returns>
      <exception cref="T:System.ObjectDisposedException">此实例已标记为待进行垃圾回收。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.CancelActivity(System.Workflow.ComponentModel.Activity)">
      <summary>由复合活动调用，用于计划子活动的取消。 工作流运行时禁止取消未处于 <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> 状态的子活动。</summary>
      <param name="activity">已取消的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activity" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="activity" /> 不是 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 的有效子级。 这意味着参数等于关联的 <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" />，或者参数未处于注释状态并且是与此 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 关联的 <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" /> 的子级。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 已被释放。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="activity" /> 未处于 <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> 状态。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.CloseActivity">
      <summary>向工作流运行时指示：当前正在执行的活动应转换为 <see cref="E:System.Workflow.ComponentModel.Activity.Closed" /> 状态。</summary>
      <exception cref="T:System.InvalidOperationException">关联 <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" /> 的状态不等于 <see cref="E:System.Workflow.ComponentModel.Activity.Executing" /> 或 <see cref="E:System.Workflow.ComponentModel.Activity.Canceling" /> 或 <see cref="E:System.Workflow.ComponentModel.Activity.Compensating" /> 或 <see cref="E:System.Workflow.ComponentModel.Activity.Closed" />。</exception>
      <exception cref="T:System.ObjectDisposedException">已释放的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid">
      <summary>获取关联 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的 ContextID。</summary>
      <returns>关联的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的 ContextID。</returns>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionContext.CurrentExceptionProperty">
      <summary>表示在工作流实例的执行期间发生的异常。 只有当活动处于出错状态时，此属性才会有值。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity(System.Workflow.ComponentModel.Activity)">
      <summary>由复合活动调用，用于计划子活动的执行。 工作流运行时禁止执行未处于已初始化状态的子活动。</summary>
      <param name="activity">已执行的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activity" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="activity" /> 不是 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 的有效子级。 这意味着参数等于关联的 <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" />，或者参数未处于注释状态并且是与此 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 关联的 <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" /> 的子级。</exception>
      <exception cref="T:System.InvalidOperationException">状态既不是已初始化，也不是 <see cref="E:System.Workflow.ComponentModel.Activity.Closed" />。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 已被释放。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionContext.ExecutionContextManager">
      <summary>获取与此实例关联的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" />。</summary>
      <returns>与此实例关联的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.GetService``1">
      <summary>返回指定的 <see cref="T:System.Type" /> 的服务提供程序。</summary>
      <returns>指定的 <see cref="T:System.Type" /> 的服务提供程序 <see cref="T:System.Object" />。</returns>
      <typeparam name="T">要返回其提供程序的指定类型。</typeparam>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 已被释放。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.GetService(System.Type)">
      <summary>返回指定类型的服务。</summary>
      <returns>指定的 <see cref="T:System.Type" /> 的服务 <see cref="T:System.Object" />。</returns>
      <param name="serviceType">服务的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 已被释放。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.System#IDisposable#Dispose">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData(System.Object)">
      <summary>为关联的 <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" /> 调用跟踪方法。</summary>
      <param name="userData">一个对象，它指定要跟踪的数据。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="userData" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ObjectDisposedException">如果与此实例关联的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 为空引用 (Nothing)。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData(System.String,System.Object)">
      <summary>为关联的 <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" /> 调用跟踪方法。</summary>
      <param name="userDataKey">要跟踪的 <paramref name="userData" /> 的成员。</param>
      <param name="userData">要跟踪的数据。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="userData" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ObjectDisposedException">如果与此实例关联的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 为空引用 (Nothing)。</exception>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityExecutionContextManager">
      <summary>允许 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 创建和管理其子活动的执行上下文。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>将执行上下文标记为完成。</summary>
      <param name="childContext">指定的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="childContext" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">在此实例的 <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContextManager.ExecutionContexts" /> 中不包含 <paramref name="childContext" />。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext(System.Workflow.ComponentModel.ActivityExecutionContext,System.Boolean)">
      <summary>将执行上下文标记为完成。</summary>
      <param name="childContext">指定的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <param name="forcePersist">指示是否应保留已完成执行上下文的 Boolean 值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="childContext" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">在此实例的 <see cref="P:System.Workflow.ComponentModel.ActivityExecutionContextManager.ExecutionContexts" /> 中不包含 <paramref name="childContext" />。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CreateExecutionContext(System.Workflow.ComponentModel.Activity)">
      <summary>为指定的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 创建 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</summary>
      <returns>为指定的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 所创建的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</returns>
      <param name="activity">The designated <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activity" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="activity" /> 不是此上下文所有者的有效子活动。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionContextManager.ExecutionContexts">
      <summary>表示由当前活动创建的、尚未完成的执行上下文集。</summary>
      <returns>包含与此实例关联的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 的集合。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.GetExecutionContext(System.Workflow.ComponentModel.Activity)">
      <summary>获取与指定的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 关联的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</summary>
      <returns>与指定的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 关联的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</returns>
      <param name="activity">The designated <see cref="T:System.Workflow.ComponentModel.Activity" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activity" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.GetPersistedExecutionContext(System.Guid)">
      <summary>检索与指定 <see cref="T:System.Guid" /> 对应的保留的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</summary>
      <returns>与指定 <see cref="T:System.Guid" /> 对应的保留的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</returns>
      <param name="contextGuid">指定的 <see cref="T:System.Guid" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionContextManager.PersistedExecutionContexts">
      <summary>表示由当前活动创建的、已经完成并且完成后已保留的执行上下文集。</summary>
      <returns>
        <see cref="T:System.Guid" /> 类型的集合，表示所有保留的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 的集。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityExecutionResult">
      <summary>活动结果值的枚举，该枚举限定具有 Closed 的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> 的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的状态。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionResult.Canceled">
      <summary>该活动已由取消状态转换为关闭状态。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionResult.Compensated">
      <summary>该活动已由补偿状态转换为关闭状态。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionResult.Faulted">
      <summary>该活动已由出错状态转换为关闭状态。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionResult.None">
      <summary>活动未处于 <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed" /> 状态。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionResult.Succeeded">
      <summary>该活动已由执行状态转换为关闭状态。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionResult.Uninitialized">
      <summary>该活动已由已初始化状态转换为关闭状态。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityExecutionStatus">
      <summary>活动状态值的枚举，这些值对应于运行中的工作流实例中活动的生命周期。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Canceling">
      <summary>表示活动正处于取消过程中的状态。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed">
      <summary>表示活动已关闭的状态。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Compensating">
      <summary>表示正在补偿活动的状态。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Executing">
      <summary>表示正在执行活动的状态。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Faulting">
      <summary>表示活动出现错误的状态。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Initialized">
      <summary>表示正在初始化活动的状态。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs">
      <summary>保存与 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的执行状态事件的更改相关的信息。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.Activity">
      <summary>获取引发事件的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</summary>
      <returns>引发事件的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.ExecutionResult">
      <summary>获取当事件发生时，引发与该值对应的事件的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" />。</summary>
      <returns>当事件发生时，引发与该值对应的事件的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionResult" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.ExecutionStatus">
      <summary>获取当事件发生时，引发与该值对应的事件的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。</summary>
      <returns>当事件发生时，引发与该值对应的事件的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.ToString">
      <summary>提供表示当前实例的 <see cref="T:System.String" />。</summary>
      <returns>表示当前实例的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.AddedActivityAction">
      <summary>表示建议的将 <see cref="T:System.Workflow.ComponentModel.Activity" /> 添加到运行中的工作流实例中的 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 的操作。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.AddedActivityAction.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.AddedActivityAction" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.AddedActivityAction.#ctor(System.Workflow.ComponentModel.CompositeActivity,System.Workflow.ComponentModel.Activity)">
      <summary>使用指定的活动和复合活动初始化 <see cref="T:System.Workflow.ComponentModel.AddedActivityAction" /> 类的新实例。</summary>
      <param name="compositeActivity">
        <see cref="T:System.Workflow.ComponentModel.AddedActivityAction" /> 所基于的 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />。</param>
      <param name="activityAdded">添加到工作流的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="compositeActivity" /> 或 <paramref name="activityAdded" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.AddedActivityAction.AddedActivity">
      <summary>获取或设置添加到工作流的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</summary>
      <returns>添加到工作流的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.AddedActivityAction.Index">
      <summary>获取通过父 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 的 <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> 集合添加的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的索引。</summary>
      <returns>新的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的索引值。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute">
      <summary>指示活动支持替代流的自定义属性。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.AlternateFlowActivityAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.CancellationHandlerActivity">
      <summary>表示可以与 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 关联的取消逻辑。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.CancellationHandlerActivity" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.ComponentModel.CancellationHandlerActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.CancellationHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity">
      <summary>定义 <see cref="T:System.Workflow.ComponentModel.TransactionScopeActivity" /> 活动的可补偿版本。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>由工作流运行时调用，用于补偿处于 <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed" /> 状态的活动。 活动的 <see cref="P:System.Workflow.ComponentModel.Activity.ExecutionResult" /> 属性的值必须为 <see cref="F:System.Workflow.ComponentModel.ActivityExecutionResult.Succeeded" />，这样才能对其进行补偿。</summary>
      <returns>尝试操作之后的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。</returns>
      <param name="executionContext">操作的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.TransactionOptions">
      <summary>获取与此实例关联的 <see cref="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" />。</summary>
      <returns>与此实例关联的 <see cref="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.CompensateActivity">
      <summary>触发对实现 <see cref="T:System.Workflow.ComponentModel.ICompensatableActivity" /> 接口的已完成的子 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的补偿。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensateActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.CompensateActivity" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensateActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.ComponentModel.CompensateActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensateActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.CompensateActivity.TargetActivityName">
      <summary>获取或设置要补偿的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的名称。</summary>
      <returns>一个字符串，其中包含要补偿的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.ComponentModel.CompensateActivity.TargetActivityNameProperty">
      <summary>表示针对 <see cref="P:System.Workflow.ComponentModel.CompensateActivity.TargetActivityName" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.CompensationHandlerActivity">
      <summary>指定工作流逻辑，用于撤消或补偿关联的 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 的成功执行。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.CompensationHandlerActivity" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.ComponentModel.CompensationHandlerActivity" /> 类的新实例。</summary>
      <param name="name">包含此实例名称的字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activityName" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompensationHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.CompositeActivity">
      <summary>
        <see cref="T:System.Workflow.ComponentModel.Activity" /> 的派生，前者是包含其他活动的所有活动的基类。 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 负责管理其子活动的执行。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})">
      <summary>从 <see cref="T:System.Object" /> 初始化 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 类的新实例，前者实现 <see cref="T:System.Workflow.ComponentModel.Activity" /> 类型的 <see cref="T:System.Collections.IEnumerable" /> 接口。</summary>
      <param name="children">实现 <see cref="T:System.Workflow.ComponentModel.Activity" /> 类型的 <see cref="T:System.Collections.IEnumerable" /> 接口的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 类的新实例，包括该活动的名称。</summary>
      <param name="name">实例的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.CompositeActivity.Activities">
      <summary>获取表示所有子活动的集合 <see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> 的对象。</summary>
      <returns>所有子活动的 <see cref="T:System.Workflow.ComponentModel.ActivityCollection" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
      <summary>将参数中的 <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> 清单应用到此实例。</summary>
      <param name="workflowChanges">要应用的 <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="workflowChanges" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities">
      <summary>获取或设置一个值，该值控制是否可以修改 <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> 中的单个活动。</summary>
      <returns>如果可以修改 <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> 中的单个活动，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)">
      <summary>在此实例上调用 <see cref="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />，并可以选择在此实例的所有子活动上调用 <see cref="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />。</summary>
      <param name="disposing">为 true 则释放此实例及其所有子活动占用的托管资源和非托管资源；为 false 则只释放此实例占用的非托管资源。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities">
      <summary>获取表示已启用的 <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> 的子集的只读集合。</summary>
      <returns>表示已启用的 <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> 的子集的只读集合。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)">
      <summary>返回包含指定活动的所有当前正在执行的实例的数组。</summary>
      <returns>当前正在执行的活动实例的数组。</returns>
      <param name="activity">指定的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
      <summary>此实例的执行上下文中引发了异常时调用。</summary>
      <returns>试图取消此实例时产生的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。</returns>
      <param name="executionContext">此实例的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <param name="exception">导致此错误的 <see cref="T:System.Exception" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="executionContext" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="executionContext" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)">
      <summary>初始化此实例的所有适当的子活动和指定的 <see cref="T:System.IServiceProvider" />。</summary>
      <param name="provider">指定的 <see cref="T:System.IServiceProvider" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
      <summary>在添加活动时调用。</summary>
      <param name="executionContext">指定的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <param name="addedActivity">指定的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="executionContext" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="executionContext" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
      <summary>移除活动时调用。</summary>
      <param name="executionContext">指定的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <param name="removedActivity">指定的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)">
      <summary>每次加载此活动的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 时由工作流运行时引擎调用。</summary>
      <param name="provider">一个 <see cref="T:System.Object" />，它实现 <see cref="T:System.IServiceProvider" /> 并为此实例提供服务。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)">
      <summary>每次卸载此活动的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 时由工作流运行时引擎调用。</summary>
      <param name="provider">一个 <see cref="T:System.Object" />，它实现 <see cref="T:System.IServiceProvider" /> 并为此实例提供服务。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <summary>当 <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> 属性发生更改时，执行附加处理。</summary>
      <param name="e">事件所广播的 <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <summary>在对基础 <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> 进行更改之前发生的事件。</summary>
      <param name="e">与事件相关的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>对此实例的集合 <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> 进行更改之后调用。</summary>
      <param name="rootContext">与此实例关联的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)">
      <summary>当活动从 <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Initialized" /> 状态转换到 <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed" /> 状态时，由工作流运行时引擎调用。</summary>
      <param name="provider">一个 <see cref="T:System.Object" />，它实现 <see cref="T:System.IServiceProvider" /> 并为此实例提供服务。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.DependencyObject">
      <summary>所有具有依赖项属性的对象的基类。 必须继承此类。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
      <summary>为 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 的事件添加处理程序。</summary>
      <param name="dependencyEvent">
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <param name="value">表示此属性值的 <see cref="T:System.Object" />。 在本例中为 <see cref="T:System.Delegate" /> 类型。</param>
      <exception cref="T:System.ArgumentNullException">参数之一为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">值是不正确的 <see cref="T:System.Type" />。</exception>
      <exception cref="T:System.ArgumentException">值是不正确的 <see cref="T:System.Type" />。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyObject.DesignMode">
      <summary>获取一个值，该值指示此实例是处于设计模式还是运行时模式。</summary>
      <returns>如果此实例处于设计模式，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.Dispose">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)">
      <summary>释放非托管资源，还可以释放由 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 占用的托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.Finalize">
      <summary>作为 <see cref="M:System.Object.Finalize" /> 的重写提供，用于明确地清理所有非托管资源。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)">
      <summary>提供对与特定 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 关联的 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的访问。</summary>
      <returns>与特定 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 关联的 <see cref="T:System.Workflow.ComponentModel.ActivityBind" />。</returns>
      <param name="dependencyProperty">
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)">
      <summary>检索作为 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的主题的 <see cref="T:System.Object" />。</summary>
      <returns>作为 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的主题的 <see cref="T:System.Object" />。</returns>
      <param name="bind">
        <see cref="T:System.Workflow.ComponentModel.ActivityBind" />。</param>
      <param name="targetType">
        <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的目标的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bind" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bind" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)">
      <summary>获取一个数组，其中包含指定的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的委托。</summary>
      <returns>一个数组，其中包含指定的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的委托。</returns>
      <param name="dependencyEvent">指定的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <typeparam name="T">返回的委托的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyEvent" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dependencyEvent" /> 不与事件对应。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)">
      <summary>提供对指定的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的值的访问。</summary>
      <returns>表示指定的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的值的对象。</returns>
      <param name="dependencyProperty">
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)">
      <summary>提供对 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的绑定对象的访问，并跳过 <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /> 重写。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的绑定对象。 这会跳过 <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /> 重写。</returns>
      <param name="dependencyProperty">要获取其值的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyProperty" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties">
      <summary>在派生类中重写时，对依赖项属性执行初始化。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)">
      <summary>指示 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的值是否设置为绑定。 请参见 <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />。</summary>
      <returns>如果设置为绑定，则为 true；否则为 false。</returns>
      <param name="dependencyProperty">要测试的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyProperty" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)">
      <summary>确定此 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 的 metaproperties 是否等于参数化的 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 的 metaproperties。</summary>
      <returns>如果 metaproperties 相等，则为 true；否则为 false。</returns>
      <param name="dependencyObject">要比较是否相等的 <see cref="T:System.Workflow.ComponentModel.DependencyObject" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 图中的父 <see cref="T:System.Workflow.ComponentModel.DependencyObject" />。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 图中的父 <see cref="T:System.Workflow.ComponentModel.DependencyObject" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
      <summary>从关联的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 中移除 <see cref="T:System.EventHandler" />。</summary>
      <param name="dependencyEvent">
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <param name="value">表示此属性值的 <see cref="T:System.Object" />。 在本例中为 <see cref="T:System.Delegate" /> 类型。</param>
      <exception cref="T:System.ArgumentNullException">参数之一为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dependencyEvent" /> 是一个 metaproperty。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dependencyEvent" /> 是一个 metaproperty。</exception>
      <exception cref="T:System.Data.ReadOnlyException">
        <paramref name="value" /> 是 <see cref="T:System.Workflow.ComponentModel.ActivityBind" />，但此实例不处于 <see cref="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)">
      <summary>从 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 中移除 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <returns>如果操作成功，则为 true；否则为 false。</returns>
      <param name="dependencyProperty">要移除的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <exception cref="T:System.ArgumentNullException">该参数是空引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
      <summary>为指定的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 设置 <see cref="T:System.Workflow.ComponentModel.ActivityBind" />。</summary>
      <param name="dependencyProperty">
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <param name="bind">要设置为的 <see cref="T:System.Workflow.ComponentModel.ActivityBind" />。</param>
      <exception cref="T:System.ArgumentNullException">参数之一为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">与 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 关联的 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 为只读。</exception>
      <exception cref="T:System.ArgumentException">与 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 关联的 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 为只读。</exception>
      <exception cref="T:System.ArgumentException">与 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 关联的 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 为只读。</exception>
      <exception cref="T:System.InvalidOperationException">此实例未处于 <see cref="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)">
      <summary>设置目标 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的值。</summary>
      <param name="bind">
        <see cref="T:System.Workflow.ComponentModel.ActivityBind" />。</param>
      <param name="value">设置 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的目标的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bind" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
      <summary>设置只读的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 值。</summary>
      <param name="dependencyProperty">
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <param name="value">表示该值的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyProperty" /> 为 null 引用（Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
      <summary>将 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的值设置为对象。</summary>
      <param name="dependencyProperty">要设置的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <param name="value">要将值设置为的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
      <summary>通过跳过 <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />，将 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的值设置为指定的 <see cref="T:System.Object" />。</summary>
      <param name="dependencyProperty">要设置到 <see cref="T:System.Object" /> 的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <param name="value">要成为 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的值的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyProperty" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyObject.Site">
      <summary>获取或设置对 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 的 <see cref="P:System.Workflow.ComponentModel.DependencyObject.Site" /> 组件的引用。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 的 <see cref="P:System.Workflow.ComponentModel.DependencyObject.Site" /> 组件。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed">
      <summary>表示处理组件的 Disposed 事件的方法。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyObject.UserData">
      <summary>获取一个 <see cref="T:System.Collections.IDictionary" />，它将自定义数据与此类实例关联。</summary>
      <returns>一个字典，它用作扩展性挂钩，供开发人员用于操作设计工具的 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 声明，以及将自定义数据与单个活动声明关联。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.DependencyProperty">
      <summary>一种特殊类型的属性，可以定义为或附加到 <see cref="T:System.Workflow.ComponentModel.DependencyObject" />。 有三种类型的依赖属性：实例属性、元属性和附加属性。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyProperty.DefaultMetadata">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" />，它表示此 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的用户定义的数据。</summary>
      <returns>此 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.FromName(System.String,System.Type)">
      <summary>获取基于 <see cref="P:System.Workflow.ComponentModel.DependencyProperty.Name" /> 和 <see cref="P:System.Workflow.ComponentModel.DependencyProperty.OwnerType" /> 的已注册 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <returns>基于 <see cref="P:System.Workflow.ComponentModel.DependencyProperty.Name" /> 和 <see cref="P:System.Workflow.ComponentModel.DependencyProperty.OwnerType" /> 的已注册 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</returns>
      <param name="propertyName">
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的 <see cref="P:System.Workflow.ComponentModel.DependencyProperty.Name" />。</param>
      <param name="ownerType">
        <see cref="P:System.Workflow.ComponentModel.DependencyProperty.OwnerType" /> 的必需值。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.FromType(System.Type)">
      <summary>创建属于特定 <see cref="T:System.Type" /> 的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 类型的 <see cref="T:System.Collections.IList" />。</summary>
      <returns>属于特定 <see cref="T:System.Type" /> 的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的 <see cref="T:System.Collections.IList" />。</returns>
      <param name="ownerType">
        <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.GetHashCode">
      <summary>返回此实例的哈希代码。</summary>
      <returns>此实例的哈希代码。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyProperty.IsAttached">
      <summary>获取一个属性，该属性指示此 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 是否通过注册与 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 关联。</summary>
      <returns>如果附加到 <see cref="T:System.Workflow.ComponentModel.DependencyObject" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyProperty.IsEvent">
      <summary>获取一个属性，该属性指示 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 是否是事件 <see cref="T:System.Delegate" />。</summary>
      <returns>如果 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 是事件 <see cref="T:System.Delegate" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyProperty.Name">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的 <see cref="P:System.Workflow.ComponentModel.DependencyProperty.Name" />。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的 <see cref="P:System.Workflow.ComponentModel.DependencyProperty.Name" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyProperty.OwnerType">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的 <see cref="T:System.Type" />。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyProperty.PropertyType">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 中存储的值的 <see cref="T:System.Type" />。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 中存储的值的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 类的新实例，它根据输入参数将属性参数化。</summary>
      <returns>根据输入参数将属性参数化的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 类。</returns>
      <param name="name">
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的名称。</param>
      <param name="propertyType">属性可以包含的值的 <see cref="T:System.Type" />。</param>
      <param name="ownerType">依赖属性的所有者 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.Register(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 类的新实例，它根据输入参数将属性参数化。</summary>
      <returns>根据输入参数将属性参数化的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 类。</returns>
      <param name="name">
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的名称。</param>
      <param name="propertyType">属性可以包含的值的 <see cref="T:System.Type" />。</param>
      <param name="ownerType">依赖属性的所有者 <see cref="T:System.Type" />。</param>
      <param name="defaultMetadata">附加属性选项。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 类的新实例，它根据输入参数将属性参数化。 此实例旨在声明在对象上使用的属性而不是所属类型的对象。</summary>
      <returns>根据输入参数将属性参数化的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 类。</returns>
      <param name="name">
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的名称。</param>
      <param name="propertyType">属性可以包含的值的 <see cref="T:System.Type" />。</param>
      <param name="ownerType">依赖属性的所有者 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 类的新实例，它根据输入参数将属性参数化。</summary>
      <returns>根据输入参数将属性参数化的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 类。</returns>
      <param name="name">
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的名称。</param>
      <param name="propertyType">属性可以包含的值的 <see cref="T:System.Type" />。</param>
      <param name="ownerType">依赖属性的所有者 <see cref="T:System.Type" />。</param>
      <param name="defaultMetadata">附加属性选项。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata,System.Type)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 类的新实例，它根据输入参数将属性参数化。</summary>
      <returns>根据输入参数将属性参数化的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 类。</returns>
      <param name="name">
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的名称。</param>
      <param name="propertyType">属性可以包含的值的 <see cref="T:System.Type" />。</param>
      <param name="ownerType">依赖属性的所有者 <see cref="T:System.Type" />。</param>
      <param name="defaultMetadata">附加属性选项。</param>
      <param name="validatorType">实现附加属性的验证逻辑的对象的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化目标对象所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">与数据关联的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">包含数据的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.DependencyProperty.ToString">
      <summary>重写 <see cref="T:System.Object" /> 方法，从而返回 <see cref="P:System.Workflow.ComponentModel.DependencyProperty.Name" /> 属性值。</summary>
      <returns>
        <see cref="P:System.Workflow.ComponentModel.DependencyProperty.Name" /> 属性值。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.DependencyProperty.ValidatorType">
      <summary>获取实现特定于 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的验证逻辑的 <see cref="T:System.Type" />。</summary>
      <returns>实现特定于此实例的验证逻辑的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.DependencyPropertyOptions">
      <summary>表示 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 选项的枚举。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Default">
      <summary>默认选项。 没有显著的特性。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.DependencyPropertyOptions.DelegateProperty">
      <summary>此选项用于指定属性的类型是否为 <see cref="T:System.Delegate" />。 使用此项从事件中消除委托属性的歧义非常重要。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Metadata">
      <summary>
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 表示元数据。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.DependencyPropertyOptions.NonSerialized">
      <summary>
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Optional">
      <summary>
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 为可选属性。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.DependencyPropertyOptions.ReadOnly">
      <summary>
        <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 为只读。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.FaultHandlerActivity">
      <summary>表示活动类，该类用于处理类型由 <see cref="P:System.Workflow.ComponentModel.FaultHandlerActivity.FaultType" /> 属性指定的 <see cref="T:System.Exception" />。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.FaultHandlerActivity" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.ComponentModel.FaultHandlerActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activityName" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.FaultHandlerActivity.Fault">
      <summary>获取由此 <see cref="T:System.Workflow.ComponentModel.FaultHandlerActivity" /> 处理的 <see cref="T:System.Exception" />。</summary>
      <returns>与此实例关联的 <see cref="T:System.Exception" />。 如果活动未处理任何异常，则会返回 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.FaultHandlerActivity.FaultType">
      <summary>获取和设置由 <see cref="T:System.Workflow.ComponentModel.FaultHandlerActivity" /> 处理的异常的 <see cref="T:System.Type" />。 同时还处理由 <see cref="P:System.Workflow.ComponentModel.FaultHandlerActivity.FaultType" /> 中指定的类型派生的类型的异常。</summary>
      <returns>关联的 <see cref="T:System.Exception" /> 的 <see cref="T:System.Type" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.ComponentModel.FaultHandlerActivity.FaultTypeProperty">
      <summary>表示针对 <see cref="P:System.Workflow.ComponentModel.FaultHandlerActivity.FaultType" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)">
      <summary>提供一个值，该值指示此实例是否可以筛选指定的 <see cref="T:System.Type" />。</summary>
      <returns>如果可以筛选 <see cref="T:System.Type" />，则为 true；否则为 false。</returns>
      <param name="type">指定的 <see cref="T:System.Type" />。</param>
      <param name="throwOnError">确定在出现错误时是否引发异常的值。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription">
      <summary>获取与此实例关联的筛选器说明。</summary>
      <returns>与此实例关联的筛选器说明。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的访问类型。</summary>
      <returns>一个表示属性访问级别的 <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> 枚举值。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的 <see cref="T:System.Type" />。</summary>
      <returns>其名称作为 <paramref name="propertyName " />参数进行传递的属性的 <see cref="T:System.Type" />。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.FaultHandlersActivity">
      <summary>表示一个 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />，它具有 <see cref="T:System.Workflow.ComponentModel.FaultHandlerActivity" /> 类型的子活动的有序列表。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.FaultHandlersActivity" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.ComponentModel.FaultHandlersActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.FaultHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.GetValueOverride">
      <summary>允许 <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /> 逻辑的自定义重写，该逻辑与在依赖对象上定义的依赖属性关联。</summary>
      <returns>一个 <see cref="T:System.Object" />，它表示指定的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的值。</returns>
      <param name="d">针对 <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /> 方法的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.IActivityEventListener`1">
      <summary>定义监听事件的对象的接口。</summary>
      <typeparam name="T">事件参数的类型。</typeparam>
    </member>
    <member name="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.ICompensatableActivity">
      <summary>定义可以获得补偿的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 所需的接口。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.ICompensatableActivity.Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>由工作流运行时调用，用于补偿处于关闭状态的活动。 活动的 <see cref="P:System.Workflow.ComponentModel.Activity.ExecutionResult" /> 属性的值必须为 Succeeded，这样才能对其进行补偿。</summary>
      <returns>尝试操作之后的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。</returns>
      <param name="executionContext">操作的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider">
      <summary>为绑定基础结构提供属性类型。 它由包含可变类型的属性的活动来实现，其中类型会根据其他活动设置而变化。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的访问类型。</summary>
      <returns>一个表示属性访问级别的 <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> 枚举值。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的 <see cref="T:System.Type" />。</summary>
      <returns>其名称作为 <paramref name="propertyName " />参数进行传递的属性的 <see cref="T:System.Type" />。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.IStartWorkflow">
      <summary>定义可以从 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 获取的服务，以便启动新的工作流实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.IStartWorkflow.StartWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
      <summary>启动指定的 <see cref="T:System.Type" /> 的工作流，并提供带有包含运行时参数的 <see cref="P:System.Collections.DictionaryBase.Dictionary" /> 的运行中实例。</summary>
      <returns>已启动工作流的实例 ID。</returns>
      <param name="workflowType">工作流的 <see cref="T:System.Type" />。</param>
      <param name="namedArgumentValues">包含工作流的运行时参数的 <see cref="P:System.Collections.DictionaryBase.Dictionary" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.IWorkflowChangeDiff">
      <summary>支持对工作流更改进行挖掘。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.IWorkflowChangeDiff.Diff(System.Object,System.Object)">
      <summary>确定在两个工作流定义之间发生的更改。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.WorkflowChangeAction" /> 对象列表，该列表指示两个工作流定义之间的差别。</returns>
      <param name="originalDefinition">原始工作流定义。</param>
      <param name="changedDefinition">新的工作流定义。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.PersistOnCloseAttribute">
      <summary>指示当经过装饰的活动完成其执行时，必须保留当前工作流实例。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.PersistOnCloseAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.PersistOnCloseAttribute" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.PropertyMetadata">
      <summary>表示依赖项属性的行为。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Attribute[])">
      <summary>使用属性数组初始化 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 类的新实例。</summary>
      <param name="attributes">适用于依赖项属性的特性，例如 <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> 和 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object)">
      <summary>使用默认属性值初始化 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 类的新实例。</summary>
      <param name="defaultValue">表示此 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 的 <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue" /> 的对象。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Attribute[])">
      <summary>使用默认属性值和特性数组初始化 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 类的新实例。</summary>
      <param name="defaultValue">表示此 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 的 <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue" /> 的对象。</param>
      <param name="attributes">适用于依赖项属性的特性，例如 <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> 和 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions)">
      <summary>使用默认属性值和 <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> 枚举值初始化 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 类的新实例。</summary>
      <param name="defaultValue">表示此 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 的 <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue" /> 的对象。</param>
      <param name="options">用于定义关联的依赖项属性的 <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions,System.Attribute[])">
      <summary>使用默认属性值、<see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> 枚举值和特性数组初始化 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 类的新实例。</summary>
      <param name="defaultValue">表示此 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 的 <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue" /> 的对象。</param>
      <param name="options">用于定义关联的依赖项属性的 <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" />。</param>
      <param name="attributes">适用于依赖项属性的特性，例如 <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> 和 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions,System.Workflow.ComponentModel.GetValueOverride,System.Workflow.ComponentModel.SetValueOverride)">
      <summary>使用默认属性值、<see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> 枚举值以及用于重写与依赖属性关联的 GetValue 和 SetValue 逻辑的委托来初始化 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 类的新实例。</summary>
      <param name="defaultValue">表示此 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 的 <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue" /> 的对象。</param>
      <param name="options">用于定义关联的依赖项属性的 <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" />。</param>
      <param name="getValueOverride">The <see cref="T:System.Workflow.ComponentModel.GetValueOverride" /> delegate that belongs to this instance.</param>
      <param name="setValueOverride">The <see cref="T:System.Workflow.ComponentModel.SetValueOverride" /> delegate that belongs to this instance.</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions,System.Workflow.ComponentModel.GetValueOverride,System.Workflow.ComponentModel.SetValueOverride,System.Attribute[])">
      <summary>使用默认属性 (Property) 值、<see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> 枚举值、用于重写与依赖属性 (Property) 关联的 GetValue 和 SetValue 逻辑的委托以及属性 (Attribute) 数组来初始化 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 类的新实例。</summary>
      <param name="defaultValue">表示此 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 的 <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue" /> 的对象。</param>
      <param name="options">用于定义关联的依赖项属性的 <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" />。</param>
      <param name="getValueOverride">The <see cref="T:System.Workflow.ComponentModel.GetValueOverride" /> delegate that belongs to this instance.</param>
      <param name="setValueOverride">The <see cref="T:System.Workflow.ComponentModel.SetValueOverride" /> delegate that belongs to this instance.</param>
      <param name="attributes">适用于依赖项属性的特性，例如 <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> 和 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Workflow.ComponentModel.DependencyPropertyOptions)">
      <summary>使用 <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> 枚举值初始化 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 类的新实例。</summary>
      <param name="options">用于定义关联的依赖项属性的 <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Workflow.ComponentModel.DependencyPropertyOptions,System.Attribute[])">
      <summary>使用 <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" /> 枚举值和属性数组初始化 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 类的新实例。</summary>
      <param name="options">用于定义关联的依赖项属性的 <see cref="T:System.Workflow.ComponentModel.DependencyPropertyOptions" />。</param>
      <param name="attributes">适用于依赖项属性的特性，例如 <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> 和 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue">
      <summary>获取或设置关联依赖项属性的默认值。</summary>
      <returns>一个对象，它表示此 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 的默认值。</returns>
      <exception cref="T:System.InvalidOperationException">当 <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.IsSealed" /> 为 true 时试图设置此属性。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes">
      <summary>检索包含所有属性的数组。</summary>
      <returns>包含所有属性的数组。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes(System.Type)">
      <summary>接收 <see cref="T:System.Attribute" /> 类型的数组，该数组包含那些类型等于 <paramref name="attributeType" /> 的属性。</summary>
      <returns>一个 <see cref="T:System.Attribute" /> 类型的数组，该数组包含那些类型等于 <paramref name="attributeType" /> 的属性。</returns>
      <param name="attributeType">要返回的属性的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.GetValueOverride">
      <summary>获取或设置 <see cref="T:System.Workflow.ComponentModel.GetValueOverride" /> 回调，在调用 <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /> 方法时会立即调用该回调。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.GetValueOverride" /> 回调，在调用 <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" /> 方法时会立即调用该回调。</returns>
      <exception cref="T:System.InvalidOperationException">当 <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.IsSealed" /> 为 true 时试图设置此属性。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.IsMetaProperty">
      <summary>获取一个值，该值指示 <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.Options" /> 是否设置为 <see cref="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Metadata" />。</summary>
      <returns>如果此选项设置为 <see cref="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Metadata" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.IsNonSerialized">
      <summary>获取一个值，该值指示 <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.Options" /> 是否设置为 <see cref="F:System.Workflow.ComponentModel.DependencyPropertyOptions.NonSerialized" />。</summary>
      <returns>如果设置为 <see cref="F:System.Workflow.ComponentModel.DependencyPropertyOptions.NonSerialized" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.Options" /> 是否设置为 <see cref="F:System.Workflow.ComponentModel.DependencyPropertyOptions.ReadOnly" />。</summary>
      <returns>如果设置为 <see cref="F:System.Workflow.ComponentModel.DependencyPropertyOptions.ReadOnly" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.IsSealed">
      <summary>获取一个值，该值指示是否已将 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 应用到导致不可变状态的属性。</summary>
      <returns>如果 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 不可变，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.PropertyMetadata.OnApply(System.Workflow.ComponentModel.DependencyProperty,System.Type)">
      <summary>在将此 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 应用到依赖项属性时提供处理。</summary>
      <param name="dependencyProperty">已将此 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 应用到的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <param name="targetType">与此元数据关联的 <see cref="T:System.Type" />（如果此实例是类型特定的元数据）。 如果这是默认元数据，则此值为空引用（在 Visual Basic 中为 Nothing）。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.Options">
      <summary>获取或设置一个属性，该属性表示与此 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 关联的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的选项设置。</summary>
      <returns>与此 <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> 关联的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的选项设置。</returns>
      <exception cref="T:System.InvalidOperationException">当 <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.IsSealed" /> 为 true 时试图设置此属性。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.PropertyMetadata.SetValueOverride">
      <summary>获取或设置 <see cref="T:System.Workflow.ComponentModel.SetValueOverride" /> 回调，在调用 <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" /> 方法时会立即调用该回调。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.SetValueOverride" /> 回调，在调用 <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" /> 方法时会立即调用该回调。</returns>
      <exception cref="T:System.InvalidOperationException">当 <see cref="P:System.Workflow.ComponentModel.PropertyMetadata.IsSealed" /> 为 true 时试图设置此属性。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.QueueEventArgs">
      <summary>表示与工作流队列相关的事件的事件参数。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.QueueEventArgs.QueueName">
      <summary>获取产生事件的工作流队列的名称。</summary>
      <returns>产生事件的工作流队列的名称。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.RemovedActivityAction">
      <summary>表示建议的删除，该操作从运行中工作流实例的 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 中移除 <see cref="T:System.Workflow.ComponentModel.Activity" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.RemovedActivityAction.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.RemovedActivityAction" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.RemovedActivityAction.#ctor(System.Int32,System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.CompositeActivity)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.RemovedActivityAction" /> 类的新实例。</summary>
      <param name="removedActivityIndex">在通过工作流更改移除活动时，指示要移除的活动的索引。</param>
      <param name="originalActivity">已移除的活动。</param>
      <param name="clonedParentActivity">从中移除活动的根活动。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.RemovedActivityAction.OriginalRemovedActivity">
      <summary>获取要移除的原始 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的实例。</summary>
      <returns>要移除的原始 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的实例。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.RemovedActivityAction.RemovedActivityIndex">
      <summary>获取从父 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 的 <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> 集合中移除的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的索引。</summary>
      <returns>要移除的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的索引。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.SetValueOverride">
      <summary>允许 <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" /> 逻辑的自定义重写，该逻辑与在依赖对象上定义的依赖属性关联。</summary>
      <param name="d">针对 <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" /> 方法的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <param name="value">要将值设置为的 <see cref="T:System.Object" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.SuspendActivity">
      <summary>在执行时挂起运行中工作流实例。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.SuspendActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.SuspendActivity" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.SuspendActivity.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.SuspendActivity" /> 类的新实例，包括该活动的名称。</summary>
      <param name="name">活动的用户定义名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.SuspendActivity.Error">
      <summary>获取或设置向管理员报告的错误消息，该错误消息提供挂起的原因。</summary>
      <returns>提供工作流实例挂起原因的错误消息。 默认值为 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.ComponentModel.SuspendActivity.ErrorProperty">
      <summary>表示针对 <see cref="P:System.Workflow.ComponentModel.SuspendActivity.Error" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.SynchronizationScopeActivity">
      <summary>表示需要对共享变量的受控访问的工作流部分。如果有两个或更多 <see cref="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" /> 实例访问相同的变量，则会有效地序列化这些活动的执行。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.SynchronizationScopeActivity.SynchronizationHandles">
      <summary>获取或设置字符串的集合，这些字符串表示确定此 <see cref="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" /> 的同步行为的句柄。 当两个或更多 <see cref="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" /> 活动共享一个同步句柄时，这些活动按顺序执行，其中没有任何子活动的交错执行。</summary>
      <returns>一个多行字符串，其中包含此实例的同步句柄。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.TerminateActivity">
      <summary>出现不正常情况时，终止运行中的工作流实例。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.TerminateActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.TerminateActivity" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.TerminateActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.ComponentModel.TerminateActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.TerminateActivity.Error">
      <summary>获取或设置向管理员报告的错误消息，其中提供终止的原因。</summary>
      <returns>一个错误消息，其中提供工作流实例终止的原因。 默认值为 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.ComponentModel.TerminateActivity.ErrorProperty">
      <summary>表示针对 <see cref="P:System.Workflow.ComponentModel.TerminateActivity.Error" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.ThrowActivity">
      <summary>对异常的引发进行建模。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.ThrowActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.ThrowActivity" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.ThrowActivity" /> 类的新实例，并初始化其名称。</summary>
      <param name="name">活动的用户定义名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.ThrowActivity.Fault">
      <summary>获取或设置由 <see cref="T:System.Workflow.ComponentModel.ThrowActivity" /> 调用的异常对象。</summary>
      <returns>与此实例关联的 <see cref="T:System.Exception" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.ComponentModel.ThrowActivity.FaultProperty">
      <summary>表示此实例的 <see cref="P:System.Workflow.ComponentModel.ThrowActivity.Fault" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.ThrowActivity.FaultType">
      <summary>获取或设置由 <see cref="T:System.Workflow.ComponentModel.ThrowActivity" /> 调用的执行的类型。</summary>
      <returns>表示与此实例关联的错误的类型。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty">
      <summary>表示此实例的 <see cref="P:System.Workflow.ComponentModel.ThrowActivity.FaultType" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)">
      <summary>返回一个值，该值指示能否筛选指定的 <see cref="T:System.Type" />。</summary>
      <returns>如果可以筛选指定的类型，则为 true；否则为 false。</returns>
      <param name="type">要选中进行筛选的 <see cref="T:System.Type" />。</param>
      <param name="throwOnError">为 true 则在处理 <see cref="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)" /> 时引发异常；否则为 false。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription">
      <summary>获取要在类浏览器对话框中显示的筛选器的说明。</summary>
      <returns>包含筛选器说明的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的访问类型。</summary>
      <returns>一个表示属性访问级别的 <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> 枚举值。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的 <see cref="T:System.Type" />。</summary>
      <returns>其名称作为 <paramref name="propertyName " />参数进行传递的属性的 <see cref="T:System.Type" />。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.TransactionScopeActivity">
      <summary>划分事务边界的工作流部分。 当此 <see cref="T:System.Workflow.ComponentModel.Activity" /> 开始执行时将启动一个新的 <see cref="T:System.Transactions.Transaction" />，并在成功关闭 <see cref="T:System.Workflow.ComponentModel.Activity" /> 后提交事务。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.TransactionScopeActivity" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.ComponentModel.TransactionScopeActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.TransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.TransactionScopeActivity.TransactionOptions">
      <summary>获取与此实例关联的 <see cref="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" />。</summary>
      <returns>与此实例关联的 <see cref="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.WorkflowChangeAction">
      <summary>一个抽象基类，所有表示对运行中工作流实例所建议的更改的类都必须从该基类派生。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowChangeAction.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.ComponentModel.WorkflowChangeAction" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)">
      <summary>当在派生类中重写时，将更改应用到根 <see cref="T:System.Workflow.ComponentModel.Activity" />。</summary>
      <returns>如果使用添加的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 更新了根 <see cref="T:System.Workflow.ComponentModel.Activity" />，则为 true；如果根 <see cref="T:System.Workflow.ComponentModel.Activity" /> 为空引用（在 Visual Basic 中为 Nothing），则为 false。</returns>
      <param name="rootActivity">工作流的根 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
      <summary>当在派生类中重写时，验证更改并返回包含任意错误的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</summary>
      <returns>包含任意错误的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</returns>
      <param name="activity">针对其验证更改的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activityInstance" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="T:System.Workflow.ComponentModel.WorkflowChanges">
      <summary>表示一组对运行中工作流实例的建议的更改。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowChanges.#ctor(System.Workflow.ComponentModel.Activity)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> 类的新实例。</summary>
      <param name="rootActivity">工作流的根 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootActivity" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rootActivity" /> 不是 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="rootActivity" /> 处于设计模式。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty">
      <summary>指定必须满足才能应用 <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> 的条件。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowChanges.GetCondition(System.Object)">
      <summary>获取依赖对象的条件属性。</summary>
      <returns>一个条件属性类型，例如 <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />。</returns>
      <param name="dependencyObject">一个包含条件属性的 <see cref="T:System.Workflow.ComponentModel.DependencyObject" />（或派生类型），例如 <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> 和 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 活动。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dependencyObject" /> 不是 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 或从 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 派生的类型。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowChanges.SetCondition(System.Object,System.Object)">
      <summary>在依赖对象上设置条件属性。</summary>
      <param name="dependencyObject">一个包含条件属性的 <see cref="T:System.Workflow.ComponentModel.DependencyObject" />（或派生类型），例如 <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> 和 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 活动。</param>
      <param name="value">在依赖对象上设置的条件类型，例如 <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow">
      <summary>返回克隆的活动树，可以对该树进行更改，然后将更改应用到运行中的工作流实例。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />，其中包含工作流的克隆的根活动。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowChanges.Validate">
      <summary>验证当前的建议更改集，这些更改是对 <see cref="P:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow" /> 属性表示的活动树所进行的更改。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> 对象，其中包含在验证期间发生的任何错误或警告。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.WorkflowParameterBinding">
      <summary>表示命名参数绑定的通用类。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBinding" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBinding" /> 类的新实例。</summary>
      <param name="parameterName">一个包含参数名的 string。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.WorkflowParameterBinding.ParameterName">
      <summary>获取或设置 <see cref="P:System.Workflow.ComponentModel.WorkflowParameterBinding.ParameterName" /> 属性。 表示正在绑定的参数的名称。</summary>
      <returns>正在绑定的参数的名称。</returns>
    </member>
    <member name="F:System.Workflow.ComponentModel.WorkflowParameterBinding.ParameterNameProperty">
      <summary>针对 <see cref="P:System.Workflow.ComponentModel.WorkflowParameterBinding.ParameterName" /> 的依赖项属性。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.WorkflowParameterBinding.Value">
      <summary>获取或设置分配给对应参数的值。</summary>
      <returns>作为 <see cref="T:System.Object" /> 分配的值。</returns>
    </member>
    <member name="F:System.Workflow.ComponentModel.WorkflowParameterBinding.ValueProperty">
      <summary>针对 <see cref="P:System.Workflow.ComponentModel.WorkflowParameterBinding.Value" /> 的依赖项属性。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection">
      <summary>表示 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBinding" /> 类型的 <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />。 无法继承此类。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowParameterBindingCollection.#ctor(System.Workflow.ComponentModel.Activity)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> 类的新实例。</summary>
      <param name="ownerActivity">拥有此实例的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ownerActivity" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowParameterBindingCollection.GetItem(System.String)">
      <summary>从具有指定键的集合中获取 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBinding" />。</summary>
      <returns>具有指定键的集合中的 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBinding" />。</returns>
      <param name="key">要在此检索中匹配的键。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.WorkflowTerminatedException">
      <summary>表示终止工作流时引发的 <see cref="T:System.Exception" />。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.WorkflowTerminatedException" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor(System.String)">
      <summary>使用指定的错误消息初始化 <see cref="T:System.Workflow.ComponentModel.WorkflowTerminatedException" /> 类的新实例。</summary>
      <param name="message">描述错误的消息。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor(System.String,System.Exception)">
      <summary>使用指定错误消息和对导致此 <see cref="T:System.Exception" /> 的内部 <see cref="T:System.Exception" /> 的引用来初始化 <see cref="T:System.Workflow.ComponentModel.WorkflowTerminatedException" /> 类的新实例。</summary>
      <param name="message">描述错误的消息。</param>
      <param name="exception">内部 <see cref="T:System.Exception" /> 引用。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.WorkflowTransactionOptions">
      <summary>工作流事务类型选项的容器。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.WorkflowTransactionOptions.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.WorkflowTransactionOptions.IsolationLevel">
      <summary>获取或设置事务的 <see cref="T:System.Data.IsolationLevel" />。</summary>
      <returns>工作流的 <see cref="T:System.Data.IsolationLevel" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.ComponentModel.WorkflowTransactionOptions.IsolationLevelProperty">
      <summary>表示 <see cref="P:System.Workflow.ComponentModel.WorkflowTransactionOptions.IsolationLevel" /> 的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.WorkflowTransactionOptions.TimeoutDuration">
      <summary>获取或设置表示事务超时期限的 <see cref="T:System.TimeSpan" />。</summary>
      <returns>表示事务超时期限的 <see cref="T:System.TimeSpan" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.ComponentModel.WorkflowTransactionOptions.TimeoutDurationProperty">
      <summary>表示 <see cref="P:System.Workflow.ComponentModel.WorkflowTransactionOptions.TimeoutDuration" /> 的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.AccessTypes">
      <summary>指定依赖项属性的访问模式。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.ComponentModel.Compiler.AccessTypes.Read">
      <summary>读取访问。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Compiler.AccessTypes.ReadWrite">
      <summary>读取和写入访问权限。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Compiler.AccessTypes.Write">
      <summary>写入访问。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator">
      <summary>可以与活动关联的代码生成器组件的基类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator.GenerateCode(System.Workflow.ComponentModel.Compiler.CodeGenerationManager,System.Object)">
      <summary>使用特定的 <see cref="T:System.Workflow.ComponentModel.Compiler.CodeGenerationManager" /> 为指定的 <see cref="T:System.Object" /> 生成代码。</summary>
      <param name="manager">要在代码生成过程中使用的 <see cref="T:System.Workflow.ComponentModel.Compiler.CodeGenerationManager" />。</param>
      <param name="obj">要为其生成代码的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">无法将 <paramref name="obj" /> 强制转换为类型 <see cref="T:System.Workflow.ComponentModel.Activity" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator.GetCodeTypeDeclaration(System.Workflow.ComponentModel.Compiler.CodeGenerationManager,System.String)">
      <summary>返回当前正在编译的工作流的代码类型声明。</summary>
      <returns>当前正在编译的工作流的 <see cref="T:System.CodeDom.CodeTypeDeclaration" />。</returns>
      <param name="manager">要在代码生成过程中使用的 <see cref="T:System.Workflow.ComponentModel.Compiler.CodeGenerationManager" />。</param>
      <param name="fullClassName">当前正在编译的工作流的完全限定类名。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute">
      <summary>指示要为某一活动的代码生成使用的类型。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute" /> 类的新实例，同时初始化 <see cref="P:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute.CodeGeneratorTypeName" />。</summary>
      <param name="codeGeneratorTypeName">
        <see cref="P:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute.CodeGeneratorTypeName" /> 的指定值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="codeGeneratorTypeName" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute.#ctor(System.Type)">
      <summary>从代码生成器 <see cref="T:System.Type" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute" /> 类的新实例。</summary>
      <param name="codeGeneratorType">从其初始化该实例的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="codeGeneratorType" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="codeGeneratorType" /> 不能分配给代码生成器的类型。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="codeGeneratorType" /> 不能分配给代码生成器的类型。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute.CodeGeneratorTypeName">
      <summary>获取此实例所基于的代码生成器 <see cref="T:System.Type" /> 的名称。</summary>
      <returns>包含此实例所基于的代码生成器 <see cref="T:System.Type" /> 的名称的字符串。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ActivityValidator">
      <summary>
        <see cref="T:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator" /> 的派生类，它是所有活动验证程序组件的基类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityValidator.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityValidator" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>验证给定的活动是否有效。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> 对象，其中包含在验证期间发生的任何错误或警告。</returns>
      <param name="manager">与验证关联的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />。</param>
      <param name="obj">要验证的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute">
      <summary>标识对需要进行验证的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 执行验证的类。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute.#ctor(System.String)">
      <summary>使用验证程序的类型初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute" /> 类的实例。</summary>
      <param name="validatorTypeName">
        <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> 的类型。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute.#ctor(System.Type)">
      <summary>使用指定的验证程序类型名初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute" /> 类的新实例。</summary>
      <param name="validatorType">
        <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> 类型的名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute.ValidatorTypeName">
      <summary>获取关联的 <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> 类的类型名。</summary>
      <returns>关联的 <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> 类的类型名。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.AttributeInfo">
      <summary>表示设计时类型属性的包装类。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AttributeInfo.ArgumentValues">
      <summary>获取一个包含与此实例关联的每个参数的值的集合。</summary>
      <returns>一个包含与此实例关联的每个参数的值的集合。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AttributeInfo.AttributeType">
      <summary>获取此实例的 <see cref="T:System.Type" />。</summary>
      <returns>此实例的 <see cref="T:System.Type" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AttributeInfo.Creatable">
      <summary>获取一个指示是否可以创建此实例的值。</summary>
      <returns>如果以下两个条件中的任何一个为 true，则返回一个为 false 的值： 定义此属性的 <see cref="T:System.Type" /> 具有一个 <see cref="P:System.Type.Assembly" />，它是一个空引用（在 Visual Basic 中为 Nothing）。 数组 <see cref="P:System.Workflow.ComponentModel.Compiler.AttributeInfo.ArgumentValues" /> 中的任何一个对象为 <see cref="T:System.Type" /><see cref="T:System.Exception" /> 否则返回的值为 true。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.AttributeInfo.CreateAttribute">
      <summary>创建类型为 <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> 的特性。</summary>
      <returns>类型 <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> 的特性。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Workflow.ComponentModel.Compiler.AttributeInfo.Creatable" /> 为 false。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.AttributeInfo.GetArgumentValueAs(System.IServiceProvider,System.Int32,System.Type)">
      <summary>根据类型和索引获取此实例的参数。</summary>
      <returns>被强制转换为所请求类型的 <see cref="T:System.Object" />。</returns>
      <param name="serviceProvider">帮助此操作的 <see cref="T:System.IServiceProvider" />。</param>
      <param name="argumentIndex">参数集合中所请求参数的 integer 索引。</param>
      <param name="requestedType">参数的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="argumentIndex" /> 超出了参数集合的范围。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestedType" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.AttributeInfoAttribute">
      <summary>表示保存有关设计时属性信息的类。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AttributeInfoAttribute.AttributeInfo">
      <summary>获取与此实例关联的 <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" />。</summary>
      <returns>与此实例关联的 <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.AuthorizedType">
      <summary>表示已编译的工作流中被工作流编译器允许或禁止（取决于 <see cref="P:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized" /> 属性的值）的一组类型。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.AuthorizedType.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.AuthorizedType" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AuthorizedType.Assembly">
      <summary>获取或设置包含由此类表示类型的程序集的名称。</summary>
      <returns>程序集的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized">
      <summary>获取或设置一个值，该值指示是否授权此类指定的类型参与工作流编译。</summary>
      <returns>如果授权参与工作流编译，则为 true，否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AuthorizedType.Namespace">
      <summary>获取或设置此实例中表示的类型的命名空间的名称。</summary>
      <returns>此实例中表示的 <see cref="T:System.Type" /> 的命名空间的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AuthorizedType.RegularExpression">
      <summary>获取与此实例关联的 <see cref="T:System.Text.RegularExpressions.Regex" />。</summary>
      <returns>与此实例关联的正则表达式。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.AuthorizedType.TypeName">
      <summary>获取或设置由此实例表示的类型的名称。</summary>
      <returns>由此实例表示的 <see cref="T:System.Type" /> 的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.BindValidationContext">
      <summary>表示用于验证 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的上下文。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.BindValidationContext.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.BindValidationContext" /> 类的新实例，同时初始化 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的目标的 <see cref="T:System.Type" />。</summary>
      <param name="targetType">
        <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的目标的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.BindValidationContext.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.AccessTypes)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.BindValidationContext" /> 类的新实例，同时初始化由此实例表示的绑定的目标的 <see cref="T:System.Type" /> 和 <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" />。</summary>
      <param name="targetType">由此实例表示的 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的目标的 <see cref="T:System.Type" />。</param>
      <param name="access">由此实例表示的 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的目标的 <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" />。</param>
      <exception cref="T:System.ArgumentNullException">为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.BindValidationContext.Access">
      <summary>获取由此实例表示的 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的目标的 <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" />。</summary>
      <returns>由此实例表示的 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的目标的 <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.BindValidationContext.TargetType">
      <summary>获取由此实例表示的 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的目标的 <see cref="T:System.Type" />。</summary>
      <returns>由此实例表示的 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的目标的 <see cref="T:System.Type" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.CodeGenerationManager">
      <summary>允许在编译的代码生成阶段跨活动代码生成器共享数据。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CodeGenerationManager.#ctor(System.IServiceProvider)">
      <summary>使用现有的 <see cref="T:System.IServiceProvider" /> 类型初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.CodeGenerationManager" /> 类的新实例。</summary>
      <param name="serviceProvider">要在此实例中使用的 <see cref="T:System.IServiceProvider" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CodeGenerationManager.Context">
      <summary>获取与此实例关联的 <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />。</summary>
      <returns>与此实例关联的 <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CodeGenerationManager.GetCodeGenerators(System.Type)">
      <summary>获取包含与指定的 <see cref="T:System.Type" /> 关联的每个 <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator" /> 的数组。</summary>
      <returns>包含与指定的 <see cref="T:System.Type" /> 关联的每个 <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator" /> 的数组。</returns>
      <param name="type">所需的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CodeGenerationManager.GetService(System.Type)">
      <summary>提供对指定类型的服务对象的访问。</summary>
      <returns>指定类型的服务对象。</returns>
      <param name="serviceType">所需的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.CompileWorkflowCleanupTask">
      <summary>定义一个 MSBuild 任务以清除编译使用 Visual Basic 创建的工作流时使用的临时文件的内容。 临时文件的内容会被清除，但不会删除这些文件。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompileWorkflowCleanupTask.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.CompileWorkflowCleanupTask" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompileWorkflowCleanupTask.Execute">
      <summary>清除在 <see cref="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowCleanupTask.TemporaryFiles" /> 属性中指定的文件的内容，而不删除文件。</summary>
      <returns>如果已成功执行任务，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowCleanupTask.TemporaryFiles">
      <summary>获取或设置指向临时文件的路径的数组，这些临时文件是在编译使用 Visual Basic .NET 创建的工作流时创建的。</summary>
      <returns>与此编译任务关联的临时文件的列表。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask">
      <summary>表示编译工作流的 MSBuild 任务。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.AssemblyName">
      <summary>获取和设置在编译过程中生成的程序集的名称。</summary>
      <returns>一个包含程序集名称的 String。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.BuildingProject">
      <summary>获取或设置指示此生成任务当前是否应生成工作流项目的值。</summary>
      <returns>如果该项修造任务当前生成工作流项目，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.CompilationOptions">
      <summary>获取或设置编译选项。</summary>
      <returns>编译选项。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.DelaySign">
      <summary>获取或设置一个指示工作流程序集是否将被延迟签名的值。</summary>
      <returns>如果程序集将被延迟签名，则为 true；否则，为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.Execute">
      <summary>运行工作流任务的编译。</summary>
      <returns>如果操作成功，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.HostObject">
      <summary>获取或设置 <see cref="T:System.Object" />，它用于获取调用编译工作流任务时 Visual Studio 宿主所提供的服务。</summary>
      <returns>用于获取在调用编译工作流任务时 Visual Studio 宿主所提供的服务的 <see cref="T:System.Object" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.Imports">
      <summary>获取或设置一个字符串，该字符串包含用于工作流编译的所有导入指令。</summary>
      <returns>一个字符串，该字符串包含用于工作流编译的所有导入指令。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.KeepTemporaryFiles">
      <summary>获取一个布尔值，该值确定是否要保留临时文件。</summary>
      <returns>如果要保留临时文件，则为 true；否则，为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.KeyContainer">
      <summary>获取或设置用于对工作流程序集进行签名的公钥/私钥容器的名称。</summary>
      <returns>用于对工作流程序集进行签名的公钥/私钥容器的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.KeyFile">
      <summary>获取或设置用于对工作流程序集进行签名的文件的路径。</summary>
      <returns>用于对工作流程序集进行签名的文件的路径。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.Microsoft#Build#Framework#ITask#HostObject">
      <summary>获取或设置 Microsoft Build 框架中的“宿主对象”。</summary>
      <returns>Microsoft Build 框架中的宿主对象。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.OutputFiles">
      <summary>获取指向所编译工作流项目中的输出文件的路径的数组。</summary>
      <returns>指向所编译工作流项目中的输出文件的路径的数组。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.ProjectDirectory">
      <summary>获取或设置一个字符串，该字符串包含工作流项目所在的目录的路径。</summary>
      <returns>一个字符串，该字符串包含工作流项目所在的目录的路径。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.ProjectExtension">
      <summary>获取或设置包含工作流项目文件扩展名的字符串。</summary>
      <returns>包含工作流项目文件扩展名的字符串。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.ReferenceFiles">
      <summary>获取或设置指向正在编译的工作流项目的引用文件的路径的数组。</summary>
      <returns>指向正在编译的工作流项目的引用文件的路径的数组。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.ResourceFiles">
      <summary>获取或设置指向正在编译的工作流项目的源文件的路径的数组。</summary>
      <returns>指向正在编译的工作流项目的源文件的路径的数组。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.RootNamespace">
      <summary>获取或设置正在编译的工作流项目的根命名空间。</summary>
      <returns>正在编译的工作流项目的根命名空间。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.SourceCodeFiles">
      <summary>获取或设置指向正在编译的工作流项目中 Visual Basic 或 C# 文件的路径的数组。</summary>
      <returns>指向正在编译的工作流项目中 Visual Basic 或 C# 文件的路径的数组。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.TargetFramework">
      <summary>获取或设置当前项目的目标 .NET Framework。</summary>
      <returns>当前项目的目标 .NET Framework。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.TemporaryFiles">
      <summary>获取指向由正在编译的工作流项目的生成任务创建的临时文件的路径的数组。</summary>
      <returns>指向由正在编译的工作流项目的生成任务创建的临时文件的路径的数组。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.CompileWorkflowTask.WorkflowMarkupFiles">
      <summary>获取或设置指向正在编译的工作流项目的工作流标记文件的路径的数组。</summary>
      <returns>指向正在编译的工作流项目的工作流标记文件的路径的数组。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.CompositeActivityCodeGenerator">
      <summary>可以与复合活动关联的代码生成器组件的基类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompositeActivityCodeGenerator.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.CompositeActivityCodeGenerator" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompositeActivityCodeGenerator.GenerateCode(System.Workflow.ComponentModel.Compiler.CodeGenerationManager,System.Object)">
      <summary>使用特定的 <see cref="T:System.Workflow.ComponentModel.Compiler.CodeGenerationManager" /> 为指定的 <see cref="T:System.Object" /> 生成代码。</summary>
      <param name="manager">生成代码过程中要使用的 <see cref="T:System.Workflow.ComponentModel.Compiler.CodeGenerationManager" />。</param>
      <param name="obj">要为其生成代码的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">无法将 <paramref name="obj" /> 强制转换为类型 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator">
      <summary>
        <see cref="T:System.Workflow.ComponentModel.Compiler.ActivityValidator" /> 的派生类，它是所有复合活动验证程序组件的基类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>验证 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 配置。</summary>
      <returns>在验证过程中发现的错误的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</returns>
      <param name="manager">与验证链接的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />。</param>
      <param name="obj">要验证的活动。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)">
      <summary>根据受影响的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 验证该更改并提供错误。</summary>
      <returns>由验证生成的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" />。</returns>
      <param name="activity">受影响的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <param name="action">定义该更改的 <see cref="T:System.Workflow.ComponentModel.ActivityChangeAction" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activity" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activity" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ConditionValidator">
      <summary>
        <see cref="T:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator" /> 的派生类，它是所有条件验证程序组件的基类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ConditionValidator.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.ConditionValidator" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ConditionValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>使用指定的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> 验证指定的对象。</summary>
      <returns>包含此操作产生的错误的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</returns>
      <param name="manager">用于进行此验证的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />。</param>
      <param name="obj">要验证的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">无法将 <paramref name="obj" /> 强制转换为类型 <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator">
      <summary>
        <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> 的派生类，它是所有依赖项对象验证程序组件的基类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.DependencyObjectValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>使用指定的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> 验证指定 <see cref="T:System.Object" /> 的每个可设置的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <returns>包含此操作产生的错误的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</returns>
      <param name="manager">要在验证中使用的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />。</param>
      <param name="obj">要验证的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">无法将 <paramref name="obj" /> 强制转换为类型 <see cref="T:System.Workflow.ComponentModel.DependencyObject" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ITypeProvider">
      <summary>定义作为类型容器的服务的行为。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ITypeProvider.GetType(System.String)">
      <summary>获取已命名实体的 <see cref="T:System.Type" />。</summary>
      <returns>已命名实体的 <see cref="T:System.Type" />。</returns>
      <param name="name">包含实体名称的字符串。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ITypeProvider.GetType(System.String,System.Boolean)">
      <summary>获取已命名实体的 <see cref="T:System.Type" />。</summary>
      <returns>已命名实体的 <see cref="T:System.Type" />。</returns>
      <param name="name">包含实体名称的字符串。</param>
      <param name="throwOnError">一个指示 <paramref name="name" /> 不可解析时是否引发异常的值。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ITypeProvider.GetTypes">
      <summary>创建并返回包含此实例已知的每个 <see cref="T:System.Type" /> 的数组。</summary>
      <returns>包含此实例已知的每个 <see cref="T:System.Type" /> 的数组。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ITypeProvider.LocalAssembly">
      <summary>在编译过程中为验证正在编译的活动项目中的类型而生成的临时程序集。</summary>
      <returns>由此实例定义的本地 <see cref="T:System.Reflection.Assembly" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ITypeProvider.ReferencedAssemblies">
      <summary>获取由 <see cref="T:System.Type" /> 引用的所有程序集的集合。</summary>
      <returns>由 <see cref="T:System.Type" /> 引用的所有程序集的集合。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ITypeProvider.TypeLoadErrors">
      <summary>获取由导致 <see cref="T:System.Exception" /> 的 <see cref="T:System.Object" /> 键控的加载错误异常的 <see cref="T:System.Collections.IDictionary" />。</summary>
      <returns>由导致 <see cref="T:System.Exception" /> 的 <see cref="T:System.Object" /> 键控的加载错误异常的 <see cref="T:System.Collections.IDictionary" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.ComponentModel.Compiler.ITypeProvider.TypeLoadErrorsChanged">
      <summary>当修改集合 <see cref="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors" /> 时发生。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.ComponentModel.Compiler.ITypeProvider.TypesChanged">
      <summary>当实现此接口的类型提供程序中的类型更改时发生。 在类型提供程序中添加或移除程序集或 <see cref="T:System.CodeDom.CodeCompileUnit" /> 时可能发生这种情况。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService">
      <summary>定义由承载工作流设计器和编译器的环境实现以在验证和编译过程中提供特定于环境的编译信息的接口。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes">
      <summary>获取一个指示是否检查类型的值。</summary>
      <returns>如果检查类型，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.Language">
      <summary>获取在编译工作流时环境使用的编程语言，例如 Visual Studio。</summary>
      <returns>开发环境使用的编程语言的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.RootNamespace">
      <summary>获取为此项目设置的根命名空间。</summary>
      <returns>根命名空间的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.PropertyValidationContext">
      <summary>提供验证 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> 的上下文。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.PropertyValidationContext.#ctor(System.Object,System.Reflection.PropertyInfo,System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.PropertyValidationContext" /> 类的新实例。</summary>
      <param name="propertyOwner">拥有该属性的 <see cref="T:System.Object" /></param>
      <param name="propertyInfo">关联的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <param name="propertyName">属性的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyOwner" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyOwner" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.PropertyValidationContext.#ctor(System.Object,System.Workflow.ComponentModel.DependencyProperty)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.PropertyValidationContext" /> 类的新实例。</summary>
      <param name="propertyOwner">拥有该属性的 <see cref="T:System.Object" />。</param>
      <param name="dependencyProperty">关联的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyOwner" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.PropertyValidationContext.Property">
      <summary>获取作为 <see cref="T:System.Object" /> 与此实例关联的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <returns>作为 <see cref="T:System.Object" /> 与此实例关联的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.PropertyValidationContext.PropertyName">
      <summary>获取与此实例关联的属性名称。</summary>
      <returns>与此实例关联的属性名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.PropertyValidationContext.PropertyOwner">
      <summary>获取拥有与此实例关联的属性的 <see cref="T:System.Object" />。</summary>
      <returns>拥有与此实例关联的属性的 <see cref="T:System.Object" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.TypeProvider">
      <summary>
        <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" /> 的实现，充当指示的程序集和代码编译单元内类型的容器。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /> 类的新实例。</summary>
      <param name="serviceProvider">此实例的包装的 <see cref="T:System.IServiceProvider" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)">
      <summary>添加已经加载的程序集。 调用方负责加载程序集，而且 <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /> 包括此程序集中的类型以便在调用 <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType" /> 时进行分配。</summary>
      <param name="assembly">要为其添加引用的 <see cref="P:System.Type.Assembly" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)">
      <summary>将对 <see cref="P:System.Type.Assembly" /> 的引用添加到内部列表。 此程序集用于在 <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /> 方法中查找 <see cref="T:System.Type" />。</summary>
      <param name="path">要添加的 <see cref="P:System.Type.Assembly" /> 的路径。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
      <summary>将对 <see cref="T:System.CodeDom.CodeCompileUnit" /> 的引用添加到内部列表。 此 <see cref="T:System.CodeDom.CodeCompileUnit" /> 用于在 <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)" /> 方法中查找 <see cref="T:System.Type" />。</summary>
      <param name="codeCompileUnit">要相加的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="codeCompileUnit" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="codeCompileUnit" /> 已在此实例中引用。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.TypeProvider.AssemblyNameResolver">
      <summary>获取或设置引用包含一个参数和一个返回值的方法的委托，该方法返回指定类型所属的程序集显示名称。</summary>
      <returns>引用包含一个参数和一个返回值的方法的委托，该方法返回指定类型所属的程序集显示名称。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.Dispose">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /> 使用的所有资源。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetAssemblyName(System.Type)">
      <summary>返回在其中声明指定类型的程序集的程序集显示名称。</summary>
      <returns>在其中声明指定类型的程序集的程序集显示名称。</returns>
      <param name="type">要获取其程序集名称的类型。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEnumNames(System.Type)">
      <summary>提供一个字符串数组，其中包含指定的 <see cref="T:System.Enum" /> 的名称并按索引顺序排列。</summary>
      <returns>按索引顺序排列的指定的 <see cref="T:System.Enum" /> 名称。</returns>
      <param name="enumType">要从中获取名称的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> 不是 <see cref="T:System.Enum" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetEventHandlerType(System.Reflection.EventInfo)">
      <summary>如果提供对 <see cref="T:System.Reflection.EventInfo" /> 的引用，则获取 <see cref="T:System.EventHandler" /> 的 <see cref="T:System.Type" />。</summary>
      <returns>提供对 <see cref="T:System.Reflection.EventInfo" /> 的引用的情况下 <see cref="T:System.EventHandler" /> 的 <see cref="T:System.Type" />。</returns>
      <param name="eventInfo">要获取其 <see cref="T:System.EventHandler" /> 类型的 <see cref="T:System.Reflection.EventInfo" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventInfo" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetService(System.Type)">
      <summary>获取提供指定服务 <see cref="T:System.Type" /> 的 <see cref="T:System.Object" />。</summary>
      <returns>提供指定服务 <see cref="T:System.Type" /> 的 <see cref="T:System.Object" />。</returns>
      <param name="serviceType">
        <see cref="T:System.Object" /> 要提供的服务 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String)">
      <summary>从使用 <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" />、<see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" /> 或 <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" /> 添加到 TypeProvider 的一组程序集中获取类型。</summary>
      <returns>请求的 <see cref="T:System.Type" />。</returns>
      <param name="name">类型名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为空引用（在 Visual Basic 中为 Nothing）</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetType(System.String,System.Boolean)">
      <summary>从使用 <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssembly(System.Reflection.Assembly)" />、<see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddAssemblyReference(System.String)" /> 或 <see cref="M:System.Workflow.ComponentModel.Compiler.TypeProvider.AddCodeCompileUnit(System.CodeDom.CodeCompileUnit)" /> 添加到 TypeProvider 的一组程序集中获取类型。</summary>
      <returns>请求的 <see cref="T:System.Type" />。</returns>
      <param name="name">类型名称。</param>
      <param name="throwOnError">一个指示 <paramref name="name" /> 不可解析时是否引发异常的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为空引用（在 Visual Basic 中为 Nothing）</exception>
      <exception cref="T:System.Exception">
        <paramref name="name" /> 不可解析，因此 <paramref name="throwOnError" /> 为 true。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.GetTypes">
      <summary>创建一个包含此实例已知的每个 <see cref="T:System.Type" /> 的数组。</summary>
      <returns>包含此实例已知的每个 <see cref="T:System.Type" /> 的数组。</returns>
      <exception cref="T:System.Reflection.ReflectionTypeLoadException">未能加载的任何 <see cref="T:System.Type" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsAssignable(System.Type,System.Type)">
      <summary>指示是否可以安全地将一个类型分配给另一个类型。</summary>
      <returns>如果可以安全执行赋值，则为 true；否则为 false。</returns>
      <param name="toType">赋值的目标 <see cref="T:System.Type" />。</param>
      <param name="fromType">赋值的源 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsEnum(System.Type)">
      <summary>指示 <see cref="T:System.Type" /> 的类型是否为 <see cref="T:System.Enum" />。</summary>
      <returns>如果 <see cref="T:System.Type" /> 为 <see cref="T:System.Enum" />，则为 true；否则为 false。</returns>
      <param name="type">要测试的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSubclassOf(System.Type,System.Type)">
      <summary>指示一个 <see cref="T:System.Type" /> 是否为另一个 <see cref="T:System.Type" /> 的派生类。</summary>
      <returns>如果所测试的关系为 true，则为 true；否则为 false。</returns>
      <param name="subclass">将作为派生类进行测试的 <see cref="T:System.Type" />。</param>
      <param name="superClass">将作为类进行测试的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedProperty(System.Reflection.PropertyInfo,System.Object)">
      <summary>返回一个值，该值确定是否在目标 .NET Framework 中支持指定的属性。</summary>
      <returns>如果在目标 .NET Framework 中支持指定的属性，则为 true；否则为 false。</returns>
      <param name="property">要解析的属性。</param>
      <param name="declaringInstance">在其中声明指定属性的实例。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.TypeProvider.IsSupportedPropertyResolver">
      <summary>获取或设置引用包含两个参数和一个返回值的方法的委托，该方法确定是否在目标 .NET Framework 中支持指定的属性。</summary>
      <returns>引用包含两个参数和一个返回值的方法的委托，该方法确定是否在目标 .NET Framework 中支持指定的属性。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.TypeProvider.LocalAssembly">
      <summary>获取一个值，该值表示在本地为此实例定义的 <see cref="T:System.Reflection.Assembly" />。</summary>
      <returns>在本地为此实例定义的 <see cref="T:System.Reflection.Assembly" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.TypeProvider.ReferencedAssemblies">
      <summary>获取由 <see cref="T:System.Type" /> 引用的所有程序集的集合。</summary>
      <returns>由 <see cref="T:System.Type" /> 引用的所有程序集的集合。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RefreshCodeCompileUnit(System.CodeDom.CodeCompileUnit,System.EventHandler)">
      <summary>更新与此实例关联的 <see cref="T:System.CodeDom.CodeCompileUnit" /> 引用。</summary>
      <param name="codeCompileUnit">用来刷新的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
      <param name="refresher">要向其委托此事件的 <see cref="T:System.EventHandler" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="codeCompileUnit" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">此实例已经引用了主题 <see cref="T:System.CodeDom.CodeCompileUnit" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssembly(System.Reflection.Assembly)">
      <summary>从此实例中移除所有对主题 <see cref="T:System.Reflection.Assembly" /> 的引用。</summary>
      <param name="assembly">要从此实例中移除的 <see cref="T:System.Reflection.Assembly" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> 为空引用（在 Visual Basic 中为 Nothing）</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveAssemblyReference(System.String)">
      <summary>从此实例中移除基于路径的 <see cref="T:System.Reflection.Assembly" /> 引用。</summary>
      <param name="path">要移除的 <see cref="T:System.Reflection.Assembly" /> 的路径。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为空引用（在 Visual Basic 中为 Nothing）</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.RemoveCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
      <summary>从此实例中移除所有对主题 <see cref="T:System.CodeDom.CodeCompileUnit" /> 的引用。</summary>
      <param name="codeCompileUnit">要移除的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="codeCompileUnit" /> 为空引用（在 Visual Basic 中为 Nothing）</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.TypeProvider.SetLocalAssembly(System.Reflection.Assembly)">
      <summary>将本地 <see cref="T:System.Reflection.Assembly" /> 的值设置为引用的 <see cref="T:System.Reflection.Assembly" />。</summary>
      <param name="assembly">用于设置此值的 <see cref="T:System.Reflection.Assembly" /></param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors">
      <summary>获取由导致 <see cref="T:System.Exception" /> 的 <see cref="T:System.Object" /> 键控的加载错误异常的 <see cref="T:System.Collections.IDictionary" />。</summary>
      <returns>由导致 <see cref="T:System.Exception" /> 的 <see cref="T:System.Object" /> 键控的加载错误异常的 <see cref="T:System.Collections.IDictionary" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrorsChanged">
      <summary>当修改集合 <see cref="P:System.Workflow.ComponentModel.Compiler.TypeProvider.TypeLoadErrors" /> 时发生。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.ComponentModel.Compiler.TypeProvider.TypesChanged">
      <summary>在修改已定义类型的集合时发生。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ValidationError">
      <summary>表示所有验证错误的基类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationError.#ctor(System.String,System.Int32)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> 类的新实例，同时初始化此实例的错误文本和错误号。</summary>
      <param name="errorText">此实例的关联错误文本。</param>
      <param name="errorNumber">此错误的错误号。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationError.#ctor(System.String,System.Int32,System.Boolean)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> 类的新实例，同时初始化此实例的错误文本、错误号和错误类型。</summary>
      <param name="errorText">此实例的关联错误文本。</param>
      <param name="errorNumber">此错误的错误号。</param>
      <param name="isWarning">一个布尔值，如果将错误视为警告，则为 true；否则为 false。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationError.#ctor(System.String,System.Int32,System.Boolean,System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> 类的新实例，同时初始化错误文本、错误号、错误类型和与此错误关联的属性名称。</summary>
      <param name="errorText">此实例的关联错误文本。</param>
      <param name="errorNumber">此错误的错误号。</param>
      <param name="isWarning">一个布尔值，如果将错误视为警告，则为 true；否则为 false。</param>
      <param name="propertyName">与此错误关联的属性名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationError.ErrorNumber">
      <summary>获取此实例的错误号。</summary>
      <returns>此实例的错误号。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationError.ErrorText">
      <summary>获取此实例的错误文本。</summary>
      <returns>此实例的错误文本。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationError.GetNotSetValidationError(System.String)">
      <summary>创建一个为尚未设置的属性的错误类型定义的新验证错误。</summary>
      <returns>为尚未设置的属性的错误类型定义的新验证错误。</returns>
      <param name="propertyName">与此错误关联的属性。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationError.IsWarning">
      <summary>获取一个指示此实例是否为警告的值。</summary>
      <returns>如果是警告，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationError.PropertyName">
      <summary>获取或设置未通过验证的属性的名称。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含未通过验证的属性的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationError.ToString">
      <summary>提供此实例的字符串表示形式，包含错误类型（错误或警告）、错误号和错误文本。</summary>
      <returns>此实例的字符串表示形式，包含错误类型（错误或警告）、错误号和错误文本。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationError.UserData">
      <summary>获取一个 <see cref="T:System.Collections.IDictionary" />，用于定义和存储用户定义的与此实例相关的数据。</summary>
      <returns>一个 <see cref="T:System.Collections.IDictionary" />，用于定义和存储用户定义的与此实例相关的数据。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection">
      <summary>保存 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> 对象的集合。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Compiler.ValidationError})">
      <summary>从类型为 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> 的 <see cref="T:System.Collections.IEnumerable" /> 集合初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> 类的新实例</summary>
      <param name="value">类型为 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> 的 <see cref="T:System.Collections.IEnumerable" /> 集合</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection.#ctor(System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> class by using a <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />.</summary>
      <param name="value">包含验证错误的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection.AddRange(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Compiler.ValidationError})">
      <summary>将可枚举元素的集合复制到集合的末尾。</summary>
      <param name="value">要添加到 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> 集合末尾的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> 元素的集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection.HasErrors">
      <summary>指示集合是否包含指示编译错误的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> 对象。</summary>
      <returns>如果活动生成了验证错误，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection.HasWarnings">
      <summary>此属性指示 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> 是否至少包含一个指示编译警告的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> 对象。</summary>
      <returns>如果活动生成了验证警告，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection.ToArray">
      <summary>返回包含此集合中所含所有 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> 对象的数组的新实例。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> 类的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> 数组。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ValidationManager">
      <summary>允许在编译过程中跨验证程序共享上下文信息，如属性验证、父活动等。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationManager.#ctor(System.IServiceProvider)">
      <summary>使用标识的服务提供程序初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> 类的新实例。</summary>
      <param name="serviceProvider">定位 GUID 标识的服务的 <see cref="T:System.IServiceProvider" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationManager.#ctor(System.IServiceProvider,System.Boolean)">
      <summary>使用标识的服务提供程序初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" /> 类的新实例并指示是否应验证子 <see cref="T:System.Workflow.ComponentModel.Activity" /> 类。</summary>
      <param name="serviceProvider">定位 GUID 标识的服务的 <see cref="T:System.IServiceProvider" />。</param>
      <param name="validateChildActivities">如果验证当前 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的子 <see cref="T:System.Workflow.ComponentModel.Activity" /> 类，则为 true；否则为 false。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationManager.Context">
      <summary>获取一个指示堆栈对象的值，验证程序可以使用该堆栈对象向嵌套的验证程序提供信息。</summary>
      <returns>验证程序可以用来向嵌套的验证程序提供信息的 <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationManager.GetService(System.Type)">
      <summary>获取指定 <see cref="T:System.Type" /> 的服务对象。</summary>
      <returns>类型为 <paramref name="serviceType" /> 的服务对象；如果不存在类型为 <paramref name="serviceType" /> 的服务对象，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="serviceType">一个对象，它指定要检索的服务对象的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationManager.GetValidators(System.Type)">
      <summary>通过查找应用于类型的验证程序特性，返回与该类型关联的验证程序的数组。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> 类的数组。</returns>
      <param name="type">要找的 <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> 类的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationManager.ValidateChildActivities">
      <summary>获取一个指示是否应验证子 <see cref="T:System.Workflow.ComponentModel.Activity" /> 类的值。</summary>
      <returns>如果应验证子 <see cref="T:System.Workflow.ComponentModel.Activity" /> 类，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ValidationOption">
      <summary>指定 <see cref="P:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute.ValidationOption" /> 属性中的验证选项。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.ComponentModel.Compiler.ValidationOption.None">
      <summary>不执行任何验证。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Compiler.ValidationOption.Optional">
      <summary>验证是可选的。 如果值存在，将对其验证。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Compiler.ValidationOption.Required">
      <summary>必须执行验证。 值必须存在并将对其验证。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute">
      <summary>包含 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOption" /> 信息的自定义属性。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute.#ctor(System.Workflow.ComponentModel.Compiler.ValidationOption)">
      <summary>使用 <see cref="P:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute.ValidationOption" /> 的值初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute" /> 类的新实例。</summary>
      <param name="validationOption">此实例的所需 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOption" /> 枚举值。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.ValidationOptionAttribute.ValidationOption">
      <summary>获取与此实例关联的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOption" /> 值。</summary>
      <returns>与此实例关联的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationOption" /> 值。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.Validator">
      <summary>所有验证程序组件的基类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.Validator.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.Validator" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.Validator.GetFullPropertyName(System.Workflow.ComponentModel.Compiler.ValidationManager)">
      <summary>可提取完整属性名的帮助器方法。</summary>
      <returns>完整的属性名。</returns>
      <param name="manager">与验证链接的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.Validator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>验证指定的对象并返回验证错误的集合。</summary>
      <returns>包含此操作产生的验证错误的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</returns>
      <param name="manager">与验证链接的验证管理器。</param>
      <param name="obj">要验证的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)">
      <summary>在派生类中重写时，根据所添加或移除的指定 <see cref="T:System.Workflow.ComponentModel.Activity" /> 来验证更改。 应用在动态更新过程中对工作流作出的更改时调用此函数。</summary>
      <returns>由操作生成的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" />。</returns>
      <param name="activity">指定的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <param name="action">指定的 <see cref="T:System.Workflow.ComponentModel.ActivityChangeAction" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activity" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activity" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperties(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>自动验证特定对象属性的帮助器方法。</summary>
      <returns>包含此操作产生的验证错误的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</returns>
      <param name="manager">与验证链接的验证管理器。</param>
      <param name="obj">要验证的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.Validator.ValidateProperty(System.Reflection.PropertyInfo,System.Object,System.Object,System.Workflow.ComponentModel.Compiler.ValidationManager)">
      <summary>对属性执行验证并返回包含验证结果的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</summary>
      <returns>包含验证结果的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</returns>
      <param name="propertyInfo">有关主题属性的 <see cref="T:System.Reflection.PropertyInfo" />。</param>
      <param name="propertyOwner">属性的所有者。</param>
      <param name="propertyValue">该属性的值。</param>
      <param name="manager">此操作的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext">
      <summary>为当前的编译或验证任务提供工作流编译选项。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CheckTypes">
      <summary>获取一个值，该值指示是否在当前范围上启用 <see cref="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes" />。</summary>
      <returns>如果启用 P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes，则为 <see cref="true" />；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.CreateScope(System.IServiceProvider)">
      <summary>在当前范围初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext" /> 类。</summary>
      <returns>对范围的引用。</returns>
      <param name="serviceProvider">当前范围的工作流编译器选项。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Current">
      <summary>获取在当前范围可用的 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext" />。</summary>
      <returns>在当前范围可用的工作流编译上下文；如果未初始化编译范围，则为 null。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.GetAuthorizedTypes">
      <summary>返回在已编译工作流中编译器允许的类型列表。</summary>
      <returns>在已编译工作流中编译器允许的类型列表。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.Language">
      <summary>获取在当前范围可用的工作流编译器选项 <see cref="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.Language" />。</summary>
      <returns>在当前范围可用的工作流编译器选项编程语言。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilationContext.RootNamespace">
      <summary>获取在当前范围可用的工作流编译器选项 <see cref="P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.RootNamespace" />。</summary>
      <returns>在当前范围可用的工作流编译器选项根命名空间。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowCompiler">
      <summary>表示用于使用 C# 或 Visual Basic 代码和/或 XAML 标记开发的工作流的编译器。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompiler.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompiler" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompiler.Compile(System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters,System.String[])">
      <summary>编译基于 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" /> 作为参数传递的文件中包含的工作流的列表。</summary>
      <returns>表示操作结果的 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults" />。</returns>
      <param name="parameters">
        <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" />。</param>
      <param name="files">包含指向要编译的文件的路径的字符串数组。 这些文件可以是代码文件（比如 .vb 或 .cs），也可以是工作流标记文件。 工作流标记文件的扩展名必须是 .xoml，以便于编译器识别。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parameters" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parameters" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError">
      <summary>表示在工作流编译过程中获取的 <see cref="T:System.CodeDom.Compiler.CompilerError" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError.#ctor(System.String,System.Int32,System.Int32,System.String,System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError" /> 类的新实例。包括对定义此错误的多个属性的初始化。</summary>
      <param name="fileName">一个字符串，其中包含有错误的源文件的名称。</param>
      <param name="line">表示错误行号的整数。</param>
      <param name="column">表示错误开始的列位置的整数。</param>
      <param name="errorNumber">包含错误号的字符串。</param>
      <param name="errorText">包含错误描述文本的字符串。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError.#ctor(System.String,System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError" /> 类的新实例。初始化实例以定义源文件名和 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" />。</summary>
      <param name="fileName">一个字符串，其中包含有错误的源文件的名称。</param>
      <param name="exception">与此实例关联的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError.PropertyName">
      <summary>返回与编译器错误关联的属性。</summary>
      <returns>与编译器错误关联的属性。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError.ToString">
      <summary>提供表示此实例的字符串。</summary>
      <returns>表示此实例的字符串/</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerError.UserData">
      <summary>获取一个可进行访问以读取和写入与此实例关联的用户定义数据的 <see cref="T:System.Collections.IDictionary" />。</summary>
      <returns>一个可进行访问以读取和写入与此实例关联的用户定义数据的 <see cref="T:System.Collections.IDictionary" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerOptionsService">
      <summary>提供 <see cref="T:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService" /> 的默认实现。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerOptionsService.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerOptionsService" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerOptionsService.CheckTypes">
      <summary>获取一个值，该值指示是否对照一个列表检查所编译的工作流中的类型，该列表基于 <see cref="P:System.Workflow.ComponentModel.Compiler.AuthorizedType.Authorized" /> 属性的值允许或排除类型。</summary>
      <returns>如果启用 P:System.Workflow.ComponentModel.Compiler.IWorkflowCompilerOptionsService.CheckTypes，则为 <see cref="true" />；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerOptionsService.Language">
      <summary>获取由环境使用的编程语言的名称。</summary>
      <returns>工作流编译器使用的编程语言的名称。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerOptionsService.RootNamespace">
      <summary>获取环境的根命名空间。</summary>
      <returns>环境的根命名空间。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerOptionsService.TargetFrameworkMoniker">
      <summary>获取已编译工作流程序集的目标 .NET Framework 版本。</summary>
      <returns>已编译工作流程序集的目标 .NET Framework 版本。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters">
      <summary>表示在编译过程中传递到 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompiler" /> 的参数。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.#ctor(System.String[])">
      <summary>用编译中使用的程序集的名称初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" /> 类的新实例。</summary>
      <param name="assemblyNames">在编译中使用的程序集的名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.#ctor(System.String[],System.String)">
      <summary>用编译中使用的程序集的名称和应用于输出文件的名称来初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" /> 类的新实例。</summary>
      <param name="assemblyNames">在编译中使用的程序集的名称。</param>
      <param name="outputName">应用于输出文件的名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.#ctor(System.String[],System.String,System.Boolean)">
      <summary>用编译中使用的程序集的名称、应用于输出文件的名称和用于包含调试信息的指示符来初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" /> 类的新实例。</summary>
      <param name="assemblyNames">在编译中使用的程序集的名称。</param>
      <param name="outputName">应用于输出文件的名称。</param>
      <param name="includeDebugInformation">指示是否应生成 PDB 文件以进行调试。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.#ctor(System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters)">
      <summary>从现有实例初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" /> 类的新实例。</summary>
      <param name="parameters">用于初始化新实例的 <see cref="System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters)" /> 实例。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.CompilerOptions">
      <summary>获取或设置包含此编译的命令行选项的字符串。</summary>
      <returns>包含此编译的命令行选项的字符串。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.GenerateCodeCompileUnitOnly">
      <summary>获取或设置一个值，该值指示是只生成一个 <see cref="T:System.CodeDom.CodeCompileUnit" />，还是调用 C# 或 Visual Basic 编译器来生成可执行文件或 DLL。</summary>
      <returns>一个值，该值指示是只生成一个 <see cref="T:System.CodeDom.CodeCompileUnit" />，还是调用 C# 或 Visual Basic 编译器来生成可执行文件或 DLL。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.LanguageToUse">
      <summary>获取或设置一个字符串，该字符串包含在编译 <see cref="T:System.CodeDom.CodeCompileUnit" /> 中要使用的语言。</summary>
      <returns>一个字符串，该字符串包含在编译 <see cref="T:System.CodeDom.CodeCompileUnit" /> 中要使用的语言。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.LibraryPaths">
      <summary>获取表示编译器在其下查找引用程序集的目录名集合的属性。</summary>
      <returns>表示编译器在其下查找引用程序集的目录名集合的属性。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters.UserCodeCompileUnits">
      <summary>获取或设置将在调用工作流编译器时使用的代码编译单元的集合。</summary>
      <returns>将在调用工作流编译器时使用的代码编译单元的集合。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults">
      <summary>表示工作流编译的结果。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults.CompiledUnit">
      <summary>获取在工作流编译过程中生成的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</summary>
      <returns>与此实例关联的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute">
      <summary>包含有关工作流标记文件信息的属性。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute" /> 类的新实例，同时初始化 <see cref="P:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute.FileName" /> 和 <see cref="P:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute.MD5Digest" /> 的值。</summary>
      <param name="fileName">一个包含标记文件名的字符串。</param>
      <param name="md5Digest">一个表示文件的 <see cref="P:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute.MD5Digest" /> 的字符串。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute.FileName">
      <summary>获取由此实例表示的文件的名称。</summary>
      <returns>由此实例表示的文件的名称</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowMarkupSourceAttribute.MD5Digest">
      <summary>获取与工作流标记源文件关联的、由 MD5 哈希算法计算的效验和。</summary>
      <returns>一个包含与工作流标记源文件关联的效验和的 <see cref="T:System.String" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException">
      <summary>表示一个在工作流没有通过验证时发生的 <see cref="T:System.Exception" />。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException" /> 类的新实例。将异常消息作为一个参数传递。</summary>
      <param name="message">异常消息。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException.#ctor(System.String,System.Exception)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException" /> 类的新实例。将异常消息和内部异常作为参数传递。</summary>
      <param name="message">异常消息。</param>
      <param name="innerException">与此异常关联的 <see cref="P:System.Exception.InnerException" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException.#ctor(System.String,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException" /> 类的新实例。将异常消息和错误集合作为参数传递。</summary>
      <param name="message">异常消息。</param>
      <param name="errors">与此异常关联的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException.Errors">
      <summary>返回在创建/验证工作流时获取的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" />。</summary>
      <returns>一个包含导致此异常的每个 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> 的数组。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用有关 <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException" /> 的信息设置指定的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">对象的引用，该对象保存对异常进行序列化和反序列化所需的数据。</param>
      <param name="context">提供对异常数据进行序列化的手段。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter">
      <summary>提供用于在 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 类与其他各种表示形式之间执行转换的类型转换器。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回一个值，该值指示转换器能否使用指定上下文将给定源类型的对象转换为 <see cref="T:System.Workflow.ComponentModel.ActivityBind" />。</summary>
      <returns>如果该转换器能够执行转换，则为 true；否则为 false。</returns>
      <param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">表示要转换的类型的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回一个值，该值指示此转换器能否使用指定上下文将 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 转换为目标类型。</summary>
      <returns>如果该转换器能够执行转换，则为 true；否则为 false。</returns>
      <param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">一个 <see cref="T:System.Type" />，表示要将 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 转换为的类型。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>使用指定的上下文和区域性信息将指定对象转换为 <see cref="T:System.Workflow.ComponentModel.ActivityBind" />。</summary>
      <returns>表示转换后的值的 <see cref="T:System.Object" />。</returns>
      <param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">一个可选的 <see cref="T:System.Globalization.CultureInfo" />。 如果未提供区域性设置，则使用当前区域性。</param>
      <param name="valueToConvert">要转换的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.InvalidOperationException">将 <paramref name="valueToConvert" /> 转换为 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 时发生错误。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>使用指定的上下文和区域性将指定的 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 对象转换为指定的类型。</summary>
      <returns>被转换的对象。</returns>
      <param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">
        <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 要转换为的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">要转换的 <see cref="T:System.Workflow.ComponentModel.ActivityBind" />。</param>
      <param name="destinationType">要将 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 转换成的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>使用指定的上下文和特性返回由 <paramref name="value" /> 参数指定的数组类型的属性集合。</summary>
      <returns>包含为此数据类型公开的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />；如果未包含属性，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="value">一个 <see cref="T:System.Object" />，指定要为其获取属性的数组类型。</param>
      <param name="attributes">用作筛选器的 <see cref="T:System.Attribute" /> 数组。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回一个值，该值指示 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 是否使用指定的上下文支持属性。</summary>
      <returns>如果应调用 <see cref="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> 来查找此对象的属性，则为 true；否则为 false。</returns>
      <param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>使用指定的上下文返回 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 数据类型的标准值的集合。</summary>
      <returns>保存标准有效值集的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />；如果数据类型不支持标准值集，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>使用指定的上下文返回从 <see cref="Overload:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetStandardValues" /> 返回的标准值的集合是否为可能值的独占列表。</summary>
      <returns>如果从 <see cref="Overload:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetStandardValues" /> 返回的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 是可能值的穷举列表，则为 true；如果还可能有其他值，则为 false。</returns>
      <param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>使用指定的上下文返回此对象是否支持可以从列表中选取的标准值集。</summary>
      <returns>如果应调用 <see cref="Overload:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter.GetStandardValues" /> 来查找对象支持的一组公共值，则为 true；否则，为 false。</returns>
      <param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs">
      <summary>包含对与设计器关联的活动所做更改的信息。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs.#ctor(System.Workflow.ComponentModel.Activity,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" /> 的实例。</summary>
      <param name="activity">与设计器关联的已更改的活动。</param>
      <param name="member">已更改的活动的成员。</param>
      <param name="oldValue">更改前成员的值。</param>
      <param name="newValue">更改后成员的值。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs.Activity">
      <summary>获取已更改的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</summary>
      <returns>已更改的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs.Member">
      <summary>要更改的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的成员。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.MemberDescriptor" />，用于描述已更改的成员。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs.NewValue">
      <summary>已更改的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的成员的新值。</summary>
      <returns>已更改的成员的新值。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs.OldValue">
      <summary>已更改的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的成员的旧值。</summary>
      <returns>已更改的成员的旧值。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesigner">
      <summary>为所有活动设计器组件提供强制的基类。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.AccessibilityObject">
      <summary>获取一个 <see cref="T:System.Windows.Forms.AccessibleObject" />，辅助功能应用程序使用该对象为残障用户调整应用程序 UI。</summary>
      <returns>与该控件关联的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Activity">
      <summary>获取与设计器关联的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</summary>
      <returns>与此设计器关联的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Bounds">
      <summary>获取一个 <see cref="T:System.Drawing.Rectangle" />，其中包含环绕设计器的矩形的值（以逻辑坐标表示）。</summary>
      <returns>包含设计器的 <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CanBeParentedTo(System.Workflow.ComponentModel.Design.CompositeActivityDesigner)">
      <summary>返回一个值，该值指示 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 能否设置与设计器关联的活动的父级。</summary>
      <returns>如果 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 可设置为与设计器关联的活动的父级，则为 true；否则为 false。</returns>
      <param name="parentActivityDesigner">可能会设置为父级的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CanConnect(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)">
      <summary>返回一个值，该值指示能否在当前活动设计器上的指定连接点与目标活动设计器上的指定连接点之间创建连接。</summary>
      <returns>为 true 指示可在源和目标之间创建连接；否则为 false。</returns>
      <param name="source">要在当前活动设计器上选中的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />。</param>
      <param name="target">要在目标活动设计器上选中的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.CreateView(System.ComponentModel.Design.ViewTechnology)">
      <summary>使用指定的视图技术为当前活动设计器创建工作流视图。</summary>
      <returns>包含当前活动设计器的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />。</returns>
      <param name="viewTechnology">用于创建工作流视图的视图技术。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerActions">
      <summary>获取与配置错误关联的操作的数组。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> 的只读数组。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.DesignerTheme">
      <summary>获取活动设计器的当前设计器主题。</summary>
      <returns>包含活动设计器的主题设置的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Dispose(System.Boolean)">
      <summary>释放 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 类使用的资源。</summary>
      <param name="disposing">如果正在释放 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />，则为 true；如果正在终止 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />，则为 false。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.DoDefaultAction">
      <summary>执行与设计器关联的默认 UI 操作。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.EnableVisualResizing">
      <summary>获取一个值，该值指示能否在任意形式的设计器中调整活动设计器的大小。</summary>
      <returns>如果可以在 <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" /> 中调整活动设计器的大小，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.EnsureVisible">
      <summary>移动屏幕的可视区域以确保指定设计器是可见的。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Finalize">
      <summary>当在派生类中重写时，允许对象自行清理任何资源。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetConnectionPoints(System.Workflow.ComponentModel.Design.DesignerEdges)">
      <summary>返回沿指定 <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> 的活动设计器连接点的只读集合。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 泛型只读集合，活动设计器可以在这些点连接到其他活动设计器。</returns>
      <param name="edges">要沿其收集连接点的<see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetConnections(System.Workflow.ComponentModel.Design.DesignerEdges)">
      <summary>返回设计器用于连接的点的只读集合。</summary>
      <returns>一个只读的点集合，其中包含用于活动设计器的连接。</returns>
      <param name="edges">用于查询其中的点的<see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetPreviewImage(System.Drawing.Graphics)">
      <summary>获取指定 <see cref="T:System.Drawing.Graphics" /> 上的活动设计器的图像。</summary>
      <returns>一个 <see cref="T:System.Drawing.Image" /> 对象，其中包含在拖放操作及 <see cref="T:System.Workflow.Activities.ConditionedActivityGroup" /> 预览窗格中用作预览图像的位图。</returns>
      <param name="compatibleGraphics">用于绘制图像的 <see cref="T:System.Drawing.Graphics" /> 对象。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetRootDesigner(System.IServiceProvider)">
      <summary>返回与工作流的设计图面关联的设计器。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />，它是设计器宿主的 <see cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />。</returns>
      <param name="serviceProvider">实现 <see cref="T:System.IServiceProvider" /> 的对象。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.GetService(System.Type)">
      <summary>尝试从与设计器关联的活动的设计模式站点检索指定类型的服务。</summary>
      <returns>一个实现所请求服务的对象；如果无法解析该服务，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="serviceType">要请求的服务的类型。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Glyphs">
      <summary>获取用于修饰设计器的标志符号的集合。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" />，其中包含要显示在设计器上的标志符号。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest(System.Drawing.Point)">
      <summary>获取有关位于屏幕上指定点的 ActivityDesigner 的信息。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />，其中包含有关位于指定点的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 的信息。</returns>
      <param name="point">一个表示 x 和 y 坐标的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Image">
      <summary>获取或设置与设计器关联的 <see cref="T:System.Drawing.Image" />。</summary>
      <returns>与此设计器关联的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ImageRectangle">
      <summary>获取与设计器关联的图像的环绕边界值（以逻辑坐标表示）。</summary>
      <returns>
        <see cref="T:System.Drawing.Rectangle" /> 图像。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)">
      <summary>使用关联的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 初始化设计器。</summary>
      <param name="activity">应该用于初始化设计器的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Invalidate">
      <summary>使设计器无效。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.Invalidate(System.Drawing.Rectangle)">
      <summary>使设计器上的指定矩形无效。</summary>
      <param name="rectangle">一个 <see cref="T:System.Drawing.Rectangle" />，用于指定工作流上要使之无效的区域。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner">
      <summary>获取或设置调用与当前活动设计器关联的活动的活动设计器。</summary>
      <returns>要调用当前活动设计器的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />。</returns>
      <exception cref="T:System.NotSupportedException">对 <see cref="P:System.Workflow.ComponentModel.Design.ActivityDesigner.InvokingDesigner" /> 尝试执行设置操作。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.IsCommentedActivity(System.Workflow.ComponentModel.Activity)">
      <summary>返回一个值，该值指示当前设计器的活动是否已注释或位于已注释的活动内。</summary>
      <returns>如果活动已注释或位于已注释的活动内，则为 true；否则为 false。</returns>
      <param name="activity">位于当前活动设计器中的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsLocked">
      <summary>获取一个值，该值指示能否修改与设计器关联的活动。</summary>
      <returns>如果可以修改与设计器关联的活动，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsPrimarySelection">
      <summary>获取一个值，该值指示与设计器关联的活动是否为主选择。</summary>
      <returns>如果与设计器关联的活动为主选择，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsRootDesigner">
      <summary>获取一个值，该值指示设计器是否为根设计器。</summary>
      <returns>如果设计器为根设计器，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSelected">
      <summary>获取一个值，该值指示是否选择了与设计器关联的活动。</summary>
      <returns>如果选择了与设计器关联的活动，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.IsSupportedActivityType(System.Type)">
      <summary>返回一个值，该值指示在活动设计器为根设计器的情况下是否支持指定的活动类型。</summary>
      <returns>如果 <paramref name="activityType" /> 受支持，则为 true；否则为 false。</returns>
      <param name="activityType">支持活动的类型。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.IsVisible">
      <summary>获取一个值，该值指示与设计器关联的活动在工作流上是否可见。</summary>
      <returns>如果与设计器关联的活动在工作流上可见，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.LoadViewState(System.IO.BinaryReader)">
      <summary>从二进制流中加载设计器的视图状态。</summary>
      <param name="reader">一个 <see cref="T:System.IO.BinaryReader" />，用于还原设计器的状态。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Location">
      <summary>获取或设置设计器的位置（以逻辑坐标表示）。</summary>
      <returns>以逻辑坐标表示的设计器的位置。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.MessageFilters">
      <summary>获取与活动设计器关联的消息筛选器的只读集合。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> 只读集合，其中包含要与活动设计器关联的所有标准消息筛选器。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.MinimumSize">
      <summary>获取活动设计器的最小大小。</summary>
      <returns>活动设计器的最小大小。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnActivityChanged(System.Workflow.ComponentModel.Design.ActivityChangedEventArgs)">
      <summary>当关联的活动发生更改时向 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 发出通知。</summary>
      <param name="e">一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnBeginResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)">
      <summary>在设计器位于 <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" /> 中的情况下用户开始直观地调整活动设计器的大小时，向 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 发出通知。</summary>
      <param name="e">一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnConnected(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)">
      <summary>当在两个连接点之间建立连接时，向 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 发出通知。</summary>
      <param name="source">当前活动设计器上的源连接点。</param>
      <param name="target">活动设计器上要连接到的目标连接点。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragDrop(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>在设计器边界内完成拖放操作时发生。</summary>
      <param name="e">一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>当正在执行拖放操作且指针进入设计器边界时发生。</summary>
      <param name="e">一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave">
      <summary>当正在执行拖放操作且指针移出设计器边界时发生。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>当正在执行拖放操作且指针位于设计器边界内时发生。</summary>
      <param name="e">一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnEndResizing">
      <summary>在设计器位于 <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" /> 中的情况下用户完成直观地调整活动设计器的大小时，向 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 发出通知。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnExecuteDesignerAction(System.Workflow.ComponentModel.Design.DesignerAction)">
      <summary>当用户单击与设计器关联的配置错误时，向 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 发出通知。</summary>
      <param name="designerAction">与配置错误关联的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerAction" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>更新执行拖动操作时提供给用户的反馈的视觉提示。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>在设计器有键盘焦点的情况下按下键时发生。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>在设计器有键盘焦点的情况下释放键时发生。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>当用户重新定位其视觉提示或子活动设计器时，向<see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />发出通知。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>返回 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 上的视觉提示或子活动设计器的大小。</summary>
      <returns>视觉提示或子活动设计器的新大小设置 。</returns>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseCaptureChanged">
      <summary>在鼠标捕获发生更改时发生。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>在设计器上多次单击鼠标按钮时发生。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>在指针位于设计器边界内的情况下按下鼠标按钮时发生。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragBegin(System.Drawing.Point,System.Windows.Forms.MouseEventArgs)">
      <summary>当用户开始在设计器上拖动鼠标时发生。</summary>
      <param name="initialDragPoint">一个表示 x 和 y 坐标的 <see cref="T:System.Drawing.Point" />。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragEnd">
      <summary>当用户停止在设计器上拖动鼠标时发生。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseDragMove(System.Windows.Forms.MouseEventArgs)">
      <summary>在用户在设计器上拖动指针的过程中鼠标每次发生移动时发生。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
      <summary>当鼠标第一次进入设计器边界时发生。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseHover(System.Windows.Forms.MouseEventArgs)">
      <summary>当指针位于设计器边界内时发生。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseLeave">
      <summary>当指针移出设计器边界时发生。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>当指针在设计器边界内移动时发生。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>在指针位于设计器边界内的情况下释放鼠标按钮时发生。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>在设计时绘制活动的可视表示形式。</summary>
      <param name="e">一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />，其中包含事件数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnProcessMessage(System.Windows.Forms.Message)">
      <summary>允许设计器处理原始 Win32 消息。</summary>
      <param name="message">包含事件数据的 Win32 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>控制拖动操作是否应继续。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)">
      <summary>当用户在设计时直观地调整其大小时，向 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 发出通知。 仅当活动设计器是 <see cref="T:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner" /> 的子级时，才会调用此方法。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnScroll(System.Windows.Forms.ScrollBar,System.Int32)">
      <summary>在用户更改滚动位置时，向 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 发出通知。</summary>
      <param name="sender">用户在其中更改位置的 <see cref="T:System.Windows.Forms.ScrollBar" />。</param>
      <param name="value">新的滚动位置值。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnShowSmartTagVerbs(System.Drawing.Point)">
      <summary>显示与指定点的智能标记关联的设计器谓词。</summary>
      <param name="smartTagPoint">指定显示智能标记的位置的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnSmartTagVisibilityChanged(System.Boolean)">
      <summary>向<see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />通知应该显示还是隐藏智能标记。</summary>
      <param name="visible">如果指示应显示智能标记，则为 true；如果指示应隐藏智能标记，则为  false。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)">
      <summary>向设计器通知关联的主题已发生更改。</summary>
      <param name="newTheme">一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />，其中包含事件数据。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentDesigner">
      <summary>获取现有设计器的父设计器。</summary>
      <returns>现有设计器的父设计器。 如果 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 是根设计器，则返回的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 将为 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />；否则 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 将为父 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ParentView">
      <summary>获取包含当前活动设计器的工作流视图。</summary>
      <returns>包含当前活动设计器的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PerformLayout">
      <summary>更新设计器的布局。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PointToLogical(System.Drawing.Point)">
      <summary>将点从屏幕坐标系转换为活动设计器坐标系。</summary>
      <returns>一个 <see cref="T:System.Drawing.Point" />，包含包含转换后的 x 和 y 坐标。</returns>
      <param name="point">包含要转换的坐标的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PointToScreen(System.Drawing.Point)">
      <summary>将点从活动设计器坐标系转换为屏幕坐标系。</summary>
      <returns>一个 <see cref="T:System.Drawing.Point" />，包含包含转换后的 x 和 y 坐标。</returns>
      <param name="point">包含要转换的坐标的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>当在派生类中重写时，允许设计器更改或移除它通过 TypeDescriptor 公开的特性集中的项。</summary>
      <param name="attributes">包含属性的 TypeID 值的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>当在派生类中重写时，允许设计器更改或移除它通过 TypeDescriptor 公开的事件集中的项。</summary>
      <param name="events">包含类的事件名的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>当在派生类中重写时，允许设计器更改或移除它通过 TypeDescriptor 公开的属性集中的项。</summary>
      <param name="properties">包含类的属性名的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>当在派生类中重写时，允许设计器向它通过 TypeDescriptor 公开的特性集中添加项。</summary>
      <param name="attributes">包含属性的 TypeID 值的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>当在派生类中重写时，允许设计器向它通过 TypeDescriptor 公开的事件集中添加项。</summary>
      <param name="events">包含类的事件名的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>当在派生类中重写时，允许设计器向它通过 TypeDescriptor 公开的属性集中添加项。</summary>
      <param name="properties">包含类的属性名的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RectangleToLogical(System.Drawing.Rectangle)">
      <summary>将矩形从屏幕坐标系转换为活动设计器坐标系。</summary>
      <returns>描述转换后的坐标的 <see cref="T:System.Drawing.Rectangle" />。</returns>
      <param name="rectangle">描述要转换的坐标的 <see cref="T:System.Drawing.Rectangle" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RectangleToScreen(System.Drawing.Rectangle)">
      <summary>将矩形从活动设计器坐标系转换为屏幕坐标系。</summary>
      <returns>描述转换后的坐标的 <see cref="T:System.Drawing.Rectangle" />。</returns>
      <param name="rectangle">描述要转换的坐标的 <see cref="T:System.Drawing.Rectangle" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerActions">
      <summary>刷新与设计器关联的配置错误。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.RefreshDesignerVerbs">
      <summary>通过调用状态处理程序，刷新与设计器关联的活动设计器谓词。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.SaveViewState(System.IO.BinaryWriter)">
      <summary>将设计器的视图状态存储到二进制流中。</summary>
      <param name="writer">视图状态将存储到的 <see cref="T:System.IO.BinaryWriter" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip(System.String)">
      <summary>显示指定的信息提示。</summary>
      <param name="infoTip">要显示在信息提示中的文本。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInfoTip(System.String,System.String)">
      <summary>使用指定的标题和文本显示 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 的信息提示。</summary>
      <param name="title">包含信息提示的标题的字符串。</param>
      <param name="infoTip">包含要显示的信息提示文本的字符串。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowInPlaceTip(System.String,System.Drawing.Rectangle)">
      <summary>在指定的矩形位置显示指定的工具提示。</summary>
      <param name="infoTip">包含要显示的工具提示的字符串。</param>
      <param name="rectangle">一个 <see cref="T:System.Drawing.Rectangle" />，用于定义要显示工具提示的位置。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.ShowSmartTag">
      <summary>获取一个值，该值指示活动是否应显示智能标记。</summary>
      <returns>如果活动应显示智能标记，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Size">
      <summary>获取或设置 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 的大小。</summary>
      <returns>一个 <see cref="T:System.Drawing.Size" />，表示 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 的区域。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagRectangle">
      <summary>获取应在其中显示智能标记的矩形。</summary>
      <returns>应显示智能标记位置的矩形。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.SmartTagVerbs">
      <summary>获取要与活动设计器上的智能标记关联的设计器操作的只读集合。</summary>
      <returns>要与活动设计器的智能标记关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> 只读集合。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Component">
      <summary>获取与活动设计器关联的基组件。</summary>
      <returns>与活动设计器关联的 <see cref="T:System.ComponentModel.IComponent" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#DoDefaultAction">
      <summary>执行与设计器关联的默认操作。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Initialize(System.ComponentModel.IComponent)">
      <summary>使用关联的活动初始化设计器。</summary>
      <param name="component">要用于初始化设计器的 IComponent。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesigner#Verbs">
      <summary>获取与活动设计器关联的设计时谓词。</summary>
      <returns>与活动设计器关联的设计时谓词。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>当在派生类中重写时，允许设计器更改或移除它通过 TypeDescriptor 公开的特性集中的项。</summary>
      <param name="attributes">包含类属性的 TypeID 的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>当在派生类中重写时，允许设计器更改或移除它通过 TypeDescriptor 公开的事件集中的项。</summary>
      <param name="events">包含类的事件名的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>当在派生类中重写时，允许设计器更改或移除它通过 TypeDescriptor 公开的属性集中的项。</summary>
      <param name="properties">包含类的属性名的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>当在派生类中重写时，允许设计器向它通过 TypeDescriptor 公开的特性集中添加项。</summary>
      <param name="attributes">包含类属性的 TypeID 的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>当在派生类中重写时，允许设计器向它通过 TypeDescriptor 公开的事件集中添加项。</summary>
      <param name="events">包含类的事件名的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>当在派生类中重写时，允许设计器向它通过 TypeDescriptor 公开的属性集中添加项。</summary>
      <param name="properties">包含类的属性名的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>返回指定视图技术的视图对象。</summary>
      <returns>表示此设计器的视图的对象。</returns>
      <param name="technology">要返回其视图对象的 <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>获取活动设计器可为其显示提供支持的技术集。</summary>
      <returns>一个受支持的 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 对象的数组。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>确定当前活动设计器是否支持指定的工具箱项。</summary>
      <returns>如果工具箱支持该工具并且可启用该工具，则为 true；否则为 false。</returns>
      <param name="toolboxItem">要测试其是否受支持的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>选择指定的工具箱项。</summary>
      <param name="toolboxItem">要选择的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IPersistUIState#LoadViewState(System.IO.BinaryReader)">
      <summary>从二进制流还原视图状态。</summary>
      <param name="reader">要从中加载视图状态的 <see cref="T:System.IO.BinaryReader" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IPersistUIState#SaveViewState(System.IO.BinaryWriter)">
      <summary>将视图状态保存到二进制流。</summary>
      <param name="writer">要将视图状态保存到的 <see cref="T:System.IO.BinaryWriter" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#InvokingDesigner">
      <summary>获取或设置请求要初始化的活动设计器的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />。</summary>
      <returns>请求要初始化的活动设计器的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#IsSupportedActivityType(System.Type)">
      <summary>返回一个值，该值指示当前 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 是否支持指定的类型。</summary>
      <returns>如果当前工作流设计器支持该类型 ，则为 true；否则为 false。</returns>
      <param name="activityType">要检查是否受活动设计器支持的活动的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#MessageFilters">
      <summary>获取与活动设计器关联的任何消息筛选器。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> 只读集合，其中包含与工作流根设计器关联的任何消息筛选器。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.System#Workflow#ComponentModel#Design#IWorkflowRootDesigner#SupportsLayoutPersistence">
      <summary>获取一个值，该值指示实际的工作流根设计器是否支持布局持久性。</summary>
      <returns>如果设计器支持布局持久性，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Text">
      <summary>获取或设置与设计器关联的文本。</summary>
      <returns>要与设计器关联的文本。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.TextRectangle">
      <summary>获取文本矩形的值（以逻辑坐标表示）。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" />，其中包含与设计器关联的文本。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesigner.Verbs">
      <summary>获取与设计器关联的谓词的集合。</summary>
      <returns>与设计器关联的谓词的集合。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject">
      <summary>实现一个辅助性对象，<see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 类可以使用该对象为残障用户调整设计器用户界面。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.#ctor(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>使用指定的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject" /> 类的新实例。</summary>
      <param name="activityDesigner">要应用辅助性对象的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.ActivityDesigner">
      <summary>获取要应用辅助性对象的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</summary>
      <returns>要应用辅助性对象的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Bounds">
      <summary>获取辅助性对象的位置和大小。</summary>
      <returns>表示辅助性对象的界限的 <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.DefaultAction">
      <summary>获取描述活动设计器的默认操作的字符串。</summary>
      <returns>与活动设计器关联的默认操作的说明；如果对象没有默认操作，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Description">
      <summary>获取描述活动设计器的视觉外观的字符串。</summary>
      <returns>活动设计器的视觉外观的说明；如果对象没有说明，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.DoDefaultAction">
      <summary>执行与 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject" /> 关联的默认操作。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.GetService(System.Type)">
      <summary>返回与 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 关联的指定类型所定义的服务。</summary>
      <returns>表示所请求服务的 <see cref="T:System.Object" />；如果无法解析该服务，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="serviceType">要请求的服务的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Help">
      <summary>获取与活动设计器关联的活动的功能以及使用方式的说明。</summary>
      <returns>一个字符串，其中包含与活动设计器关联的活动的功能以及使用方式的说明；如果没有定义帮助，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Name">
      <summary>获取或设置与辅助性对象的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的名称。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Activity" /> 的名称；如果尚未设置此属性，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
      <summary>返回与指定 <see cref="T:System.Windows.Forms.AccessibleNavigation" /> 所定义的位置关联的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</summary>
      <returns>指定位置的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
      <param name="navdir">
        <see cref="T:System.Windows.Forms.AccessibleNavigation" /> 值之一。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Parent">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject" /> 的父级。</summary>
      <returns>表示当前 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject" /> 的父级的 <see cref="T:System.Windows.Forms.AccessibleObject" />；如果不存在父辅助性对象，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Role">
      <summary>获取当前 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject" /> 的角色。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleRole" /> 值之一，或者，如果没有指定角色，则是 <see cref="F:System.Windows.Forms.AccessibleRole.None" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.Select(System.Windows.Forms.AccessibleSelection)">
      <summary>修改选定内容或移动 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject" /> 的键盘焦点。</summary>
      <param name="flags">
        <see cref="T:System.Windows.Forms.AccessibleSelection" /> 值之一。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject.State">
      <summary>获取当前 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerAccessibleObject" /> 的可访问状态。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleStates" /> 值的组合。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection">
      <summary>公开与活动设计器关联的设计器标志符号的泛型 <see cref="T:System.Collections.Generic.List`1" />。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> 类的新实例，该实例为空并且具有默认初始容量。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Design.DesignerGlyph})">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> 类的新实例，该实例包含从 <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> 的指定泛型集合中复制的元素并且其容量足以容纳所复制的元素数。</summary>
      <param name="glyphs">包含 <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> 对象的可枚举泛型集合。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection.#ctor(System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> 类的新实例，该实例包含从指定的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> 中复制的元素并且其容量足以容纳所复制的元素数。</summary>
      <param name="glyphs">从中复制集合元素的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs">
      <summary>提供 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 的布局事件的数据。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs.#ctor(System.Drawing.Graphics,System.Workflow.ComponentModel.Design.ActivityDesignerTheme)">
      <summary>使用指定的图形和设计器主题初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> 类的新实例。</summary>
      <param name="graphics">对设计器使用布局的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="designerTheme">要用于外观的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs.AmbientTheme">
      <summary>获取与根工作流关联的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />。</summary>
      <returns>包含设计器的主题信息的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs.DesignerTheme">
      <summary>获取与设计器关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />，用于描述设计器的外观。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs.Graphics">
      <summary>获取用于对设计器进行布局的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <returns>用于对设计器进行布局的 <see cref="T:System.Drawing.Graphics" /> 对象。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutSerializer">
      <summary>序列化任意形式的设计器中使用的活动设计器布局。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutSerializer.#ctor">
      <summary>序列化任意形式的设计器中使用的活动设计器布局。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)">
      <summary>使用指定的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> 创建指定 <see cref="T:System.Type" /> 的实例。</summary>
      <returns>指定的 <see cref="T:System.Type" /> 的实例。</returns>
      <param name="serializationManager">支持此操作的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="type">指定的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>检索有关与指定对象关联的所有属性的信息。</summary>
      <returns>一个 <see cref="T:System.Reflection.PropertyInfo" /> 数组，其中包含有关与 <paramref name="obj" /> 关联的属性的信息。</returns>
      <param name="serializationManager">支持此操作的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">要搜索属性的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 或 <paramref name="obj" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutSerializer.OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>在序列化过程开始之前对对象执行所需的处理。</summary>
      <param name="serializationManager">支持此操作的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">要搜索属性的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaint">
      <summary>提供用于在活动设计器图面上绘制用户界面元素的静态方法。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaint.Draw3DButton(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Windows.Forms.ButtonState)">
      <summary>在活动设计器图面上绘制三维按钮。</summary>
      <param name="graphics">要在其上绘制三维按钮的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="image">要在按钮上绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="bounds">定义按钮边界的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="transparency">用于指定按钮透明度级别的单精度浮点型数字。</param>
      <param name="buttonState">用于指定按钮外观的 <see cref="T:System.Windows.Forms.ButtonState" /> 枚举值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaint.DrawExpandButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Workflow.ComponentModel.Design.CompositeDesignerTheme)">
      <summary>绘制一个用于在活动设计器图面上展开和折叠复合设计器的按钮。</summary>
      <param name="graphics">要在其上绘制按钮的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="boundingRect">定义按钮边界的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="drawExpanded">要绘制展开的按钮，则为 true；否则为 false。</param>
      <param name="compositeDesignerTheme">与用于呈现按钮的活动设计器关联的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerTheme" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" /> 或 <paramref name="compositeDesignerTheme" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaint.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Workflow.ComponentModel.Design.DesignerContentAlignment,System.Single,System.Boolean)">
      <summary>使用 <see cref="T:System.Drawing.Graphics" />、<see cref="T:System.Drawing.Image" />、源和目标 <see cref="T:System.Drawing.Rectangle" />、<see cref="T:System.Workflow.ComponentModel.Design.DesignerContentAlignment" />、单精度浮点型数字和布尔值在活动设计器图面上绘制图像。</summary>
      <param name="graphics">要在其上绘制图像的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destination">定义图像边界的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="source">定义图像源的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="alignment">指定图像在边框中的对齐方式的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerContentAlignment" />。</param>
      <param name="transparency">定义图像的透明度设置的单精度浮点型数字。</param>
      <param name="grayscale">为 true 则绘制灰度图像；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" />、<paramref name="image" />、<paramref name="destination" /> 或 <paramref name="source" /> 包含空引用（在 Visual Basic 中为 Nothing）。 - 或 - <paramref name="transparency" /> 小于 0 或大于 1.0f。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaint.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Rectangle,System.Workflow.ComponentModel.Design.DesignerContentAlignment)">
      <summary>使用 <see cref="T:System.Drawing.Graphics" />、<see cref="T:System.Drawing.Image" />、<see cref="T:System.Drawing.Rectangle" /> 和 <see cref="T:System.Workflow.ComponentModel.Design.DesignerContentAlignment" /> 在活动设计器图面上绘制图像。</summary>
      <param name="graphics">要在其上绘制图像的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="image">要绘制的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destination">定义要绘制的图像边界的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="alignment">指定图像在边框中的对齐方式的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerContentAlignment" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" />、<paramref name="image" /> 或 <paramref name="destination" /> 包含空引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaint.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32)">
      <summary>在活动设计器图面上绘制圆角矩形。</summary>
      <param name="graphics">要在其上绘制矩形的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="drawingPen">用于绘制矩形的 <see cref="T:System.Drawing.Pen" />。</param>
      <param name="rectangle">定义圆角矩形边界的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="radius">要用于圆角边缘的半径的整数值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" /> 或 <paramref name="drawingPen" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaint.DrawText(System.Drawing.Graphics,System.Drawing.Font,System.String,System.Drawing.Rectangle,System.Drawing.StringAlignment,System.Workflow.ComponentModel.Design.TextQuality,System.Drawing.Brush)">
      <summary>在活动设计器图面上绘制文本。</summary>
      <param name="graphics">要绘制文本的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="font">用于绘制文本的 <see cref="T:System.Drawing.Font" /></param>
      <param name="text">要绘制的文本。</param>
      <param name="boundingRect">必须在其中绘制文本的边界 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="alignment">指定文本在边框中的对齐位置的 <see cref="T:System.Drawing.StringAlignment" />。</param>
      <param name="textQuality">指定绘制文本时所要使用的质量设置的 <see cref="T:System.Workflow.ComponentModel.Design.TextQuality" />。</param>
      <param name="textBrush">用于绘制文本的 <see cref="T:System.Drawing.Brush" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" />、<paramref name="font" />、<paramref name="text" /> 或 <paramref name="textBrush" /> 包含空引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaint.GetRoundedRectanglePath(System.Drawing.Rectangle,System.Int32)">
      <summary>返回用于绘制指定圆角矩形的图形路径。</summary>
      <returns>绘制指定矩形的圆角路径的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</returns>
      <param name="rectangle">要为其获取图形路径的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="radius">一个整数，定义用于绘制圆角的半径。</param>
      <exception cref="T:System.ArgumentException">将 <paramref name="rectangle" /> 设置为 <see cref="P:System.Drawing.Rectangle.IsEmpty" />。 --或者-- <paramref name="radius" /> 小于或等于 0。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs">
      <summary>对于 <see cref="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />、<see cref="M:System.Workflow.ComponentModel.Design.ConnectionPoint.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs,System.Boolean)" />、<see cref="M:System.Workflow.ComponentModel.Design.Connector.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" /> 和 <see cref="M:System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)" /> 方法以及从这些方法派生的类中的任何 OnPaint 重写版本，当在工作流设计图面上绘制这些对象时，将为它们提供数据。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Workflow.ComponentModel.Design.ActivityDesignerTheme)">
      <summary>用指定的图形、剪辑矩形、视区和设计器主题来初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> 类的新实例。</summary>
      <param name="graphics">用于绘制项的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="clipRectangle">表示在其中进行绘制的矩形的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="viewPort">要在其中绘制的视区。</param>
      <param name="designerTheme">与要绘制的对象关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs.AmbientTheme">
      <summary>获取与工作流设计图面关联的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />，其中包含工作流的主题信息。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs.ClipRectangle">
      <summary>获取要在其中进行绘制的 <see cref="T:System.Drawing.Rectangle" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" />，用于描述要绘制的区域。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs.DesignerTheme">
      <summary>获取与设计器关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />，用于描述设计器的外观。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs.Graphics">
      <summary>获取用于在工作流设计图面上绘制项的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <returns>用于在工作流设计图面上绘制项的 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs">
      <summary>为 <see cref="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnBeginResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)" /> 和 <see cref="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)" /> 方法提供数据。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs.#ctor(System.Workflow.ComponentModel.Design.DesignerEdges,System.Drawing.Rectangle)">
      <summary>使用指定的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> 值和 <see cref="T:System.Drawing.Rectangle" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" /> 类的新实例。</summary>
      <param name="sizingEdge">要用于调整活动设计器大小的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" />。</param>
      <param name="newBounds">表示活动设计器的调整后的边界的 <see cref="T:System.Drawing.Rectangle" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs.Bounds">
      <summary>获取工作流设计图面上的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 的新边框。</summary>
      <returns>表示活动设计器的新边界的 <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs.SizingEdge">
      <summary>获取用于调整工作流设计图面上 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 的大小的设计器边缘。</summary>
      <returns>用于调整工作流设计图面上活动设计器的大小的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" />。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme">
      <summary>为设计时环境中的设计器提供外观属性设置。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> 的实例。</summary>
      <param name="theme">一个 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />，其中包含 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 的主题信息。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackColorEnd">
      <summary>获取或设置对背景色使用颜色渐变时要作为结束颜色的 <see cref="T:System.Drawing.Color" />。</summary>
      <returns>作为背景的结束颜色的 <see cref="T:System.Drawing.Color" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackColorStart">
      <summary>获取或设置对背景使用颜色渐变时背景的起始颜色。</summary>
      <returns>作为背景的起始颜色的 <see cref="T:System.Drawing.Color" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BackgroundStyle">
      <summary>获取或设置背景样式。</summary>
      <returns>描述背景样式的 <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BoldFont">
      <summary>获取主题的字体。</summary>
      <returns>主题的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderColor">
      <summary>获取或设置主题的 <see cref="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderColor" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" />，表示主题的 <see cref="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderColor" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderPen">
      <summary>获取主题的 BorderPen。</summary>
      <returns>一个 <see cref="T:System.Drawing.Pen" />，表示主题的 <see cref="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderPen" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderStyle">
      <summary>获取或设置用于边框的样式。</summary>
      <returns>表示用于边框的样式的 <see cref="T:System.Drawing.Drawing2D.DashStyle" /> 枚举。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.BorderWidth">
      <summary>获取边框的宽度（以像素为单位）。</summary>
      <returns>边框的宽度（以像素为单位）。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.DesignerGeometry">
      <summary>获取设计器的几何图形。</summary>
      <returns>描述设计器的几何图形的枚举。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.DesignerImage">
      <summary>获取与设计器关联的图像。</summary>
      <returns>要为设计器显示的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.DesignerImagePath">
      <summary>获取或设置设计器的图像路径。</summary>
      <returns>设计器的图像路径。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.Dispose(System.Boolean)">
      <summary>释放非托管资源，还可以释放由 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> 占用的托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.Font">
      <summary>获取主题使用的文本的字体。</summary>
      <returns>设计器主题的字体。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ForeColor">
      <summary>获取或设置前景色。</summary>
      <returns>表示主题的前景色的 <see cref="T:System.Drawing.Color" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ForegroundBrush">
      <summary>获取与主题关联的 <see cref="T:System.Drawing.Brush" /> 对象。</summary>
      <returns>与主题关联的 <see cref="T:System.Drawing.Brush" /> 对象。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ForegroundPen">
      <summary>获取用于绘制主题前景的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>用于绘制主题前景的 <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.GetBackgroundBrush(System.Drawing.Rectangle)">
      <summary>获取用于绘制由传递的矩形指定的区域的画笔。</summary>
      <returns>一个 <see cref="T:System.Drawing.Brush" />，用于填充图形形状（如矩形、椭圆、饼形、多边形和封闭路径）的内部的对象。</returns>
      <param name="rectangle">一个 <see cref="T:System.Drawing.Rectangle" />，指定背景上区域的位置和大小。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.ImageSize">
      <summary>获取主题图像的大小。</summary>
      <returns>表示图像大小的 <see cref="T:System.Drawing.Size" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.Initialize">
      <summary>初始化设计器主题。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)">
      <summary>调用它可指示环境设置的更改。</summary>
      <param name="ambientProperty">已更改的属性。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerTheme.Size">
      <summary>获取设计器的大小。</summary>
      <returns>表示设计器大小的 <see cref="T:System.Drawing.Size" />。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute">
      <summary>指定活动设计器在工作流设计图面上使用的主题类。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute.#ctor(System.Type)">
      <summary>使用指定的设计器主题类型初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute" /> 类的新实例。</summary>
      <param name="designerThemeType">一个 <see cref="T:System.Type" />，表示要与设计器类关联的设计器主题。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute.DesignerThemeType">
      <summary>获取包装设计器主题设置以便应用于活动设计器的主题类的类型。</summary>
      <returns>一个 <see cref="T:System.Type" />，用于包装设计器主题设置。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerThemeAttribute.Xml">
      <summary>获取或设置用于定义活动设计器的默认属性设置的 XML 字符串。</summary>
      <returns>一个字符串，其中包含 XML 格式的默认主题属性设置。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb">
      <summary>使用关联的谓词组、文本和事件处理程序创建要与设计器一起使用的新谓词。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerVerb.#ctor(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Workflow.ComponentModel.Design.DesignerVerbGroup,System.String,System.EventHandler)">
      <summary>使用一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />、一个 <see cref="T:System.Workflow.ComponentModel.Design.DesignerVerbGroup" /> 值、一条谓词说明和一个 <see cref="T:System.EventHandler" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> 的实例。</summary>
      <param name="activityDesigner">要与新谓词关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <param name="verbGroup">新谓词所属的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerVerbGroup" />。</param>
      <param name="text">要在菜单上显示的谓词说明。</param>
      <param name="invokeHandler">将处理菜单选择事件的 <see cref="T:System.EventHandler" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> 为空或空引用（在 Visual Basic 中为 Nothing）。 - 或 - <paramref name="invokeHandler" /> 为空引用 (Nothing)。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerVerb.#ctor(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Workflow.ComponentModel.Design.DesignerVerbGroup,System.String,System.EventHandler,System.EventHandler)">
      <summary>使用一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />、一个 <see cref="T:System.Workflow.ComponentModel.Design.DesignerVerbGroup" /> 值、一条谓词说明和两个 <see cref="T:System.EventHandler" /> 对象（一个用于处理菜单选择事件，另一个用于处理状态更新）初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> 的实例。</summary>
      <param name="activityDesigner">要与该 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <param name="verbGroup">此 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> 所属的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerVerbGroup" />。</param>
      <param name="text">要在菜单上显示的谓词说明。</param>
      <param name="invokeHandler">处理菜单选择事件的事件处理程序。</param>
      <param name="statusHandler">处理状态更新的事件处理程序。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerVerb.CommandID">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> 的新 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
      <returns>一个新的 <see cref="P:System.Workflow.ComponentModel.Design.ActivityDesignerVerb.CommandID" /> 对象。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerVerb.Group">
      <summary>获取与 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerVerbGroup" />。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Design.DesignerVerbGroup" /> 对象。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDesignerVerb.OleStatus">
      <summary>获取一个描述 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> 的状态的整数。</summary>
      <returns>描述 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> 的 OleStatus 的 int。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection">
      <summary>维护 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection" /> 的实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Design.ActivityDesignerVerb})">
      <summary>使用谓词的指定泛型 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection" /> 类的新实例。</summary>
      <param name="verbs">
        <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> 对象的泛型 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs">
      <summary>表示为工作流设计器中的 <see cref="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragDrop(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" />、<see cref="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnDragEnter(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" /> 和 <see cref="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)" /> 事件提供数据的类。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDragEventArgs.Activities">
      <summary>获取对其执行拖放操作的活动的集合。</summary>
      <returns>包含对其执行拖放操作的所有 <see cref="T:System.Workflow.ComponentModel.Activity" /> 对象的只读集合。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDragEventArgs.DragImageSnapPoint">
      <summary>获取或设置工作流设计图面上要放置活动的位置。</summary>
      <returns>定义工作流设计图面上将要放置活动的位置的 <see cref="T:System.Drawing.Point" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityDragEventArgs.DragInitiationPoint">
      <summary>获取工作流设计图面上拖动操作开始的 <see cref="T:System.Drawing.Point" />。</summary>
      <returns>定义工作流设计图面上拖动操作开始位置的 <see cref="T:System.Drawing.Point" />。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner">
      <summary>在预览栏中显示子活动设计器的集合；如果在预览栏中选择了子设计器，则会在工作流设计图面上以预览模式或编辑模式显示选定的活动设计器。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.AccessibilityObject">
      <summary>获取一个 <see cref="T:System.Windows.Forms.AccessibleObject" />，该对象使设计器可以为残障用户调整其 UI。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.AccessibleObject" />，该对象可以使 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 为残障用户调整其 UI。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.ContainedDesigners">
      <summary>获取一个由活动预览设计器显示的活动设计器的集合。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 只读集合，其中包含 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 所显示的设计器。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.CurrentDropTarget">
      <summary>获取或设置由 <see cref="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.GetDropTargets(System.Drawing.Point)" /> 返回的放置目标数组中当前放置目标的索引。</summary>
      <returns>一个整数，表示设计器的当前放置目标的索引。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源；否则为 false。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.EnsureVisibleContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>确保指定的活动设计器在工作流设计图面上可见。</summary>
      <param name="containedDesigner">确保其在工作流设计图面上可见的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="containedDesigner" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.FirstSelectableObject">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 的导航顺序中的第一个可选择对象。</summary>
      <returns>一个 <see cref="T:System.Object" />，该对象是设计器导航顺序中的第一个可选择对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.GetConnectors">
      <summary>返回限定了活动设计器的连接器边界的矩形的数组。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" /> 数组，该数组定义了 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 中的所有连接器的边界。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.GetDropTargets(System.Drawing.Point)">
      <summary>返回表示 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 中的有效放置位置的矩形数组。</summary>
      <returns>表示 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 中的有效放置位置的 <see cref="T:System.Drawing.Rectangle" /> 数组。</returns>
      <param name="dropPoint">用于定义放置目标的 X 坐标和 Y 坐标的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)">
      <summary>返回在当前 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 的导航顺序中位于指定对象后面的第一个可选择对象。</summary>
      <returns>导航顺序中位于 <paramref name="obj" /> 后面的第一个可选择 <see cref="T:System.Object" />。</returns>
      <param name="obj">导航顺序中的当前对象。</param>
      <param name="direction">
        <see cref="T:System.Workflow.ComponentModel.Design.DesignerNavigationDirection" /> 枚举值，用于指定设计器导航的方向。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Glyphs">
      <summary>获取与 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 关联的标志符号的只读集合。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> 只读集合，其中包含与 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 关联的标志符号。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.HelpText">
      <summary>获取或设置当 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 不包含任何其他活动设计器时显示的文本。</summary>
      <returns>一个字符串，其中包含要显示在设计器图面上的文本</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.HitTest(System.Drawing.Point)">
      <summary>返回有关工作流设计图面上指定坐标处的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 的信息。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />，其中包含有关指定坐标处的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 的信息</returns>
      <param name="point">一个 <see cref="T:System.Drawing.Point" />，其中包含工作流设计图面上要从中收集信息的坐标。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Initialize(System.Workflow.ComponentModel.Activity)">
      <summary>初始化由指定活动使用的设计器。</summary>
      <param name="activity">要为其初始化设计器的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.IsContainedDesignerVisible(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>返回一个值，该值指示指定的活动设计器在 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 中是否可见。</summary>
      <returns>如果 <paramref name="containedDesigner" /> 可见，则为 true；否则为 false。</returns>
      <param name="containedDesigner">要检查的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="containedDesigner" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.LastSelectableObject">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 的导航顺序中的最后一个可选择对象。</summary>
      <returns>一个 <see cref="T:System.Object" />，该对象是设计器导航顺序中的最后一个可选择对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.LoadViewState(System.IO.BinaryReader)">
      <summary>从二进制流加载 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 的视图状态。</summary>
      <param name="reader">用于还原设计器视图状态的 <see cref="T:System.IO.BinaryReader" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 包含空引用（在 Visual Basic 中为 Nothing）</exception>
      <exception cref="T:System.Exception">与设计器关联的设计器宿主是空引用 (Nothing)。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Location">
      <summary>设置或获取工作流设计图面上以逻辑坐标形式表示的设计器位置。</summary>
      <returns>一个 <see cref="T:System.Drawing.Point" />，其中包含与工作流设计图面上的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 关联的 X 坐标和 Y 坐标。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnContainedActivitiesChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <summary>向设计器通知 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 中包含的活动数已发生更改。</summary>
      <param name="listChangeArgs">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="listChangeArgs" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnDragEnter(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>当执行拖放操作并且用户的鼠标光标进入设计器的边界时，向 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 发出通知。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnDragOver(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>当执行拖放操作并且用户的鼠标光标位于设计器边界内时，向 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 发出通知。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>执行布局任务以在 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 上定位视觉提示和子设计器。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>设置 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 中包含的设计器上的视觉提示大小。</summary>
      <returns>包含 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 的新大小设置的 <see cref="T:System.Drawing.Size" />。</returns>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>当用户双击活动设计器的图面时，向 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 发出通知。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>当用户在鼠标指针位于设计器边界内的情况下按下鼠标按钮时，向 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 发出通知。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnMouseLeave">
      <summary>当用户将鼠标光标移到设计器边界之外时，向设计器发出通知。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>当用户在设计器边界内释放鼠标按钮时，向设计器发出通知。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>Draws the visual representation of the activity associated with the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> at design time.</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> that its associated theme has changed.</summary>
      <param name="newTheme">包含更新后的主题属性设置的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.PreviewedDesigner">
      <summary>获取要在活动设计器的预览部分中预览的设计器。</summary>
      <returns>要在 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 的预览部分中显示的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.RefreshDesignerActions">
      <summary>更新与 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 关联的配置错误。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.RefreshPreview">
      <summary>更新在 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 的预览窗口中显示的视图。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.SaveViewState(System.IO.BinaryWriter)">
      <summary>将 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 的当前视图状态存储到二进制流中。</summary>
      <param name="writer">要将当前设计器视图状态存储到的 <see cref="T:System.IO.BinaryWriter" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 包含空引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.ShowPreview">
      <summary>获取或设置一个值，该值指示是否应在设计器中显示活动预览。</summary>
      <returns>为 true 则在 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 中显示活动预览；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner.Verbs">
      <summary>获取与 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 关联的谓词的集合。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection" />，其中包含与 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesigner" /> 关联的谓词。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme">
      <summary>针对工作流设计图面上使用预览模式的活动设计器提供主题设置。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme" /> 类的新实例。</summary>
      <param name="theme">与 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.Initialize">
      <summary>针对未由 <see cref="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)" /> 执行的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme" />，执行任何附加的初始化任务。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)">
      <summary>向 <see cref="T:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme" /> 通知设计器的环境属性设置已发生更改。</summary>
      <param name="ambientProperty">活动预览设计器主题当前应使用的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientProperty" /> 枚举值。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.PreviewBackColor">
      <summary>获取或设置与设计器的活动预览区背景关联的颜色集。</summary>
      <returns>与设计器的活动预览区背景关联的 <see cref="T:System.Drawing.Color" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.PreviewBorderColor">
      <summary>获取或设置与设计器的活动预览区边框关联的颜色集。</summary>
      <returns>与设计器的活动预览区边框关联的 <see cref="T:System.Drawing.Color" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ActivityPreviewDesignerTheme.PreviewForeColor">
      <summary>获取或设置与设计器的活动预览区前景关联的颜色集。</summary>
      <returns>与设计器的活动预览区前景关联的 <see cref="T:System.Drawing.Color" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ActivityToolboxItem">
      <summary>为与工作流设计器中的活动关联的所有工具箱项提供基类。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityToolboxItem.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityToolboxItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityToolboxItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用指定的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 和 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityToolboxItem" /> 类的一个新实例。</summary>
      <param name="info">保存用于反序列化工具箱项的信息的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">为工具箱项提供反序列化上下文的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityToolboxItem.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ActivityToolboxItem" /> 类的新实例，它将创建指定类型的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 组件。</summary>
      <param name="type">工具箱项将创建的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的类型。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>在调用工具箱项时，创建 <see cref="T:System.Workflow.ComponentModel.Activity" /> 组件或 <see cref="T:System.Workflow.ComponentModel.Activity" /> 组件的数组。</summary>
      <returns>创建的 <see cref="T:System.ComponentModel.IComponent" /> 对象数组。</returns>
      <param name="host">要承载工具箱项的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityToolboxItem.CreateComponentsWithUI(System.ComponentModel.Design.IDesignerHost)">
      <summary>调用工具箱项时，创建在设计图面上生成一个对话框的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 组件或 <see cref="T:System.Workflow.ComponentModel.Activity" /> 组件的数组。</summary>
      <returns>创建的 <see cref="T:System.ComponentModel.IComponent" /> 对象数组。</returns>
      <param name="host">要承载工具箱项的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityToolboxItem.GetToolboxDisplayName(System.Type)">
      <summary>获取工具箱中的工具箱项的关联显示名称。</summary>
      <returns>表示工具箱项的显示名称的字符串</returns>
      <param name="activityType">要检索其显示名称的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的类型。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ActivityToolboxItem.GetToolboxImage(System.Type)">
      <summary>获取用于表示工具箱中的工具箱项的关联图像。</summary>
      <returns>在工具箱中显示的工具箱项的图像对象</returns>
      <param name="activityType">要检索其工具箱图像的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的类型。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.AmbientProperty">
      <summary>指定设计器主题类的环境主题设置的来源。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.AmbientProperty.DesignerSize">
      <summary>从与活动设计器关联的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> 类获取环境主题设置。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.AmbientProperty.OperatingSystemSetting">
      <summary>从操作系统获取环境主题设置。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.AmbientTheme">
      <summary>为设计时环境中的顶级工作流提供外观属性设置。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.AmbientTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)">
      <summary>使用 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> 类的新实例。</summary>
      <param name="theme">与环境主题相关联的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.BackColor">
      <summary>获取或设置工作流设计图面上的环境背景色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" /> 值，该值表示环境背景色。 默认值为白色。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.BackgroundBrush">
      <summary>获取用于填充工作流设计图面上显示的图形形状的环境画笔。</summary>
      <returns>一个 <see cref="T:System.Drawing.Brush" /> 值，表示设计图面上工作流的背景画笔。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.BoldFont">
      <summary>获取工作流设计图面的环境粗体设置。</summary>
      <returns>一个 <see cref="T:System.Drawing.Font" /> 值，确定工作流设计图面上的文本是否为粗体。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.BorderWidth">
      <summary>获取放置到工作流设计图面上的对象的环境边框宽度。</summary>
      <returns>一个整数，表示放置到工作流设计图面上的对象的边框宽度。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.CommentIndicatorBrush">
      <summary>获取与工作流设计图面上带有注释的设计器关联的环境画笔。</summary>
      <returns>与工作流设计图面上带有注释的设计器关联的 <see cref="T:System.Drawing.Brush" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.CommentIndicatorColor">
      <summary>获取或设置与工作流设计图面上带有注释的设计器关联的环境颜色。</summary>
      <returns>与工作流设计图面上带有注释的设计器关联的 <see cref="T:System.Drawing.Color" /> 值。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.CommentIndicatorPen">
      <summary>获取与工作流设计图面上带有注释的设计器关联的环境钢笔。</summary>
      <returns>与工作流设计图面上带有注释的设计器关联的 <see cref="T:System.Drawing.Pen" /> 值。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.DesignerSize">
      <summary>获取或设置工作流设计图面上活动设计器的环境大小设置。</summary>
      <returns>确定工作流设计图面上活动设计器大小的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerSize" /> 枚举值。 默认值为 <see cref="F:System.Workflow.ComponentModel.Design.DesignerSize.Medium" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.AmbientTheme.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.DrawGrayscale">
      <summary>获取或设置指示与工作流设计图面关联的环境主题是否绘制灰度的值。</summary>
      <returns>如果与工作流关联的环境主题绘制灰度，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.DrawRounded">
      <summary>获取或设置指示与工作流设计图面关联的环境主题是否绘制圆形的值。</summary>
      <returns>如果与工作流关联的环境主题绘制圆形，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.DrawShadow">
      <summary>获取或设置指示与工作流设计图面关联的环境主题是否绘制阴影的值。</summary>
      <returns>如果与工作流关联的环境主题绘制阴影，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.DropIndicatorBrush">
      <summary>获取与拖到工作流设计图面上的对象关联的环境画笔。</summary>
      <returns>与拖到工作流设计图面上的对象关联的 <see cref="T:System.Drawing.Brush" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.DropIndicatorColor">
      <summary>获取或设置与拖到工作流设计图面上的对象关联的环境颜色。</summary>
      <returns>与拖到工作流设计图面上的对象关联的 <see cref="T:System.Drawing.Color" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.DropIndicatorPen">
      <summary>获取与拖到工作流设计图面上的对象关联的环境钢笔。</summary>
      <returns>与拖到工作流设计图面上的对象关联的 <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.Font">
      <summary>获取工作流设计图面的环境字体设置。</summary>
      <returns>表示工作流设计图面的环境字体设置的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.FontName">
      <summary>获取或设置工作流设计图面的环境字体名称。</summary>
      <returns>表示工作流设计图面的环境字体名称的字符串。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ForeColor">
      <summary>获取或设置工作流设计图面的环境前景色属性。</summary>
      <returns>表示工作流设计图面的环境前景色的 <see cref="T:System.Drawing.Color" /> 值。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ForegroundBrush">
      <summary>获取工作流设计图面的环境前景画笔。</summary>
      <returns>表示环境前景画笔的 <see cref="T:System.Drawing.Brush" /> 值。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ForegroundPen">
      <summary>获取工作流设计图面的环境前景钢笔。</summary>
      <returns>表示环境前景钢笔的 <see cref="T:System.Drawing.Pen" /> 值。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.GlyphSize">
      <summary>获取工作流设计图面上标志符号的环境高度和宽度。</summary>
      <returns>表示工作流设计图面上标志符号的环境高度和宽度的 <see cref="T:System.Drawing.Size" /> 值。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.GridColor">
      <summary>获取或设置工作流设计图面的环境网格颜色。</summary>
      <returns>表示工作流设计图面的网格颜色的 <see cref="T:System.Drawing.Color" /> 值。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.GridSize">
      <summary>获取要在工作流设计图面上显示的网格的环境大小。</summary>
      <returns>表示要在工作流设计图面上显示的网格的高度和宽度的 <see cref="T:System.Drawing.Size" /> 值。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.GridStyle">
      <summary>获取或设置工作流设计图面的环境网格样式。</summary>
      <returns>表示网格的虚线线型的 <see cref="T:System.Drawing.Drawing2D.DashStyle" /> 值。 默认设置为 <see cref="F:System.Drawing.Drawing2D.DashStyle.Dash" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.AmbientTheme.Initialize">
      <summary>为 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> 类执行未由 <see cref="M:System.Workflow.ComponentModel.Design.AmbientTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)" /> 执行的附加初始化任务。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.MajorGridBrush">
      <summary>获取工作流设计图面上主要网格的环境画笔设置。</summary>
      <returns>与工作流设计图面上主要网格关联的 <see cref="T:System.Drawing.Brush" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.MajorGridPen">
      <summary>获取工作流设计图面上主要网格的环境钢笔设置。</summary>
      <returns>与工作流设计图面上主要网格关联的 <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.Margin">
      <summary>获取工作流设计图面的环境边距设置。</summary>
      <returns>表示工作流设计图面上的边距设置的 <see cref="T:System.Drawing.Size" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.MinorGridPen">
      <summary>获取工作流设计图面上次要网格的环境钢笔设置。</summary>
      <returns>与工作流设计图面上次要网格关联的 <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.AmbientTheme.OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)">
      <summary>当 <see cref="T:System.Workflow.ComponentModel.Design.AmbientProperty" /> 枚举值更改时通知 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />。</summary>
      <param name="ambientProperty">要将设置更改到的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientProperty" /> 枚举值。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ReadonlyIndicatorBrush">
      <summary>获取用于填充与工作流设计图面上显示的只读项关联的图形形状的环境画笔。</summary>
      <returns>一个 <see cref="T:System.Drawing.Brush" />，表示与设计图面上工作流上只读项关联的画笔。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ReadonlyIndicatorColor">
      <summary>获取或设置工作流设计图面上只读项的环境颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" /> 值，表示与设计图面上工作流上只读项关联的环境颜色。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.SelectionForeColor">
      <summary>获取或设置工作流设计图面上所选项的环境颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" /> 值，表示与设计图面上工作流上只读项关联的环境颜色。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.SelectionForegroundBrush">
      <summary>获取用于填充与工作流设计图面上显示的所选项关联的图形形状的环境背景画笔。</summary>
      <returns>一个 <see cref="T:System.Drawing.Brush" />，表示与设计图面上工作流上只读项关联的画笔。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.SelectionForegroundPen">
      <summary>获取工作流设计图面上所选项的环境前景钢笔设置。</summary>
      <returns>与工作流设计图面上所选项的前景关联的 <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.SelectionPatternColor">
      <summary>获取或设置工作流设计图面上所选项的环境模式颜色。</summary>
      <returns>一个 <see cref="T:System.Drawing.Color" /> 值，表示工作流设计图面上所选项的环境模式颜色。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.SelectionPatternPen">
      <summary>获取与工作流设计图面上所选项关联的模式的环境钢笔设置。</summary>
      <returns>与工作流设计图面上所选项的模式关联的 <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.SelectionSize">
      <summary>获取工作流设计图面上所选项的环境大小。</summary>
      <returns>一个 <see cref="T:System.Drawing.Size" />，表示工作流设计图面上所选项的环境属性设置。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ShowConfigErrors">
      <summary>获取或设置一个值，该值指示工作流设计图面是否显示配置错误。</summary>
      <returns>如果工作流设计图面显示配置错误，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ShowDesignerBorder">
      <summary>获取或设置一个值，该值指示工作流设计图面是否显示设计器边框。</summary>
      <returns>如果工作流设计图面显示设计器边框，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.ShowGrid">
      <summary>获取或设置一个值，该值指示工作流设计图面上是否显示网格。</summary>
      <returns>如果在工作流设计图面上显示网格，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.TextQuality">
      <summary>获取或设置要在工作流设计图面上显示的文本质量。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.TextQuality" />，指定要在工作流设计图面上使用的文本质量。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.UseOperatingSystemSettings">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> 是否使用操作系统的主题设置。</summary>
      <returns>如果 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> 使用操作系统的主题设置，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.WatermarkAlignment">
      <summary>获取或设置工作流设计图面上水印图像的环境对齐方式设置。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.DesignerContentAlignment" />，指定工作流设计图面上水印图像的环境对齐方式设置。 默认值为 <see cref="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.BottomRight" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.WatermarkImagePath">
      <summary>获取或设置工作流设计图面上要作为水印显示的图像的环境路径。</summary>
      <returns>一个字符串，其中包含工作流设计图面上要作为水印显示的图像的环境路径。 默认值为空字符串。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.AmbientTheme.WorkflowWatermarkImage">
      <summary>获取要与工作流设计图面作为其水印关联的环境图像。</summary>
      <returns>要在工作流设计图面上用作水印的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.BindUITypeEditor">
      <summary>表示一个与活动上已绑定或可绑定的属性关联的 <see cref="T:System.Drawing.Design.UITypeEditor" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.BindUITypeEditor.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.BindUITypeEditor" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.BindUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="Overload:System.Workflow.ComponentModel.Design.BindUITypeEditor.GetEditStyle" /> 指示的编辑器样式编辑指定的对象值。</summary>
      <returns>新的对象值。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="serviceProvider">可由编辑器用来获取服务的 <see cref="T:System.IServiceProvider" />。</param>
      <param name="value">要编辑的对象的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.BindUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns the editor style used by the <see cref="Overload:System.Workflow.ComponentModel.Design.BindUITypeEditor.EditValue" /> method.</summary>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，指示 <see cref="Overload:System.Workflow.ComponentModel.Design.BindUITypeEditor.EditValue" /> 使用的编辑器的样式。</returns>
      <param name="typeDescriptorContext">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.CommentGlyph">
      <summary>为 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 提供当用户在设计期间禁用活动时要显示的标志符号。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CommentGlyph.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.CommentGlyph" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CommentGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>返回指定的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 上的当前注释标志符号的边界。</summary>
      <returns>表示标志符号边界的 <see cref="T:System.Drawing.Rectangle" />。</returns>
      <param name="designer">与注释标志符号关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <param name="activated">为 true 则指示在活动设计器图面上显示标志符号；否则为 false。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CommentGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>执行在活动设计器图面上呈现注释标志符号时所需的任何任务。</summary>
      <param name="graphics">用于执行填充和绘制任务的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="activated">为 true 则指示在设计图面上显示标志符号；否则为 false。</param>
      <param name="ambientTheme">要用于访问环境属性设置的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />。</param>
      <param name="designer">从中获取有关用户操作的信息的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CommentGlyph.Priority">
      <summary>获取活动设计器上标志符号的视图优先级。</summary>
      <returns>一个整数，表示活动设计器上标志符号的视图优先级。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner">
      <summary>提供一个使您能够以可视方式设计复合活动的设计器。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 的实例。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.AccessibilityObject">
      <summary>获取一个 <see cref="T:System.Windows.Forms.AccessibleObject" />，辅助功能应用程序使用该对象为残障人员调整应用程序的外观。</summary>
      <returns>与该控件关联的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanExpandCollapse">
      <summary>获取一个值，该值指示 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 是否可以折叠。</summary>
      <returns>如果指定的复合活动设计器可以折叠，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>返回一个值，该值指示是否可以将活动插入与设计器关联的复合活动中。</summary>
      <returns>如果可以将活动插入与设计器关联的复合活动中，则为 true；否则为 false。</returns>
      <param name="insertLocation">要插入活动的位置。</param>
      <param name="activitiesToInsert">要插入的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的只读数组。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanMoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>返回一个值，该值指示是否可以将复合活动中包含的活动移出与设计器关联的复合活动。</summary>
      <returns>如果可以从复合活动中移出活动，则为 true；否则为 false。</returns>
      <param name="moveLocation">从该处移动活动的位置。</param>
      <param name="activitiesToMove">要移动的活动的只读数组。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanRemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>返回一个值，该值指示是否可以从与设计器关联的复合活动中移除活动。</summary>
      <returns>如果可以从复合活动中移除活动，则为 true；否则为 false。</returns>
      <param name="activitiesToRemove">要从与设计器关联的复合活动中移除的活动的只读数组。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 中包含的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 的数组。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 的只读集合。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.DeserializeActivitiesFromDataObject(System.IServiceProvider,System.Windows.Forms.IDataObject)">
      <summary>从在拖放操作过程中接收的 <see cref="T:System.Windows.Forms.IDataObject" /> 或从剪帖板反序列化各个项。</summary>
      <returns>从 <see cref="T:System.Windows.Forms.IDataObject" /> 反序列化的活动的数组。</returns>
      <param name="serviceProvider">组件序列化服务。</param>
      <param name="dataObj">包含要反序列化的活动的对象。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>验证包含的设计器是否可见。</summary>
      <param name="containedDesigner">要变为可见的包含的设计器。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle">
      <summary>获取包含展开或折叠按钮的 <see cref="T:System.Drawing.Rectangle" />。</summary>
      <returns>包含展开或折叠按钮的 <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 是否展开。</summary>
      <returns>如果 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 已展开，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.FirstSelectableObject">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 的导航顺序中的第一个可选择对象。</summary>
      <returns>设计器中包含的第一个可选择对象。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetIntersectingDesigners(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Drawing.Rectangle)">
      <summary>检索属于指定根活动且与指定区域相交的设计器。</summary>
      <returns>与指定矩形的一部分相交的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 对象的数组。</returns>
      <param name="topLevelDesigner">要分析的顶级设计器。</param>
      <param name="rectangle">顶级设计器中要分析的区域。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)">
      <summary>以导航顺序获取下一个对象。</summary>
      <returns>导航顺序中的下一个对象。</returns>
      <param name="current">导航顺序中的当前对象。</param>
      <param name="direction">导航的方向。0 = 下一个；1 = 上一个；2 = 左；3 = 右。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Glyphs">
      <summary>获取用于修饰复合活动设计器的标志符号的集合。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" />，其中包含要显示在设计器上的标志符号。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.HitTest(System.Drawing.Point)">
      <summary>获取有关屏幕上指定点处的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 的信息。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />，其中包含有关指定点处的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 的信息。</returns>
      <param name="point">一个表示 x 和 y 坐标的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle">
      <summary>获取与设计器关联的图像的环绕边界值（以逻辑坐标表示）。</summary>
      <returns>包括为 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 显示的 <see cref="T:System.Drawing.Image" /> 的矩形。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)">
      <summary>使用关联的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 初始化设计器。</summary>
      <param name="activity">应该用于初始化设计器的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities(System.Workflow.ComponentModel.Design.CompositeActivityDesigner,System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity},System.String)">
      <summary>使用事务将活动插入设计器中的指定位置。</summary>
      <param name="compositeActivityDesigner">将插入活动的设计器。</param>
      <param name="insertLocation">设计器中将插入活动的位置。</param>
      <param name="activitiesToInsert">要插入的活动的列表。</param>
      <param name="undoTransactionDescription">由插入操作创建的设计器事务的说明。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>将指定活动插入设计器中的指定位置。</summary>
      <param name="insertLocation">设计器中要插入活动的位置。</param>
      <param name="activitiesToInsert">要插入的活动的列表。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsContainedDesignerVisible(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>获取一个值，该值指示包含的设计器是否可见。</summary>
      <returns>如果包含的设计器可见，则为 true；否则为 false。</returns>
      <param name="containedDesigner">CompositeActivityDesigner 中包含的要测试可见性的设计器。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsEditable">
      <summary>获取一个值，该值指示是否可以编辑设计器。</summary>
      <returns>如果可以编辑设计器，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LastSelectableObject">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 中包含的最后一个可选择对象。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 中包含的最后一个可选择对象。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LoadViewState(System.IO.BinaryReader)">
      <summary>从二进制流还原视图状态。</summary>
      <param name="reader">要从其中加载视图状态的 <see cref="T:System.IO.BinaryReader" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Location">
      <summary>获取或设置设计器的位置（以逻辑坐标表示）。</summary>
      <returns>以逻辑坐标表示的设计器的位置。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>将活动从一个设计器移动到另一个设计器。</summary>
      <param name="moveLocation">说明要将活动移动到的位置的 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />。</param>
      <param name="activitiesToMove">要移动的活动的列表。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveDesigners(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>在复合活动内按索引向前或向后移动设计器。</summary>
      <param name="activityDesigner">要移动的活动设计器。</param>
      <param name="moveBack">为 true 则向后移动设计器；为 false 则向前移动设计器。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <summary>当设计器中包含的多个活动更改时发生。 例如，添加新的子活动或移除现有的子活动时会发生这种情况。</summary>
      <param name="listChangeArgs">包含有关更改的信息的 <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="listChangeArgs" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <summary>当设计器中包含的一个活动或一组活动更改时发生。 例如，添加新的子活动或移除现有的子活动时会发生这种情况。</summary>
      <param name="listChangeArgs">一个 <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />，其中包含有关更改的信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="listChangeArgs" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivityChanged(System.Workflow.ComponentModel.Design.ActivityChangedEventArgs)">
      <summary>当设计器中包含的活动更改时发生。</summary>
      <param name="e">一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" />，其中包含有关更改的信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>设计器有焦点的情况下按下某个键时调用。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>为 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 上包含的视觉提示或设计器执行布局和定位任务，以便重新定位其子活动。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>调用以基于活动的当前状态（折叠或展开）和其子活动列表，计算活动所需的大小。</summary>
      <returns>包含 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 的新大小设置的 <see cref="T:System.Drawing.Size" />。</returns>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>指针位于设计器边界内的情况下单击鼠标时调用。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>在设计时绘制复合活动的可视表示形式。</summary>
      <param name="e">包含绘图数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)">
      <summary>向设计器通知关联的主题已发生更改。</summary>
      <param name="designerTheme">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.PaintContainedDesigners(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>调整图形对象上的剪裁区域并对所有包含的设计器调用 <see cref="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />。</summary>
      <param name="e">用于进行绘制的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>从复合活动设计器中移除一系列活动。</summary>
      <param name="activitiesToRemove">要从设计器中移除的一系列活动。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities(System.IServiceProvider,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity},System.String)">
      <summary>使用事务从设计器中移除一系列活动。</summary>
      <param name="serviceProvider">与设计器关联的服务提供程序。</param>
      <param name="activitiesToRemove">要移除的活动的列表。</param>
      <param name="transactionDescription">所创建的事务的说明。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SaveViewState(System.IO.BinaryWriter)">
      <summary>将视图状态保存到二进制流。</summary>
      <param name="writer">视图状态将存储到的 <see cref="T:System.IO.BinaryWriter" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SerializeActivitiesToDataObject(System.IServiceProvider,System.Workflow.ComponentModel.Activity[])">
      <summary>将活动数组序列化为一个可以放在剪贴板中的 <see cref="T:System.Windows.Forms.IDataObject" />，或在初始化拖放操作时使用。</summary>
      <returns>包含要序列化的活动的 <see cref="T:System.Windows.Forms.IDataObject" />。</returns>
      <param name="serviceProvider">组件序列化服务。</param>
      <param name="activities">要序列化的活动的数组。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle">
      <summary>获取说明矩形的值（以逻辑坐标表示）。</summary>
      <returns>说明矩形的值（以逻辑坐标表示）。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TitleHeight">
      <summary>获取设计器标题区的高度。</summary>
      <returns>设计器标题区的高度（以像素为单位）。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.CompositeActivityDesignerLayoutSerializer">
      <summary>序列化任意形式的设计器中使用的复合活动设计器布局。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesignerLayoutSerializer.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesignerLayoutSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeActivityDesignerLayoutSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>检索有关与指定对象关联的所有属性的信息。</summary>
      <returns>一个 <see cref="T:System.Reflection.PropertyInfo" /> 数组，其中包含有关与 <paramref name="obj" /> 关联的属性的信息。</returns>
      <param name="serializationManager">管理序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">要搜索属性的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject">
      <summary>实现一个辅助性对象，<see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 类可以使用该对象为残障用户调整设计器用户界面。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject.#ctor(System.Workflow.ComponentModel.Design.CompositeActivityDesigner)">
      <summary>使用指定的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject" /> 类的新实例。</summary>
      <param name="activityDesigner">要应用于辅助性对象的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject.GetChild(System.Int32)">
      <summary>返回与指定索引位置的活动设计器关联的辅助性子对象。</summary>
      <returns>与指定索引位置的子级 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 关联的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
      <param name="index">子级辅助性对象的从零开始的索引。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject.GetChildCount">
      <summary>返回属于 <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject" /> 的辅助性子对象的数目。</summary>
      <returns>属于 <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject" /> 的子对象的数目。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject.State">
      <summary>获取当前 <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerAccessibleObject" /> 的可访问状态。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleStates" /> 值的组合。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.CompositeDesignerTheme">
      <summary>为 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 对象提供主题设置。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerTheme" /> 类的新实例。</summary>
      <param name="theme">要与复合设计器主题关联的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.ConnectorEndCap">
      <summary>获取或设置一个值，该值确定显示在连接器末端的形状。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.LineAnchor" /> 枚举值，该值定义显示在连接器末端的形状。 默认值为 <see cref="F:System.Workflow.ComponentModel.Design.LineAnchor.ArrowAnchor" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.ConnectorSize">
      <summary>获取连接器的 <see cref="T:System.Drawing.Size" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Size" /> 对象，其中包含有关连接器的高度和宽度的信息。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.ConnectorStartCap">
      <summary>获取或设置一个值，该值确定显示在连接器开头的形状。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.LineAnchor" /> 枚举值，该值定义显示在连接器开头的形状。 默认值为 <see cref="F:System.Workflow.ComponentModel.Design.LineAnchor.None" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerTheme" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.ExpandButtonSize">
      <summary>获取复合活动设计器上的展开按钮的 <see cref="T:System.Drawing.Size" />。</summary>
      <returns>一个 <see cref="T:System.Drawing.Size" /> 对象，其中包含有关 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 上的展开按钮的高度和宽度的信息。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.GetExpandButtonBackgroundBrush(System.Drawing.Rectangle)">
      <summary>检索一个画笔，它定义复合活动设计器上的展开按钮的背景显示属性。</summary>
      <returns>一个 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 对象，它使用 <paramref name="rectangle" /> 参数定义按钮区域，画笔使用从展开按钮的左上角到右下角的线性渐变在该区域中应用两种颜色。</returns>
      <param name="rectangle">一个 <see cref="T:System.Drawing.Rectangle" />，它定义 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 上的展开按钮的边界。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.Initialize">
      <summary>执行 <see cref="M:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)" /> 构造函数提供的初始化任务之外的其他初始化任务。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)">
      <summary>向 <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerTheme" /> 对象通知设计器的环境属性设置已发生更改。</summary>
      <param name="ambientProperty">复合设计器主题当前应使用的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientProperty" /> 枚举值。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.ShowDropShadow">
      <summary>获取或设置一个值，该值指示复合设计器主题是否会在复合活动设计器的周围显示投影。</summary>
      <returns>如果 <see cref="T:System.Workflow.ComponentModel.Design.CompositeDesignerTheme" /> 在 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 周围显示投影，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.WatermarkAlignment">
      <summary>获取或设置 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 中的水印图像的对齐方式。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.DesignerContentAlignment" /> 枚举值，该值指示在 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 中放置水印图像的位置。 默认值为 <see cref="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.BottomRight" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.WatermarkImage">
      <summary>获取要在复合活动设计器上使用的水印图像。</summary>
      <returns>要用作 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 的水印的 <see cref="T:System.Drawing.Image" /> 对象。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.CompositeDesignerTheme.WatermarkImagePath">
      <summary>获取或设置要在复合活动设计器上使用的水印图像的相对路径。</summary>
      <returns>一个字符串值，该值表示要在 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 上使用的水印图像的相对路径。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ConfigErrorGlyph">
      <summary>为 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 提供当用户在设计期间尚未执行所需的设计器操作时要显示的标志符号。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConfigErrorGlyph.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ConfigErrorGlyph" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConfigErrorGlyph.CanBeActivated">
      <summary>获取一个值，该值指示 <see cref="T:System.Workflow.ComponentModel.Design.ConfigErrorGlyph" /> 能否在关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 上获取焦点。</summary>
      <returns>如果可以激活设计器标志符号，则为 true；否则为 false。 默认值为 true。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConfigErrorGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>返回指定 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 上的标志符号的边界。</summary>
      <returns>表示标志符号边界的 <see cref="T:System.Drawing.Rectangle" />。</returns>
      <param name="designer">与标志符号关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <param name="activated">为 true 则指示在活动设计器图面上显示标志符号；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConfigErrorGlyph.OnActivate(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>向标志符号通知激活它的操作已执行。</summary>
      <param name="designer">在其中绘制标志符号的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConfigErrorGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>执行在活动设计器图面上呈现标志符号时所需的任何任务。</summary>
      <param name="graphics">用于执行填充和绘制任务的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="activated">为 true 则指示在设计图面上显示标志符号；否则为 false。</param>
      <param name="ambientTheme">要用于访问环境属性设置的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />。</param>
      <param name="designer">从中获取有关用户操作的信息的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConfigErrorGlyph.Priority">
      <summary>获取活动设计器图面上的标志符号的优先级设置。</summary>
      <returns>An integer value that represents the priority setting for the <see cref="T:System.Workflow.ComponentModel.Design.ConfigErrorGlyph" /> on the activity design surface.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ConnectionPoint">
      <summary>表示工作流设计图面上活动设计器的外边缘上显示的连接点。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectionPoint.#ctor(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Workflow.ComponentModel.Design.DesignerEdges,System.Int32)">
      <summary>使用指定的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />、<see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> 枚举值和整数初始化 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 类的新实例。</summary>
      <param name="associatedDesigner">连接点所属的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <param name="designerEdge">指定连接点在活动设计器上所处位置的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" /> 枚举值。</param>
      <param name="connectionIndex">当前 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 的索引位置。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionIndex" /> 小于零。 --或者-- <paramref name="connectionIndex" /> 大于或等于 <paramref name="associatedDesigner" /> 上的连接点数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="associatedDesigner" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectionPoint.AssociatedDesigner">
      <summary>获取连接点所属的活动设计器。</summary>
      <returns>连接点所属的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectionPoint.Bounds">
      <summary>获取连接点的边框。</summary>
      <returns>绑定 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 的 <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectionPoint.ConnectionEdge">
      <summary>获取在其上显示连接点的设计器边缘。</summary>
      <returns>指定在其上显示 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 的活动设计器边缘的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectionPoint.ConnectionIndex">
      <summary>获取当前 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 的连接索引。</summary>
      <returns>表示当前 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 的连接索引的整数。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectionPoint.Equals(System.Object)">
      <summary>返回一个值，该值指示当前 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 是否与指定对象相等。</summary>
      <returns>为 true 则指示当前 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 与 <paramref name="obj" /> 相等；否则为 false。</returns>
      <param name="obj">将与当前 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 进行比较的对象。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectionPoint.GetHashCode">
      <summary>返回当前 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 的哈希代码。</summary>
      <returns>用 <see cref="P:System.Workflow.ComponentModel.Design.ConnectionPoint.ConnectionIndex" /> 整数或 <see cref="P:System.Workflow.ComponentModel.Design.ConnectionPoint.AssociatedDesigner" /> 中提供的设计器生成的哈希代码。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectionPoint.Location">
      <summary>获取一个表示 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 在关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 上的逻辑位置的点。</summary>
      <returns>表示 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 在关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 上的逻辑位置的 <see cref="T:System.Drawing.Point" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectionPoint.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs,System.Boolean)">
      <summary>执行在活动设计器图面上呈现 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 所需的所有任务。</summary>
      <param name="e">包含数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /></param>
      <param name="drawHighlighted">为 true 则绘制突出显示的连接点；否则为 false。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.Connector">
      <summary>表示工作流设计图面上两个活动设计器之间的连接器。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.#ctor(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 类的新实例。</summary>
      <param name="source">开始绘制 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />。</param>
      <param name="target">完成绘制 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 或 <paramref name="target" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.AccessibilityObject">
      <summary>获取一个 <see cref="T:System.Windows.Forms.AccessibleObject" />，辅助功能应用程序使用该对象为残障用户调整应用程序 UI。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.AccessibleObject" />，辅助功能应用程序使用该对象为残障用户调整应用程序 UI。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.Bounds">
      <summary>获取工作流设计图面上的连接器的边框。</summary>
      <returns>环绕工作流设计图面上的连接器的 <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.ConnectorModified">
      <summary>获取一个值，该值指示是否修改 <see cref="T:System.Workflow.ComponentModel.Design.Connector" />。</summary>
      <returns>如果连接器已修改，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.ConnectorSegments">
      <summary>获取包含 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 中找到的所有线段的点的只读集合。</summary>
      <returns>一个 <see cref="T:System.Drawing.Point" /> 只读集合，其中包含 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 中找到的所有线段。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.Equals(System.Object)">
      <summary>确定当前 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 是否与指定的连接器相同。</summary>
      <returns>如果指定的连接器与当前 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 相同，则为 true；否则为 false。</returns>
      <param name="obj">要与当前连接器进行比较的 <see cref="T:System.Workflow.ComponentModel.Design.Connector" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.ExcludedRoutingRectangles">
      <summary>返回 Rectangle 对象的空数组。 由派生类填充此集合。</summary>
      <returns>Rectangle 对象的泛型集合。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.GetHashCode">
      <summary>返回当前 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 的哈希代码。</summary>
      <returns>当前 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.GetService(System.Type)">
      <summary>返回指定类型的服务对象（如果可用）。</summary>
      <returns>类型为 <paramref name="serviceType" /> 的服务对象；如果不存在类型为 <paramref name="serviceType" /> 的服务对象，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="serviceType">要返回的服务对象的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.HitTest(System.Drawing.Point)">
      <summary>返回一个值，该值指示指定点是否位于当前 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 上。</summary>
      <returns>如果 <paramref name="point" /> 位于当前 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 上，则为 true；否则为 false。</returns>
      <param name="point">要测试的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.Invalidate">
      <summary>使当前 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 无效并进行重绘。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.Offset(System.Drawing.Size)">
      <summary>使用在指定 <see cref="T:System.Drawing.Size" /> 中定义的设置更改 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 的高度和宽度。</summary>
      <param name="size">包含连接器的偏移高度和宽度设置的 <see cref="T:System.Drawing.Size" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.OnLayout(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>向 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 发出有关正在执行布局操作的通知。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>在工作流设计图面上呈现 <see cref="T:System.Workflow.ComponentModel.Design.Connector" />。</summary>
      <param name="e">包含绘制数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.OnPaintEdited(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs,System.Drawing.Point[],System.Drawing.Point[])">
      <summary>用于在将连接器从一种状态拖到另一种状态时绘制连接器。</summary>
      <param name="e">一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> 对象，指定要用于绘制对象的图形以及在其中绘制对象的剪辑矩形。</param>
      <param name="segments">
        <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 中的线段的坐标。</param>
      <param name="segmentEditPoints">
        <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 中的编辑点的坐标。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.OnPaintSelected(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs,System.Boolean,System.Drawing.Point[])">
      <summary>用于绘制用户所选择的连接器。</summary>
      <param name="e">一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> 对象，指定要用于绘制对象的图形以及在其中绘制对象的剪辑矩形。</param>
      <param name="primarySelection">未使用。</param>
      <param name="segmentEditPoints">
        <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 中的编辑点的坐标。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.ParentDesigner">
      <summary>获取工作流设计图面上显示连接器的设计器。</summary>
      <returns>工作流设计图面上显示连接器的 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.ParentView">
      <summary>获取与连接器关联的工作流视图。</summary>
      <returns>与连接器关联的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.PerformLayout">
      <summary>执行 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 的布局任务。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.SetConnectorSegments(System.Collections.Generic.ICollection{System.Drawing.Point})">
      <summary>如果连接器已发生更改，则重新确定源到目标的连接器。</summary>
      <param name="segments">一个 <see cref="T:System.Drawing.Point" /> 集合，表示要用于重排的新的连接器线段。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.Source">
      <summary>获取或设置开始绘制 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />。</summary>
      <returns>开始绘制 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />。</returns>
      <exception cref="T:System.ArgumentException">设置此属性时，源 <see cref="P:System.Workflow.ComponentModel.Design.ConnectionPoint.AssociatedDesigner" /> 与关联的目标设计器不匹配。</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Workflow.ComponentModel.Design.Connector.Source" /> 已设置为空引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.Connector.System#IDisposable#Dispose">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 使用的所有资源。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.Connector.Target">
      <summary>获取或设置完成绘制 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />。</summary>
      <returns>完成绘制 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />。</returns>
      <exception cref="T:System.ArgumentException">设置此属性时，源 <see cref="P:System.Workflow.ComponentModel.Design.ConnectionPoint.AssociatedDesigner" /> 与关联的目标设计器不匹配。</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Workflow.ComponentModel.Design.Connector.Target" /> 已设置为空引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject">
      <summary>提供有关活动设计器之间的连接器的信息，辅助性应用程序使用这些信息为残障用户调整应用程序 UI。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject.#ctor(System.Workflow.ComponentModel.Design.Connector)">
      <summary>使用 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 的实例初始化 <see cref="T:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject" /> 类的实例。</summary>
      <param name="connector">一个 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 的实例，它表示工作流设计图面上两个活动设计器之间的连接器。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject.Bounds">
      <summary>获取辅助性对象的位置和大小。</summary>
      <returns>包含辅助性对象的位置和大小信息的矩形</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary>在指定的屏幕坐标位置检索子对象。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject" />，表示位于给定屏幕坐标位置的子对象。 如果对象本身位于指定位置，则此方法返回调用对象。 如果在测试位置没有对象，则会返回空引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="x">水平屏幕坐标。</param>
      <param name="y">垂直屏幕坐标。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject.Name">
      <summary>获取或设置对象名。</summary>
      <returns>表示辅助性对象的名称的字符串值</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject.Parent">
      <summary>获取辅助性对象的父级。</summary>
      <returns>辅助性对象的父对象</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectorAccessibleObject.Role">
      <summary>获取此辅助性对象的角色。</summary>
      <returns>AccessibleRole 的值之一。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ConnectorEventArgs">
      <summary>为 <see cref="E:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner.ConnectorAdded" />、<see cref="E:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner.ConnectorRemoved" /> 和 <see cref="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorChanged" /> 事件提供数据。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectorEventArgs.Connector">
      <summary>获取作为 <see cref="T:System.Workflow.ComponentModel.Design.ConnectorEventArgs" /> 的一部分传递的连接器对象。</summary>
      <returns>作为 <see cref="T:System.Workflow.ComponentModel.Design.ConnectorEventArgs" /> 的一部分传递的 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 对象。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ConnectorEventHandler">
      <summary>表示将处理 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的 <see cref="E:System.Workflow.ComponentModel.Design.FreeFormActivityDesigner.ConnectorAdded" />、<see cref="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorRemoved" /> 和 <see cref="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorChanged" /> 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectorEventArgs" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo">
      <summary>包含有关 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 中指定坐标处的连接器和从其继承的所有类的信息。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo.#ctor(System.Workflow.ComponentModel.Design.CompositeActivityDesigner,System.Workflow.ComponentModel.Design.HitTestLocations,System.Int32)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo" /> 类的新实例。</summary>
      <param name="compositeActivityDesigner">包含连接器的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />。</param>
      <param name="flags">定义用户在连接器上的单击位置的 <see cref="T:System.Workflow.ComponentModel.Design.HitTestLocations" />。</param>
      <param name="connector">单击的连接器的索引标识符。</param>
      <exception cref="T:System.ArgumentException">构造函数调用连接器之前，会将索引设置为小于零。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo.Bounds">
      <summary>获取单击的连接器的边框。</summary>
      <returns>绑定所单击的连接器的 <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo.Equals(System.Object)">
      <summary>确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo" />。</summary>
      <returns>如果指定的 <see cref="T:System.Object" /> 等于当前的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo" />，则为 true；否则为 false。</returns>
      <param name="obj">与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo.GetHashCode">
      <summary>返回当前 <see cref="T:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo" /> 的哈希代码。</summary>
      <returns>当前 <see cref="T:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo.MapToIndex">
      <summary>返回用户单击的连接器的索引。</summary>
      <returns>用户单击的连接器的索引。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ConnectorHitTestInfo.SelectableObject">
      <summary>获取与点击区域关联的可选择对象。</summary>
      <returns>与用户单击的区域关联的可选择的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ConnectorLayoutSerializer">
      <summary>序列化连接器布局。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorLayoutSerializer.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ConnectorLayoutSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorLayoutSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)">
      <summary>使用指定的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> 创建指定 <see cref="T:System.Type" /> 的实例。</summary>
      <returns>指定的 <see cref="T:System.Type" /> 的实例。</returns>
      <param name="serializationManager">支持此操作的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="type">指定的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorLayoutSerializer.GetConnectorConstructionArguments(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)">
      <summary>获取用与 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> 关联的 XML 读取器中当前位置的元素名称及其关联值填充的字典集合。</summary>
      <returns>基于字典的集合，其中包含用于构造连接器的参数名称及其关联值。</returns>
      <param name="serializationManager">管理序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="type">指定的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorLayoutSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>检索有关与指定对象关联的所有属性的信息。</summary>
      <returns>一个 <see cref="T:System.Reflection.PropertyInfo" /> 数组，其中包含有关与 <paramref name="obj" /> 关联的属性的信息。</returns>
      <param name="serializationManager">管理序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">要搜索属性的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 或 <paramref name="obj" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ConnectorLayoutSerializer.OnAfterDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>在反序列化过程后执行对象的处理。</summary>
      <param name="serializationManager">管理序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">已执行反序列化的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerAction">
      <summary>将对工作流设计图面上的活动设计器采取的操作与 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 关联。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerAction.#ctor(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Int32,System.String)">
      <summary>使用 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />、整数和字符串初始化 <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> 类的新实例。</summary>
      <param name="activityDesigner">对其采取设计器操作的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <param name="actionId">表示 <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> 的标识符的整数值。</param>
      <param name="text">表示与设计器操作关联的文本的字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activityDesigner" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> 包含空引用 (Nothing) 或其长度为 0。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerAction.#ctor(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Int32,System.String,System.Drawing.Image)">
      <summary>使用 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />、整数、字符串和 <see cref="T:System.Drawing.Image" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> 类的新实例。</summary>
      <param name="activityDesigner">在其上显示设计器操作的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <param name="actionId">表示 <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> 的标识符的整数值。</param>
      <param name="text">表示与设计器操作关联的文本的字符串。</param>
      <param name="image">要与设计器操作关联的 <see cref="T:System.Drawing.Image" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activityDesigner" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> 包含空引用 (Nothing) 或其长度为 0。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerAction.ActionId">
      <summary>获取设计器操作的标识符。</summary>
      <returns>表示 <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> 对象的标识符的整数。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerAction.Image">
      <summary>获取与设计器操作关联的图像。</summary>
      <returns>与 <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> 关联的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerAction.Invoke">
      <summary>调用与当前设计器操作关联的活动设计器的 <see cref="M:System.Workflow.ComponentModel.Design.ActivityDesigner.OnExecuteDesignerAction(System.Workflow.ComponentModel.Design.DesignerAction)" /> 方法。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerAction.PropertyName">
      <summary>表示与 <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> 关联的属性的名称。</summary>
      <returns>包含属性名称的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerAction.Text">
      <summary>获取与设计器操作关联的文本。</summary>
      <returns>表示与 <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> 关联的文本的字符串值。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerAction.UserData">
      <summary>获取与设计器操作关联的用户数据的字典。</summary>
      <returns>表示与 <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> 关联的用户数据的 <see cref="T:System.Collections.IDictionary" />。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerContentAlignment">
      <summary>指定工作流内容在工作流设计器中的对齐位置。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.Bottom">
      <summary>工作流内容与设计器的底部对齐。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.BottomCenter">
      <summary>工作流内容与设计器的底部中心对齐。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.BottomLeft">
      <summary>工作流内容与设计器的底部左侧对齐。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.BottomRight">
      <summary>工作流内容与设计器的底部右侧对齐。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.Center">
      <summary>工作流内容与设计器的中心对齐。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.CenterLeft">
      <summary>工作流内容与设计器的中部左侧对齐。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.CenterRight">
      <summary>工作流内容与设计器的中部右侧对齐。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.Fill">
      <summary>工作流内容与设计器的填充对齐。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.Left">
      <summary>工作流内容与设计器的左侧对齐。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.Right">
      <summary>工作流内容与设计器的右侧对齐。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.Top">
      <summary>工作流内容与设计器的顶部对齐。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.TopCenter">
      <summary>工作流内容与设计器的顶部中心对齐。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.TopLeft">
      <summary>工作流内容与设计器的顶部左侧对齐。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerContentAlignment.TopRight">
      <summary>工作流内容与设计器的顶部右侧对齐。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerEdges">
      <summary>指定活动设计器在工作流设计图面上用于执行设计时处理的一个或多个边缘，如活动设计器上的 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 位置。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerEdges.All">
      <summary>活动设计器的所有边缘。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerEdges.Bottom">
      <summary>活动设计器的下边缘。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerEdges.Left">
      <summary>活动设计器的左边缘。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerEdges.None">
      <summary>非活动设计器的边缘。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerEdges.Right">
      <summary>活动设计器的右边缘。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerEdges.Top">
      <summary>活动设计器的上边缘。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerGeometry">
      <summary>指定活动设计器用于呈现其设计图面各个角的形状。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerGeometry.Rectangle">
      <summary>设计图面的角是直角。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerGeometry.RoundedRectangle">
      <summary>设计图面的角是圆角。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerGlyph">
      <summary>在活动设计器上的 Z 顺序的最顶层位置绘制标志符号。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerGlyph.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerGlyph.CanBeActivated">
      <summary>获取一个值，该值指示 <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> 能否在关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 上获取焦点。</summary>
      <returns>如果可以激活设计器标志符号，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>返回指定 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 上的标志符号的边界。</summary>
      <returns>表示标志符号边界的 <see cref="T:System.Drawing.Rectangle" />。</returns>
      <param name="designer">与标志符号关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <param name="activated">为 true 则指示在活动设计器图面上显示标志符号；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerGlyph.HighestPriority">
      <summary>表示 <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> 的可能的最高优先级。 该值是一个常数。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerGlyph.LowestPriority">
      <summary>表示 <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> 的可能的最低优先级。 该值是一个常数。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerGlyph.NormalPriority">
      <summary>表示 <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> 的正常优先级。 该值是一个常数。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerGlyph.OnActivate(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>向标志符号指示激活它的操作已执行。</summary>
      <param name="designer">在其中绘制标志符号的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>当在派生类中重写时，执行在活动设计器图面上呈现标志符号所需的任何任务。</summary>
      <param name="graphics">用于执行填充和绘制任务的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="activated">为 true 则指示在设计图面上显示标志符号；否则为 false。</param>
      <param name="ambientTheme">要用于访问环境属性设置的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />。</param>
      <param name="designer">从中获取有关用户操作的信息的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority">
      <summary>获取活动设计图面上的设计器标志符号的优先级设置。</summary>
      <returns>一个整数值，表示活动设计器图面上的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> 的优先级设置。 该值越小，表示优先级越高，因此会在活动设计器的 Z 顺序的最顶层位置绘制标志符号。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerNavigationDirection">
      <summary>指定用于在设计器对象之间进行导航的值。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerNavigationDirection.Down">
      <summary>按顺序向下导航到下一个活动。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerNavigationDirection.Left">
      <summary>导航到工作流中的左侧。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerNavigationDirection.Right">
      <summary>导航到工作流中的右侧。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerNavigationDirection.Up">
      <summary>按顺序向上导航到上一个活动。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerSize">
      <summary>指定在工作流设计图面上呈现 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 类时，主题类用于控制这些类大小的大小设置。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerSize.Large">
      <summary>活动设计器很大。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerSize.Medium">
      <summary>活动设计器的大小中等。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerSize.Small">
      <summary>活动设计器很小。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerTheme">
      <summary>为在工作流设计时环境中使用的所有活动设计器主题类提供基类实现。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)">
      <summary>在派生类中实现时，使用 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> 对象初始化 <see cref="T:System.Workflow.ComponentModel.Design.DesignerTheme" /> 类的新实例。</summary>
      <param name="theme">与设计器主题关联的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerTheme.ApplyTo">
      <summary>获取或设置对其应用设计器主题的设计器类型的非限定名称。</summary>
      <returns>应用设计器主题的设计器类型的名称。</returns>
      <exception cref="T:System.Data.ReadOnlyException">
        <see cref="P:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly" /> 属性设置为 true 时，用户尝试执行设置操作。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerTheme.ContainingTheme">
      <summary>获取包装设计器主题的工作流主题。</summary>
      <returns>与 <see cref="T:System.Workflow.ComponentModel.Design.DesignerTheme" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> 对象。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerTheme.DesignerType">
      <summary>获取或设置与设计器主题关联的设计器的类型。</summary>
      <returns>一个 <see cref="T:System.Type" />，表示要与当前设计器主题关联的设计器。</returns>
      <exception cref="T:System.Data.ReadOnlyException">
        <see cref="P:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly" /> 属性设置为 true 时，用户尝试执行设置操作。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerTheme.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.DesignerTheme" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerTheme.Finalize">
      <summary>允许 <see cref="T:System.Workflow.ComponentModel.Design.DesignerTheme" /> 在由垃圾回收过程回收资源之前尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerTheme.Initialize">
      <summary>执行由 <see cref="M:System.Workflow.ComponentModel.Design.DesignerTheme.#ctor(System.Workflow.ComponentModel.Design.WorkflowTheme)" /> 执行的初始化任务之外的其他初始化任务。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerTheme.OnAmbientPropertyChanged(System.Workflow.ComponentModel.Design.AmbientProperty)">
      <summary>向设计器主题类通知设计器的环境属性设置已发生更改。</summary>
      <param name="ambientProperty">设计器主题现在应使用的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientProperty" /> 枚举值。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerTheme.ReadOnly">
      <summary>获取一个值，该值指示设计器主题是否为只读。</summary>
      <returns>如果 <see cref="T:System.Workflow.ComponentModel.Design.DesignerTheme" /> 为只读，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerTheme.System#IDisposable#Dispose">
      <summary>执行与释放或重置非托管资源相关的应用程序定义的任务。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerVerbGroup">
      <summary>指定上下文菜单或工作流设计器菜单中要显示活动设计器谓词的分组区域。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerVerbGroup.Actions">
      <summary>操作设计器谓词组。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerVerbGroup.Edit">
      <summary>编辑设计器谓词组。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerVerbGroup.General">
      <summary>常规设计器谓词组。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerVerbGroup.Misc">
      <summary>杂项设计器谓词组。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerVerbGroup.Options">
      <summary>选项设计器谓词组。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.DesignerVerbGroup.View">
      <summary>视图设计器谓词组。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.DesignerView">
      <summary>用作一个存储库，其中包含有关 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 或从它继承的类所支持的视图的信息。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerView.#ctor(System.Int32,System.String,System.Drawing.Image)">
      <summary>使用整数、字符串和 <see cref="T:System.Drawing.Image" /> 来初始化 <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> 类的新实例。</summary>
      <param name="viewId">设计器视图的整数标识符。</param>
      <param name="text">指定设计器视图名称的字符串。</param>
      <param name="image">The <see cref="T:System.Drawing.Image" /> associated with the designer view.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewId" /> 或 <paramref name="text" /> 包含 null。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerView.#ctor(System.Int32,System.String,System.Drawing.Image,System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>使用整数、字符串、<see cref="T:System.Drawing.Image" /> 和 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 来初始化 <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> 类的新实例。</summary>
      <param name="viewId">设计器视图的整数标识符。</param>
      <param name="text">指定设计器视图名称的字符串。</param>
      <param name="image">The <see cref="T:System.Drawing.Image" /> associated with the designer view.</param>
      <param name="associatedDesigner">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> associated with the designer view.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="viewId" />、<paramref name="text" /> 或 <paramref name="associatedDesigner" /> 包含 null。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerView.AssociatedDesigner">
      <summary>获取与设计器视图关联的活动设计器。</summary>
      <returns>与 <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerView.Equals(System.Object)">
      <summary>确定指定的 <see cref="T:System.Object" /> 是否与当前设计器视图相同。</summary>
      <returns>如果 <paramref name="obj" /> 与当前 <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> 相同，则为 true；否则为 false。</returns>
      <param name="obj">要与当前 <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> 进行比较的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerView.GetHashCode">
      <summary>用作 <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> 的哈希函数，它适合在哈希算法和类似于哈希表的数据结构中使用。</summary>
      <returns>当前 <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> 的哈希代码。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerView.Image">
      <summary>获取与设计器视图关联的图像。</summary>
      <returns>与 <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> 关联的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerView.OnActivate">
      <summary>当激活视图时，向设计器发出通知。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.DesignerView.OnDeactivate">
      <summary>当停用视图时，向设计器发出通知。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerView.Text">
      <summary>获取设计器视图的名称。</summary>
      <returns>包含 <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> 的名称的字符串。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerView.UserData">
      <summary>获取与设计器视图关联的用户数据的字典。</summary>
      <returns>一个 <see cref="T:System.Collections.IDictionary" />，其中包含与 <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> 关联的用户数据。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.DesignerView.ViewId">
      <summary>获取与设计器视图关联的标识符。</summary>
      <returns>一个整数，其中包含 <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> 的标识符。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner">
      <summary>提供可自定义的活动设计器图面，使用户可以在工作流设计图面上直观地进行修改。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.AccessibilityObject">
      <summary>获取一个 <see cref="T:System.Windows.Forms.AccessibleObject" />，辅助功能应用程序使用该对象为残障用户调整应用程序 UI。</summary>
      <returns>与该控件关联的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.AddConnector(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)">
      <summary>将连接器添加到 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />。</summary>
      <returns>已添加到 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 中的 <see cref="T:System.Workflow.ComponentModel.Design.Connector" />。</returns>
      <param name="source">要开始绘制连接器的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 位置。</param>
      <param name="target">要完成连接器绘制的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> 或 <paramref name="target" /> 包含一个 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 或 <paramref name="target" /> 的 <see cref="P:System.Workflow.ComponentModel.Design.ConnectionPoint.AssociatedDesigner" /> 属性包含一个 null 引用 (Nothing)。</exception>
      <exception cref="T:System.InvalidOperationException">当前 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 不是要添加的连接器的容器。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.AutoSize">
      <summary>获取或设置一个值，该值指示当用户调整设计器的子设计器大小时是否自动调整 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的大小。</summary>
      <returns>如果自动调整 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的大小，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.AutoSizeMargin">
      <summary>获取或设置当自动调整 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的大小时在子设计器周围呈现的边距大小。</summary>
      <returns>一个 <see cref="T:System.Drawing.Size" />，表示在 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的子设计器周围呈现的边距大小。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.AutoSizeMode">
      <summary>获取或设置 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的 <see cref="T:System.Windows.Forms.AutoSizeMode" /> 设置。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的 <see cref="T:System.Windows.Forms.AutoSizeMode" />。 默认设置为 <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.BringToFront(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>将指定的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 置于 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的 Z 顺序的顶层。</summary>
      <param name="containedDesigner">置于 Z 顺序顶层的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="containedDesigner" /> 包含一个 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">在 <see cref="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners" /> 集合中找不到 <paramref name="containedDesigner" />。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.CanConnectContainedDesigners(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)">
      <summary>返回一个值，该值指示 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 能否在源子活动设计器上的指定连接点和目标子活动设计器上的指定连接点之间创建连接。</summary>
      <returns>如果 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 可以在源和目标活动设计器之间绘制连接器，则为 true；否则为 false。</returns>
      <param name="source">要在源活动设计器上选中的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />。</param>
      <param name="target">要在目标活动设计器上选中的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.CanExpandCollapse">
      <summary>获取一个值，该值指示是否可以在工作流设计图面上折叠 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />。</summary>
      <returns>如果可以折叠 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.CanResizeContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>返回一个值，该值指示用户能否在 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 中直观地调整指定子活动设计器的大小。</summary>
      <returns>如果用户可以直观地调整指定活动设计器的大小，则为 true；否则为 false。</returns>
      <param name="containedDesigner">要检查的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorAdded">
      <summary>当向 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 添加 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 时发生。</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorChanged">
      <summary>在用户更改与 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 所显示的 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 相关联的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 位置时发生。</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorRemoved">
      <summary>当用户从 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 中移除连接器时发生。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.Connectors">
      <summary>获取与 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 关联的连接器的只读集合。</summary>
      <returns>一个只读集合，其中包含与 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 关联的所有 <see cref="T:System.Workflow.ComponentModel.Design.Connector" /> 对象。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.CreateConnector(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)">
      <summary>在两个指定连接点之间创建连接器。</summary>
      <returns>所创建的 <see cref="T:System.Workflow.ComponentModel.Design.Connector" />。</returns>
      <param name="source">要开始绘制连接器的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 位置。</param>
      <param name="target">要完成连接器绘制的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 位置。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">如果正在释放设计器，则为 true；如果正在终止设计器，则为 false。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.EnableUserDrawnConnectors">
      <summary>获取或设置一个值，该值指示用户是否能够在任意形式的活动设计器图面上拖动和绘制连接器。</summary>
      <returns>如果用户可以在任意形式的活动设计器图面上拖动和绘制连接器，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.EnableVisualResizing">
      <summary>获取一个值，该值指示能否在工作流设计图面上直观地调整 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的大小。</summary>
      <returns>如果可以直观地调整 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的大小，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.FirstSelectableObject">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的导航顺序中的第一个可选择对象。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的导航顺序中的第一个可选择对象。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)">
      <summary>返回在当前 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的导航顺序中位于指定对象后面的第一个可选择对象。</summary>
      <returns>导航顺序中位于 <paramref name="obj" /> 参数后面的第一个可选择 <see cref="T:System.Object" />。</returns>
      <param name="current">导航顺序中的当前 <see cref="T:System.Object" />。</param>
      <param name="navigate">用于确定设计器的导航顺序的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerNavigationDirection" /> 枚举值。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.Glyphs">
      <summary>获取在 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 上显示的标志符号的集合。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" />，其中包含在 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 上显示的标志符号。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.HitTest(System.Drawing.Point)">
      <summary>返回有关工作流设计图面上指定坐标处的 FreeformActivityDesigner 的信息。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />，其中包含有关指定坐标处的 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的信息</returns>
      <param name="point">一个 <see cref="T:System.Drawing.Point" />，其中包含工作流设计图面上要从中收集信息的坐标。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)">
      <summary>使用指定的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />。</summary>
      <param name="activity">用于初始化 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.InsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>将活动的指定只读集合添加到工作流设计图面上指定位置处的 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />。</summary>
      <param name="insertLocation">指定活动添加位置的 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />。</param>
      <param name="activitiesToInsert">The <see cref="T:System.Workflow.ComponentModel.Activity" /> read-only collection that contains the activities to add to the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.LastSelectableObject">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的导航顺序中的最后一个可选择对象。</summary>
      <returns>一个 <see cref="T:System.Object" />，该对象是设计器导航顺序中的最后一个可选择对象。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.Location">
      <summary>获取或设置以逻辑坐标表示的 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的位置。</summary>
      <returns>一个 Point，用于以逻辑坐标表示 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的位置。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.MinimumSize">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的最小大小设置。</summary>
      <returns>一个 <see cref="T:System.Drawing.Size" />，表示 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的可能的最小大小。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.MoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>将活动移动到设计图面中的指定位置。</summary>
      <param name="moveLocation">要将活动移动到的位置。</param>
      <param name="activitiesToMove">包含要移动到 <paramref name="moveLocation" /> 的活动的集合。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.MoveContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Drawing.Point)">
      <summary>将指定的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 移动到指定的位置。</summary>
      <param name="containedDesigner">要移动的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <param name="newLocation">表示设计器新位置的 <see cref="T:System.Drawing.Point" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="containedDesigner" /> 包含一个 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">在 <see cref="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners" /> 集合中找不到 <paramref name="containedDesigner" />。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnConnectorAdded(System.Workflow.ComponentModel.Design.ConnectorEventArgs)">
      <summary>引发 <see cref="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorAdded" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectorEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnConnectorChanged(System.Workflow.ComponentModel.Design.ConnectorEventArgs)">
      <summary>引发 <see cref="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorChanged" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectorEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnConnectorRemoved(System.Workflow.ComponentModel.Design.ConnectorEventArgs)">
      <summary>引发 <see cref="E:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ConnectorRemoved" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectorEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnContainedActivitiesChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <summary>在 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的 Activities 集合中添加或删除子活动时，将向该对象发出通知。</summary>
      <param name="listChangeArgs">包含有关添加或删除的活动的信息的 <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnContainedDesignersConnected(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)">
      <summary>在 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 包含的两个活动设计器之间建立连接后，将向它发出通知。</summary>
      <param name="source">要开始绘制连接器的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 位置。</param>
      <param name="target">要完成连接器绘制的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 位置。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnDragDrop(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>在 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 设计图面的边界内完成拖放操作时，将向该对象发出通知。</summary>
      <param name="e">定义操作事件参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnDragOver(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>当执行拖放操作并且用户的鼠标光标位于设计器边界内时，向 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 发出通知。</summary>
      <param name="e">定义操作事件参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>在设计器有键盘焦点的情况下按下键时发生。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Performs layout tasks to position visual cues and child designers on the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" />.</summary>
      <param name="e">定义操作事件参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> when the size of the visual cues on the designers displayed by the <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> have changed.</summary>
      <returns>表示工作流设计图面上 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 的新大小的 <see cref="T:System.Drawing.Size" />。</returns>
      <param name="e">定义操作事件参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnResizing(System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs)">
      <summary>当用户在设计时直观地调整其大小时，向 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 发出通知。</summary>
      <param name="e">定义操作事件参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerResizeEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)">
      <summary>向 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 通知它关联的主题已发生更改。</summary>
      <param name="newTheme">包含更新后的主题属性设置的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.RemoveConnector(System.Workflow.ComponentModel.Design.Connector)">
      <summary>从 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 中移除指定的 <see cref="T:System.Workflow.ComponentModel.Design.Connector" />。</summary>
      <param name="connector">要移除的 <see cref="T:System.Workflow.ComponentModel.Design.Connector" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="connector" /> 包含一个 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ResizeContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Drawing.Size)">
      <summary>将指定的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 调整为指定的尺寸。</summary>
      <param name="containedDesigner">要调整大小的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <param name="newSize">表示设计器的新尺寸的 <see cref="T:System.Drawing.Size" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="containedDesigner" /> 包含一个 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">在 <see cref="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners" /> 集合中找不到 <paramref name="containedDesigner" />。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.SendToBack(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>将指定的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 置于 FreeformActivityDesigner 的 Z 顺序的底层。</summary>
      <param name="containedDesigner">设置为 Z 顺序的底层的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="containedDesigner" /> 包含一个 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">在 <see cref="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners" /> 集合中找不到 <paramref name="containedDesigner" />。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.FreeformActivityDesigner.ShowConnectorsInForeground">
      <summary>获取一个值，该值指示 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 是否在其设计图面的前景中绘制连接器。</summary>
      <returns>如果 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesigner" /> 在其设计图面的前景中绘制连接器，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.FreeformActivityDesignerLayoutSerializer">
      <summary>序列化任意形式活动设计器特定布局信息。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesignerLayoutSerializer.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.FreeformActivityDesignerLayoutSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.FreeformActivityDesignerLayoutSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>检索有关与指定对象关联的所有属性的信息。</summary>
      <returns>一个 <see cref="T:System.Reflection.PropertyInfo" /> 数组，其中包含有关与 <paramref name="obj" /> 关联的属性的信息。</returns>
      <param name="serializationManager">管理序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">要搜索属性的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.HitTestInfo">
      <summary>包含有关指定坐标处的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 一部分的信息。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.HitTestInfo.#ctor(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Workflow.ComponentModel.Design.HitTestLocations)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> 对象的实例。</summary>
      <param name="designer">关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <param name="location">关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 上的被单击位置。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.HitTestInfo.AssociatedDesigner">
      <summary>获取与 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> 类关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</summary>
      <returns>与 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> 类关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.HitTestInfo.Bounds">
      <summary>返回点击区域的边界。</summary>
      <returns>一个环绕与 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> 对象关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 的矩形；如果 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> 对象不与设计器关联，则为空矩形。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.HitTestInfo.HitLocation">
      <summary>包含有关发生了点击的位置的信息。</summary>
      <returns>描述点击区域的 <see cref="T:System.Workflow.ComponentModel.Design.HitTestLocations" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.HitTestInfo.MapToIndex">
      <summary>返回被点击设计器的索引。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> 所点击的设计器的索引。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.HitTestInfo.Nowhere">
      <summary>获取一个空 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />。</summary>
      <returns>一个空 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.HitTestInfo.SelectableObject">
      <summary>获取与点击区域关联的可选择对象。</summary>
      <returns>一个与点击区域关联的可选择对象；如果设计器不与 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> 关联，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.HitTestInfo.UserData">
      <summary>获取与 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> 关联的用户数据。</summary>
      <returns>用户数据的新字典，或对现有用户数据的引用。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.HitTestLocations">
      <summary>描述包含传递到 <see cref="M:System.Workflow.ComponentModel.Design.ActivityDesigner.HitTest(System.Drawing.Point)" /> 方法的点的设计器区域。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.ActionArea">
      <summary>指示点击了展开按钮包含的区域。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.Bottom">
      <summary>指示点击了设计器的底部。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.Connector">
      <summary>指示点击了设计器上的连接器。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.Designer">
      <summary>指示点击了设计器的任何部分。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.Left">
      <summary>指示点击了设计器的左侧。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.None">
      <summary>指示未点击设计器的任何部分。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.Right">
      <summary>指示点击了设计器的右侧。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.HitTestLocations.Top">
      <summary>指示点击了设计器的顶部。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IDesignerGlyphProvider">
      <summary>定义标志符号提供程序类用于生成在活动设计器上显示的标志符号数组的方法。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IDesignerGlyphProvider.GetGlyphs(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>返回与指定活动设计器关联的标志符号的数组。</summary>
      <returns>要在活动设计器上呈现的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> 对象的数组。</returns>
      <param name="activityDesigner">要检索其标志符号的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 对象。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IDesignerGlyphProviderService">
      <summary>允许活动设计器开发人员将自定义标志符号提供程序添加到活动设计器。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IDesignerGlyphProviderService.AddGlyphProvider(System.Workflow.ComponentModel.Design.IDesignerGlyphProvider)">
      <summary>将实现 <see cref="T:System.Workflow.ComponentModel.Design.IDesignerGlyphProvider" /> 接口的类添加到活动设计器使用的标志符号提供程序的列表。</summary>
      <param name="glyphProvider">要相加的 <see cref="T:System.Workflow.ComponentModel.Design.IDesignerGlyphProvider" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.IDesignerGlyphProviderService.GlyphProviders">
      <summary>获取设计器标志符号提供程序的泛型只读集合。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.IDesignerGlyphProvider" /> 只读集合。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IDesignerGlyphProviderService.RemoveGlyphProvider(System.Workflow.ComponentModel.Design.IDesignerGlyphProvider)">
      <summary>将实现 <see cref="T:System.Workflow.ComponentModel.Design.IDesignerGlyphProvider" /> 接口的类从活动设计器使用的标志符号提供程序列表中移除。</summary>
      <param name="glyphProvider">要移除的 <see cref="T:System.Workflow.ComponentModel.Design.IDesignerGlyphProvider" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IDesignerVerbProvider">
      <summary>定义 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 返回其设计器谓词的方式。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IDesignerVerbProvider.GetVerbs(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>返回与指定 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" /> 集合。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection" />，其中包含与 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 关联的谓词。</returns>
      <param name="activityDesigner">要返回其活动谓词集合的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IDesignerVerbProviderService">
      <summary>允许活动设计器开发人员将自定义设计器谓词提供程序添加到活动设计器。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IDesignerVerbProviderService.AddVerbProvider(System.Workflow.ComponentModel.Design.IDesignerVerbProvider)">
      <summary>将实现 <see cref="T:System.Workflow.ComponentModel.Design.IDesignerVerbProvider" /> 接口的类添加到 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 使用的谓词提供程序的列表。</summary>
      <param name="verbProvider">要相加的 <see cref="T:System.Workflow.ComponentModel.Design.IDesignerVerbProvider" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IDesignerVerbProviderService.RemoveVerbProvider(System.Workflow.ComponentModel.Design.IDesignerVerbProvider)">
      <summary>将实现 <see cref="T:System.Workflow.ComponentModel.Design.IDesignerVerbProvider" /> 接口的类从 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 使用的谓词提供程序的列表中移除。</summary>
      <param name="verbProvider">要移除的 <see cref="T:System.Workflow.ComponentModel.Design.IDesignerVerbProvider" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.IDesignerVerbProviderService.VerbProviders">
      <summary>获取一个 <see cref="T:System.Workflow.ComponentModel.Design.IDesignerVerbProvider" /> 只读集合。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.IDesignerVerbProvider" /> 只读集合。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IExtendedUIService">
      <summary>定义工作流设计器宿主可以调用以执行高级 UI 操作的方法。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.AddAssemblyReference(System.Reflection.AssemblyName)">
      <summary>指示工作流设计器宿主为当前项目添加程序集引用以进行访问。</summary>
      <param name="assemblyName">一个 <see cref="T:System.Reflection.AssemblyName" />，用于标识要添加的程序集。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.AddDesignerActions(System.Workflow.ComponentModel.Design.DesignerAction[])">
      <summary>将一组设计器操作添加到工作流设计器宿主的可用用户操作列表中。</summary>
      <param name="actions">一个包含要添加的操作的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> 数组。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.AddWebReference(System.Uri@,System.Type@)">
      <summary>将对 Web 资源的引用添加到工作流设计器的项目中。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.DialogResult" /> 值，该值指示“添加 Web 引用”对话框的返回值。</returns>
      <param name="url">当此方法返回时，该值包含一个 <see cref="T:System.Uri" />，表示要为项目提供其访问权限的 Web 资源的通用资源定位符 (URL)。 该参数未经初始化即被传递。</param>
      <param name="proxyClass">当此方法返回时，该值包含与 Web 资源关联的代理类的 <see cref="T:System.Type" />。 该参数未经初始化即被传递。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.GetProxyClassForUrl(System.Uri)">
      <summary>返回与指定的通用资源定位符 (URL) 关联的代理类的类型。</summary>
      <returns>代理类的 <see cref="T:System.Type" />。</returns>
      <param name="url">一个表示 URL 的 <see cref="T:System.Uri" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.GetSelectedPropertyContext">
      <summary>提供有关当前组件的上下文信息。</summary>
      <returns>返回属性上下文。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.GetUrlForProxyClass(System.Type)">
      <summary>返回与指定代理类关联的 Web 资源的通用资源定位符 (URL)。</summary>
      <returns>与代理类关联的 Web 资源的 URL。</returns>
      <param name="proxyClass">与代理类关联的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.GetXsdProjectItemsInfo">
      <summary>返回为已添加到工作流项目的 XSD 架构生成的类型。</summary>
      <returns>为已添加到工作流项目的 XSD 架构生成的类型。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.NavigateToProperty(System.String)">
      <summary>在工作流设计器宿主的属性浏览器中定位指定的属性。</summary>
      <returns>如果成功定位到该属性，则为 true；否则，为 false。</returns>
      <param name="propName">要定位的属性的名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.RemoveDesignerActions">
      <summary>删除与工作流设计器宿主关联的任务列表中的所有设计器操作。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService.ShowToolsOptions">
      <summary>显示与工作流设计器宿主关联的工具选项。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IExtendedUIService2">
      <summary>定义工作流设计器宿主可以调用以决定环境设置的方法。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService2.GetReflectionAssembly(System.Reflection.AssemblyName)">
      <summary>返回在当前目标框架的反射上下文中加载的程序集。</summary>
      <returns>当前目标框架的反射上下文中加载的程序集。</returns>
      <param name="assemblyName">程序集名称。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService2.GetRuntimeType(System.Type)">
      <summary>返回指定反射类型的当前运行时类型。 反射类型取决于目标 .NET Framework 版本。</summary>
      <returns>当前的运行时类型。</returns>
      <param name="reflectionType">取决于目标 .NET Framework 版本的反射类型。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService2.GetTargetFrameworkVersion">
      <summary>返回当前项目的目标 .NET Framework 版本。</summary>
      <returns>当前项目的目标 .NET Framework 版本。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IExtendedUIService2.IsSupportedType(System.Type)">
      <summary>返回一个值，该值指示当前的目标 .NET Framework 版本中是否支持指定类型。</summary>
      <returns>如果当前的目标 .NET Framework 版本中支持指定的类型，则为 true；否则为 false。</returns>
      <param name="type">要检查的类型。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IIdentifierCreationService">
      <summary>提供一个用于创建在指定的活动范围内唯一地命名的标识符的机制。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IIdentifierCreationService.EnsureUniqueIdentifiers(System.Workflow.ComponentModel.CompositeActivity,System.Collections.ICollection)">
      <summary>提供一个用于确保添加到 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 中的活动都是唯一命名的活动的机制。</summary>
      <param name="parentActivity">将包含唯一命名的活动的 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />。</param>
      <param name="childActivities">一个活动集合，用于确保活动是唯一命名的。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IIdentifierCreationService.ValidateIdentifier(System.Workflow.ComponentModel.Activity,System.String)">
      <summary>提供一个用于测试标识符在 <see cref="T:System.Workflow.ComponentModel.Activity" /> 中是否唯一的机制。</summary>
      <param name="activity">在测试标识符时所针对的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <param name="identifier">要测试其有效性的标识符。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IMemberCreationService">
      <summary>定义用于在设计时动态创建、更新和移除某一类型的代码元素的方法。 还提供了用于在设计时显示代码的方法。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateEvent(System.String,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean)">
      <summary>使用指定的事件名称、事件类型和属性在指定类上创建一个事件。</summary>
      <param name="className">一个字符串，其中包含事件所要添加到的类名称。</param>
      <param name="eventName">定义事件的名称的字符串。</param>
      <param name="eventType">分配给事件的 <see cref="T:System.Type" />。</param>
      <param name="attributes">一个 <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> 数组，其中包含有关要分配给事件的所有属性的信息。</param>
      <param name="emitDependencyProperty">为 true 则发出与事件关联的任何依赖项属性；否则为 false。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateField(System.String,System.String,System.Type,System.Type[],System.CodeDom.MemberAttributes,System.CodeDom.CodeSnippetExpression,System.Boolean)">
      <summary>在指定类上使用指定的字段名、字段类型、参数类型、属性和文本初始化表达式创建一个字段。</summary>
      <param name="className">一个字符串，用于定义类的名称以添加字段。</param>
      <param name="fieldName">一个字符串，用于定义字段的名称。</param>
      <param name="fieldType">新字段的 <see cref="T:System.Type" />。</param>
      <param name="genericParameterTypes">与字段关联的任何参数的 <see cref="T:System.Type" /> 数组。</param>
      <param name="attributes">一个 <see cref="T:System.CodeDom.MemberAttributes" />，用于定义字段的成员特性标识符。</param>
      <param name="initializationExpression">一个 <see cref="T:System.CodeDom.CodeSnippetExpression" />，其中包含字段的文本表达式。</param>
      <param name="overwriteExisting">为 true 则在创建新字段时删除 <paramref name="className" /> 上的任何现有字段；否则为 false。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateProperty(System.String,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean,System.Boolean,System.Type,System.Boolean)">
      <summary>在指定类上使用指定的属性名、属性类型和特性创建一个属性。</summary>
      <param name="className">一个字符串，用于定义类的名称以添加字段。</param>
      <param name="propertyName">一个字符串，用于定义字段的名称。</param>
      <param name="propertyType">新属性的 <see cref="T:System.Type" />。</param>
      <param name="attributes">一个 <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> 数组，其中包含有关要分配给属性的所有特性的信息。</param>
      <param name="emitDependencyProperty">为 true 则发出任何与属性关联的依赖项属性；否则为 false。</param>
      <param name="isMetaProperty">为 true 则作为元属性来创建属性；否则为 false。</param>
      <param name="isAttached">为 true 则指示发出的依赖项属性的 <see cref="P:System.Workflow.ComponentModel.DependencyProperty.IsAttached" /> 属性设置为 true；否则为 false。</param>
      <param name="ownerType">声明依赖项属性的 <see cref="T:System.Type" />。</param>
      <param name="isReadOnly">为 true 则创建的属性作为只读属性；为 false 则创建的属性作为读写属性。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.RemoveEvent(System.String,System.String,System.Type)">
      <summary>从指定类中移除指定事件。</summary>
      <param name="className">一个字符串，其中包含要从中移除事件的类的名称。</param>
      <param name="eventName">一个字符串，其中包含要移除的事件的名称。</param>
      <param name="eventType">与要移除的事件关联的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.RemoveProperty(System.String,System.String,System.Type)">
      <summary>从指定类中移除指定属性。</summary>
      <param name="className">一个字符串，其中包含要从中移除属性的类的名称。</param>
      <param name="propertyName">一个字符串，其中包含要移除的属性的名称。</param>
      <param name="propertyType">要移除的属性的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.ShowCode">
      <summary>显示工作流设计图面上的新成员的代码。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.ShowCode(System.Workflow.ComponentModel.Activity,System.String,System.Type)">
      <summary>使用指定的 <see cref="T:System.Workflow.ComponentModel.Activity" />、指定的方法和指定的委托类型显示工作流设计图面上的新成员的代码。</summary>
      <param name="activity">与要显示的代码关联的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <param name="methodName">要显示的方法的名称。</param>
      <param name="delegateType">与要显示的方法关联的委托的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateBaseType(System.String,System.Type)">
      <summary>更新与指定类关联的基类型。</summary>
      <param name="className">一个字符串，其中包含要用新的基类型更新的类的名称。</param>
      <param name="baseType">将作为类的新基类型的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateEvent(System.String,System.String,System.Type,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean)">
      <summary>将新名称和类型设置为指定类上的现有事件。</summary>
      <param name="className">一个包含类名称的字符串，该类中包含要更新的事件。</param>
      <param name="oldEventName">一个字符串，其中包含现有事件的名称。</param>
      <param name="oldEventType">与现有事件关联的 <see cref="T:System.Type" />。</param>
      <param name="newEventName">一个字符串，其中包含已更新的事件的新名称。</param>
      <param name="newEventType">要与已更新的事件关联的 <see cref="T:System.Type" />。</param>
      <param name="attributes">一个 <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> 数组，其中包含有关要分配给已更新的事件的所有属性的信息。</param>
      <param name="emitDependencyProperty">为 true 则更新事件以发出依赖项属性；否则为 false。</param>
      <param name="isMetaProperty">为 true 则将事件设置为元属性；否则为 false。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateProperty(System.String,System.String,System.Type,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean)">
      <summary>将新名称和类型设置为指定类上的属性。</summary>
      <param name="className">一个字符串，其中包含要更新的属性所在的类的名称。</param>
      <param name="oldPropertyName">一个字符串，其中包含属性的现有名称。</param>
      <param name="oldPropertyType">与现有属性关联的 <see cref="T:System.Type" />。</param>
      <param name="newPropertyName">一个字符串，其中包含属性的新名称。</param>
      <param name="newPropertyType">要与属性的更新版本关联的 <see cref="T:System.Type" />。</param>
      <param name="attributes">一个 <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> 数组，其中包含有关要分配给已更新的属性的所有特性的信息。</param>
      <param name="emitDependencyProperty">为 true 则更新属性以发出依赖项属性；否则为 false。</param>
      <param name="isMetaProperty">为 true 则将属性设置为元属性；否则为 false。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateTypeName(System.String,System.String)">
      <summary>更新指定类的名称。</summary>
      <param name="oldClassName">一个字符串，其中包含类的现有名称。</param>
      <param name="newClassName">一个字符串，其中包含要分配给类的新名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IPersistUIState">
      <summary>定义工作流设计器和活动设计器用于将 UI 状态信息保存到二进制流和从二进制流还原 UI 状态信息的方法。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IPersistUIState.LoadViewState(System.IO.BinaryReader)">
      <summary>从二进制流还原设计器的 UI 状态。</summary>
      <param name="reader">从中还原设计器状态的 <see cref="T:System.IO.BinaryReader" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IPersistUIState.SaveViewState(System.IO.BinaryWriter)">
      <summary>将设计器的 UI 状态存储到二进制流。</summary>
      <param name="writer">用于存储状态的 <see cref="T:System.IO.BinaryWriter" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider">
      <summary>提供类用于对显示在类浏览器对话框（由工作流设计器显示）中的类型进行筛选的成员。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)">
      <summary>返回一个值，该值指示能否筛选指定的类型。</summary>
      <returns>如果可以筛选指定的类型，则为 true；否则为 false。</returns>
      <param name="type">要选中进行筛选的 <see cref="T:System.Type" />。</param>
      <param name="throwOnError">为 true 则在处理 <see cref="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)" /> 时引发异常；否则为 false。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription">
      <summary>获取要在类浏览器对话框中显示的筛选器的说明。</summary>
      <returns>包含筛选器说明的字符串值。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ITypeProviderCreator">
      <summary>定义一组方法，类可以使用这些方法为活动或工作流设计器创建类型提供程序。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ITypeProviderCreator.GetLocalAssembly(System.Object)">
      <summary>返回与指定对象关联的本地程序集。</summary>
      <returns>与 <paramref name="obj" /> 关联的 <see cref="T:System.Reflection.Assembly" />。</returns>
      <param name="obj">要为其获取本地程序集的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ITypeProviderCreator.GetTransientAssembly(System.Reflection.AssemblyName)">
      <summary>返回与指定程序集名称关联的瞬态程序集。</summary>
      <returns>与 <paramref name="assemblyName" /> 关联的瞬态 <see cref="T:System.Reflection.Assembly" />。</returns>
      <param name="assemblyName">要为其检索瞬态程序集的 <see cref="T:System.Reflection.AssemblyName" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ITypeProviderCreator.GetTypeProvider(System.Object)">
      <summary>返回与指定对象关联的类型提供程序。</summary>
      <returns>要为 <paramref name="obj" /> 执行类型提供程序任务的 <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" />。</returns>
      <param name="obj">要为其返回类型提供程序的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ITypeProviderCreator.GetTypeResolutionService(System.Object)">
      <summary>返回可按指定对象的名称检索程序集或类型的服务。</summary>
      <returns>要用于检索程序集或类型的 <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />。</returns>
      <param name="obj">要为其检索类型解析服务的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner">
      <summary>定义发出调用的设计器和消息筛选器属性，并定义方法来确定所有工作流根设计器是否都支持某个活动。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner">
      <summary>获取或设置请求了要初始化的工作流根设计器的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />。</summary>
      <returns>请求了要初始化的工作流根设计器的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(System.Type)">
      <summary>返回一个值，该值指示当前工作流设计器是否支持指定的类型。</summary>
      <returns>如果当前工作流设计器支持 <paramref name="type" />，则为 true；否则为 false。</returns>
      <param name="activityType">要检查在设计器上是否受支持的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters">
      <summary>获取与工作流根设计器关联的任何消息筛选器。</summary>
      <returns>一个只读的 WorkflowDesignerMessageFilter 集合，其中包含与工作流根设计器关联的任何消息筛选器。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence">
      <summary>获取一个值，该值指示实际的工作流根设计器是否支持布局持久性。</summary>
      <returns>如果设计器支持布局持久性，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.LineAnchor">
      <summary>确定工作流设计图面上的连接器点的形状。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.Arrow">
      <summary>连接器点是一个箭头。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.ArrowAnchor">
      <summary>连接器点是一个箭头锚。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.Diamond">
      <summary>连接器点是一个菱形。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.DiamondAnchor">
      <summary>连接器点是一个菱形锚。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.None">
      <summary>不存在连接点。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.Rectangle">
      <summary>连接点是一个矩形。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.RectangleAnchor">
      <summary>连接点是一个矩形锚。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.Round">
      <summary>连接器点是一个圆形。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.RoundAnchor">
      <summary>连接器点是一个圆形锚。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.RoundedRectangle">
      <summary>连接点是一个圆角矩形。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.LineAnchor.RoundedRectangleAnchor">
      <summary>连接点是一个圆角矩形锚。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.LockedActivityGlyph">
      <summary>当无法修改与设计器关联的活动时，提供 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 的标志符号以便显示。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.LockedActivityGlyph.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.LockedActivityGlyph" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.LockedActivityGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>返回指定 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 上的标志符号的边界。</summary>
      <returns>表示标志符号边界的 <see cref="T:System.Drawing.Rectangle" />。</returns>
      <param name="designer">与标志符号关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <param name="activated">为 true 则指示在活动设计器图面上显示标志符号；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.LockedActivityGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>执行在活动设计器图面上呈现标志符号时所需的任何任务。</summary>
      <param name="graphics">用于执行填充和绘制任务的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="activated">为 true 则指示在设计图面上显示标志符号；否则为 false。</param>
      <param name="ambientTheme">要用于访问环境属性设置的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />。</param>
      <param name="designer">从中获取有关用户操作的信息的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.LockedActivityGlyph.Priority">
      <summary>获取活动设计图面上的标志符号的优先级设置。</summary>
      <returns>An integer value that represents the priority setting for the <see cref="T:System.Workflow.ComponentModel.Design.LockedActivityGlyph" /> on the activity design surface.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner">
      <summary>为在工作流设计图面上显示平行垂直布局的所有活动设计器提供方法和属性。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.CanMoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>返回一个值，该值指示能否移动与 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 关联的活动的子活动。</summary>
      <returns>如果可以在父活动中移动活动，则为 true；否则为 false。</returns>
      <param name="moveLocation">描述要将活动移动到的位置的 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />。</param>
      <param name="activitiesToMove">包含要移动的活动的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 只读集合。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.CanRemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>返回一个值，该值指示能否删除与 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 关联的活动的子活动。</summary>
      <returns>如果可以从父活动中删除活动，则为 true；否则为 false。</returns>
      <param name="activitiesToRemove">要移除的活动的只读集合。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.FirstSelectableObject">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 的导航顺序中的第一个可选择对象。</summary>
      <returns>一个 <see cref="T:System.Object" />，该对象是设计器导航顺序中的第一个可选择对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.GetDropTargets(System.Drawing.Point)">
      <summary>返回表示 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 中的有效放置位置的矩形数组。</summary>
      <returns>表示 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 中的有效放置位置的 <see cref="T:System.Drawing.Rectangle" /> 数组。</returns>
      <param name="dropPoint">用于定义放置目标的 X 坐标和 Y 坐标的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)">
      <summary>返回在当前 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 的导航顺序中位于指定对象后面的第一个可选择对象。</summary>
      <returns>位于指定对象后面的 <see cref="T:System.Object" />。</returns>
      <param name="obj">导航顺序中的当前 <see cref="T:System.Object" />。</param>
      <param name="direction">确定设计器的导航顺序的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerNavigationDirection" /> 枚举值。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.LastSelectableObject">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 的导航顺序中的最后一个可选择对象。</summary>
      <returns>一个 <see cref="T:System.Object" />，该对象是设计器导航顺序中的最后一个可选择对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.OnCreateNewBranch">
      <summary>指示用户已在与 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 关联的活动上创建了一个新的分支活动。</summary>
      <returns>作为与 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 关联的活动的新分支添加的 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>执行布局任务以在 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 上定位视觉提示和子设计器。</summary>
      <param name="e">包含布局参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>设置 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 中包含的设计器上的视觉提示大小。</summary>
      <returns>包含 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 的新大小设置的 <see cref="T:System.Drawing.Size" />。</returns>
      <param name="e">包含布局参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>在设计时绘制与 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 关联的活动的可视化表示形式。</summary>
      <param name="e">包含绘制参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ParallelActivityDesigner.Verbs">
      <summary>获取要与 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 关联的设计器谓词的集合。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection" />，其中包含要与 <see cref="T:System.Workflow.ComponentModel.Design.ParallelActivityDesigner" /> 关联的设计器谓词。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ReadOnlyActivityGlyph">
      <summary>为 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 提供一个标志符号，以便在与其关联的活动在设计时设置为只读时显示该标志符号。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ReadOnlyActivityGlyph.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ReadOnlyActivityGlyph" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ReadOnlyActivityGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>返回指定 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 上的标志符号的边界。</summary>
      <returns>表示标志符号边界的 <see cref="T:System.Drawing.Rectangle" />。</returns>
      <param name="designer">与标志符号关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <param name="activated">为 true 则指示在活动设计器图面上显示标志符号；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ReadOnlyActivityGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>执行在活动设计器图面上呈现标志符号时所需的任何任务。</summary>
      <param name="graphics">用于执行填充和绘制任务的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="activated">为 true 则指示在设计图面上显示标志符号；否则为 false。</param>
      <param name="ambientTheme">要用于访问环境属性设置的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />。</param>
      <param name="designer">从中获取有关用户操作的信息的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ReadOnlyActivityGlyph.Priority">
      <summary>获取活动设计器图面上的标志符号的优先级设置。</summary>
      <returns>一个整数值，表示活动设计器图面上的 <see cref="T:System.Workflow.ComponentModel.Design.ReadOnlyActivityGlyph" /> 的优先级设置。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.SelectionGlyph">
      <summary>在工作流设计图面上选择 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 时，为它所显示的所有标志符号类提供方法和属性。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SelectionGlyph.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.ComponentModel.Design.SelectionGlyph" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SelectionGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>返回指定 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 上的选择标志符号的边界。</summary>
      <returns>表示标志符号边界的 <see cref="T:System.Drawing.Rectangle" />。</returns>
      <param name="designer">与选择标志符号关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <param name="activated">为 true 则指示在活动设计器图面上显示选择标志符号；否则为 false。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SelectionGlyph.GetGrabHandles(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>返回表示选定标志符号的抓取手柄的矩形数组。</summary>
      <returns>要在选定标志符号上显示的抓取手柄的 <see cref="T:System.Drawing.Rectangle" /> 数组。</returns>
      <param name="designer">与选择标志符号关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SelectionGlyph.IsPrimarySelection">
      <summary>在派生类中重写时，将获取一个值，该值指示选择标志符号是否为设计图面上的所有选定标志符号的主选定标志符号。</summary>
      <returns>如果选择标志符号是活动设计器上的主选定标志符号，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SelectionGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>执行在活动设计器图面上呈现标志符号时所需的任何任务。</summary>
      <param name="graphics">用于执行填充和绘制任务的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="activated">为 true 则指示在设计图面上显示标志符号；否则为 false。</param>
      <param name="ambientTheme">要用于访问环境属性设置的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />。</param>
      <param name="designer">从中获取有关用户操作的信息的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SelectionGlyph.Priority">
      <summary>获取活动设计器上标志符号的视图优先级。</summary>
      <returns>一个整数，表示活动设计器上标志符号的视图优先级。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.SequenceDesigner">
      <summary>为 <see cref="T:System.Workflow.Activities.SequenceActivity" /> 和从其中派生的所有类提供设计时支持。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequenceDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.SequenceDesigner" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.SequenceDesignerAccessibleObject">
      <summary>实现一个辅助性对象，SequentialActivityDesigner 类可以使用该对象为残障用户调整设计器用户界面。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequenceDesignerAccessibleObject.#ctor(System.Workflow.ComponentModel.Design.SequentialActivityDesigner)">
      <summary>使用指定的 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Design.SequenceDesignerAccessibleObject" /> 类的新实例。</summary>
      <param name="activityDesigner">要应用于辅助性对象的 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequenceDesignerAccessibleObject.GetChild(System.Int32)">
      <summary>检索对应于指定索引位置的辅助性子级。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" />，表示与指定索引对应的辅助性子级。</returns>
      <param name="index">辅助性子级的从零开始的索引。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequenceDesignerAccessibleObject.GetChildCount">
      <summary>检索属于辅助性对象的子级的个数。</summary>
      <returns>一个整数，表示属于辅助性对象的子级的个数。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequenceDesignerAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
      <summary>定位到另一个辅助性对象。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.AccessibleObject" />，表示指定的 <see cref="T:System.Windows.Forms.AccessibleNavigation" /> 值。</returns>
      <param name="navdir">
        <see cref="T:System.Windows.Forms.AccessibleNavigation" /> 值之一。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner">
      <summary>为在工作流设计图面上具有顺序垂直布局的所有活动设计器定义属性和方法。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.AccessibilityObject">
      <summary>获取一个允许 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 为残障用户调整其 UI 的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</summary>
      <returns>要与设计器关联的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.CanExpandCollapse">
      <summary>获取一个值，该值指示是否可以在工作流设计器图面上展开或折叠 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" />。</summary>
      <returns>如果可以在工作流设计图面上展开或折叠该设计器，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.Expanded">
      <summary>获取或设置一个值，该值指示设计器是否在工作流设计器图面上展开。</summary>
      <returns>如果 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 在工作流设计器图面上展开，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.FirstSelectableObject">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 的导航顺序中的第一个可选择对象。</summary>
      <returns>一个 <see cref="T:System.Object" />，该对象是设计器导航顺序中的第一个可选择对象。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.GetConnectors">
      <summary>返回限定了活动设计器的连接器边界的矩形的数组。</summary>
      <returns>限定连接器边界的 <see cref="T:System.Drawing.Rectangle" /> 数组。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.GetDropTargets(System.Drawing.Point)">
      <summary>返回表示 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 中的有效放置位置的矩形数组。</summary>
      <returns>表示 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 中的有效放置位置的 <see cref="T:System.Drawing.Rectangle" /> 数组。</returns>
      <param name="dropPoint">用于定义放置目标的 X 坐标和 Y 坐标的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)">
      <summary>返回在当前 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 的导航顺序中位于指定对象后面的第一个可选择对象。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 的导航顺序中位于 <paramref name="obj" /> 参数后面的第一个可选择 <see cref="T:System.Object" />。</returns>
      <param name="obj">导航顺序中的当前对象。</param>
      <param name="direction">确定设计器的导航顺序的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerNavigationDirection" /> 枚举值。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.Glyphs">
      <summary>获取与 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 关联的标志符号的只读集合。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.DesignerGlyph" /> 只读集合，其中包含要在 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 上显示的所有标志符号。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.HelpText">
      <summary>获取或设置当 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 不包含任何其他活动设计器时显示的文本。</summary>
      <returns>一个字符串，其中包含要在设计器图面上显示的文本。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.HelpTextRectangle">
      <summary>获取用作由 <see cref="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.HelpText" /> 属性显示的文本的边界的矩形。</summary>
      <returns>用作由 <see cref="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.HelpText" /> 属性显示的文本的边界 <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.HelpTextSize">
      <summary>获取当 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 不包含子活动设计器时其中显示的文本的高度和宽度。</summary>
      <returns>定义当 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 不包含子活动设计器时所显示的文本的高度和宽度的 <see cref="T:System.Drawing.Size" />。 默认情况下，<see cref="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.HelpTextSize" /> 设置为新初始化的 <see cref="T:System.Drawing.Size" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.HitTest(System.Drawing.Point)">
      <summary>返回有关工作流设计图面上指定点处的 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 的信息。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />，包含有关 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 的信息。</returns>
      <param name="point">工作流设计图面上要从该处收集信息的 <see cref="T:System.Drawing.Point" /> 位置。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)">
      <summary>使用指定活动初始化设计器。</summary>
      <param name="activity">用于初始化 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.LastSelectableObject">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 的导航顺序中的最后一个可选择对象。</summary>
      <returns>一个 <see cref="T:System.Object" />，该对象是设计器导航顺序中的最后一个可选择对象。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>执行布局任务以在 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 上定位视觉提示和子设计器。</summary>
      <param name="e">包含布局参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>设置 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 中包含的设计器上的视觉提示大小。</summary>
      <returns>包含 <see cref="T:System.Workflow.ComponentModel.Design.SequentialActivityDesigner" /> 的新大小设置的 <see cref="T:System.Drawing.Size" />。</returns>
      <param name="e">包含布局参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>在设计时绘制活动的可视表示形式。</summary>
      <param name="e">包含绘制参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter">
      <summary>表示与 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> 关联的页眉或页脚。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.#ctor(System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner,System.Boolean)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> 类的新实例。</summary>
      <param name="parent">SequentialWorkflowRootDesigner，用于</param>
      <param name="isHeader">为 true 则指示 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> 是页眉；为 false 则指示 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> 是页脚。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.AssociatedDesigner">
      <summary>获取要向其应用页眉或页脚的根设计器。</summary>
      <returns>要向其应用 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> 的 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.Bounds">
      <summary>获取工作流设计图面上的页眉或页脚的边框。</summary>
      <returns>环绕工作流设计图面上的 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> 的 <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.Image">
      <summary>获取或设置与页眉或页脚关联的图像。</summary>
      <returns>要与该 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> 关联的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.ImageRectangle">
      <summary>获取与页眉或页脚关联的图像的边框。</summary>
      <returns>
        <see cref="T:System.Drawing.Rectangle" />，用于为与 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> 关联的 <see cref="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.Image" /> 定义边界。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.OnLayout(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>当用户重新定位 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> 所包含的元素时，向其发出通知。</summary>
      <param name="e">一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>在设计图面上绘制与工作流根设计器关联的页眉或页脚。</summary>
      <param name="e">一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />，其中包含事件数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.Text">
      <summary>获取或设置与页眉或页脚关联的文本说明。</summary>
      <returns>包含与 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> 关联的文本说明的字符串。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.TextRectangle">
      <summary>获取与页眉或页脚关联的文本的边框。</summary>
      <returns>
        <see cref="T:System.Drawing.Rectangle" />，用于为与 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" /> 关联的 <see cref="P:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter.Text" /> 定义边界。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner">
      <summary>包含用于为工作流设计图面上的所有根设计器提供一致外观的属性和方法。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.CanBeParentedTo(System.Workflow.ComponentModel.Design.CompositeActivityDesigner)">
      <summary>返回一个值，该值指示 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 能否设置为与设计器关联的活动的父级。</summary>
      <returns>为 true 则允许与 <paramref name="parentActivityDesigner" /> 关联的活动成为与 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> 关联的活动的父级；否则为 false。</returns>
      <param name="parentActivityDesigner">要检查的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.CanExpandCollapse">
      <summary>获取一个值，该值指示能否展开和折叠设计器。</summary>
      <returns>如果可以展开和折叠 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" />，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Footer">
      <summary>获取与根设计器关联的页脚。</summary>
      <returns>表示与 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> 关联的页脚的 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.GetInnerConnections(System.Workflow.ComponentModel.Design.DesignerEdges)">
      <summary>返回表示设计器内部连接的点的只读集合。</summary>
      <returns>一个集合，其中包含用于可连接设计器的 <see cref="T:System.Workflow.ComponentModel.Design.ConnectionPoint" /> 对象。</returns>
      <param name="edges">要用于收集连接点集合的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerEdges" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Glyphs">
      <summary>获取在 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> 上显示的标志符号的集合。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" />，其中包含在 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> 上显示的标志符号。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Header">
      <summary>获取与根设计器关联的页眉。</summary>
      <returns>表示与 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> 关联的页眉的 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowHeaderFooter" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Image">
      <summary>获取与设计器关联的图像。</summary>
      <returns>要与设计器关联的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ImageRectangle">
      <summary>获取与设计器关联的图像的环绕边界值（以逻辑坐标表示）。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" />，包含为 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 显示的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.InvokingDesigner">
      <summary>获取或设置请求要初始化的顺序工作流根设计器的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />。</summary>
      <returns>请求了要初始化的工作流根设计器的 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.MinimumSize">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> 的最小大小。</summary>
      <returns>表示顺序工作流设计器的最小大小的 <see cref="T:System.Drawing.Size" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>设置 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> 中包含的设计器上的视觉提示大小。</summary>
      <returns>
        <see cref="T:System.Drawing.Size" />，它表示 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> 上的视觉提示的大小。</returns>
      <param name="e">包含布局参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)">
      <summary>绘制与 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> 关联的任何页眉和页脚。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.OnSmartTagVisibilityChanged(System.Boolean)">
      <summary>向设计器发出有关是在 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> 上显示还是隐藏智能标记的通知。</summary>
      <param name="visible">为 true 则在设计器图面上显示智能标记；否则为 false。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.ShowSmartTag">
      <summary>获取一个值，该值指示根设计器是否显示智能标记。</summary>
      <returns>如果 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> 显示智能标记，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.SmartTagRectangle">
      <summary>获取设计器图面上要在其中显示智能标记的矩形。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" />，用于定义要在其中显示智能标记的边界。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.Text">
      <summary>获取与设计器关联的说明。</summary>
      <returns>一个字符串，其中包含与设计器关联的说明。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner.TitleHeight">
      <summary>获取设计器标题区的高度。</summary>
      <returns>一个整数，表示 <see cref="T:System.Workflow.ComponentModel.Design.SequentialWorkflowRootDesigner" /> 的标题区的高度。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ShadowGlyph">
      <summary>提供由 <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> 类显示的投影。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ShadowGlyph.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.ShadowGlyph" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ShadowGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)">
      <summary>返回指定 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 上的标志符号的边界。</summary>
      <returns>表示标志符号边界的 <see cref="T:System.Drawing.Rectangle" />。</returns>
      <param name="designer">与标志符号关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
      <param name="activated">为 true 则指示在活动设计器图面上显示标志符号；否则为 false。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ShadowGlyph.Priority">
      <summary>获取活动设计器图面上的标志符号的优先级设置。</summary>
      <returns>一个整数值，表示活动设计器图面上 <see cref="T:System.Workflow.ComponentModel.Design.ShadowGlyph" /> 的优先级设置。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner">
      <summary>为包含结构化布局的复合活动设计器提供通用方法和属性。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.ActiveView">
      <summary>获取或设置 <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" />，其中包含有关由 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 显示的当前设计器视图的信息。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" />，其中包含有关由 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 显示的当前视图的信息。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>返回一个值，该值指示是否可以将指定的活动添加到工作流设计图面上指定位置的 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />。</summary>
      <returns>如果可以将指定活动插入工作流设计图面的指定位置，则为 true；否则为 false。</returns>
      <param name="insertLocation">包含试图插入活动的屏幕位置的 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />。</param>
      <param name="activitiesToInsert">包含要添加的活动的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 只读集合。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.CanRemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>返回一个值，该值指示是否可以从 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 中移除指定活动。</summary>
      <returns>如果可以移除指定活动，则为 true；否则为 false。</returns>
      <param name="activitiesToRemove">包含要移除的活动的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 只读集合。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.ContainedDesigners">
      <summary>获取一个泛型只读集合，其中包含作为 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 的子级的所有活动设计器。</summary>
      <returns>包含子设计器的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 只读集合。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.CurrentDropTarget">
      <summary>获取或设置由 <see cref="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.GetDropTargets(System.Drawing.Point)" /> 返回的放置目标数组中当前放置目标的索引。</summary>
      <returns>一个整数，表示设计器的当前放置目标的索引。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.DrawConnectors(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Point[],System.Workflow.ComponentModel.Design.LineAnchor,System.Workflow.ComponentModel.Design.LineAnchor)">
      <summary>绘制要在 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 上显示的所有连接器。</summary>
      <param name="graphics">要在其上绘制连接器的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="pen">用于绘制连接器的 <see cref="T:System.Drawing.Pen" />。</param>
      <param name="points">包含要绘制的每个连接器的端点的 <see cref="T:System.Drawing.Point" /> 数组。</param>
      <param name="startCap">确定要在连接器的起始点绘制的图形的 <see cref="T:System.Workflow.ComponentModel.Design.LineAnchor" />。</param>
      <param name="endCap">确定要在连接器的终点绘制的图形的 <see cref="T:System.Workflow.ComponentModel.Design.LineAnchor" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.EnsureVisibleContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>确保指定的活动设计器在工作流设计图面上可见。</summary>
      <param name="containedDesigner">确保其在工作流设计图面上可见的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.FirstSelectableObject">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 的导航顺序中的第一个可选择对象。</summary>
      <returns>一个 <see cref="T:System.Object" />，该对象是设计器导航顺序中的第一个可选择对象。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.GetDropTargets(System.Drawing.Point)">
      <summary>返回 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 图面上的有效放置位置的数组。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" /> 数组，表示 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 图面上的有效放置位置。</returns>
      <param name="dropPoint">用于查询设计图面的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.GetInnerConnections(System.Workflow.ComponentModel.Design.DesignerEdges)">
      <summary>返回一个表示 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 的内部连接点的各个点的只读集合。</summary>
      <returns>包含设计器的内部连接点的 <see cref="T:System.Drawing.Point" /> 泛型只读集合。</returns>
      <param name="edges">要沿其搜索连接点的 DesignerEdge。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)">
      <summary>返回当前 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 的导航顺序中位于指定对象后面的第一个可选择对象。</summary>
      <returns>导航顺序中位于 <paramref name="obj" /> 参数后面的第一个可选择 <see cref="T:System.Object" />。</returns>
      <param name="current">导航顺序中的当前对象。</param>
      <param name="direction">确定设计器的导航顺序的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerNavigationDirection" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)">
      <summary>使用指定活动初始化设计器。</summary>
      <param name="activity">用于初始化 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.InsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>将指定活动添加到工作流设计图面上指定位置处的 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" />。</summary>
      <param name="insertLocation">指定活动添加位置的 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />。</param>
      <param name="activitiesToInsert">
        <see cref="T:System.Workflow.ComponentModel.Activity" /> 的只读集合，其中包含要添加到 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 的活动。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.LastSelectableObject">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 的导航顺序中的最后一个可选择对象。</summary>
      <returns>一个 <see cref="T:System.Object" />，该对象是设计器导航顺序中的最后一个可选择对象。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.LoadViewState(System.IO.BinaryReader)">
      <summary>从二进制流加载 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 的视图状态。</summary>
      <param name="reader">用于还原设计器视图状态的 <see cref="T:System.IO.BinaryReader" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.MinimumSize">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 的最小大小设置。</summary>
      <returns>一个 <see cref="T:System.Drawing.Size" />，表示 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 的可能的最小大小。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.MoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
      <summary>将指定活动从 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 中显示的一个设计器移动到另一个设计器中。</summary>
      <param name="moveLocation">包含工作流设计图面上要移动活动的位置的 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />。</param>
      <param name="activitiesToMove">要移动的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 只读集合。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnActivityChanged(System.Workflow.ComponentModel.Design.ActivityChangedEventArgs)">
      <summary>当与设计器关联的活动发生更改时向设计器发出通知。</summary>
      <param name="e">包含有关已更改活动的信息的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnContainedActivitiesChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <summary>当 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 包含的多个活动发生更改时向其发出通知。</summary>
      <param name="listChangeArgs">包含有关已更改活动的信息的 <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnDragDrop(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>对设计图面的边界完成拖放操作时向 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 发出通知。</summary>
      <param name="e">定义操作事件参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnDragEnter(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>当执行拖放操作并且用户的鼠标光标进入设计器的边界时，向 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 发出通知。</summary>
      <param name="e">定义操作事件参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnDragLeave">
      <summary>正在执行拖放操作并且用户的鼠标光标离开设计器的边界时，向 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 发出通知。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnDragOver(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
      <summary>当执行拖放操作并且用户的鼠标光标位于设计器边界内时，向 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 发出通知。</summary>
      <param name="e">定义操作事件参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDragEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>执行布局任务以在 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 上定位视觉提示和子设计器。</summary>
      <param name="e">包含布局参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)">
      <summary>当由 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 显示的设计器上的视觉提示大小发生更改时，向 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 发出通知。</summary>
      <returns>表示工作流设计图面上 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 的新大小的 <see cref="T:System.Drawing.Size" />。</returns>
      <param name="e">包含布局参数的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnShowSmartTagVerbs(System.Drawing.Point)">
      <summary>显示与工作流设计图面上指定位置处的智能标记关联的设计器谓词。</summary>
      <param name="smartTagPoint">表示工作流设计图面上显示 <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> 对象的位置的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.OnViewChanged(System.Workflow.ComponentModel.Design.DesignerView)">
      <summary>在当前设计器视图发生更改时，向 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 发出通知。</summary>
      <param name="view">要设置的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.SaveViewState(System.IO.BinaryWriter)">
      <summary>Stores the current view state of the <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> to a binary stream.</summary>
      <param name="writer">要将当前设计器视图状态存储到的 <see cref="T:System.IO.BinaryWriter" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.ShowSmartTag">
      <summary>获取一个值，该值指示 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 是否显示智能标记。</summary>
      <returns>如果设计器显示智能标记，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.SmartTagVerbs">
      <summary>获取与设计器上的智能标记关联的设计器操作的只读集合。</summary>
      <returns>包含与设计器上智能标记关联的所有操作的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerAction" /> 只读集合。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner.Views">
      <summary>获取当前 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 承载的设计器视图的只读集合。</summary>
      <returns>包含由当前 <see cref="T:System.Workflow.ComponentModel.Design.StructuredCompositeActivityDesigner" /> 承载的视图的 <see cref="T:System.Workflow.ComponentModel.Design.DesignerView" /> 只读集合。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.TextQuality">
      <summary>为 AmbientTheme 类指定文本呈现设置。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.TextQuality.Aliased">
      <summary>环境文本质量设置是带锯齿的。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.TextQuality.AntiAliased">
      <summary>环境文本质量设置是消除锯齿的。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog">
      <summary>表示一个通用对话框，用户可以使用该对话框指定要应用于工作流设计图面的工作流主题。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog.#ctor(System.IServiceProvider)">
      <summary>使用 <see cref="T:System.IServiceProvider" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog" /> 类的新实例。</summary>
      <param name="serviceProvider">为 <see cref="T:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog" /> 提供自定义支持的服务提供程序。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog.#ctor(System.IServiceProvider,System.Workflow.ComponentModel.Design.WorkflowTheme)">
      <summary>使用 <see cref="T:System.IServiceProvider" /> 和 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog" /> 类的新实例。</summary>
      <param name="serviceProvider">为 <see cref="T:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog" /> 提供自定义支持的服务提供程序。</param>
      <param name="theme">要在工作流设计器的主题配置对话框中突出显示的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.ThemeConfigurationDialog.ComposedTheme">
      <summary>获取在工作流设计器的主题配置对话框中突出显示的工作流主题。</summary>
      <returns>要在工作流设计器的主题配置对话框中突出显示的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.ThemeType">
      <summary>指定显示在“选项”对话框中的主题的类型。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.ThemeType.Default">
      <summary>主题设置由默认工作流主题提供。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.ThemeType.System">
      <summary>主题设置由操作系统提供。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.ThemeType.UserDefined">
      <summary>主题设置由用户定义的主题提供。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.TypeBrowserDialog">
      <summary>表示一个对话框，用户可以通过该对话框选择类型。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeBrowserDialog.#ctor(System.IServiceProvider,System.Workflow.ComponentModel.Design.ITypeFilterProvider,System.String)">
      <summary>使用 <see cref="T:System.IServiceProvider" />、<see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" /> 及字符串初始化 <see cref="T:System.Workflow.ComponentModel.Design.TypeBrowserDialog" /> 类的新实例。</summary>
      <param name="serviceProvider">对话框从中获取服务的 <see cref="T:System.IServiceProvider" />。</param>
      <param name="filterProvider">从中获取类型筛选服务的 <see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" />。</param>
      <param name="selectedTypeName">选定类型的名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeBrowserDialog.#ctor(System.IServiceProvider,System.Workflow.ComponentModel.Design.ITypeFilterProvider,System.String,System.Workflow.ComponentModel.Compiler.TypeProvider)">
      <summary>使用 <see cref="T:System.IServiceProvider" />、<see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" />、字符串和 <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Design.TypeBrowserDialog" /> 类的新实例。</summary>
      <param name="serviceProvider">要从中获取服务的 <see cref="T:System.IServiceProvider" />。</param>
      <param name="filterProvider">从中获取类型筛选服务的 <see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" />。</param>
      <param name="selectedTypeName">选定类型的名称。</param>
      <param name="typeProvider">用于允许访问要在类型浏览器对话框中加载的本地程序集的 <see cref="T:System.Workflow.ComponentModel.Compiler.TypeProvider" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.TypeBrowserDialog.SelectedType">
      <summary>获取用户在类型浏览器对话框中选择的类型。</summary>
      <returns>用户在类型浏览器对话框中选择的 <see cref="T:System.Type" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.TypeBrowserDialog.System#ComponentModel#ISite#Component">
      <summary>获取要与类型浏览器对话框关联的组件。</summary>
      <returns>要绑定到 <see cref="T:System.Workflow.ComponentModel.Design.TypeBrowserDialog" /> 的 <see cref="T:System.ComponentModel.IComponent" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.TypeBrowserDialog.System#ComponentModel#ISite#Container">
      <summary>获取要与类型浏览器对话框关联的容器。</summary>
      <returns>要与该 <see cref="T:System.Workflow.ComponentModel.Design.TypeBrowserDialog" /> 关联的 <see cref="T:System.ComponentModel.IContainer" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.TypeBrowserDialog.System#ComponentModel#ISite#DesignMode">
      <summary>获取一个值，该值指示类型浏览器对话框是否处于设计模式。</summary>
      <returns>如果 <see cref="T:System.Workflow.ComponentModel.Design.TypeBrowserDialog" /> 处于设计模式，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.TypeBrowserDialog.System#ComponentModel#ISite#Name">
      <summary>获取或设置与类型浏览器对话框关联的组件的名称。</summary>
      <returns>与类型浏览器对话框关联的组件的名称。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeBrowserDialog.System#IServiceProvider#GetService(System.Type)">
      <summary>检索指定类型的服务对象。</summary>
      <returns>类型为 <paramref name="serviceType" /> 的服务对象；如果不存在类型为 <paramref name="serviceType" /> 的服务对象，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="serviceType">要检索的服务对象的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.TypeBrowserEditor">
      <summary>提供一个用户界面，用于表示和编辑与工作流设计器关联的对象浏览器中的 Windows Workflow Foundation 类型的值。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeBrowserEditor.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.TypeBrowserEditor" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeBrowserEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="Overload:System.Workflow.ComponentModel.Design.TypeBrowserEditor.GetEditStyle" /> 指示的编辑器样式编辑指定的对象值。</summary>
      <returns>新的对象值。</returns>
      <param name="typeDescriptorContext">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="serviceProvider">可由编辑器用来获取服务的 <see cref="T:System.IServiceProvider" />。</param>
      <param name="value">要编辑的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeDescriptorContext" /> 或 <paramref name="serviceProvider" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.Exception">当 <see cref="M:System.IServiceProvider.GetService(System.Type)" /> 尝试获取类型提供程序时，它会返回空引用 (Nothing)。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeBrowserEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns the editor style used by the <see cref="Overload:System.Workflow.ComponentModel.Design.TypeBrowserEditor.EditValue" /> method.</summary>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，指示 <see cref="Overload:System.Workflow.ComponentModel.Design.TypeBrowserEditor.EditValue" /> 使用的编辑器的样式。 除非由继承类重写，否则此方法将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal" />。</returns>
      <param name="typeDescriptorContext">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.TypeFilterProviderAttribute">
      <summary>指定类型或成员用于筛选类浏览器对话框中显示的类型的类。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeFilterProviderAttribute.#ctor(System.String)">
      <summary>使用指定的类型名称初始化 <see cref="T:System.Workflow.ComponentModel.Design.TypeFilterProviderAttribute" /> 类的新实例。</summary>
      <param name="typeName">一个字符串，其中包含实现 <see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" /> 以便应用于类或成员的类型的名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.TypeFilterProviderAttribute.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.TypeFilterProviderAttribute" /> 类的新实例。</summary>
      <param name="type">实现 <see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" /> 以便应用于类或成员的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.TypeFilterProviderAttribute.TypeFilterProviderTypeName">
      <summary>获取实现 <see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" /> 的类型的名称。</summary>
      <returns>一个字符串，其中包含实现 <see cref="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" /> 的类型的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader">
      <summary>提供可用于实现自定义工作流设计器加载程序的通用设计器加载程序功能。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.AddActivityToDesigner(System.Workflow.ComponentModel.Activity)">
      <summary>当将活动添加到父活动集合中后，即会将该活动添加到设计器宿主。</summary>
      <param name="activity">要添加的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Dispose">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 使用的所有资源。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.FileName">
      <summary>当在派生类中重写时，获取要加载的设计器的文件名。</summary>
      <returns>一个字符串，其中包含要加载的设计器的文件名。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Flush">
      <summary>将挂起的更改写入设计器的加载位置。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.ForceReload">
      <summary>在派生类中重写时，将使 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 重新加载设计器。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileReader(System.String)">
      <summary>在派生类中重写时，将会检索 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 用于从指定文件中进行读取的对象。</summary>
      <returns>用于读取指定文件的 <see cref="T:System.IO.TextReader" />。</returns>
      <param name="filePath">一个字符串，其中包含要从中读取的文件的路径。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.GetFileWriter(System.String)">
      <summary>在派生类中重写时，将会获取 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" /> 用于对指定文件进行写入的对象。</summary>
      <returns>用于写入文件的 <see cref="T:System.IO.TextWriter" />。</returns>
      <param name="filePath">一个字符串，其中包含要写入的文件的路径。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.InDebugMode">
      <summary>获取一个值，该值指示是否应在调试模式下加载工作流。</summary>
      <returns>如果应在调试模式下加载工作流，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.Initialize">
      <summary>使用设计器加载程序宿主所需的任何服务初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader" />。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)">
      <summary>将序列化布局应用于当前设计器宿主中的根设计器。</summary>
      <param name="layoutReader">一个为序列化布局创建的 <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="layoutLoadErrors">在反序列化期间发生的错误的列表。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayoutFromResource(System.Type,System.String,System.Collections.IList@)">
      <summary>检索指定的资源，并调用 <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /> 方法，从而将序列化布局应用于当前设计器宿主中的根设计器。</summary>
      <param name="type">与资源关联的 <see cref="T:System.Type" />。</param>
      <param name="manifestResourceName">资源的名称。</param>
      <param name="errors">调用 <see cref="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.LoadDesignerLayout(System.Xml.XmlReader,System.Collections.IList@)" /> 时遇到的错误。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>在设计器加载完成时调用。</summary>
      <param name="successful">如果加载操作成功，则为 true；否则为 false。</param>
      <param name="errors">包含加载错误。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>将缓存的更改写入设计器的加载位置。</summary>
      <param name="serializationManager">实现 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 接口的类，此接口管理设计时序列化。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>从设计文档加载设计器。</summary>
      <param name="serializationManager">实现 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 接口的类，此接口管理设计时序列化。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.RemoveActivityFromDesigner(System.Workflow.ComponentModel.Activity)">
      <summary>当将活动添加到父活动集合中后，从设计器宿主中移除该活动。</summary>
      <param name="activity">要从设计器中移除的活动。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.SaveDesignerLayout(System.Xml.XmlWriter,System.Workflow.ComponentModel.Design.ActivityDesigner,System.Collections.IList@)">
      <summary>序列化设计器布局。</summary>
      <param name="layoutWriter">用于将布局序列化到其中的 XmlWriter。</param>
      <param name="rootDesigner">从中获取布局信息的根活动。</param>
      <param name="layoutSaveErrors">序列化时遇到的错误。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader.TargetFrameworkTypeDescriptionProvider">
      <summary>获取目标 .NET Framework 的 <see cref="T:System.ComponentModel.TypeDescriptor" /> 元数据。</summary>
      <returns>目标 .NET Framework 的 <see cref="T:System.ComponentModel.TypeDescriptor" /> 元数据。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter">
      <summary>为所有工作流消息筛选器提供基类。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> 的实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.Dispose">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> 占用的资源。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.Finalize">
      <summary>在垃圾回收将对象回收之前，尝试通过调用 Dispose(false) 来释放资源。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.Initialize(System.Workflow.ComponentModel.Design.WorkflowView)">
      <summary>使用关联的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />。</summary>
      <param name="parentView">要与该 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.MessageHitTestContext">
      <summary>获取描述 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> 的上下文的 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> 对象，它包含有关 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> 上下文的信息。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>拖动操作过程中在对象上松开鼠标按钮时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.DragEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>在拖动操作过程中鼠标指针进入对象边界时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.DragEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragLeave">
      <summary>在拖动操作过程中鼠标指针离开对象边界时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>拖动操作过程中在对象边界内移动鼠标指针时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.DragEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>在执行拖动操作期间发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>在按下某个键时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.KeyEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>在释放键时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.KeyEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>在应重新定位子对象时发生。</summary>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.LayoutEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseCaptureChanged">
      <summary>当通过拖动鼠标选择的项更改时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>当双击鼠标时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.MouseEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>在单击鼠标按钮时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.MouseEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseEnter(System.Windows.Forms.MouseEventArgs)">
      <summary>当鼠标指针进入对象的边界时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.MouseEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseHover(System.Windows.Forms.MouseEventArgs)">
      <summary>当鼠标指针暂停在对象上方时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.MouseEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseLeave">
      <summary>当鼠标指针离开对象的边界时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>当鼠标指针在对象边界内移动时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.MouseEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>在松开鼠标按钮时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.MouseEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>当鼠标滚轮移动时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.MouseEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnPaint(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,System.Workflow.ComponentModel.Design.AmbientTheme)">
      <summary>接收绘画消息时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.PaintEventArgs" />，包含有关事件的信息。</param>
      <param name="viewPort">描述要在其中进行绘画的区域的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="ambientTheme">一个用于获取有关主题的信息的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnPaintWorkflowAdornments(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,System.Workflow.ComponentModel.Design.AmbientTheme)">
      <summary>在工作流应重新绘画其修饰时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 PaintEventArgs，包含有关事件的信息。</param>
      <param name="viewPort">描述要在其中进行绘画的区域的 Rectangle。</param>
      <param name="ambientTheme">一个用于获取有关主题的信息的 AmbientTheme。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>在执行拖动操作期间发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="eventArgs">一个 <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnScroll(System.Windows.Forms.ScrollBar,System.Int32)">
      <summary>当用户在工作流设计器中滚动时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="sender">用户滚动的 <see cref="T:System.Windows.Forms.ScrollBar" />。</param>
      <param name="value">滚动条的位置。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnShowContextMenu(System.Drawing.Point)">
      <summary>在工作流应显示上下文菜单时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="screenMenuPoint">上下文菜单的显示点。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.OnThemeChange">
      <summary>当工作流的主题更改时发生。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.ParentView">
      <summary>获取与 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />。</summary>
      <returns>与 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter.ProcessMessage(System.Windows.Forms.Message)">
      <summary>当必须处理原始的 Win32 消息时发生。</summary>
      <returns>如果消息已处理，则为 true；否则为 false。</returns>
      <param name="message">要处理的 Message。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowMenuCommands">
      <summary>定义一组 <see cref="T:System.ComponentModel.Design.CommandID" /> 字段，其中每个字段都对应于工作流设计器提供的一个命令函数。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowMenuCommands" /> 类的新实例。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointActionMenu">
      <summary>获取断点操作菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointConditionMenu">
      <summary>获取断点条件菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointConstraintsMenu">
      <summary>获取断点约束菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointHitCountMenu">
      <summary>获取断点计数菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.BreakpointLocationMenu">
      <summary>获取断点位置菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ChangeTheme">
      <summary>获取主题更改菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ClearBreakpointsMenu">
      <summary>可用于访问清除断点菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Collapse">
      <summary>可用于访问折叠菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.CopyToClipboard">
      <summary>可用于访问复制菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.CreateTheme">
      <summary>可用于访问创建主题菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugCommandSetId">
      <summary>为调试命令集提供唯一的标识符。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugStepBranchMenu">
      <summary>可用于访问调试步骤分支菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugStepInstanceMenu">
      <summary>可用于访问调试步骤实例菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DebugWorkflowGroupId">
      <summary>为菜单的调试工作流组提供唯一的标识符。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DefaultFilter">
      <summary>可用于访问默认筛选器菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DefaultPage">
      <summary>可用于访问默认页面菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DesignerActionsMenu">
      <summary>可用于访问设计器操作菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.DesignerProperties">
      <summary>可用于访问设计器属性菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Disable">
      <summary>可用于访问禁用菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Enable">
      <summary>可用于访问启用菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.EnableBreakpointMenu">
      <summary>可用于访问启用断点菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ExecutionStateMenu">
      <summary>可用于访问执行状态菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Expand">
      <summary>可用于访问展开菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.FirstZoomCommand">
      <summary>可用于访问第一缩放菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.GotoDisassemblyMenu">
      <summary>可用于访问转到反汇编菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.InsertBreakpointMenu">
      <summary>可用于访问插入断点菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.InsertTracePointMenu">
      <summary>可用于访问插入跟踪点菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.LastZoomCommand">
      <summary>可用于访问最后缩放菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.MenuGuid">
      <summary>为菜单提供唯一的标识符。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.NewDataBreakpointMenu">
      <summary>可用于访问新数据断点菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.NewFileTracePointMenu">
      <summary>可用于访问新文件跟踪点菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageDown">
      <summary>可用于访问向下翻页菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageLayoutMenu">
      <summary>可用于访问页面布局菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageSetup">
      <summary>可用于访问页面设置菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PageUp">
      <summary>可用于访问向上翻页菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Pan">
      <summary>可用于访问平移菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PanMenu">
      <summary>可用于访问平移菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Print">
      <summary>可用于访问打印菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PrintPreview">
      <summary>可用于访问打印预览菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.PrintPreviewPage">
      <summary>可用于访问打印预览页面菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.RunToCursorMenu">
      <summary>可用于访问运行到光标处菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.SaveAsImage">
      <summary>可用于访问另存为图像菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.SelectionMenu">
      <summary>可用于访问选择菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.SetNextStatementMenu">
      <summary>可用于访问设置下一语句菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ShowAll">
      <summary>可用于访问全部显示菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ShowNextStatementMenu">
      <summary>可用于访问显示下一语句菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ToggleBreakpointMenu">
      <summary>可用于访问切换断点菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupActions">
      <summary>可用于访问谓词组操作菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupDesignerActions">
      <summary>可用于访问谓词组设计器操作菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupEdit">
      <summary>可用于访问编辑谓词组菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupGeneral">
      <summary>可用于访问常规谓词组菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupMisc">
      <summary>可用于访问杂项谓词组菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupOptions">
      <summary>可用于访问选项谓词组菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.VerbGroupView">
      <summary>可用于访问视图谓词组菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.WorkflowCommandSetId">
      <summary>为工作流命令集提供唯一的标识符。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.WorkflowToolBar">
      <summary>可用于访问工作流工具栏菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom100Mode">
      <summary>可用于比例 100% 菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom150Mode">
      <summary>可用于访问显示比例 150% 菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom200Mode">
      <summary>可用于访问显示比例 200% 菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom300Mode">
      <summary>可用于访问显示比例 300% 菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom400Mode">
      <summary>可用于访问显示比例 400% 菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom50Mode">
      <summary>可用于访问显示比例 50% 菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.Zoom75Mode">
      <summary>可用于访问显示比例 75% 菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomIn">
      <summary>可用于访问放大菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomLevelCombo">
      <summary>可用于访问缩放级别组合菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomLevelListHandler">
      <summary>可用于访问缩放级别列表处理程序菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomMenu">
      <summary>可用于访问缩放菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Design.WorkflowMenuCommands.ZoomOut">
      <summary>可用于访问缩小菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。 此字段为只读。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowOutline">
      <summary>为当前在工作流设计器中设计的工作流呈现文档大纲。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.#ctor(System.IServiceProvider)">
      <summary>使用一个用于检索服务对象的对象初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutline" /> 类的新实例。</summary>
      <param name="serviceProvider">检索 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutline" /> 的服务对象的 <see cref="T:System.IServiceProvider" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException">通过 <paramref name="serviceProvider" /> 获取的宿主环境为 Null (Nothing)。 - 或 - 通过 <paramref name="serviceProvider" /> 获取的设计图面为 Null (Nothing)。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.CreateNewNode(System.Workflow.ComponentModel.Activity)">
      <summary>为 <see cref="T:System.Workflow.ComponentModel.Activity" /> 创建一个新节点。</summary>
      <returns>活动的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutlineNode" />。</returns>
      <param name="activity">必须为其创建新节点的活动。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutline" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.WorkflowOutline.Expanding">
      <summary>当正在展开文档大纲的树视图时引发的事件。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.GetNode(System.Workflow.ComponentModel.Activity)">
      <summary>检索与指定 <see cref="T:System.Workflow.ComponentModel.Activity" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutline" /> 中的节点。</summary>
      <returns>与 <paramref name="activity" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutlineNode" />。</returns>
      <param name="activity">与要检索的节点关联的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.GetService(System.Type)">
      <summary>返回一个对象，该对象表示由 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutline" /> 或它的 <see cref="T:System.ComponentModel.Container" /> 提供的服务。</summary>
      <returns>一个 <see cref="T:System.Object" />，表示由 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutline" /> 提供的服务。</returns>
      <param name="serviceType">一个 <see cref="T:System.Type" />，表示由 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutline" /> 提供的服务。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowOutline.NeedsExpandAll">
      <summary>获取或设置一个值，该值指示是否需要展开文档大纲树视图。</summary>
      <returns>如果需要展开文档大纲树视图，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.OnBeginUpdate">
      <summary>在控件开始更新 <see cref="P:System.Workflow.ComponentModel.Design.WorkflowOutline.TreeView" /> 时调用。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.OnEndUpdate">
      <summary>在控件完成更新 <see cref="P:System.Workflow.ComponentModel.Design.WorkflowOutline.TreeView" /> 时调用。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.OnLoad(System.EventArgs)">
      <summary>引发 <see cref="E:System.Windows.Forms.Form.Load" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.OnNodeAdded(System.Workflow.ComponentModel.Design.WorkflowOutlineNode)">
      <summary>在将不是 Null 的新节点添加到活动树中后调用。</summary>
      <param name="node">已添加到活动树中的节点。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.OnNodeSelected(System.Workflow.ComponentModel.Design.WorkflowOutlineNode)">
      <summary>当用户在活动树中选择节点时调用。</summary>
      <param name="node">已选择的节点。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.OnRefreshNode(System.Workflow.ComponentModel.Design.WorkflowOutlineNode)">
      <summary>在刷新节点时调用。</summary>
      <param name="node">已刷新的工作流大纲节点。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.RefreshNode(System.Workflow.ComponentModel.Design.WorkflowOutlineNode,System.Boolean)">
      <summary>强制刷新节点。</summary>
      <param name="nodeToUpdate">必须更新的节点。</param>
      <param name="refreshChildNodes">指示是否必须更新子节点的 Boolean 值。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.RefreshWorkflowOutline">
      <summary>刷新所有文档大纲节点的颜色和图标。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutline.ReloadWorkflowOutline">
      <summary>重新加载文档大纲控件。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowOutline.RootNode">
      <summary>获取根提供程序的根节点。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.TreeNode" />，它是根节点。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowOutline.TreeView">
      <summary>检索用于显示文档大纲的 <see cref="T:System.Windows.Forms.TreeView" /> 控件</summary>
      <returns>用于显示文档大纲的 <see cref="T:System.Windows.Forms.TreeView" /> 控件。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowOutlineNode">
      <summary>表示工作流设计器中显示的工作流大纲文档中的节点。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutlineNode.#ctor(System.Workflow.ComponentModel.Activity)">
      <summary>使用活动初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutlineNode" /> 类的新实例。</summary>
      <param name="activity">要与节点关联的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activity" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowOutlineNode.Activity">
      <summary>获取与节点关联的活动。</summary>
      <returns>与 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutlineNode" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutlineNode.OnActivityRename(System.String)">
      <summary>将工作流大纲节点的标签中显示的文本更改为指定名称。</summary>
      <param name="newName">一个字符串，其中包含要在工作流大纲节点的标签中显示的名称。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowOutlineNode.RefreshNode">
      <summary>更新 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowOutlineNode" /> 的属性设置。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowPageSetupDialog">
      <summary>表示当用户选择“页面设置…”命令时出现的工作流设计器的“页面设置”对话框。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowPageSetupDialog.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowPageSetupDialog" /> 类的新实例。</summary>
      <param name="serviceProvider">对话框从中获取服务的 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowTheme">
      <summary>为设计时环境中的工作流提供外观属性设置。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.AmbientTheme">
      <summary>获取与 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />，它描述 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> 外观的默认值。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.Clone">
      <summary>创建重复主题。</summary>
      <returns>一个表示新克隆的主题的对象。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.ContainingFileDirectory">
      <summary>获取 <see cref="P:System.Workflow.ComponentModel.Design.WorkflowTheme.FilePath" /> 的目录部分。</summary>
      <returns>
        <see cref="P:System.Workflow.ComponentModel.Design.WorkflowTheme.FilePath" /> 的目录部分。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.CreateStandardTheme(System.Workflow.ComponentModel.Design.ThemeType)">
      <summary>创建标准主题。</summary>
      <returns>新创建的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</returns>
      <param name="standardThemeType">要创建的标准主题的 <see cref="T:System.Workflow.ComponentModel.Design.ThemeType" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.CurrentTheme">
      <summary>获取或设置当前主题。</summary>
      <returns>用于显示设置的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.Description">
      <summary>获取或设置主题的说明。</summary>
      <returns>主题的说明。</returns>
      <exception cref="T:System.InvalidOperationException">由于工作流主题是只读的，因此不能设置属性值。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.DesignerThemes">
      <summary>获取与工作流关联的设计器主题的列表。</summary>
      <returns>与工作流关联的设计器主题的列表。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.EnableChangeNotification">
      <summary>获取或设置一个值，该值指示是否启用更改通知。</summary>
      <returns>为 true 则启用更改通知；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.FilePath">
      <summary>获取或设置主题的文件路径。</summary>
      <returns>主题的文件路径。</returns>
      <exception cref="T:System.InvalidOperationException">由于工作流主题是只读的，因此不能设置属性值。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.GenerateThemeFilePath">
      <summary>生成主题的文件路径。</summary>
      <returns>主题的新的唯一文件路径。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.GetDesignerTheme(System.Workflow.ComponentModel.Design.ActivityDesigner)">
      <summary>获取指定 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 的主题。</summary>
      <returns>与指定 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />。</returns>
      <param name="designer">从中检索主题的活动设计器。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.Load(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String)">
      <summary>使用序列化管理器从指定的路径加载新主题。</summary>
      <returns>使用指定的序列化管理器从指定文件路径加载的新的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</returns>
      <param name="serializationManager">要用于加载主题的序列化管理器。</param>
      <param name="themeFilePath">从中加载主题的文件路径。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.Load(System.String)">
      <summary>从指定的文件路径加载主题。</summary>
      <returns>从指定文件名加载的新的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</returns>
      <param name="themeFilePath">主题的文件路径。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.LoadThemeSettingFromRegistry">
      <summary>从注册表中加载主题。</summary>
      <returns>从注册表加载的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.LookupPath">
      <summary>从注册表获取文件路径。</summary>
      <returns>注册表中主题的文件路径。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.Name">
      <summary>获取或设置主题的名称。</summary>
      <returns>主题的名称。</returns>
      <exception cref="T:System.InvalidOperationException">由于工作流主题是只读的，因此不能设置属性值。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.ReadOnly">
      <summary>获取或设置一个值，该值指示工作流主题是否为只读。</summary>
      <returns>如果工作流主题为只读，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.RegistryKeyPath">
      <summary>获取主题的注册表项路径。</summary>
      <returns>项的注册表项路径。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.Save(System.String)">
      <summary>将主题保存到文件。</summary>
      <param name="themeFilePath">要在其中保存 WorkflowTheme 的文件。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.SaveThemeSettingToRegistry">
      <summary>将主题保存到注册表。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.StandardThemes">
      <summary>获取标准主题的列表。</summary>
      <returns>可用主题的列表。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowTheme.System#IDisposable#Dispose">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowTheme" /> 占用的托管资源。</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.WorkflowTheme.ThemeChanged">
      <summary>当主题发生更改时发生。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.Type">
      <summary>获取主题的类型。</summary>
      <returns>主题的 <see cref="T:System.Workflow.ComponentModel.Design.ThemeType" />。 可能值为 Default、System 和 UserDefined。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowTheme.Version">
      <summary>获取或设置主题的版本。</summary>
      <returns>主题的版本信息。</returns>
      <exception cref="T:System.InvalidOperationException">由于工作流主题是只读的，因此不能设置属性值。</exception>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowView">
      <summary>提供设计图面，该设计图面呈现流程的可视表示形式。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.#ctor(System.IServiceProvider)">
      <summary>使用指定的服务提供程序初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 类的实例。</summary>
      <param name="serviceProvider">实现 <see cref="T:System.IServiceProvider" /> 接口的对象。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.AddDesignerMessageFilter(System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter)">
      <summary>向 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 添加 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />。</summary>
      <param name="designerMessageFilter">要添加到 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.ClientPointToLogical(System.Drawing.Point)">
      <summary>将 <see cref="T:System.Drawing.Point" /> 从工作区坐标转换为逻辑坐标。</summary>
      <returns>已从工作区坐标转换到逻辑坐标的 <see cref="T:System.Drawing.Point" />。</returns>
      <param name="clientPoint">要从工作区坐标转换到逻辑坐标的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.ClientRectangleToLogical(System.Drawing.Rectangle)">
      <summary>将 <see cref="T:System.Drawing.Rectangle" /> 从工作区坐标转换到逻辑坐标。</summary>
      <returns>已从工作区坐标转换到逻辑坐标的 <see cref="T:System.Drawing.Rectangle" />。</returns>
      <param name="rectangle">要从工作区坐标转换到逻辑坐标的 <see cref="T:System.Drawing.Rectangle" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.ClientSizeToLogical(System.Drawing.Size)">
      <summary>将 <see cref="T:System.Drawing.Size" /> 从工作区坐标转换到逻辑坐标。</summary>
      <returns>已从工作区坐标转换到逻辑坐标的 <see cref="T:System.Drawing.Size" />。</returns>
      <param name="clientSize">要从工作区坐标转换到逻辑坐标的 <see cref="T:System.Drawing.Size" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance">
      <summary>创建 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的新 <see cref="T:System.Windows.Forms.AccessibleObject" />。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的新 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen">
      <summary>启用设计图面上的按钮，在单击该按钮时会更改工作流设计图面的缩放级别，以便在 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 中显示整个工作流。</summary>
      <returns>如果已启用该动态按钮，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible(System.Object)">
      <summary>确保传递的 <see cref="T:System.Object" /> 可见，并在必要时展开父对象和滚动 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />。</summary>
      <param name="selectableObject">要使之可见的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="selectableObject" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize">
      <summary>更改工作流设计图面的缩放级别，以便在 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 中显示整个工作流。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize">
      <summary>将缩放级别更改为百分之百以在 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 中显示工作流的完整大小。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.GetService(System.Type)">
      <summary>获取指定类型的服务对象（如果可用）。</summary>
      <returns>如果 <paramref name="serviceType" /> 是 typeof(<see cref="T:System.ComponentModel.Design.CommandID" />)，则 GetService 返回特定的 <see cref="T:System.ComponentModel.Design.CommandID" />；否则，GetService 返回实现所请求服务的 <see cref="T:System.Object" />，或在无法解析服务的情况下返回空引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="serviceType">要检索的服务的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的水平滚动条。</summary>
      <returns>一个用于调整水平滚动条的设置和可见性的 <see cref="T:System.Windows.Forms.ScrollBar" />。</returns>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.WorkflowView.Idle">
      <summary>当 WorkflowView 完成处理并即将进入空闲状态时发生。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateClientRectangle(System.Drawing.Rectangle)">
      <summary>使指定的 <see cref="T:System.Drawing.Rectangle" /> 无效并进行重绘。</summary>
      <param name="clientRectangle">在工作区坐标中，要使其无效并进行重绘的 <see cref="T:System.Drawing.Rectangle" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateLogicalRectangle(System.Drawing.Rectangle)">
      <summary>使指定的 <see cref="T:System.Drawing.Rectangle" /> 无效并进行重绘。</summary>
      <param name="logicalRectangle">在逻辑坐标中，要使其无效并进行重绘的 <see cref="T:System.Drawing.Rectangle" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState(System.IO.Stream)">
      <summary>从二进制流还原视图状态信息。</summary>
      <param name="viewState">一个 <see cref="T:System.IO.BinaryReader" />，用于还原视图状态。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalPointToClient(System.Drawing.Point)">
      <summary>将 <see cref="T:System.Drawing.Point" /> 从逻辑坐标转换到工作区坐标。</summary>
      <returns>已从逻辑坐标转换到工作区坐标的 <see cref="T:System.Drawing.Point" />。</returns>
      <param name="logicalPoint">要转换到工作区坐标的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalPointToScreen(System.Drawing.Point)">
      <summary>将 <see cref="T:System.Drawing.Point" /> 从逻辑坐标转换到屏幕坐标。</summary>
      <returns>已从逻辑坐标转换到屏幕坐标的 <see cref="T:System.Drawing.Point" />。</returns>
      <param name="logicalPoint">要转换到屏幕坐标的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalRectangleToClient(System.Drawing.Rectangle)">
      <summary>将 <see cref="T:System.Drawing.Rectangle" /> 从逻辑坐标转换到工作区坐标。</summary>
      <returns>已从逻辑坐标转换到工作区坐标的 <see cref="T:System.Drawing.Rectangle" />。</returns>
      <param name="rectangle">要转换到工作区坐标的 <see cref="T:System.Drawing.Rectangle" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalSizeToClient(System.Drawing.Size)">
      <summary>将 <see cref="T:System.Drawing.Size" /> 从逻辑坐标转换到工作区坐标。</summary>
      <returns>已从逻辑坐标转换到工作区坐标的 <see cref="T:System.Drawing.Size" />。</returns>
      <param name="logicalSize">要转换到工作区坐标的 <see cref="T:System.Drawing.Size" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
      <summary>在将控件添加到 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 时发生。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.ControlEventArgs" />。</param>
      <exception cref="T:System.InvalidOperationException">如果添加的控件不是 <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar" /> 或 <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar" />，</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>在将拖动的项放置到 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 上时发生。</summary>
      <param name="dragEventArgs">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>在将项拖入 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 边界时发生。</summary>
      <param name="dragEventArgs">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave(System.EventArgs)">
      <summary>当光标在拖动操作过程中离开 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 时发生。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>当正在执行拖放操作且指针位于 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 边界内时发生。</summary>
      <param name="dragEventArgs">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>在执行拖动操作期间发生。</summary>
      <param name="gfbevent">为事件提供数据的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>在 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 具有焦点的情况下按下某个键时发生。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>在 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 具有焦点的情况下释放某个键时发生。</summary>
      <param name="e">一个 <see cref="T:System.Windows.Forms.KeyEventArgs" />，它提供有关事件的数据。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>在 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 应重新定位其子控件时发生。</summary>
      <param name="levent">为事件提供数据的 <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseCaptureChanged(System.EventArgs)">
      <summary>当通过拖动鼠标选择的项更改时发生。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，它提供有关事件的数据。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>在双击 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 按钮时发生。</summary>
      <param name="e">一个 <see cref="T:System.Windows.Forms.MouseEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>当鼠标指针位于 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 之上且按下鼠标按钮时发生。</summary>
      <param name="e">一个 <see cref="T:System.Windows.Forms.MouseEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter(System.EventArgs)">
      <summary>当鼠标指针进入 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 时发生。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover(System.EventArgs)">
      <summary>当鼠标悬停在 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 上时发生。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave(System.EventArgs)">
      <summary>当鼠标指针离开 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 时发生。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>当鼠标移动到 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 上时发生。</summary>
      <param name="e">一个 <see cref="T:System.Windows.Forms.MouseEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>在 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 上释放鼠标按钮时发生。</summary>
      <param name="e">一个 <see cref="T:System.Windows.Forms.MouseEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>在移动鼠标滚轮并且 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 具有焦点时发生。</summary>
      <param name="e">一个 <see cref="T:System.Windows.Forms.MouseEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>在重绘 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 时发生。</summary>
      <param name="e">一个 <see cref="T:System.Windows.Forms.PaintEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>在拖动操作期间发生，并且允许拖动源确定是否应取消拖动操作。</summary>
      <param name="qcdevent">一个 <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />，包含有关事件的信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnRootDesignerChanged">
      <summary>在将其他设计器设置为设计图面的新根设计器时调用。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.OnZoomChanged">
      <summary>当缩放级别更改时调用。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.PerformLayout(System.Boolean)">
      <summary>强制 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 将布局逻辑应用于其所有子控件。</summary>
      <param name="immediateUpdate">如果让布局立即更新，则为 true；否则为 false。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument">
      <summary>获取与 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 关联的 <see cref="T:System.Drawing.Printing.PrintDocument" />。</summary>
      <returns>将输出发送到打印机的 <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument" /> 对象。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintPreviewMode">
      <summary>获取或设置 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的打印预览模式。</summary>
      <returns>如果打印预览模式处于活动状态，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.RemoveDesignerMessageFilter(System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter)">
      <summary>移除关联的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />。</summary>
      <param name="designerMessageFilter">要从 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 移除的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.RootDesigner">
      <summary>获取或设置 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的根设计器。</summary>
      <returns>与 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 关联的 <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />。</returns>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.WorkflowView.RootDesignerChanged">
      <summary>当更改根设计器时引发。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState(System.IO.Stream)">
      <summary>将视图状态保存到二进制流。</summary>
      <param name="viewState">一个 <see cref="T:System.IO.BinaryReader" />，用于存储视图状态。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
      <summary>使用指定的图像格式将 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的图像保存到指定的流中。</summary>
      <param name="stream">要将工作流视图图像保存到的 <see cref="T:System.IO.Stream" />。</param>
      <param name="imageFormat">用以保存工作流视图图像的 <see cref="T:System.Drawing.Imaging.ImageFormat" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 或 <paramref name="imageFormat" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage(System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>使用指定的图像格式将 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的图像保存到指定的文件中。</summary>
      <param name="imageFile">在其中保存工作流视图图像的文件的路径。</param>
      <param name="imageFormat">用以保存工作流视图图像的 <see cref="T:System.Drawing.Imaging.ImageFormat" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="imageFile" /> 或 <paramref name="imageFormat" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImageToClipboard">
      <summary>将 WorkflowView 的图像保存到剪贴板。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.ScreenPointToLogical(System.Drawing.Point)">
      <summary>将 <see cref="T:System.Drawing.Point" /> 从屏幕坐标转换到逻辑坐标。</summary>
      <returns>已从屏幕坐标转换到逻辑坐标的 <see cref="T:System.Drawing.Point" />。</returns>
      <param name="screenPoint">要从屏幕坐标转换到逻辑坐标的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.ScrollPosition">
      <summary>获取或设置滚动条在 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 上的位置。</summary>
      <returns>描述屏幕坐标中滚动条位置的点。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth">
      <summary>获取或设置 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的 <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth" />。</summary>
      <returns>阴影深度，以像素为单位。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.ShowInfoTip(System.String)">
      <summary>用指定的文本显示 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的信息提示。</summary>
      <param name="text">要在信息提示上显示的文本。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="infoTipText" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.ShowInfoTip(System.String,System.String)">
      <summary>用指定的标题和文本显示 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的信息提示。</summary>
      <param name="title">要显示的信息提示的标题。</param>
      <param name="text">要显示的信息提示的文本。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="title" /> 为 null 引用（在 Visual Basic 中为 Nothing）。 - 或 - <paramref name="infoTipText" /> 为空引用 (Nothing)。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.ShowInPlaceToolTip(System.String,System.Drawing.Rectangle)">
      <summary>在指定的位置显示 ToolTip。</summary>
      <param name="toolTipText">要显示的文本。</param>
      <param name="toolTipRectangle">指定放置 ToolTip 的屏幕位置的 <see cref="T:System.Drawing.Rectangle" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.System#IServiceProvider#GetService(System.Type)">
      <summary>获取指定类型的服务（如果可用）。</summary>
      <returns>一个实现所请求服务的 <see cref="T:System.Object" />；如果无法解析该服务，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="serviceType">要检索的服务的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.System#Windows#Forms#IMessageFilter#PreFilterMessage(System.Windows.Forms.Message@)">
      <summary>在调度消息之前将其筛选出来。</summary>
      <returns>如果筛选消息并禁止消息被调度，则为 true；如果允许消息继续到达下一个筛选器或控件，则为 false。</returns>
      <param name="m">要调度的消息。 无法修改此消息。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的当前 <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle" />。</summary>
      <returns>描述屏幕上可见区域的 <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortSize">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的可见区域的大小。</summary>
      <returns>描述 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的可见区域的 Size。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar">
      <summary>获取与 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 关联的垂直滚动条。</summary>
      <returns>一个用于调整水平滚动条的设置和可见性的 <see cref="T:System.Windows.Forms.ScrollBar" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowView.WndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息。</summary>
      <param name="m">要处理的 Windows 消息。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowView.Zoom">
      <summary>获取或设置 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的缩放级别。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的缩放级别。</returns>
      <exception cref="T:System.NotSupportedException">如果缩放级别小于 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> 的最小缩放级别 - 或 - 如果缩放级别超过 <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> 的最大缩放级别。</exception>
    </member>
    <member name="E:System.Workflow.ComponentModel.Design.WorkflowView.ZoomChanged">
      <summary>当 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 的缩放设置更改时发生。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject">
      <summary>实现一个辅助功能对象，<see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 类使用该对象为残障用户调整设计器用户界面。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.#ctor(System.Workflow.ComponentModel.Design.WorkflowView)">
      <summary>使用指定的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" /> 类的新实例。</summary>
      <param name="workflowView">要与可访问对象关联的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.Bounds">
      <summary>获取辅助性对象的位置和大小。</summary>
      <returns>表示 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" /> 的边界的 <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.DefaultAction">
      <summary>获取描述可访问对象默认操作的字符串。 并非所有对象都有默认操作。</summary>
      <returns>一个字符串，其中包含 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" /> 的默认操作的说明；如果可访问对象没有默认操作，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.Description">
      <summary>获取描述指定可访问对象的可视外观的字符串。 并非所有可访问对象都有说明。</summary>
      <returns>向用户显示的 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" /> 视觉外观的说明；如果对象没有说明，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.GetChild(System.Int32)">
      <summary>返回与指定索引关联的可访问子对象。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.AccessibleObject" />，表示与指定索引对应的可访问子对象。</returns>
      <param name="index">要检索的可访问子对象的从零开始的索引。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.GetChildCount">
      <summary>检索属于 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" /> 的子级的个数。</summary>
      <returns>一个整数，表示属于 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" /> 的子对象的个数。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.Help">
      <summary>获取可访问对象用途或如何使用可访问对象的说明。</summary>
      <returns>一个字符串，其中包含 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" /> 的功能以及使用方式的说明；如果未定义帮助，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.Name">
      <summary>获取或设置辅助性对象名。</summary>
      <returns>包含 <see cref="T:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject" /> 名称的字符串；如果尚未设置属性，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)">
      <summary>定位到另一个辅助性对象。</summary>
      <returns>表示某一个 <see cref="T:System.Windows.Forms.AccessibleNavigation" /> 值的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
      <param name="navdir">
        <see cref="T:System.Windows.Forms.AccessibleNavigation" /> 值之一。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Design.WorkflowViewAccessibleObject.Role">
      <summary>获取辅助性对象的角色。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleRole" /> 值之一。 如果尚未指定角色，则返回 <see cref="F:System.Windows.Forms.AccessibleRole.None" /></returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager">
      <summary>管理在编译前将活动序列化到设计器生成的源代码段中的操作。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.#ctor(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager" /> 类的新实例。</summary>
      <param name="manager">与此实例关联的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>向序列化管理器添加指定的序列化提供程序。</summary>
      <param name="provider">要添加的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.Context">
      <summary>获取与 <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager" /> 关联的 <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />。</summary>
      <returns>与 <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager" /> 关联的 <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>创建指定类型的实例并将其添加到已命名实例的集合中。</summary>
      <returns>新创建的对象实例。</returns>
      <param name="type">要创建的数据 <see cref="T:System.Type" />。</param>
      <param name="arguments">要传递到指定类型构造函数的参数的 <see cref="T:System.Collections.ICollection" />。</param>
      <param name="name">分配给所生成对象的名称。 此名称可用于以后通过 <see cref="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.GetInstance(System.String)" /> 访问该对象。 如果传递了 null，则创建对象，但无法按名称访问该对象。</param>
      <param name="addToContainer">为 true 则将该对象添加到设计容器；否则为 false。 该对象必须实现 <see cref="T:System.ComponentModel.IComponent" /> 才能使此功能生效。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.GetInstance(System.String)">
      <summary>获取指定名称的 <see cref="T:System.Object" />；如果该 <see cref="T:System.Object" /> 不存在，则为 Null。</summary>
      <returns>指定名称的 <see cref="T:System.Object" />；如果该 <see cref="T:System.Object" /> 不存在，则为 Null。</returns>
      <param name="name">要获取的 <see cref="T:System.Object" /> 的名称。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.GetName(System.Object)">
      <summary>获取指定 <see cref="T:System.Object" /> 的名称；如果 <see cref="T:System.Object" /> 没有名称，则为 Null。</summary>
      <returns>一个包含 <see cref="T:System.Object" /> 的名称的 <see cref="T:System.String" />。</returns>
      <param name="value">要获取其名称的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>获取指定的 <see cref="T:System.Object" /> 类型的所请求类型的序列化程序。</summary>
      <returns>指定的 <see cref="T:System.Object" /> 类型的所请求类型的序列化程序。</returns>
      <param name="objectType">要为其获取序列化程序的 <see cref="T:System.Object" /> 的 <see cref="T:System.Type" />。</param>
      <param name="serializerType">要检索的序列化程序的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.GetService(System.Type)">
      <summary>获取一个 <see cref="T:System.Object" />，它提供指定的 <see cref="T:System.Type" /> 的服务。</summary>
      <returns>一个 <see cref="T:System.Object" />，它提供指定的 <see cref="T:System.Type" /> 的服务。</returns>
      <param name="serviceType">要提供的服务的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.GetType(System.String)">
      <summary>获取指定名称的 <see cref="T:System.Type" />。</summary>
      <returns>
        <see cref="T:System.Type" /> 的一个实例；如果不能加载 <see cref="T:System.Type" />，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="typeName">要加载的 <see cref="T:System.Type" /> 的完全限定名。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.Properties">
      <summary>获取一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，其中包含 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 类型的只读集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，其中包含 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 类型的只读集合。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>从序列化管理器移除自定义的序列化提供程序。</summary>
      <param name="provider">要移除的提供程序。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.ReportError(System.Object)">
      <summary>报告序列化中的错误。</summary>
      <param name="errorInformation">一个 <see cref="T:System.Object" />，其中包含要报告的错误。</param>
    </member>
    <member name="E:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.ResolveName">
      <summary>当 <see cref="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.GetName(System.Object)" /> 无法在序列化管理器名称表中找到指定名称时发生。</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.SerializationComplete">
      <summary>在序列化完成时发生。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.SerializationManager">
      <summary>获取与 <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager" /> 关联的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</summary>
      <returns>与 <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager" /> 关联的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializationManager.SetName(System.Object,System.String)">
      <summary>设置指定的现有 <see cref="T:System.Object" /> 的名称。</summary>
      <param name="instance">要命名的 <see cref="T:System.Object" /> 实例。</param>
      <param name="name">一个 <see cref="T:System.String" />，其中包含要为实例指定的名称。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer">
      <summary>表示一个类，该类在设计时为活动提供 CodeDOM 序列化服务。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer.MarkupFileNameProperty">
      <summary>要向其写入的标记文件的名称。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将指定的对象序列化为 CodeDOM 对象。</summary>
      <returns>一个 CodeDOM 对象，它表示已序列化的对象。</returns>
      <param name="manager">要在序列化过程中使用的序列化管理器。</param>
      <param name="obj">从 <see cref="T:System.Workflow.ComponentModel.Activity" /> 派生的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="obj" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> 无法转换为 <see cref="T:System.Workflow.ComponentModel.Activity" />。</exception>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer">
      <summary>在设计时为 <see cref="T:System.Workflow.ComponentModel.Activity" /> 提供可扩展应用程序标记语言 (XAML) 序列化服务。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)">
      <summary>使用指定的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> 创建指定 <see cref="T:System.Type" /> 的实例。</summary>
      <returns>对新创建的 <see cref="T:System.Object" /> 的引用。</returns>
      <param name="serializationManager">要在创建此实例时使用的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="type">要创建的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.EndColumnProperty">
      <summary>活动定义中最后一个字符的索引。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.EndLineProperty">
      <summary>活动定义中最后一行的索引。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.OnAfterSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>Notifies the <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer" /> that an object has just been serialized.</summary>
      <param name="serializationManager">管理序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">已序列化的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>向 <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer" /> 通知即将序列化对象。</summary>
      <param name="serializationManager">管理序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">要序列化的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" />、<paramref name="obj" /> 或 <paramref name="writer" /> 包含空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> 并不属于类型 <see cref="T:System.Workflow.ComponentModel.Activity" />。</exception>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.StartColumnProperty">
      <summary>活动定义中第一个字符的索引。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer.StartLineProperty">
      <summary>活动定义中第一行的索引。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector">
      <summary>选择可用于序列化 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的代理项。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector.Default">
      <summary>获取默认的 <see cref="T:System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector" />。 此属性是只读的。</summary>
      <returns>可用于序列化 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的默认 <see cref="T:System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivitySurrogateSelector.GetSurrogate(System.Type,System.Runtime.Serialization.StreamingContext,System.Runtime.Serialization.ISurrogateSelector@)">
      <summary>从指定序列化上下文的指定代理项选择器开始，查找表示指定类型的代理项。</summary>
      <returns>指定类型和上下文的适当代理项。</returns>
      <param name="type">要从中获取代理项的 <see cref="T:System.Type" />。</param>
      <param name="context">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" />，用作当前序列化的源上下文或目标上下文。</param>
      <param name="selector">当此方法返回时，将包含一个 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />，它持有一个指向从中找到合适代理项的代理项选择器的引用。 该参数未经初始化即被传递。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer">
      <summary>将 <see cref="T:System.Workflow.ComponentModel.Activity" /> 序列化为新类型。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>将指定的类型声明反序列化。</summary>
      <returns>反序列化的 <see cref="T:System.Object" />。</returns>
      <param name="manager">用于反序列化的序列化管理器。</param>
      <param name="declaration">用于反序列化的 <see cref="T:System.CodeDom.CodeTypeDeclaration" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary>返回存储用于序列化成员的语句的方法。</summary>
      <returns>用于发出给定成员的所有初始化代码的 <see cref="T:System.CodeDom.CodeMemberMethod" />。</returns>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="typeDecl">用于序列化的 <see cref="T:System.CodeDom.CodeTypeDeclaration" />。</param>
      <param name="value">用于序列化的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="typeDecl" /> 或 <paramref name="value" /> 包含空引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>返回要在反序列化期间解释的方法数组。</summary>
      <returns>要在序列化期间解释的方法的 <see cref="T:System.CodeDom.CodeMemberMethod" /> 数组。</returns>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="typeDecl">用于序列化的 <see cref="T:System.CodeDom.CodeTypeDeclaration" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="typeDecl" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary>通过创建定义指定对象的新类型声明，将该对象序列化。</summary>
      <returns>定义指定对象的 <see cref="T:System.CodeDom.CodeTypeDeclaration" />。</returns>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="root">将要序列化的 <see cref="T:System.Object" />。</param>
      <param name="members">可选的成员集合。 可以为空引用（在 Visual Basic 中为 Nothing）或为空集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="root" /> 包含空引用 (Nothing)。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="root" /> 无法转换为 <see cref="T:System.Workflow.ComponentModel.Activity" />。</exception>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.CompositeActivityMarkupSerializer">
      <summary>为 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> 提供可扩展应用程序标记语言 (XAML) 序列化服务。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.CompositeActivityMarkupSerializer.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.CompositeActivityMarkupSerializer" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.ConstructorArgumentAttribute">
      <summary>传送修饰类的参数名称信息。此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ConstructorArgumentAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.ConstructorArgumentAttribute" /> 类的新实例，同时初始化 <see cref="P:System.Workflow.ComponentModel.Serialization.ConstructorArgumentAttribute.ArgumentName" /> 属性。</summary>
      <param name="argumentName">包含参数名称的 string。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.ConstructorArgumentAttribute.ArgumentName">
      <summary>获取表示参数名称的 string。</summary>
      <returns>表示参数名称的 string。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute">
      <summary>包含修饰类的内容属性的名称。使用此属性 (Attribute) 标记某个类型时，将导致序列化该类型的数据，但不带封闭的属性 (Property) 名称标记。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute" /> 类的新实例，同时初始化 <see cref="P:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute.Name" /> 属性。</summary>
      <param name="name">一个 <see cref="T:System.String" />，其中包含 <see cref="P:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute.Name" /> 属性的值。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute.Name">
      <summary>获取表示内容属性的名称的 <see cref="T:System.String" />。</summary>
      <returns>表示内容属性的名称的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer">
      <summary>提供带有 CodeDOM 序列化服务的 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 对象。 这是其他 CodeDOM 序列化程序（例如 <see cref="T:System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer" />）所继承的基类。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将指定的对象序列化为 CodeDOM 对象。</summary>
      <returns>一个 CodeDOM 对象，它表示已序列化的对象。</returns>
      <param name="manager">要在序列化过程中使用的序列化管理器。</param>
      <param name="obj">将要序列化的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="obj" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj " />无法转换为 <see cref="T:System.Workflow.ComponentModel.DependencyObject" />。</exception>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.MarkupExtension">
      <summary>表示类型的所有标记扩展的抽象类。 必须继承此类。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.MarkupExtension.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.MarkupExtension" /> 类的新实例。必须继承此类。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.MarkupExtension.ProvideValue(System.IServiceProvider)">
      <summary>在派生类中重写时，有选择地使用 <see cref="T:System.IServiceProvider" /> 为基础类型提供值。</summary>
      <returns>表示封装类型的 <see cref="T:System.Object" />。</returns>
      <param name="provider">指定的 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.RuntimeNamePropertyAttribute">
      <summary>传送使用此 <see cref="T:System.Attribute" /> 修饰的 <see cref="T:System.Object" /> 的运行时名称。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.RuntimeNamePropertyAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.RuntimeNamePropertyAttribute" /> 类的新实例，同时初始化此实例的 <see cref="P:System.Workflow.ComponentModel.Serialization.RuntimeNamePropertyAttribute.Name" />。</summary>
      <param name="name">一个 string，其中包含与此实例关联的名称。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.RuntimeNamePropertyAttribute.Name">
      <summary>获取由此实例传送的运行时名称。</summary>
      <returns>一个 string，其中包含由此实例传送的运行时名称。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException">
      <summary>由执行序列化和反序列化的方法引发的异常。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化数据初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> 类的新实例。</summary>
      <param name="info">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，其中包含有关要引发的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> 的序列化对象数据。</param>
      <param name="context">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" />，其中包含有关序列化程序所使用的位的源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.#ctor(System.String)">
      <summary>使用指定的错误消息初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> 类的新实例。</summary>
      <param name="message">包含描述错误的消息的字符串。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.#ctor(System.String,System.Exception)">
      <summary>使用错误消息和异常初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> 类的新实例。</summary>
      <param name="message">包含描述错误的消息的字符串。</param>
      <param name="innerException">导致 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> 的异常。如果 <paramref name="innerException" /> 不是空引用（在 Visual Basic 中为 Nothing），则在处理内部异常的 Catch 块中引发当前异常。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>使用错误消息、异常以及导致引发异常的行和列的编号来初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> 类的新实例。</summary>
      <param name="message">包含描述错误的消息的字符串。</param>
      <param name="innerException">导致 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> 的异常。 如果 <paramref name="innerException" /> 不是空引用（在 Visual Basic 中为 Nothing），则在处理内部异常的 Catch 块中引发当前异常。</param>
      <param name="lineNumber">对象或 XOML 文件中导致引发异常的行号。</param>
      <param name="columnNumber">对象或 XOML 文件中导致引发异常的列位置。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.#ctor(System.String,System.Int32,System.Int32)">
      <summary>使用错误消息以及导致引发异常的行和列的编号来初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> 类的新实例。</summary>
      <param name="message">包含描述错误的消息的字符串。</param>
      <param name="lineNumber">对象或 XOML 文件中导致引发异常的行号。</param>
      <param name="columnNumber">对象或 XOML 文件中导致引发异常的列位置。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用有关 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> 的信息设置指定的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，其中包含有关要引发的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException" /> 的序列化对象数据。</param>
      <param name="context">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" />，其中包含有关序列化程序所使用的位的源或目标的上下文信息。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.LineNumber">
      <summary>获取对象或 XOML 文件中导致引发异常的行号。</summary>
      <returns>一个整数，表示在该行上引发异常的行号。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationException.LinePosition">
      <summary>获取对象或 XOML 文件中导致引发异常的列位置。</summary>
      <returns>一个整数，表示导致引发异常的列位置。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager">
      <summary>管理工作流的与可扩展应用程序标记语言 (XAML) 之间的设计时序列化。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.#ctor(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>使用指定的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> 类的新实例。</summary>
      <param name="manager">用于初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> 的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>向序列化管理器添加指定的序列化提供程序。</summary>
      <param name="provider">要相加的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context">
      <summary>获取基于堆栈的、用户定义的存储区域，该区域对于序列化程序之间的通讯十分有用。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />，其中包含有关当前要序列化的对象的信息。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>为指定类型的对象返回指定类型的序列化程序。</summary>
      <returns>请求的序列化程序；如果找不到适当的序列化程序，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="objectType">要为其检索序列化程序的 <see cref="T:System.Type" />。</param>
      <param name="serializerType">要检索的序列化程序的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetService(System.Type)">
      <summary>返回指定类型的服务对象。</summary>
      <returns>类型为 <paramref name="serviceType" /> 的服务对象；如果不存在类型为 <paramref name="serviceType" /> 的服务对象，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="serviceType">要返回的服务对象的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetType(System.String)">
      <summary>返回指定名称的类型。</summary>
      <returns>与 <paramref name="typeName" /> 关联的 <see cref="T:System.Type" />。</returns>
      <param name="typeName">要加载的 <see cref="T:System.Type" /> 的完全限定名。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetType(System.Xml.XmlQualifiedName)">
      <summary>返回与指定 XML 限定名关联的类型。</summary>
      <returns>与 <paramref name="xmlQualifiedName" /> 关联的 <see cref="T:System.Type" />。</returns>
      <param name="xmlQualifiedName">要加载的类型的 <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlQualifiedName" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetXmlQualifiedName(System.Type,System.String@)">
      <summary>返回与指定类型关联的 XML 限定名。</summary>
      <returns>与 <paramref name="type" /> 关联的 <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
      <param name="type">要返回其 XML 限定名的 <see cref="T:System.Type" />。</param>
      <param name="prefix">当此方法返回时，包含限定名的 XML 前缀；如果没有定义前缀，则为空字符串。 该参数未经初始化即被传递。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.LocalAssembly">
      <summary>获取或设置与当前序列化程序关联的程序集。</summary>
      <returns>与当前序列化程序关联的 <see cref="T:System.Reflection.Assembly" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>从 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> 移除自定义的序列化提供程序。</summary>
      <param name="provider">要移除的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />。 必须已使用 <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" /> 添加此提供程序。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.ReportError(System.Object)">
      <summary>报告序列化中的错误。</summary>
      <param name="errorInformation">要报告的错误。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.SerializationManager">
      <summary>获取或设置与当前序列化程序一起使用的序列化管理器。</summary>
      <returns>要与当前序列化程序一起使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</returns>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>创建指定类型的实例并将其添加到已命名实例的集合中。</summary>
      <returns>新创建的对象。</returns>
      <param name="type">要创建的 <see cref="T:System.Type" />。</param>
      <param name="arguments">一个 <see cref="T:System.Collections.ICollection" />，其中包含 <paramref name="type" /> 的参数。</param>
      <param name="name">对象的名称。 此名称可用于以后通过 <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /> 访问该对象。 如果传递了空引用（在 Visual Basic 中为 Nothing），则仍会创建对象，但不能按名称访问该对象。</param>
      <param name="addToContainer">为 true 则将该对象添加到设计容器；否则为 false。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary>返回具有指定名称的已创建对象的实例。</summary>
      <returns>具有给定名称的对象的实例；如果按该名称找不到任何对象，则为空引用（在 Visual Basic 中为 Nothing。</returns>
      <param name="name">要检索的对象名。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary>返回指定对象的名称。</summary>
      <returns>对象的名称；如果对象未命名，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="value">要检索其名称的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary>获取可通过可用序列化程序进行序列化的属性的集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，其中包含要序列化的属性。</returns>
    </member>
    <member name="E:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary>当 <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)" /> 无法在序列化管理器的名称表中找到指定名称时发生。</summary>
    </member>
    <member name="E:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary>在序列化完成时发生。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary>设置指定的现有对象的名称。</summary>
      <param name="instance">要命名的对象。</param>
      <param name="name">要分配给对象的名称。</param>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer">
      <summary>在设计时为工作流提供可扩展应用程序标记语言 (XAML) 序列化服务。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object,System.Object)">
      <summary>将子对象添加到指定的对象中。</summary>
      <param name="serializationManager">要在此操作中使用的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="parentObject">要将子对象添加到其中的 <see cref="T:System.Object" />。</param>
      <param name="childObj">要相加的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentObject" /> 或<paramref name=" childObj" /> 包含空引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>返回一个布尔值，该值指示能否将指定的对象序列化为字符串。</summary>
      <returns>如果指定对象可以序列化为字符串，则为 true；否则为 false。</returns>
      <param name="serializationManager">用于序列化此对象的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="value">指定的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>从指定对象中移除所有子对象。</summary>
      <param name="serializationManager">支持此操作的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">从中移除所有子对象的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty">
      <summary>表示一个附加的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />，它用于定义供自定义活动引用的程序集。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)">
      <summary>使用指定的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> 创建指定 <see cref="T:System.Type" /> 的实例。</summary>
      <returns>指定的 <see cref="T:System.Type" /> 的实例。</returns>
      <param name="serializationManager">支持此操作的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="type">指定的 <see cref="T:System.Type" /></param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlReader)">
      <summary>使用指定的序列化管理器将工作流标记反序列化为 <see cref="T:System.Object" />。</summary>
      <returns>一个 <see cref="T:System.Object" />，其中包含在工作流标记文件或流中定义的工作流的定义。</returns>
      <param name="serializationManager">一个实现 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 接口的对象，例如 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />。</param>
      <param name="reader">一个 <see cref="T:System.Xml.XmlReader" />，它包含工作流定义。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>将工作流标记反序列化为 <see cref="T:System.Object" />。</summary>
      <returns>一个 <see cref="T:System.Object" />，其中包含在工作流标记文件或流中定义的工作流的定义。</returns>
      <param name="reader">一个 <see cref="T:System.Xml.XmlReader" />，它包含工作流定义。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type,System.String)">
      <summary>根据要反序列化的给定类型的属性，反序列化指定字符串中的可扩展应用程序标记语言 (XAML) 内容。</summary>
      <returns>反序列化的 <see cref="T:System.Object" />。</returns>
      <param name="serializationManager">管理反序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="propertyType">与要反序列化的属性关联的 <see cref="T:System.Type" />。</param>
      <param name="value">包含要反序列化的 XAML 的字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" />、<paramref name="propertyType" /> 或 <paramref name="value" /> 包含空引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty">
      <summary>表示一个附加的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />，它定义事件处理程序属性的名称。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>检索指定对象的子对象的列表</summary>
      <returns>一个 <see cref="T:System.Collections.IList" />，其中包含 <paramref name="obj" /> 的子对象。</returns>
      <param name="serializationManager">支持此操作的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">从中检索子对象的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 或 <paramref name="serializationManager" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>检索有关与指定 <see cref="T:System.Object" /> 关联的所有事件的信息。</summary>
      <returns>一个 <see cref="T:System.Reflection.EventInfo" /> 数组，其中包含有关与 <paramref name="obj" /> 关联的事件的信息。</returns>
      <param name="serializationManager">管理反序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">要搜索事件对象的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 或 <paramref name="obj" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>检索有关与指定对象关联的所有属性的信息。</summary>
      <returns>一个 <see cref="T:System.Reflection.PropertyInfo" /> 数组，其中包含有关与 <paramref name="obj" /> 关联的属性的信息。</returns>
      <param name="serializationManager">管理序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">要搜索属性的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 或 <paramref name="obj" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>重写。 向 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> 通知刚反序列化了一个对象。</summary>
      <param name="serializationManager">管理序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">已执行反序列化的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>向 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> 通知刚序列化了一个对象。</summary>
      <param name="serializationManager">管理序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">已序列化的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>重写。 向 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> 通知即将反序列化一个对象。</summary>
      <param name="serializationManager">管理反序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">已执行反序列化的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>向 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> 通知即将运行 <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)" />。</summary>
      <param name="serializationManager">管理序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="obj">要序列化的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlWriter,System.Object)">
      <summary>使用指定的序列化管理器，将指定的 <see cref="T:System.Object" /> 序列化到工作流标记文件或流中。</summary>
      <param name="serializationManager">一个实现 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 接口的对象，例如 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />。</param>
      <param name="writer">一个 <see cref="T:System.Xml.XmlWriter" />，其中包含在序列化时使用的流或文件。</param>
      <param name="obj">要序列化的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>将指定的 <see cref="T:System.Object" /> 序列化到工作流标记文件或流中。</summary>
      <param name="writer">一个 <see cref="T:System.Xml.XmlWriter" />，其中包含在序列化时使用的流或文件。</param>
      <param name="obj">要序列化的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>将指定的 <see cref="T:System.Object" /> 序列化为字符串。</summary>
      <returns>一个字符串，包含已序列化的 <see cref="T:System.Object" />。</returns>
      <param name="serializationManager">管理序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="value">要序列化为字符串的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 或 <paramref name="value" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
      <summary>返回一个值，该值指示 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> 是否应序列化指定的 <see cref="T:System.Object" />。</summary>
      <returns>为 true 则指示应序列化 <paramref name="value" />；否则为 false。</returns>
      <param name="serializationManager">管理序列化过程的 <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />。</param>
      <param name="value">要检查的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializationManager" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty">
      <summary>表示一个附加的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />，它定义将在编译期间创建的类型名。</summary>
    </member>
    <member name="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty">
      <summary>表示嵌入到 XAML x:Code 元素中的代码示例。</summary>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute">
      <summary>可以选择性应用到工作流程序集。 它定义公共语言运行时命名空间（在当前程序集中定义）与 XML 命名空间之间的映射。 当使用在程序集（该程序集使用此属性修饰）中定义的活动或工作流时，可扩展应用程序标记语言 (XAML) 序列化/反序列化中将使用此信息。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute" /> 类的新实例，同时初始化 <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.XmlNamespace" /> 和 <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.ClrNamespace" /> 属性。</summary>
      <param name="xmlNamespace">一个 <see cref="T:System.String" />，其中包含 <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.XmlNamespace" /> 的值。</param>
      <param name="clrNamespace">一个 <see cref="T:System.String" />，其中包含 <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.ClrNamespace" /> 的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.AssemblyName">
      <summary>获取或设置一个 <see cref="T:System.String" />，它表示修饰类的 <see cref="P:System.Type.Assembly" /> 名称。</summary>
      <returns>一个 <see cref="T:System.String" />，它表示修饰类的 <see cref="P:System.Type.Assembly" /> 名称。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.ClrNamespace">
      <summary>获取一个 <see cref="T:System.String" />，它表示修饰类的 CLR 命名空间的名称。</summary>
      <returns>一个 <see cref="T:System.String" />，它表示修饰类的 CLR 命名空间的名称。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute.XmlNamespace">
      <summary>获取一个 <see cref="T:System.String" />，它表示修饰类的 XML 命名空间的名称。</summary>
      <returns>一个 <see cref="T:System.String" />，它表示修饰类的 XML 命名空间的名称。</returns>
    </member>
    <member name="T:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute">
      <summary>包含修饰类的 XML 命名空间和前缀信息。此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute" /> 类的新实例，同时初始化 <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute.XmlNamespace" /> 和 <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute.Prefix" />。</summary>
      <param name="xmlNamespace">一个 <see cref="T:System.String" />，其中包含 <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute.XmlNamespace" /> 的值。</param>
      <param name="prefix">一个 <see cref="T:System.String" />，其中包含 <see cref="P:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute.Prefix" /> 的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute.Prefix">
      <summary>获取包含修饰类的前缀值的 <see cref="T:System.String" />。</summary>
      <returns>包含修饰类的前缀值的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute.XmlNamespace">
      <summary>获取包含修饰类的 XML 命名空间值的 <see cref="T:System.String" />。</summary>
      <returns>包含修饰类的 XML 命名空间值的 <see cref="T:System.String" />。</returns>
    </member>
  </members>
</doc>