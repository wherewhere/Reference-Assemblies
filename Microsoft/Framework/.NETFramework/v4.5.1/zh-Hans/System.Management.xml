<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Management</name>
  </assembly>
  <members>
    <member name="T:System.Management.AuthenticationLevel">
      <summary>描述连接到 WMI 所使用的身份验证级别。 它用于到 WMI 的 COM 连接。</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Call">
      <summary>调用级的 COM 身份验证。</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Connect">
      <summary>连接级的 COM 身份验证。</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Default">
      <summary>默认的 COM 身份验证级别。 WMI 使用默认的“Windows 身份验证”设置。</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.None">
      <summary>没有 COM 身份验证。</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Packet">
      <summary>数据包级的 COM 身份验证。</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.PacketIntegrity">
      <summary>数据包完整性级别的 COM 身份验证。</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.PacketPrivacy">
      <summary>数据包保密性级别的 COM 身份验证。</summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Unchanged">
      <summary>身份验证级别应保留以前的状况。</summary>
    </member>
    <member name="T:System.Management.CimType">
      <summary>描述属性、限定符或方法参数的可能 CIM 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.Boolean">
      <summary>一个布尔值。 该值映射为 <see cref="T:System.Boolean" /> 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.Char16">
      <summary>16 位字符。 该值映射为 <see cref="T:System.Char" /> 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.DateTime">
      <summary>字符串中以 DMTF 日期/时间格式 yyyymmddHHMMSS.mmmmmmsUUU 表示的日期或时间值，其中 yyyymmdd 是“年/月/日”格式的日期；HHMMSS 是“小时/分钟/秒”格式的时间；mmmmmm 是 6 位数的微秒数；sUUU 是符号（+ 或 -）和 3 位数的 UTC 偏移量。 该值映射为 <see cref="T:System.DateTime" /> 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.None">
      <summary>null 值。</summary>
    </member>
    <member name="F:System.Management.CimType.Object">
      <summary>嵌套的对象。 注意，嵌套的对象与引用的不同之处在于：嵌套的对象没有路径，并且它的生存期与包含对象的生存期完全相同。 该值映射为 <see cref="T:System.Object" /> 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.Real32">
      <summary>32 位浮点数。 该值映射为 <see cref="T:System.Single" /> 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.Real64">
      <summary>64 位浮点数。 该值映射为 <see cref="T:System.Double" /> 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.Reference">
      <summary>对另一对象的引用。 它由包含所引用对象的路径的字符串表示。 该值映射为 <see cref="T:System.Int16" /> 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.SInt16">
      <summary>一个有符号的 16 位整数。 该值映射为 <see cref="T:System.Int16" /> 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.SInt32">
      <summary>一个有符号的 32 位整数。 该值映射为 <see cref="T:System.Int32" /> 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.SInt64">
      <summary>一个有符号的 64 位整数。 该值映射为 <see cref="T:System.Int64" /> 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.SInt8">
      <summary>一个有符号的 8 位整数。 该值映射为 <see cref="T:System.SByte" /> 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.String">
      <summary>一个字符串。 该值映射为 <see cref="T:System.String" /> 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.UInt16">
      <summary>16 位无符号整数。 该值映射为 <see cref="T:System.UInt16" /> 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.UInt32">
      <summary>32 位无符号整数。 该值映射为 <see cref="T:System.UInt32" /> 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.UInt64">
      <summary>64 位无符号整数。 该值映射为 <see cref="T:System.UInt64" /> 类型。</summary>
    </member>
    <member name="F:System.Management.CimType.UInt8">
      <summary>8 位无符号整数。 该值映射为 <see cref="T:System.Byte" /> 类型。</summary>
    </member>
    <member name="T:System.Management.CodeLanguage">
      <summary>定义代码生成器支持的语言。</summary>
    </member>
    <member name="F:System.Management.CodeLanguage.CSharp">
      <summary>用于生成 C# 代码的值。</summary>
    </member>
    <member name="F:System.Management.CodeLanguage.JScript">
      <summary>用于生成 JScript 代码的值。</summary>
    </member>
    <member name="F:System.Management.CodeLanguage.Mcpp">
      <summary>用于生成托管 C++ 代码的值。</summary>
    </member>
    <member name="F:System.Management.CodeLanguage.VB">
      <summary>用于生成 Visual Basic 代码的值。</summary>
    </member>
    <member name="F:System.Management.CodeLanguage.VJSharp">
      <summary>用于生成 Visual J# 代码的值。</summary>
    </member>
    <member name="T:System.Management.ComparisonSettings">
      <summary>描述可以用于 <see cref="M:System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)" /> 的对象比较模式。 注意，这些值可以组合。</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreCase">
      <summary>一种以不区分大小写的方式比较字符串值的模式。 此模式适用于字符串和限定符值。 无论是否指定了此标志，都会始终以不区分大小写的方式比较属性名称和限定符名称。 值：16。</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreClass">
      <summary>一种模式，该模式假定要比较的对象是同一个类的实例。 因此，此值只比较与实例相关的信息。 使用此标志可优化性能。 如果这些对象不属于同一类，则结果不确定。 值：8。</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreDefaultValues">
      <summary>一种忽略属性的默认值的模式。 此值仅在比较类时才有意义。 值：4。</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreFlavor">
      <summary>一种忽略限定符风格的模式。 此标志仍会将限定符值考虑在内，但会忽略风格差别（如传播规则和重写限制）。 值：32。</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreObjectSource">
      <summary>一种模式，它在将对象与其他对象进行比较时会忽略对象的源（即对象来自的服务器和命名空间）。 值：2。</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreQualifiers">
      <summary>一种比较对象的模式，该模式忽略限定符。 值：1。</summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IncludeAll">
      <summary>一种比较所比较对象的所有元素的模式。 值：0。</summary>
    </member>
    <member name="T:System.Management.CompletedEventArgs">
      <summary>保存 <see cref="E:System.Management.ManagementOperationObserver.Completed" /> 事件的事件数据。</summary>
    </member>
    <member name="P:System.Management.CompletedEventArgs.Status">
      <summary>获取操作的完成状态。</summary>
      <returns>返回一个 <see cref="T:System.Management.ManagementStatus" /> 枚举值。</returns>
    </member>
    <member name="P:System.Management.CompletedEventArgs.StatusObject">
      <summary>获取 WMI 对象内的其他状态信息。 这可能为 null。</summary>
      <returns>返回一个 <see cref="T:System.Management.ManagementBaseObject" />，它包含有关操作完成情况的状态信息。</returns>
    </member>
    <member name="T:System.Management.CompletedEventHandler">
      <summary>表示将处理 <see cref="E:System.Management.ManagementOperationObserver.Completed" /> 事件的方法。</summary>
      <param name="sender">要为其调用此方法的对象的实例。</param>
      <param name="e">
        <see cref="T:System.Management.CompletedEventArgs" />，指定事件调用原因。</param>
    </member>
    <member name="T:System.Management.ConnectionOptions">
      <summary>指定生成 WMI 连接所需的所有设置。</summary>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor">
      <summary>使用默认值，为连接操作初始化 <see cref="T:System.Management.ConnectionOptions" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor(System.String,System.String,System.Security.SecureString,System.String,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.Boolean,System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>创建新的 ConnectionOption。</summary>
      <param name="locale">将用于连接的区域设置。</param>
      <param name="username">将用于连接的用户名。 如果为 null，则使用当前已登录用户的凭据。</param>
      <param name="password">给定的用户名的密码。 如果用户名也为 null，则使用的凭据将是当前已登录用户的凭据。</param>
      <param name="authority">将用于验证指定用户的授权。</param>
      <param name="impersonation">将用于连接的 COM 模拟级别。</param>
      <param name="authentication">将用于连接的 COM 身份验证级别。</param>
      <param name="enablePrivileges">若为 true，则启用特殊的用户特权；否则为 false。 只有在执行需要特殊的 Windows NT 用户特权的操作时，才应使用此参数。</param>
      <param name="context">要传递给提供程序的、提供程序特定的名称-值对对象。</param>
      <param name="timeout">保留供将来使用。</param>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor(System.String,System.String,System.String,System.String,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.Boolean,System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>使用指定的值，初始化将用于 WMI 连接的 <see cref="T:System.Management.ConnectionOptions" /> 类的新实例。</summary>
      <param name="locale">将用于连接的区域设置。</param>
      <param name="username">将用于连接的用户名。 如果为 null，则使用当前已登录用户的凭据。</param>
      <param name="password">给定的用户名的密码。 如果用户名也为 null，则使用的凭据将是当前已登录用户的凭据。</param>
      <param name="authority">将用于验证指定用户的授权。</param>
      <param name="impersonation">将用于连接的 COM 模拟级别。</param>
      <param name="authentication">将用于连接的 COM 身份验证级别。</param>
      <param name="enablePrivileges">若为 true，则启用特殊的用户特权；否则为 false。 只有在执行需要特殊的 Windows NT 用户特权的操作时，才应使用此参数。</param>
      <param name="context">要传递给提供程序的、提供程序特定的名称-值对对象。</param>
      <param name="timeout">保留供将来使用。</param>
    </member>
    <member name="P:System.Management.ConnectionOptions.Authentication">
      <summary>获取或设置用于此连接中的操作的 COM 身份验证级别。</summary>
      <returns>返回 <see cref="T:System.Management.AuthenticationLevel" /> 枚举值，该值指示连接到本地或远程计算机时使用的 COM 身份验证级别。</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Authority">
      <summary>获取或设置将用于验证指定用户的授权。</summary>
      <returns>返回 <see cref="T:System.String" />，它定义了用于对指定用户进行身份验证的授权。</returns>
    </member>
    <member name="M:System.Management.ConnectionOptions.Clone">
      <summary>返回对象的一个副本。</summary>
      <returns>克隆的对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ConnectionOptions.EnablePrivileges">
      <summary>获取或设置一个值，该值指示是否需要为连接操作启用用户特权。 只有在执行的操作需要启用某种用户特权（例如，重新启动计算机）时，才应使用此属性。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示是否需要为连接操作启用用户特权。</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Impersonation">
      <summary>获取或设置用于此连接中的操作的 COM 模拟级别。</summary>
      <returns>返回 <see cref="T:System.Management.ImpersonationLevel" /> 枚举值，该值指示用于连接到 WMI 的模拟级别。</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Locale">
      <summary>获取或设置将用于连接操作的区域设置。</summary>
      <returns>返回 <see cref="T:System.String" /> 值，该值用于连接到 WMI 时使用的区域设置。</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Password">
      <summary>设置指定用户的密码。</summary>
      <returns>返回 <see cref="T:System.String" /> 值，该值用于连接到 WMI 时使用的密码。</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.SecurePassword">
      <summary>设置指定用户的密码。</summary>
      <returns>返回用于连接到 WMI 所使用密码的 SecureString 值。</returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Username">
      <summary>获取或设置将用于连接操作的用户名。</summary>
      <returns>返回 <see cref="T:System.String" /> 值，该值用作连接到 WMI 时使用的用户名。</returns>
    </member>
    <member name="T:System.Management.DeleteOptions">
      <summary>指定用于删除管理对象的选项。</summary>
    </member>
    <member name="M:System.Management.DeleteOptions.#ctor">
      <summary>使用默认值为删除操作初始化 <see cref="T:System.Management.DeleteOptions" /> 类的一个新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.DeleteOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>使用指定的值为删除操作初始化 <see cref="T:System.Management.DeleteOptions" /> 类的一个新实例。</summary>
      <param name="context">要传递给提供程序的、提供程序特定的名称-值对对象。</param>
      <param name="timeout">在操作超时之前允许其执行的时间。 默认值为 <see cref="F:System.TimeSpan.MaxValue" />。 设置此参数将半同步地调用该操作。</param>
    </member>
    <member name="M:System.Management.DeleteOptions.Clone">
      <summary>返回对象的一个副本。</summary>
      <returns>克隆的对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.EnumerationOptions">
      <summary>为查询和枚举相关的选项对象提供基类。</summary>
    </member>
    <member name="M:System.Management.EnumerationOptions.#ctor">
      <summary>使用默认值（有关默认值的内容，请参见各属性的说明）初始化 <see cref="T:System.Management.EnumerationOptions" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.EnumerationOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>初始化将用于查询或枚举的 <see cref="T:System.Management.EnumerationOptions" /> 类的一个新实例，从而允许用户指定不同选项的值。</summary>
      <param name="context">包含可传递给提供程序的、提供程序特定的信息的选项上下文对象。</param>
      <param name="timeout">对结果进行枚举时的超时值。</param>
      <param name="blockSize">从 WMI 一次检索的项数。</param>
      <param name="rewindable">如果要显示结果集是可回退的（允许多次遍历），则为 true；否则为 false。</param>
      <param name="returnImmediatley">如果要显示操作应立即返回（半同步）还是应先阻止直到所有结果都可用后再返回，则为 true；否则为 false。</param>
      <param name="useAmendedQualifiers">如果要显示返回的对象应包含已修正的（可识别区域设置的）限定符，则为 true；否则为 false。</param>
      <param name="ensureLocatable">如果要确保所有返回的对象都有有效的路径，则为 true；否则为 false。</param>
      <param name="prototypeOnly">若为 true，则返回结果集的原型而不返回实际结果；否则为 false。</param>
      <param name="directRead">如果要指定是只检索指定类的对象还是也检索派生类的对象，则为 true；否则为 false。</param>
      <param name="enumerateDeep">如果在子类中使用递归枚举，为 true；否则为 false。</param>
    </member>
    <member name="P:System.Management.EnumerationOptions.BlockSize">
      <summary>获取或设置块操作的块大小。 在对整个集合进行枚举时，WMI 将按指定大小的组返回结果。</summary>
      <returns>返回一个 <see cref="T:System.Int32" /> 值，该值用于块操作中的块大小。</returns>
    </member>
    <member name="M:System.Management.EnumerationOptions.Clone">
      <summary>返回对象的一个副本。</summary>
      <returns>克隆的对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.EnumerationOptions.DirectRead">
      <summary>获取或设置一个值，该值指示是否为指定类请求直接访问 WMI 提供程序，而不考虑其超类或派生类。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示是否为指定类请求直接访问 WMI 提供程序。</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.EnsureLocatable">
      <summary>获取或设置一个值，该值指示返回的对象中是否应该有可定位信息。 这可确保系统属性（如 __PATH、__RELPATH 和 __SERVER）非 null。 此标志只能用在查询中，而在枚举中会被忽略。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示返回的对象是否应包含可定位信息。</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.EnumerateDeep">
      <summary>获取或设置一个值，该值指示是否将递归枚举请求到从指定的超类派生的所有类中。 如果为 false，则仅返回直接派生类成员。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示是否将递归枚举请求到从指定的超类派生的所有类中。</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.PrototypeOnly">
      <summary>获取或设置一个值，该值指示查询是否应返回结果集的原型而不返回实际结果。 此标志用于获取原型。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示查询是否应返回结果集的原型而不返回实际的结果。</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.ReturnImmediately">
      <summary>获取或设置一个值，该值指示调用的操作应以同步方式或半同步方式执行。 如果此属性设置为 true，则会调用枚举，并且调用会立即返回。 遍历结果集合后，将出现实际的检索结果。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示调用的操作应以同步方式执行还是以半同步方式执行。</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.Rewindable">
      <summary>获取或设置一个值，该值指示是否将集合假定为可重绕。 如果为 true，则集合中的对象将保持以便用于多次枚举。 如果为 false，则只能将集合枚举一次。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示是否将集合假定为可回退。</returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.UseAmendedQualifiers">
      <summary>获取或设置一个值，该值指示从 WMI 返回的对象是否应包含已修正信息。 通常，已修正信息就是附加在 WMI 对象上的可本地化信息，如对象和属性说明。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示从 WMI 返回的对象是否应包含已修正的信息。</returns>
    </member>
    <member name="T:System.Management.EventArrivedEventArgs">
      <summary>保存 <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> 事件的事件数据。</summary>
    </member>
    <member name="P:System.Management.EventArrivedEventArgs.NewEvent">
      <summary>获取上次传递的 WMI 事件。</summary>
      <returns>返回 <see cref="T:System.Management.ManagementBaseObject" />，它包含已传递的 WMI 事件。</returns>
    </member>
    <member name="T:System.Management.EventArrivedEventHandler">
      <summary>表示将处理 <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> 事件的方法。</summary>
      <param name="sender">要为其调用此方法的对象的实例。</param>
      <param name="e">指定事件调用原因的 <see cref="T:System.Management.EventArrivedEventArgs" />。</param>
    </member>
    <member name="T:System.Management.EventQuery">
      <summary>表示一个 WMI 事件查询。</summary>
    </member>
    <member name="M:System.Management.EventQuery.#ctor">
      <summary>初始化 <see cref="T:System.Management.EventQuery" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.EventQuery.#ctor(System.String)">
      <summary>为指定的查询初始化 <see cref="T:System.Management.EventQuery" /> 类的新实例。</summary>
      <param name="query">
        <paramref name="event query" /> 的文本化表示形式。</param>
    </member>
    <member name="M:System.Management.EventQuery.#ctor(System.String,System.String)">
      <summary>根据指定的语言和查询初始化 <see cref="T:System.Management.EventQuery" /> 类的新实例。</summary>
      <param name="language">指定查询字符串所用语言。</param>
      <param name="query">查询的字符串表示形式。</param>
    </member>
    <member name="M:System.Management.EventQuery.Clone">
      <summary>返回对象的一个副本。</summary>
      <returns>克隆的对象。</returns>
    </member>
    <member name="T:System.Management.EventWatcherOptions">
      <summary>指定用于管理事件监视的选项。</summary>
    </member>
    <member name="M:System.Management.EventWatcherOptions.#ctor">
      <summary>使用默认值为事件监视初始化 <see cref="T:System.Management.EventWatcherOptions" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.EventWatcherOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32)">
      <summary>使用给定的值初始化 <see cref="T:System.Management.EventWatcherOptions" /> 类的新实例。</summary>
      <param name="context">包含要传递给提供程序的、提供程序特定的信息的选项上下文对象。</param>
      <param name="timeout">等待下一个事件的超时时间。</param>
      <param name="blockSize">每个块中要等待的事件数。</param>
    </member>
    <member name="P:System.Management.EventWatcherOptions.BlockSize">
      <summary>获取或设置块操作的块大小。 等待事件时，此值指定返回前要等待多少事件。</summary>
      <returns>返回一个 <see cref="T:System.Int32" /> 值，该值指示块操作的块大小。</returns>
    </member>
    <member name="M:System.Management.EventWatcherOptions.Clone">
      <summary>返回对象的一个副本。</summary>
      <returns>克隆的对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ImpersonationLevel">
      <summary>描述连接到 WMI 时将使用的模拟级别。</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Anonymous">
      <summary>隐藏调用方身份的匿名 COM 模拟级别。 在此模拟级别上对 WMI 的调用可能会失败。</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Default">
      <summary>默认模拟。</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Delegate">
      <summary>委托级别的 COM 模拟级别，该级别使对象可以允许其他对象使用调用方的凭据。 此级别将用于 WMI 调用，但可能形成不必要的安全风险，只有 Windows 2000 才支持此级别。</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Identify">
      <summary>标识级别的 COM 模拟级别，该级别使对象能够查询调用方的凭据。 在此模拟级别上对 WMI 的调用可能会失败。</summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Impersonate">
      <summary>模拟级别的 COM 模拟级别，该级别允许对象使用调用方的凭据。 这是为 WMI 调用推荐的模拟级别。</summary>
    </member>
    <member name="T:System.Management.InvokeMethodOptions">
      <summary>指定用于调用管理方法的选项。</summary>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.#ctor">
      <summary>使用默认值，为 <see cref="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])" /> 操作初始化 <see cref="T:System.Management.InvokeMethodOptions" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>使用指定的值，为调用操作初始化 <see cref="T:System.Management.InvokeMethodOptions" /> 类的新实例。</summary>
      <param name="context">要传递给提供程序的、提供程序特定的名称-值对对象。</param>
      <param name="timeout">在操作超时之前允许其执行的时间。 默认值为 <see cref="F:System.TimeSpan.MaxValue" />。 设置此参数将半同步地调用该操作。</param>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.Clone">
      <summary>返回对象的一个副本。</summary>
      <returns>克隆的对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementBaseObject">
      <summary>包含管理对象的基本元素。 它用作更具体的管理对象类的基类。</summary>
    </member>
    <member name="M:System.Management.ManagementBaseObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化 <see cref="T:System.Management.ManagementBaseObject" /> 类的可序列化的新实例。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
    </member>
    <member name="P:System.Management.ManagementBaseObject.ClassPath">
      <summary>获取管理对象类的路径。</summary>
      <returns>返回一个 <see cref="T:System.Management.ManagementPath" />，它包含管理对象类的类路径。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.Clone">
      <summary>返回对象的一个副本。</summary>
      <returns>新克隆的对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)">
      <summary>根据指定的选项，将此对象与另一对象进行比较。</summary>
      <returns>如果根据给定的选项所比较的对象相等，则为 true；否则为 false。</returns>
      <param name="otherObject">要与此对象进行比较的对象。</param>
      <param name="settings">有关如何比较对象的选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.Dispose">
    </member>
    <member name="M:System.Management.ManagementBaseObject.Equals(System.Object)">
      <summary>比较两个管理对象。</summary>
      <returns>如果这是 <see cref="T:System.Management.ManagementBaseObject" /> 的一个实例并且与该实例表示相同的对象，则为 true；否则为 false。</returns>
      <param name="obj">与此实例进行比较的对象。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetHashCode">
      <summary>用作特定类型的哈希函数，适合在哈希算法和数据结构（如哈希表）中使用。</summary>
      <returns>当前对象的哈希代码。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用反序列化此实例所表示的字段所必需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetPropertyQualifierValue(System.String,System.String)">
      <summary>返回指定的属性限定符的值。</summary>
      <returns>指定的限定符的值。</returns>
      <param name="propertyName">限定符所属属性的名称。</param>
      <param name="qualifierName">相关的属性限定符的名称。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetPropertyValue(System.String)">
      <summary>获取某属性值的等效访问器。</summary>
      <returns>指定的属性的值。</returns>
      <param name="propertyName">相关的属性的名称。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetQualifierValue(System.String)">
      <summary>获取指定的限定符的值。</summary>
      <returns>指定的限定符的值。</returns>
      <param name="qualifierName">相关的限定符的名称。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)">
      <summary>以指定的格式返回对象的文本化表示形式。</summary>
      <returns>采用指定格式的对象的文本化表示形式。</returns>
      <param name="format">请求的文本化格式。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Item(System.String)">
      <summary>通过 [] 符获取对属性值的访问。 此属性是 <see cref="T:System.Management.ManagementBaseObject" /> 类的索引器。 您可以使用由某个类型定义的默认索引属性，但不能显式定义自己的属性。 但是，在某个类上指定 expando 特性将自动提供一个类型为 Object、索引类型为 String 的默认索引属性。</summary>
      <returns>返回一个 <see cref="T:System.Object" /> 值，该值包含特定类属性的管理对象。</returns>
      <param name="propertyName">相关的属性的名称。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.op_Explicit(System.Management.ManagementBaseObject)~System.IntPtr">
      <summary>提供由 <see cref="T:System.Management.ManagementObject" /> 表示的内部 WMI 对象。</summary>
      <returns>一个 <see cref="T:System.IntPtr" />，它表示内部 WMI 对象。</returns>
      <param name="managementObject">
        <see cref="T:System.Management.ManagementBaseObject" />，它引用请求的 WMI 对象。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Properties">
      <summary>获取描述管理对象属性的 <see cref="T:System.Management.PropertyData" /> 对象的集合。</summary>
      <returns>返回一个 <see cref="T:System.Management.PropertyDataCollection" />，它包含管理对象的属性。</returns>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Qualifiers">
      <summary>获取管理对象中定义的 <see cref="T:System.Management.QualifierData" /> 对象的集合。 集合中的每个元素均包含限定符名称、值和风格等信息。</summary>
      <returns>返回一个 <see cref="T:System.Management.QualifierDataCollection" />，它包含管理对象的限定符。</returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetPropertyQualifierValue(System.String,System.String,System.Object)">
      <summary>设置指定的属性限定符的值。</summary>
      <param name="propertyName">限定符所属属性的名称。</param>
      <param name="qualifierName">相关的属性限定符的名称。</param>
      <param name="qualifierValue">限定符的新值。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetPropertyValue(System.String,System.Object)">
      <summary>设置指定属性的值。</summary>
      <param name="propertyName">要更改的属性的名称。</param>
      <param name="propertyValue">此属性的新值。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetQualifierValue(System.String,System.Object)">
      <summary>设置指定的限定符的值。</summary>
      <param name="qualifierName">要设置的限定符的名称。 此参数不可以为 null。</param>
      <param name="qualifierValue">要设置的值。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementBaseObject.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Management.ManagementBaseObject" /> 所需的数据。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，包含序列化 <see cref="T:System.Management.ManagementBaseObject" /> 所需的信息。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含与 <see cref="T:System.Management.ManagementBaseObject" /> 关联的序列化流的源和目标。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 为 null。</exception>
    </member>
    <member name="P:System.Management.ManagementBaseObject.SystemProperties">
      <summary>获取管理对象的 WMI 系统属性的集合（例如，类名、服务器和命名空间）。 WMI 系统属性名以“__”开头。</summary>
      <returns>返回一个 <see cref="T:System.Management.PropertyDataCollection" />，它包含管理对象的系统属性。</returns>
    </member>
    <member name="T:System.Management.ManagementClass">
      <summary>表示公共信息模型 (CIM) 管理类。 管理类是一个 WMI 类，如 Win32_LogicalDisk 和 Win32_Process，前者表示磁盘驱动器，后者表示进程（如 Notepad.exe）。 通过该类的成员，可以使用特定的 WMI 类路径访问 WMI 数据。 有关更多信息，请参见“Windows Management Instrumentation”文档中的“Win32 Classes”（Win32 类），该文档位于 http://www.microsoft.com/china/msdn/library 上的 MSDN Library 中。</summary>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor">
      <summary>初始化 <see cref="T:System.Management.ManagementClass" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath)">
      <summary>初始化 <see cref="T:System.Management.ManagementClass" /> 类的新实例。 该类表示 WMI 中的一个公共信息模型 (CIM) 管理类，如 Win32_LogicalDisk 和 Win32_Process，前者表示磁盘驱动器，后者表示进程（如 Notepad.exe）。 有关更多信息，请参见“Windows Management Instrumentation”文档中的“Win32 Classes”（Win32 类），该文档位于 http://www.microsoft.com/china/msdn/library 上的 MSDN Library 中。</summary>
      <param name="path">
        <see cref="T:System.Management.ManagementPath" />，它指定要绑定到哪个 WMI 类。 参数必须指定一个 WMI 类路径。 该类表示 WMI 中的一个 CIM 管理类。 CIM 类表示包括硬件、软件、进程等在内的管理信息。 有关 Windows 中可用的 CIM 类的更多信息，请参见“Windows Management Instrumentation”文档中的“Win32 Classes”（Win32 类），该文档位于 http://www.microsoft.com/china/msdn/library 上的 MSDN Library 中。</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>使用指定选项初始化 <see cref="T:System.Management.ManagementClass" /> 类的一个新实例，将其初始化到给定的 WMI 类路径。 该类表示 WMI 中的一个公共信息模型 (CIM) 管理类，如 Win32_LogicalDisk 和 Win32_Process，前者表示磁盘驱动器，后者表示进程（如 Notepad.exe）。 有关更多信息，请参见“Windows Management Instrumentation”文档中的“Win32 Classes”（Win32 类），该文档位于 http://www.microsoft.com/china/msdn/library 上的 MSDN Library 中。</summary>
      <param name="path">表示 WMI 类路径的 <see cref="T:System.Management.ManagementPath" /> 实例。 该类表示 WMI 中的一个 CIM 管理类。 CIM 类表示包括硬件、软件、进程等在内的管理信息。 有关 Windows 中可用的 CIM 类的更多信息，请参见“Windows Management Instrumentation”文档中的“Win32 Classes”（Win32 类），该文档位于 http://www.microsoft.com/china/msdn/library 上的 MSDN Library 中。</param>
      <param name="options">一个 <see cref="T:System.Management.ObjectGetOptions" />，它表示检索此类时要使用的选项。</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>在指定的范围内，使用指定选项为指定的 WMI 类初始化 <see cref="T:System.Management.ManagementClass" /> 类的一个新实例。 该类表示 WMI 中的一个公共信息模型 (CIM) 管理类，如 Win32_LogicalDisk 和 Win32_Process，前者表示磁盘驱动器，后者表示进程（如 Notepad.exe）。 有关更多信息，请参见“Windows Management Instrumentation”文档中的“Win32 Classes”（Win32 类），该文档位于 http://www.microsoft.com/china/msdn/library 上的 MSDN Library 中。</summary>
      <param name="scope">一个 <see cref="T:System.Management.ManagementScope" />，它指定 WMI 类驻留的范围（服务器和命名空间）。</param>
      <param name="path">一个 <see cref="T:System.Management.ManagementPath" />，它表示指定范围内的 WMI 类的路径。 该类表示 WMI 中的一个 CIM 管理类。 CIM 类表示包括硬件、软件、进程等在内的管理信息。 有关 Windows 中可用的 CIM 类的更多信息，请参见“Windows Management Instrumentation”文档中的“Win32 Classes”（Win32 类），该文档位于 http://www.microsoft.com/china/msdn/library 上的 MSDN Library 中。</param>
      <param name="options">一个 <see cref="T:System.Management.ObjectGetOptions" />，它指定检索 WMI 类时要使用的选项。</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>从 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 和 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的指定实例初始化 <see cref="T:System.Management.ManagementClass" /> 类的新实例。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的实例，它包含序列化新的 <see cref="T:System.Management.ManagementClass" /> 实例所需的信息。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的实例，它包含与新的 <see cref="T:System.Management.ManagementClass" /> 关联的序列化流的源。</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Management.ManagementClass" /> 类的一个新实例，将其初始化到给定路径。 该类表示 WMI 中的一个公共信息模型 (CIM) 管理类，如 Win32_LogicalDisk 和 Win32_Process，前者表示磁盘驱动器，后者表示进程（如 Notepad.exe）。 有关更多信息，请参见“Windows Management Instrumentation”文档中的“Win32 Classes”（Win32 类），该文档位于 http://www.microsoft.com/china/msdn/library 上的 MSDN Library 中。</summary>
      <param name="path">WMI 类的路径。 该类表示 WMI 中的一个 CIM 管理类。 CIM 类表示包括硬件、软件、进程等在内的管理信息。 有关 Windows 中可用的 CIM 类的更多信息，请参见“Windows Management Instrumentation”文档中的“Win32 Classes”（Win32 类），该文档位于 http://www.microsoft.com/china/msdn/library 上的 MSDN Library 中。</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)">
      <summary>使用指定选项初始化 <see cref="T:System.Management.ManagementClass" /> 类的一个新实例，将其初始化到给定的 WMI 类路径。 该类表示 WMI 中的一个公共信息模型 (CIM) 管理类，如 Win32_LogicalDisk 和 Win32_Process，前者表示磁盘驱动器，后者表示进程（如 Notepad.exe）。 有关更多信息，请参见“Windows Management Instrumentation”文档中的“Win32 Classes”（Win32 类），该文档位于 http://www.microsoft.com/china/msdn/library 上的 MSDN Library 中。</summary>
      <param name="path">WMI 类的路径。 该类表示 WMI 中的一个 CIM 管理类。 CIM 类表示包括硬件、软件、进程等在内的管理信息。 有关 Windows 中可用的 CIM 类的更多信息，请参见“Windows Management Instrumentation”文档中的“Win32 Classes”（Win32 类），该文档位于 http://www.microsoft.com/china/msdn/library 上的 MSDN Library 中。</param>
      <param name="options">一个 <see cref="T:System.Management.ObjectGetOptions" />，它表示检索 WMI 类时要使用的选项。</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)">
      <summary>在指定的范围内，使用指定选项为指定的 WMI 类初始化 <see cref="T:System.Management.ManagementClass" /> 类的新实例。 该类表示 WMI 中的一个公共信息模型 (CIM) 管理类，如 Win32_LogicalDisk 和 Win32_Process，前者表示磁盘驱动器，后者表示进程（如 Notepad.exe）。 有关更多信息，请参见“Windows Management Instrumentation”文档中的“Win32 Classes”（Win32 类），该文档位于 http://www.microsoft.com/china/msdn/library 上的 MSDN Library 中。</summary>
      <param name="scope">WMI 类在其中驻留的范围。</param>
      <param name="path">指定范围内的 WMI 类的路径。 该类表示 WMI 中的一个 CIM 管理类。 CIM 类表示包括硬件、软件、进程等在内的管理信息。 有关 Windows 中可用的 CIM 类的更多信息，请参见“Windows Management Instrumentation”文档中的“Win32 Classes”（Win32 类），该文档位于 http://www.microsoft.com/china/msdn/library 上的 MSDN Library 中。</param>
      <param name="options">一个 <see cref="T:System.Management.ObjectGetOptions" />，它指定检索 WMI 类时要使用的选项。</param>
    </member>
    <member name="M:System.Management.ManagementClass.Clone">
      <summary>返回对象的一个副本。</summary>
      <returns>克隆的对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.CreateInstance">
      <summary>初始化 WMI 类的新实例。</summary>
      <returns>一个 <see cref="T:System.Management.ManagementObject" />，它表示 WMI 类的一个新实例。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementClass.Derivation">
      <summary>获取一个数组，该数组包含继承层次结构中从该类到层次结构顶部的所有 WMI 类。</summary>
      <returns>一个字符串集合，它包含该类的继承层次结构中所有 WMI 类的名称。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.Derive(System.String)">
      <summary>从此类派生新类。</summary>
      <returns>一个新 <see cref="T:System.Management.ManagementClass" />，它表示从原始类派生的新的 WMI 类。</returns>
      <param name="newClassName">要派生的新类的名称。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances">
      <summary>返回该类的所有实例的集合。</summary>
      <returns>表示该类的实例的 <see cref="T:System.Management.ManagementObject" /> 对象的集合。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)">
      <summary>使用指定选项返回该类的所有实例的集合。</summary>
      <returns>根据指定选项表示该类的实例的 <see cref="T:System.Management.ManagementObject" /> 对象的集合。</returns>
      <param name="options">其他操作选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)">
      <summary>异步返回包含该类的所有实例的集合。</summary>
      <param name="watcher">处理异步操作进度的对象。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)">
      <summary>使用指定选项异步返回包含类的所有实例的集合。</summary>
      <param name="watcher">处理异步操作进度的对象。</param>
      <param name="options">有关获取实例的指定附加选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用反序列化此实例所表示的字段所必需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">用序列化信息填充的对象。</param>
      <param name="context">将在其中存储和检索序列化数据的位置。</param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses">
      <summary>检索与 WMI 类相关的类。</summary>
      <returns>
        <see cref="T:System.Management.ManagementClass" /> 对象或 <see cref="T:System.Management.ManagementObject" /> 对象的集合，这些对象分别表示 WMI 类或与 WMI 类相关的实例。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)">
      <summary>异步检索与 WMI 类相关的类。</summary>
      <param name="watcher">处理异步操作进度的对象。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)">
      <summary>给定相关的类名，异步检索与 WMI 类相关的类。</summary>
      <param name="watcher">处理异步操作进度的对象。</param>
      <param name="relatedClass">相关的类的名称。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>使用指定选项异步检索与 WMI 相关的类。</summary>
      <param name="watcher">异步操作的进度和结果的处理程序。</param>
      <param name="relatedClass">所产生的类将必须从其派生的类。</param>
      <param name="relationshipClass">所产生的类和源类必须有的关系类型。</param>
      <param name="relationshipQualifier">关系中必须有此限定符。</param>
      <param name="relatedQualifier">所产生的类中必须有此限定符。</param>
      <param name="relatedRole">所产生的类在关系中必须具有此角色。</param>
      <param name="thisRole">源类在关系中必须具有此角色。</param>
      <param name="options">有关检索所产生类的选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.String)">
      <summary>检索与 WMI 类相关的类。</summary>
      <returns>与此类相关的类的集合。</returns>
      <param name="relatedClass">所产生的类将必须从其派生的类。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>根据指定选项检索与 WMI 类相关的类。</summary>
      <returns>与此类相关的类的集合。</returns>
      <param name="relatedClass">所产生的类将必须从其派生的类。</param>
      <param name="relationshipClass">所产生的类和源类必须有的关系类型。</param>
      <param name="relationshipQualifier">关系中必须有此限定符。</param>
      <param name="relatedQualifier">所产生的类中必须有此限定符。</param>
      <param name="relatedRole">所产生的类在关系中必须具有此角色。</param>
      <param name="thisRole">源类在关系中必须具有此角色。</param>
      <param name="options">有关检索所产生类的选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses">
      <summary>检索使此类与其他类相关的关系类。</summary>
      <returns>使该类与其他任何类相关的关联类的集合。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)">
      <summary>异步检索使此类与其他类相关的关系类。</summary>
      <param name="watcher">处理异步操作进度的对象。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)">
      <summary>异步检索使此类与指定的 WMI 相关的关系类。</summary>
      <param name="watcher">处理异步操作进度的对象。</param>
      <param name="relationshipClass">所有返回的关系均应指向的 WMI 类。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>根据指定选项异步检索使类相关的关系类。</summary>
      <param name="watcher">异步操作的进度和结果的处理程序。</param>
      <param name="relationshipClass">所产生的所有关系类均必须从其中派生的类。</param>
      <param name="relationshipQualifier">所产生的关系类必须有的限定符。</param>
      <param name="thisRole">源类在所产生的关系类中必须具有的角色。</param>
      <param name="options">有关检索结果的选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.String)">
      <summary>检索使此类与其他类相关的关系类，其中，终结点类是指定的类。</summary>
      <returns>使此类与指定类相关的关联类的集合。 有关关系类的更多信息，请参见“Windows Management Instrumentation”文档中的“ASSOCIATORS OF Statement”（ASSOCIATORS OF 语句），该文档位于 http://www.microsoft.com/china/msdn/library 上的 MSDN Library 中。</returns>
      <param name="relationshipClass">返回的所有关系类的终结点类。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>根据指定选项检索使此类与其他类相关的关系类。</summary>
      <returns>根据指定选项使此类与其他类相关的关联类的集合。 有关关系类的更多信息，请参见“Windows Management Instrumentation”文档中的“ASSOCIATORS OF Statement”（ASSOCIATORS OF 语句），该文档位于 http://www.microsoft.com/china/msdn/library 上的 MSDN Library 中。</returns>
      <param name="relationshipClass">所产生的所有关系类均必须从此类派生。</param>
      <param name="relationshipQualifier">所产生的关系类必须有此限定符。</param>
      <param name="thisRole">源类在所产生的关系类中必须具有此角色。</param>
      <param name="options">指定有关检索结果的选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)">
      <summary>为给定的 WMI 类生成强类型类。</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeDeclaration" />，它表示强类型类的声明。</returns>
      <param name="includeSystemClassInClassDef">如果包括用于管理系统属性的类，为 true；否则为 false。</param>
      <param name="systemPropertyClass">如果生成的类将管理系统属性，为 true；否则为 false。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)">
      <summary>为给定的 WMI 类生成强类型类。 此函数生成 Visual Basic、C#、JScript、J# 或 C++ 的代码，具体情况取决于输入参数。</summary>
      <returns>如果方法成功，则为 true；否则为 false。</returns>
      <param name="lang">要生成的代码的语言。 此代码语言来自 <see cref="T:System.Management.CodeLanguage" /> 枚举。</param>
      <param name="filePath">要在其中编写代码的文件的路径。</param>
      <param name="classNamespace">将在其中生成该类的 .NET 命名空间。 如果它为空，则将从 WMI 命名空间生成该命名空间。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses">
      <summary>返回类的所有子类的集合。</summary>
      <returns>
        <see cref="T:System.Management.ManagementObject" /> 对象的集合，这些对象表示 WMI 类的子类。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)">
      <summary>使用指定选项检索类的子类。</summary>
      <returns>
        <see cref="T:System.Management.ManagementObject" /> 对象的集合，这些对象表示 WMI 类的子类（根据指定的选项）。</returns>
      <param name="options">有关检索类的子类的指定附加选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)">
      <summary>异步返回从该类派生的所有类的集合。</summary>
      <param name="watcher">处理异步操作进度的对象。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)">
      <summary>使用指定选项异步检索从该类派生的所有类。</summary>
      <param name="watcher">处理异步操作进度的对象。</param>
      <param name="options">要用在派生类检索中的指定附加选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementClass.Methods">
      <summary>获取或设置 <see cref="T:System.Management.MethodData" /> 对象的集合，这些对象表示 WMI 类中定义的方法。</summary>
      <returns>表示 WMI 类中定义的方法的 <see cref="T:System.Management.MethodDataCollection" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementClass.Path">
      <summary>获取或设置 <see cref="T:System.Management.ManagementClass" /> 对象绑定到的 WMI 类的路径。</summary>
      <returns>对象的类的路径。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementDateTimeConverter">
      <summary>提供将 DMTF 日期时间和时间间隔转换为符合 CLR 的 <see cref="T:System.DateTime" /> 和 <see cref="T:System.TimeSpan" /> 格式（或执行相反转换）的方法。</summary>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDateTime(System.String)">
      <summary>将给定的 DMTF 日期时间转换为 <see cref="T:System.DateTime" />。 返回的 <see cref="T:System.DateTime" /> 将基于系统的当前时区。</summary>
      <returns>
        <see cref="T:System.DateTime" />，它表示给定的 DMTF 日期时间。</returns>
      <param name="dmtfDate">用 DMTF 格式表示日期时间的字符串。</param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDmtfDateTime(System.DateTime)">
      <summary>将给定的 <see cref="T:System.DateTime" /> 转换为 DMTF 日期时间格式。</summary>
      <returns>一个字符串，它表示给定的 <see cref="T:System.DateTime" /> 的 DMTF 日期时间。</returns>
      <param name="date">
        <see cref="T:System.DateTime" />，它表示将转换为 DMTF 日期时间的日期时间。</param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToDmtfTimeInterval(System.TimeSpan)">
      <summary>将给定的 <see cref="T:System.TimeSpan" /> 转换为 DMTF 时间间隔。</summary>
      <returns>一个字符串，它表示给定的 <see cref="T:System.TimeSpan" /> 的 DMTF 时间间隔。</returns>
      <param name="timespan">
        <see cref="T:System.TimeSpan" />，它表示将转换为 DMTF 时间间隔的日期时间。</param>
    </member>
    <member name="M:System.Management.ManagementDateTimeConverter.ToTimeSpan(System.String)">
      <summary>将给定的 DMTF 时间间隔转换为 <see cref="T:System.TimeSpan" />。</summary>
      <returns>
        <see cref="T:System.TimeSpan" />，它表示给定的 DMTF 时间间隔。</returns>
      <param name="dmtfTimespan">DMTF 时间间隔的字符串表示形式。</param>
    </member>
    <member name="T:System.Management.ManagementEventArgs">
      <summary>表示保存 WMI 事件的事件数据的虚拟基类。</summary>
    </member>
    <member name="P:System.Management.ManagementEventArgs.Context">
      <summary>获取从触发事件的操作反射回的操作上下文。</summary>
      <returns>返回一个 <see cref="T:System.Object" /> 值，该值用于操作上下文。</returns>
    </member>
    <member name="T:System.Management.ManagementEventWatcher">
      <summary>根据指定的事件查询预订临时事件通知。</summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor">
      <summary>初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的新实例。 若要进一步初始化，请设置对象的属性。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
      <summary>在给定一个 WMI 事件查询时，初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的新实例。</summary>
      <param name="query">
        <see cref="T:System.Management.EventQuery" />，它表示一个确定观察程序将侦听的事件的 WMI 事件查询。</param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
      <summary>初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的一个新实例，它将侦听符合给定 WMI 事件查询的事件。</summary>
      <param name="scope">
        <see cref="T:System.Management.ManagementScope" />，它表示观察程序将在其中侦听事件的范围（命名空间）。</param>
      <param name="query">
        <see cref="T:System.Management.EventQuery" />，它表示一个确定观察程序将侦听的事件的 WMI 事件查询。</param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
      <summary>初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的一个新实例，它将根据指定选项侦听符合给定 WMI 事件查询的事件。 对于此变体，查询和范围为指定的对象。 选项对象可指定超时和上下文信息等选项。</summary>
      <param name="scope">
        <see cref="T:System.Management.ManagementScope" />，它表示观察程序将在其中侦听事件的范围（命名空间）。</param>
      <param name="query">
        <see cref="T:System.Management.EventQuery" />，它表示一个确定观察程序将侦听的事件的 WMI 事件查询。</param>
      <param name="options">
        <see cref="T:System.Management.EventWatcherOptions" />，它表示用于监视事件的其他选项。</param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
      <summary>在给定字符串形式的 WMI 事件查询时，初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的新实例。</summary>
      <param name="query">一个 WMI 事件查询，它定义观察程序将侦听的事件。</param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的一个新实例，它将侦听符合给定 WMI 事件查询的事件。 对于此变体，查询和范围被指定为字符串。</summary>
      <param name="scope">观察程序将在其中侦听事件的管理范围（命名空间）。</param>
      <param name="query">定义观察程序所要侦听的事件的查询。</param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
      <summary>初始化 <see cref="T:System.Management.ManagementEventWatcher" /> 类的一个新实例，它将根据指定选项侦听符合给定 WMI 事件查询的事件。 对于此变体，查询和范围被指定为字符串。 选项对象可指定超时和上下文信息之类的选项。</summary>
      <param name="scope">观察程序将在其中侦听事件的管理范围（命名空间）。</param>
      <param name="query">定义观察程序所要侦听的事件的查询。</param>
      <param name="options">
        <see cref="T:System.Management.EventWatcherOptions" />，它表示用于监视事件的其他选项。</param>
    </member>
    <member name="E:System.Management.ManagementEventWatcher.EventArrived">
      <summary>出现新事件时发生。</summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Finalize">
      <summary>确保清除未完成的调用。 这是该对象的析构函数。 在 C# 中，使用析构函数语法表示终结器。</summary>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Options">
      <summary>获取或设置用于监视事件的选项。</summary>
      <returns>返回一个 <see cref="T:System.Management.EventWatcherOptions" />，它包含用于监视事件的事件选项。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Query">
      <summary>获取或设置要应用于事件的条件。</summary>
      <returns>返回一个 <see cref="T:System.Management.EventQuery" />，它包含应用于事件的查询。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Scope">
      <summary>获取或设置要在其中监视事件的范围（命名空间或范围）。</summary>
      <returns>返回一个 <see cref="T:System.Management.ManagementScope" />，它包含要在其中监视事件的范围。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Start">
      <summary>使用给定查询预订事件，并通过 <see cref="E:System.Management.ManagementEventWatcher.EventArrived" /> 事件异步传递它们。</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Stop">
      <summary>取消预订而不管它是同步还是异步。</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="E:System.Management.ManagementEventWatcher.Stopped">
      <summary>取消预订时发生。</summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
      <summary>等待出现下一个与指定的查询匹配的事件，然后将该事件返回。</summary>
      <returns>一个 <see cref="T:System.Management.ManagementBaseObject" />，它表示刚到达的事件。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementException">
      <summary>表示管理异常。</summary>
    </member>
    <member name="M:System.Management.ManagementException.#ctor">
      <summary>初始化 <see cref="T:System.Management.ManagementException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化 <see cref="T:System.Management.ManagementException" /> 类的可序列化的新实例。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 目标。</param>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.String)">
      <summary>用指定的错误信息初始化 <see cref="T:System.Management.ManagementException" /> 类的一个新实例。</summary>
      <param name="message">描述错误的消息。</param>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.String,System.Exception)">
      <summary>初始化 <see cref="T:System.Management.ManagementException" /> 类的空的新实例。 如果 <paramref name="innerException" /> 参数不为 null，则当前异常在处理内部异常的 catch 块中引发。</summary>
      <param name="message">描述错误的消息。</param>
      <param name="innerException">导致当前异常的异常。</param>
    </member>
    <member name="P:System.Management.ManagementException.ErrorCode">
      <summary>获取 WMI 所报告的、导致此异常的错误代码。</summary>
      <returns>返回一个包含错误代码的 <see cref="T:System.Management.ManagementStatus" /> 枚举值。</returns>
    </member>
    <member name="P:System.Management.ManagementException.ErrorInformation">
      <summary>获取由 WMI 提供的扩展错误对象。</summary>
      <returns>返回一个 <see cref="T:System.Management.ManagementBaseObject" />，它包含扩展错误信息。</returns>
    </member>
    <member name="M:System.Management.ManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化 <see cref="T:System.Management.ManagementException" /> 所需的数据来填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 目标。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementNamedValueCollection">
      <summary>表示命名的值的集合，这些值适合用作 WMI 操作的上下文信息。 这些名称不区分大小写。</summary>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.#ctor">
      <summary>初始化 <see cref="T:System.Management.ManagementNamedValueCollection" /> 类的空的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化 <see cref="T:System.Management.ManagementNamedValueCollection" /> 类的新实例，该实例可序列化且使用指定的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 和 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Add(System.String,System.Object)">
      <summary>向集合添加单名值。</summary>
      <param name="name">新值的名称。</param>
      <param name="value">要与名称关联的值。</param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Clone">
      <summary>创建集合的复本。 会分别克隆各个值。 如果某个值不支持克隆，则会引发 <see cref="T:System.NotSupportedException" />。</summary>
      <returns>集合的新副本。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementNamedValueCollection.Item(System.String)">
      <summary>从该集合获取与指定的名称关联的值。 在 C# 中，此属性是 <see cref="T:System.Management.ManagementNamedValueCollection" /> 类的索引器。</summary>
      <returns>从该集合返回一个与指定的名称关联的 <see cref="T:System.Object" /> 值。</returns>
      <param name="name">要返回的值的名称。</param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Remove(System.String)">
      <summary>从集合中移除一个单名值。 如果集合不包含使用指定名称的元素，则该集合保持不变，且不引发异常。</summary>
      <param name="name">要移除的值的名称。</param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.RemoveAll">
      <summary>从集合中移除所有项。</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementObject">
      <summary>表示 WMI 实例。</summary>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor">
      <summary>初始化 <see cref="T:System.Management.ManagementObject" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementPath)">
      <summary>按指定的 WMI 对象路径初始化 <see cref="T:System.Management.ManagementObject" /> 类的一个新实例。 该路径作为 <see cref="T:System.Management.ManagementPath" /> 提供。</summary>
      <param name="path">包含 WMI 对象的路径的 <see cref="T:System.Management.ManagementPath" />。</param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>初始化 <see cref="T:System.Management.ManagementObject" /> 类的一个新实例，并将其绑定到指定的 WMI 路径，包括指定的附加选项。</summary>
      <param name="path">包含 WMI 路径的 <see cref="T:System.Management.ManagementPath" />。</param>
      <param name="options">一个 <see cref="T:System.Management.ObjectGetOptions" />，它包含有关绑定到 WMI 对象的附加选项。 如果要使用默认选项，则此参数可为 null。</param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>初始化 <see cref="T:System.Management.ManagementObject" /> 类的一个新实例，它绑定到指定的 WMI 路径，并包括指定的选项。</summary>
      <param name="scope">一个 <see cref="T:System.Management.ManagementScope" />，它表示 WMI 对象在其中驻留的范围。 在此版本中，范围只能是 WMI 命名空间。</param>
      <param name="path">一个 <see cref="T:System.Management.ManagementPath" />，它表示可管理对象的 WMI 路径。</param>
      <param name="options">一个 <see cref="T:System.Management.ObjectGetOptions" />，它指定有关获取对象的附加选项。</param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化 <see cref="T:System.Management.ManagementObject" /> 类的可序列化的新实例。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String)">
      <summary>按指定的 WMI 对象路径初始化 <see cref="T:System.Management.ManagementObject" /> 类的一个新实例。 该路径以字符串形式提供。</summary>
      <param name="path">WMI 路径。</param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String,System.Management.ObjectGetOptions)">
      <summary>初始化 <see cref="T:System.Management.ManagementObject" /> 类的一个新实例，并将其绑定到指定的 WMI 路径，包括指定的附加选项。 在此变体中，可以将路径指定为字符串。</summary>
      <param name="path">对象的 WMI 路径。</param>
      <param name="options">一个 <see cref="T:System.Management.ObjectGetOptions" />，它表示获取指定的 WMI 对象时使用的选项。</param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String,System.String,System.Management.ObjectGetOptions)">
      <summary>初始化 <see cref="T:System.Management.ManagementObject" /> 类的一个新实例，它绑定到指定的 WMI 路径，同时包括指定的选项。 范围和路径指定为字符串形式。</summary>
      <param name="scopeString">WMI 对象的范围。</param>
      <param name="pathString">WMI 对象路径。</param>
      <param name="options">一个 <see cref="T:System.Management.ObjectGetOptions" />，它表示有关获取 WMI 对象的附加选项。</param>
    </member>
    <member name="P:System.Management.ManagementObject.ClassPath">
      <summary>获取或设置对象的类的路径。</summary>
      <returns>一个 <see cref="T:System.Management.ManagementPath" />，它表示对象的类的路径。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Clone">
      <summary>创建对象的一个副本。</summary>
      <returns>所复制的对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath)">
      <summary>将该对象异步复制到另一个位置。</summary>
      <param name="watcher">将接收操作结果的对象。</param>
      <param name="path">一个 <see cref="T:System.Management.ManagementPath" />，它指定对象应复制到的路径。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath,System.Management.PutOptions)">
      <summary>将该对象异步复制到另一个位置。</summary>
      <param name="watcher">将接收操作结果的对象。</param>
      <param name="path">对象应复制到的路径。</param>
      <param name="options">有关应当如何放置对象的选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String)">
      <summary>将该对象异步复制到另一个位置。</summary>
      <param name="watcher">将接收操作结果的对象。</param>
      <param name="path">对象应复制到的路径。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String,System.Management.PutOptions)">
      <summary>将该对象异步复制到另一个位置。</summary>
      <param name="watcher">将接收操作结果的对象。</param>
      <param name="path">对象应复制到的路径。</param>
      <param name="options">有关应当如何放置对象的选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementPath)">
      <summary>将对象复制到另一个位置。</summary>
      <returns>已复制对象的新路径。</returns>
      <param name="path">对象应复制到的 <see cref="T:System.Management.ManagementPath" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementPath,System.Management.PutOptions)">
      <summary>将对象复制到另一个位置。</summary>
      <returns>已复制对象的新路径。</returns>
      <param name="path">对象应复制到的 <see cref="T:System.Management.ManagementPath" />。</param>
      <param name="options">有关应当如何放置对象的选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.String)">
      <summary>将对象复制到另一个位置。</summary>
      <returns>已复制对象的新路径。</returns>
      <param name="path">对象应复制到的路径。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.String,System.Management.PutOptions)">
      <summary>将对象复制到另一个位置。</summary>
      <returns>已复制对象的新路径。</returns>
      <param name="path">对象应复制到的路径。</param>
      <param name="options">有关应当如何放置对象的选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete">
      <summary>删除对象。</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.DeleteOptions)">
      <summary>删除对象。</summary>
      <param name="options">有关如何删除对象的选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver)">
      <summary>删除对象。</summary>
      <param name="watcher">将接收操作结果的对象。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver,System.Management.DeleteOptions)">
      <summary>删除对象。</summary>
      <param name="watcher">将接收操作结果的对象。</param>
      <param name="options">有关如何删除对象的选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Dispose">
      <summary>释放由该组件使用的所有资源。</summary>
    </member>
    <member name="M:System.Management.ManagementObject.Get">
      <summary>将 WMI 类信息绑定到管理对象。</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Get(System.Management.ManagementOperationObserver)">
      <summary>异步绑定到管理对象。</summary>
      <param name="watcher">将操作结果作为事件来接收的对象。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetMethodParameters(System.String)">
      <summary>返回一个 <see cref="T:System.Management.ManagementBaseObject" />，它表示方法的输入参数的列表。</summary>
      <returns>包含方法的输入参数的 <see cref="T:System.Management.ManagementBaseObject" />。</returns>
      <param name="methodName">方法的名称。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用反序列化此实例所表示的字段所必需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">用序列化信息填充的对象。</param>
      <param name="context">将在其中存储和检索序列化数据的位置。</param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated">
      <summary>获取与该对象（联系对象）相关的对象的集合。</summary>
      <returns>包含相关对象的 <see cref="T:System.Management.ManagementObjectCollection" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver)">
      <summary>异步获取与该对象（联系对象）相关的对象的集合。 此调用会立即返回，并且会在结果可用时调用委托。</summary>
      <param name="watcher">用于返回结果的对象。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String)">
      <summary>获取与该对象（联系对象）相关的对象的集合。</summary>
      <param name="watcher">用于返回结果的对象。</param>
      <param name="relatedClass">相关对象的类。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>获取与该对象（联系对象）相关的对象的集合。</summary>
      <param name="watcher">用于返回结果的对象。</param>
      <param name="relatedClass">相关对象的类。</param>
      <param name="relationshipClass">相关的关系类。</param>
      <param name="relationshipQualifier">需要在关系类中存在的限定符。</param>
      <param name="relatedQualifier">需要在相关类中存在的限定符。</param>
      <param name="relatedRole">相关类在关系中所扮演的角色。</param>
      <param name="thisRole">该类在关系中所扮演的角色。</param>
      <param name="classDefinitionsOnly">只返回与查询匹配的实例的类定义。</param>
      <param name="options">有关如何执行查询的扩展选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.String)">
      <summary>获取与该对象（联系对象）相关的对象的集合。</summary>
      <returns>包含相关对象的 <see cref="T:System.Management.ManagementObjectCollection" />。</returns>
      <param name="relatedClass">相关对象的类。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>获取与该对象（联系对象）相关的对象的集合。</summary>
      <returns>包含相关对象的 <see cref="T:System.Management.ManagementObjectCollection" />。</returns>
      <param name="relatedClass">相关对象的类。</param>
      <param name="relationshipClass">相关的关系类。</param>
      <param name="relationshipQualifier">需要在关系类中存在的限定符。</param>
      <param name="relatedQualifier">需要在相关类中存在的限定符。</param>
      <param name="relatedRole">相关类在关系中所扮演的角色。</param>
      <param name="thisRole">该类在关系中所扮演的角色。</param>
      <param name="classDefinitionsOnly">此方法返回时，它只包含与查询匹配的实例的类定义。</param>
      <param name="options">有关如何执行查询的扩展选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships">
      <summary>获取该对象的关联的集合。</summary>
      <returns>包含关联对象的 <see cref="T:System.Management.ManagementObjectCollection" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver)">
      <summary>获取该对象的关联的集合。</summary>
      <param name="watcher">用于返回结果的对象。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String)">
      <summary>获取该对象的关联的集合。</summary>
      <param name="watcher">用于返回结果的对象。</param>
      <param name="relationshipClass">要包括的关联。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>获取该对象的关联的集合。</summary>
      <param name="watcher">用于返回结果的对象。</param>
      <param name="relationshipClass">相关的关系类型。</param>
      <param name="relationshipQualifier">存在于关系中的限定符。</param>
      <param name="thisRole">该对象在关系中的角色。</param>
      <param name="classDefinitionsOnly">当该方法返回时，它只包含结果集的类定义。</param>
      <param name="options">有关查询执行的扩展选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.String)">
      <summary>获取该对象的关联的集合。</summary>
      <returns>包含关联对象的 <see cref="T:System.Management.ManagementObjectCollection" />。</returns>
      <param name="relationshipClass">要包括的关联。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>获取该对象的关联的集合。</summary>
      <returns>包含关联对象的 <see cref="T:System.Management.ManagementObjectCollection" />。</returns>
      <param name="relationshipClass">相关的关系类型。</param>
      <param name="relationshipQualifier">存在于关系中的限定符。</param>
      <param name="thisRole">该对象在关系中的角色。</param>
      <param name="classDefinitionsOnly">当该方法返回时，它只包含结果集的类定义。</param>
      <param name="options">有关查询执行的扩展选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)">
      <summary>对对象异步调用方法。</summary>
      <param name="watcher">一个 <see cref="T:System.Management.ManagementOperationObserver" />，它用于处理异步执行的进度和结果。</param>
      <param name="methodName">要执行的方法的名称。</param>
      <param name="inParameters">包含方法的输入参数的 <see cref="T:System.Management.ManagementBaseObject" />。</param>
      <param name="options">包含执行方法时使用的附加选项的 <see cref="T:System.Management.InvokeMethodOptions" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Object[])">
      <summary>对对象异步调用方法。</summary>
      <param name="watcher">要接收操作结果的对象。</param>
      <param name="methodName">要执行的方法的名称。</param>
      <param name="args">包含参数值的数组。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)">
      <summary>对 WMI 对象调用方法。 输入和输出参数表示为 <see cref="T:System.Management.ManagementBaseObject" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Management.ManagementBaseObject" />，它包含执行的方法的输出参数和返回值。</returns>
      <param name="methodName">要执行的方法的名称。</param>
      <param name="inParameters">保存方法的输入参数的 <see cref="T:System.Management.ManagementBaseObject" />。</param>
      <param name="options">一个 <see cref="T:System.Management.InvokeMethodOptions" />，它包含有关执行方法的附加选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])">
      <summary>对对象调用方法。</summary>
      <returns>该方法返回的对象值。</returns>
      <param name="methodName">要执行的方法的名称。</param>
      <param name="args">包含参数值的数组。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObject.Options">
      <summary>获取或设置检索对象时要使用的其他信息。</summary>
      <returns>检索对象时要使用的 <see cref="T:System.Management.ObjectGetOptions" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObject.Path">
      <summary>获取或设置对象的 WMI 路径。</summary>
      <returns>表示对象的路径的 <see cref="T:System.Management.ManagementPath" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put">
      <summary>提交对对象所做的更改。</summary>
      <returns>包含已提交对象的路径的 <see cref="T:System.Management.ManagementPath" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver)">
      <summary>异步提交对对象所做的更改。</summary>
      <param name="watcher">用于处理异步操作的进度和结果的 <see cref="T:System.Management.ManagementOperationObserver" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver,System.Management.PutOptions)">
      <summary>使用指定的选项异步提交对对象所做的更改。</summary>
      <param name="watcher">用于处理异步操作的进度和结果的 <see cref="T:System.Management.ManagementOperationObserver" />。</param>
      <param name="options">用于为提交操作指定附加选项的 <see cref="T:System.Management.PutOptions" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.PutOptions)">
      <summary>提交对对象所做的更改。</summary>
      <returns>包含已提交对象的路径的 <see cref="T:System.Management.ManagementPath" />。</returns>
      <param name="options">有关如何提交更改的选项。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObject.Scope">
      <summary>获取或设置此对象在其中驻留的范围。</summary>
      <returns>此对象驻留的范围。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObject.ToString">
      <summary>返回对象的完整路径。 这是对默认对象实现的重写。</summary>
      <returns>对象的完整路径。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementObjectCollection">
      <summary>表示通过 WMI 检索到的管理对象的不同集合。 此集合中的对象为从 <see cref="T:System.Management.ManagementBaseObject" /> 派生的类型，包括 <see cref="T:System.Management.ManagementObject" /> 和 <see cref="T:System.Management.ManagementClass" />。 通过 <see cref="T:System.Management.ManagementObjectSearcher" /> 对象执行 WMI 查询，或者通过表示指定类型的 <see cref="T:System.Management.ManagementClass" /> 检索该类型管理对象的枚举，可得到此集合。 此外，这也可能是以指定方式与特定管理对象相关的管理对象集合 — 在这种情况下，此集合可以通过诸如 <see cref="M:System.Management.ManagementObject.GetRelated" /> 之类的方法检索到。 此集合可以通过 <see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" /> 遍历，并且能够针对各种管理任务对集合中的对象进行检查或操作。</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)">
      <summary>将集合复制到数组。</summary>
      <param name="array">要复制到的数组。</param>
      <param name="index">从其开始的索引。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)">
      <summary>将集合中的项复制到一个 <see cref="T:System.Management.ManagementBaseObject" /> 数组。</summary>
      <param name="objectCollection">目标数组。</param>
      <param name="index">从其开始的索引。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.Count">
      <summary>获取一个值，该值指示集合中对象的数目。</summary>
      <returns>返回一个 <see cref="T:System.Int32" /> 值，该值指示集合中对象的数目。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.Dispose">
      <summary>释放与该对象关联的资源。 调用该方法后，尝试使用该对象将导致引发 <see cref="T:System.ObjectDisposedException" />。</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.Finalize">
      <summary>处置对象所保留的资源。 这是该对象的析构函数。 使用析构函数语法表示终结器。</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.GetEnumerator">
      <summary>返回集合的枚举器。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.IsSynchronized">
      <summary>获取一个指示对象是否已同步的值。</summary>
      <returns>返回一个指示对象是否已同步的 <see cref="T:System.Boolean" /> 值。</returns>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.SyncRoot">
      <summary>获取要用于同步的对象。</summary>
      <returns>返回一个 <see cref="T:System.Object" /> 值，该值表示要用于同步的对象。</returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回循环访问 <see cref="T:System.Management.ManagementObjectCollection" /> 的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns>用于 <see cref="T:System.Management.ManagementObjectCollection" /> 的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator">
      <summary>表示集合的枚举数。</summary>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Current">
      <summary>获取该枚举数指向的当前 <see cref="T:System.Management.ManagementBaseObject" />。</summary>
      <returns>枚举中的当前对象。</returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Dispose">
      <summary>释放与该对象关联的资源。 调用该方法后，尝试使用该对象将导致引发 <see cref="T:System.ObjectDisposedException" /> 异常。</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Finalize">
      <summary>处置对象所保留的资源。 这是该对象的析构函数。 使用析构函数语法表示终结器。</summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.MoveNext">
      <summary>指示枚举数是否已移到了枚举中的下一个对象。</summary>
      <returns>如果枚举数成功前移到下一个元素，则为 true；如果枚举数越过集合的结尾，则为 false。</returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset">
      <summary>将枚举数重置到集合的开头。</summary>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>获取集合中的当前对象。</summary>
      <returns>返回集合中的当前元素。</returns>
      <exception cref="T:System.InvalidOperationException">在创建了枚举数后集合被修改了。</exception>
    </member>
    <member name="T:System.Management.ManagementObjectSearcher">
      <summary>基于指定的查询检索管理对象的集合。 此类是用于检索管理信息的较为常用的入口点之一。 例如，它可以用于枚举系统中的所有磁盘驱动器、网络适配器、进程及更多管理对象，或者用于查询所有处于活动状态的网络连接以及暂停的服务等。在实例化之后，此类的实例可以接受在 <see cref="T:System.Management.ObjectQuery" /> 或其派生类中表示的 WMI 查询作为输入，并且还可以选择接受一个 <see cref="T:System.Management.ManagementScope" />（表示执行查询时所在的 WMI 命名空间）。 它还可以接受 <see cref="T:System.Management.EnumerationOptions" /> 中的其他高级选项。 当调用此对象的 <see cref="M:System.Management.ManagementObjectSearcher.Get" /> 方法时，<see cref="T:System.Management.ManagementObjectSearcher" /> 在指定的范围内执行给定的查询，并返回与 <see cref="T:System.Management.ManagementObjectCollection" /> 中的查询匹配的管理对象的集合。</summary>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor">
      <summary>初始化 <see cref="T:System.Management.ManagementObjectSearcher" /> 类的新实例。 设置此对象的部分属性后，可以使用此对象调用对管理信息的查询。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ManagementScope,System.Management.ObjectQuery)">
      <summary>初始化 <see cref="T:System.Management.ManagementObjectSearcher" /> 类的一个新实例，它用于在指定范围内调用指定查询。</summary>
      <param name="scope">一个 <see cref="T:System.Management.ManagementScope" />，表示要在其中调用查询的范围。</param>
      <param name="query">表示要调用的查询的 <see cref="T:System.Management.ObjectQuery" />。</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ManagementScope,System.Management.ObjectQuery,System.Management.EnumerationOptions)">
      <summary>使用指定的选项初始化 <see cref="T:System.Management.ManagementObjectSearcher" /> 类的一个新实例，它将用于在指定范围内调用指定的查询。</summary>
      <param name="scope">
        <see cref="T:System.Management.ManagementScope" />，指定查询的范围。</param>
      <param name="query">
        <see cref="T:System.Management.ObjectQuery" />，指定将调用的查询。</param>
      <param name="options">一个 <see cref="T:System.Management.EnumerationOptions" />，它指定查询将使用的附加选项。</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ObjectQuery)">
      <summary>初始化 <see cref="T:System.Management.ManagementObjectSearcher" /> 类的一个新实例，它用于调用有关管理信息的指定查询。</summary>
      <param name="query">表示搜索器将调用的查询的 <see cref="T:System.Management.ObjectQuery" />。</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Management.ManagementObjectSearcher" /> 类的一个新实例，它用于调用有关管理信息的指定查询。</summary>
      <param name="queryString">对象将调用的 WMI 查询。</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Management.ManagementObjectSearcher" /> 类的一个新实例，它用于在指定范围内调用指定查询。</summary>
      <param name="scope">要在其中进行查询的范围。</param>
      <param name="queryString">要调用的查询。</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String,System.String,System.Management.EnumerationOptions)">
      <summary>初始化 <see cref="T:System.Management.ManagementObjectSearcher" /> 类的一个新实例，它将用于在指定范围内使用指定选项调用指定的查询。</summary>
      <param name="scope">将在其中调用查询的范围。</param>
      <param name="queryString">要调用的查询。</param>
      <param name="options">一个 <see cref="T:System.Management.EnumerationOptions" />，它指定有关查询的附加选项。</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.Get">
      <summary>调用指定的 WMI 查询并返回结果集合。</summary>
      <returns>一个 <see cref="T:System.Management.ManagementObjectCollection" />，它包含匹配指定查询的对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.Get(System.Management.ManagementOperationObserver)">
      <summary>异步调用 WMI 查询，并绑定到一个观察程序以传递结果。</summary>
      <param name="watcher">引发由操作触发的事件的观察程序。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Options">
      <summary>获取或设置有关如何搜索对象的选项。</summary>
      <returns>返回一个 <see cref="T:System.Management.EnumerationOptions" />，它包含用于搜索 WMI 对象的选项。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Query">
      <summary>获取或设置要在搜索器中调用的查询（即搜索管理对象时要应用的条件）。</summary>
      <returns>返回一个 <see cref="T:System.Management.ObjectQuery" />，它包含要在观察程序中调用的查询。</returns>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Scope">
      <summary>获取或设置要在其中查找对象的范围（该范围表示一个 WMI 命名空间）。</summary>
      <returns>返回一个 <see cref="T:System.Management.ManagementScope" />，它包含要在其中查找 WMI 对象的范围（命名空间）。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementOperationObserver">
      <summary>管理异步操作和处理异步接收的管理信息和事件。</summary>
    </member>
    <member name="M:System.Management.ManagementOperationObserver.#ctor">
      <summary>初始化 <see cref="T:System.Management.ManagementOperationObserver" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.ManagementOperationObserver.Cancel">
      <summary>取消所有未完成的操作。</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.Completed">
      <summary>完成操作后发生。</summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.ObjectPut">
      <summary>成功提交对象后发生。</summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.ObjectReady">
      <summary>新对象可用时发生。</summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.Progress">
      <summary>它的出现是为了指示正在进行的操作的进度。</summary>
    </member>
    <member name="T:System.Management.ManagementOptions">
      <summary>为所有选项对象提供抽象基类。</summary>
    </member>
    <member name="M:System.Management.ManagementOptions.Clone">
      <summary>返回对象的一个副本。</summary>
      <returns>克隆的对象。</returns>
    </member>
    <member name="P:System.Management.ManagementOptions.Context">
      <summary>获取或设置一个 WMI 上下文对象。 这是将传递给 WMI 提供程序的名称-值对列表，该提供程序支持自定义操作的上下文信息。</summary>
      <returns>返回一个 <see cref="T:System.Management.ManagementNamedValueCollection" />，它包含 WMI 上下文信息。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="F:System.Management.ManagementOptions.InfiniteTimeout">
      <summary>指示不会发生超时。</summary>
    </member>
    <member name="P:System.Management.ManagementOptions.Timeout">
      <summary>获取或设置要应用于该操作的超时。 注意，对于返回集合的操作，此超时将通过结果集合（而不是操作本身）应用于枚举（对于后面一种情况，应使用 <see cref="P:System.Management.EnumerationOptions.ReturnImmediately" /> 属性）。 此属性用来指示将以半同步方式执行操作。</summary>
      <returns>返回一个 <see cref="T:System.TimeSpan" />，它定义要应用于该操作的超时时间。</returns>
    </member>
    <member name="T:System.Management.ManagementPath">
      <summary>提供一个包装，用于分析和生成 WMI 对象的路径。</summary>
    </member>
    <member name="M:System.Management.ManagementPath.#ctor">
      <summary>初始化为空的 <see cref="T:System.Management.ManagementPath" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.ManagementPath.#ctor(System.String)">
      <summary>按给定路径初始化 <see cref="T:System.Management.ManagementPath" /> 类的新实例。</summary>
      <param name="path">对象路径。</param>
    </member>
    <member name="P:System.Management.ManagementPath.ClassName">
      <summary>获取或设置路径的类部分。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含路径的类部分。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.Clone">
      <summary>返回 <see cref="T:System.Management.ManagementPath" /> 的一个副本。</summary>
      <returns>克隆的对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.DefaultPath">
      <summary>获取或设置在没有指定范围时将使用的默认范围路径。 默认范围为 \\.\root\cimv2，可以通过设置此属性来更改。</summary>
      <returns>返回一个 <see cref="T:System.Management.ManagementPath" />，它包含不指定范围时所用的默认范围（命名空间）路径。</returns>
    </member>
    <member name="P:System.Management.ManagementPath.IsClass">
      <summary>获取或设置一个值，该值指示这是否为类路径。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示这是否为类路径。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.IsInstance">
      <summary>获取或设置一个值，该值指示这是否为实例路径。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示这是否为实例路径。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.IsSingleton">
      <summary>获取或设置一个值，该值指示这是否为单独实例路径。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示这是否为单独实例路径。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.NamespacePath">
      <summary>获取或设置路径的命名空间部分。 注意，这不包括服务器名，服务器名可以单独检索。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含路径的命名空间部分。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.Path">
      <summary>获取或设置对象中的完整路径的字符串表示形式。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含完整路径。</returns>
    </member>
    <member name="P:System.Management.ManagementPath.RelativePath">
      <summary>获取或设置相对路径：只包含类名和键。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含相对路径。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementPath.Server">
      <summary>获取或设置路径的服务器部分。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含服务器名称。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.SetAsClass">
      <summary>将路径设置为新的类路径。 这表示路径必须有类名，但没有键值。</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.SetAsSingleton">
      <summary>将路径设置为新的单独对象路径。 这表示它是一个实例的路径，但没有键值。</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementPath.System#ICloneable#Clone">
      <summary>创建作为当前实例副本的新对象。</summary>
      <returns>作为此实例副本的新对象。</returns>
    </member>
    <member name="M:System.Management.ManagementPath.ToString">
      <summary>以字符串表示形式返回完整对象路径。</summary>
      <returns>一个字符串，它包含此对象表示的完整对象路径。 该值与 <see cref="P:System.Management.ManagementPath.Path" /> 属性的值等效。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.ManagementQuery">
      <summary>提供所有管理查询对象的抽象基类。</summary>
    </member>
    <member name="M:System.Management.ManagementQuery.Clone">
      <summary>返回对象的一个副本。</summary>
      <returns>克隆的对象。</returns>
    </member>
    <member name="M:System.Management.ManagementQuery.ParseQuery(System.String)">
      <summary>分析查询字符串并相应地设置属性值。 如果查询有效，将分析查询的类名属性和条件属性。</summary>
      <param name="query">要分析的查询字符串。</param>
    </member>
    <member name="P:System.Management.ManagementQuery.QueryLanguage">
      <summary>获取或设置查询字符串中使用的查询语言，该语言定义查询字符串的格式。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含查询字符串的格式。</returns>
    </member>
    <member name="P:System.Management.ManagementQuery.QueryString">
      <summary>以文本格式获取或设置查询。</summary>
      <returns>返回一个包含查询的 <see cref="T:System.String" /> 值。</returns>
    </member>
    <member name="T:System.Management.ManagementScope">
      <summary>表示管理操作的范围（命名空间）。</summary>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor">
      <summary>使用默认值初始化 <see cref="T:System.Management.ManagementScope" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.Management.ManagementPath)">
      <summary>初始化 <see cref="T:System.Management.ManagementScope" /> 类的、表示指定范围路径的新实例。</summary>
      <param name="path">一个 <see cref="T:System.Management.ManagementPath" />，它包含 <see cref="T:System.Management.ManagementScope" /> 的服务器和命名空间的路径。</param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.Management.ManagementPath,System.Management.ConnectionOptions)">
      <summary>使用指定选项初始化 <see cref="T:System.Management.ManagementScope" /> 类的、表示指定范围路径的新实例。</summary>
      <param name="path">一个 <see cref="T:System.Management.ManagementPath" />，它包含 <see cref="T:System.Management.ManagementScope" /> 的服务器和命名空间的路径。</param>
      <param name="options">包含有关连接的选项的 <see cref="T:System.Management.ConnectionOptions" />。</param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Management.ManagementScope" /> 类的、表示指定范围路径的新实例。</summary>
      <param name="path">
        <see cref="T:System.Management.ManagementScope" /> 的服务器和命名空间的路径。</param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.String,System.Management.ConnectionOptions)">
      <summary>使用指定选项初始化 <see cref="T:System.Management.ManagementScope" /> 类的、表示指定范围路径的新实例。</summary>
      <param name="path">
        <see cref="T:System.Management.ManagementScope" /> 的服务器和命名空间。</param>
      <param name="options">包含有关连接的选项的 <see cref="T:System.Management.ConnectionOptions" />。</param>
    </member>
    <member name="M:System.Management.ManagementScope.Clone">
      <summary>返回对象的一个副本。</summary>
      <returns>
        <see cref="T:System.Management.ManagementScope" /> 的新副本。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementScope.Connect">
      <summary>将此 <see cref="T:System.Management.ManagementScope" /> 连接到实际的 WMI 范围。</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementScope.IsConnected">
      <summary>获取一个值，该值指示 <see cref="T:System.Management.ManagementScope" /> 当前是否绑定到了某个 WMI 服务器和命名空间。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示该范围当前是否绑定到了某个 WMI 服务器和命名空间。</returns>
    </member>
    <member name="P:System.Management.ManagementScope.Options">
      <summary>获取或设置有关创建 WMI 连接的选项。</summary>
      <returns>返回一个 <see cref="T:System.Management.ConnectionOptions" />，它包含用于建立 WMI 连接的选项。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ManagementScope.Path">
      <summary>获取或设置 <see cref="T:System.Management.ManagementScope" /> 的路径。</summary>
      <returns>返回一个 <see cref="T:System.Management.ManagementPath" />，它包含范围的路径（命名空间）。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.ManagementScope.System#ICloneable#Clone">
      <summary>创建作为当前实例副本的新对象。</summary>
      <returns>作为此实例副本的新对象。</returns>
    </member>
    <member name="T:System.Management.ManagementStatus">
      <summary>描述当前定义的所有 WMI 错误代码的枚举。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AccessDenied">
      <summary>当前用户没有执行该操作的权限。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AggregatingByObject">
      <summary>GROUP BY 子句引用了一个属性，该属性是未使用点表示法的嵌入对象。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AlreadyExists">
      <summary>在 Put 操作中指定了 wbemChangeFlagCreateOnly 标志，但该实例已经存在。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AmendedObject">
      <summary>在 Put 操作中使用已修正对象，但并未指定 WBEM_FLAG_USE_AMENDED_QUALIFIERS 标志。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.BackupRestoreWinmgmtRunning">
      <summary>当 WinMgmt.exe 正使用储存库时请求备份或还原储存库。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.BufferTooSmall">
      <summary>所提供的缓冲区太小，以致不能容纳枚举数中的所有对象或读取字符串属性。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CallCanceled">
      <summary>异步进程已内部取消或由用户取消。 注意，由于异步操作的时间和特性，该操作可能并未真正被取消。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeAbstract">
      <summary>在类的超类并非抽象类时使该类成为抽象类。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeKey">
      <summary>此处存在非法尝试，即对不能为键的属性指定键限定符。 键可以在对象的类定义中指定，但不能在每个实例基础上更改。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeSingleton">
      <summary>进行使类成为 singleton 类（如当类是从非 singleton 类派生时）的非法尝试。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotChangeIndexInheritance">
      <summary>尝试在实例或派生类已经开始使用索引后更改该索引。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotChangeKeyInheritance">
      <summary>尝试在实例或派生类已经开始使用键后更改键。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CircularReference">
      <summary>尝试创建循环引用（例如，从一个类自身派生该类）。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClassHasChildren">
      <summary>尝试进行使派生类无效的更改。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClassHasInstances">
      <summary>尝试删除或修改有实例的类。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClientTooSlow">
      <summary>客户端不能足够快地从枚举检索对象。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CriticalError">
      <summary>发生了严重的意外内部错误。 请向 Microsoft 技术支持部门报告此错误。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Different">
      <summary>所比较项（如对象和类）不相同。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.DuplicateObjects">
      <summary>在一个枚举的结果集内检测到同一对象的多个副本。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Failed">
      <summary>调用失败。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.False">
      <summary>在下列情况下返回此值：当没有更多对象可用时，当返回的对象数目小于所请求的数目时，或位于枚举的结尾时。 当将 0 作为参数的值来调用该方法时也会返回此值。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IllegalNull">
      <summary>将 null 值指定给了不能为 null 的属性（例如，由 Key、Indexed 或 Not_Null 限定符标记的属性）。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IllegalOperation">
      <summary>用户请求了非法操作，如从实例生成类。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IncompleteClass">
      <summary>当前对象不是有效的类定义。 该对象要么不完整，要么没有使用 <see cref="M:System.Management.ManagementObject.Put" />() 注册到 WMI。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InitializationFailure">
      <summary>组件（如提供程序）由于内部原因未能初始化。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidCimType">
      <summary>所指定的 CIM 类型无效。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidClass">
      <summary>所指定的类无效。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidContext">
      <summary>上下文对象无效。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidDuplicateParameter">
      <summary>在 CIM 方法中声明了重复参数。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidFlavor">
      <summary>指定的风格无效。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidMethod">
      <summary>所请求的方法不可用。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidMethodParameters">
      <summary>为该方法提供的参数无效。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidNamespace">
      <summary>未能找到所指定的命名空间。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidObject">
      <summary>指定的实例无效。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidObjectPath">
      <summary>指定的对象路径无效。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidOperation">
      <summary>所请求的操作无效。 此错误通常适用于删除类或属性的无效尝试。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidOperator">
      <summary>运算符对此属性类型无效。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidParameter">
      <summary>调用的参数之一不正确。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidParameterID">
      <summary>方法参数具有无效的 ID 限定符。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidProperty">
      <summary>无法识别属性类型。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidPropertyType">
      <summary>为属性指定的 CIM 类型无效。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidProviderRegistration">
      <summary>架构中引用的一个提供程序的注册不正确或不完整。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQualifier">
      <summary>尝试错误匹配限定符，如将 [ManagementKey] 放置到对象而不是属性上。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQualifierType">
      <summary>为限定符提供的值不是合法的限定符类型。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQuery">
      <summary>查询在语法上无效。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQueryType">
      <summary>不支持所请求的查询语言。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidStream">
      <summary>在远程会话过程中一个或多个网络数据包损坏。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidSuperclass">
      <summary>所指定的超类无效。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidSyntax">
      <summary>保留供将来使用。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.LocalCredentials">
      <summary>用户指定用于本地连接的用户名、密码或授权。 用户必须使用空用户名和密码并信赖默认安全性。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MarshalInvalidSignature">
      <summary>数据包损坏。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MarshalVersionMismatch">
      <summary>数据包的版本不受支持。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MethodDisabled">
      <summary>尝试执行标记为 [disabled] 的方法。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MethodNotImplemented">
      <summary>尝试执行在任何相关类中均未标记为 [implemented] 的方法。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingAggregationList">
      <summary>使用了 GROUP BY 子句。 不支持对所有属性的聚合。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingGroupWithin">
      <summary>使用 GROUP BY 子句时没有对应的 GROUP WITHIN 子句。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingParameterID">
      <summary>方法调用缺少一个参数。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NoError">
      <summary>操作成功。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NoMoreData">
      <summary>枚举中已没有更多可用数据，用户应终止枚举。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NonconsecutiveParameterIDs">
      <summary>一个或多个方法参数的 ID 限定符的顺序不对。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NondecoratedObject">
      <summary>保留供将来使用。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotAvailable">
      <summary>资源（通常为远程服务器）当前不可用。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotEventClass">
      <summary>筛选查询的 FROM 子句引用了非事件类的类。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotFound">
      <summary>未能找到对象。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotSupported">
      <summary>功能或操作不受支持。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OperationCanceled">
      <summary>该操作已取消。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OutOfDiskSpace">
      <summary>没有足够的可用磁盘空间来继续操作。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OutOfMemory">
      <summary>无足够内存来执行操作。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OverrideNotAllowed">
      <summary>不能对限定符执行添加操作，因为所属对象不允许重写。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ParameterIDOnRetval">
      <summary>方法的返回值有 ID 限定符。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PartialResults">
      <summary>由于资源无法访问（而不是安全性冲突），用户没有收到请求的所有对象。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Pending">
      <summary>请求仍在进行中，不过，结果尚不可用。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PrivilegeNotHeld">
      <summary>由于客户端没有所需的安全特权，所以操作失败。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedMethod">
      <summary>尝试重用超类现有的方法名称，而签名不匹配。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedProperty">
      <summary>用户尝试删除非其所有的属性。 该属性是从父类继承的。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedQualifier">
      <summary>用户尝试删除非其所有的限定符。 该限定符是从父类继承的。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropertyNotAnObject">
      <summary>在不是嵌入对象的属性上使用点表示法。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderFailure">
      <summary>提供程序在初始化后失败。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderLoadFailure">
      <summary>COM 无法定位架构中引用的提供程序。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderNotCapable">
      <summary>提供程序不能执行所请求的操作，如请求过于复杂的查询、检索实例、创建或更新类、删除类或枚举类。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderNotFound">
      <summary>架构中引用的提供程序没有对应的注册。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.QueryNotImplemented">
      <summary>保留供将来使用。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.QueueOverflow">
      <summary>由于太慢，异步传送队列从事件消费程序中溢出。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ReadOnly">
      <summary>尝试修改的属性是只读属性。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RefresherBusy">
      <summary>刷新程序正忙于进行另一个操作。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RegistrationTooBroad">
      <summary>提供程序注册与系统事件域重叠。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RegistrationTooPrecise">
      <summary>在此查询中没有使用 WITHIN 子句。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ResetToDefault">
      <summary>重写的属性已删除。 返回此值表示作为删除的结果，原始的非重写值已还原。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ServerTooBusy">
      <summary>事件传送失败。 提供程序可能选择重新引发该事件。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ShuttingDown">
      <summary>用户在 WMI 正处于关闭过程中时请求了一个操作。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.SystemProperty">
      <summary>尝试获取系统属性的限定符。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Timedout">
      <summary>调用超时。 这并非错误情况，所以可能已经返回了一些结果。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TooManyProperties">
      <summary>尝试创建的属性比当前版本的类所支持的属性多。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TooMuchData">
      <summary>保留供将来使用。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TransportFailure">
      <summary>发生了阻止正常操作的网络错误。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TypeMismatch">
      <summary>出现类型不匹配。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Unexpected">
      <summary>客户端执行了意外且非法的调用顺序。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UninterpretableProviderQuery">
      <summary>事件提供程序注册查询 (__EventProviderRegistration) 没有指定事件所提供给的类。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnknownObjectType">
      <summary>在封送过程中遇到类型或版本不正确的对象。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnknownPacketType">
      <summary>在封送过程中遇到类型或版本不正确的数据包。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnparsableQuery">
      <summary>筛选查询在语法上无效。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedClassUpdate">
      <summary>不支持所指定的类。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedParameter">
      <summary>一个或多个参数值（如查询文本）过于复杂或不受支持。 请求 WMI 使用较简单的参数重试该操作。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedPutExtension">
      <summary>提供程序不支持所请求的 Put 操作。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdateOverrideNotAllowed">
      <summary>尝试在派生类中重写非可重写的限定符。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdatePropagatedMethod">
      <summary>在派生类中使用冲突签名重新声明方法。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdateTypeMismatch">
      <summary>在派生类中使用冲突类型重定义属性。</summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ValueOutOfRange">
      <summary>请求时所用值超出范围，或是该请求与类型不兼容。</summary>
    </member>
    <member name="T:System.Management.MethodData">
      <summary>包含关于 WMI 方法的信息。</summary>
    </member>
    <member name="P:System.Management.MethodData.InParameters">
      <summary>获取方法的输入参数。 将每个参数都描述为对象的一个属性。 如果一个参数既是输入参数又是输出参数，则该参数将同时出现在 <see cref="P:System.Management.MethodData.InParameters" /> 和 <see cref="P:System.Management.MethodData.OutParameters" /> 属性中。</summary>
      <returns>返回一个 <see cref="T:System.Management.ManagementBaseObject" />，它包含方法的输入参数。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodData.Name">
      <summary>获取方法的名称。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含方法的名称。</returns>
    </member>
    <member name="P:System.Management.MethodData.Origin">
      <summary>获取管理类的名称，在该类中第一次将该方法引入到类的继承层次结构。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含方法第一次引入到其继承层次结构的类的名称。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodData.OutParameters">
      <summary>获取方法的输出参数。 将每个参数都描述为对象的一个属性。 如果一个参数既是输入参数又是输出参数，则该参数将同时出现在 <see cref="P:System.Management.MethodData.InParameters" /> 和 <see cref="P:System.Management.MethodData.OutParameters" /> 属性中。</summary>
      <returns>返回一个 <see cref="T:System.Management.ManagementBaseObject" />，它包含方法的输出参数。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodData.Qualifiers">
      <summary>获取在方法中定义的限定符集合。 每个元素都是 <see cref="T:System.Management.QualifierData" /> 类型，并包含诸如限定符名称、值和风格之类的信息。</summary>
      <returns>返回一个 <see cref="T:System.Management.QualifierDataCollection" />，它包含方法的限定符。</returns>
    </member>
    <member name="T:System.Management.MethodDataCollection">
      <summary>表示在集合中可用的方法集。</summary>
    </member>
    <member name="M:System.Management.MethodDataCollection.Add(System.String)">
      <summary>向 <see cref="T:System.Management.MethodDataCollection" /> 添加 <see cref="T:System.Management.MethodData" />。 此重载将向集合添加无参数的新方法。</summary>
      <param name="methodName">要添加的方法的名称。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)">
      <summary>向 <see cref="T:System.Management.MethodDataCollection" /> 添加 <see cref="T:System.Management.MethodData" />。 此重载将向集合添加带有指定参数对象的新方法。</summary>
      <param name="methodName">要添加的方法的名称。</param>
      <param name="inParameters">保存方法的输入参数的 <see cref="T:System.Management.ManagementBaseObject" />。</param>
      <param name="outParameters">保存方法的输出参数的 <see cref="T:System.Management.ManagementBaseObject" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>将 <see cref="T:System.Management.MethodDataCollection" /> 复制到一个数组中。</summary>
      <param name="array">集合所要复制到的数组。</param>
      <param name="index">复制操作开始处的索引。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.CopyTo(System.Management.MethodData[],System.Int32)">
      <summary>将 <see cref="T:System.Management.MethodDataCollection" /> 复制到一个专用 <see cref="T:System.Management.MethodData" /> 数组。</summary>
      <param name="methodArray">
        <see cref="T:System.Management.MethodData" /> 对象所要复制到的目标数组。</param>
      <param name="index">目标数组中开始复制处的索引。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodDataCollection.Count">
      <summary>获取 <see cref="T:System.Management.MethodDataCollection" /> 集合中的对象数。</summary>
      <returns>返回一个 <see cref="T:System.Int32" /> 值，该值表示集合中对象的数目。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.GetEnumerator">
      <summary>返回 <see cref="T:System.Management.MethodDataCollection" /> 的一个枚举数。</summary>
      <returns>要枚举通过集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodDataCollection.IsSynchronized">
      <summary>获取一个指示对象是否已同步的值。</summary>
      <returns>返回一个指示对象是否已同步的 <see cref="T:System.Boolean" /> 值。</returns>
    </member>
    <member name="P:System.Management.MethodDataCollection.Item(System.String)">
      <summary>从 <see cref="T:System.Management.MethodDataCollection" /> 中获取指定的 <see cref="T:System.Management.MethodData" />。</summary>
      <returns>返回一个 <see cref="T:System.Management.MethodData" />，它包含用于集合中的指定方法的方法数据。</returns>
      <param name="methodName">所请求方法的名称。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.MethodDataCollection.Remove(System.String)">
      <summary>从 <see cref="T:System.Management.MethodDataCollection" /> 中移除 <see cref="T:System.Management.MethodData" />。</summary>
      <param name="methodName">要从集合中移除的方法的名称。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.MethodDataCollection.SyncRoot">
      <summary>获取要用于同步的对象。</summary>
      <returns>返回一个 <see cref="T:System.Object" /> 值，该值表示要用于同步的对象。</returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回循环访问 <see cref="T:System.Management.MethodDataCollection" /> 的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns>用于 <see cref="T:System.Management.MethodDataCollection" /> 的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="T:System.Management.MethodDataCollection.MethodDataEnumerator">
      <summary>表示 <see cref="T:System.Management.MethodDataCollection" /> 中的 <see cref="T:System.Management.MethodData" /> 对象的枚举数。</summary>
    </member>
    <member name="P:System.Management.MethodDataCollection.MethodDataEnumerator.Current">
      <summary>返回 <see cref="T:System.Management.MethodDataCollection" /> 枚举中的当前 <see cref="T:System.Management.MethodData" />。</summary>
      <returns>集合中的当前 <see cref="T:System.Management.MethodData" /> 项。</returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.MethodDataEnumerator.MoveNext">
      <summary>移动到 <see cref="T:System.Management.MethodDataCollection" /> 枚举中的下一个元素。</summary>
      <returns>如果枚举数成功地推进到下一个方法，则为 true；如果枚举数越过集合的结尾，则为 false。</returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.MethodDataEnumerator.Reset">
      <summary>将枚举数重置到 <see cref="T:System.Management.MethodDataCollection" /> 枚举的起始处。</summary>
    </member>
    <member name="P:System.Management.MethodDataCollection.MethodDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>获取集合中的当前对象。</summary>
      <returns>返回集合中的当前元素。</returns>
      <exception cref="T:System.InvalidOperationException">在创建了枚举数后集合被修改了。</exception>
    </member>
    <member name="T:System.Management.ObjectGetOptions">
      <summary>指定用于获取管理对象的选项。</summary>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor">
      <summary>使用默认值，为获取 WMI 对象初始化 <see cref="T:System.Management.ObjectGetOptions" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor(System.Management.ManagementNamedValueCollection)">
      <summary>使用指定的提供程序特定的上下文，为获取 WMI 对象初始化 <see cref="T:System.Management.ObjectGetOptions" /> 类的新实例。</summary>
      <param name="context">要传递给提供程序的、提供程序特定的名称-值对上下文对象。</param>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Boolean)">
      <summary>使用给定的选项值，为获取 WMI 对象初始化 <see cref="T:System.Management.ObjectGetOptions" /> 类的新实例。</summary>
      <param name="context">要传递给提供程序的、提供程序特定的名称-值对上下文对象。</param>
      <param name="timeout">在操作超时之前允许其执行的时间。 默认值为 <see cref="F:System.TimeSpan.MaxValue" />。</param>
      <param name="useAmendedQualifiers">如果返回的对象应包含已修正的（可识别区域设置的）限定符，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Management.ObjectGetOptions.Clone">
      <summary>返回对象的一个副本。</summary>
      <returns>克隆的对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.ObjectGetOptions.UseAmendedQualifiers">
      <summary>获取或设置一个值，该值指示从 WMI 返回的对象是否应包含已修正信息。 通常，已修正信息就是附加在 WMI 对象上的可本地化信息，如对象和属性说明。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示从 WMI 返回的对象是否应包含已修正的信息。</returns>
    </member>
    <member name="T:System.Management.ObjectPutEventArgs">
      <summary>保存 <see cref="E:System.Management.ManagementOperationObserver.ObjectPut" /> 事件的事件数据。</summary>
    </member>
    <member name="P:System.Management.ObjectPutEventArgs.Path">
      <summary>获取已放置对象的标识。</summary>
      <returns>返回一个 <see cref="T:System.Management.ManagementPath" />，它包含已放置的对象的路径。</returns>
    </member>
    <member name="T:System.Management.ObjectPutEventHandler">
      <summary>表示将处理 <see cref="E:System.Management.ManagementOperationObserver.ObjectPut" /> 事件的方法。</summary>
      <param name="sender">要为其调用此方法的对象的实例。</param>
      <param name="e">
        <see cref="T:System.Management.ObjectPutEventArgs" />，指定调用事件的原因。</param>
    </member>
    <member name="T:System.Management.ObjectQuery">
      <summary>表示返回实例或类的管理查询。</summary>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor">
      <summary>初始化 <see cref="T:System.Management.ObjectQuery" /> 类的不带初始化值的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor(System.String)">
      <summary>按照指定查询字符串初始化 <see cref="T:System.Management.ObjectQuery" /> 类的新实例。</summary>
      <param name="query">查询的字符串表示形式。</param>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor(System.String,System.String)">
      <summary>按照指定查询字符串和查询语言初始化 <see cref="T:System.Management.ObjectQuery" /> 类的新实例。</summary>
      <param name="language">指定此查询所用的查询语言。</param>
      <param name="query">查询的字符串表示形式。</param>
    </member>
    <member name="M:System.Management.ObjectQuery.Clone">
      <summary>返回对象的一个副本。</summary>
      <returns>克隆的对象。</returns>
    </member>
    <member name="T:System.Management.ObjectReadyEventArgs">
      <summary>保存 <see cref="E:System.Management.ManagementOperationObserver.ObjectReady" /> 事件的事件数据。</summary>
    </member>
    <member name="P:System.Management.ObjectReadyEventArgs.NewObject">
      <summary>获取新返回的对象。</summary>
      <returns>返回一个 <see cref="T:System.Management.ManagementBaseObject" />，它包含新返回的对象。</returns>
    </member>
    <member name="T:System.Management.ObjectReadyEventHandler">
      <summary>表示将处理 <see cref="E:System.Management.ManagementOperationObserver.ObjectReady" /> 事件的方法。</summary>
      <param name="sender">要为其调用此方法的对象的实例。</param>
      <param name="e">
        <see cref="T:System.Management.ObjectReadyEventArgs" />，指定调用事件的原因。</param>
    </member>
    <member name="T:System.Management.ProgressEventArgs">
      <summary>保存 <see cref="E:System.Management.ManagementOperationObserver.Progress" /> 事件的事件数据。</summary>
    </member>
    <member name="P:System.Management.ProgressEventArgs.Current">
      <summary>获取操作已完成的当前工作量。 这总是小于或等于 <see cref="P:System.Management.ProgressEventArgs.UpperBound" />。</summary>
      <returns>返回一个 <see cref="T:System.Int32" /> 值，该值表示操作当前已完成的工作量。</returns>
    </member>
    <member name="P:System.Management.ProgressEventArgs.Message">
      <summary>获取或设置有关操作进度的可选附加信息。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含有关操作进度的信息。</returns>
    </member>
    <member name="P:System.Management.ProgressEventArgs.UpperBound">
      <summary>获取该操作需要完成的总工作量。</summary>
      <returns>返回一个 <see cref="T:System.Int32" /> 值，该值表示操作将完成的总工作量。</returns>
    </member>
    <member name="T:System.Management.ProgressEventHandler">
      <summary>表示将处理 <see cref="E:System.Management.ManagementOperationObserver.Progress" /> 事件的方法。</summary>
      <param name="sender">要为其调用此方法的对象的实例。</param>
      <param name="e">
        <see cref="T:System.Management.ProgressEventArgs" />，指定调用事件的原因。</param>
    </member>
    <member name="T:System.Management.PropertyData">
      <summary>表示关于 WMI 属性的信息。</summary>
    </member>
    <member name="P:System.Management.PropertyData.IsArray">
      <summary>获取一个值，该值指示属性是否为数组。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示属性是否为数组。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.IsLocal">
      <summary>获取一个值，该值指示属性是否已在当前 WMI 类中定义。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示属性是否已在当前 WMI 类中定义。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.Name">
      <summary>获取属性的名称。</summary>
      <returns>返回一个包含属性名称的 <see cref="T:System.String" /> 值。</returns>
    </member>
    <member name="P:System.Management.PropertyData.Origin">
      <summary>获取层次结构中引入该属性的 WMI 类的名称。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含层次结构中引入该属性的 WMI 类的名称。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.Qualifiers">
      <summary>获取属性上定义的限定符集。</summary>
      <returns>返回一个 <see cref="T:System.Management.QualifierDataCollection" /> 值，该值包含属性上定义的限定符集。</returns>
    </member>
    <member name="P:System.Management.PropertyData.Type">
      <summary>获取属性的 CIM 类型。</summary>
      <returns>返回一个 <see cref="T:System.Management.CimType" /> 枚举值，该值表示属性的 CIM 类型。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyData.Value">
      <summary>获取或设置属性的当前值。</summary>
      <returns>返回一个 <see cref="T:System.Object" /> 值，该值表示属性的值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.PropertyDataCollection">
      <summary>表示 WMI 对象的属性集。</summary>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)">
      <summary>添加新的、没有赋值的 <see cref="T:System.Management.PropertyData" />。</summary>
      <param name="propertyName">属性的名称。</param>
      <param name="propertyType">属性的公共信息模型 (CIM) 类型。</param>
      <param name="isArray">若为 true，则指定属性为数组类型；否则为 false。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Object)">
      <summary>添加新的、带有指定值的 <see cref="T:System.Management.PropertyData" />。 值不能为 null，并且必须能够转换为公共信息模型 (CIM) 类型。</summary>
      <param name="propertyName">新属性的名称。</param>
      <param name="propertyValue">属性的值（不能为 null）。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)">
      <summary>添加一个具有指定值和公共信息模型 (CIM) 类型的新 <see cref="T:System.Management.PropertyData" />。</summary>
      <param name="propertyName">属性的名称。</param>
      <param name="propertyValue">属性的值（可以为 null）。</param>
      <param name="propertyType">属性的 CIM 类型。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>将 <see cref="T:System.Management.PropertyDataCollection" /> 复制到一个数组中。</summary>
      <param name="array">
        <see cref="T:System.Management.PropertyDataCollection" /> 所要复制到的数组。</param>
      <param name="index">复制操作开始所在的索引。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)">
      <summary>将 <see cref="T:System.Management.PropertyDataCollection" /> 复制到一个专用的 <see cref="T:System.Management.PropertyData" /> 对象数组。</summary>
      <param name="propertyArray">将包含要复制的 <see cref="T:System.Management.PropertyDataCollection" /> 的目标数组。</param>
      <param name="index">目标数组中开始复制处的索引。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyDataCollection.Count">
      <summary>获取 <see cref="T:System.Management.PropertyDataCollection" /> 中的对象的数目。</summary>
      <returns>返回一个 <see cref="T:System.Int32" /> 值，该值表示集合中对象的数目。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.PropertyDataCollection.GetEnumerator">
      <summary>返回此 <see cref="T:System.Management.PropertyDataCollection" /> 的枚举数。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyDataCollection.IsSynchronized">
      <summary>获取一个指示对象是否已同步的值。</summary>
      <returns>返回一个指示对象是否已同步的 <see cref="T:System.Boolean" /> 值。</returns>
    </member>
    <member name="P:System.Management.PropertyDataCollection.Item(System.String)">
      <summary>使用 [] 语法从 <see cref="T:System.Management.PropertyDataCollection" /> 中获取指定属性。 此属性是 <see cref="T:System.Management.PropertyDataCollection" /> 类的索引器。</summary>
      <returns>返回一个 <see cref="T:System.Management.PropertyData" />，它包含集合中指定属性的数据。</returns>
      <param name="propertyName">要检索的属性的名称。</param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Remove(System.String)">
      <summary>从 <see cref="T:System.Management.PropertyDataCollection" /> 中移除 <see cref="T:System.Management.PropertyData" />。</summary>
      <param name="propertyName">要移除的属性的名称。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PropertyDataCollection.SyncRoot">
      <summary>获取要用于同步的对象。</summary>
      <returns>返回一个 <see cref="T:System.Object" /> 值，该值包含要用于同步的对象。</returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回循环访问 <see cref="T:System.Management.PropertyDataCollection" /> 的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns>用于 <see cref="T:System.Management.PropertyDataCollection" /> 的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="T:System.Management.PropertyDataCollection.PropertyDataEnumerator">
      <summary>表示 <see cref="T:System.Management.PropertyDataCollection" /> 中的 <see cref="T:System.Management.PropertyData" /> 对象的枚举数。</summary>
    </member>
    <member name="P:System.Management.PropertyDataCollection.PropertyDataEnumerator.Current">
      <summary>获取 <see cref="T:System.Management.PropertyDataCollection" /> 枚举中的当前 <see cref="T:System.Management.PropertyData" />。</summary>
      <returns>集合中的当前 <see cref="T:System.Management.PropertyData" /> 元素。</returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.PropertyDataEnumerator.MoveNext">
      <summary>移动到 <see cref="T:System.Management.PropertyDataCollection" /> 枚举中的下一个元素。</summary>
      <returns>如果枚举数成功地推进到下一个元素，则为 true；如果枚举数越过集合的结尾，则为 false。</returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset">
      <summary>将枚举数重置到 <see cref="T:System.Management.PropertyDataCollection" /> 枚举的起始处。</summary>
    </member>
    <member name="P:System.Management.PropertyDataCollection.PropertyDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>获取集合中的当前对象。</summary>
      <returns>返回集合中的当前元素。</returns>
      <exception cref="T:System.InvalidOperationException">在创建了枚举数后集合被修改了。</exception>
    </member>
    <member name="T:System.Management.PutOptions">
      <summary>指定用于提交管理对象更改的选项。</summary>
    </member>
    <member name="M:System.Management.PutOptions.#ctor">
      <summary>使用默认值为 Put 操作初始化 <see cref="T:System.Management.PutOptions" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.PutOptions.#ctor(System.Management.ManagementNamedValueCollection)">
      <summary>使用指定的提供程序特定的上下文，为提交 WMI 对象初始化 <see cref="T:System.Management.PutOptions" /> 类的新实例。</summary>
      <param name="context">要传递给提供程序的、提供程序特定的名称-值对上下文对象。</param>
    </member>
    <member name="M:System.Management.PutOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Boolean,System.Management.PutType)">
      <summary>使用指定的选项值为提交 WMI 对象初始化 <see cref="T:System.Management.PutOptions" /> 类的新实例。</summary>
      <param name="context">要传递给提供程序的、提供程序特定的名称-值对对象。</param>
      <param name="timeout">在操作超时之前允许其执行的时间。 默认值为 <see cref="F:System.TimeSpan.MaxValue" />。</param>
      <param name="useAmendedQualifiers">如果返回的对象应包含已修正的（可识别区域设置的）限定符，则为 true；否则为 false。</param>
      <param name="putType">要执行的提交类型（更新或创建）。</param>
    </member>
    <member name="M:System.Management.PutOptions.Clone">
      <summary>返回对象的一个副本。</summary>
      <returns>克隆的对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.PutOptions.Type">
      <summary>获取或设置要为对象执行的提交的类型。</summary>
      <returns>返回 <see cref="T:System.Management.PutType" /> 枚举值，该值表示要为对象执行的提交的类型。</returns>
    </member>
    <member name="P:System.Management.PutOptions.UseAmendedQualifiers">
      <summary>获取或设置一个值，该值指示从 WMI 返回的对象是否应包含已修正信息。 通常，已修正信息就是附加在 WMI 对象上的可本地化信息，如对象和属性说明。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示从 WMI 返回的对象是否应包含已修正的信息。</returns>
    </member>
    <member name="T:System.Management.PutType">
      <summary>描述当使用 <see cref="M:System.Management.ManagementObject.Put" /> 时将对象保存到 WMI 的可能效果。</summary>
    </member>
    <member name="F:System.Management.PutType.CreateOnly">
      <summary>只创建对象，并不更新现有对象。</summary>
    </member>
    <member name="F:System.Management.PutType.None">
      <summary>未进行更改。</summary>
    </member>
    <member name="F:System.Management.PutType.UpdateOnly">
      <summary>只更新现有对象，并不创建新对象。</summary>
    </member>
    <member name="F:System.Management.PutType.UpdateOrCreate">
      <summary>无论是更新现有对象还是创建新对象，均保存该对象。</summary>
    </member>
    <member name="T:System.Management.QualifierData">
      <summary>包含关于 WMI 限定符的信息。</summary>
    </member>
    <member name="P:System.Management.QualifierData.IsAmended">
      <summary>获取或设置一个值，该值指示限定符是否已修正。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示限定符是否已修正。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.IsLocal">
      <summary>获取一个值，该值指示限定符是在此类上本地定义的还是从基类传播的。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示限定符是在此类上本地定义的还是从基类传播的。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.IsOverridable">
      <summary>获取或设置一个值，该值指示在传播时限定符的值是否可以重写。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示限定符的值是否可以在传播时重写。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.Name">
      <summary>表示限定符的名称。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含限定符的名称。</returns>
    </member>
    <member name="P:System.Management.QualifierData.PropagatesToInstance">
      <summary>获取或设置一个值，该值指示是否将限定符传播给类的实例。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示是否应将限定符传播给类的实例。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.PropagatesToSubclass">
      <summary>获取或设置一个值，该值指示是否将限定符传播给类的子类。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示是否应将限定符传播给类的子类。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierData.Value">
      <summary>获取或设置限定符的值。</summary>
      <returns>返回一个 <see cref="T:System.Object" /> 值，该值包含限定符的值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.QualifierDataCollection">
      <summary>表示 <see cref="T:System.Management.QualifierData" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Add(System.String,System.Object)">
      <summary>向 <see cref="T:System.Management.QualifierDataCollection" /> 添加 <see cref="T:System.Management.QualifierData" />。 此重载指定限定符的名称和值。</summary>
      <param name="qualifierName">要添加到 <see cref="T:System.Management.QualifierDataCollection" /> 的 <see cref="T:System.Management.QualifierData" /> 的名称。</param>
      <param name="qualifierValue">新限定符的值。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>向 <see cref="T:System.Management.QualifierDataCollection" /> 添加 <see cref="T:System.Management.QualifierData" />。 此重载指定 <see cref="T:System.Management.QualifierData" /> 的所有属性值。</summary>
      <param name="qualifierName">限定符名称。</param>
      <param name="qualifierValue">限定符的值。</param>
      <param name="isAmended">如果要指定此限定符是已修正的（<paramref name="flavor" />），则为 true；否则为 false。</param>
      <param name="propagatesToInstance">若为 true，则将此限定符传播给实例；否则为 false。</param>
      <param name="propagatesToSubclass">若为 true，则将此限定符传播给子类；否则为 false。</param>
      <param name="isOverridable">若为 true，则指定此限定符的值可在子类的实例中重写；否则为 false。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>将 <see cref="T:System.Management.QualifierDataCollection" /> 复制到一个数组中。</summary>
      <param name="array">
        <see cref="T:System.Management.QualifierDataCollection" /> 所要复制到的数组。</param>
      <param name="index">复制操作开始所在的索引。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)">
      <summary>将 <see cref="T:System.Management.QualifierDataCollection" /> 复制到专用 <see cref="T:System.Management.QualifierData" /> 数组中。</summary>
      <param name="qualifierArray">
        <see cref="T:System.Management.QualifierDataCollection" /> 所要复制到的 <see cref="T:System.Management.QualifierData" /> 对象的专用数组。</param>
      <param name="index">复制操作开始所在的索引。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierDataCollection.Count">
      <summary>获取 <see cref="T:System.Management.QualifierDataCollection" /> 中的 <see cref="T:System.Management.QualifierData" /> 对象数。</summary>
      <returns>返回一个 <see cref="T:System.Int32" /> 值，该值表示集合中对象的数目。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.GetEnumerator">
      <summary>返回 <see cref="T:System.Management.QualifierDataCollection" /> 的一个枚举数。 此方法为强类型方法。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierDataCollection.IsSynchronized">
      <summary>获取一个指示对象是否已同步的值。</summary>
      <returns>返回一个指示对象是否已同步的 <see cref="T:System.Boolean" /> 值。</returns>
    </member>
    <member name="P:System.Management.QualifierDataCollection.Item(System.String)">
      <summary>从 <see cref="T:System.Management.QualifierDataCollection" /> 中获取指定的 <see cref="T:System.Management.QualifierData" />。</summary>
      <returns>返回 <see cref="T:System.Management.QualifierData" />，其中包含集合中指定限定符的数据。</returns>
      <param name="qualifierName">要在 <see cref="T:System.Management.QualifierDataCollection" /> 中访问的 <see cref="T:System.Management.QualifierData" /> 的名称。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Remove(System.String)">
      <summary>按名称从 <see cref="T:System.Management.QualifierDataCollection" /> 移除 <see cref="T:System.Management.QualifierData" />。</summary>
      <param name="qualifierName">要移除的 <see cref="T:System.Management.QualifierData" /> 的名称。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.QualifierDataCollection.SyncRoot">
      <summary>获取要用于同步的对象。</summary>
      <returns>返回一个将用于同步的 <see cref="T:System.Object" /> 值。</returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回循环访问 <see cref="T:System.Management.QualifierDataCollection" /> 的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns>用于 <see cref="T:System.Management.QualifierDataCollection" /> 的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="T:System.Management.QualifierDataCollection.QualifierDataEnumerator">
      <summary>表示 <see cref="T:System.Management.QualifierDataCollection" /> 中的 <see cref="T:System.Management.QualifierData" /> 对象的枚举数。</summary>
    </member>
    <member name="P:System.Management.QualifierDataCollection.QualifierDataEnumerator.Current">
      <summary>获取或设置 <see cref="T:System.Management.QualifierDataCollection" /> 枚举中的当前 <see cref="T:System.Management.QualifierData" />。</summary>
      <returns>集合中的当前 <see cref="T:System.Management.QualifierData" /> 元素。</returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.QualifierDataEnumerator.MoveNext">
      <summary>移动到 <see cref="T:System.Management.QualifierDataCollection" /> 枚举中的下一个元素。</summary>
      <returns>如果枚举数成功地推进到下一个元素，则为 true；如果枚举数越过集合的结尾，则为 false。</returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset">
      <summary>将枚举数重置到 <see cref="T:System.Management.QualifierDataCollection" /> 枚举的起始处。</summary>
    </member>
    <member name="P:System.Management.QualifierDataCollection.QualifierDataEnumerator.System#Collections#IEnumerator#Current">
      <summary>获取集合中的当前对象。</summary>
      <returns>返回集合中的当前元素。</returns>
      <exception cref="T:System.InvalidOperationException">在创建了枚举数后集合被修改了。</exception>
    </member>
    <member name="T:System.Management.RelatedObjectQuery">
      <summary>表示 WQL ASSOCIATORS OF 数据查询。 它可以用于实例查询和架构查询。</summary>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor">
      <summary>初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>使用给定的参数集，为架构查询初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 类的新实例。 此构造函数只能用于架构查询，第一个参数必须设置为 true。</summary>
      <param name="isSchemaQuery">若为 true，则指示这是架构查询；否则为 false。</param>
      <param name="sourceObject">源类的路径。</param>
      <param name="relatedClass">相关对象所需的基类。</param>
      <param name="relationshipClass">关系类型。</param>
      <param name="relatedQualifier">需要在相关对象中存在的限定符。</param>
      <param name="relationshipQualifier">需要在关系中存在的限定符。</param>
      <param name="relatedRole">相关对象需要在关系中扮演的角色。</param>
      <param name="thisRole">源类需要在关系中扮演的角色。</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 类的新实例。 如果可以将指定的字符串成功地分析为 WQL 查询，则认为该字符串是查询字符串；否则，将假定它是查询的源对象的路径。 在此情况下，假定该查询为实例查询。</summary>
      <param name="queryOrSourceObject">查询字符串或源对象的路径。</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String)">
      <summary>根据给定源对象和相关类初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 类的新实例。 假定查询为实例查询（相对于架构查询）。</summary>
      <param name="sourceObject">该查询的源对象的路径。</param>
      <param name="relatedClass">相关对象的类。</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>按照给定的参数集初始化 <see cref="T:System.Management.RelatedObjectQuery" /> 类的新实例。 假定查询为实例查询（相对于架构查询）。</summary>
      <param name="sourceObject">源对象的路径。</param>
      <param name="relatedClass">相关对象所需的类。</param>
      <param name="relationshipClass">关系类型。</param>
      <param name="relatedQualifier">需要在相关对象中存在的限定符。</param>
      <param name="relationshipQualifier">需要在关系中存在的限定符。</param>
      <param name="relatedRole">相关对象需要在关系中扮演的角色。</param>
      <param name="thisRole">源对象需要在关系中扮演的角色。</param>
      <param name="classDefinitionsOnly">如果只返回相关对象的类定义，为 true；否则为 false。</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.BuildQuery">
      <summary>根据当前属性值生成查询字符串。</summary>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.ClassDefinitionsOnly">
      <summary>获取或设置一个值，该值指示对于符合查询的所有实例只返回它们的类定义。 此参数只对实例查询有效。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示对于符合查询的所有实例只返回它们的类定义。</returns>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.Clone">
      <summary>创建对象的一个副本。</summary>
      <returns>所复制的对象。</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.IsSchemaQuery">
      <summary>获取或设置一个值，该值指示这是架构查询还是实例查询。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示这是否为架构查询。</returns>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.ParseQuery(System.String)">
      <summary>分析查询字符串并相应地设置属性值。</summary>
      <param name="query">要分析的查询字符串。</param>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedClass">
      <summary>获取或设置终结点对象的类（相关类）。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含相关类名。</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedQualifier">
      <summary>获取或设置需要在相关对象中定义的限定符。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含相关对象所需的限定符的名称。</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedRole">
      <summary>获取或设置所返回的相关对象要在关系中扮演的角色。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含相关对象的角色。</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelationshipClass">
      <summary>获取或设置关系（关联）的类型。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含关系类名。</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelationshipQualifier">
      <summary>获取或设置需要在关系对象中定义的限定符。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含关系对象所需的限定符的名称。</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.SourceObject">
      <summary>获取或设置用于查询的源对象。 对于实例查询，这通常是实例路径。 对于架构查询，这通常是类名。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含要用于查询的对象的路径。</returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.ThisRole">
      <summary>获取或设置源对象应当在关系中扮演的角色。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含此对象的角色。</returns>
    </member>
    <member name="T:System.Management.RelationshipQuery">
      <summary>表示 WQL REFERENCES OF 数据查询。</summary>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor">
      <summary>初始化 <see cref="T:System.Management.RelationshipQuery" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String)">
      <summary>使用给定的参数集，为架构查询初始化 <see cref="T:System.Management.RelationshipQuery" /> 类的新实例。 此构造函数仅用于架构查询，因此第一个参数必须为 true。</summary>
      <param name="isSchemaQuery">若为 true，则指示这是架构查询；否则为 false。</param>
      <param name="sourceObject">此查询的源类的路径。</param>
      <param name="relationshipClass">要查询的关系的类型。</param>
      <param name="relationshipQualifier">需要在关系类中存在的限定符。</param>
      <param name="thisRole">源类需要在关系中扮演的角色。</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Management.RelationshipQuery" /> 类的新实例。 如果可以将指定的字符串成功地分析为 WQL 查询，则认为该字符串是查询字符串；否则，将假定它是查询的源对象的路径。 在此情况下，假定该查询为实例查询。</summary>
      <param name="queryOrSourceObject">查询字符串或此查询的类名。</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String,System.String)">
      <summary>根据给定的源对象和关系类初始化 <see cref="T:System.Management.RelationshipQuery" /> 类的新实例。 假定查询为实例查询（相对于架构查询）。</summary>
      <param name="sourceObject">该查询的源对象的路径。</param>
      <param name="relationshipClass">要查询的关系的类型。</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>按照给定的参数集初始化 <see cref="T:System.Management.RelationshipQuery" /> 类的新实例。 假定查询为实例查询（相对于架构查询）。</summary>
      <param name="sourceObject">该查询的源对象的路径。</param>
      <param name="relationshipClass">要查询的关系的类型。</param>
      <param name="relationshipQualifier">需要在关系对象中存在的限定符。</param>
      <param name="thisRole">源对象需要在关系中扮演的角色。</param>
      <param name="classDefinitionsOnly">当此方法返回时，它包含一个布尔值，该值指示只返回结果对象的类定义。</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.BuildQuery">
      <summary>根据当前属性值生成查询字符串。</summary>
    </member>
    <member name="P:System.Management.RelationshipQuery.ClassDefinitionsOnly">
      <summary>获取或设置一个值，该值指示只返回相关关系对象的类定义。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示只返回相关关系对象的类定义。</returns>
    </member>
    <member name="M:System.Management.RelationshipQuery.Clone">
      <summary>创建对象的一个副本。</summary>
      <returns>所复制的对象。</returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.IsSchemaQuery">
      <summary>获取或设置一个值，该值指示此查询是架构查询还是实例查询。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示此查询是否为架构查询。</returns>
    </member>
    <member name="M:System.Management.RelationshipQuery.ParseQuery(System.String)">
      <summary>分析查询字符串并相应地设置属性值。</summary>
      <param name="query">要分析的查询字符串。</param>
    </member>
    <member name="P:System.Management.RelationshipQuery.RelationshipClass">
      <summary>获取或设置查询中所需的关系对象的类。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含关系类名。</returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.RelationshipQualifier">
      <summary>获取或设置关系对象上所需的限定符。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含关系对象所需的限定符的名称。</returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.SourceObject">
      <summary>获取或设置此查询的源对象。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含要用于查询的对象的路径。</returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.ThisRole">
      <summary>获取或设置源对象在关系中扮演的角色。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含此对象的角色。</returns>
    </member>
    <member name="T:System.Management.SelectQuery">
      <summary>表示 WQL SELECT 数据查询。</summary>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor">
      <summary>初始化 <see cref="T:System.Management.SelectQuery" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.Boolean,System.String)">
      <summary>为架构查询初始化 <see cref="T:System.Management.SelectQuery" /> 类的新实例（可以指定条件）。</summary>
      <param name="isSchemaQuery">若为 true，则指示这是架构查询；否则为 false。 false 值在此构造函数中无效。</param>
      <param name="condition">形成类的结果集时要应用的条件。</param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String)">
      <summary>为指定查询或指定类名初始化 <see cref="T:System.Management.SelectQuery" /> 类的新实例。</summary>
      <param name="queryOrClassName">整个查询或要在查询中使用的类名。 此类中的分析器尝试将字符串分析为有效的 WQL SELECT 查询。 如果分析器不能成功分析，则假定该字符串为类名。</param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String,System.String)">
      <summary>用指定的类名和条件初始化 <see cref="T:System.Management.SelectQuery" /> 类的新实例。</summary>
      <param name="className">要在查询中选择的类的名称。</param>
      <param name="condition">要在查询中应用的条件。</param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String,System.String,System.String[])">
      <summary>在只选择指定属性的情况下，使用指定的类名和条件初始化 <see cref="T:System.Management.SelectQuery" /> 类的新实例。</summary>
      <param name="className">将从其中进行选择的类的名称。</param>
      <param name="condition">要应用到选定类的实例的条件。</param>
      <param name="selectedProperties">要在查询结果中返回的属性名的数组。</param>
    </member>
    <member name="M:System.Management.SelectQuery.BuildQuery">
      <summary>根据当前属性值生成查询字符串。</summary>
    </member>
    <member name="P:System.Management.SelectQuery.ClassName">
      <summary>获取或设置要从查询中选择的类名。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含查询中的类的名称。</returns>
    </member>
    <member name="M:System.Management.SelectQuery.Clone">
      <summary>创建对象的一个副本。</summary>
      <returns>所复制的对象。</returns>
    </member>
    <member name="P:System.Management.SelectQuery.Condition">
      <summary>获取或设置要在 SELECT 查询中应用的条件。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含要应用于 SELECT 查询的条件。</returns>
    </member>
    <member name="P:System.Management.SelectQuery.IsSchemaQuery">
      <summary>获取或设置一个值，该值指示此查询是架构查询还是实例查询。</summary>
      <returns>返回一个 <see cref="T:System.Boolean" /> 值，该值指示查询是否为架构查询。</returns>
    </member>
    <member name="M:System.Management.SelectQuery.ParseQuery(System.String)">
      <summary>分析查询字符串并相应地设置属性值。</summary>
      <param name="query">要分析的查询字符串。</param>
    </member>
    <member name="P:System.Management.SelectQuery.QueryString">
      <summary>以字符串形式获取或设置 <see cref="T:System.Management.SelectQuery" /> 对象中的查询。</summary>
      <returns>返回一个包含查询的 <see cref="T:System.String" /> 值。</returns>
    </member>
    <member name="P:System.Management.SelectQuery.SelectedProperties">
      <summary>获取或设置要在查询中选定的属性名的数组。</summary>
      <returns>返回一个 <see cref="T:System.Collections.Specialized.StringCollection" />，它包含要在查询中选定的属性的名称。</returns>
    </member>
    <member name="T:System.Management.StoppedEventArgs">
      <summary>保存 <see cref="E:System.Management.ManagementEventWatcher.Stopped" /> 事件的事件数据。</summary>
    </member>
    <member name="P:System.Management.StoppedEventArgs.Status">
      <summary>获取操作的完成状态。</summary>
      <returns>返回一个 <see cref="T:System.Management.ManagementStatus" />，它包含操作的状态。</returns>
    </member>
    <member name="T:System.Management.StoppedEventHandler">
      <summary>表示将处理 <see cref="E:System.Management.ManagementEventWatcher.Stopped" /> 事件的方法。</summary>
      <param name="sender">要为其调用此方法的对象的实例。</param>
      <param name="e">
        <see cref="T:System.Management.StoppedEventArgs" />，指定调用事件的原因。</param>
    </member>
    <member name="T:System.Management.TextFormat">
      <summary>描述可以用于 <see cref="M:System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)" /> 的可能的文本格式。</summary>
    </member>
    <member name="F:System.Management.TextFormat.CimDtd20">
      <summary>对应于 CIM DTD 2.0 版的 XML DTD。</summary>
    </member>
    <member name="F:System.Management.TextFormat.Mof">
      <summary>托管对象格式</summary>
    </member>
    <member name="F:System.Management.TextFormat.WmiDtd20">
      <summary>对应于 CIM DTD 2.0 版的 XML WMI DTD。 与嵌入对象一样，使用此值将启用一些特定于 WMI 的扩展。</summary>
    </member>
    <member name="T:System.Management.WqlEventQuery">
      <summary>表示 WQL 格式的 WMI 事件查询。</summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor">
      <summary>初始化 <see cref="T:System.Management.WqlEventQuery" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String)">
      <summary>基于给定的查询字符串或事件类名初始化 <see cref="T:System.Management.WqlEventQuery" /> 类的新实例。</summary>
      <param name="queryOrEventClassName">代表整个事件查询或要查询的事件类名称的字符串。 对象将尝试将该字符串分析为有效的事件查询。 如果不成功，分析器将假定该参数表示事件类名。</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String)">
      <summary>使用指定条件，为指定事件类名初始化 <see cref="T:System.Management.WqlEventQuery" /> 类的新实例。</summary>
      <param name="eventClassName">要查询的事件类的名称。</param>
      <param name="condition">要应用到指定类的事件的条件。</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan)">
      <summary>使用指定的事件类名、条件和分组间隔初始化 <see cref="T:System.Management.WqlEventQuery" /> 类的新实例。</summary>
      <param name="eventClassName">要查询的事件类的名称。</param>
      <param name="condition">要应用到指定类的事件的条件。</param>
      <param name="groupWithinInterval">指定的间隔，WMI 在该间隔内发送一个 <paramref name="aggregate event" />，而不是发送很多个事件。</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan,System.String[])">
      <summary>使用指定的事件类名、条件、分组间隔和分组属性来初始化 <see cref="T:System.Management.WqlEventQuery" /> 类的新实例。</summary>
      <param name="eventClassName">要查询的事件类的名称。</param>
      <param name="condition">要应用到指定类的事件的条件。</param>
      <param name="groupWithinInterval">指定的间隔，WMI 在该间隔内发送一个 <paramref name="aggregate event" />，而不是发送很多个事件。</param>
      <param name="groupByPropertyList">作为事件分组依据的事件类的属性。</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan)">
      <summary>使用指定滞后时间，为指定的事件类初始化 <see cref="T:System.Management.WqlEventQuery" /> 类的新实例。</summary>
      <param name="eventClassName">要查询的事件类的名称。</param>
      <param name="withinInterval">
        <see cref="T:System.TimeSpan" /> 值，它指定对于接收此事件而言所能接受的滞后时间。 该值用于以下情况：对于所请求的查询没有显式事件提供程序，并且需要 WMI 轮询条件。 该间隔是在必须发送事件通知之前可以经过的最长时间。</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String)">
      <summary>使用指定的事件类名、轮询间隔和条件初始化 <see cref="T:System.Management.WqlEventQuery" /> 类的新实例。</summary>
      <param name="eventClassName">要查询的事件类的名称。</param>
      <param name="withinInterval">
        <see cref="T:System.TimeSpan" /> 值，它指定对于接收此事件而言所能接受的滞后时间。 该值用于以下情况：对于所请求的查询没有显式事件提供程序，并且需要 WMI 轮询条件。 该间隔是在必须发送事件通知之前可以经过的最长时间。</param>
      <param name="condition">要应用到指定类的事件的条件。</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String,System.TimeSpan,System.String[],System.String)">
      <summary>使用指定的事件类名、条件、分组间隔、分组属性和指定数目的事件来初始化 <see cref="T:System.Management.WqlEventQuery" /> 类的新实例。</summary>
      <param name="eventClassName">要查询的事件类的名称。</param>
      <param name="withinInterval">
        <see cref="T:System.TimeSpan" /> 值，它指定对于接收此事件而言所能接受的滞后时间。 该值用于以下情况：对于所请求的查询没有显式事件提供程序，并且需要 WMI 轮询条件。 该间隔是在必须发送事件通知之前可以经过的最长时间。</param>
      <param name="condition">要应用到指定类的事件的条件。</param>
      <param name="groupWithinInterval">指定的间隔，WMI 在该间隔内发送一个 <paramref name="aggregate event" />，而不是发送很多个事件。</param>
      <param name="groupByPropertyList">作为事件分组依据的事件类的属性。</param>
      <param name="havingCondition">要应用到事件数目的条件。</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.BuildQuery">
      <summary>根据当前属性值生成查询字符串。</summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.Clone">
      <summary>创建对象的一个副本。</summary>
      <returns>所复制的对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.WqlEventQuery.Condition">
      <summary>获取或设置要应用到指定类的事件的条件。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含事件查询中的一个或多个条件。</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.EventClassName">
      <summary>获取或设置要查询的事件类。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含事件查询中的事件类的名称。</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.GroupByPropertyList">
      <summary>获取或设置用于对相同类型的事件进行分组的事件的属性。</summary>
      <returns>返回一个 <see cref="T:System.Collections.Specialized.StringCollection" />，它包含用于对相同类型的事件进行分组的事件属性。</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.GroupWithinInterval">
      <summary>获取或设置对相同类型事件进行分组的间隔。</summary>
      <returns>返回一个 <see cref="T:System.TimeSpan" /> 值，该值包含用于对相同类型的事件进行分组的间隔。</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.HavingCondition">
      <summary>获取或设置基于所接收事件的数目要应用到事件聚合的条件。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含基于所接收事件的数目应用到事件聚合的条件。</returns>
    </member>
    <member name="M:System.Management.WqlEventQuery.ParseQuery(System.String)">
      <summary>分析查询字符串并相应地设置属性值。</summary>
      <param name="query">要分析的查询字符串。</param>
    </member>
    <member name="P:System.Management.WqlEventQuery.QueryLanguage">
      <summary>获取查询的语言。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含用于编写查询的查询语言。</returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.QueryString">
      <summary>获取或设置表示查询的字符串。</summary>
      <returns>返回一个包含查询的 <see cref="T:System.String" /> 值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.WqlEventQuery.WithinInterval">
      <summary>获取或设置此查询中要使用的轮询间隔。</summary>
      <returns>返回一个 <see cref="T:System.TimeSpan" /> 值，该值包含用于事件查询的轮询间隔。</returns>
    </member>
    <member name="T:System.Management.WqlObjectQuery">
      <summary>表示 WQL 格式的 WMI 数据。</summary>
    </member>
    <member name="M:System.Management.WqlObjectQuery.#ctor">
      <summary>初始化 <see cref="T:System.Management.WqlObjectQuery" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.WqlObjectQuery.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Management.WqlObjectQuery" /> 类的新实例，并将其初始化到指定的查询。</summary>
      <param name="query">数据查询的表示形式。</param>
    </member>
    <member name="M:System.Management.WqlObjectQuery.Clone">
      <summary>创建对象的一个副本。</summary>
      <returns>所复制的对象。</returns>
    </member>
    <member name="P:System.Management.WqlObjectQuery.QueryLanguage">
      <summary>获取查询的语言。</summary>
      <returns>返回一个 <see cref="T:System.String" /> 值，该值包含查询的语言。</returns>
    </member>
    <member name="T:System.Management.Instrumentation.BaseEvent">
      <summary>表示从 <see cref="T:System.Management.Instrumentation.BaseEvent" /> 派生的类，已知这些类是管理事件类。 这些派生类继承 <see cref="T:System.Management.Instrumentation.IEvent" /> 的实现，该实现允许通过 <see cref="M:System.Management.Instrumentation.BaseEvent.Fire" /> 方法激发事件。</summary>
    </member>
    <member name="M:System.Management.Instrumentation.BaseEvent.#ctor">
      <summary>初始化 <see cref="T:System.Management.Instrumentation.BaseEvent" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Management.Instrumentation.BaseEvent.Fire">
      <summary>引发一个管理事件。</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.Instrumentation.DefaultManagementProjectInstaller">
      <summary>安装检测的程序集。 若要使用此默认项目安装程序，只需在程序集内从 <see cref="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" /> 派生一个类。 不需要重写任何方法。</summary>
    </member>
    <member name="M:System.Management.Instrumentation.DefaultManagementProjectInstaller.#ctor">
      <summary>初始化 <see cref="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="T:System.Management.Instrumentation.IEvent">
      <summary>指定管理检测事件的源。 已知实现此接口的对象是管理检测事件的源。 不是从 <see cref="T:System.Management.Instrumentation.BaseEvent" /> 派生的类应当转而实现此接口。</summary>
    </member>
    <member name="M:System.Management.Instrumentation.IEvent.Fire">
      <summary>引发一个管理事件。</summary>
    </member>
    <member name="T:System.Management.Instrumentation.IgnoreMemberAttribute">
      <summary>导致管理检测忽略已检测类的关联成员。</summary>
    </member>
    <member name="M:System.Management.Instrumentation.IgnoreMemberAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Management.Instrumentation.IgnoreMemberAttribute" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Management.Instrumentation.IInstance">
      <summary>指定管理检测实例的源。 已知实现此接口的对象是管理检测实例的源。 不是从 <see cref="T:System.Management.Instrumentation.Instance" /> 派生的类应当转而实现此接口。</summary>
    </member>
    <member name="P:System.Management.Instrumentation.IInstance.Published">
      <summary>获取或设置一个值，该值指示实现此接口的类的实例通过管理检测是否可见。</summary>
      <returns>返回 <see cref="T:System.Boolean" /> 值，该值指示实现此接口的类的实例通过管理检测是否可见。</returns>
    </member>
    <member name="T:System.Management.Instrumentation.Instance">
      <summary>表示已知为管理检测实例类的派生类。 这些派生类继承 <see cref="T:System.Management.Instrumentation.IInstance" /> 的实现，该实现允许通过 <see cref="P:System.Management.Instrumentation.IInstance.Published" /> 属性发布实例。</summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instance.#ctor">
      <summary>初始化 <see cref="T:System.Management.Instrumentation.Instance" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Management.Instrumentation.Instance.Published">
      <summary>获取或设置一个值，该值指示实现此接口的类的实例通过管理检测是否可见。</summary>
      <returns>返回 <see cref="T:System.Boolean" /> 值，该值指示实现此接口的类的实例通过管理检测是否可见。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.Instrumentation.Instrumentation">
      <summary>提供 Helper 函数来公开事件和数据以便进行管理。 每个应用程序域都有此类的一个实例。</summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.#ctor">
      <summary>初始化 <see cref="T:System.Management.Instrumentation.Instrumentation" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Fire(System.Object)">
      <summary>引发一个管理事件。</summary>
      <param name="eventData">确定事件的类、属性和值的对象。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.IsAssemblyRegistered(System.Reflection.Assembly)">
      <summary>确定指定程序集的检测架构是否已经正确注册到 WMI。</summary>
      <returns>如果指定程序集中的检测架构已注册到 WMI 中，则为 true；否则为 false。</returns>
      <param name="assemblyToRegister">包含检测实例或事件类型的 <see cref="T:System.Reflection.Assembly" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)">
      <summary>使实例通过管理检测可见。</summary>
      <param name="instanceData">要通过管理检测可见的对象。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.RegisterAssembly(System.Reflection.Assembly)">
      <summary>将指定程序集中的管理实例和事件类注册到 WMI。 这确保了检测架构可由 <see cref="N:System.Management" /> 客户端应用程序访问。</summary>
      <param name="assemblyToRegister">包含检测实例或事件类型的 <see cref="T:System.Reflection.Assembly" />。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Revoke(System.Object)">
      <summary>使以前通过 <see cref="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)" /> 方法发布的实例通过管理检测不再可见。</summary>
      <param name="instanceData">要从管理检测的可见内容中移除的对象。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.SetBatchSize(System.Type,System.Int32)">
      <summary>指定一次提供的指定类型对象的最大数目。</summary>
      <param name="instrumentationClass">为其设置批处理规模的类。</param>
      <param name="batchSize">一次提供的对象的最大数目。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationClassAttribute">
      <summary>指定某个类提供事件或实例检测。</summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)">
      <summary>初始化 <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> 类的一个新实例，如果此类型是从具有 <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> 特性的另一个类型派生的，或者如果这是顶级检测类（例如，没有基类的实例或抽象类，或从 __ExtrinsicEvent 派生的事件），则会使用该类。</summary>
      <param name="instrumentationType">该类提供的检测的类型。</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)">
      <summary>初始化 <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> 类的新实例，它具有现有基类的架构。 该类必须包含现有 WMI 基类的属性的正确成员定义。</summary>
      <param name="instrumentationType">该类提供的检测的类型。</param>
      <param name="managedBaseClassName">基类的名称。</param>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType">
      <summary>获取或设置该类提供的检测的类型。</summary>
      <returns>返回 <see cref="T:System.Management.Instrumentation.InstrumentationType" /> 枚举值，该值包含此类提供的检测的类型。</returns>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName">
      <summary>获取或设置该检测类的基类的名称。</summary>
      <returns>返回 <see cref="T:System.String" /> 值，该值包含此检测类的基类的名称。</returns>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationType">
      <summary>指定类提供的检测的类型。</summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Abstract">
      <summary>该类为管理检测定义抽象类。</summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Event">
      <summary>该类为管理检测提供事件。</summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Instance">
      <summary>该类为管理检测提供实例。</summary>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentedAttribute">
      <summary>指定此程序集提供管理检测。 此特性应该在每个程序集内出现一次。</summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor">
      <summary>初始化为根\默认命名空间设置的 <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> 类的新实例。 这是默认构造函数。</summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> 类的新实例，该类设置为此程序集内检测的指定命名空间。</summary>
      <param name="namespaceName">检测实例和事件的命名空间。</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> 类的新实例，该类设置为此程序集内检测的指定命名空间和安全设置。</summary>
      <param name="namespaceName">检测实例和事件的命名空间。</param>
      <param name="securityDescriptor">一个安全说明符，它只允许指定的用户或组来运行提供此程序集所支持检测的应用程序。</param>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentedAttribute.NamespaceName">
      <summary>获取或设置此程序集内检测实例和事件的命名空间。</summary>
      <returns>返回 <see cref="T:System.String" /> 值，该值包含该程序集中的检测实例和事件的命名空间名称。</returns>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor">
      <summary>获取或设置安全说明符，该说明符只允许指定的用户或组来运行提供此程序集所支持检测的应用程序。</summary>
      <returns>返回包含安全说明符的 <see cref="T:System.String" /> 值，该安全说明符只允许指定的用户或组运行提供此程序集所支持的检测的应用程序。</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagedNameAttribute">
      <summary>允许检测类或检测类的成员通过管理检测显示替换名称。</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagedNameAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Management.Instrumentation.ManagedNameAttribute" /> 类的新实例，该类允许为此特性应用于的类型、字段、属性、方法或参数指定替换名称。</summary>
      <param name="name">此特性应用于的类型、字段、属性、方法或参数的替换名称。</param>
    </member>
    <member name="P:System.Management.Instrumentation.ManagedNameAttribute.Name">
      <summary>获取托管实体的名称。</summary>
      <returns>返回包含托管实体的名称的 T:System.String 值。</returns>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementInstaller">
      <summary>安装检测程序集。 在包含检测的程序集的项目安装程序中，包括此安装程序类的一个实例。</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.#ctor">
      <summary>初始化 <see cref="T:System.Management.Instrumentation.ManagementInstaller" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Commit(System.Collections.IDictionary)">
      <summary>将程序集提交给操作。</summary>
      <param name="savedState">程序集的状态。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementInstaller.HelpText">
      <summary>获取或设置有关此类的安装程序选项。</summary>
      <returns>返回 <see cref="T:System.String" /> 值，该值包含此类的安装程序选项。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Install(System.Collections.IDictionary)">
      <summary>安装程序集。</summary>
      <param name="savedState">程序集的状态。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Rollback(System.Collections.IDictionary)">
      <summary>回滚程序集的状态。</summary>
      <param name="savedState">程序集的状态。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>卸载程序集。</summary>
      <param name="savedState">程序集的状态。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
  </members>
</doc>