<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.DynamicData</name>
  </assembly>
  <members>
    <member name="T:System.Web.DynamicData.ContainerType">
      <summary>指定数据控件容器类型。</summary>
    </member>
    <member name="F:System.Web.DynamicData.ContainerType.Item">
      <summary>指示实现 <see cref="T:System.Web.UI.WebControls.IDataBoundItemControl" /> 接口的项容器，如 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件或 <see cref="T:System.Web.UI.WebControls.FormView" /> 控件。</summary>
    </member>
    <member name="F:System.Web.DynamicData.ContainerType.List">
      <summary>指示实现 <see cref="T:System.Web.UI.WebControls.IDataBoundListControl" /> 接口的列表容器，如 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件、<see cref="T:System.Web.UI.WebControls.GridView" /> 控件或 <see cref="T:System.Web.UI.WebControls.Repeater" /> 控件。</summary>
    </member>
    <member name="T:System.Web.DynamicData.ContextConfiguration">
      <summary>为数据上下文实例提供信息以允许自定义。</summary>
    </member>
    <member name="M:System.Web.DynamicData.ContextConfiguration.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.ContextConfiguration" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.ContextConfiguration.MetadataProviderFactory">
      <summary>获取或设置元数据提供程序。</summary>
      <returns>元数据提供程序的类型。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ContextConfiguration.ScaffoldAllTables">
      <summary>获取或设置一个值，该值指示是否启用了基架。</summary>
      <returns>如果启用了基架，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="T:System.Web.DynamicData.ControlFilterExpression">
      <summary>使用数据绑定控件中所选项的数据键修改数据库查询。</summary>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.ControlFilterExpression.Column">
      <summary>获取或设置查询所基于的列的名称。</summary>
      <returns>查询所基于的列的名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ControlFilterExpression.ControlID">
      <summary>获取或设置源数据绑定控件的 ID。</summary>
      <returns>源数据绑定控件的 ID。</returns>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>获取要修改的数据源查询。</summary>
      <returns>表示此 <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> 实例修改的数据源查询的对象。</returns>
      <param name="source">要修改的数据源查询。</param>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.LoadViewState(System.Object)">
      <summary>还原以前保存的视图状态。</summary>
      <param name="savedState">要还原的状态。</param>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.SaveViewState">
      <summary>保存自将页传递到服务器时起对视图状态所做的更改。</summary>
      <returns>包含视图状态更改的对象。 如果没有与此对象关联的视图状态，则此方法返回 null。</returns>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>用数据源信息初始化筛选器表达式。</summary>
      <param name="owner">其中包含 <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> 实例的控件，如 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件。</param>
      <param name="context">应用程序的当前 <see cref="T:System.Web.HttpContext" /> 对象。</param>
      <param name="dataSource">
        <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> 实例的目标数据源。 如果 <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> 实例包含在 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件中，则此参数是 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件所引用的数据源</param>
    </member>
    <member name="M:System.Web.DynamicData.ControlFilterExpression.TrackViewState">
      <summary>使 <see cref="T:System.Web.DynamicData.ControlFilterExpression" /> 对象跟踪其视图状态更改，以便这些更改可以存储在控件的视图状态对象中并在同一页的不同请求间保留。</summary>
    </member>
    <member name="T:System.Web.DynamicData.DataControlReference">
      <summary>使 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 可以用声明的方式定义其管理的数据控件。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReference.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DataControlReference" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.DataControlReference.ControlID">
      <summary>获取 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件管理的数据绑定控件的 ID。</summary>
      <returns>
        <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件管理的数据绑定控件的 ID。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DataControlReference.Owner">
      <summary>获取包含数据控件的 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件。</summary>
      <returns>包含数据控件的 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReference.ToString">
      <summary>获取文本字符串 DataControl: ，该字符串的末尾追加了 <see cref="P:System.Web.DynamicData.DataControlReference.ControlID" /> 控件的值。</summary>
      <returns>文本字符串 DataControl: ，该字符串的末尾追加了 <see cref="P:System.Web.DynamicData.DataControlReference.ControlID" /> 属性的值。</returns>
    </member>
    <member name="T:System.Web.DynamicData.DataControlReferenceCollection">
      <summary>表示 <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReferenceCollection.#ctor(System.Web.DynamicData.DynamicDataManager)">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DataControlReferenceCollection" /> 类的新实例。</summary>
      <param name="owner">容器对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReferenceCollection.InsertItem(System.Int32,System.Web.DynamicData.DataControlReference)">
      <summary>将数据控件引用插入到数据控件引用集合中。</summary>
      <param name="index">指示数据控件插入位置的索引。</param>
      <param name="item">要插入的数据控件。</param>
    </member>
    <member name="P:System.Web.DynamicData.DataControlReferenceCollection.Owner">
      <summary>获取包含数据控件的 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件。</summary>
      <returns>包含数据控件的 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReferenceCollection.RemoveItem(System.Int32)">
      <summary>从集合中移除数据控件引用。</summary>
      <param name="index">要移除的数据控件引用的索引。</param>
    </member>
    <member name="M:System.Web.DynamicData.DataControlReferenceCollection.SetItem(System.Int32,System.Web.DynamicData.DataControlReference)">
      <summary>设置包含数据控件引用的 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件。</summary>
      <param name="index">要设置的数据控件引用的索引。</param>
      <param name="item">数据控件。</param>
    </member>
    <member name="T:System.Web.DynamicData.DefaultAutoFieldGenerator">
      <summary>自动为数据绑定控件生成动态数据字段（列）。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DefaultAutoFieldGenerator.#ctor(System.Web.DynamicData.MetaTable)">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DefaultAutoFieldGenerator" /> 类的新实例。</summary>
      <param name="table">要为其生成动态字段的表的元数据。</param>
      <exception cref="T:System.ArgumentNullException">表为 null。</exception>
    </member>
    <member name="M:System.Web.DynamicData.DefaultAutoFieldGenerator.CreateField(System.Web.DynamicData.MetaColumn,System.Web.DynamicData.ContainerType,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>生成一个动态数据字段。</summary>
      <returns>要创建的动态字段。</returns>
      <param name="column">要为其创建动态字段的列的元数据。</param>
      <param name="containerType">其中包含动态字段的数据绑定控件。</param>
      <param name="mode">动态字段的访问模式。</param>
    </member>
    <member name="M:System.Web.DynamicData.DefaultAutoFieldGenerator.GenerateFields(System.Web.UI.Control)">
      <summary>基于表的元数据信息生成 <see cref="T:System.Web.DynamicData.DynamicField" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.DynamicData.DynamicField" /> 对象的集合。</returns>
      <param name="control">其中包含动态数据字段的数据绑定控件。</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicControl">
      <summary>使用 ASP.NET 动态数据功能，在模板化数据绑定控件中显示为字段定义的内容。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DynamicControl" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>用指定的模式初始化 <see cref="T:System.Web.DynamicData.DynamicControl" /> 类的新实例。</summary>
      <param name="mode">指定控件模式的枚举值之一。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode">
      <summary>获取或设置一个值，该值指示字段处于编辑模式时，是否将 <see cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" /> 属性指定的格式设置字符串应用于字段值。</summary>
      <returns>如果应用格式设置字符串，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.Column">
      <summary>获取或设置与控件关联的列对象。</summary>
      <returns>与控件关联的列对象。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull">
      <summary>获取或设置一个值，该值指示在数据源中更新数据字段时是否将空字符串值 ("") 自动转换为 null 值。</summary>
      <returns>如果将空字符串值自动转换为 null 值，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.CssClass">
      <summary>获取或设置级联样式表 (CSS) 类，该类指定 <see cref="T:System.Web.DynamicData.DynamicControl" /> 控件内容的显示样式。</summary>
      <returns>CSS 类的名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.DataField">
      <summary>获取或设置 <see cref="T:System.Web.DynamicData.DynamicControl" /> 控件绑定到的数据字段的名称。</summary>
      <returns>要将 <see cref="T:System.Web.DynamicData.DynamicControl" /> 控件绑定到的数据字段的名称。 默认值为空字符串 ("")，表示尚未设置此属性。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.DataFormatString">
      <summary>获取或设置一个字符串，该字符串指定字段值的显示格式。</summary>
      <returns>指定字段值的显示格式的格式化字符串。 默认值为空字符串 ("")，表示尚无特殊格式设置应用于该字段值。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.FieldTemplate">
      <summary>获取为 <see cref="T:System.Web.DynamicData.DynamicControl" /> 控件创建的字段模板。</summary>
      <returns>为 <see cref="T:System.Web.DynamicData.DynamicControl" /> 控件创建的字段模板。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.GetAttribute(System.String)">
      <summary>使用指定键来检索特性值。</summary>
      <returns>属性的值。</returns>
      <param name="key">属性名。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.HtmlEncode">
      <summary>获取或设置一个值，该值指示控件的数据在呈现之前是否经过 HTML 编码。</summary>
      <returns>如果控件的数据在呈现之前经过 HTML 编码，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.Mode">
      <summary>获取或设置呈现模式。</summary>
      <returns>指定控件的呈现模式的枚举值之一。 默认值为 <see cref="F:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly" />。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.NullDisplayText">
      <summary>获取或设置当字段值为 null 时，为数据字段显示的标题。</summary>
      <returns>当字段值为 null 时，为数据字段显示的标题。 默认值为空字符串 ("")，表示尚未设置此属性。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
      <param name="e">事件数据。</param>
      <exception cref="T:System.InvalidOperationException">未设置 <see cref="P:System.Web.DynamicData.DynamicControl.DataField" /> 属性。</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)">
      <summary>使用指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，将 <see cref="T:System.Web.DynamicData.DynamicControl" /> 控件内容呈现给客户端浏览器。</summary>
      <param name="writer">用于在客户端浏览器上呈现 <see cref="T:System.Web.DynamicData.DynamicControl" /> 控件内容的对象。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)">
      <summary>将指定的特性设置为指定的值。</summary>
      <param name="key">要设置的特性的名称。</param>
      <param name="value">分配给属性 (Attribute) 的值。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions" />。</summary>
      <returns>将应用于字段模板的格式设置选项。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.Table">
      <summary>获取与控件关联的表对象。</summary>
      <returns>与控件关联的表对象。</returns>
      <exception cref="T:System.Exception">
        <see cref="T:System.Web.DynamicData.DynamicControl" /> 控件位于数据绑定控件内，后者未绑定到实现 <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> 接口的数据源控件。</exception>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.UIHint">
      <summary>获取或设置用于呈现数据字段的字段模板的名称。</summary>
      <returns>用于呈现数据字段的字段模板的名称。 默认值是空字符串 ("")，指示将基于数据字段类型或应用于数据模型的元数据信息，来呈现字段模板。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControl.ValidationGroup">
      <summary>获取或设置控件的验证组名称。</summary>
      <returns>控件的验证组名称。</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicControlParameter">
      <summary>表示一个用于主/详细信息筛选器的参数，在这些筛选器中，数据源从另一个数据控件中获取信息。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControlParameter.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControlParameter.#ctor(System.String)">
      <summary>初始化 <see cref="System.Web.DynamicData.DynamicControlParameter" /> 类的新实例，绑定到指定控件。</summary>
      <param name="controlId">参数表示其值的控件的 ID。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicControlParameter.ControlId">
      <summary>获取或设置 <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> 对象绑定到的控件的唯一标识符。</summary>
      <returns>
        <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> 对象从中获取其数据的控件的唯一标识符。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControlParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)">
      <summary>引发 <see cref="T:System.InvalidOperationException" /> 异常以指示缺少 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件。</summary>
      <returns>一个 <see cref="T:System.InvalidOperationException" /> 对象，该对象指示缺少 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件。</returns>
      <param name="context">HTTP 上下文。</param>
      <param name="control">动态控件参数。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicControlParameter.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
      <summary>返回参数的集合，这些参数用于在查询数据源时创建 Where 子句。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象的集合，这些对象表示指定 <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> 实例的查询参数。</returns>
      <param name="dataSource">要从中获取参数的 <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> 实例。</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicDataExtensions">
      <summary>提供 ASP.NET 动态数据所使用的扩展方法。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.ConvertEditedValue(System.Web.DynamicData.IFieldFormattingOptions,System.String)">
      <summary>返回用户为正在验证的控件提供的值。</summary>
      <returns>如果 <paramref name="value" /> 为 null 或空字符串，并且 <paramref name="formattingOptions" /> 的 <see cref="P:System.Web.DynamicData.IFieldFormattingOptions.ConvertEmptyStringToNull" /> 属性为 true，则为 null；如果 <paramref name="value" /> 不为 null 或空字符串，并且匹配 <paramref name="formattingOptions" /> 的 <see cref="P:System.Web.DynamicData.IFieldFormattingOptions.NullDisplayText" /> 属性，则为 null；否则为不变的 <paramref name="value" /> 值。</returns>
      <param name="formattingOptions">
        <see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /> 对象中定义的格式设置选项对象。</param>
      <param name="value">要转换的输入值。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.EnablePersistedSelection(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>可使所选内容在支持选择和分页的数据控件中保持。</summary>
      <param name="dataBoundControl">数据绑定控件。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.ExpandDynamicWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
      <summary>将动态筛选器扩展到可供数据源使用的 Where 参数中。</summary>
      <param name="dataSource">数据源对象。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)">
      <summary>返回与指定控件的数据控件关联的数据源。</summary>
      <returns>与指定控件的数据控件关联的数据源。</returns>
      <param name="current">一个控件，位于您要查找其包含控件的数据绑定控件的层次结构中。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)">
      <summary>返回指定控件的命名容器中指定列的字段模板。</summary>
      <returns>指定控件的命名容器中指定列的字段模板。</returns>
      <param name="control">包含控件。</param>
      <param name="columnName">列的名称。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)">
      <summary>返回包含数据控件的元表对象。</summary>
      <returns>包含数据控件的元表对象。</returns>
      <param name="current">当前控件。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.FormatEditValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
      <summary>使用指定格式设置选项设置指定字段值的格式。</summary>
      <returns>已使用指定格式设置选项设置格式的字段值。</returns>
      <param name="formattingOptions">要使用的 <see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /> 实例。</param>
      <param name="fieldValue">要格式化的字段值。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.FormatValue(System.Web.DynamicData.IFieldFormattingOptions,System.Object)">
      <summary>使用指定格式设置选项设置指定字段值的格式。</summary>
      <returns>已使用指定格式设置选项设置格式的字段值。</returns>
      <param name="formattingOptions">要使用的 <see cref="T:System.Web.DynamicData.IFieldFormattingOptions" /> 实例。</param>
      <param name="fieldValue">要格式化的字段值。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.IDataSource)">
      <summary>为指定数据源获取默认值的集合。</summary>
      <returns>与 <see cref="T:System.Web.UI.IDataSource" /> 对象关联的默认值的集合。</returns>
      <param name="dataSource">要为其获取默认值的数据源。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetDefaultValues(System.Web.UI.INamingContainer)">
      <summary>为指定数据控件获取默认值的集合。</summary>
      <returns>与 <see cref="T:System.Web.UI.INamingContainer" /> 对象关联的默认值的集合。</returns>
      <param name="control">要为其获取默认值的数据控件。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetEnumType(System.Web.DynamicData.MetaColumn)">
      <summary>获取表示列的枚举的类型。</summary>
      <returns>如果基础类型是枚举，则为表示列的枚举的类型；否则为 null。</returns>
      <param name="column">要获取其枚举类型的列。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.IDataSource)">
      <summary>获取指定数据源对象中表的元数据。</summary>
      <returns>与 <see cref="T:System.Web.UI.IDataSource" /> 对象关联的表元数据。</returns>
      <param name="dataSource">要为其获取表元数据的数据源对象。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetMetaTable(System.Web.UI.INamingContainer)">
      <summary>为指定数据控件获取表元数据。</summary>
      <returns>与 <see cref="T:System.Web.UI.INamingContainer" /> 对象关联的表元数据。</returns>
      <param name="control">要为其获取表元数据的数据控件。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.GetTable(System.Web.DynamicData.IDynamicDataSource)">
      <summary>返回与指定数据源控件关联的 <see cref="T:System.Web.DynamicData.MetaTable" /> 对象。</summary>
      <returns>与指定数据源控件关联的表。</returns>
      <param name="dataSource">数据源控件。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="dataSource" /> 的 <see cref="P:System.Web.DynamicData.IDynamicDataSource.EntitySetName" /> 属性为 null。 - 或 - <paramref name="dataSource" /> 的 <see cref="P:System.Web.DynamicData.IDynamicDataSource.ContextType" /> 属性为 null。</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.LoadWith``1(System.Web.UI.WebControls.LinqDataSource)">
      <summary>设置 LINQ-to-SQL 数据源的 <see cref="T:System.Data.Linq.DataLoadOptions" /> 值，以强制加载所有外键实体。</summary>
      <param name="dataSource">从其加载外键的 LINQ 数据源。</param>
      <typeparam name="TEntity">数据源返回的实体的类型。</typeparam>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.LoadWithForeignKeys(System.Web.UI.WebControls.LinqDataSource,System.Type)">
      <summary>设置 LINQ-to-SQL 数据源的 <see cref="T:System.Data.Linq.DataLoadOptions" /> 值，以强制加载所有外键实体。</summary>
      <param name="dataSource">从其加载外键的 LINQ 数据源。</param>
      <param name="rowType">数据源返回的实体的类型。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable)">
      <summary>为指定数据控件设置表元数据。</summary>
      <param name="control">其中包含表的 <see cref="T:System.Web.UI.INamingContainer" /> 对象。</param>
      <param name="table">表元数据。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>为指定数据控件设置表元数据和默认值映射。</summary>
      <param name="control">其中包含表的 <see cref="T:System.Web.UI.INamingContainer" /> 对象。</param>
      <param name="table">表元数据。</param>
      <param name="defaultValues">默认值映射。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.SetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable,System.Object)">
      <summary>为指定数据控件设置表元数据和默认值映射。</summary>
      <param name="control">其中包含表的 <see cref="T:System.Web.UI.INamingContainer" /> 对象。</param>
      <param name="table">表元数据。</param>
      <param name="defaultValues">默认值映射。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.IDataSource,System.Web.DynamicData.MetaTable@)">
      <summary>确定表元数据是否可用。</summary>
      <returns>如果表元数据可用，则为 true；否则为 false。</returns>
      <param name="dataSource">其中包含表的数据源。</param>
      <param name="table">此方法返回时将包含表元数据。 该参数未经初始化即被传递。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataExtensions.TryGetMetaTable(System.Web.UI.INamingContainer,System.Web.DynamicData.MetaTable@)">
      <summary>确定表元数据是否可用。</summary>
      <returns>如果表元数据可用，则为 true；否则为 false。</returns>
      <param name="control">其中包含表的 <see cref="T:System.Web.UI.INamingContainer" /> 对象。</param>
      <param name="table">此方法返回时将包含表元数据。 该参数未经初始化即被传递。</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicDataManager">
      <summary>启用支持 ASP.NET 动态数据的 ASP.NET Web 控件的动态行为。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataManager.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataManager.AutoLoadForeignKeys">
      <summary>获取或设置一个值，该值指示是否自动为 LINQ-to-SQL 数据上下文加载外键。</summary>
      <returns>如果自动加载外键，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataManager.ClientID">
      <summary>获取 ASP.NET 生成的 <see cref="P:System.Web.UI.Control.ClientID" /> 属性。</summary>
      <returns>ASP.NET 生成的 <see cref="P:System.Web.UI.Control.ClientID" /> 属性。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataManager.ClientIDMode">
      <summary>获取用于生成 <see cref="P:System.Web.UI.Control.ClientID" /> 属性值的算法。</summary>
      <returns>一个值，指示如何生成 <see cref="P:System.Web.UI.Control.ClientID" /> 属性。 无法设置此属性。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataManager.DataControls">
      <summary>获取 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件中数据控件引用的列表。</summary>
      <returns>
        <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件中数据控件引用的列表。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataManager.OnInit(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataManager.OnLoad(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Control.Load" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataManager.RegisterControl(System.Web.UI.Control)">
      <summary>向 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件注册控件。</summary>
      <param name="control">要注册的数据控件。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataManager.RegisterControl(System.Web.UI.Control,System.Boolean)">
      <summary>向 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件注册控件。</summary>
      <param name="control">要注册的数据控件。</param>
      <param name="setSelectionFromUrl">如果为 true，则使用主键来设置所选项；否则不设置所选项。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataManager.Visible">
      <summary>获取一个值，该值指示 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 控件是否可见。</summary>
      <returns>如果 <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 可见，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicDataRoute">
      <summary>表示 ASP.NET 动态数据使用的路由。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRoute.#ctor(System.String)">
      <summary>使用指定的 URL 模式初始化 <see cref="T:System.Web.DynamicData.DynamicDataRoute" /> 类的新实例。</summary>
      <param name="url">URL 的模式。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRoute.Action">
      <summary>获取或设置路由的操作名称。</summary>
      <returns>路由的操作名称。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRoute.GetActionFromRouteData(System.Web.Routing.RouteData)">
      <summary>从当前的动态数据 Web 请求的 <see cref="T:System.Web.Routing.RouteData" /> 对象返回操作。</summary>
      <returns>操作本身。 有关可能值的列表，请参见 <see cref="T:System.Web.DynamicData.PageAction" />。</returns>
      <param name="routeData">与当前请求相关的路由数据。 有关详细信息，请参阅 <see cref="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />。</param>
      <exception cref="T:System.InvalidOperationException">在 Web 请求路由信息中找不到操作。</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)">
      <summary>返回特定 Web 请求的路由信息。</summary>
      <returns>Web 请求的路由信息。</returns>
      <param name="httpContext">包含有关 Web 请求的信息。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRoute.GetTableFromRouteData(System.Web.Routing.RouteData)">
      <summary>识别与动态数据网页请求关联的表。</summary>
      <returns>描述动态数据显示的表的元数据。</returns>
      <param name="routeData">与当前请求相关的路由数据。 有关详细信息，请参阅 <see cref="M:System.Web.DynamicData.DynamicDataRoute.GetRouteData(System.Web.HttpContextBase)" />。</param>
      <exception cref="T:System.InvalidOperationException">在 Web 请求路由信息中找不到表。</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>返回路由的虚拟路径。</summary>
      <returns>虚拟路径。</returns>
      <param name="requestContext">包含有关 Web 请求的信息。</param>
      <param name="values">当前应用程序的路由对象集合。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRoute.Model">
      <summary>获取或设置路由应用于的数据模型。</summary>
      <returns>路由应用于的数据模型元数据。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRoute.RouteHandler">
      <summary>获取或设置处理路由请求的对象。</summary>
      <returns>用于处理路由请求的处理程序。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRoute.Table">
      <summary>获取或设置路由表的名称。</summary>
      <returns>与路由关联的表的名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRoute.ViewName">
      <summary>获取或设置与路由关联的 .aspx 页的名称。</summary>
      <returns>与路由关联的 .aspx 页的名称。 如果没有为路由指定任何页，则此属性将返回追加了“.aspx”的 <see cref="P:System.Web.DynamicData.DynamicDataRoute.Action" /> 属性的值。</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicDataRouteHandler">
      <summary>处理 ASP.NET 动态数据路由模式。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DynamicDataRouteHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.CreateHandler(System.Web.DynamicData.DynamicDataRoute,System.Web.DynamicData.MetaTable,System.String)">
      <summary>创建处理请求的处理程序。</summary>
      <returns>可处理请求的处理程序。</returns>
      <param name="route">匹配的路由。</param>
      <param name="table">包含在路由中的元数据表。</param>
      <param name="action">包含在路由中的操作。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetCustomPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)">
      <summary>创建自定义页面的虚拟路径。</summary>
      <returns>自定义页面的虚拟路径。</returns>
      <param name="table">页面代表的数据模型元数据表。</param>
      <param name="viewName">视图操作的名称，为不带文件扩展名“.aspx”的页面名。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetRequestContext(System.Web.HttpContext)">
      <summary>返回当前 Web 请求的 <see cref="T:System.Web.Routing.RequestContext" /> 实例。</summary>
      <returns>Web 请求的请求上下文。</returns>
      <param name="httpContext">与 Web 请求关联的上下文信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetRequestMetaTable(System.Web.HttpContext)">
      <summary>从 <see cref="T:System.Web.HttpContext" /> 对象返回 <see cref="T:System.Web.DynamicData.MetaTable" /> 对象。</summary>
      <returns>与当前 Web 请求关联的数据模型元数据表；如果请求不是动态数据请求，则为 null。</returns>
      <param name="httpContext">与 Web 请求关联的上下文信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.GetScaffoldPageVirtualPath(System.Web.DynamicData.MetaTable,System.String)">
      <summary>返回为动态数据启用的页面的虚拟路径。</summary>
      <returns>页面的虚拟路径。</returns>
      <param name="table">页面代表的元数据表。</param>
      <param name="viewName">视图操作的名称，为不带文件扩展名“.aspx”的页面名。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicDataRouteHandler.Model">
      <summary>获取或设置与 <see cref="T:System.Web.DynamicData.DynamicDataRouteHandler" /> 类关联的 <see cref="T:System.Web.DynamicData.MetaModel" /> 对象。</summary>
      <returns>与 <see cref="T:System.Web.DynamicData.DynamicDataRouteHandler" /> 类关联的数据模型。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.SetRequestMetaTable(System.Web.HttpContext,System.Web.DynamicData.MetaTable)">
      <summary>设置与当前 <see cref="T:System.Web.HttpRequest" /> 对象关联的 <see cref="T:System.Web.DynamicData.MetaTable" /> 对象。</summary>
      <param name="httpContext">与 Web 请求关联的上下文信息。</param>
      <param name="table">与当前请求关联的元表。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicDataRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>返回处理 ASP.NET 动态数据路由模式的处理程序。</summary>
      <returns>处理 ASP.NET 动态数据路由模式的处理程序。</returns>
      <param name="requestContext">与 Web 请求关联的上下文信息。</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicEntity">
      <summary>提供一个 ASP.NET 控件，该控件表示供 ASP.NET 动态数据使用的实体。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicEntity.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DynamicEntity" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicEntity.Mode">
      <summary>获取或设置 <see cref="T:System.Web.DynamicData.DynamicEntity" /> 控件的 <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> 值。</summary>
      <returns>模式。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicEntity.OnLoad(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Control.Load" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicEntity.Render(System.Web.UI.HtmlTextWriter)">
      <summary>将服务器控件内容发送到用于呈现内容的指定 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
      <param name="writer">接收服务器控件内容的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicEntity.UIHint">
      <summary>获取或设置实体的 <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> 特性。</summary>
      <returns>实体的 <see cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" /> 特性。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicEntity.ValidationGroup">
      <summary>获取或设置 <see cref="T:System.Web.DynamicData.DynamicEntity" /> 控件的验证组。</summary>
      <returns>验证组。</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicField">
      <summary>表示数据绑定控件中显示的、使用 ASP.NET 动态数据功能的数据字段。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DynamicField" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode">
      <summary>获取或设置一个值，该值指示当数据字段处于编辑模式时，是否将 <see cref="P:System.Web.DynamicData.DynamicField.DataFormatString" /> 属性指定的带格式的字符串应用于字段值。</summary>
      <returns>如果 <see cref="T:System.Web.DynamicData.DynamicField" /> 在编辑模式下应用格式设置，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.Column">
      <summary>获取与此 <see cref="T:System.Web.DynamicData.DynamicField" /> 对象关联的 <see cref="T:System.Web.DynamicData.MetaColumn" /> 对象。</summary>
      <returns>元列。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)">
      <summary>提供一种机制，用于修改 <see cref="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" /> 方法创建的 <see cref="T:System.Web.DynamicData.DynamicControl" /> 对象。</summary>
      <param name="control">要修改的控件。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull">
      <summary>获取或设置一个值，该值指示在数据源中更新数据字段时是否将空字符串值 ("") 自动转换为 null 值。</summary>
      <returns>如果为 true，则将空字符串值自动转换为 null 值；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)">
      <summary>将当前 <see cref="T:System.Web.DynamicData.DynamicField" /> 对象的属性复制到指定的 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 对象。</summary>
      <param name="newField">当前 <see cref="T:System.Web.DynamicData.DynamicField" /> 的属性将复制到的 <see cref="T:System.Web.UI.WebControls.DataControlField" />。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.CreateDynamicControl">
      <summary>提供一种机制，使从 <see cref="T:System.Web.DynamicData.DynamicField" /> 派生的类可重写创建 <see cref="T:System.Web.DynamicData.DynamicControl" /> 对象的方式。</summary>
      <returns>一个新的动态控件。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.CreateField">
      <summary>创建并返回 <see cref="T:System.Web.DynamicData.DynamicField" /> 类的新实例。</summary>
      <returns>
        <see cref="T:System.Web.DynamicData.DynamicField" /> 类的新实例。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.DataField">
      <summary>获取或设置要将 <see cref="T:System.Web.DynamicData.DynamicField" /> 对象绑定到的数据字段的名称。</summary>
      <returns>
        <see cref="T:System.Web.DynamicData.DynamicField" /> 对象绑定到的数据字段的名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.DataFormatString">
      <summary>获取或设置为数据字段的值指定显示格式的字符串。</summary>
      <returns>为数据字段的值指定显示格式的格式设置字符串。 默认值为空字符串 ("")，表明没有对值应用特殊格式设置。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)">
      <summary>从当前表格单元格中提取数据字段的值，然后将该值添加到指定词典中。</summary>
      <param name="dictionary">将保存单元格值的词典。</param>
      <param name="cell">包含 <see cref="T:System.Web.DynamicData.DynamicField" /> 对象的文本或控件的单元格。</param>
      <param name="rowState">指定行状态的枚举值之一。</param>
      <param name="includeReadOnly">如果为 true，则在 <paramref name="dictionary" /> 中包括只读字段的值；否则为 false。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.GetAttribute(System.String)">
      <summary>检索指定的特性值。</summary>
      <returns>属性的值。</returns>
      <param name="key">要获取的特性的键。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.HeaderText">
      <summary>获取或设置在包含 <see cref="T:System.Web.DynamicData.DynamicField" /> 对象的数据绑定控件的标题中显示的文本。</summary>
      <returns>在包含 <see cref="T:System.Web.DynamicData.DynamicField" /> 对象的数据绑定控件的标题中显示的文本。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Web.DynamicData.DynamicField" /> 对象位于一个数据绑定控件内，该控件未绑定到实现 <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> 接口的数据源控件。</exception>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.HtmlEncode">
      <summary>获取或设置一个值，该值指示在 <see cref="T:System.Web.DynamicData.DynamicField" /> 对象中显示数据字段值之前，这些数据字段值是否经过 HTML 编码。</summary>
      <returns>如果字段值在显示前已经过了 HTML 编码，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)">
      <summary>向指定单元格中添加文本或控件。</summary>
      <param name="cell">包含 <see cref="T:System.Web.DynamicData.DynamicField" /> 对象的文本或控件的对象。</param>
      <param name="cellType">指定 <paramref name="cell" /> 对象的功能的枚举值之一。</param>
      <param name="rowState">指定行状态的枚举值之一。</param>
      <param name="rowIndex">包含 <paramref name="cell" /> 对象的行的索引。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.NullDisplayText">
      <summary>获取或设置当字段值为 null 时，为数据字段显示的标题。</summary>
      <returns>当字段值为 null 时，为数据字段显示的标题。 默认值为空字符串 ("")，表示尚未设置此属性。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.ReadOnly">
      <summary>获取动态字段的只读状态。</summary>
      <returns>动态字段的只读状态。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)">
      <summary>设置与 <see cref="T:System.Web.DynamicData.DynamicField" /> 对象关联的特性。</summary>
      <param name="key">要设置的特性名称。</param>
      <param name="value">特性值。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.SortExpression">
      <summary>获取或设置当数据字段用于排序数据源时所使用的排序表达式。</summary>
      <returns>当数据字段用于排序数据源时所使用的排序表达式。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Web.DynamicData.DynamicField" /> 对象位于一个数据绑定控件内，该控件未绑定到实现 <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> 接口的数据源控件。</exception>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.UIHint">
      <summary>获取或设置用于显示数据字段的字段模板。</summary>
      <returns>用于显示数据字段的字段模板的名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.ValidateRequestMode">
      <summary>获取或设置一个值，该值指定该控件是否验证客户端输入。</summary>
      <returns>如果控件验证客户端输入，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicField.ValidationGroup">
      <summary>获取与此 <see cref="T:System.Web.DynamicData.DynamicField" /> 对象关联的 <see cref="P:System.Web.DynamicData.DynamicControl.ValidationGroup" /> 对象。</summary>
      <returns>此验证控件所属的验证组的名称。 默认值为空字符串 ("")，表示尚未设置此属性。</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicFilter">
      <summary>显示用于使用指定列筛选表行的 UI。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilter.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DynamicFilter" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicFilter.Column">
      <summary>获取或设置要用于筛选的表列。</summary>
      <returns>要用于筛选的表列。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicFilter.DataField">
      <summary>获取或设置要用于表行筛选的列的名称。</summary>
      <returns>用于表行筛选的列的名称。</returns>
    </member>
    <member name="E:System.Web.DynamicData.DynamicFilter.FilterChanged">
      <summary>在用户为外键选择值时发生。</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicFilter.FilterTemplate">
      <summary>获取与此控件的当前实例关联的筛选器模板。</summary>
      <returns>与此控件的当前实例关联的筛选器模板。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicFilter.FilterUIHint">
      <summary>获取或设置用于创建 UI 的筛选器模板的名称。</summary>
      <returns>筛选器模板的名称。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilter.Render(System.Web.UI.HtmlTextWriter)">
      <summary>将服务器控件内容发送到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
      <param name="writer">接收服务器控件内容的对象。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable(System.Linq.IQueryable)">
      <summary>获取使用当前筛选器值修改的查询。</summary>
      <returns>筛选器。</returns>
      <param name="source">数据源查询。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#Initialize(System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DynamicFilter" /> 类的新实例。</summary>
      <param name="dataSource">数据源。</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicFilterExpression">
      <summary>通过使用指定筛选器控件中的值修改数据库查询。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilterExpression.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicFilterExpression.ControlID">
      <summary>获取或设置筛选器控件标识符。</summary>
      <returns>筛选器控件标识符。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>获取使用当前筛选器值修改的查询。</summary>
      <returns>通过使用 <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> 实例中包含的当前值修改的数据源查询。</returns>
      <param name="source">要修改的数据源查询。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>使用数据源信息初始化表达式。</summary>
      <param name="owner">其中包含 <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> 实例的控件，例如 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件。</param>
      <param name="context">当前的 <see cref="T:System.Web.HttpContext" /> 对象。</param>
      <param name="dataSource">
        <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> 实例的目标数据源。</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicHyperLink">
      <summary>显示表操作（如编辑、删除和插入）的链接。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicHyperLink.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DynamicHyperLink" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicHyperLink.Action">
      <summary>获取或设置与链接关联的操作。</summary>
      <returns>与链接关联的操作。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicHyperLink.ContextTypeName">
      <summary>获取或设置链接所适用的数据模型的数据上下文。</summary>
      <returns>适用于链接的数据上下文。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicHyperLink.DataField">
      <summary>获取或设置链接显示文本。</summary>
      <returns>链接显示文本。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicHyperLink.OnDataBinding(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Control.DataBinding" /> 事件。</summary>
      <param name="e">事件数据。</param>
      <exception cref="T:System.InvalidOperationException">已尝试在数据绑定过程中设置表和数据上下文。 - 或 - 已尝试绑定到 null 数据字段。</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicHyperLink.OnPreRender(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
      <param name="e">事件数据。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Web.DynamicData.DynamicHyperLink" /> 对象不能确定要链接的数据表格。</exception>
    </member>
    <member name="M:System.Web.DynamicData.DynamicHyperLink.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
      <summary>检索应用于 <see cref="T:System.Web.DynamicData.DynamicHyperLink" /> 控件的指定特性的值。</summary>
      <returns>应用于链接的指定特性。</returns>
      <param name="key">要检索的特性的名称。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicHyperLink.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
      <summary>定义要应用于 <see cref="T:System.Web.DynamicData.DynamicHyperLink" /> 控件的特性及其值。</summary>
      <param name="key">属性名。</param>
      <param name="value">赋给特性的值。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicHyperLink.TableName">
      <summary>获取或设置链接操作的表。</summary>
      <returns>链接操作的表的名称。</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicQueryStringParameter">
      <summary>通过检索查询字符串值，自动生成用于为数据源控件创建 Where 子句的参数集合。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicQueryStringParameter.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DynamicQueryStringParameter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicQueryStringParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)">
      <summary>在所有情况下均引发 <see cref="T:System.InvalidOperationException" /> 异常。</summary>
      <returns>在所有情况下均引发 <see cref="T:System.InvalidOperationException" /> 异常。</returns>
      <param name="context">有关 HTTP 请求的信息。</param>
      <param name="control">参数绑定到的控件。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicQueryStringParameter.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
      <summary>返回 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象的集合，这些对象是通过检索查询字符串值，自动为表列生成的。</summary>
      <returns>一个通过检索查询字符串值，自动为表列生成的参数的集合</returns>
      <param name="dataSource">数据源对象。</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicRouteExpression">
      <summary>从路由信息中获取主键，以便执行数据筛选。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicRouteExpression.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicRouteExpression.ColumnName">
      <summary>获取或设置某个列的名称，该列包含用于查询数据源的外键。</summary>
      <returns>外键列的名称。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicRouteExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>从数据源获取查询。</summary>
      <returns>已修改查询的实例。</returns>
      <param name="source">要修改的查询。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicRouteExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>设置 <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> 对象的 HTTP 上下文。</summary>
      <param name="owner">其中包含 <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> 实例的控件。 此控件为 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件。</param>
      <param name="context">Web 请求上下文。</param>
      <param name="dataSource">
        <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> 实例的目标数据源。</param>
    </member>
    <member name="T:System.Web.DynamicData.DynamicValidator">
      <summary>在数据模型中强制引发异常，捕获该异常，并显示错误。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidator.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.DynamicValidator" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.DynamicValidator.Column">
      <summary>获取或设置要验证的列。</summary>
      <returns>要验证的列；或者，如果验证的是数据实体，则为 null。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicValidator.ColumnName">
      <summary>获取要验证的列的名称。</summary>
      <returns>要验证的列的名称；或者，如果验证的是数据实体，则为 null。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidator.ControlPropertiesValid">
      <summary>指示指定的 <see cref="T:System.Web.DynamicData.DynamicValidator" /> 控件的属性是否有效。</summary>
      <returns>如果指定验证控件的属性有效，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidator.EvaluateIsValid">
      <summary>确定要验证的输入控件中的值是否有效。</summary>
      <returns>如果计算的验证控件有效，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidator.OnInit(System.EventArgs)">
      <summary>引发要初始化 <see cref="T:System.Web.DynamicData.DynamicValidator" /> 控件的 Init 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidator.ValidateException(System.Exception)">
      <summary>如果数据模型中发生异常，则设置验证异常。</summary>
      <param name="exception">引发的异常。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicValidator.ValidationException">
      <summary>获取或设置验证期间出现的验证异常。</summary>
      <returns>所引发的验证异常。</returns>
    </member>
    <member name="T:System.Web.DynamicData.EntityTemplate">
      <summary>使用 ASP.NET 动态数据功能，显示为实体模板数据绑定控件中的实体定义的内容。</summary>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplate.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.EntityTemplate" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.EntityTemplate.ItemTemplate">
      <summary>获取或设置 <see cref="T:System.Web.DynamicData.EntityTemplate" /> 控件中的数据项的自定义内容。</summary>
      <returns>
        <see cref="T:System.Web.DynamicData.EntityTemplate" /> 控件中数据项的自定义内容。</returns>
    </member>
    <member name="T:System.Web.DynamicData.EntityTemplateFactory">
      <summary>创建实体模板。</summary>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplateFactory.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplateFactory.BuildEntityTemplateVirtualPath(System.String,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>为指定表生成实体模板的路径。</summary>
      <returns>指定表的实体模板的路径。</returns>
      <param name="templateName">要为其生成路径的实体模板的名称。</param>
      <param name="mode">实体模板的显示模式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="templateName" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplateFactory.CreateEntityTemplate(System.Web.DynamicData.MetaTable,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
      <summary>为指定表创建实体模板的实例。</summary>
      <returns>
        <see cref="T:System.Web.DynamicData.EntityTemplateUserControl" /> 类的实例。</returns>
      <param name="table">实体模板所应用于的表的元数据。</param>
      <param name="mode">实体模板的显示模式。</param>
      <param name="uiHint">要使用的模板的名称。</param>
      <exception cref="T:System.ArgumentNullException">表为 null。</exception>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplateFactory.GetEntityTemplateVirtualPath(System.Web.DynamicData.MetaTable,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
      <summary>为指定表获取实体模板的虚拟路径。</summary>
      <returns>所指定表的实体模板的虚拟路径。</returns>
      <param name="table">实体模板所应用于的表的元数据。</param>
      <param name="mode">实体模板的显示模式。</param>
      <param name="uiHint">要使用的模板的名称。</param>
      <exception cref="T:System.ArgumentNullException">表为 null。</exception>
    </member>
    <member name="T:System.Web.DynamicData.EntityTemplateUserControl">
      <summary>定义实体模板的基类。</summary>
    </member>
    <member name="M:System.Web.DynamicData.EntityTemplateUserControl.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.EntityTemplateUserControl" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.EntityTemplateUserControl.ContainerType">
      <summary>获取包含此实体模板的数据绑定控件的类型。</summary>
      <returns>包含模板的类型。</returns>
    </member>
    <member name="P:System.Web.DynamicData.EntityTemplateUserControl.Mode">
      <summary>获取实体的数据呈现模式。</summary>
      <returns>实体的数据呈现模式。</returns>
    </member>
    <member name="P:System.Web.DynamicData.EntityTemplateUserControl.Table">
      <summary>获取实体模板所应用的表。</summary>
      <returns>实体模板所应用的表。</returns>
    </member>
    <member name="P:System.Web.DynamicData.EntityTemplateUserControl.ValidationGroup">
      <summary>获取要应用于实体控件组的验证。</summary>
      <returns>要应用于实体控件组的验证。</returns>
    </member>
    <member name="T:System.Web.DynamicData.FieldTemplateFactory">
      <summary>创建字段模板。</summary>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> 类的实例。</summary>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>根据字段模板的名称和模式，生成字段模板的虚拟路径。</summary>
      <returns>字段模板的虚拟路径。</returns>
      <param name="templateName">要使用的模板的名称。</param>
      <param name="column">指定应用字段模板的数据列。</param>
      <param name="mode">指定字段模板的显示模式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="templateName" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
      <summary>使用 <see cref="T:System.Web.DynamicData.MetaColumn" /> 类、<see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> 类和 <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" /> 属性创建字段模板的实例。</summary>
      <returns>
        <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> 类实现的接口的实例。</returns>
      <param name="column">指定应用字段模板的数据列。</param>
      <param name="mode">指定字段模板的显示模式。</param>
      <param name="uiHint">指定要使用的字段模板。</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
      <summary>确定字段模板的虚拟路径。</summary>
      <returns>字段模板的虚拟路径。</returns>
      <param name="column">指定应用字段模板的数据列。</param>
      <param name="mode">指定字段模板的显示模式：只读、编辑或插入。</param>
      <param name="uiHint">指定要使用的字段模板。 此参数影响字段模板查找。</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)">
      <summary>将 <see cref="T:System.Web.DynamicData.MetaModel" /> 与 <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> 相关联。</summary>
      <param name="model">指定要与 <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> 关联的数据模型。</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateFactory.Model">
      <summary>获取或设置与 <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> 类关联的 <see cref="T:System.Web.DynamicData.MetaModel" />。</summary>
      <returns>与 <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> 关联的模型。</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>更改数据列的模式。</summary>
      <returns>列呈现的模式。</returns>
      <param name="column">需要字段模板的列。</param>
      <param name="mode">要更改为的模式（只读、编辑或插入）。</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath">
      <summary>获取或设置要在其中创建字段模板的文件夹。</summary>
      <returns>包含字段模板的文件夹的路径。</returns>
    </member>
    <member name="T:System.Web.DynamicData.FieldTemplateUserControl">
      <summary>表示所有字段模板控件的基类。</summary>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.FieldTemplateUserControl" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.BuildChildrenPath(System.String)">
      <summary>获取链接到显示子实体列表的页面并允许重写路径的 URL。</summary>
      <returns>将显示页面链接到子页面的 URL。</returns>
      <param name="path">要重写的路径。</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.BuildForeignKeyPath(System.String)">
      <summary>获取将当前页面链接到显示外键实体详细信息的页面并允许重写路径的 URL。</summary>
      <returns>链接到显示外键页面详细信息的页面的 URL。</returns>
      <param name="path">要重写的路径。</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ChildrenColumn">
      <summary>获取与某个字段模板关联的 <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> 对象。</summary>
      <returns>表示一对多关系的列。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Web.DynamicData.FieldTemplateUserControl.ChildrenColumn" /> 为 null。</exception>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ChildrenPath">
      <summary>获取链接到显示子实体列表的页面的 URL。</summary>
      <returns>将显示页面链接到子实体的 URL。</returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Column">
      <summary>获取与某个字段模板关联的 <see cref="T:System.Web.DynamicData.MetaColumn" />。</summary>
      <returns>表示数据库列的对象。</returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ContainerType">
      <summary>获取包含 <see cref="T:System.Web.DynamicData.FieldTemplateUserControl" /> 类的数据绑定控件的类型。</summary>
      <returns>容器控件类型。</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.ConvertEditedValue(System.String)">
      <summary>基于 <see cref="P:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull" /> 和 <see cref="P:System.Web.DynamicData.DynamicField.NullDisplayText" /> 获取输入值或 null。</summary>
      <returns>转换后的值。</returns>
      <param name="value">输入值。</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.DataControl">
      <summary>获取处理字段模板中数据字段的数据控件。</summary>
      <returns>处理字段模板中数据字段的数据控件。</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.ExtractForeignKey(System.Collections.IDictionary,System.String)">
      <summary>保存外键的值。</summary>
      <param name="dictionary">包含所有新值的词典。</param>
      <param name="selectedValue">要保存的值。</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.ExtractValues(System.Collections.Specialized.IOrderedDictionary)">
      <summary>为当前行中的所有数据提供词典访问。</summary>
      <param name="dictionary">包含所有新值的词典。</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FieldValue">
      <summary>获取或设置当前行中列的值。</summary>
      <returns>表示当前行中列的值的对象。</returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FieldValueEditString">
      <summary>获取当前行处于编辑模式时其中列值的字符串表示形式。</summary>
      <returns>所编辑行中列的值。</returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FieldValueString">
      <summary>获取当前行中列值的带格式字符串表示形式。</summary>
      <returns>当前行中的带格式列值。</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.FindOtherFieldTemplate(System.String)">
      <summary>确定用于呈现指定数据列的字段模板。</summary>
      <returns>用于呈现指定数据列的字段模板。</returns>
      <param name="columnName">字段模板呈现的数据列。</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ForeignKeyColumn">
      <summary>获取与外键列关联的 <see cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />。</summary>
      <returns>表示多对一关系的列。</returns>
      <exception cref="T:System.Exception">如果 <see cref="T:System.Web.DynamicData.MetaForeignKeyColumn" /> 不是外键列。</exception>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.ForeignKeyPath">
      <summary>获取将当前页面与显示外键实体详细信息的页面链接的 URL。</summary>
      <returns>链接到外键数据详细信息的 URL。</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.FormatFieldValue(System.Object)">
      <summary>将 HTML 编码和格式设置应用于将显示的字符串。</summary>
      <returns>带格式的值。</returns>
      <param name="fieldValue">要设置格式的数据字段值。</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.FormattingOptions">
      <summary>获取或设置要应用于字段模板的 HTML 编码和格式设置选项。</summary>
      <returns>公开要应用于字段模板的 HTML 编码和格式设置选项的接口。</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.GetColumnValue(System.Web.DynamicData.MetaColumn)">
      <summary>获取当前行中指定列的值。</summary>
      <returns>一个表示当前行中指定列的值的对象。</returns>
      <param name="column">从其中获取值的列。</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.GetSelectedValueString">
      <summary>返回列值的字符串表示形式。</summary>
      <returns>如果列的当前值是外键列或枚举列，则为所选值的字符串表示形式；否则为 null。</returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Host">
      <summary>获取或设置为此 <see cref="T:System.Web.DynamicData.FieldTemplateUserControl" /> 类提供上下文的主机。</summary>
      <returns>为此字段模板类提供上下文的对象。</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.IgnoreModelValidationAttribute(System.Type)">
      <summary>允许 <see cref="T:System.Web.DynamicData.DynamicValidator" /> 忽略特定类型的模型验证特性。</summary>
      <param name="attributeType">要忽略的特性。</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.MetadataAttributes">
      <summary>获取应用于当前列的元数据特性的集合。</summary>
      <returns>应用于列的元数据特性的集合。</returns>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Mode">
      <summary>获取字段模板使用的模式。</summary>
      <returns>字段模板的当前模式。</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.PopulateListControl(System.Web.UI.WebControls.ListControl)">
      <summary>用父表中的所有值填充列表控件。</summary>
      <param name="listControl">要填充的列表控件。</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Row">
      <summary>获取当前数据行对象。</summary>
      <returns>当前数据行对象。</returns>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.SetUpValidator(System.Web.UI.WebControls.BaseValidator)">
      <summary>对所有验证控件设置 <see cref="P:System.Web.DynamicData.IFieldTemplateHost.ValidationGroup" />。</summary>
      <param name="validator">要设置的验证控件。</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.SetUpValidator(System.Web.UI.WebControls.BaseValidator,System.Web.DynamicData.MetaColumn)">
      <summary>使用此类型验证程序和要验证的列设置 <see cref="T:System.Web.DynamicData.DynamicValidator" />。</summary>
      <param name="validator">要设置的验证程序类型。</param>
      <param name="column">要为其设置验证程序的列。</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.System#Web#DynamicData#IFieldTemplate#SetHost(System.Web.DynamicData.IFieldTemplateHost)">
      <summary>将字段模板与控制该模板使用方式的对象关联。</summary>
      <param name="host">承载字段模板类的对象。 控制对字段模板的使用。</param>
    </member>
    <member name="M:System.Web.DynamicData.FieldTemplateUserControl.System#Web#UI#IBindableControl#ExtractValues(System.Collections.Specialized.IOrderedDictionary)">
      <summary>检索一组名称/值对，以便在字段模板控件中实现双向数据绑定。</summary>
      <param name="dictionary">包含名称/值对的词典。</param>
    </member>
    <member name="P:System.Web.DynamicData.FieldTemplateUserControl.Table">
      <summary>获取字段模板的列所属的 <see cref="T:System.Web.DynamicData.MetaTable" />。</summary>
      <returns>与字段模板关联的列所属的表格。</returns>
    </member>
    <member name="T:System.Web.DynamicData.FilterFactory">
      <summary>创建筛选器模板。</summary>
    </member>
    <member name="M:System.Web.DynamicData.FilterFactory.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.FilterFactory" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)">
      <summary>创建筛选器模板的一个实例。</summary>
      <returns>
        <see cref="T:System.Web.DynamicData.QueryableFilterUserControl" /> 类的实例。</returns>
      <param name="column">筛选器模板应用于的数据列。</param>
      <param name="filterUIHint">要使用的筛选器模板的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)">
      <summary>获取筛选器模板的虚拟路径。</summary>
      <returns>筛选器模板的虚拟路径。</returns>
      <param name="column">筛选器模板应用于的数据列。</param>
      <param name="filterUIHint">要使用的筛选器模板。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="column" /> 为 null。</exception>
    </member>
    <member name="T:System.Web.DynamicData.FilterRepeater">
      <summary>表示一个枚举可筛选的表列的控件。</summary>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.FilterRepeater" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.FilterRepeater.ContextTypeName">
      <summary>获取或设置用于检索数据的数据源对象的名称。</summary>
      <returns>用于检索数据的数据源对象的名称。</returns>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.DataBind">
      <summary>将 <see cref="T:System.Web.DynamicData.FilterRepeater" /> 控件绑定到从数据源检索的数据。</summary>
    </member>
    <member name="P:System.Web.DynamicData.FilterRepeater.DynamicFilterContainerId">
      <summary>获取或设置 <see cref="P:System.Web.UI.WebControls.TemplateColumn.ItemTemplate" /> 实例中 <see cref="T:System.Web.DynamicData.FilterRepeater" /> 控件的 ID。</summary>
      <returns>如果指定了 ID，则为用于显示 <see cref="P:System.Web.UI.WebControls.TemplateColumn.ItemTemplate" /> 实例中筛选器用户界面的控件的 ID；否则为“DynamicFilter”。</returns>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.GetFilteredColumns">
      <summary>返回属于与当前 <see cref="T:System.Web.DynamicData.FilterRepeater" /> 控件关联的表的可排序列的枚举。</summary>
      <returns>属于与当前 <see cref="T:System.Web.DynamicData.FilterRepeater" /> 控件关联的表的可排序列的枚举。</returns>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
      <summary>获取要添加到 <see cref="T:System.Web.DynamicData.FilterRepeater" /> 控件的 Where 参数集合中的 Where 参数的列表。</summary>
      <returns>Where 参数的列表。</returns>
      <param name="dataSource">Where 参数的数据源。</param>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.OnFilterItemCreated(System.Web.UI.WebControls.RepeaterItem)">
      <summary>在数据绑定过程中，对此 <see cref="T:System.Web.DynamicData.FilterRepeater" /> 控件实例化的每个项和交替项模板调用。</summary>
      <param name="item">项模板的内容。</param>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.OnInit(System.EventArgs)">
      <summary>引发要初始化 <see cref="T:System.Web.DynamicData.FilterRepeater" /> 控件的 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.DynamicData.FilterRepeater.OnItemCreated(System.Web.UI.WebControls.RepeaterItemEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.Repeater.ItemCreated" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="P:System.Web.DynamicData.FilterRepeater.Table">
      <summary>获取与 <see cref="T:System.Web.DynamicData.FilterRepeater" /> 控件关联的表。</summary>
      <returns>与 <see cref="T:System.Web.DynamicData.FilterRepeater" /> 控件关联的表。</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterRepeater.TableName">
      <summary>获取要筛选的表的名称。</summary>
      <returns>要筛选的表的名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterRepeater.Visible">
      <summary>获取或设置一个值，该值指定是否显示控件。</summary>
      <returns>如果显示控件，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Web.DynamicData.FilterUserControlBase">
      <summary>为用于在数据表中筛选数据的用户控件提供基类。 此类用于显示筛选器选择器。</summary>
    </member>
    <member name="M:System.Web.DynamicData.FilterUserControlBase.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.FilterUserControlBase" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.Column">
      <summary>获取对其应用筛选器的列。</summary>
      <returns>对其应用筛选器的列。</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.ContextTypeName">
      <summary>获取或设置其中包含表或数据列的上下文的类型。</summary>
      <returns>用于检索数据的数据源对象的名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.DataField">
      <summary>获取或设置要筛选的列的名称。</summary>
      <returns>要筛选的列的名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.InitialValue">
      <summary>获取在填充筛选器时，筛选器的初始值。</summary>
      <returns>筛选器的初始值。</returns>
    </member>
    <member name="M:System.Web.DynamicData.FilterUserControlBase.PopulateListControl(System.Web.UI.WebControls.ListControl)">
      <summary>使用通过外键与当前表相关的数据表中的所有项来填充 <see cref="T:System.Web.UI.WebControls.ListControl" /> 对象。</summary>
      <param name="listControl">要填充的控件。</param>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.SelectedDataKey">
      <summary>获取选定项的数据键。</summary>
      <returns>选定项的键。</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.SelectedValue">
      <summary>获取下拉列表框控件中的选定值。</summary>
      <returns>下拉列表框控件中当前选定的值。</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.System#Web#DynamicData#IControlParameterTarget#FilteredColumn">
      <summary>获取所筛选的数据列。</summary>
      <returns>所筛选的数据列。</returns>
    </member>
    <member name="M:System.Web.DynamicData.FilterUserControlBase.System#Web#DynamicData#IControlParameterTarget#GetPropertyNameExpression(System.String)">
      <summary>获取所筛选的列的名称。</summary>
      <returns>所筛选的列。</returns>
      <param name="columnName">所筛选的列。</param>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.System#Web#DynamicData#IControlParameterTarget#Table">
      <summary>获取所筛选的表。</summary>
      <returns>所筛选的表。</returns>
    </member>
    <member name="P:System.Web.DynamicData.FilterUserControlBase.TableName">
      <summary>获取或设置筛选器使用的数据表的名称。</summary>
      <returns>筛选器使用的数据表的名称。</returns>
    </member>
    <member name="T:System.Web.DynamicData.IControlParameterTarget">
      <summary>定义类要为 <see cref="T:System.Web.DynamicData.DynamicControlParameter" /> 类的实例提供数据而必须实现的成员。</summary>
    </member>
    <member name="P:System.Web.DynamicData.IControlParameterTarget.FilteredColumn">
      <summary>获取应用此参数的列（如果有）。</summary>
      <returns>应用此参数的列（如果有）。</returns>
    </member>
    <member name="M:System.Web.DynamicData.IControlParameterTarget.GetPropertyNameExpression(System.String)">
      <summary>获取可用作控件参数的属性名称的表达式。</summary>
      <returns>可用作控件参数的属性名称的表达式。</returns>
      <param name="columnName">列的名称。</param>
    </member>
    <member name="P:System.Web.DynamicData.IControlParameterTarget.Table">
      <summary>获取此提供程序所提供的数据类型。</summary>
      <returns>此提供程序所提供的数据类型。</returns>
    </member>
    <member name="T:System.Web.DynamicData.IFieldFormattingOptions">
      <summary>为通用格式设置选项属性定义一个接口，这些属性要应用于字段模板用户控件。</summary>
    </member>
    <member name="P:System.Web.DynamicData.IFieldFormattingOptions.ApplyFormatInEditMode">
      <summary>获取一个值，该值指示当字段处于编辑模式时，是否将 <see cref="P:System.Web.DynamicData.IFieldFormattingOptions.DataFormatString" /> 属性指定的格式设置字符串应用于字段值。</summary>
      <returns>如果在编辑模式下应用格式设置字符串，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldFormattingOptions.ConvertEmptyStringToNull">
      <summary>获取一个值，该值指示在数据源中更新数据字段时是否将空字符串值 ("") 自动转换为 null 值。</summary>
      <returns>如果将空字符串值自动转换为 null 值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldFormattingOptions.DataFormatString">
      <summary>获取一个字符串，该字符串为字段的值指定显示格式。</summary>
      <returns>指定字段值的显示格式的格式化字符串。</returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldFormattingOptions.HtmlEncode">
      <summary>获取一个值，该值指示控件的数据在呈现之前是否经过 HTML 编码。</summary>
      <returns>如果控件的数据在呈现之前经过 HTML 编码，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldFormattingOptions.NullDisplayText">
      <summary>获取当字段值为 null 时为该字段显示的标题。</summary>
      <returns>当字段值为 null 时为该字段显示的标题。</returns>
    </member>
    <member name="T:System.Web.DynamicData.IFieldTemplate">
      <summary>定义类要识别为字段模板而必须实现的成员。</summary>
    </member>
    <member name="M:System.Web.DynamicData.IFieldTemplate.SetHost(System.Web.DynamicData.IFieldTemplateHost)">
      <summary>将字段模板与控制其使用的对象关联。</summary>
      <param name="host">控制字段模板使用的对象。</param>
    </member>
    <member name="T:System.Web.DynamicData.IFieldTemplateFactory">
      <summary>定义由创建字段模板的对象实现的接口。</summary>
    </member>
    <member name="M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)">
      <summary>使用 <see cref="T:System.Web.DynamicData.MetaColumn" /> 类、<see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> 类和 <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" /> 属性创建字段模板的实例。</summary>
      <returns>在类中实现时，为 <see cref="FieldTemplateFactory" /> 对象的一个实例。</returns>
      <param name="column">指定用于显示字段模板的数据列。</param>
      <param name="mode">指定字段模板的显示模式。</param>
      <param name="uiHint">指定要使用的字段模板。</param>
    </member>
    <member name="M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)">
      <summary>使用指定数据模型初始化 <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />。</summary>
      <param name="model">指定字段模板使用的数据模型。</param>
    </member>
    <member name="T:System.Web.DynamicData.IFieldTemplateHost">
      <summary>定义必须由某个类实现的成员，该类管理字段模板用户控件的使用。</summary>
    </member>
    <member name="P:System.Web.DynamicData.IFieldTemplateHost.Column">
      <summary>获取字段模板与之关联的列。</summary>
      <returns>字段模板与之关联的列。</returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions">
      <summary>获取将应用于字段模板的格式设置选项。</summary>
      <returns>将应用于字段模板的格式设置选项。</returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldTemplateHost.Mode">
      <summary>获取字段模板的呈现模式。</summary>
      <returns>枚举值之一，该值指定字段模板的呈现模式。</returns>
    </member>
    <member name="P:System.Web.DynamicData.IFieldTemplateHost.ValidationGroup">
      <summary>获取字段模板的验证组名称。</summary>
      <returns>字段模板的验证组名称。</returns>
    </member>
    <member name="T:System.Web.DynamicData.IFilterExpressionProvider">
      <summary>提供一个接口创建过滤器中继器。</summary>
    </member>
    <member name="M:System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(System.Linq.IQueryable)">
      <summary>返回筛选重复器。</summary>
      <returns>筛选器。</returns>
      <param name="source">数据源查询。</param>
    </member>
    <member name="M:System.Web.DynamicData.IFilterExpressionProvider.Initialize(System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>初始化数据源。</summary>
      <param name="dataSource">数据源。</param>
    </member>
    <member name="T:System.Web.DynamicData.IWhereParametersProvider">
      <summary>由提供一个或多个 Where 参数的参数类实现。</summary>
    </member>
    <member name="M:System.Web.DynamicData.IWhereParametersProvider.GetWhereParameters(System.Web.DynamicData.IDynamicDataSource)">
      <summary>获取应添加到 Where 参数集合中的 Where 参数的列表。</summary>
      <returns>参数列表。</returns>
      <param name="dataSource">参数源。</param>
    </member>
    <member name="T:System.Web.DynamicData.MetaChildrenColumn">
      <summary>表示一个指示一对多关系的数据库字段。</summary>
    </member>
    <member name="M:System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>初始化 <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> 类的新实例。</summary>
      <param name="table">元表。</param>
      <param name="entityMember">列提供程序。</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaChildrenColumn.ChildTable">
      <summary>获取一个表示一对多关系中的子表的对象。</summary>
      <returns>一个表示一对多关系中的子表的对象。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable">
      <summary>获取一个表示子表中的外键字段的对象。</summary>
      <returns>一个表示子表中的外键字段的对象。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)">
      <summary>获取子表的列表操作页的路径。</summary>
      <returns>子表的列表操作页的路径。</returns>
      <param name="row">包含外键字段的行。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)">
      <summary>获取子表的指定操作页的路径。</summary>
      <returns>子表的指定操作页的路径。</returns>
      <param name="action">目标操作。</param>
      <param name="row">包含外键字段的行。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)">
      <summary>获取子表的指定操作页的路径。</summary>
      <returns>子表的指定操作页的路径。</returns>
      <param name="action">目标操作。</param>
      <param name="row">包含外键字段的行。</param>
      <param name="path">目标页。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaChildrenColumn.Initialize">
      <summary>初始化调用构造函数后可能不可用的数据。</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaChildrenColumn.IsManyToMany">
      <summary>获取一个值，该值指示列的多对多关系状态。</summary>
      <returns>如果列关系是多对多，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Web.DynamicData.MetaColumn">
      <summary>表示动态数据使用的数据库列。</summary>
    </member>
    <member name="M:System.Web.DynamicData.MetaColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>初始化 <see cref="T:System.Web.DynamicData.MetaColumn" /> 类的新实例。</summary>
      <param name="table">包含列的元表。</param>
      <param name="columnProvider">列提供程序。</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.AllowInitialValue">
      <summary>获取或设置一个值，该值指定某个列是否允许插入值。</summary>
      <returns>如果列允许插入值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode">
      <summary>获取一个值，该值指示当包含 <see cref="T:System.Web.DynamicData.MetaColumn" /> 对象表示的数据字段的数据绑定控件处于编辑模式时，<see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> 属性指定的格式设置字符串是否应用于字段值。</summary>
      <returns>如果当包含 <see cref="T:System.Web.DynamicData.MetaColumn" /> 对象表示的数据字段的数据绑定控件处于编辑模式时，<see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> 属性指定的格式设置字符串应用于字段值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Attributes">
      <summary>获取应用于 <see cref="T:System.Web.DynamicData.MetaColumn" /> 对象表示的数据字段的元数据特性的集合。</summary>
      <returns>应用于 <see cref="T:System.Web.DynamicData.MetaColumn" /> 对象表示的数据字段的元数据特性的集合。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaColumn.BuildAttributeCollection">
      <summary>获取特性集合。</summary>
      <returns>特性集合。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.ColumnType">
      <summary>获取数据字段类型。</summary>
      <returns>数据字段类型。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull">
      <summary>获取一个值，该值指示在数据源中更新数据字段时是否将空字符串值 ("") 自动转换为 null 值。</summary>
      <returns>如果在数据源中更新数据字段时，将空字符串值自动转换为 null 值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.DataFormatString">
      <summary>获取指定字段值的显示格式的字符串。</summary>
      <returns>指定字段值的显示格式的字符串。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.DataTypeAttribute">
      <summary>获取应用于数据字段的 <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> 特性。</summary>
      <returns>应用于数据字段的 <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> 特性。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.DefaultValue">
      <summary>获取数据字段的默认值。</summary>
      <returns>数据字段的默认值。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Description">
      <summary>获取数据字段的说明。</summary>
      <returns>数据字段的说明。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.DisplayName">
      <summary>获取数据字段的显示名称。</summary>
      <returns>数据字段的显示名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.EntityTypeProperty">
      <summary>获取一个对象，该对象包含表示实体类型的数据字段的属性的特性。</summary>
      <returns>一个对象，该对象包含表示实体类型的数据字段的属性的特性。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.FilterUIHint">
      <summary>获取用于列的 <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> 值。</summary>
      <returns>用于列的 <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> 值。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.HtmlEncode">
      <summary>获取一个值，该值指示在数据绑定控件中显示字段值之前，这些字段值是否经过 HTML 编码。</summary>
      <returns>任何情况下都为 true。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaColumn.Initialize">
      <summary>初始化调用构造函数后可能不可用的数据。</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsBinaryData">
      <summary>获取一个值，该值指示数据字段是否包含二进制数据。</summary>
      <returns>如果数据字段包含二进制数据，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsCustomProperty">
      <summary>获取一个值，该值指示数据库中是否存在数据字段。</summary>
      <returns>如果数据库中不存在数据字段，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint">
      <summary>获取一个值，该值指示数据字段是否为浮点型。</summary>
      <returns>如果数据字段是浮点型，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent">
      <summary>获取一个值，该值指示数据字段是否为外键的一部分。</summary>
      <returns>如果数据字段是外键的一部分，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsGenerated">
      <summary>获取一个值，该值指示是否在数据库中自动生成数据字段值。</summary>
      <returns>如果在数据库中自动生成数据字段值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsInteger">
      <summary>获取一个值，该值指示数据字段类型是否为 integer 类型。</summary>
      <returns>如果数据字段类型是 integer 类型，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsLongString">
      <summary>获取一个值，该值指示数据字段类型是否可包含 long 字符串。</summary>
      <returns>如果数据字段类型可包含 long 字符串，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey">
      <summary>获取一个值，该值指示数据字段是否为表的主键的一部分。</summary>
      <returns>如果数据字段是表的主键的一部分，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsReadOnly">
      <summary>获取一个值，该值指示数据字段是否为只读。</summary>
      <returns>如果该数据字段为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsRequired">
      <summary>获取一个值，该值指示数据字段是否需要值。</summary>
      <returns>如果数据字段需要值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.IsString">
      <summary>获取一个值，该值指示数据字段类型是否为 string 类型。</summary>
      <returns>如果数据字段类型是 string 类型，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.MaxLength">
      <summary>获取一个值，该值指示可在数据字段中存储的数据的最大长度。</summary>
      <returns>可在数据字段中存储的数据的最大长度。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Model">
      <summary>获取 <see cref="T:System.Web.DynamicData.MetaModel" /> 对象，该对象表示此数据字段所属的数据模型。</summary>
      <returns>一个对象，该对象表示此数据字段所属的数据模型。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Name">
      <summary>获取数据字段的名称。</summary>
      <returns>数据字段的名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.NullDisplayText">
      <summary>获取当字段值为 null 时，该字段显示的标题。</summary>
      <returns>当字段值为 null 时，该字段显示的标题。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Prompt">
      <summary>获取可以在绑定到列中数据的 UI 中用作水印的值。</summary>
      <returns>可以在绑定到列中数据的 UI 中用作水印的值。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Provider">
      <summary>获取用于生成 <see cref="T:System.Web.DynamicData.MetaColumn" /> 对象的抽象提供程序对象。</summary>
      <returns>用于生成 <see cref="T:System.Web.DynamicData.MetaColumn" /> 对象的抽象提供程序对象。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage">
      <summary>获取当数据字段需要值但其值为空时显示的错误消息。</summary>
      <returns>当数据字段需要值但其值为空时显示的错误消息。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaColumn.ResetMetadata">
      <summary>清除缓存的列元数据。</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Scaffold">
      <summary>获取一个值，该值指示是否应显示数据字段。</summary>
      <returns>如果应显示数据字段，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.ShortDisplayName">
      <summary>获取列的短名称。</summary>
      <returns>列的短名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.SortExpression">
      <summary>获取用于确定数据字段的排序顺序的表达式。</summary>
      <returns>用于确定数据字段的排序顺序的表达式。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.Table">
      <summary>获取 <see cref="T:System.Web.DynamicData.MetaTable" /> 对象，该对象表示数据字段所属的表。</summary>
      <returns>一个对象，该对象表示数据字段所属的表。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaColumn.ToString">
      <summary>获取数据字段名。</summary>
      <returns>数据字段名，它是列的字符串表示形式。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.TypeCode">
      <summary>获取数据字段的类型。</summary>
      <returns>数据字段的类型。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaColumn.UIHint">
      <summary>获取为数据字段指定的字段模板的名称。</summary>
      <returns>为数据字段指定的字段模板的名称。</returns>
    </member>
    <member name="T:System.Web.DynamicData.MetaForeignKeyColumn">
      <summary>表示 ASP.NET 动态数据使用的数据库外键字段。</summary>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>初始化 <see cref="T:System.Web.DynamicData.MetaForeignKeyColumn" /> 类的新实例。</summary>
      <param name="table">实体元表。</param>
      <param name="entityMember">实体列提供程序。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.ExtractForeignKey(System.Collections.IDictionary,System.String)">
      <summary>在指定的词典中保存外键值。</summary>
      <param name="dictionary">包含数据字段的新值的词典对象。</param>
      <param name="value">外键的值。</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaForeignKeyColumn.ForeignKeyNames">
      <summary>获取一个集合，该集合包含表示数据库关系的关联中外键的名称。</summary>
      <returns>包含外键名称的集合。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetFilterExpression(System.String)">
      <summary>返回映射到外键的替换名称。</summary>
      <returns>映射到外键的替换名称。</returns>
      <param name="foreignKeyName">外键的名称。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyDetailsPath(System.Object)">
      <summary>获取指定外键字段的父表的详细信息操作页路径。</summary>
      <returns>指定外键字段的父表的详细信息操作页路径。</returns>
      <param name="row">包含外键字段的行。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object)">
      <summary>获取指定外键字段的父表的指定操作页路径。</summary>
      <returns>指定外键字段的父表的指定操作页路径。</returns>
      <param name="action">目标操作。</param>
      <param name="row">包含外键字段的行。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyPath(System.String,System.Object,System.String)">
      <summary>获取指定外键字段的父表的指定操作页路径。</summary>
      <returns>指定外键字段的父表的指定操作页路径。</returns>
      <param name="action">目标操作。</param>
      <param name="row">包含外键字段的行。</param>
      <param name="path">目标页。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyString(System.Object)">
      <summary>检索以逗号分隔的表示指定行的外键的值列表。</summary>
      <returns>以逗号分隔的表示指定行的外键的值列表。</returns>
      <param name="row">要检索其外键值的行。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.GetForeignKeyValues(System.Object)">
      <summary>检索值的集合，这些值表示指定行的外键。</summary>
      <returns>值的集合，这些值表示指定行的外键。</returns>
      <param name="row">要检索其外键值的行。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaForeignKeyColumn.Initialize">
      <summary>初始化调用构造函数后可能不可用的数据。</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaForeignKeyColumn.IsPrimaryKeyInThisTable">
      <summary>获取一个值，该值指示外键字段是否为表的主键的一部分。</summary>
      <returns>如果外键字段是表的主键的一部分，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaForeignKeyColumn.ParentTable">
      <summary>获取外键字段的父表。</summary>
      <returns>外键字段的父表。</returns>
    </member>
    <member name="T:System.Web.DynamicData.MetaModel">
      <summary>表示 ASP.NET 动态数据使用的一个或多个数据库。</summary>
      <exception cref="T:System.InvalidOperationException">如果存在数据上下文注册错误，则可由任何方法引发。</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.#ctor">
      <summary>实例化 <see cref="T:System.Web.DynamicData.MetaModel" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.#ctor(System.Boolean)">
      <summary>实例化 <see cref="T:System.Web.DynamicData.MetaModel" /> 类的新实例。</summary>
      <param name="registerGlobally">true 指示模型是全局注册的，否则为 false。 默认值为 true。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)">
      <summary>实例化一个 <see cref="T:System.Web.DynamicData.MetaTable" /> 对象。</summary>
      <returns>表的新实例。</returns>
      <param name="provider">表的提供程序。</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.Default">
      <summary>获取应用程序创建的数据模型的第一个实例。</summary>
      <returns>数据模型实例。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath">
      <summary>获取或设置 DynamicData 文件夹在网站中的虚拟路径。</summary>
      <returns>DynamicData 文件夹的虚拟路径。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.EntityTemplateFactory">
      <summary>获取或设置与模型关联的 <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> 对象。</summary>
      <returns>与模型关联的 <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> 对象的实例。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.FieldTemplateFactory">
      <summary>获取或设置自定义 <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> 接口。</summary>
      <returns>
        <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> 接口。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.FilterFactory">
      <summary>获取或设置与模型关联的 <see cref="T:System.Web.DynamicData.FilterFactory" /> 对象。</summary>
      <returns>与模型关联的 <see cref="T:System.Web.DynamicData.FilterFactory" /> 对象的实例。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)">
      <summary>返回与特定表关联的操作路径。</summary>
      <returns>与路由关联的 URL。</returns>
      <param name="tableName">对其应用操作的表的名称。</param>
      <param name="action">要应用于表的操作。</param>
      <param name="row">一个对象，表示表中的一行数据。 <paramref name="row" /> 用于为查询字符串参数提供值。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.GetModel(System.Type)">
      <summary>返回指定上下文的数据模型实例。</summary>
      <returns>与指定上下文类型关联的数据模型。</returns>
      <param name="contextType">数据模型中定义的数据上下文的类型。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.GetTable(System.String)">
      <summary>返回与指定表关联的元数据。</summary>
      <returns>描述指定表的元数据。</returns>
      <param name="uniqueTableName">标识数据模型中表的名称。</param>
      <exception cref="T:System.ArgumentException">在数据模型中找不到名称。</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)">
      <summary>返回描述指定表的元数据。</summary>
      <returns>描述指定表的元数据。</returns>
      <param name="tableName">表的名称。</param>
      <param name="contextType">要搜索表的数据上下文。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tablename" /> 或 <paramref name="contextType" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">未注册上下文或数据上下文中不存在表。</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.GetTable(System.Type)">
      <summary>返回描述指定表的元数据。</summary>
      <returns>描述指定表的元数据。</returns>
      <param name="entityType">标识数据模型中表的类型。</param>
      <exception cref="T:System.ArgumentNullException">在数据模型中找不到类型。</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})">
      <summary>注册上下文工厂指定的数据上下文。</summary>
      <param name="contextFactory">实例化数据上下文的工厂。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)">
      <summary>通过使用指定的上下文配置并启用自定义构造函数，注册数据上下文实例。</summary>
      <param name="contextFactory">用于实例化数据模型上下文的委托。</param>
      <param name="configuration">
        <see cref="T:System.Web.DynamicData.ContextConfiguration" /> 类定义的上下文信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextFactory" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="contextFactory" /> 实例化的 <paramref name="contextType" /> 无效。</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type)">
      <summary>注册数据上下文实例。</summary>
      <param name="contextType">数据模型中定义的数据上下文的类型。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)">
      <summary>使用指定的上下文配置注册数据上下文实例。</summary>
      <param name="contextType">数据模型中定义的数据上下文的类型。</param>
      <param name="configuration">
        <see cref="T:System.Web.DynamicData.ContextConfiguration" /> 类定义的上下文的配置信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contextType" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)">
      <summary>通过使用数据模型提供程序来注册数据上下文实例。</summary>
      <param name="dataModelProvider">数据模型的提供程序。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)">
      <summary>通过使用指定的上下文配置并启用数据模型提供程序，注册数据上下文实例。</summary>
      <param name="dataModelProvider">数据模型的提供程序。</param>
      <param name="configuration">
        <see cref="T:System.Web.DynamicData.ContextConfiguration" /> 类定义的上下文信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataModelProvider" /> 或 <paramref name="configuration" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="contextType" /> 已注册。</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.ResetRegistrationException">
      <summary>重置可能发生的任何前一个上下文注册错误。</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.Tables">
      <summary>获取属于数据模型一部分的所有表的集合。</summary>
      <returns>一个包含属于数据模型的表的集合。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)">
      <summary>尝试获取与指定表关联的元数据。</summary>
      <returns>如果找到了表元数据，则为 true；否则为 false。</returns>
      <param name="uniqueTableName">唯一标识表的名称。</param>
      <param name="table">当此方法返回时，如果它找到了请求的表，则包含该表的元数据。 该参数未经初始化即被传递。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uniqueTableName" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)">
      <summary>尝试获取与指定表关联的元数据。</summary>
      <returns>如果找到了表元数据，则为 true；否则为 false。</returns>
      <param name="entityType">表类型。</param>
      <param name="table">当此方法返回时，并且如果找到了请求的表，则包含指定表的元数据。 该参数未经初始化即被传递。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entityType" /> 为 null。</exception>
    </member>
    <member name="P:System.Web.DynamicData.MetaModel.VisibleTables">
      <summary>获取数据模型中可见表的集合。</summary>
      <returns>可见表是指启用了基架的表。 这意味着它是具有 List.aspx 页的表。</returns>
    </member>
    <member name="T:System.Web.DynamicData.MetaTable">
      <summary>表示描述供动态数据页使用的表的元数据。</summary>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)">
      <summary>初始化 <see cref="T:System.Web.DynamicData.MetaTable" /> 类的新实例。</summary>
      <param name="metaModel">实体元模型。</param>
      <param name="tableProvider">实体模型提供程序。</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Attributes">
      <summary>获取与表关联的特性。</summary>
      <returns>一个包含表特性的集合。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.BuildAttributeCollection">
      <summary>创建特性集合。</summary>
      <returns>特性集合。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)">
      <summary>获取一个值，该值指示是否允许指定用户执行删除操作。</summary>
      <returns>如果允许用户执行删除操作，则为 true；否则为 false。</returns>
      <param name="principal">用户的安全上下文。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)">
      <summary>获取一个值，该值指示是否允许指定用户执行插入操作。</summary>
      <returns>如果允许用户执行插入操作，则为 true；否则为 false。</returns>
      <param name="principal">用户的安全上下文。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)">
      <summary>获取一个值，该值指示是否允许指定用户执行读取操作。</summary>
      <returns>如果允许用户执行读取操作，则为 true；否则为 false。</returns>
      <param name="principal">用户的安全上下文。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)">
      <summary>获取一个值，该值指示是否允许指定用户执行更新操作。</summary>
      <returns>如果允许用户执行更新操作，则为 true；否则为 false。</returns>
      <param name="principal">用户的安全上下文。</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Columns">
      <summary>获取表的列集合。</summary>
      <returns>一个包含表列的集合。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>创建一个新 <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> 对象。</summary>
      <returns>新的子元列对象。</returns>
      <param name="columnProvider">列提供程序。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>创建一个 <see cref="T:System.Web.DynamicData.MetaColumn" /> 对象。</summary>
      <returns>新的元列对象。</returns>
      <param name="columnProvider">列提供程序。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateContext">
      <summary>返回表的数据上下文。</summary>
      <returns>表的数据上下文。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>创建一个包含外键元数据的对象。</summary>
      <returns>一个包含外键元数据的对象。</returns>
      <param name="columnProvider">列提供程序。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)">
      <summary>为指定表创建元数据。</summary>
      <returns>包含表元数据的对象。</returns>
      <param name="typeDescriptor">有关表类型的信息。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.CreateTable(System.Type)">
      <summary>为指定表创建元数据。</summary>
      <returns>包含表元数据的对象。</returns>
      <param name="entityType">要为其生成元数据的表类型。</param>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.DataContextPropertyName">
      <summary>获取表的名称。</summary>
      <returns>表的名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.DataContextType">
      <summary>获取与表关联的数据上下文的类型。</summary>
      <returns>数据上下文的类型。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.DisplayColumn">
      <summary>当此表中的项用作外键关系中的父级时，获取用于显示值的列。</summary>
      <returns>当此表中的项用作外键关系中的父级时，用于显示值的列。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.DisplayName">
      <summary>获取用户友好格式的表的名称。</summary>
      <returns>表示表的用户友好名称的字符串。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.EntityType">
      <summary>获取表示表的实体类型。</summary>
      <returns>表示实体的类型。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames">
      <summary>获取一个以逗号分隔的外键名称列表。</summary>
      <returns>一个以逗号分隔的外键名称列表。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String)">
      <summary>返回当前表和指定操作的操作路径。</summary>
      <returns>指定操作的操作路径。</returns>
      <param name="action">操作的名称。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})">
      <summary>返回当前表、指定的操作和指定的主键的操作路径。</summary>
      <returns>指定的操作和主键的操作路径。</returns>
      <param name="action">操作的名称。</param>
      <param name="primaryKeyValues">组成主键的列值的列表。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)">
      <summary>基于指定的主键和虚拟路径，向操作路径追加查询字符串。</summary>
      <returns>指定的主键和虚拟路径的、追加了查询字符串值的操作路径。</returns>
      <param name="action">操作的名称。</param>
      <param name="primaryKeyValues">组成主键的列值的列表。</param>
      <param name="path">操作的虚拟路径。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)">
      <summary>使用操作名称返回指定行的操作路径。</summary>
      <returns>指定行的操作路径。</returns>
      <param name="action">操作的名称。</param>
      <param name="row">要获取其操作路径的行。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)">
      <summary>使用操作名称和操作的虚拟路径返回指定行的操作路径。</summary>
      <returns>指定行的操作路径。</returns>
      <param name="action">操作的名称。</param>
      <param name="row">一个包含操作路径的行的对象。</param>
      <param name="path">操作的虚拟路径。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>返回当前表及指定的操作和路由的操作路径。</summary>
      <returns>指定的操作和路由的操作路径。</returns>
      <param name="action">操作的名称。</param>
      <param name="routeValues">操作的路由列表。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetColumn(System.String)">
      <summary>返回指定列的元数据。</summary>
      <returns>列元数据。</returns>
      <param name="columnName">要获取其元数据的列的名称。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)">
      <summary>获取列值的集合。</summary>
      <returns>列值的集合。</returns>
      <param name="context">指定 Web 请求的上下文。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetDataKeyFromRoute">
      <summary>从路由值中检索实体的主键。</summary>
      <returns>如果可找到，则为实体的主键值；否则为 null。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)">
      <summary>当在外键关系中使用行时，返回用作该行的实例的显示字符串的值。</summary>
      <returns>行的实例的显示名称。</returns>
      <param name="row">要获取其显示字符串的行。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetFilteredColumns">
      <summary>检索可筛选的列的列表。</summary>
      <returns>可筛选的列的列表。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)">
      <summary>为指定行检索主键名称和值的字典。</summary>
      <returns>主键名称和值的字典。</returns>
      <param name="row">一个行。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})">
      <summary>返回一个以逗号分隔的列值列表，这些列值表示指定行的主键。</summary>
      <returns>一个以逗号分隔的列值的列表。 如果列表为空，则返回空字符串。</returns>
      <param name="primaryKeyValues">组成主键的列值的列表。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)">
      <summary>返回一个以逗号分隔的列值列表，这些列值表示指定行的主键。</summary>
      <returns>一个以逗号分隔的列值列表，这些列值表示行的主键。</returns>
      <param name="row">要获取其主键的行。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)">
      <summary>返回一个列值集合，这些列值表示指定行的主键。</summary>
      <returns>一个列值集合，这些列值表示行的主键。</returns>
      <param name="row">要获取其主键的行。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetQuery">
      <summary>返回表示表的实体类型的 <see cref="T:System.Linq.IQueryable" /> 实例。</summary>
      <returns>实体类型的 <see cref="T:System.Linq.IQueryable" /> 实例。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetQuery(System.Object)">
      <summary>返回使用数据上下文表示表的实体类型的 <see cref="T:System.Linq.IQueryable" /> 实例。</summary>
      <returns>使用数据上下文表示表的实体类型的 <see cref="T:System.Linq.IQueryable" /> 实例。</returns>
      <param name="context">
        <see cref="T:System.Web.DynamicData.MetaTable" /> 对象的上下文。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)">
      <summary>返回要通过使用基架显示的列的列表。</summary>
      <returns>要通过使用基架显示的列的列表。</returns>
      <param name="mode">数据绑定控件模式。</param>
      <param name="containerType">一个值，该值指示是将表显示为单独的实体，还是显示为实体列表的一部分。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.GetTable(System.Type)">
      <summary>检索与指定类型关联的元表。</summary>
      <returns>与指定类型关联的元表。</returns>
      <param name="entityType">实体的类型。</param>
      <exception cref="T:System.InvalidOperationException">被此方法调用的 <see cref="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" /> 方法返回 false。</exception>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.HasPrimaryKey">
      <summary>获取一个指示表是否有主键的值。</summary>
      <returns>如果表有主键，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.Initialize">
      <summary>初始化调用构造函数后可能不可用的数据。</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.IsReadOnly">
      <summary>获取一个指示表是否为只读的值。</summary>
      <returns>如果表为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.ListActionPath">
      <summary>获取表的列表操作的操作路径。</summary>
      <returns>表的列表操作的操作路径。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Model">
      <summary>获取表所属的元模型。</summary>
      <returns>表所属的元模型。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Name">
      <summary>获取表的唯一名称。</summary>
      <returns>表的唯一名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.PrimaryKeyColumns">
      <summary>获取定义主键的列的集合。</summary>
      <returns>一个包含主键列的集合。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Provider">
      <summary>获取表的提供程序。</summary>
      <returns>表的提供程序。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.ResetMetadata">
      <summary>重置表的缓存元数据。</summary>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.RootEntityType">
      <summary>获取实体的继承层次结构的根类型。</summary>
      <returns>实体的继承层次结构的根类型。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.Scaffold">
      <summary>获取或设置一个值，该值指示是否应显示表。</summary>
      <returns>如果应显示表，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.SortColumn">
      <summary>获取排序表所依据的 <see cref="T:System.Web.DynamicData.MetaColumn" /> 值。</summary>
      <returns>排序表所依据的列。</returns>
    </member>
    <member name="P:System.Web.DynamicData.MetaTable.SortDescending">
      <summary>当项用作外键关系中的父级时，获取一个指示是否按降序排序项的值。</summary>
      <returns>如果按降序排序项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.ToString">
      <summary>返回表的名称。</summary>
      <returns>表的名称。</returns>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)">
      <summary>返回一个值，该值指示能否找到指定列。</summary>
      <returns>如果可以找到指定列，则为 true；否则为 false。</returns>
      <param name="columnName">要查找的列的名称。</param>
      <param name="column">此方法返回时将包含 <paramref name="columnName" /> 的 MetaColumn 对象。 该参数未经初始化即被传递。</param>
    </member>
    <member name="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)">
      <summary>检索与指定类型和表关联的元表。</summary>
      <returns>与给定的指定类型和表关联的元表。</returns>
      <param name="entityType">实体的类型。</param>
      <param name="table">当此方法返回时，包含与指定类型关联的元表。 该参数未经初始化即被传递。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entityType" /> 为 null。</exception>
    </member>
    <member name="T:System.Web.DynamicData.PageAction">
      <summary>指定 ASP.NET 动态数据应用程序中的路由机制使用的默认操作值。</summary>
    </member>
    <member name="P:System.Web.DynamicData.PageAction.Details">
      <summary>获取显示数据项详细信息的页面的操作名称。</summary>
      <returns>文本值“Details”。</returns>
    </member>
    <member name="P:System.Web.DynamicData.PageAction.Edit">
      <summary>获取用于编辑数据项的页面的操作名称。</summary>
      <returns>文本值“Edit”。</returns>
    </member>
    <member name="P:System.Web.DynamicData.PageAction.Insert">
      <summary>获取用于插入数据项的页面的操作名称。</summary>
      <returns>文本值“Insert”。</returns>
    </member>
    <member name="P:System.Web.DynamicData.PageAction.List">
      <summary>获取用于显示表中数据的页面的操作名称。</summary>
      <returns>文本值“List”。</returns>
    </member>
    <member name="T:System.Web.DynamicData.QueryableFilterRepeater">
      <summary>提供一个模板化控件，该控件可自动生成 UI 以针对支持的列类型筛选表行。</summary>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterRepeater.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterRepeater.DynamicFilterContainerId">
      <summary>获取或设置模板内 <see cref="T:System.Web.DynamicData.DynamicFilter" /> 控件的 ID，该模板配置为列的筛选器。</summary>
      <returns>模板内 <see cref="T:System.Web.DynamicData.DynamicFilter" /> 控件的 ID，该模板配置为列的筛选器。</returns>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate">
      <summary>获取或设置用于填充 <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> 类的控件。</summary>
      <returns>一个对象，该对象定义 <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> 控件中项的显示方式。</returns>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterRepeater.OnPreRender(System.EventArgs)">
      <summary>验证控件是否包含数据字段筛选器。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterRepeater.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable(System.Linq.IQueryable)">
      <summary>获取使用当前筛选器值修改的查询。</summary>
      <returns>筛选器。</returns>
      <param name="source">数据源查询。</param>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterRepeater.System#Web#DynamicData#IFilterExpressionProvider#Initialize(System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>初始化 <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> 类的新实例。</summary>
      <param name="dataSource">数据源。</param>
    </member>
    <member name="T:System.Web.DynamicData.QueryableFilterUserControl">
      <summary>为筛选器控件提供基类。</summary>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterUserControl.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.QueryableFilterUserControl" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterUserControl.ApplyEqualityFilter(System.Linq.IQueryable,System.String,System.Object)">
      <summary>从源 <see cref="T:System.Linq.IQueryable" /> 对象中获取经过转换的 <see cref="T:System.Linq.IQueryable" /> 对象。</summary>
      <returns>源 <see cref="T:System.Linq.IQueryable" /> 对象中经过转换的 <see cref="T:System.Linq.IQueryable" /> 对象。</returns>
      <param name="source">源 <see cref="T:System.Linq.IQueryable" /> 对象。</param>
      <param name="propertyName">属性的名称。</param>
      <param name="value">
        <paramref name="propertyName" /> 参数的值。</param>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterUserControl.Column">
      <summary>获取要用于筛选的列。</summary>
      <returns>要用于筛选的列。</returns>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterUserControl.DefaultValue">
      <summary>获取为表映射的默认值。</summary>
      <returns>为表映射的默认值。</returns>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterUserControl.DefaultValues">
      <summary>获取为表映射的默认值。</summary>
      <returns>为表映射的默认值。</returns>
    </member>
    <member name="E:System.Web.DynamicData.QueryableFilterUserControl.FilterChanged">
      <summary>当调用 <see cref="M:System.Web.DynamicData.QueryableFilterUserControl.OnFilterChanged" /> 方法时发生。</summary>
    </member>
    <member name="P:System.Web.DynamicData.QueryableFilterUserControl.FilterControl">
      <summary>获取处理筛选器模板中的筛选器的数据控件。</summary>
      <returns>处理筛选器的数据控件。</returns>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterUserControl.GetQueryable(System.Linq.IQueryable)">
      <summary>从源 <see cref="T:System.Linq.IQueryable" /> 对象中获取经过转换的 <see cref="T:System.Linq.IQueryable" /> 对象。</summary>
      <returns>源 <see cref="T:System.Linq.IQueryable" /> 对象中经过转换的 <see cref="T:System.Linq.IQueryable" /> 对象。</returns>
      <param name="source">源 <see cref="T:System.Linq.IQueryable" /> 对象。</param>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterUserControl.OnFilterChanged">
      <summary>引发 <see cref="E:System.Web.DynamicData.QueryableFilterUserControl.FilterChanged" /> 事件。</summary>
    </member>
    <member name="M:System.Web.DynamicData.QueryableFilterUserControl.PopulateListControl(System.Web.UI.WebControls.ListControl)">
      <summary>用表中的所有外键元素或 Boolean 元素填充列表控件。</summary>
      <param name="listControl">列表控件。</param>
    </member>
    <member name="T:System.Web.DynamicData.TableNameAttribute">
      <summary>提供特性来更改表的显示名称。</summary>
    </member>
    <member name="M:System.Web.DynamicData.TableNameAttribute.#ctor(System.String)">
      <summary>使用表的指定名称初始化 <see cref="T:System.Web.DynamicData.TableNameAttribute" /> 类的新实例。</summary>
      <param name="name">表将显示的名称。</param>
    </member>
    <member name="P:System.Web.DynamicData.TableNameAttribute.Name">
      <summary>获取或设置表名。</summary>
      <returns>与表关联的名称。</returns>
    </member>
    <member name="T:System.Web.DynamicData.ModelProviders.AssociationDirection">
      <summary>指示两个实体之间的关系。</summary>
    </member>
    <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.ManyToMany">
      <summary>指示多对多关系。</summary>
    </member>
    <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.ManyToOne">
      <summary>指示多对一关系。</summary>
    </member>
    <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.OneToMany">
      <summary>指示一对多关系。</summary>
    </member>
    <member name="F:System.Web.DynamicData.ModelProviders.AssociationDirection.OneToOne">
      <summary>指示一对一关系。</summary>
    </member>
    <member name="T:System.Web.DynamicData.ModelProviders.AssociationProvider">
      <summary>为列关联提供程序提供基类。</summary>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.AssociationProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.ModelProviders.AssociationProvider" /> 类的新实例以供继承的类实例使用。 此构造函数只能由继承的类调用。</summary>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.Direction">
      <summary>获取或设置关联的类型。</summary>
      <returns>关联的类型。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.ForeignKeyNames">
      <summary>获取或设置组成此关联的外键的名称。</summary>
      <returns>组成此关联的外键的名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.FromColumn">
      <summary>获取或设置关联的源列。</summary>
      <returns>关联的源列。</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.AssociationProvider.GetSortExpression(System.Web.DynamicData.ModelProviders.ColumnProvider)">
      <summary>返回关联表示的列的排序表达式。</summary>
      <returns>如果 <see cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsSortable" /> 返回 true，则为关联表示的列的排序表达式；否则为 null。</returns>
      <param name="sortColumn">要根据其排序实体的列。</param>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.IsPrimaryKeyInThisTable">
      <summary>获取或设置一个值，该值指示主键的 From 列部分是否在表中。</summary>
      <returns>如果主键的 From 列部分在表中，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.ToColumn">
      <summary>获取或设置关联的目标列。</summary>
      <returns>关联的目标列。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.AssociationProvider.ToTable">
      <summary>获取关联的目标表。</summary>
      <returns>关联的目标表。</returns>
    </member>
    <member name="T:System.Web.DynamicData.ModelProviders.ColumnProvider">
      <summary>为列提供程序提供基类。</summary>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.ColumnProvider.#ctor(System.Web.DynamicData.ModelProviders.TableProvider)">
      <summary>初始化该类供继承的类实例使用。 此构造函数只能由继承的类调用。</summary>
      <param name="table">包含列的表。</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.ColumnProvider.AddDefaultAttributes(System.Web.DynamicData.ModelProviders.ColumnProvider,System.ComponentModel.AttributeCollection)">
      <summary>添加默认特性。</summary>
      <returns>特性集合。</returns>
      <param name="columnProvider">列提供程序。</param>
      <param name="attributes">特性集合。</param>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Association">
      <summary>获取列所表示的表的提供程序。</summary>
      <returns>列所表示的表的提供程序（如果存在）；否则为 null。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Attributes">
      <summary>获取为此提供程序所表示的列定义的特性。</summary>
      <returns>特性集合。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.ColumnType">
      <summary>获取或设置列的类型。</summary>
      <returns>列的类型。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.EntityTypeProperty">
      <summary>获取或设置在实体类型中表示该列的属性的 <see cref="T:System.Reflection.PropertyInfo" /> 值。</summary>
      <returns>在实体类型中表示该列的属性的 <see cref="T:System.Reflection.PropertyInfo" /> 值。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsCustomProperty">
      <summary>获取或设置一个值，该值指示列是否为模型的数据上下文之外的其他属性。</summary>
      <returns>如果列是模型的数据上下文之外的其他属性，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsForeignKeyComponent">
      <summary>获取或设置一个值，该值指示列是否为外键的一部分。</summary>
      <returns>如果列为外键的一部分，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsGenerated">
      <summary>获取或设置一个值，该值指示列值是否是由数据库自动生成的。</summary>
      <returns>如果列值是由数据库自动生成的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsPrimaryKey">
      <summary>获取或设置一个值，该值指示列是否为表的主键的一部分。</summary>
      <returns>如果列是表的主键的一部分，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsReadOnly">
      <summary>获取一个值，该值指示列是否为只读。</summary>
      <returns>如果列为 read-only，则为 true ；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsSortable">
      <summary>在派生类中重写时，获取或设置一个值，该值指示数据模型是否支持按此列排序表。</summary>
      <returns>如果数据模型支持按此列排序表，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.MaxLength">
      <summary>获取或设置此列所允许的最大长度。</summary>
      <returns>此列所允许的最大长度。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Name">
      <summary>获取或设置列名称。</summary>
      <returns>列的名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Nullable">
      <summary>获取或设置一个值，该值指示列是否接受 null 值。</summary>
      <returns>如果列接受 null 值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Table">
      <summary>获取或设置列所属的表。</summary>
      <returns>列所属的表。</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.ColumnProvider.ToString">
      <summary>返回 <see cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Name" /> 属性。</summary>
      <returns>
        <see cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Name" /> 属性；或者，如果 <see cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Name" /> 属性为 null，则为对象的字符串表示形式。</returns>
    </member>
    <member name="T:System.Web.DynamicData.ModelProviders.DataModelProvider">
      <summary>为动态数据模型提供程序提供基类。</summary>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.DataModelProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.DynamicData.ModelProviders.DataModelProvider" /> 类的新实例以供继承的类实例使用。 此构造函数只能由继承的类调用。</summary>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.DataModelProvider.ContextType">
      <summary>获取数据上下文的类型。</summary>
      <returns>数据上下文的类型。</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.DataModelProvider.CreateContext">
      <summary>在派生类中重写时，创建数据上下文的一个实例。</summary>
      <returns>数据上下文的实例。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.DataModelProvider.Tables">
      <summary>在派生类中重写时，获取由数据模型公开的表的列表。</summary>
      <returns>由数据模型公开的表的列表。</returns>
    </member>
    <member name="T:System.Web.DynamicData.ModelProviders.TableProvider">
      <summary>为动态数据表提供程序提供基类。</summary>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.#ctor(System.Web.DynamicData.ModelProviders.DataModelProvider)">
      <summary>初始化 <see cref="T:System.Web.DynamicData.ModelProviders.TableProvider" /> 类的新实例以供继承的类实例使用。 此构造函数只能由继承的类调用。</summary>
      <param name="model">表所属的模型。</param>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.Attributes">
      <summary>获取为此提供程序表示的表定义的特性。</summary>
      <returns>特性集合。</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanDelete(System.Security.Principal.IPrincipal)">
      <summary>获取一个值，该值指示是否允许用户从表中删除项。</summary>
      <returns>如果允许用户从表中删除项，则为 true；否则为 false。</returns>
      <param name="principal">用户。</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanInsert(System.Security.Principal.IPrincipal)">
      <summary>获取一个值，该值指示是否允许用户向表中插入项。</summary>
      <returns>如果允许用户向表中插入项，则为 true；否则为 false。</returns>
      <param name="principal">用户。</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanRead(System.Security.Principal.IPrincipal)">
      <summary>获取一个值，该值指示是否允许用户读取表中的项。</summary>
      <returns>如果允许用户读取表中的项，则为 true；否则为 false。</returns>
      <param name="principal">用户。</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.CanUpdate(System.Security.Principal.IPrincipal)">
      <summary>获取一个值，该值指示是否允许用户更新表中的项。</summary>
      <returns>如果允许用户更新表中的项，则为 true；否则为 false。</returns>
      <param name="principal">用户。</param>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.Columns">
      <summary>当在派生类中重写时，获取此表中的列的集合。</summary>
      <returns>此表中的列的集合。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.DataContextPropertyName">
      <summary>从数据上下文获取表的名称。</summary>
      <returns>表的名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.DataModel">
      <summary>获取 <see cref="T:System.Web.DynamicData.ModelProviders.DataModelProvider" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.DynamicData.ModelProviders.DataModelProvider" /> 对象。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.EntityType">
      <summary>获取或设置表示表的类型。</summary>
      <returns>表示表的类型。</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.EvaluateForeignKey(System.Object,System.String)">
      <summary>返回指定行的外键的值。</summary>
      <returns>外键。</returns>
      <param name="row">要获取其外键值的行。</param>
      <param name="foreignKeyName">外键列的名称。</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.GetQuery(System.Object)">
      <summary>在派生类中重写时，返回 <see cref="T:System.Linq.IQueryable" /> 对象，而该对象则返回表的元素。</summary>
      <returns>一个 <see cref="T:System.Linq.IQueryable" /> 对象，该对象返回表的元素。</returns>
      <param name="context">表的数据上下文。</param>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.GetTypeDescriptor">
      <summary>获取表的类型说明符。</summary>
      <returns>表的类型说明符。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.Name">
      <summary>获取表的名称。</summary>
      <returns>表的名称。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.ParentEntityType">
      <summary>获取父类型。</summary>
      <returns>如果实体有父级，则为父类型；否则为 <see cref="T:System.Data.Metadata.Edm.EntityType" /> 类的实例。</returns>
    </member>
    <member name="P:System.Web.DynamicData.ModelProviders.TableProvider.RootEntityType">
      <summary>获取此实体的根类型。</summary>
      <returns>如果实体有父级，则为此实体的根类型；否则为 <see cref="T:System.Data.Metadata.Edm.EntityType" /> 类的实例。</returns>
    </member>
    <member name="M:System.Web.DynamicData.ModelProviders.TableProvider.ToString">
      <summary>返回 <see cref="T:System.Web.DynamicData.ModelProviders.TableProvider" /> 实例的 <see cref="P:System.Web.DynamicData.ModelProviders.TableProvider.Name" /> 属性。</summary>
      <returns>
        <see cref="T:System.Web.DynamicData.ModelProviders.TableProvider" /> 实例的名称。 如果 <see cref="P:System.Web.DynamicData.ModelProviders.TableProvider.Name" /> 属性为 null，则返回基类 Name 属性。</returns>
    </member>
    <member name="T:System.Web.UI.DataControlExtensions">
      <summary>提供 ASP.NET 动态数据所使用的扩展方法。</summary>
    </member>
    <member name="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type)">
      <summary>为指定数据控件启用动态数据行为。</summary>
      <param name="control">要为其启用动态数据行为的数据控件。</param>
      <param name="entityType">要用于元数据的类型。</param>
    </member>
    <member name="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>为指定数据控件启用动态数据行为。</summary>
      <param name="control">要为其启用动态数据行为的数据控件。</param>
      <param name="entityType">要用于元数据的类型。</param>
      <param name="defaultValues">要用于 <see cref="T:System.Web.UI.INamingContainer" /> 对象的默认值。</param>
    </member>
    <member name="M:System.Web.UI.DataControlExtensions.EnableDynamicData(System.Web.UI.INamingContainer,System.Type,System.Object)">
      <summary>为指定数据控件启用动态数据行为。</summary>
      <param name="control">要为其启用动态数据行为的数据控件。</param>
      <param name="entityType">表示要显示的表的类型。</param>
      <param name="defaults">要用于 <see cref="T:System.Web.UI.INamingContainer" /> 对象的默认值。</param>
    </member>
  </members>
</doc>