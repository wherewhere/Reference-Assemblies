<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.DirectoryServices.Protocols</name>
  </assembly>
  <members>
    <member name="T:System.DirectoryServices.Protocols.AddRequest">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.AddRequest" /> 类将项添加到目录中。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.AddRequest.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.AddRequest.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.AddRequest" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.AddRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttribute[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.AddRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttribute[])" /> 构造函数使用指定的识别名和特性创建 <see cref="T:System.DirectoryServices.Protocols.AddRequest" /> 类的实例。</summary>
      <param name="distinguishedName">目录中新对象的 <paramref name="distinguishedName" />。</param>
      <param name="attributes">一个由 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象组成的数组，其中包含该对象的特性。 此参数可以为 null。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.AddRequest.#ctor(System.String,System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.AddRequest.#ctor(System.String,System.String)" /> 构造函数使用指定的 <paramref name="distinguishedName" /> 和对象类创建 <see cref="T:System.DirectoryServices.Protocols.AddRequest" /> 类的实例。</summary>
      <param name="distinguishedName">目录中新对象的 <paramref name="distinguishedName" />。</param>
      <param name="objectClass">此对象的对象类。 如果此参数为 null，则引发异常。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectClass" /> 参数包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.AddRequest.Attributes">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.AddRequest.Attributes" /> 属性包含该对象的特性-值对的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" />。</summary>
      <returns>该对象的特性-值对的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" />。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.AddRequest.DistinguishedName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.AddRequest.DistinguishedName" /> 属性包含对象的识别名。</summary>
      <returns>对象的识别名。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.AddRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.AddRequest.ToXmlNode(System.Xml.XmlDocument)" /> 方法从指定的 <see cref="T:System.Xml.XmlDocument" /> 对象创建 XML 节点。</summary>
      <returns>所产生的 <see cref="T:System.Xml.XmlElement" /> 对象。</returns>
      <param name="doc">
        <see cref="T:System.Xml.XmlDocument" /> 对象。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.AddResponse">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> 将 <see cref="T:System.DirectoryServices.Protocols.AddResponse" /> 类作为对 <see cref="T:System.DirectoryServices.Protocols.AddRequest" /> 的响应返回。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.AsqRequestControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.AsqRequestControl" /> 类创建特性范围查询 (ASQ) 控件。 此控件与搜索请求一起用于强制基于具有特定 DN 值的特性执行查询。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.AsqRequestControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.AsqRequestControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.AsqRequestControl" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.AsqRequestControl.#ctor(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.AsqRequestControl.#ctor(System.String)" /> 构造函数使用指定的特性名创建 <see cref="T:System.DirectoryServices.Protocols.AsqRequestControl" /> 类的实例。</summary>
      <param name="attributeName">查询所基于的特性名。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.AsqRequestControl.AttributeName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.AsqRequestControl.AttributeName" /> 属性获取或设置搜索查询所基于的特性名称。</summary>
      <returns>搜索查询所基于的特性名。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.AsqRequestControl.GetValue">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.AsqRequestControl.GetValue" /> 方法返回 <see cref="T:System.DirectoryServices.Protocols.AsqRequestControl" /> 的二进制表示形式。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.AsqRequestControl" /> 的二进制表示形式。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.AsqResponseControl">
      <summary>在 <see cref="T:System.DirectoryServices.Protocols.SearchResponse" /> 对象中将 <see cref="T:System.DirectoryServices.Protocols.AsqResponseControl" /> 类作为对 <see cref="T:System.DirectoryServices.Protocols.AsqRequestControl" /> 查询的响应返回。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.AsqResponseControl.Result">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.AsqResponseControl.Result" /> 属性获取具有结果数据的 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 对象。</summary>
      <returns>一个具有结果数据的 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 对象。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.AuthType">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.AuthType" /> 枚举用于指定将在该连接上使用的身份验证方法。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Anonymous">
      <summary>指示应不传递凭据而进行连接。 该值等于 0。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Basic">
      <summary>指示应在该连接上使用基本身份验证。 该值等于 1。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Digest">
      <summary>指示应在该连接上使用简要访问身份验证。 该值等于 4。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Dpa">
      <summary>指示应在该连接上使用分布式密码身份验证 (DPA)。 该值等于 6。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.External">
      <summary>指示将使用外部方法对该连接进行身份验证。 该值等于 8。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Kerberos">
      <summary>指示应在该连接上使用 Kerberos 身份验证。 该值等于 9。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Msn">
      <summary>指示已使用“Microsoft 网络身份验证服务”对其进行了身份验证。 该值等于 7。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Negotiate">
      <summary>指示应在该连接上使用 Microsoft 协商身份验证。 该值等于 2。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Ntlm">
      <summary>指示应在该连接上使用 Windows NT 质询/响应 (NTLM) 身份验证。 该值等于 3。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.AuthType.Sicily">
      <summary>指示将使用协商机制 (Sicily) 选择 MSN、DPA 或 NTLM。这应该仅用于 LDAPv2 服务器。 该值等于 5。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.BerConversionException">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.BerConversionException" /> 类是一个异常，当使用 <see cref="T:System.DirectoryServices.Protocols.BerConverter" /> 对象转换数据时，将引发该异常。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.BerConversionException.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.BerConversionException.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.BerConversionException" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.BerConversionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.BerConversionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 构造函数使用指定序列化数据和流上下文数据创建 <see cref="T:System.DirectoryServices.Protocols.BerConversionException" /> 类的实例。</summary>
      <param name="info">有关引发的异常的序列化对象数据。</param>
      <param name="context">有关源或目标的上下文数据。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.BerConversionException.#ctor(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.BerConversionException.#ctor(System.String)" /> 构造函数使用指定的消息创建 <see cref="T:System.DirectoryServices.Protocols.BerConversionException" /> 类的实例。</summary>
      <param name="message">当发生异常时向客户端显示的消息。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.BerConversionException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.BerConversionException.#ctor(System.String,System.Exception)" /> 构造函数使用指定的消息和内部异常创建 <see cref="T:System.DirectoryServices.Protocols.BerConversionException" /> 类的实例。</summary>
      <param name="message">当引发异常时显示的消息。</param>
      <param name="inner">引发异常的 <see cref="P:System.Exception.InnerException" />（如果有）。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.BerConverter">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.BerConverter" /> 类使用基本编码规则 (BER) 对结构化数据进行编码和解码。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])" /> 方法使用 BER 对数据的二进制表示形式进行解码，以检索结构化数据。</summary>
      <returns>已解码的数据。</returns>
      <param name="format">格式字符串。</param>
      <param name="value">BER 数据组成的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> 参数包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="format" /> 参数包含未定义的字符。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.BerConversionException">基础解码失败。 解码规则包括以下内容。 代码 对应的结果 '{' '}' '[' ']' 'n' 'x' 无对应的结果 'i' 'e' int 'b' bool 'a' string 'O' byte[] 'B' 包含位字符串的 byte[] 'v' string[] 'V' byte[][]</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])" /> 方法使用 BER 对结构化数据进行编码，以检索数据的二进制表示形式。</summary>
      <returns>BER 编码的数据组成的数组。</returns>
      <param name="format">格式字符串。</param>
      <param name="value">格式化数据组成的数组。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.CompareRequest">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.CompareRequest" /> 类确定目录对象是否容纳特性的指定值。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CompareRequest.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.CompareRequest.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.CompareRequest" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttribute)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttribute)" /> 构造函数使用指定的识别名和特性创建 <see cref="T:System.DirectoryServices.Protocols.CompareRequest" /> 类的实例。</summary>
      <param name="distinguishedName">要比较的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象的识别名。</param>
      <param name="assertion">
        <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assertion" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assertion" /> 必须恰好包含一个值。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.String,System.Byte[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.String,System.Byte[])" /> 构造函数使用指定的识别名、特性和特性值创建 <see cref="T:System.DirectoryServices.Protocols.CompareRequest" /> 的实例。</summary>
      <param name="distinguishedName">要比较的对象的识别名。</param>
      <param name="attributeName">要比较的特性的名称。</param>
      <param name="value">要比较的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeName" /> 或 <paramref name="value" /> 包含一个 null引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.String,System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.String,System.String)" /> 构造函数使用指定的识别名、特性和特性值创建 <see cref="T:System.DirectoryServices.Protocols.CompareRequest" /> 类的实例。</summary>
      <param name="distinguishedName">要比较的对象的识别名。</param>
      <param name="attributeName">要比较的特性的名称。</param>
      <param name="value">要比较的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeName" /> 或 <paramref name="value" /> 包含一个 null引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.String,System.Uri)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.CompareRequest.#ctor(System.String,System.String,System.Uri)" /> 构造函数使用指定的识别名、特性和特性值创建 <see cref="T:System.DirectoryServices.Protocols.CompareRequest" /> 类的实例。</summary>
      <param name="distinguishedName">要比较的对象的识别名。</param>
      <param name="attributeName">要比较的特性的名称。</param>
      <param name="value">要比较的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeName" /> 或 <paramref name="value" /> 包含一个 null引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.CompareRequest.Assertion">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.CompareRequest.Assertion" /> 属性获取用于比较的特性/值对。</summary>
      <returns>用于比较的特性/值对。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.CompareRequest.DistinguishedName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.CompareRequest.DistinguishedName" /> 属性获取或设置要比较的对象的识别名。</summary>
      <returns>要比较的对象的识别名。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CompareRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.CompareRequest.ToXmlNode(System.Xml.XmlDocument)" /> 方法从指定的 <see cref="T:System.Xml.XmlDocument" /> 对象创建 XML 节点。</summary>
      <returns>所产生的 <see cref="T:System.Xml.XmlElement" /> 对象。</returns>
      <param name="doc">
        <see cref="T:System.Xml.XmlDocument" /> 对象。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象必须恰好包含一个值。</exception>
    </member>
    <member name="T:System.DirectoryServices.Protocols.CompareResponse">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> 将 <see cref="T:System.DirectoryServices.Protocols.CompareResponse" /> 类作为对 <see cref="T:System.DirectoryServices.Protocols.CompareRequest" /> 的响应返回。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.CrossDomainMoveControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.CrossDomainMoveControl" /> 类与 <see cref="T:System.DirectoryServices.Protocols.ModifyDNRequest" /> 对象一起使用以将 LDAP 对象从一个域移到另一个域。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.CrossDomainMoveControl" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.CrossDomainMoveControl.#ctor(System.String)" /> 构造函数使用指定的目标域创建 <see cref="T:System.DirectoryServices.Protocols.CrossDomainMoveControl" /> 类的实例。</summary>
      <param name="targetDomainController">目标域控制器的 DNS 名。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.CrossDomainMoveControl.GetValue">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.CrossDomainMoveControl.GetValue" /> 方法返回 <see cref="T:System.DirectoryServices.Protocols.CrossDomainMoveControl" /> 的二进制表示形式。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.CrossDomainMoveControl" /> 的二进制表示形式。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.CrossDomainMoveControl.TargetDomainController">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.CrossDomainMoveControl.TargetDomainController" /> 属性获取或设置目标域控制器 (DC) 的 DNS 名。</summary>
      <returns>目标 DC 的 DNS 名。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DeleteRequest">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DeleteRequest" /> 类从目录中删除项。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DeleteRequest.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DeleteRequest.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DeleteRequest" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DeleteRequest.#ctor(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DeleteRequest.#ctor(System.String)" /> 构造函数使用指定的识别名创建 <see cref="T:System.DirectoryServices.Protocols.DeleteRequest" /> 类的实例。</summary>
      <param name="distinguishedName">要删除的对象的识别名。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DeleteRequest.DistinguishedName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DeleteRequest.DistinguishedName" /> 属性获取或设置要删除的对象的识别名。</summary>
      <returns>要删除的对象的识别名。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DeleteRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DeleteRequest.ToXmlNode(System.Xml.XmlDocument)" /> 方法从指定的 <see cref="T:System.Xml.XmlDocument" /> 对象创建 XML 节点。</summary>
      <returns>所产生的 <see cref="T:System.Xml.XmlElement" /> 对象。</returns>
      <param name="doc">
        <see cref="T:System.Xml.XmlDocument" /> 对象。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DeleteResponse">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> 将 <see cref="T:System.DirectoryServices.Protocols.DeleteResponse" /> 类作为对 <see cref="T:System.DirectoryServices.Protocols.DeleteRequest" /> 的响应返回。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DereferenceAlias">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DereferenceAlias" /> 枚举指定取消引用别名的进程。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DereferenceAlias.Always">
      <summary>在搜索次级和定位搜索的基对象时取消引用别名。 该值等于 3。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DereferenceAlias.FindingBaseObject">
      <summary>在定位基对象（而不是在搜索它的次级）时取消引用别名。 该值等于 2。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DereferenceAlias.InSearching">
      <summary>在搜索基对象的次级（而不是在定位基本身）时取消引用别名。 该值等于 1。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DereferenceAlias.Never">
      <summary>不取消引用别名。 该值等于 0。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DereferenceConnectionCallback">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DereferenceConnectionCallback" /> 委托取消引用不再需要的连接。 很可能已通过成功调用 <see cref="T:System.DirectoryServices.Protocols.QueryForConnectionCallback" /> 或 <see cref="T:System.DirectoryServices.Protocols.NotifyOfNewConnectionCallback" /> 委托建立了该连接。</summary>
      <param name="primaryConnection">一个指定主连接的 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象。</param>
      <param name="connectionToDereference">一个指定要取消引用的连接的 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryAttribute">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 类使您可以访问特性值。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Byte[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Byte[])" /> 构造函数使用指定的特性名和值创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 类的实例。</summary>
      <param name="name">特性名称。</param>
      <param name="value">特性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="value" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Object[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Object[])" /> 构造函数使用指定的特性名和值创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 类的实例。</summary>
      <param name="name">特性名称。</param>
      <param name="values">该特性的值组成的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="value" /> 包含 null 引用（在 Visual Basic 中为 <paramref name="Nothing" />）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="values" /> 的元素类型不是字符串、byte[] 或 Uri。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.String)" /> 构造函数使用指定的特性名和值创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 类的实例。</summary>
      <param name="name">特性名称。</param>
      <param name="value">特性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="value" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Uri)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.#ctor(System.String,System.Uri)" /> 构造函数使用指定的特性名和值创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 类的实例。</summary>
      <param name="name">特性名称。</param>
      <param name="value">特性值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 或 <paramref name="value" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Byte[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Byte[])" /> 方法会向此特性添加指定值。</summary>
      <returns>已添加值处的索引。</returns>
      <param name="value">要添加的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Value" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.String)" /> 方法会向此特性添加指定值。</summary>
      <returns>已添加值处的索引。</returns>
      <param name="value">要添加的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Value" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Uri)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Add(System.Uri)" /> 方法会向此特性添加指定值。</summary>
      <returns>已添加值处的索引。</returns>
      <param name="value">要添加的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Value" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(System.Object[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.AddRange(System.Object[])" /> 方法将值数组添加到特性中。</summary>
      <param name="values">要添加的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="values" /> 不是 byte[][]、string[] 或 Uri[]。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Values" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Contains(System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Contains(System.Object)" /> 方法确定该特性是否包含指定的值。</summary>
      <returns>如果此特性包含该值，则为 true；否则为 false。</returns>
      <param name="value">要搜索的值。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(System.Object[],System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.CopyTo(System.Object[],System.Int32)" /> 方法将整个集合复制到一维数组中（从目标数组的指定索引处开始）。</summary>
      <param name="array">一个一维数组，它是从 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象复制的元素的目标。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，这是开始复制的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException">此异常会在下列任一情况下发生： <paramref name="array" /> 是多维的 <paramref name="index" /> 等于或大于长度<paramref name="array" /> 源 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 中的元素数目大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
      <exception cref="T:System.InvalidCastException">源 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 的类型无法自动转换为目标 <paramref name="array" /> 的类型。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(System.Type)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.GetValues(System.Type)" /> 方法返回指定类型的所有值。</summary>
      <returns>包含值的 <see cref="T:System.Object" /> 对象组成的数组。</returns>
      <param name="valuesType">一个 <see cref="T:System.Type" /> 对象，它指定要返回的值的类型。</param>
      <exception cref="T:System.NotSupportedException">值无法转换为 <paramref name="valuesType" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="valuesType" /> 必须是字符串或字节。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.IndexOf(System.Object)" /> 方法返回在 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 集合中指定的 <see cref="T:System.Object" /> 的第一个匹配项从零开始的索引。</summary>
      <returns>如果找到指定的 <see cref="T:System.Object" />，则为其索引值；否则为 -1。</returns>
      <param name="value">返回其值的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Byte[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Byte[])" /> 方法将指定的 <paramref name="value" /> 插入到 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 集合中的指定 <paramref name="index" /> 处。</summary>
      <param name="index">
        <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 集合中要插入 <paramref name="value" /> 处的索引。</param>
      <param name="value">要插入的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零，或者 index 大于 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象中的元素个数。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.String)" /> 方法将指定的 <paramref name="value" /> 插入到 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 集合中的指定 <paramref name="index" /> 处。</summary>
      <param name="index">
        <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 集合中要插入 <paramref name="value" /> 处的索引。</param>
      <param name="value">要插入的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零，或者 <paramref name="index" /> 大于 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象中的元素个数。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Uri)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Insert(System.Int32,System.Uri)" /> 方法将指定的 <paramref name="value" /> 插入到 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 集合中的指定 <paramref name="index" /> 处。</summary>
      <param name="index">
        <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 集合中要插入 <paramref name="value" /> 处的索引。</param>
      <param name="value">要插入的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零，或者 <paramref name="index" /> 大于 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象中的元素个数。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryAttribute.Item(System.Int32)">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryAttribute.Item(System.Int32)" /> 属性获取或设置位于指定索引处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</summary>
      <returns>位于指定索引处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</returns>
      <param name="index">在找到 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象处从零开始的索引值。</param>
      <exception cref="T:System.ArgumentException">要设置的 <paramref name="value" /> 为无效类型。 有效类型为 byte[]、字符串或 URI。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryAttribute.Name">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryAttribute.Name" /> 属性包含特性名称。</summary>
      <returns>特性名称。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.OnValidate(System.Object)" /> 方法确认 <paramref name="value" /> 是否为 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</summary>
      <param name="value">要计算的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 必须是字符串、byte[] 或 URI。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttribute.Remove(System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttribute.Remove(System.Object)" /> 方法从特性列表中移除指定 <paramref name="value" /> 的第一个匹配项。</summary>
      <param name="value">要移除的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> 类包含 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象的集合。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Add(System.DirectoryServices.Protocols.DirectoryAttribute)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Add(System.DirectoryServices.Protocols.DirectoryAttribute)" /> 方法向集合中添加 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</summary>
      <returns>集合中 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 的添加位置处的从零开始的索引。</returns>
      <param name="attribute">要添加的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="attribute" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttribute[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttribute[])" /> 方法可向集合中添加 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象数组。</summary>
      <param name="attributes">要添加到集合中的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 组成的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributes" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">一个 <paramref name="attributes" /> 成员为 null 引用（在 Visual Basic 中为 Nothing），或者一个 <paramref name="attributes" /> 成员指定修改操作而不是添加操作。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttributeCollection)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttributeCollection)" /> 方法可向当前集合添加一个 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> 对象。</summary>
      <param name="attributeCollection">要添加到该集合中的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeCollection" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Contains(System.DirectoryServices.Protocols.DirectoryAttribute)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Contains(System.DirectoryServices.Protocols.DirectoryAttribute)" /> 方法确定该 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> 对象是否包含指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</summary>
      <returns>如果指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 在集合中，则为 true；否则为 false。</returns>
      <param name="value">要搜索的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryAttribute[],System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryAttribute[],System.Int32)" /> 方法将整个集合复制到一维数组中（从目标数组的指定索引处开始）。</summary>
      <param name="array">一个一维数组，它是从 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> 对象复制的元素的目标。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，这是开始复制的位置。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.IndexOf(System.DirectoryServices.Protocols.DirectoryAttribute)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.IndexOf(System.DirectoryServices.Protocols.DirectoryAttribute)" />方法返回在<see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> 中指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象的第一个匹配项从零开始的索引。</summary>
      <returns>如果找到指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象，则为其索引值；否则为 -1。</returns>
      <param name="value">为其返回索引的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryAttribute)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryAttribute)" />方法将指定的<see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" />对象插入到位于指定 <paramref name="index" />处的<see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" />。</summary>
      <param name="index">集合中 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象插入处从零开始的索引点。</param>
      <param name="value">要插入到集合中的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 为 null 引用（在 Visual Basic 中为 Nothing），或者 <paramref name="value" /> 指定修改操作而不是添加操作。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零，或者 <paramref name="index" /> 大于 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeCollection" /> 对象中的元素个数。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Item(System.Int32)" /> 属性包含指定索引处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</summary>
      <returns>位于指定索引处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</returns>
      <param name="index">
        <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象的索引值。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.OnValidate(System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.OnValidate(System.Object)" /> 方法验证<paramref name="value" />是否为 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" />对象，或者指定添加操作。</summary>
      <param name="value">要计算的对象。</param>
      <exception cref="T:System.ArgumentException">此异常会在下列任一情况下发生： <paramref name="value" /> 为 null 引用（在 Visual Basic 中为 Nothing）。 <paramref name="value" /> 不是 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Remove(System.DirectoryServices.Protocols.DirectoryAttribute)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeCollection.Remove(System.DirectoryServices.Protocols.DirectoryAttribute)" /> 方法从集合中移除指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象的第一个匹配项。</summary>
      <param name="value">要移除的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryAttributeModification">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 类可用于修改 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 值。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModification.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModification.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 类的实例。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryAttributeModification.Operation">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryAttributeModification.Operation" /> 属性指定一个要执行的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeOperation" /> 修改。</summary>
      <returns>要执行的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeOperation" /> 修改。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> 类包含 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象的集合。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Add(System.DirectoryServices.Protocols.DirectoryAttributeModification)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Add(System.DirectoryServices.Protocols.DirectoryAttributeModification)" /> 方法向集合中添加 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象。</summary>
      <returns>集合中 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 的添加位置处的从零开始的索引。</returns>
      <param name="attribute">要相加的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="attribute" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttributeModification[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttributeModification[])" /> 方法可向集合中添加 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象数组。</summary>
      <param name="attributes">要添加到集合中的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributes" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributes" /> 的一个成员为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.AddRange(System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection)" /> 方法可向当前集合添加一个 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> 对象。</summary>
      <param name="attributeCollection">要添加到该集合的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> 集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeCollection" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Contains(System.DirectoryServices.Protocols.DirectoryAttributeModification)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Contains(System.DirectoryServices.Protocols.DirectoryAttributeModification)" /> 方法确定该 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> 对象是否包含指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象。</summary>
      <returns>如果指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 在集合中，则为 true；否则为 false。</returns>
      <param name="value">要搜索的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryAttributeModification[],System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryAttributeModification[],System.Int32)" /> 方法将整个集合复制到一维数组中（从目标数组的指定索引处开始）。</summary>
      <param name="array">一个一维数组，它是从 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> 对象复制的元素的目标。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，这是开始复制的位置。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.IndexOf(System.DirectoryServices.Protocols.DirectoryAttributeModification)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.IndexOf(System.DirectoryServices.Protocols.DirectoryAttributeModification)" /> 方法返回在 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> 中指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象的第一个匹配项从零开始的索引。</summary>
      <returns>如果找到指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象，则为其索引值；否则为 -1。</returns>
      <param name="value">为其返回索引的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> 对象。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryAttributeModification)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryAttributeModification)" />方法将<see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象插入 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" />集合中指定索引处。</summary>
      <param name="index">集合中 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象将插入处的从零开始的索引。</param>
      <param name="value">要插入的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零，或者 <paramref name="index" /> 大于 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> 对象中的元素个数。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Item(System.Int32)" /> 属性包含指定 <paramref name="index" /> 处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象。</summary>
      <returns>位于指定 <paramref name="index" /> 处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象。</returns>
      <param name="index">
        <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象的索引值。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.OnValidate(System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.OnValidate(System.Object)" /> 方法确认 <paramref name="value" /> 是否为 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象。</summary>
      <param name="value">要计算的对象。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Remove(System.DirectoryServices.Protocols.DirectoryAttributeModification)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection.Remove(System.DirectoryServices.Protocols.DirectoryAttributeModification)" /> 方法从集合中移除指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象的第一个匹配项。</summary>
      <param name="value">要移除的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryAttributeOperation">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeOperation" /> 枚举指定要在目录特性上执行的操作。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectoryAttributeOperation.Add">
      <summary>添加特性值。 该值等于 0。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectoryAttributeOperation.Delete">
      <summary>删除特性值。 该值等于 1。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectoryAttributeOperation.Replace">
      <summary>替换特性值。 该值等于 2。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryConnection">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryConnection" /> 类是一个抽象类，不能进行实例化。 使用 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 或 <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 类可连接到目录服务器。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryConnection.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.#ctor" /> 构造函数初始化 <see cref="T:System.DirectoryServices.Protocols.DirectoryConnection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> 属性指定要为进行身份验证而发送的一个或多个客户端证书。</summary>
      <returns>要为进行身份验证而发送的一个或多个客户端证书。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryConnection.Credential">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Credential" /> 属性指定用于连接对象的备用凭据。</summary>
      <returns>用于连接对象的备用凭据。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryConnection.Directory">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Directory" /> 属性指定应与其进行连接的域或服务器。</summary>
      <returns>应与其进行连接的域或服务器。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> 方法向服务器发送单个目录操作。</summary>
      <returns>一个 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象，它包含对请求操作的服务器响应。 如果服务器返回其他响应，则返回的响应对象可能不同于请求的对象。</returns>
      <param name="request">一个包含该请求的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryConnection.Timeout">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.Timeout" /> 属性包含在连接超时前的时间长度（以秒计算）。</summary>
      <returns>连接超时前的时间长度（以秒计算）。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 类指定各种 LDAP 操作的扩展数据。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControl.#ctor(System.String,System.Byte[],System.Boolean,System.Boolean)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryControl.#ctor(System.String,System.Byte[],System.Boolean,System.Boolean)" /> 构造函数使用“类型”、“值”、“关键性”和“服务器端”属性的指定值创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 类的实例。</summary>
      <param name="type">控件类型。</param>
      <param name="value">与控件关联的值。</param>
      <param name="isCritical">指定控件是否为关键控件。 默认值为 true。</param>
      <param name="serverSide">指定控件是否为服务器端控件。默认值为 true。 false 指定客户端控件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 参数为 null。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControl.GetValue">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryControl.GetValue" /> 方法返回与控件关联的数据。</summary>
      <returns>与控件关联的数据。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryControl.IsCritical">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryControl.IsCritical" /> 属性指定控件是否为关键控件。</summary>
      <returns>如果控件是关键控件，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryControl.ServerSide">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryControl.ServerSide" /> 属性指定此控件是否为服务器端控件。</summary>
      <returns>如果控件为服务器端控件，则为 true。 false 指定客户端控件。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryControl.Type">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryControl.Type" /> 属性包含控件的对象标识符 (OID)。</summary>
      <returns>控件的 OID。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryControlCollection">
      <summary>该 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 类管理 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象的集合。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Add(System.DirectoryServices.Protocols.DirectoryControl)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Add(System.DirectoryServices.Protocols.DirectoryControl)" /> 方法将新的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象添加到该集合中。</summary>
      <returns>已添加<see cref="T:System.DirectoryServices.Protocols.DirectoryControl" />对象的 的<see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" />索引。</returns>
      <param name="control">要添加的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.AddRange(System.DirectoryServices.Protocols.DirectoryControl[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.AddRange(System.DirectoryServices.Protocols.DirectoryControl[])" /> 方法可向集合中添加 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象数组。</summary>
      <param name="controls">要添加到集合中的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controls" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">数组的一个成员为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.AddRange(System.DirectoryServices.Protocols.DirectoryControlCollection)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.AddRange(System.DirectoryServices.Protocols.DirectoryControlCollection)" /> 方法可向当前集合添加一个 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 对象。</summary>
      <param name="controlCollection">要添加到该集合中的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="controlCollection" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Contains(System.DirectoryServices.Protocols.DirectoryControl)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Contains(System.DirectoryServices.Protocols.DirectoryControl)" /> 方法确定该 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 对象是否包含指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象。</summary>
      <returns>如果指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象属于该集合，则为 true；否则为 false。</returns>
      <param name="value">要搜索的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryControl[],System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryControl[],System.Int32)" /> 方法将整个集合复制到一维数组中（从目标数组的指定索引处开始）。</summary>
      <param name="array">一个一维数组，它是从 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 对象复制的元素的目标。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，这是开始复制的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多维的 - 或 - 源 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 中的元素数目大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
      <exception cref="T:System.InvalidCastException">源 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" />  的类型无法自动转换为目标 <paramref name="array" /> 的类型。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.IndexOf(System.DirectoryServices.Protocols.DirectoryControl)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.IndexOf(System.DirectoryServices.Protocols.DirectoryControl)" /> 方法返回在 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 中指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象的第一个匹配项从零开始的索引。</summary>
      <returns>如果找到指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象，则为其索引值；否则为 -1。</returns>
      <param name="value">为其返回索引的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryControl)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryControl)" />方法将指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" />对象插入到指定索引处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" />。</summary>
      <param name="index">集合中 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象插入处的索引。</param>
      <param name="value">要插入到集合中的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零，或者 <paramref name="index" /> 大于 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 对象中的元素个数。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 为只读，或者 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 具有固定大小。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryControlCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryControlCollection.Item(System.Int32)" /> 属性包含指定索引处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象。</summary>
      <returns>包含位于指定索引处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象。</returns>
      <param name="index">
        <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象的索引值。</param>
      <exception cref="T:System.ArgumentNullException">已尝试将该属性设置为 null。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.OnValidate(System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.OnValidate(System.Object)" /> 方法确认 <paramref name="value" /> 是否为 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象。</summary>
      <param name="value">要计算的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Remove(System.DirectoryServices.Protocols.DirectoryControl)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryControlCollection.Remove(System.DirectoryServices.Protocols.DirectoryControl)" /> 方法从集合中移除指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象的第一个匹配项。</summary>
      <param name="value">要移除的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象。</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 为只读，或者 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 具有固定大小。</exception>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryException">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryException" /> 类是一个抽象类，用作所有 <see cref="N:System.DirectoryServices.Protocols" /> 异常的基类。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryException.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryException.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryException" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 构造函数使用指定的序列化信息和流上下文信息创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryException" /> 类的实例。</summary>
      <param name="info">有关引发的异常的序列化对象数据。</param>
      <param name="context">关于来源和目标的上下文信息</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryException.#ctor(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryException.#ctor(System.String)" /> 构造函数使用指定的参数创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryException" /> 类的实例。</summary>
      <param name="message">当发生异常时向客户端显示的消息。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryException.#ctor(System.String,System.Exception)" /> 构造函数使用指定的参数创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryException" /> 类的实例。</summary>
      <param name="message">当发生异常时向客户端显示的消息。</param>
      <param name="inner">引发异常的 <see cref="P:System.Exception.InnerException" />（如果有）。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryIdentifier">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryIdentifier" /> 类是标识要连接到的目标的抽象类。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryIdentifier.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryIdentifier.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryIdentifier" /> 类的实例。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryNotificationControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryNotificationControl" /> 类是一个用于扩展的 LDAP 异步搜索功能的目录控件，可注册在对 Active Directory 域服务中的对象进行更改时要通知的客户端。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryNotificationControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryNotificationControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryNotificationControl" /> 类的实例。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryOperation">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryOperation" /> 类是抽象类，用作请求元素和响应元素的基础。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperation.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryOperation.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryOperation" /> 对象的实例。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryOperationException">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> 类是由 <see cref="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> 方法引发的异常，用于指示服务器返回了有错误的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse)" /> 构造函数使用指定的响应对象创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> 类的实例。</summary>
      <param name="response">服务器返回的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String)" /> 构造函数使用指定的响应对象和消息创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> 对象的实例。</summary>
      <param name="response">服务器返回的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象。</param>
      <param name="message">当发生异常时向客户端显示的消息。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String,System.Exception)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String,System.Exception)" /> 构造函数使用指定的响应对象、消息和内部异常创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> 类的实例。</summary>
      <param name="response">服务器返回的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象。</param>
      <param name="message">当发生异常时向客户端显示的消息。</param>
      <param name="inner">引发异常的 <see cref="P:System.Exception.InnerException" />（如果有）。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 构造函数使用指定的序列化信息和流上下文创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> 类的实例。</summary>
      <param name="info">序列化参数所需的数据。</param>
      <param name="context">与该参数相关联的序列化流的源和目标。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.String)" /> 构造函数使用指定的消息创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> 类的实例。</summary>
      <param name="message">当发生异常时向客户端显示的消息。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.#ctor(System.String,System.Exception)" /> 构造函数使用指定的消息和内部异常创建 <see cref="T:System.DirectoryServices.Protocols.DirectoryOperationException" /> 类的实例。</summary>
      <param name="message">当发生异常时向客户端显示的消息。</param>
      <param name="inner">引发异常的 <see cref="P:System.Exception.InnerException" />（如果有）。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法使用序列化参数所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="serializationInfo">序列化参数所需的数据。</param>
      <param name="streamingContext">与该参数相关联的序列化流的源和目标。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryOperationException.Response">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryOperationException.Response" /> 属性指定包含错误的服务器所返回的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象。</summary>
      <returns>包含错误的服务器所返回的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryRequest">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 类是与请求相关的类（如 <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> 类和 <see cref="T:System.DirectoryServices.Protocols.AddRequest" /> 类）的基类。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryRequest.Controls">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryRequest.Controls" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 对象。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 对象。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryRequest.RequestId">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryRequest.RequestId" /> 属性包含请求中指定的 <paramref name="requestID" />。</summary>
      <returns>请求中指定的 <paramref name="requestID" />。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirectoryRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryRequest.ToXmlNode(System.Xml.XmlDocument)" /> 方法从指定的 <see cref="T:System.Xml.XmlDocument" /> 对象创建 XML 节点。</summary>
      <returns>创建的 <see cref="T:System.Xml.XmlElement" />。</returns>
      <param name="doc">要表示为 XML 元素的 <see cref="T:System.Xml.XmlDocument" />。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectoryResponse">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 类与 <see cref="T:System.DirectoryServices.Protocols.SearchResponse" /> 和 <see cref="T:System.DirectoryServices.Protocols.AddResponse" /> 类相似，是请求响应类的基类。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryResponse.Controls">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryResponse.Controls" /> 属性包含服务器返回的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象组成的数组。</summary>
      <returns>服务器返回的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象组成的数组。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryResponse.ErrorMessage">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryResponse.ErrorMessage" /> 属性包含此操作的错误信息（如果有）。</summary>
      <returns>此操作的错误信息（如果有）。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryResponse.MatchedDN">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryResponse.MatchedDN" /> 属性包含服务器返回的匹配识别名。</summary>
      <returns>服务器返回的匹配识别名。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryResponse.Referral">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryResponse.Referral" /> 属性包含服务器检索。</summary>
      <returns>服务器检索。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryResponse.RequestId">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryResponse.RequestId" /> 属性包含请求标识符。</summary>
      <returns>请求标识符。</returns>
      <exception cref="T:System.NotSupportedException">用户已尝试设置属性值。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirectoryResponse.ResultCode">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirectoryResponse.ResultCode" /> 属性包含操作的结果代码。</summary>
      <returns>操作的结果代码。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirectorySynchronizationOptions">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirectorySynchronizationOptions" /> 枚举指定 <see cref="T:System.DirectoryServices.Protocols.DirSyncRequestControl" /> 对象中的搜索行为。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectorySynchronizationOptions.IncrementalValues">
      <summary>如果使用此选项，将仅返回更改后的值。 如果不使用此选项，则当值发生更改时，会返回多值特性中的所有值（其数量不能超过服务器指定的限制）。 该值等于 2147483648 或 0x80000000。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectorySynchronizationOptions.None">
      <summary>不使用选项。 该值等于 0 或 0x0。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectorySynchronizationOptions.ObjectSecurity">
      <summary>如果使用此选项，调用方无需权限，但仅能查看调用方可访问的对象和特性。 如果不使用此选项，调用方必须具有复制更改权限。 该值等于 1 或 0x1。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectorySynchronizationOptions.ParentsFirst">
      <summary>如果父级可能会在复制流中出现的时间靠后，在子级之前返回父级。 该值等于 2048 或 0x800。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DirectorySynchronizationOptions.PublicDataOnly">
      <summary>不在搜索结果中返回私有数据。 该值等于 8192 或 0x2000。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirSyncRequestControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirSyncRequestControl" /> 类是一种目录控件，它允许应用程序搜索目录，以查找自先前状态以来发生了更改的对象。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DirSyncRequestControl" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor(System.Byte[])" /> 构造函数使用指定的参数创建 <see cref="T:System.DirectoryServices.Protocols.DirSyncRequestControl" /> 类的实例。</summary>
      <param name="cookie">服务器使用的一种不透明结构。 在每一个 <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> 过程中，目录都会更新该结构，使得控件可以增量方式从目录中读取更改。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor(System.Byte[],System.DirectoryServices.Protocols.DirectorySynchronizationOptions)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor(System.Byte[],System.DirectoryServices.Protocols.DirectorySynchronizationOptions)" /> 构造函数使用指定的参数创建 <see cref="T:System.DirectoryServices.Protocols.DirSyncRequestControl" /> 类的实例。</summary>
      <param name="cookie">服务器使用的一种不透明结构。 在每一个 <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> 过程中，目录都会更新该结构，使得控件可以增量方式从目录中读取更改。</param>
      <param name="option">指定搜索的行为。 此参数可以是零，也可以是一或多个 <see cref="T:System.DirectoryServices.Protocols.DirectorySynchronizationOptions" /> 值的组合。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor(System.Byte[],System.DirectoryServices.Protocols.DirectorySynchronizationOptions,System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirSyncRequestControl.#ctor(System.Byte[],System.DirectoryServices.Protocols.DirectorySynchronizationOptions,System.Int32)" /> 构造函数使用指定的参数创建 <see cref="T:System.DirectoryServices.Protocols.DirSyncRequestControl" /> 类的实例。</summary>
      <param name="cookie">服务器使用的一种不透明结构。 在每一个 <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> 过程中，目录都会更新该结构，使得控件可以增量方式从目录中读取更改。</param>
      <param name="option">指定搜索的行为。 此参数可以是零，也可以是一或多个 <see cref="T:System.DirectoryServices.Protocols.DirectorySynchronizationOptions" /> 值的组合。</param>
      <param name="attributeCount">要返回的特性的最大数目。 默认值为 1048576。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirSyncRequestControl.AttributeCount">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirSyncRequestControl.AttributeCount" /> 属性指定要返回的特性的最大数目。</summary>
      <returns>要返回的特性的最大数目。</returns>
      <exception cref="T:System.ArgumentException">尝试设置小于零的值。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirSyncRequestControl.Cookie">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirSyncRequestControl.Cookie" /> 属性包含服务器使用的一种不透明结构。</summary>
      <returns>服务器使用的一种不透明结构。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DirSyncRequestControl.GetValue">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirSyncRequestControl.GetValue" /> 方法返回与此控件关联的数据。</summary>
      <returns>与此控件关联的数据。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirSyncRequestControl.Option">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirSyncRequestControl.Option" /> 属性指定搜索的行为。</summary>
      <returns>搜索的行为。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DirSyncResponseControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DirSyncResponseControl" /> 类是用于将 DirSyncRequest 信息从服务器传送到客户端的目录控件。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirSyncResponseControl.Cookie">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirSyncResponseControl.Cookie" /> 属性包含由目录返回的不透明结构。</summary>
      <returns>由目录返回的不透明结构。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirSyncResponseControl.MoreData">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirSyncResponseControl.MoreData" /> 属性指定是否有更多要返回的数据。</summary>
      <returns>如果存在更多数据，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DirSyncResponseControl.ResultSize">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DirSyncResponseControl.ResultSize" /> 属性指定结果的大小。</summary>
      <returns>结果的大小。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DomainScopeControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DomainScopeControl" /> 类是一个目录控件，用于指示 LDAP 服务器在完成请求时不生成检索。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DomainScopeControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DomainScopeControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DomainScopeControl" /> 类的实例。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlAuthRequest">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DsmlAuthRequest" /> 类指示按 <see cref="P:System.DirectoryServices.Protocols.DsmlAuthRequest.Principal" /> 属性所标识的安全主体执行请求的方式来解释对请求的访问控制。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlAuthRequest.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlAuthRequest.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DsmlAuthRequest" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlAuthRequest.#ctor(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlAuthRequest.#ctor(System.String)" /> 构造函数使用指定的参数创建 <see cref="T:System.DirectoryServices.Protocols.DsmlAuthRequest" /> 类的实例。</summary>
      <param name="principal">安全主体。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlAuthRequest.Principal">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlAuthRequest.Principal" /> 属性包含安全主体。</summary>
      <returns>安全主体。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlAuthRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlAuthRequest.ToXmlNode(System.Xml.XmlDocument)" /> 方法将 <see cref="T:System.Xml.XmlDocument" /> 对象转换为其 DSML v2 XML 表示形式。</summary>
      <returns>转换的 <see cref="T:System.Xml.XmlElement" /> 对象。</returns>
      <param name="doc">
        <see cref="T:System.Xml.XmlDocument" /> 对象。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlAuthResponse">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> 将 <see cref="T:System.DirectoryServices.Protocols.DsmlAuthResponse" /> 类作为对 <see cref="T:System.DirectoryServices.Protocols.DsmlAuthRequest" /> 的响应返回。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> 类标识 HTTP 服务器。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier.#ctor(System.Uri)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier.#ctor(System.Uri)" /> 构造函数使用指定的参数创建 <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> 类的实例。</summary>
      <param name="serverUri">一个表示为 <see cref="T:System.Uri" /> 对象的服务器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverUri" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serverUri" /> 方案既不是 http 也不是 https。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier.ServerUri">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier.ServerUri" /> 属性包含该对象标识的服务器的 <see cref="T:System.Uri" />。</summary>
      <returns>该对象标识的服务器的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlDocument">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DsmlDocument" /> 类是构造或操作 DSML 文档的抽象类。 它是 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 和 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 的基类。 <see cref="T:System.DirectoryServices.Protocols.DsmlDocument" /> 支持集合和索引。 集合中的每一项都是从 <see cref="T:System.DirectoryServices.Protocols.DirectoryOperation" /> 派生的对象。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlDocument.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlDocument.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DsmlDocument" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlDocument.ToXml">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlDocument.ToXml" /> 方法将此 <see cref="T:System.DirectoryServices.Protocols.DsmlDocument" /> 对象转换为 <see cref="T:System.Xml.XmlDocument" /> 对象。</summary>
      <returns>转换的 <see cref="T:System.Xml.XmlDocument" /> 对象。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlDocumentProcessing">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DsmlDocumentProcessing" /> 枚举指定 DSML 文档的处理方法。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DsmlDocumentProcessing.Parallel">
      <summary>并行处理。值等于 1。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DsmlDocumentProcessing.Sequential">
      <summary>按顺序。值等于 0。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlErrorProcessing">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DsmlErrorProcessing" /> 枚举指定出错时如何继续。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DsmlErrorProcessing.Exit">
      <summary>退出。 值等于 1。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DsmlErrorProcessing.Resume">
      <summary>继续。 值等于 0。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlErrorResponse">
      <summary>当出错时，由服务器生成 <see cref="T:System.DirectoryServices.Protocols.DsmlErrorResponse" /> 类。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Controls">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Controls" /> 属性不适用于 DSML &lt;errorResponse&gt;。</summary>
      <returns>不适用于 DSML &lt;errorResponse&gt;。</returns>
      <exception cref="T:System.NotSupportedException">此属性对 DSML 错误响应无效。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Detail">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Detail" /> 属性包含 errorResponse 的 &lt;detail&gt; 元素的内容（如果有）。</summary>
      <returns>errorResponse 的 &lt;detail&gt; 元素的内容（如果有）。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.ErrorMessage">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.ErrorMessage" /> 属性不适用于 DSML &lt;errorResponse&gt;。</summary>
      <returns>不适用于 DSML &lt;errorResponse&gt;。</returns>
      <exception cref="T:System.NotSupportedException">此属性对 DSML 错误响应无效。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.MatchedDN">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.MatchedDN" /> 属性不适用于 DSML &lt;errorResponse&gt;。</summary>
      <returns>不适用于 DSML &lt;errorResponse&gt;。</returns>
      <exception cref="T:System.NotSupportedException">此属性对 DSML 错误响应无效。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Message">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Message" /> 属性包含在 errorResponse 的 &lt;message&gt; 元素中返回的文本（如果有）。</summary>
      <returns>在 errorResponse 的 &lt;message&gt; 元素中返回的文本（如果有）。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Referral">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Referral" /> 属性不适用于 DSML &lt;errorResponse&gt;。</summary>
      <returns>不适用于 DSML &lt;errorResponse&gt;。</returns>
      <exception cref="T:System.NotSupportedException">此属性对 DSML 错误响应无效。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.ResultCode">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.ResultCode" /> 属性不适用于 DSML &lt;errorResponse&gt;。</summary>
      <returns>不适用于 DSML &lt;errorResponse&gt;。</returns>
      <exception cref="T:System.NotSupportedException">此属性对 DSML 错误响应无效。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Type">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlErrorResponse.Type" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.ErrorResponseCategory" /> 的值，该值指定服务器返回的错误响应的类型。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.ErrorResponseCategory" /> 的一个值，该值指定服务器返回的错误响应的类型。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException" /> 类是一个异常，当 DSML 请求或响应文档的 XML 不是格式良好的或者无法使用 DSMLv2 架构对该文档进行验证时，将引发该异常。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 构造函数使用指定的序列化数据和流上下文数据创建 <see cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException" /> 类的实例。</summary>
      <param name="info">有关引发的异常的序列化对象数据。</param>
      <param name="context">有关源或目标的上下文数据。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor(System.String)" /> 构造函数使用指定的参数创建 <see cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException" /> 类的实例。</summary>
      <param name="message">当发生异常时向客户端显示的消息。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlInvalidDocumentException.#ctor(System.String,System.Exception)" /> 构造函数使用指定的参数创建 <see cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException" /> 类的实例。</summary>
      <param name="message">当发生异常时向客户端显示的消息。</param>
      <param name="inner">引发异常的 <see cref="P:System.Exception.InnerException" />（如果有）。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlRequestDocument">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 类使您可以生成 DSML 请求负载，如 <see cref="T:System.DirectoryServices.Protocols.AddRequest" />、<see cref="T:System.DirectoryServices.Protocols.ModifyRequest" /> 或 <see cref="T:System.DirectoryServices.Protocols.SearchRequest" />。它包含零个或多个 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 派生对象。 用户可以先添加、删除、修改和枚举 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" />，然后再发送到服务器。 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 可以与任何 DSML 绑定类（如 <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" />）一起使用，以传输文档。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Add(System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Add(System.DirectoryServices.Protocols.DirectoryRequest)" /> 方法向集合中添加 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 集合中添加 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象处的索引。</returns>
      <param name="request">要添加到集合中的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Clear">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Clear" /> 方法移除此集合中的所有项。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Contains(System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Contains(System.DirectoryServices.Protocols.DirectoryRequest)" /> 方法确定此 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 集合是否包含指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</summary>
      <returns>如果指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象属于该集合，则为 true；否则为 false。</returns>
      <param name="value">要搜索的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.CopyTo(System.DirectoryServices.Protocols.DirectoryRequest[],System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.CopyTo(System.DirectoryServices.Protocols.DirectoryRequest[],System.Int32)" /> 方法将整个 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 集合复制到一维数组中（从目标数组的指定索引处开始）。</summary>
      <param name="value">一个一维数组，它是从 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 对象复制的元素的目标。</param>
      <param name="i">
        <paramref name="value" /> 中从零开始的索引，这是开始复制的位置。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.Count">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.Count" /> 属性包含此集合中 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象的数目。</summary>
      <returns>此集合中 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象的数目。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.DocumentProcessing">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.DocumentProcessing" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.DsmlDocumentProcessing" /> 的一个值，该值指定集合元素的处理方式。</summary>
      <returns>指定集合元素处理方式的一个 <see cref="T:System.DirectoryServices.Protocols.DsmlDocumentProcessing" /> 值。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="value" /> 是无效的枚举值。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.ErrorProcessing">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.ErrorProcessing" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.DsmlErrorProcessing" /> 的一个值，该值指定如何对错误进行处理。</summary>
      <returns>一个 <see cref="T:System.DirectoryServices.Protocols.DsmlErrorProcessing" /> 值，该值指定如何对错误进行处理。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="value" /> 是无效的枚举值。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.GetEnumerator">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.GetEnumerator" /> 方法返回整个 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 集合的枚举器。</summary>
      <returns>整个集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.IndexOf(System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.IndexOf(System.DirectoryServices.Protocols.DirectoryRequest)" /> 方法返回 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 集合中指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象的第一个匹配项从零开始的索引。</summary>
      <returns>如果找到指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象，则为其索引值；否则为 -1。</returns>
      <param name="value">为其返回索引的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Insert(System.Int32,System.DirectoryServices.Protocols.DirectoryRequest)" /> 方法将指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象插入 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 集合中指定的索引处。</summary>
      <param name="index">集合中 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象插入处的索引。</param>
      <param name="value">要插入到集合中的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsFixedSize">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsFixedSize" /> 属性包含的值用于指示 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 是否具有固定大小。</summary>
      <returns>如果 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 具有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsReadOnly">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsReadOnly" /> 属性包含的值用于指示 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 是否为只读。</summary>
      <returns>如果 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsSynchronized">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.IsSynchronized" /> 属性包含一个指示是否同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 的访问（线程安全）的值。</summary>
      <returns>如果同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 的访问（线程安全），则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.Item(System.Int32)">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.Item(System.Int32)" /> 属性包含指定索引处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</summary>
      <returns>位于指定索引处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</returns>
      <param name="index">在找到 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象处从零开始的索引值。</param>
      <exception cref="T:System.ArgumentNullException">将 <paramref name="index" /> 设置为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Remove(System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.Remove(System.DirectoryServices.Protocols.DirectoryRequest)" /> 方法从集合中移除指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象的第一个匹配项。</summary>
      <param name="value">要移除的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.RemoveAt(System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.RemoveAt(System.Int32)" /> 方法移除位于指定位置处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</summary>
      <param name="index">要移除的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象的从零开始的索引。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.RequestId">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.RequestId" /> 属性包含与 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 关联的 <paramref name="RequestID" />。</summary>
      <returns>与 <paramref name="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 关联的 <see cref="RequestID" />。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.ResponseOrder">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.ResponseOrder" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseOrder" /> 的一个值，该值指定响应顺序。</summary>
      <returns>指定响应顺序的 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseOrder" /> 的一个值。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="value" /> 是无效的枚举值。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.SyncRoot">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.SyncRoot" /> 属性包含一个可用于同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 的访问的对象。</summary>
      <returns>可用于同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 的访问的对象。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> 方法将整个 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 集合复制到一维数组中（从目标数组的指定索引处开始）。</summary>
      <param name="value">一个一维数组，它是从 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 对象复制的元素的目标。</param>
      <param name="i">
        <paramref name="value" /> 中从零开始的索引，这是开始复制的位置。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#ICollection#Count">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.ICollection.Count" /> 属性获取此集合中 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象的数目。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象的数目。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#ICollection#IsSynchronized">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.ICollection.IsSynchronized" /> 属性获取一个指示是否同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 的访问（线程安全）的值。</summary>
      <returns>如果同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 的访问（线程安全），则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#ICollection#SyncRoot">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.ICollection.SyncRoot" /> 属性获取一个可用于同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 的访问的对象。</summary>
      <returns>一个对象，可用于同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 的访问。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Add(System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.Add(System.Object)" /> 方法可向集合中添加 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 集合中添加 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象处的索引。</returns>
      <param name="request">要添加到集合中的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="request" /> 不是 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Clear">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.Clear" /> 方法移除集合中的所有项。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Contains(System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.Contains(System.Object)" /> 方法确定此 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 集合是否包含指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</summary>
      <returns>如果指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象属于该集合，则为 true；否则为 false。</returns>
      <param name="value">要搜索的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#IndexOf(System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.IndexOf(System.Object)" /> 方法返回 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 集合中指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象的第一个匹配项从零开始的索引。</summary>
      <returns>如果找到指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象，则为其索引值；否则为 -1。</returns>
      <param name="value">为其返回索引的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.Insert(System.Int32,System.Object)" /> 方法将指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象插入 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 集合中指定的索引处。</summary>
      <param name="index">集合中 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象插入处的索引。</param>
      <param name="value">要插入到集合中的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#IsFixedSize">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.IsFixedSize" /> 属性获取一个值，该值指示 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 是否具有固定大小。</summary>
      <returns>如果 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 具有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#IsReadOnly">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.IsReadOnly" /> 属性获取一个值，该值指示 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 是否为只读。</summary>
      <returns>如果 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Item(System.Int32)">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.Item(System.Int32)" /> 属性获取或设置位于指定索引处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</summary>
      <returns>位于指定 <paramref name="index" /> 处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</returns>
      <param name="index">在找到 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象处从零开始的索引值。</param>
      <exception cref="T:System.ArgumentNullException">将 <paramref name="index" /> 设置为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不是 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#Remove(System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.Remove(System.Object)" /> 方法从集合中移除指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象的第一个匹配项。</summary>
      <param name="value">要移除的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.System.Collections.IList.RemoveAt(System.Int32)" /> 方法移除位于指定位置的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</summary>
      <param name="index">要移除的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象的从零开始的索引。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlRequestDocument.ToXml">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlRequestDocument.ToXml" /> 方法将集合中的每个 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象转换为 <see cref="T:System.Xml.XmlDocument" /> 对象。</summary>
      <returns>转换的 <see cref="T:System.Xml.XmlDocument" /> 对象。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlResponseDocument">
      <summary>该 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 类是一个只读集合，它是作为对 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 对象（包含从 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 派生的多个对象或不包含此类对象）的响应生成的。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlResponseDocument.CopyTo(System.DirectoryServices.Protocols.DirectoryResponse[],System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlResponseDocument.CopyTo(System.DirectoryServices.Protocols.DirectoryResponse[],System.Int32)" /> 方法将整个集合复制到一维数组中（从目标数组的指定索引处开始）。</summary>
      <param name="value">一个一维数组，它是从 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 对象复制的元素的目标。</param>
      <param name="i">
        <paramref name="value" /> 中从零开始的索引，这是开始复制的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 是多维的 - 或 - 源 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 中的元素数大于从 i 到目标 <paramref name="value" /> 结尾处之间的可用空间。</exception>
      <exception cref="T:System.InvalidCastException">源 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 的类型无法自动转换为目标 <paramref name="value" /> 的类型。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.Count">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.Count" /> 属性包含此集合中 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象的数目。</summary>
      <returns>此集合中 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象的数目。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlResponseDocument.GetEnumerator">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlResponseDocument.GetEnumerator" /> 方法返回整个 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 集合的枚举器。</summary>
      <returns>整个集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.IsErrorResponse">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.IsErrorResponse" /> 属性指定是否已发生错误响应。</summary>
      <returns>如果已发生错误响应，则此属性为 true 否则为 false。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.IsOperationError">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.IsOperationError" /> 属性指定是否已发生操作错误响应。</summary>
      <returns>如果已发生操作错误，则此属性为 true 否则为 false。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.IsSynchronized">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.IsSynchronized" /> 属性包含一个指示是否同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 的访问（线程安全）的值。</summary>
      <returns>如果同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 的访问（线程安全），则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.Item(System.Int32)">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.Item(System.Int32)" /> 属性包含指定索引处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象。</summary>
      <returns>位于指定索引处的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象。</returns>
      <param name="index">在找到 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象处从零开始的索引值。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.RequestId">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.RequestId" /> 属性包含与该文档关联的 RequestID。</summary>
      <returns>与该文档关联的 RequestID。</returns>
      <exception cref="T:System.NotSupportedException">已尝试设置属性值。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.SyncRoot">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.SyncRoot" /> 属性包含一个可用于同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 的访问的对象。</summary>
      <returns>可用于同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 的访问的对象。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlResponseDocument.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlResponseDocument.System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> 方法将整个 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 集合复制到一维数组中（从目标数组的指定索引处开始）。</summary>
      <param name="value">一个一维数组，它是从 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 对象复制的元素的目标。</param>
      <param name="i">
        <paramref name="value" /> 中从零开始的索引，这是开始复制的位置。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.System#Collections#ICollection#Count">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.System.Collections.ICollection.Count" /> 属性获取此集合中 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象的数目。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象的数目。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.System#Collections#ICollection#IsSynchronized">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.System.Collections.ICollection.IsSynchronized" /> 属性获取一个指示是否同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 的访问（线程安全）的值。</summary>
      <returns>如果同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 的访问（线程安全），则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlResponseDocument.System#Collections#ICollection#SyncRoot">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlResponseDocument.System.Collections.ICollection.SyncRoot" /> 属性获取一个可用于同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 的访问的对象。</summary>
      <returns>一个对象，可用于同步对 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 的访问。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlResponseDocument.ToXml">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlResponseDocument.ToXml" /> 方法将集合中的每个 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象转换为 <see cref="T:System.Xml.XmlDocument" /> 对象。</summary>
      <returns>转换的 <see cref="T:System.Xml.XmlDocument" /> 对象。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlResponseOrder">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DsmlResponseOrder" /> 枚举指定响应的接收顺序。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DsmlResponseOrder.Sequential">
      <summary>按顺序。 该值等于 0。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.DsmlResponseOrder.Unordered">
      <summary>无顺序。 该值等于 1。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlSoapConnection">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" /> 类是一个不能进行实例化的抽象类。 它通过提供面向会话的功能，可以采用类似方式处理无状态协议和有状态协议。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor" /> 构造函数初始化 <see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession" /> 方法指示 DSML 服务器启动新会话。</summary>
      <exception cref="T:System.InvalidOperationException">如果已在连接上打开会话，则引发该异常。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">当从服务器返回的、响应 BeginSession 的 XML 不是格式良好的时，将引发此异常。</exception>
      <exception cref="T:System.Net.WebException">如果与 DSML 服务器的通信发生故障，则引发该异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession" /> 方法结束与 DSML 服务器的会话并清除 <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" /> 属性。</summary>
      <exception cref="T:System.Net.WebException">当与 DSML 服务器之间的通信发生故障时，将引发此异常。</exception>
      <exception cref="T:System.InvalidOperationException">如果没有打开的会话，则引发该异常。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" /> 属性包含活动会话 ID。</summary>
      <returns>活动会话 ID。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" /> 属性包含附加到传出请求的 SOAP 标头。</summary>
      <returns>附加到传出请求的 SOAP 标头。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 类表示使用 SOAP over HTTP 与 DSML 网关的连接。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier)" /> 构造函数初始化 <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 类的新实例。</summary>
      <param name="identifier">一个 <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> 对象，指定用于连接的服务器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential)" /> 构造函数初始化 <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 类的新实例。</summary>
      <param name="identifier">一个 <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> 对象，指定用于连接的服务器。</param>
      <param name="credential">一个 <see cref="T:System.Net.NetworkCredential" /> 对象，其中包含网络凭据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" /> 构造函数使用指定的标识符、网络凭据以及身份验证类型创建并初始化 <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 类的新实例。</summary>
      <param name="identifier">一个 <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" /> 对象，指定用于连接的服务器。</param>
      <param name="credential">一个 <see cref="T:System.Net.NetworkCredential" /> 对象，其中包含网络凭据。</param>
      <param name="authType">指定用于此连接的身份验证类型的 <see cref="T:System.DirectoryServices.Protocols.AuthType" /> 值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">DSML 不支持 <paramref name="authType" /> 值。 DSML 仅支持 Anonymous、Ntlm、Basic、Negotiate 和 digest。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="authType" /> 值不属于 <see cref="T:System.DirectoryServices.Protocols.AuthType" /> 枚举中定义的常数。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.Uri)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.Uri)" /> 构造函数初始化 <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 类的新实例。</summary>
      <param name="uri">一个 <see cref="T:System.Uri" /> 对象，指定用于连接的服务器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Abort(System.IAsyncResult)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Abort(System.IAsyncResult)" /> 方法将取消异步请求。</summary>
      <param name="asyncResult">从 <see cref="T:System.IAsyncResult" /> 派生的对象，该对象引用异步请求。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 不是由 <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" /> 的对应调用返回的。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.AuthType">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.AuthType" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.AuthType" /> 枚举的一个值，该值指定身份验证类型。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.AuthType" /> 枚举的一个值，该值指定身份验证类型。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" /> 方法开始以异步方式将指定的 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 对象发送到服务器。</summary>
      <returns>从 <see cref="T:System.IAsyncResult" /> 派生的对象，该对象引用异步发送。</returns>
      <param name="request">要发送的 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 对象。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 函数。</param>
      <param name="state">包含此请求的状态数据的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSession">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSession" /> 方法指示 DSML 服务器启动一个新会话。</summary>
      <exception cref="T:System.InvalidOperationException">如果已在连接上打开会话，则引发该异常。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">如果从响应 <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSession" /> 的服务器返回的 XML 不是格式良好的，则引发该异常。</exception>
      <exception cref="T:System.Net.WebException">如果与 DSML 服务器的通信发生故障或者该服务器无可用会话，则引发该异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSendRequest(System.IAsyncResult)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSendRequest(System.IAsyncResult)" /> 方法将完成异步发送请求。</summary>
      <returns>一个 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 对象，它包含该请求的结果。</returns>
      <param name="asyncResult">从 <see cref="T:System.IAsyncResult" /> 派生的包含此请求的状态数据的对象。</param>
      <exception cref="T:System.ArgumentNullException">当 <paramref name="asyncResult" /> 为 null 时，将引发此异常。</exception>
      <exception cref="T:System.ArgumentException">如果当前实例没有从 <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" /> 调用返回 <paramref name="asyncResult" />，则引发该异常。</exception>
      <exception cref="T:System.IO.IOException">请求未完成。 无可用的流。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">如果服务器返回的响应无效，则引发该异常。</exception>
      <exception cref="T:System.Net.WebException">如果以前调用过中止操作或在处理请求时出错，则引发该异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSession">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSession" /> 方法将终止与 DSML 服务器的会话并清除 <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" /> 属性。</summary>
      <exception cref="T:System.Net.WebException">如果与 DSML 服务器的通信发生故障，则引发该异常。</exception>
      <exception cref="T:System.InvalidOperationException">如果没有打开的会话，则引发该异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> 方法发送单个 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</summary>
      <returns>一个 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象，它包含该请求的结果。</returns>
      <param name="request">一个包含该请求的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.ErrorResponseException">DSML 服务器返回了错误响应。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">该操作返回了失败代码。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument)" /> 方法向 DSML 服务器发送 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 对象。</summary>
      <returns>一个 <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" /> 对象，它包含该请求的结果。</returns>
      <param name="request">发送到服务器的 <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId">
      <summary>包含活动会话 ID 的 <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" /> 属性。</summary>
      <returns>活动会话 ID。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SoapActionHeader">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SoapActionHeader" /> 属性包含与其他 HTTP 头一起发送的 SOAP Action 头。</summary>
      <returns>与其他 HTTP 头一起发送的 SOAP Action 头。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Timeout">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Timeout" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 超时前的时间长度（以秒为单位）。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> 超时前的时间长度（以秒为单位）。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ErrorResponseCategory">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.ErrorResponseCategory" /> 枚举包含可能的 DSML 错误响应。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.AuthenticationFailed">
      <summary>身份验证失败。 该值等于 5。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.ConnectionClosed">
      <summary>DSML 提供程序已连接到服务器，但服务器在未响应请求的情况下关闭了连接。 该值等于 2。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.CouldNotConnect">
      <summary>DSML 提供程序无法连接到服务器。 该值等于 1。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.GatewayInternalError">
      <summary>存在内部网关错误。 该值等于 4。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.MalformedRequest">
      <summary>客户端无法指定每个请求的请求 ID。 该值等于 3。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.NotAttempted">
      <summary>DSML 提供程序未尝试执行请求元素。 该值等于 0。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.Other">
      <summary>发生未知错误。 该值等于 7。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ErrorResponseCategory.UnresolvableUri">
      <summary>客户端提供程序无法将 URI 解析为可以传输到服务器的值。 该值等于 6。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ErrorResponseException">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> 类是服务器返回 &lt;errorResponse&gt; 时发生的异常。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.DirectoryServices.Protocols.DsmlErrorResponse)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.DirectoryServices.Protocols.DsmlErrorResponse)" /> 构造函数使用指定的响应对象创建 <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> 类的实例。 显示到客户端的默认消息为“已返回 &lt;errorResponse&gt;”。</summary>
      <param name="response">服务器返回的 <see cref="T:System.DirectoryServices.Protocols.DsmlErrorResponse" /> 对象，该对象与 &lt;errorResponse&gt; 相对应。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.DirectoryServices.Protocols.DsmlErrorResponse,System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.DirectoryServices.Protocols.DsmlErrorResponse,System.String)" /> 构造函数使用指定的响应对象和消息创建 <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> 类的实例。</summary>
      <param name="response">服务器返回的 <see cref="T:System.DirectoryServices.Protocols.DsmlErrorResponse" /> 对象，该对象与 &lt;errorResponse&gt; 相对应。</param>
      <param name="message">发生异常时显示到客户端的消息。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.DirectoryServices.Protocols.DsmlErrorResponse,System.String,System.Exception)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.DirectoryServices.Protocols.DsmlErrorResponse,System.String,System.Exception)" /> 构造函数使用指定的响应对象、消息和内部异常创建 <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> 类的实例。</summary>
      <param name="response">服务器返回的 <see cref="T:System.DirectoryServices.Protocols.DsmlErrorResponse" /> 对象，该对象与 &lt;errorResponse&gt; 相对应。</param>
      <param name="message">发生异常时显示到客户端的消息。</param>
      <param name="inner">引发异常的 <see cref="P:System.Exception.InnerException" />（如果有）。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 构造函数使用指定的序列化数据和流上下文创建 <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> 类的实例。</summary>
      <param name="info">序列化参数所需的数据。</param>
      <param name="context">与该参数相关联的序列化流的源和目标。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.String)" /> 构造函数使用指定的消息创建 <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> 类的实例。</summary>
      <param name="message">发生异常时显示到客户端的消息。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.#ctor(System.String,System.Exception)" /> 构造函数使用指定的消息和内部异常创建 <see cref="T:System.DirectoryServices.Protocols.ErrorResponseException" /> 类的实例。</summary>
      <param name="message">发生异常时显示到客户端的消息。</param>
      <param name="inner">引发异常的 <see cref="P:System.Exception.InnerException" />（如果有）。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ErrorResponseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ErrorResponseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法使用序列化参数所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="serializationInfo">序列化参数所需的数据。</param>
      <param name="streamingContext">与该参数相关联的序列化流的源和目标。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ErrorResponseException.Response">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.ErrorResponseException.Response" /> 属性包含与 &lt;errorResponse&gt; 相对应的 <see cref="T:System.DirectoryServices.Protocols.DsmlErrorResponse" /> 对象。</summary>
      <returns>与 &lt;errorResponse&gt; 相对应的 <see cref="T:System.DirectoryServices.Protocols.DsmlErrorResponse" /> 对象。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ExtendedDNControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.ExtendedDNControl" /> 类请求 Active Directory 域服务对象的可分辨名称的扩展形式。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ExtendedDNControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ExtendedDNControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.ExtendedDNControl" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ExtendedDNControl.#ctor(System.DirectoryServices.Protocols.ExtendedDNFlag)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ExtendedDNControl.#ctor(System.DirectoryServices.Protocols.ExtendedDNFlag)" /> 构造函数使用指定的标志创建 <see cref="T:System.DirectoryServices.Protocols.ExtendedDNControl" /> 类的实例。</summary>
      <param name="flag">
        <see cref="T:System.DirectoryServices.Protocols.ExtendedDNFlag" /> 枚举的一个值，该值指定扩展识别名的格式。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ExtendedDNControl.Flag">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.ExtendedDNControl.Flag" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.ExtendedDNFlag" /> 的一个值，该值指定扩展识别名的格式。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.ExtendedDNFlag" /> 的一个值，该值指定扩展识别名的格式。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ExtendedDNControl.GetValue">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ExtendedDNControl.GetValue" /> 方法返回扩展识别名的格式。</summary>
      <returns>扩展识别名的格式。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ExtendedDNFlag">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.ExtendedDNFlag" /> 枚举指定扩展识别名的格式。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ExtendedDNFlag.HexString">
      <summary>指定采用十六进制格式返回的 GUID 和 SID 值。 该值等于 0。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ExtendedDNFlag.StandardString">
      <summary>指定采用标准字符串格式返回的 GUID 和 SID 值。 该值等于 1。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ExtendedRequest">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.ExtendedRequest" /> 类将扩展的 LDAP 操作传递到服务器。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ExtendedRequest.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ExtendedRequest.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.ExtendedRequest" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ExtendedRequest.#ctor(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ExtendedRequest.#ctor(System.String)" /> 构造函数使用指定的名称创建 <see cref="T:System.DirectoryServices.Protocols.ExtendedRequest" /> 类的实例。</summary>
      <param name="requestName">请求的名称。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ExtendedRequest.#ctor(System.String,System.Byte[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ExtendedRequest.#ctor(System.String,System.Byte[])" /> 构造函数使用指定的名称和值创建 <see cref="T:System.DirectoryServices.Protocols.ExtendedRequest" /> 类的实例。</summary>
      <param name="requestName">请求的名称。</param>
      <param name="requestValue">请求的值。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ExtendedRequest.RequestName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.ExtendedRequest.RequestName" /> 属性包含请求名称。</summary>
      <returns>请求名称。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ExtendedRequest.RequestValue">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.ExtendedRequest.RequestValue" /> 属性包含请求的值。</summary>
      <returns>请求的值。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ExtendedRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ExtendedRequest.ToXmlNode(System.Xml.XmlDocument)" /> 方法从指定的 <see cref="T:System.Xml.XmlDocument" /> 对象创建 XML 节点。</summary>
      <returns>所产生的 <see cref="T:System.Xml.XmlElement" /> 对象。</returns>
      <param name="doc">
        <see cref="T:System.Xml.XmlDocument" /> 对象。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ExtendedResponse">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> 将 <see cref="T:System.DirectoryServices.Protocols.ExtendedResponse" /> 类作为对 <see cref="T:System.DirectoryServices.Protocols.ExtendedRequest" /> 的响应返回。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ExtendedResponse.ResponseName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.ExtendedResponse.ResponseName" /> 属性包含服务器返回的响应的名称。</summary>
      <returns>服务器返回的响应的名称。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ExtendedResponse.ResponseValue">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.ExtendedResponse.ResponseValue" /> 属性包含服务器返回的可选响应值。</summary>
      <returns>服务器返回的可选响应值。</returns>
      <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">服务器返回了无效值。</exception>
    </member>
    <member name="T:System.DirectoryServices.Protocols.LazyCommitControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.LazyCommitControl" /> 类指示服务器返回 DS 修改命令（如 add、delete 或 replace）的结果的时机为在内存中完成该命令后，但在将该命令提交到磁盘前。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LazyCommitControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LazyCommitControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.LazyCommitControl" /> 类的实例。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.LdapConnection">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 类创建与 Microsoft Active Directory 域服务或 LDAP 服务器的 TCP/IP 或 UDP LDAP 连接。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier)" /> 构造函数使用指定的目录标识符创建 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 类的实例。 登录凭据和协商身份验证用于连接 LDAP 服务器。</summary>
      <param name="identifier">一个指定服务器的 <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> 对象。</param>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">如果无法创建连接块或者无法打开与服务器的连接，则引发该异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential)" /> 构造函数使用指定的目录标识符和网络凭据创建 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 类的实例。 将使用协商身份验证。</summary>
      <param name="identifier">一个指定服务器的 <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> 对象。</param>
      <param name="credential">一个 <see cref="T:System.Net.NetworkCredential" /> 对象，指定要使用的凭据。</param>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">如果无法创建连接块或者无法打开与服务器的连接，则引发该异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.DirectoryServices.Protocols.LdapDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" /> 构造函数使用指定的目录标识符、网络凭据和身份验证类型创建 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 类的实例。</summary>
      <param name="identifier">一个指定服务器的 <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> 对象。</param>
      <param name="credential">一个 <see cref="T:System.Net.NetworkCredential" /> 对象，指定要使用的凭据。</param>
      <param name="authType">指定要使用的身份验证类型的 <see cref="T:System.DirectoryServices.Protocols.AuthType" /> 值。</param>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">如果无法创建连接块或者无法打开与服务器的连接，则引发该异常。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">如果 <paramref name="authType" /> 超出范围，则引发该异常。</exception>
      <exception cref="T:System.ArgumentException">如果将 <paramref name="authType" /> 指定为“匿名”但 <paramref name="credential" /> 指定了凭据，则引发该异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.#ctor(System.String)" /> 构造函数使用指定的服务器创建 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 类的实例。</summary>
      <param name="server">一个指定服务器的字符串，它可以是域名、LDAP 服务器名称或表示 LDAP 服务器的 IP 地址的带点的字符串。 此外，此参数可能还包括一个端口号，用冒号 (:) 与字符串的右端隔开。</param>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">如果无法创建连接块或者无法打开与服务器的连接，则引发该异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Abort(System.IAsyncResult)" /> 方法取消异步请求。</summary>
      <param name="asyncResult">一个引用该异步请求的 <see cref="T:System.IAsyncResult" /> 对象。</param>
      <exception cref="T:System.ObjectDisposedException">该对象句柄无效。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">如果调用 <see cref="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest" /> 而没有返回相应的 <paramref name="asyncResult" />，则引发该异常。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapConnection.AuthType">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" /> 属性包含支持的身份验证类型。</summary>
      <returns>支持的身份验证类型。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">如果 <paramref name="authType" /> 超出范围，则引发该异常。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapConnection.AutoBind">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapConnection.AutoBind" /> 属性指定是否允许自动绑定。</summary>
      <returns>如果允许自动绑定，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)" /> 方法通过异步方式向服务器发送数据。</summary>
      <returns>引用异步发送的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
      <param name="request">
        <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
      <param name="partialMode">
        <see cref="T:System.DirectoryServices.Protocols.PartialResultProcessing" /> 枚举中的一个值，用于指定要返回的部分结果的级别。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 函数。</param>
      <param name="state">包含此请求的状态数据的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ObjectDisposedException">该对象句柄无效。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.NotSupportedException">不支持部分结果。</exception>
      <exception cref="T:System.ArgumentException">如果 <paramref name="partialMode" /> 等于 <see cref="F:System.DirectoryServices.Protocols.PartialResultProcessing.ReturnPartialResultsAndNotifyCallback" />，则必须指定回调函数。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan,System.DirectoryServices.Protocols.PartialResultProcessing,System.AsyncCallback,System.Object)" /> 方法通过异步方式向服务器发送数据。</summary>
      <returns>引用异步发送的 <see cref="T:System.IAsyncResult" /> 对象。</returns>
      <param name="request">
        <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
      <param name="requestTimeout">请求超时之前的时间，以秒为单位。</param>
      <param name="partialMode">
        <see cref="T:System.DirectoryServices.Protocols.PartialResultProcessing" /> 枚举中的一个值，用于指定要返回的部分结果的级别。</param>
      <param name="callback">
        <see cref="T:System.AsyncCallback" /> 函数。</param>
      <param name="state">包含此请求的状态数据的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ObjectDisposedException">该对象句柄无效。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.NotSupportedException">不支持部分结果。</exception>
      <exception cref="T:System.ArgumentException">如果 <paramref name="partialMode" /> 等于 <see cref="F:System.DirectoryServices.Protocols.PartialResultProcessing.ReturnPartialResultsAndNotifyCallback" />，则必须指定回调函数。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.Bind">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Bind" /> 方法使用当前凭据发送 LDAP 绑定。</summary>
      <exception cref="T:System.ObjectDisposedException">该对象句柄无效。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">LDAP 返回的错误代码未映射到其中一个 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 枚举错误代码。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> 属性指定多个要发送的客户端证书以进行身份验证，或者 <see cref="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" /> 属性为“匿名”，并提供一个或多个凭据。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Bind(System.Net.NetworkCredential)" /> 方法使用指定的 <see cref="T:System.Net.NetworkCredential" /> 发送 LDAP 绑定。</summary>
      <param name="newCredential">一个 <see cref="T:System.Net.NetworkCredential" /> 对象，指定要使用的凭据。</param>
      <exception cref="T:System.ObjectDisposedException">该对象句柄无效。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">LDAP 返回的错误代码未映射到 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 枚举错误代码。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates" /> 属性指定多个要发送的客户端证书以进行身份验证，或者 <see cref="P:System.DirectoryServices.Protocols.LdapConnection.AuthType" /> 属性为“匿名”，并提供一个或多个凭据。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapConnection.Credential">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapConnection.Credential" /> 属性包含该对象的网络凭据。</summary>
      <returns>该对象的网络凭据。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.Dispose">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Dispose" /> 方法关闭并释放 LDAP 句柄。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Dispose(System.Boolean)" /> 方法关闭连接，并可选择释放 LDAP 句柄。</summary>
      <param name="disposing">如果关闭连接后释放句柄，则为 true；如果关闭连接后不释放句柄，则为 false。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.EndSendRequest(System.IAsyncResult)" /> 方法完成异步请求。</summary>
      <returns>一个 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象，它包含该请求的结果。</returns>
      <param name="asyncResult">一个 <see cref="T:System.IAsyncResult" /> 对象，它包含该请求的状态数据。</param>
      <exception cref="T:System.ObjectDisposedException">如果已释放相应对象，则引发该异常。该对象句柄无效。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 与 <see cref="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest" /> 调用中返回的 <paramref name="asyncResult" /> 不匹配。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">LDAP 返回的错误代码未映射到 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 枚举错误代码。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">如果服务器返回了有错误的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象，则引发该异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.Finalize">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.Finalize" /> 方法允许 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象在“垃圾回收”功能回收 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象之前尝试释放资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.GetPartialResults(System.IAsyncResult)" /> 方法检索异步操作的部分结果。</summary>
      <returns>一个包含部分结果的 <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> 对象。</returns>
      <param name="asyncResult">一个 <see cref="T:System.IAsyncResult" /> 对象，它包含该请求的状态数据。</param>
      <exception cref="T:System.ObjectDisposedException">已释放该对象。 该对象句柄无效。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> 与 <see cref="M:System.DirectoryServices.Protocols.LdapConnection.BeginSendRequest" /> 调用中返回的 <paramref name="asyncResult" /> 不匹配。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">LDAP 返回的错误代码未映射到 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 枚举错误代码。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">如果服务器返回了有错误的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象，则引发该异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> 方法将单个 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 作为 LDAP v3 操作进行发送。</summary>
      <returns>一个 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象，其中包含来自该服务器的响应。</returns>
      <param name="request">一个包含该请求的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
      <exception cref="T:System.ObjectDisposedException">已释放该对象。 该对象句柄无效。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.NotSupportedException">请求的类型是 DsmlAuthRequest。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">LDAP 返回的错误代码未映射到 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 枚举错误代码。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">如果服务器返回了有错误的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象，则引发该异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest,System.TimeSpan)" /> 方法将单个 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 作为 LDAP v3 操作进行发送。</summary>
      <returns>一个 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象，其中包含来自该服务器的响应。</returns>
      <param name="request">一个包含该请求的 <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" /> 对象。</param>
      <param name="requestTimeout">请求超时之前的时间长度（以秒为单位）。</param>
      <exception cref="T:System.ObjectDisposedException">已释放该对象。 该对象句柄无效。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> 为 null（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.NotSupportedException">请求的类型是 DsmlAuthRequest。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">LDAP 返回的错误代码未映射到 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 枚举错误代码。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">如果服务器返回了有错误的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象，则引发该异常。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapConnection.SessionOptions">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapConnection.SessionOptions" /> 属性包含一个指定会话选项的 <see cref="T:System.DirectoryServices.Protocols.LdapSessionOptions" /> 对象。</summary>
      <returns>一个指定会话选项的 <see cref="T:System.DirectoryServices.Protocols.LdapSessionOptions" /> 对象。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapConnection.Timeout">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapConnection.Timeout" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 超时前的时间长度（以秒为单位）。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 超时前的时间长度（以秒为单位）。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> 类为一个或多个 LDAP 服务器创建目录标识符。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String)" /> 构造函数使用指定的服务器创建 <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> 类的实例。</summary>
      <exception cref="T:System.ArgumentException">如果 <paramref name="server" /> 具有空白，将引发此异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)" /> 构造函数使用指定的服务器和属性创建 <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> 类的实例。此构造函数创建表示一组 LDAP 服务器的标识符。</summary>
      <param name="fullyQualifiedDnsHostName">如果服务器中的每个元素均为完全限定的 DNS 主机名，则为 true。 如果值为 false，则元素可以是 IP 地址、DNS 域或主机名，也可以是 null。 如果它为 null，则表示域中与计算机帐户关联的任何域控制器的标识。</param>
      <exception cref="T:System.ArgumentException">如果 <paramref name="server" /> 只包含空白，将引发此异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Integer)" /> 构造函数使用指定的服务器和属性创建 <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> 类的实例。此构造函数创建表示一组 LDAP 服务器的标识符。</summary>
      <param name="portNumber">连接到服务器时要使用的端口号。</param>
      <exception cref="T:System.ArgumentException">如果 <paramref name="server" /> 具有空白，将引发此异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Int32,System.Boolean,System.Boolean)" /> 构造函数使用指定的服务器和属性创建 <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> 类的实例。此构造函数创建表示一组 LDAP 服务器的标识符。</summary>
      <param name="portNumber">连接到服务器时要使用的端口号。</param>
      <param name="fullyQualifiedDnsHostName">如果服务器中的每个元素均为完全限定的 DNS 主机名，则为 true。 如果值为 false，则元素可以是 IP 地址、DNS 域或主机名，也可以是 null。 如果它为 null，则表示域中与计算机帐户关联的任何域控制器的标识。</param>
      <exception cref="T:System.ArgumentException">如果 <paramref name="server" /> 具有空白，将引发此异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Boolean,System.Boolean)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String,System.Boolean,System.Boolean)" /> 构造函数使用指定的服务器和属性创建 <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> 类的实例。此构造函数创建表示一组 LDAP 服务器的标识符。</summary>
      <param name="fullyQualifiedDnsHostName">如果服务器中的每个元素均为完全限定的 DNS 主机名，则为 true。 如果值为 false，则元素可以是 IP 地址、DNS 域或主机名，也可以是 null。 如果它为 null，则表示域中与计算机帐户关联的任何域控制器的标识。</param>
      <exception cref="T:System.ArgumentException">如果 <paramref name="server" /> 具有空白，将引发此异常。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.#ctor(System.String[],System.Int32,System.Boolean,System.Boolean)" /> 构造函数使用指定的服务器和属性创建 <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> 类的实例。此构造函数创建表示一组 LDAP 服务器的标识符。</summary>
      <param name="portNumber">连接到服务器时要使用的端口号。</param>
      <param name="fullyQualifiedDnsHostName">如果服务器中的每个元素均为完全限定的 DNS 主机名，则为 true。 如果值为 false，则元素可以是 IP 地址、DNS 域或主机名，也可以是 null。 如果它为 null，则表示域中与计算机帐户关联的任何域控制器的标识。</param>
      <exception cref="T:System.ArgumentException">如果 <paramref name="server" /> 具有空白，将引发此异常。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Connectionless">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Connectionless" /> 属性指定连接是用户数据报协议 (UDP).</summary>
      <returns>如果连接是 UDP，则此属性为 true。 如果 LDAP 连接以 TCP/IP 为基础，则此属性为 false。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.FullyQualifiedDnsHostName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.FullyQualifiedDnsHostName" /> 属性指定服务器名称是完全限定的 DNS 主机名。</summary>
      <returns>如果服务器名称是完全限定的 DNS 主机名，则此属性为 true。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.PortNumber">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.PortNumber" /> 属性包含要用于连接到服务器的端口号。</summary>
      <returns>返回一个表示端口号的整数。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Servers">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapDirectoryIdentifier.Servers" /> 属性包含此对象标识的服务器组。</summary>
      <returns>此对象标识的服务器组。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.LdapException">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.LdapException" /> 类是一个异常，当 LDAP 返回的错误代码未包含在 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 中时，将出现此异常。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.LdapException" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32)" /> 构造函数使用指定的错误代码创建 <see cref="T:System.DirectoryServices.Protocols.LdapException" /> 类的实例。 显示到客户端的默认消息为“与 LDAP 服务器之间的通信错误”。</summary>
      <param name="errorCode">LDAP 实现返回的错误代码。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32,System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32,System.String)" /> 构造函数使用指定的错误代码和消息创建 <see cref="T:System.DirectoryServices.Protocols.LdapException" /> 类的实例。</summary>
      <param name="errorCode">LDAP 实现返回的错误代码。</param>
      <param name="message">发生异常时显示到客户端的消息。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32,System.String,System.Exception)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32,System.String,System.Exception)" /> 构造函数使用指定的错误代码、消息和内部异常创建 <see cref="T:System.DirectoryServices.Protocols.LdapException" /> 类的实例。</summary>
      <param name="errorCode">LDAP 实现返回的错误代码。</param>
      <param name="message">发生异常时显示到客户端的消息。</param>
      <param name="inner">引发异常的内部异常（如果有）。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32,System.String,System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Int32,System.String,System.String)" /> 构造函数使用指定的错误代码、消息和 LDAP 服务器错误消息来创建 <see cref="T:System.DirectoryServices.Protocols.LdapException" /> 类的实例。</summary>
      <param name="errorCode">LDAP 实现返回的错误代码。</param>
      <param name="serverErrorMessage">LDAP 服务器错误消息。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 构造函数使用指定的序列化数据和流上下文创建 <see cref="T:System.DirectoryServices.Protocols.LdapException" /> 类的实例。</summary>
      <param name="info">序列化参数所需的数据。</param>
      <param name="context">与该参数相关联的序列化流的源和目标。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.String)" /> 构造函数使用指定的消息创建 <see cref="T:System.DirectoryServices.Protocols.LdapException" /> 类的实例。</summary>
      <param name="message">发生异常时显示到客户端的消息。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapException.#ctor(System.String,System.Exception)" /> 构造函数使用指定的消息和内部异常创建 <see cref="T:System.DirectoryServices.Protocols.LdapException" /> 类的实例。</summary>
      <param name="message">发生异常时显示到客户端的消息。</param>
      <param name="inner">引发异常的内部异常（如果有）。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapException.ErrorCode">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapException.ErrorCode" /> 属性包含 LDAP 错误代码。</summary>
      <returns>LDAP 错误代码。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法使用序列化参数所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="serializationInfo">序列化参数所需的数据。</param>
      <param name="streamingContext">与该参数相关联的序列化流的源和目标。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapException.PartialResults">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapException.PartialResults" /> 属性包含的 <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> 对象包含部分结果。</summary>
      <returns>包含部分结果的 <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> 对象。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapException.ServerErrorMessage">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapException.ServerErrorMessage" /> 属性包含一个 <see cref="T:System.String" />，而后者又包含 LDAP 服务器错误消息（如果存在）。</summary>
      <returns>一个包含 LDAP 服务器错误消息（如果存在）的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.LdapSessionOptions">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.LdapSessionOptions" /> 类用来获取或设置各种 LDAP 会话选项。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.AutoReconnect">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.AutoReconnect" /> 属性指定自动重新连接是否已启用。</summary>
      <returns>如果自动重新连接已启用，则此属性为 true，否则为 false。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.DomainName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.DomainName" /> 属性返回此连接绑定到的域。</summary>
      <returns>此连接绑定到的域。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapSessionOptions.FastConcurrentBind">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapSessionOptions.FastConcurrentBind" /> 方法支持快速并发绑定。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
      <exception cref="T:System.PlatformNotSupportedException">此方法不适用于当前平台。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">发生了 LDAP 错误。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.HostName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.HostName" /> 属性返回与连接关联的 LDAP 服务器的名称。</summary>
      <returns>与连接关联的 LDAP 服务器的名称。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.HostReachable">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.HostReachable" /> 属性指定主机是否可访问。</summary>
      <returns>如果主机可访问，则此属性为 true，否则为 false。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.LocatorFlag">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.LocatorFlag" /> 属性指定 <see cref="T:System.DirectoryServices.Protocols.LocatorFlags" /> 枚举的值之一，在定位域控制器时需要使用这些值。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.LocatorFlags" /> 枚举值之一，在定位域控制器时需要使用这些值。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.PingKeepAliveTimeout">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.PingKeepAliveTimeout" /> 属性包含 <see cref="T:System.TimeSpan" /> 对象，该对象指定在从服务器获得上一次响应之后，在发送“keep-alive”ping 命令之前客户端应该等待的最小秒数。</summary>
      <returns>一个 <see cref="T:System.TimeSpan" /> 对象，该对象指定在从服务器获得上一次响应之后，在发送“keep-alive”ping 命令之前客户端应该等待的最小秒数。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
      <exception cref="T:System.ArgumentException">指定的时间跨度小于 <see cref="F:System.TimeSpan.Zero" />。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.PingLimit">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.PingLimit" /> 属性包含未答复的 ping 命令的数目，这些 ping 命令是客户端在关闭连接之前发送的。</summary>
      <returns>未答复的 ping 命令的数目，这些 ping 命令是客户端在关闭连接之前发送的。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
      <exception cref="T:System.ArgumentException">指定的值小于零。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.PingWaitTimeout">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.PingWaitTimeout" /> 属性包含 <see cref="T:System.TimeSpan" /> 对象，该对象指定客户端在发送 ping 命令之后等待响应返回的毫秒数。</summary>
      <returns>一个 <see cref="T:System.TimeSpan" /> 对象，该对象指定客户端在发送 ping 命令之后等待响应返回的毫秒数。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
      <exception cref="T:System.ArgumentException">指定的时间跨度小于 <see cref="F:System.TimeSpan.Zero" />。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.ProtocolVersion">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.ProtocolVersion" /> 属性指定要使用的 LDAP 协议版本。</summary>
      <returns>要使用的 LDAP 协议版本。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.QueryClientCertificate" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.QueryClientCertificateCallback" /> 对象，该对象指定建立 SSL 连接时用来指定客户端证书的默认回调函数。</summary>
      <returns>一个 <see cref="T:System.DirectoryServices.Protocols.QueryClientCertificateCallback" /> 对象，该对象指定建立 SSL 连接时用来指定客户端证书的默认回调函数。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.ReferralCallback">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.ReferralCallback" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.ReferralCallback" /> 对象，该对象指定追踪转交 (Referral) 时使用的默认回调函数。</summary>
      <returns>一个 <see cref="T:System.DirectoryServices.Protocols.ReferralCallback" /> 对象，该对象指定追踪转交时使用的默认回调函数。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.ReferralChasing">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.ReferralChasing" /> 属性包含 <see cref="T:System.DirectoryServices.ReferralChasingOption" /> 对象，该对象指定 LDAP 库如何遵循 LDAP 服务器返回的转交。</summary>
      <returns>一个 <see cref="T:System.DirectoryServices.ReferralChasingOption" /> 对象，该对象指定 LDAP 库如何遵循 LDAP 服务器返回的转交。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">没有在 <see cref="T:System.DirectoryServices.ReferralChasingOption" /> 中定义指定值。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.ReferralHopLimit">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.ReferralHopLimit" /> 属性指定追踪转交时允许的跃点数。</summary>
      <returns>追踪转交时允许的跃点数。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
      <exception cref="T:System.ArgumentException">指定的值小于零。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.RootDseCache">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.RootDseCache" /> 属性启用内部 RootDSE 缓存。</summary>
      <returns>如果启用了缓存，则此属性为 true，否则为 false。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.SaslMethod">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.SaslMethod" /> 属性指定首选的简单身份验证和安全层 (SASL) 绑定方法。</summary>
      <returns>首选 SASL 绑定方法。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.Sealing">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.Sealing" /> 属性启用 Kerberos 加密。</summary>
      <returns>如果启用了 Kerberos，则此属性为 true，否则为 false。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.SecureSocketLayer">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.SecureSocketLayer" /> 属性启用连接上的安全套接字层。</summary>
      <returns>如果启用了安全套接字层，则此属性为 true，否则为 false。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.SecurityContext">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.SecurityContext" /> 属性指定与当前连接关联的安全上下文。</summary>
      <returns>与当前连接关联的安全上下文。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.SendTimeout">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.SendTimeout" /> 属性包含 <see cref="T:System.TimeSpan" /> 对象，该对象指定发送超时时间。</summary>
      <returns>指定发送超时时间的 <see cref="T:System.TimeSpan" /> 对象。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
      <exception cref="T:System.ArgumentException">指定的值小于 <see cref="F:System.TimeSpan.Zero" />。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.Signing">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.Signing" /> 属性启用 Kerberos 加密。</summary>
      <returns>如果启用了 Kerberos，则此属性为 true，否则为 false。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.SslInformation">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.SslInformation" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation" /> 对象，该对象包含有关当前安全连接的数据。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation" /> 对象，包含有关当前安全连接的数据。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.SspiFlag">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.SspiFlag" /> 属性指定要传递给安全支持提供程序接口 (SSPI) 的 InitializeSecurityContext 函数的标志。有关 InitializeSecurityContext 函数的更多信息，请参见位于 http://msdn.microsoft.com/library 上的 MSDN Library 中的 InitializeSecurityContext 函数主题。</summary>
      <returns>要传递给 SSPI InitializeSecurityContext 函数的标志。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapSessionOptions.StartTransportLayerSecurity(System.DirectoryServices.Protocols.DirectoryControlCollection)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapSessionOptions.StartTransportLayerSecurity(System.DirectoryServices.Protocols.DirectoryControlCollection)" /> 方法启动传输层安全加密。</summary>
      <param name="controls">包含要使用的控件的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControlCollection" /> 对象。</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.TlsOperationException">请求失败。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.LdapException">发生了 LDAP 错误。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.LdapSessionOptions.StopTransportLayerSecurity">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.LdapSessionOptions.StopTransportLayerSecurity" /> 方法结束传输层安全加密。</summary>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
      <exception cref="T:System.DirectoryServices.Protocols.TlsOperationException">请求失败。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.TcpKeepAlive">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.TcpKeepAlive" /> 属性启用 TCP Keep-alive。</summary>
      <returns>如果启用了 TCP Keep-alive，则此属性为 true，否则为 false。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.LdapSessionOptions.VerifyServerCertificate">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.LdapSessionOptions.VerifyServerCertificate" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.VerifyServerCertificateCallback" /> 对象，该对象指定建立 SSL 连接时用来验证服务器证书的默认回调方法。</summary>
      <returns>一个 <see cref="T:System.DirectoryServices.Protocols.VerifyServerCertificateCallback" /> 对象，该对象指定建立 SSL 连接时用来验证服务器证书的默认回调方法。</returns>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象已被释放。</exception>
    </member>
    <member name="T:System.DirectoryServices.Protocols.LocatorFlags">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.LocatorFlags" /> 枚举指定定位域控制器所需要的数据。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.AvoidSelf">
      <summary>指定返回的域控制器不能是当前计算机。 该值等于 16384 或 0x4000。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.DirectoryServicesPreferred">
      <summary>尝试查找支持目录服务功能（Windows 2000 或更高版本）的域控制器。 该值等于 32 或 0x20。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.DirectoryServicesRequired">
      <summary>要求返回的域控制器支持 Windows 2000 或更高版本。 该值等于 16 或 0x10。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.ForceRediscovery">
      <summary>强制忽略缓存域控制器。 该值等于 1 或 0x1。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.GCRequired">
      <summary>要求返回的域控制器为使用此域作为根的域目录林的全局目录服务器。 该值等于 64 或 0x40。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.GoodTimeServerPreferred">
      <summary>尝试查找作为可靠时间服务器的域控制器。 该值等于 8192 或 0x2000。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.IPRequired">
      <summary>在 DomainControllerInfo 的 DomainControllerAddress 成员中设置域控制器的 Internet 协议地址。 该值等于 512 或 0x200。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.IsDnsName">
      <summary>指定 DomainName 参数为 DNS 名。 该值等于 131072 或 0x20000。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.IsFlatName">
      <summary>指定 DomainName 参数为平面名称。 该值等于 65536 或 0x10000。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.KdcRequired">
      <summary>要求返回的域控制器当前正在运行 Kerberos 密钥分发中心服务。 该值等于 1024 或 0x400。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.None">
      <summary>不需要数据。 该值等于 0 或 0x0。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.OnlyLdapNeeded">
      <summary>指定返回的服务器为 LDAP 服务器。 该值等于 32768 或 0x8000。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.PdcRequired">
      <summary>要求返回的域控制器为该域的主域控制器。 该值等于 128 或 0x80。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.ReturnDnsName">
      <summary>指定返回的名称应为 DNS 名。 该值等于 1073741824 或 0x40000000。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.ReturnFlatName">
      <summary>指定该名称应为平直名。 该值等于 2147483648 或 0x80000000。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.TimeServerRequired">
      <summary>要求返回的域控制器当前正在运行 Windows 时间服务。 该值等于 2048 或 0x800。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.LocatorFlags.WriteableRequired">
      <summary>要求返回的域控制器为可写。 该值等于 4096 或 0x1000。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ModifyDNRequest">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.ModifyDNRequest" /> 类修改对象的识别名。 此类将对象移动到新的父级并且/或者重命名对象。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ModifyDNRequest.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ModifyDNRequest.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.ModifyDNRequest" /> 对象的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ModifyDNRequest.#ctor(System.String,System.String,System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ModifyDNRequest.#ctor(System.String,System.String,System.String)" /> 构造函数使用指定的对象名、父级名和新对象名创建 <see cref="T:System.DirectoryServices.Protocols.ModifyDNRequest" /> 对象的实例。</summary>
      <param name="distinguishedName">对象当前的识别名。</param>
      <param name="newParentDistinguishedName">对象新父级的识别名。</param>
      <param name="newName">对象的新识别名。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ModifyDNRequest.DeleteOldRdn">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.ModifyDNRequest.DeleteOldRdn" /> 属性指定是否删除对象的旧相对识别名 (RDN)。</summary>
      <returns>如果应删除 RDN，则此属性为 true；否则为 false。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ModifyDNRequest.DistinguishedName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.ModifyDNRequest.DistinguishedName" /> 属性包含对象的识别名。</summary>
      <returns>对象的识别名。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ModifyDNRequest.NewName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.ModifyDNRequest.NewName" /> 属性包含新对象名。</summary>
      <returns>新对象名。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ModifyDNRequest.NewParentDistinguishedName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.ModifyDNRequest.NewParentDistinguishedName" /> 属性包含对象新父级的识别名。</summary>
      <returns>对象新父级的识别名。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ModifyDNRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ModifyDNRequest.ToXmlNode(System.Xml.XmlDocument)" /> 方法从指定的 <see cref="T:System.Xml.XmlDocument" /> 对象创建 XML 节点。</summary>
      <returns>所产生的 <see cref="T:System.Xml.XmlElement" /> 对象。</returns>
      <param name="doc">
        <see cref="T:System.Xml.XmlDocument" /> 对象。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ModifyDNResponse">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> 将 <see cref="T:System.DirectoryServices.Protocols.ModifyDNResponse" /> 类作为对 <see cref="T:System.DirectoryServices.Protocols.ModifyDNRequest" /> 的响应返回。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ModifyRequest">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.ModifyRequest" /> 类修改现有目录项的特性。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ModifyRequest.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ModifyRequest.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.ModifyRequest" /> 类的实例。 此构造函数创建一个空请求。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ModifyRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttributeModification[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ModifyRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttributeModification[])" /> 构造函数使用指定的识别名和修改创建 <see cref="T:System.DirectoryServices.Protocols.ModifyRequest" /> 类的实例。</summary>
      <param name="distinguishedName">要修改的对象的识别名。</param>
      <param name="modifications">指定修改的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModification" /> 对象组成的数组。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ModifyRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttributeOperation,System.String,System.Object[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ModifyRequest.#ctor(System.String,System.DirectoryServices.Protocols.DirectoryAttributeOperation,System.String,System.Object[])" /> 构造函数使用指定的识别名、修改、特性名称和值创建 <see cref="T:System.DirectoryServices.Protocols.ModifyRequest" /> 类的实例。</summary>
      <param name="distinguishedName">要修改的对象的识别名。</param>
      <param name="operation">一个 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeOperation" /> 对象，它指定要执行的修改。</param>
      <param name="attributeName">要修改的特性的名称。 此参数不能为 null。</param>
      <param name="values">特性的新值。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ModifyRequest.DistinguishedName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.ModifyRequest.DistinguishedName" /> 属性包含要修改的对象的识别名。</summary>
      <returns>要修改的对象的识别名。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ModifyRequest.Modifications">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.ModifyRequest.Modifications" /> 属性包含指定特性修改列表的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> 对象。</summary>
      <returns>一个指定特性修改列表的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttributeModificationCollection" /> 对象。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ModifyRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ModifyRequest.ToXmlNode(System.Xml.XmlDocument)" /> 方法从指定的 <see cref="T:System.Xml.XmlDocument" /> 对象创建 XML 节点。</summary>
      <returns>所产生的 <see cref="T:System.Xml.XmlElement" /> 对象。</returns>
      <param name="doc">
        <see cref="T:System.Xml.XmlDocument" /> 对象。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ModifyResponse">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" /> 将 <see cref="T:System.DirectoryServices.Protocols.ModifyResponse" /> 类作为对 <see cref="T:System.DirectoryServices.Protocols.ModifyRequest" /> 的响应返回。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.NotifyOfNewConnectionCallback">
      <summary>如果在跟踪检索时创建了新连接，则调用 <see cref="T:System.DirectoryServices.Protocols.NotifyOfNewConnectionCallback" /> 委托。</summary>
      <returns>如果要缓存连接，则为 true；否则为 false 。</returns>
      <param name="primaryConnection">一个指定主连接的 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象。</param>
      <param name="referralFromConnection">一个 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象，它指定提供了检索的连接。</param>
      <param name="newDistinguishedName">一个 <see cref="T:System.String" /> 对象，它指定检索服务器中所需项的识别名。</param>
      <param name="identifier">一个 <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> 对象，它指定所检索的 LDAP 目录的标识符。</param>
      <param name="newConnection">一个 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象，它指定在跟踪检索期间创建的新连接。</param>
      <param name="credential">一个 <see cref="T:System.Net.NetworkCredential" /> 对象，它指定传递到检索服务器的凭据。</param>
      <param name="currentUserToken">当前用户的 LUID。</param>
      <param name="errorCodeFromBind">一个 <see cref="T:System.Int32" /> 对象，它指定绑定操作中的错误代码。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.PageResultRequestControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.PageResultRequestControl" /> 类指示服务器以指定的页大小返回搜索结果。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PageResultRequestControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.PageResultRequestControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.PageResultRequestControl" /> 类的新实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PageResultRequestControl.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.PageResultRequestControl.#ctor(System.Byte[])" /> 构造函数使用指定的页搜索 Cookie 创建 <see cref="T:System.DirectoryServices.Protocols.PageResultRequestControl" /> 类的新实例。</summary>
      <param name="cookie">指定用于后续分页结果搜索调用的 Cookie。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PageResultRequestControl.#ctor(System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.PageResultRequestControl.#ctor(System.Int32)" /> 构造函数使用请求的页大小创建 <see cref="T:System.DirectoryServices.Protocols.PageResultRequestControl" /> 类的实例。</summary>
      <param name="pageSize">请求的页大小。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.PageResultRequestControl.Cookie">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.PageResultRequestControl.Cookie" /> 属性指定用于后续分页结果搜索调用的页搜索 Cookie。</summary>
      <returns>用于后续分页结果搜索调用的页搜索 Cookie。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PageResultRequestControl.GetValue">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.PageResultRequestControl.GetValue" /> 方法返回与该控件关联的页大小和 Cookie。</summary>
      <returns>与该控件关联的页大小和 Cookie。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.PageResultRequestControl.PageSize">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.PageResultRequestControl.PageSize" /> 属性指定请求的页大小。</summary>
      <returns>请求的页大小。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.PageResultResponseControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.PageResultResponseControl" /> 类是一个目录控件，用于将页数据从服务器传送到客户端。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.PageResultResponseControl.Cookie">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.PageResultResponseControl.Cookie" /> 属性包含服务器返回的页搜索 Cookie。</summary>
      <returns>服务器返回的页搜索 Cookie。如果 Cookie 为空，则分页搜索结束。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.PageResultResponseControl.TotalCount">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.PageResultResponseControl.TotalCount" /> 属性包含估计的结果集大小。</summary>
      <returns>所返回项的总计数的估计值。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.PartialResultProcessing">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.PartialResultProcessing" /> 枚举指定正处理的部分结果所要求的类型。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.PartialResultProcessing.NoPartialResultSupport">
      <summary>应用程序将不检索部分结果。 该值等于 0。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.PartialResultProcessing.ReturnPartialResults">
      <summary>应用程序将检索部分结果。 该值等于 1。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.PartialResultProcessing.ReturnPartialResultsAndNotifyCallback">
      <summary>应用程序将检索部分结果并使用回调机制。 该值等于 2。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.PartialResultsCollection">
      <summary>该 <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> 类表示从尚未完成的异步操作返回的任何部分结果。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PartialResultsCollection.Contains(System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.PartialResultsCollection.Contains(System.Object)" />方法确定此 <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" />对象是否包含指定的 <see cref="T:System.Object" />。</summary>
      <returns>如果指定的 <see cref="T:System.Object" /> 属于该集合，则为 true；否则为 false。</returns>
      <param name="value">要搜索的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PartialResultsCollection.CopyTo(System.Object[],System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.PartialResultsCollection.CopyTo(System.Object[],System.Int32)" /> 方法将整个集合复制到一维数组中（从目标数组的指定索引处开始）。</summary>
      <param name="values">一个一维数组，它是从 <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> 对象复制的元素的目标。</param>
      <param name="index">
        <paramref name="values" /> 中从零开始的索引，这是开始复制的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="values" /> 是多维的 - 或 - 源 <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> 中的元素数目大于从 <paramref name="index" /> 到目标 <paramref name="values" /> 末尾之间的可用空间。</exception>
      <exception cref="T:System.InvalidCastException">源 <see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" /> 的类型无法自动转换为目标 <paramref name="values" /> 的类型。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PartialResultsCollection.IndexOf(System.Object)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.PartialResultsCollection.IndexOf(System.Object)" /> 方法返回在<see cref="T:System.DirectoryServices.Protocols.PartialResultsCollection" />中指定的<see cref="T:System.Object" />的第一个匹配项从零开始的索引。</summary>
      <returns>如果找到指定的 <see cref="T:System.Object" />，则为其索引值；如果没有找到指定的对象，则为 -1。</returns>
      <param name="value">为其返回索引的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.PartialResultsCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.PartialResultsCollection.Item(System.Int32)" /> 属性包含指定索引处的 <see cref="T:System.Object" />。</summary>
      <returns>位于指定索引处的 <see cref="T:System.Object" />。</returns>
      <param name="index">
        <see cref="T:System.Object" /> 的索引值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零，或者 <paramref name="index" /> 等于或大于集合中的项数。</exception>
    </member>
    <member name="T:System.DirectoryServices.Protocols.PermissiveModifyControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.PermissiveModifyControl" /> 类用于修改 <see cref="T:System.DirectoryServices.Protocols.ModifyRequest" /> 对象的行为。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.PermissiveModifyControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.PermissiveModifyControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.PermissiveModifyControl" /> 类的实例。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.QueryClientCertificateCallback">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.QueryClientCertificateCallback" /> 委托获取或设置默认回调函数，该函数用于在建立 SSL 连接时指定客户端证书。</summary>
      <returns>用于在建立 SSL 连接时指定客户端证书的默认回调函数。</returns>
      <param name="connection">一个指定连接的 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象。</param>
      <param name="trustedCAs">一个 <see cref="T:System.Byte" /> 数组组成的数组，指定受信任的证书颁发机构 (CA)。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.QueryForConnectionCallback">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.QueryForConnectionCallback" /> 委托确定是否有可供使用的缓存连接。</summary>
      <returns>如果有缓存的 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 可用，则返回它。 如果没有可用的缓存连接，则返回 NULL。</returns>
      <param name="primaryConnection">一个指定主连接的 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象。</param>
      <param name="referralFromConnection">一个 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象，它指定提供检索的连接。</param>
      <param name="newDistinguishedName">一个 <see cref="T:System.String" /> 对象，它指定检索服务器中所需项的识别名 (DN)。</param>
      <param name="identifier">一个 <see cref="T:System.DirectoryServices.Protocols.LdapDirectoryIdentifier" /> 对象，它指定所检索的 LDAP 目录的标识符。</param>
      <param name="credential">一个 <see cref="T:System.Net.NetworkCredential" /> 对象，它指定传递到检索服务器的凭据。</param>
      <param name="currentUserToken">当前用户的 LUID。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.QuotaControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.QuotaControl" /> 类用于传递安全原则的安全标识符 (SID) 以检索与配额有关的数据。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.QuotaControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.QuotaControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.QuotaControl" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.QuotaControl.#ctor(System.Security.Principal.SecurityIdentifier)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.QuotaControl.#ctor(System.Security.Principal.SecurityIdentifier)" /> 构造函数使用指定的 SID 创建 <see cref="T:System.DirectoryServices.Protocols.QuotaControl" /> 类的实例。</summary>
      <param name="querySid">安全原则的 SID。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.QuotaControl.GetValue">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.QuotaControl.GetValue" /> 方法返回与此查询关联的 SID。</summary>
      <returns>与此查询关联的 SID。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.QuotaControl.QuerySid">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.QuotaControl.QuerySid" /> 属性包含安全原则的 SID。</summary>
      <returns>安全原则的 SID。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ReferralCallback">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.ReferralCallback" /> 类包含用作检索回调方法的委托。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ReferralCallback.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ReferralCallback.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.ReferralCallback" /> 类的实例。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ReferralCallback.DereferenceConnection">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.ReferralCallback.DereferenceConnection" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.DereferenceConnectionCallback" /> 对象。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.DereferenceConnectionCallback" /> 对象。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ReferralCallback.NotifyNewConnection">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.ReferralCallback.NotifyNewConnection" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.NotifyOfNewConnectionCallback" /> 对象。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.NotifyOfNewConnectionCallback" /> 对象。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.ReferralCallback.QueryForConnection">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.ReferralCallback.QueryForConnection" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.QueryForConnectionCallback" /> 对象。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.QueryForConnectionCallback" /> 对象。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ReferralChasingOptions">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.ReferralChasingOptions" /> 枚举指定是否以及如何追踪检索跟踪。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ReferralChasingOptions.All">
      <summary>跟踪从属或外部类型的检索。 该值等于 96 或 0x60。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ReferralChasingOptions.External">
      <summary>跟踪外部检索。 该值等于 64 或 0x40。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ReferralChasingOptions.None">
      <summary>从不检索被引用的服务器。 设置此选项可防止客户端在检索进程中联系其他服务器。 该值等于 0 或 0x0。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ReferralChasingOptions.Subordinate">
      <summary>只跟踪作为目录树中的从属命名上下文的从属检索。 对于分页搜索，ADSI LDAP 提供程序始终会关闭这一标记。 该值等于 32 或 0x20。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ResultCode">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 枚举指定操作结果代码。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.AdminLimitExceeded">
      <summary>超出了服务器上的管理限制。 该值等于 11。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.AffectsMultipleDsas">
      <summary>多个目录服务代理受到影响。 该值等于 71。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.AliasDereferencingProblem">
      <summary>取消引用别名时发生问题。 该值等于 36。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.AliasProblem">
      <summary>该别名无效。 该值等于 33。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.AttributeOrValueExists">
      <summary>该特性存在或者已经分配该值。 该值等于 20。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.AuthMethodNotSupported">
      <summary>不支持此身份验证方法。 该值等于 7。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.Busy">
      <summary>该服务器正忙。 该值等于 51。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.CompareFalse">
      <summary>该特性和已知值不匹配。 该值等于 5。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.CompareTrue">
      <summary>该特性和已知值匹配。 该值等于 6。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.ConfidentialityRequired">
      <summary>此操作要求保密。 该值等于 13。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.ConstraintViolation">
      <summary>请求中的一个值不符合某些约束。 该值等于 19。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.EntryAlreadyExists">
      <summary>该对象已经存在。 该值等于 68。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.InappropriateAuthentication">
      <summary>提供的身份验证不合适。 该值等于 48。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.InappropriateMatching">
      <summary>该匹配规则不适用于指定的特性类型。 该值等于 18。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.InsufficientAccessRights">
      <summary>该用户没有足够的访问权限。 该值等于 50。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.InvalidAttributeSyntax">
      <summary>该语法无效。 该值等于 21。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.InvalidDNSyntax">
      <summary>该识别名包含无效的语法。 该值等于 34。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.LoopDetect">
      <summary>引用值链已经循环回到引用服务器。 该值等于 54。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.NamingViolation">
      <summary>发生了命名冲突。 该值等于 64。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.NoSuchAttribute">
      <summary>请求的特性不存在。 该值等于 16。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.NoSuchObject">
      <summary>该对象不存在。 该值等于 32。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.NotAllowedOnNonLeaf">
      <summary>不允许对非叶对象执行此操作。 该值等于 66。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.NotAllowedOnRdn">
      <summary>不允许对相对识别名 (RDN) 执行此操作。 该值等于 67。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.ObjectClassModificationsProhibited">
      <summary>该请求正尝试修改无法修改的对象类。 该值等于 69。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.ObjectClassViolation">
      <summary>发生了对象类冲突。 该值等于 65。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.OffsetRangeError">
      <summary>搜索结果超出指定的偏移量范围。 该值等于 61。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.OperationsError">
      <summary>发生操作错误。 该值等于 1。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.Other">
      <summary>发生未知错误。 该值等于 80。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.ProtocolError">
      <summary>发生协议错误。 该值等于 2。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.Referral">
      <summary>从服务器返回了引用值。 该值等于 10。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.ReferralV2">
      <summary>只收到了部分结果和引用值。 该值等于 9。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.ResultsTooLarge">
      <summary>返回的结果太大。 该值等于 70。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.SaslBindInProgress">
      <summary>正在进行简单身份验证和安全层 (SASL) 绑定。 该值等于 14。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.SizeLimitExceeded">
      <summary>超出了大小限制。 该值等于 4。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.SortControlMissing">
      <summary>该搜索需要一个 SORT 控件。 该值等于 60。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.StrongAuthRequired">
      <summary>此操作要求强身份验证。 该值等于 8。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.Success">
      <summary>已成功完成调用。 该值等于 0。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.TimeLimitExceeded">
      <summary>超出了由服务器端时间限制参数设置的时间限制。 该值等于 3。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.Unavailable">
      <summary>该服务器不可用。 该值等于 52。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.UnavailableCriticalExtension">
      <summary>服务器不支持该控件， 而该控件至关重要。 该值等于 12。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.UndefinedAttributeType">
      <summary>该类型未定义。 该值等于 17。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.UnwillingToPerform">
      <summary>该服务器无法处理目录请求。 该值等于 53。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.ResultCode.VirtualListViewError">
      <summary>尝试执行请求的虚拟列表视图操作时出错。 该值等于 76。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchOption">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.SearchOption" /> 枚举指定用于定义搜索的行为方式的搜索选项。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SearchOption.DomainScope">
      <summary>防止在返回搜索结果时生成检索。 该值等于 1。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SearchOption.PhantomRoot">
      <summary>指示服务器搜索从属于搜索基础的所有命名上下文。 该值等于 2。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchOptionsControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.SearchOptionsControl" /> 类用于将标志传递到服务器以控制搜索行为。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchOptionsControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SearchOptionsControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.SearchOptionsControl" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchOptionsControl.#ctor(System.DirectoryServices.Protocols.SearchOption)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SearchOptionsControl.#ctor(System.DirectoryServices.Protocols.SearchOption)" /> 构造函数使用指定的搜索选项创建 <see cref="T:System.DirectoryServices.Protocols.SearchOptionsControl" /> 类的实例。</summary>
      <param name="flags">指定搜索行为的 <see cref="T:System.DirectoryServices.Protocols.SearchOption" /> 枚举值。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchOptionsControl.GetValue">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SearchOptionsControl.GetValue" /> 方法返回此对象的搜索选项。</summary>
      <returns>与此控件关联的搜索选项。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchOptionsControl.SearchOption">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchOptionsControl.SearchOption" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.SearchOption" /> 枚举的一个值，该值指定搜索行为。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.SearchOption" /> 枚举的一个值，该值指定搜索行为。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">该值不是 <see cref="T:System.DirectoryServices.Protocols.SearchOption" /> 值之一。</exception>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchRequest">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> 类启动搜索操作。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchRequest.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SearchRequest.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> 类的实例。 此构造函数创建一个空请求。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchRequest.#ctor(System.String,System.String,System.DirectoryServices.Protocols.SearchScope,System.String[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SearchRequest.#ctor(System.String,System.String,System.DirectoryServices.Protocols.SearchScope,System.String[])" /> 构造函数使用指定的名称、搜索筛选器、范围和特性创建 <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> 类的实例。</summary>
      <param name="distinguishedName">要从其处开始搜索的对象的识别名。</param>
      <param name="ldapFilter">LDAP 搜索筛选器。</param>
      <param name="searchScope">
        <see cref="T:System.DirectoryServices.Protocols.SearchScope" /> 的一个值，用于指定搜索范围。</param>
      <param name="attributeList">一个在结果集内包含请求的特性的数组。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchRequest.#ctor(System.String,System.Xml.XmlDocument,System.DirectoryServices.Protocols.SearchScope,System.String[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SearchRequest.#ctor(System.String,System.Xml.XmlDocument,System.DirectoryServices.Protocols.SearchScope,System.String[])" /> 构造函数使用指定的名称、搜索筛选器、范围和特性创建 <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> 类的实例。</summary>
      <param name="distinguishedName">要搜索的对象的识别名。</param>
      <param name="filter">DSML v2 搜索筛选器。</param>
      <param name="searchScope">指定搜索范围的 <see cref="T:System.DirectoryServices.Protocols.SearchScope" /> 值。 默认值为 <see cref="T:System.DirectoryServices.Protocols.SearchScope" />。</param>
      <param name="attributeList">一个在结果集内包含请求的特性的数组。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.Aliases">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchRequest.Aliases" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.DereferenceAlias" /> 的一个值，该值指定取消引用别名行为。</summary>
      <returns>一个 <see cref="T:System.DirectoryServices.Protocols.DereferenceAlias" /> 值，用于指定取消引用别名行为。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">该值不是 <see cref="T:System.DirectoryServices.Protocols.DereferenceAlias" /> 的成员。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.Attributes">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchRequest.Attributes" /> 属性包含所请求对象的特性。</summary>
      <returns>所请求对象的特性。 将此属性设置为 null 可检索所有特性。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Collections.Specialized.StringCollection" /> 对象中的一个字符串是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.DistinguishedName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchRequest.DistinguishedName" /> 属性包含所请求对象的识别名。</summary>
      <returns>所请求对象的识别名。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.Filter">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchRequest.Filter" /> 属性包含搜索筛选器。</summary>
      <returns>搜索筛选器。 如果该值是字符串，则此属性是 LDAP 搜索筛选器。 如果该值是 XML 文档，则此属性是 DSML v2 搜索筛选器。 任何其他类型都将引发异常。</returns>
      <exception cref="T:System.ArgumentException">该值不是字符串或 XML 文档。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.Scope">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchRequest.Scope" /> 属性包含 <see cref="T:System.DirectoryServices.SearchScope" /> 的一个值，该值指定搜索范围。</summary>
      <returns>指定搜索范围的 <see cref="T:System.DirectoryServices.SearchScope" /> 的值之一。</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">该值不是 <see cref="T:System.DirectoryServices.SearchScope" /> 的成员。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.SizeLimit">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchRequest.SizeLimit" /> 属性包含搜索请求中返回的最多对象数。</summary>
      <returns>搜索请求中返回的最多对象数。</returns>
      <exception cref="T:System.ArgumentException">值小于零。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.TimeLimit">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchRequest.TimeLimit" /> 属性包含一个 <see cref="T:System.TimeSpan" /> 对象，该对象指定在服务器处理搜索请求时所允许的时间范围。</summary>
      <returns>一个 <see cref="T:System.TimeSpan" /> 对象，该对象指定在服务器处理搜索请求时所允许的时间范围。</returns>
      <exception cref="T:System.ArgumentException">值小于 <see cref="F:System.TimeSpan.Zero" />。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchRequest.ToXmlNode(System.Xml.XmlDocument)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SearchRequest.ToXmlNode(System.Xml.XmlDocument)" /> 方法从指定的 <see cref="T:System.Xml.XmlDocument" /> 对象创建 XML 节点。</summary>
      <returns>所产生的 <see cref="T:System.Xml.XmlElement" /> 对象。</returns>
      <param name="doc">
        <see cref="T:System.Xml.XmlDocument" /> 对象。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchRequest.TypesOnly">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchRequest.TypesOnly" /> 属性指定搜索是否只返回特性名称，而不返回特性值。</summary>
      <returns>如果此属性为 true，则搜索只返回特性名称。 如果此属性为 false，则搜索返回特性名称和值。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchResponse">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.SearchResponse" /> 类被服务器作为响应发送到 <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> 对象。 此响应包含零个或多个 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> 对象，并且包含零个或多个 <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> 对象。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResponse.Controls">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResponse.Controls" /> 属性包含服务器返回的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象。</summary>
      <returns>服务器返回的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResponse.Entries">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResponse.Entries" /> 属性包含一个 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntryCollection" /> 对象，该对象包含搜索返回的项。</summary>
      <returns>一个包含搜索返回的项的 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntryCollection" /> 对象。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResponse.ErrorMessage">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResponse.ErrorMessage" /> 属性包含此操作的错误信息（如果有）。</summary>
      <returns>此操作的错误信息（如果有）。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResponse.MatchedDN">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResponse.MatchedDN" /> 属性包含服务器返回的匹配识别名。</summary>
      <returns>服务器返回的匹配识别名。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResponse.References">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResponse.References" /> 属性包含一个 <see cref="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection" /> 对象，该对象包含服务器返回的搜索引用。</summary>
      <returns>一个包含服务器返回的搜索引用的 <see cref="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection" /> 对象。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResponse.Referral">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResponse.Referral" /> 属性包含服务器检索。</summary>
      <returns>服务器检索。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResponse.ResultCode">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResponse.ResultCode" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 的值，该值指定操作的结果代码。</summary>
      <returns>操作的结果代码。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchResultAttributeCollection">
      <summary>该 <see cref="T:System.DirectoryServices.Protocols.SearchResultAttributeCollection" /> 类是 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象集合。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultAttributeCollection.AttributeNames">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResultAttributeCollection.AttributeNames" /> 属性包含此集合中特性的名称。</summary>
      <returns>此集合中属性的名称。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultAttributeCollection.Contains(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SearchResultAttributeCollection.Contains(System.String)" /> 方法确定集合是否包含指定的 <paramref name="attributeName" />集合。</summary>
      <returns>如果集合包含 attributeName，则为 true，否则为 false。</returns>
      <param name="attributeName">要查找的特性的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attributeName" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultAttributeCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryAttribute[],System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SearchResultAttributeCollection.CopyTo(System.DirectoryServices.Protocols.DirectoryAttribute[],System.Int32)" /> 方法将整个集合复制到一维数组中（从目标数组的指定索引处开始）。</summary>
      <param name="array">一个一维数组，它是从 <see cref="T:System.DirectoryServices.Protocols.SearchResultAttributeCollection" /> 对象复制的元素的目标。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，这是开始复制的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多维的 - 或 - 源 <see cref="T:System.DirectoryServices.Protocols.SearchResultAttributeCollection" /> 中的元素数目大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
      <exception cref="T:System.InvalidCastException">源 <see cref="T:System.DirectoryServices.Protocols.SearchResultAttributeCollection" /> 的类型无法自动转换为目标 <paramref name="array" /> 的类型。</exception>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultAttributeCollection.Item(System.String)">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResultAttributeCollection.Item(System.String)" /> 属性包含 <paramref name="attributeName" /> 指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</summary>
      <returns>该 <paramref name="attributeName" /> 指定的 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象。</returns>
      <param name="attributeName">此特性的名称。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultAttributeCollection.Values">
      <summary>The <see cref="P:System.DirectoryServices.Protocols.SearchResultAttributeCollection.Values" /> 属性包含此集合中特性的值。</summary>
      <returns>此集合中属性的值。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchResultEntry">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> 类包含在结果集内返回的对象。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultEntry.Attributes">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResultEntry.Attributes" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象的集合。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryAttribute" /> 对象的集合。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultEntry.Controls">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResultEntry.Controls" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象组成的一个数组。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象的数组。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultEntry.DistinguishedName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResultEntry.DistinguishedName" /> 属性包含返回项的识别名。</summary>
      <returns>返回项的识别名。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchResultEntryCollection">
      <summary>该 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntryCollection" /> 类包含结果集内返回的 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> 对象的集合。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultEntryCollection.Contains(System.DirectoryServices.Protocols.SearchResultEntry)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SearchResultEntryCollection.Contains(System.DirectoryServices.Protocols.SearchResultEntry)" /> 方法确定集合是否包含指定的 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> 对象。</summary>
      <returns>如果集合包含 <paramref name="value" />，则为 true；否则为 false。</returns>
      <param name="value">要定位的 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" />。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultEntryCollection.CopyTo(System.DirectoryServices.Protocols.SearchResultEntry[],System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SearchResultEntryCollection.CopyTo(System.DirectoryServices.Protocols.SearchResultEntry[],System.Int32)" /> 方法将整个集合复制到一维数组中（从目标数组的指定索引处开始）。</summary>
      <param name="values">一个一维数组，它是从 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntryCollection" /> 对象复制的元素的目标。</param>
      <param name="index">
        <paramref name="values" /> 中从零开始的索引，这是开始复制的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="values" /> 是多维的 - 或 - 源 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntryCollection" /> 中的元素数目大于从 <paramref name="index" /> 到目标 <paramref name="values" /> 末尾之间的可用空间。</exception>
      <exception cref="T:System.InvalidCastException">源 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntryCollection" /> 的类型无法自动转换为目标 <paramref name="array" /> 的类型。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultEntryCollection.IndexOf(System.DirectoryServices.Protocols.SearchResultEntry)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SearchResultEntryCollection.IndexOf(System.DirectoryServices.Protocols.SearchResultEntry)" /> 方法返回在 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntryCollection" /> 中指定的 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> 对象的第一个匹配项从零开始的索引。</summary>
      <returns>如果找到指定的 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> 对象，则为其索引值；否则为 -1。</returns>
      <param name="value">为其返回索引的 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> 对象。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultEntryCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResultEntryCollection.Item(System.Int32)" /> 属性包含指定 <paramref name="index" /> 处的 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> 对象。</summary>
      <returns>位于指定 <paramref name="index" /> 处的 <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> 对象。</returns>
      <param name="index">
        <see cref="T:System.DirectoryServices.Protocols.SearchResultEntry" /> 对象的索引值。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchResultReference">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> 类包含服务器返回的单个搜索引用。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultReference.Controls">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResultReference.Controls" /> 属性包含搜索引用中由服务器返回的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象组成的数组。</summary>
      <returns>搜索引用中由服务器返回的 <see cref="T:System.DirectoryServices.Protocols.DirectoryControl" /> 对象组成的数组。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultReference.Reference">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResultReference.Reference" /> 属性包含搜索引用中由服务器返回的 <see cref="T:System.Uri" /> 对象组成的数组。</summary>
      <returns>搜索引用中由服务器返回的 <see cref="T:System.Uri" /> 对象组成的数组。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection" /> 类包含 <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> 对象的集合。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultReferenceCollection.Contains(System.DirectoryServices.Protocols.SearchResultReference)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SearchResultReferenceCollection.Contains(System.DirectoryServices.Protocols.SearchResultReference)" /> 方法确定集合是否包含指定的 <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> 对象。</summary>
      <returns>如果集合包含 <paramref name="value" />，则为 true；否则为 false。</returns>
      <param name="value">要定位的 <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> 对象。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultReferenceCollection.CopyTo(System.DirectoryServices.Protocols.SearchResultReference[],System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SearchResultReferenceCollection.CopyTo(System.DirectoryServices.Protocols.SearchResultReference[],System.Int32)" /> 方法将整个集合复制到一维数组中（从目标数组的指定索引处开始）。</summary>
      <param name="values">一个一维数组，它是从 <see cref="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection" /> 对象复制的元素的目标。</param>
      <param name="index">
        <paramref name="values" /> 中从零开始的索引，这是开始复制的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="values" /> 是多维的 - 或 - 源 <see cref="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection" /> 中的元素数目大于从 <paramref name="index" /> 到目标 <paramref name="values" /> 末尾之间的可用空间。</exception>
      <exception cref="T:System.InvalidCastException">源 <see cref="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection" /> 的类型无法自动转换为目标 <paramref name="array" /> 的类型。</exception>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SearchResultReferenceCollection.IndexOf(System.DirectoryServices.Protocols.SearchResultReference)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SearchResultReferenceCollection.IndexOf(System.DirectoryServices.Protocols.SearchResultReference)" /> 方法返回在 <see cref="T:System.DirectoryServices.Protocols.SearchResultReferenceCollection" /> 中指定的 <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> 对象的第一个匹配项从零开始的索引。</summary>
      <returns>指定的 <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> 对象的索引值（如果找到的话）。 如果未找到对象，此方法返回 -1。</returns>
      <param name="value">为其返回索引的 <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> 对象。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SearchResultReferenceCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SearchResultReferenceCollection.Item(System.Int32)" /> 属性包含指定 <paramref name="index" /> 处的 <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> 对象。</summary>
      <returns>位于指定 <paramref name="index" /> 处的 <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> 对象。</returns>
      <param name="index">
        <see cref="T:System.DirectoryServices.Protocols.SearchResultReference" /> 对象的索引值。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SearchScope">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.SearchScope" /> 枚举指定搜索范围。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SearchScope.Base">
      <summary>只搜索指定的基对象。 该值等于 0。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SearchScope.OneLevel">
      <summary>搜索基对象的子对象，但不搜索基对象本身。 该值等于 1。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SearchScope.Subtree">
      <summary>搜索基对象和所有子对象。 该值等于 2。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl" /> 类用于将标志传递到服务器以控制各种安全描述符行为。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl" /> 类的新实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.#ctor(System.DirectoryServices.Protocols.SecurityMasks)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.#ctor(System.DirectoryServices.Protocols.SecurityMasks)" /> 构造函数使用指定的安全掩码创建 <see cref="T:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl" /> 类的新实例。</summary>
      <param name="masks">指定安全描述符选项的 <see cref="T:System.DirectoryServices.Protocols.SecurityMasks" /> 值的组合。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.GetValue">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.GetValue" /> 方法返回为此控件指定的安全描述符选项。</summary>
      <returns>为此控件指定的安全描述符选项。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.SecurityMasks">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SecurityDescriptorFlagControl.SecurityMasks" /> 属性包含指定安全描述符选项的 <see cref="T:System.DirectoryServices.Protocols.SecurityMasks" /> 值的组合。</summary>
      <returns>指定安全描述符选项的 <see cref="T:System.DirectoryServices.Protocols.SecurityMasks" /> 值的组合。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SecurityMasks">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.SecurityMasks" /> 枚举指定各种安全描述符选项。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityMasks.Dacl">
      <summary>自由访问控制列表 (DACL) 安全描述符标志。 该值等于 4 或 0x4。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityMasks.Group">
      <summary>主要组安全描述符标志。 该值等于 2 或 0x2。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityMasks.None">
      <summary>未设置安全描述符标志。 该值等于 0 或 0x0。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityMasks.Owner">
      <summary>所有者安全描述符标志。 该值等于 1 或 0x1。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityMasks.Sacl">
      <summary>系统访问控制列表 (SACL) 安全描述符标志。该值等于 8 或 0x8。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation" /> 类包含有关安全连接的数据。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.AlgorithmIdentifier">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.AlgorithmIdentifier" /> 属性包含连接使用的加密算法。</summary>
      <returns>连接使用的加密算法。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.CipherStrength">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.CipherStrength" /> 属性包含该连接所使用的加密算法的密码长度。</summary>
      <returns>该连接所使用的加密算法的密码长度。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.ExchangeStrength">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.ExchangeStrength" /> 属性包含该连接的交换长度。</summary>
      <returns>该连接的交换长度。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.Hash">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.Hash" /> 属性包含该连接使用的哈希算法。</summary>
      <returns>该连接使用的哈希算法。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.HashStrength">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.HashStrength" /> 属性包含该连接所使用的哈希算法的长度。</summary>
      <returns>该连接所使用的哈希算法的长度。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.KeyExchangeAlgorithm">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.KeyExchangeAlgorithm" /> 属性包含该连接使用的密钥交换算法。</summary>
      <returns>该连接使用的密钥交换算法。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.Protocol">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SecurityPackageContextConnectionInformation.Protocol" /> 属性包含该连接使用的安全协议。</summary>
      <returns>该连接使用的安全协议。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SecurityProtocol">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.SecurityProtocol" /> 枚举可用于指定连接使用的安全协议。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Pct1Client">
      <summary>指示客户端使用的是 PCT1 协议。 该值等于 2。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Pct1Server">
      <summary>指示服务器使用的是 PCT1 协议。 该值等于 1。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Ssl2Client">
      <summary>指示客户端使用的是 SSL2 协议。 该值等于 8。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Ssl2Server">
      <summary>指示服务器使用的是 SSL2 协议。 该值等于 4。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Ssl3Client">
      <summary>指示客户端使用的是 SSL3 协议。 该值等于 32。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Ssl3Server">
      <summary>指示服务器使用的是 SSL3 协议。 该值等于 16。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Tls1Client">
      <summary>指示客户端使用的是 TLS1 协议。 该值等于 128。</summary>
    </member>
    <member name="F:System.DirectoryServices.Protocols.SecurityProtocol.Tls1Server">
      <summary>指示服务器使用的是 TLS1 协议。 该值等于 64。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.ShowDeletedControl">
      <summary>将 <see cref="T:System.DirectoryServices.Protocols.ShowDeletedControl" /> 类与 <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> 结合使用可指定搜索结果中应包含与搜索筛选器匹配的所有已删除对象。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.ShowDeletedControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.ShowDeletedControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.ShowDeletedControl" /> 类的实例。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SortKey">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.SortKey" /> 类存储供排序控件使用的排序条件。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SortKey.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SortKey.#ctor" /> 构造函数创建并初始化 <see cref="T:System.DirectoryServices.Protocols.SortKey" /> 类的新实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SortKey.#ctor(System.String,System.String,System.Boolean)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SortKey.#ctor(System.String,System.String,System.Boolean)" /> 构造函数使用指定的特性名称、匹配规则和排序顺序创建并初始化 <see cref="T:System.DirectoryServices.Protocols.SortKey" /> 类的新实例。</summary>
      <param name="attributeName">要用作排序关键字的特性的名称。</param>
      <param name="matchingRule">用于排序的匹配规则的对象标识符 (OID)。</param>
      <param name="reverseOrder">如果按从最低到最高的顺序进行排序，则为 true；如果排序顺序为从最高到最低，则为 false。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SortKey.AttributeName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SortKey.AttributeName" /> 属性指定要用作排序关键字的特性的名称。</summary>
      <returns>要用作排序关键字的特性的名称。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SortKey.MatchingRule">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SortKey.MatchingRule" /> 属性指定用于排序的匹配规则的对象标识符 (OID)。</summary>
      <returns>用于排序的匹配规则的 OID。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SortKey.ReverseOrder">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SortKey.ReverseOrder" /> 属性指定是否应以相反顺序返回排序。</summary>
      <returns>如果按从最低到最高的顺序进行排序，则此属性为 true；如果按从最高到最低的顺序进行排序，则为 false。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SortRequestControl">
      <summary>将 <see cref="T:System.DirectoryServices.Protocols.SortRequestControl" /> 类与 <see cref="T:System.DirectoryServices.Protocols.SearchRequest" /> 一起使用，以指示服务器在将搜索结果返回到客户端应用程序之前对它们进行排序。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SortRequestControl.#ctor(System.DirectoryServices.Protocols.SortKey[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SortRequestControl.#ctor(System.DirectoryServices.Protocols.SortKey[])" /> 构造函数使用指定的排序键创建并初始化 <see cref="T:System.DirectoryServices.Protocols.SortRequestControl" /> 类的新实例。</summary>
      <param name="sortKeys">服务器在将搜索结果返回到客户端之前对它们进行排序时所使用的 <see cref="T:System.DirectoryServices.Protocols.SortKey" /> 对象组成的数组。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SortRequestControl.#ctor(System.String,System.Boolean)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SortRequestControl.#ctor(System.String,System.Boolean)" /> 构造函数使用指定的特性名称和排序顺序创建 <see cref="T:System.DirectoryServices.Protocols.SortRequestControl" /> 类的新实例。</summary>
      <param name="attributeName">查询所基于的特性的名称。</param>
      <param name="reverseOrder">如果应当以相反顺序返回结果，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SortRequestControl.#ctor(System.String,System.String,System.Boolean)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SortRequestControl.#ctor(System.String,System.String,System.Boolean)" /> 构造函数使用指定的特性名称、匹配规则和排序顺序创建 <see cref="T:System.DirectoryServices.Protocols.SortRequestControl" /> 类的新实例。</summary>
      <param name="attributeName">查询所基于的特性的名称。</param>
      <param name="matchingRule">指定排序所使用的匹配规则的对象标识符 (OID)。</param>
      <param name="reverseOrder">如果从最低到最高进行排序，则为 true；如果从最高到最低进行排序，则为 false。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.SortRequestControl.GetValue">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.SortRequestControl.GetValue" /> 方法指定用于该控件的排序关键字和匹配规则。</summary>
      <returns>用于该控件的排序关键字和匹配规则。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SortRequestControl.SortKeys">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SortRequestControl.SortKeys" /> 属性包含服务器使用的 <see cref="T:System.DirectoryServices.Protocols.SortKey" /> 对象组成的数组，该数组用于在将搜索结果返回到客户端之前对它们进行排序。</summary>
      <returns>服务器在将搜索结果返回到客户端之前对它们进行排序时所使用的 <see cref="T:System.DirectoryServices.Protocols.SortKey" /> 对象组成的数组。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.SortResponseControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.SortResponseControl" /> 类用于将排序数据从服务器传递到客户端。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SortResponseControl.AttributeName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SortResponseControl.AttributeName" /> 属性包含特性名称。</summary>
      <returns>特性名称。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.SortResponseControl.Result">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.SortResponseControl.Result" /> 属性返回包含结果代码的 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 对象。</summary>
      <returns>一个包含结果代码的 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 对象。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.TlsOperationException">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> 类是当请求失败时在 <see cref="M:System.DirectoryServices.Protocols.LdapSessionOptions.StartTransportLayerSecurity(System.DirectoryServices.Protocols.DirectoryControlCollection)" /> 方法中发生的异常。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse)" /> 构造函数使用指定的响应创建 <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> 类的实例。</summary>
      <param name="response">服务器返回的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String)" /> 构造函数使用指定的响应和消息创建 <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> 类的实例。</summary>
      <param name="response">服务器返回的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象。</param>
      <param name="message">发生异常时显示到客户端的消息。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String,System.Exception)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.DirectoryServices.Protocols.DirectoryResponse,System.String,System.Exception)" /> 构造函数使用指定的响应、消息和内部异常创建 <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> 类的实例。</summary>
      <param name="response">服务器返回的 <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" /> 对象。</param>
      <param name="message">发生异常时显示到客户端的消息。</param>
      <param name="inner">引发异常的 <see cref="P:System.Exception.InnerException" />（如果有）。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 构造函数使用指定的序列化数据和流上下文创建 <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> 类的实例。</summary>
      <param name="info">序列化参数所需的数据。</param>
      <param name="context">与该参数相关联的序列化流的源和目标。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.String)" /> 构造函数使用指定的消息创建 <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> 类的实例。</summary>
      <param name="message">发生异常时显示到客户端的消息。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.TlsOperationException.#ctor(System.String,System.Exception)" /> 构造函数使用指定的消息和内部异常创建 <see cref="T:System.DirectoryServices.Protocols.TlsOperationException" /> 类的实例。</summary>
      <param name="message">发生异常时显示到客户端的消息。</param>
      <param name="inner">引发异常的 <see cref="P:System.Exception.InnerException" />（如果有）。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.TreeDeleteControl">
      <summary>将 <see cref="T:System.DirectoryServices.Protocols.TreeDeleteControl" /> 类与 <see cref="T:System.DirectoryServices.Protocols.DeleteRequest" /> 结合使用可删除目录中的整个子树。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.TreeDeleteControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.TreeDeleteControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.TreeDeleteControl" /> 类的实例。</summary>
    </member>
    <member name="T:System.DirectoryServices.Protocols.VerifyNameControl">
      <summary>将 <see cref="T:System.DirectoryServices.Protocols.VerifyNameControl" /> 类与 LDAP 搜索功能一起使用可指定用于验证对象是否存在的服务器。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VerifyNameControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.VerifyNameControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.VerifyNameControl" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VerifyNameControl.#ctor(System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.VerifyNameControl.#ctor(System.String)" /> 构造函数使用指定的服务器名创建 <see cref="T:System.DirectoryServices.Protocols.VerifyNameControl" /> 类的实例。</summary>
      <param name="serverName">执行验证的全局目录。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VerifyNameControl.#ctor(System.String,System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.VerifyNameControl.#ctor(System.String,System.Int32)" /> 构造函数使用指定的服务器名和标志创建 <see cref="T:System.DirectoryServices.Protocols.VerifyNameControl" /> 类的实例。</summary>
      <param name="serverName">执行验证的全局目录。</param>
      <param name="flag">用于进行验证的标志。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VerifyNameControl.Flag">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.VerifyNameControl.Flag" /> 属性包含用于进行验证的标志。</summary>
      <returns>用于进行验证的标志。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VerifyNameControl.GetValue">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.VerifyNameControl.GetValue" /> 方法返回验证服务器的名称。</summary>
      <returns>验证服务器的名称。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VerifyNameControl.ServerName">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.VerifyNameControl.ServerName" /> 属性包含执行验证的服务器的名称。</summary>
      <returns>执行验证的服务器的名称。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.VerifyServerCertificateCallback">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.VerifyServerCertificateCallback" /> 委托获取或设置默认回调函数，而该函数用于在建立 SSL 连接时验证服务器证书。</summary>
      <returns>如果客户端批准该服务器证书，则为 true；否则为 false。</returns>
      <param name="connection">一个指定连接的 <see cref="T:System.DirectoryServices.Protocols.LdapConnection" /> 对象。</param>
      <param name="certificate">一个指定服务器证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象。</param>
    </member>
    <member name="T:System.DirectoryServices.Protocols.VlvRequestControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.VlvRequestControl" /> 类用于从服务器请求虚拟列表视图 (VLV) 支持。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor" /> 构造函数创建 <see cref="T:System.DirectoryServices.Protocols.VlvRequestControl" /> 类的实例。</summary>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor(System.Int32,System.Int32,System.Byte[])">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor(System.Int32,System.Int32,System.Byte[])" /> 构造函数使用指定的项计数和目标项创建 <see cref="T:System.DirectoryServices.Protocols.VlvRequestControl" /> 类的实例。</summary>
      <param name="beforeCount">在列表结果中，客户端请求从服务器返回的目标项之前的项数。</param>
      <param name="afterCount">在结果中，客户端请求从服务器返回的目标项之前的项数。</param>
      <param name="target">搜索的目标项。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor(System.Int32,System.Int32,System.Int32)" /> 构造函数使用指定的项计数和偏移量创建 <see cref="T:System.DirectoryServices.Protocols.VlvRequestControl" /> 类的实例。</summary>
      <param name="beforeCount">在列表结果中，客户端请求从服务器发送回的目标项之前的项数。</param>
      <param name="afterCount">在结果中，客户端请求从服务器发送回的目标项之前的项数。</param>
      <param name="offset">偏移量值与内容计数之间的比值。</param>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor(System.Int32,System.Int32,System.String)">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.VlvRequestControl.#ctor(System.Int32,System.Int32,System.String)" /> 构造函数使用指定的项计数和目标项创建 <see cref="T:System.DirectoryServices.Protocols.VlvRequestControl" /> 类的实例。</summary>
      <param name="beforeCount">在列表结果中，客户端请求从服务器返回的目标项之前的项数。</param>
      <param name="afterCount">在结果中，客户端请求从服务器返回的目标项之前的项数。</param>
      <param name="target">搜索的目标项。</param>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvRequestControl.AfterCount">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.VlvRequestControl.AfterCount" /> 属性指定列表结果中在要返回的目标项之后的项数。</summary>
      <returns>列表结果中在要返回的目标项之后的项数。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvRequestControl.BeforeCount">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.VlvRequestControl.BeforeCount" /> 属性指定列表结果中在要返回的目标项之前的项数。</summary>
      <returns>列表结果中在要返回的目标项之前的项数。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvRequestControl.ContextId">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.VlvRequestControl.ContextId" /> 属性包含由服务器分配的、用于标识该搜索操作的上下文 ID。</summary>
      <returns>由服务器分配的、用于标识该搜索操作的上下文 ID。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvRequestControl.EstimateCount">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.VlvRequestControl.EstimateCount" /> 属性包含列表的内容计数。</summary>
      <returns>列表的内容计数。</returns>
    </member>
    <member name="M:System.DirectoryServices.Protocols.VlvRequestControl.GetValue">
      <summary>
        <see cref="M:System.DirectoryServices.Protocols.VlvRequestControl.GetValue" /> 方法返回指定该控件的 BER 编码的序列。</summary>
      <returns>指定该控件的 BER 编码的序列。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvRequestControl.Offset">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.VlvRequestControl.Offset" /> 属性包含目标项的偏移量值。</summary>
      <returns>目标项的偏移量值。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvRequestControl.Target">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.VlvRequestControl.Target" /> 属性包含搜索的目标项。</summary>
      <returns>搜索的目标项。</returns>
    </member>
    <member name="T:System.DirectoryServices.Protocols.VlvResponseControl">
      <summary>
        <see cref="T:System.DirectoryServices.Protocols.VlvResponseControl" /> 类用于将虚拟列表视图 (VLV) 数据从服务器传递到客户端。</summary>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvResponseControl.ContentCount">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.VlvResponseControl.ContentCount" /> 属性包含列表中的项数。</summary>
      <returns>列表中的项数。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvResponseControl.ContextId">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.VlvResponseControl.ContextId" /> 属性包含由服务器分配的、用于标识该搜索的上下文 ID。</summary>
      <returns>由服务器分配的、用于标识该搜索的上下文 ID。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvResponseControl.Result">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.VlvResponseControl.Result" /> 属性包含 <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 对象形式的结果代码。</summary>
      <returns>
        <see cref="T:System.DirectoryServices.Protocols.ResultCode" /> 对象形式的结果代码。</returns>
    </member>
    <member name="P:System.DirectoryServices.Protocols.VlvResponseControl.TargetPosition">
      <summary>
        <see cref="P:System.DirectoryServices.Protocols.VlvResponseControl.TargetPosition" /> 属性包含目标项的列表索引位置。</summary>
      <returns>目标项的列表索引位置。</returns>
    </member>
  </members>
</doc>