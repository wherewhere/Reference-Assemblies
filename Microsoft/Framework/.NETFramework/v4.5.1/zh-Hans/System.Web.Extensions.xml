<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.Web.ApplicationServices.ApplicationServicesHostFactory">
      <summary>提供一个工厂类，它在托管承载环境中创建身份验证服务、角色服务和配置文件服务的实例。</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.ApplicationServicesHostFactory.#ctor">
      <summary>初始化 <see cref="T:System.Web.ApplicationServices.ApplicationServicesHostFactory" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.ApplicationServicesHostFactory.CreateServiceHost(System.Type,System.Uri[])">
      <summary>为具有指定基址的服务类创建实例。</summary>
      <returns>具有指定的基址的服务类型的 <see cref="T:System.ServiceModel.ServiceHost" /> 实例。</returns>
      <param name="serviceType">要创建的服务主机的类型。</param>
      <param name="baseAddresses">服务的基址的数组。</param>
    </member>
    <member name="T:System.Web.ApplicationServices.AuthenticatingEventArgs">
      <summary>为 <see cref="E:System.Web.ApplicationServices.AuthenticationService.Authenticating" /> 事件提供数据。</summary>
    </member>
    <member name="P:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated">
      <summary>获取或设置一个值，该值指示用户凭据是否有效。</summary>
      <returns>如果用户凭据有效，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete">
      <summary>获取或设置一个值，该值指示用户凭据是否已经过身份验证。</summary>
      <returns>如果执行了验证用户凭据的所有步骤，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential">
      <summary>获取用于身份验证的其他用户值。</summary>
      <returns>进行身份验证所需的除用户名和密码以外的其他值。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.AuthenticatingEventArgs.Password">
      <summary>获取用户的密码。</summary>
      <returns>要验证的密码。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName">
      <summary>获取用户的身份验证名称。</summary>
      <returns>要验证的用户名。</returns>
    </member>
    <member name="T:System.Web.ApplicationServices.AuthenticationService">
      <summary>启用作为 Web 服务对 ASP.NET Forms 身份验证的访问。</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.AuthenticationService.#ctor">
      <summary>初始化 <see cref="T:System.Web.ApplicationServices.AuthenticationService" /> 类的新实例。</summary>
    </member>
    <member name="E:System.Web.ApplicationServices.AuthenticationService.Authenticating">
      <summary>当验证用户凭据时发生。</summary>
    </member>
    <member name="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie">
      <summary>当设置身份验证 Cookie 时发生。</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn">
      <summary>确定当前用户是否已经过身份验证。</summary>
      <returns>如果该用户已经过身份验证，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)">
      <summary>检查用户凭据，如果凭据有效，则创建一个身份验证票证 (Cookie)。</summary>
      <returns>如果用户凭据有效，则为 true；否则为 false。</returns>
      <param name="username">要验证的用户名。</param>
      <param name="password">指定的用户的密码。</param>
      <param name="customCredential">要验证的除 <paramref name="userName" /> 和 <paramref name="password" /> 之外的一个或多个值（如果有）。</param>
      <param name="isPersistent">指示身份验证票证在各会话中是否都保持有效的一个值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userName" /> 或 <paramref name="password" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.ApplicationServices.AuthenticationService.Logout">
      <summary>清除浏览器中的身份验证票证 (Cookie)。</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)">
      <summary>在不颁发身份验证票证的情况下对用户凭据进行身份验证。</summary>
      <returns>如果用户凭据有效，则为 true；否则为 false。</returns>
      <param name="username">要验证的用户名。</param>
      <param name="password">指定的用户的密码。</param>
      <param name="customCredential">要验证的除 <paramref name="userName" /> 和 <paramref name="password" /> 之外的一个或多个值（如果有）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userName" /> 或 <paramref name="password" /> 为 null。</exception>
    </member>
    <member name="T:System.Web.ApplicationServices.CreatingCookieEventArgs">
      <summary>为 <see cref="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie" /> 事件提供数据。</summary>
    </member>
    <member name="P:System.Web.ApplicationServices.CreatingCookieEventArgs.CookieIsSet">
      <summary>获取或设置一个值，该值指示是否已创建身份验证 Cookie。</summary>
      <returns>如果已创建身份验证 Cookie，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential">
      <summary>获取用户提供的其他身份验证值。</summary>
      <returns>进行身份验证所需的除用户名和密码以外的其他自定义值。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.CreatingCookieEventArgs.IsPersistent">
      <summary>获取一个值，该值指示超出当前会话时是否应保留身份验证 Cookie。</summary>
      <returns>如果超出当前会话时应保留 Cookie，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.CreatingCookieEventArgs.Password">
      <summary>获取用户的密码。</summary>
      <returns>用户提供的用于身份验证的密码。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.CreatingCookieEventArgs.UserName">
      <summary>获取用户的名称。</summary>
      <returns>用户提供的用于身份验证的名称。</returns>
    </member>
    <member name="T:System.Web.ApplicationServices.KnownTypesProvider">
      <summary>创建 <see cref="T:System.Type" /> 对象的一个数组，这些对象包含各个配置文件属性的类型。</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.KnownTypesProvider.GetKnownTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>创建 <see cref="T:System.Type" /> 对象的一个数组，这些对象包含各个配置文件属性的类型。</summary>
      <returns>各个配置文件属性的类型的数组。</returns>
      <param name="knownTypeAttributeTarget">提供程序对象。</param>
    </member>
    <member name="T:System.Web.ApplicationServices.ProfilePropertyMetadata">
      <summary>提供描述配置文件属性的值的集合。</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfilePropertyMetadata.#ctor">
      <summary>初始化 <see cref="T:System.Web.ApplicationServices.ProfilePropertyMetadata" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.AllowAnonymousAccess">
      <summary>获取或设置一个指示该属性是否可由未经身份验证的用户使用的值。</summary>
      <returns>如果该属性可由未经身份验证的用户使用，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.DefaultValue">
      <summary>获取或设置该属性的默认值。</summary>
      <returns>如果在 Web.config 文件中定义了该属性的默认值，则为该默认值的序列化表示形式；否则为字符串“(null)”。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.ExtensionData">
      <summary>获取或设置对 <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> 实例的引用。</summary>
      <returns>对在反序列化操作过程中存储扩展数据的对象的引用。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.IsReadOnly">
      <summary>获取或设置一个指示配置文件属性是否为只读的值。</summary>
      <returns>如果该配置文件属性为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.PropertyName">
      <summary>获取或设置配置文件属性的名称。</summary>
      <returns>在 Web.config 文件中定义的配置文件属性的名称。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.SerializeAs">
      <summary>获取或设置一个指示如何序列化属性值的值。</summary>
      <returns>枚举值。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.TypeName">
      <summary>获取或设置配置文件属性类型的程序集限定名称。</summary>
      <returns>配置文件属性类型的程序集限定名称。</returns>
    </member>
    <member name="T:System.Web.ApplicationServices.ProfileService">
      <summary>允许通过 Web 服务访问 ASP.NET 用户配置文件。</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfileService.#ctor">
      <summary>初始化 <see cref="T:System.Web.ApplicationServices.ProfileService" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser(System.Boolean)">
      <summary>检索可用于当前用户配置文件服务的所有配置文件属性和值。</summary>
      <returns>配置文件属性和值。</returns>
      <param name="authenticatedUserOnly">指示是否仅为已经过身份验证的用户返回属性的一个值。</param>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>检索当前用户的指定配置文件属性和值。</summary>
      <returns>配置文件属性信息和值。</returns>
      <param name="properties">包含要检索的配置文件属性名称的字符串值的集合。</param>
      <param name="authenticatedUserOnly">指示是否仅为已经过身份验证的用户返回属性的一个值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="properties" /> 集合中的 <paramref name="properties" /> 参数或项为 null。</exception>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata">
      <summary>检索有关可通过配置文件服务使用的配置文件属性的信息。</summary>
      <returns>一个 <see cref="T:System.Web.ApplicationServices.ProfilePropertyMetadata" /> 对象的数组，这些对象包含有关配置文件属性的信息。</returns>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <summary>在用户配置文件中设置指定属性的值。</summary>
      <returns>没有为用户配置文件设置的属性（如果有）。</returns>
      <param name="values">包含要设置的配置文件属性的名称和值的集合。</param>
      <param name="authenticatedUserOnly">指示是否仅为已经过身份验证的用户设置属性的一个值。</param>
    </member>
    <member name="E:System.Web.ApplicationServices.ProfileService.ValidatingProperties">
      <summary>当设置了用户的配置文件属性时发生。</summary>
    </member>
    <member name="T:System.Web.ApplicationServices.RoleService">
      <summary>允许通过 WCF Web 服务访问 ASP.NET 角色提供程序。</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.RoleService.#ctor">
      <summary>初始化 <see cref="T:System.Web.ApplicationServices.RoleService" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser">
      <summary>返回已登录用户的所有角色。</summary>
      <returns>用户所属角色的名称数组。</returns>
      <exception cref="T:System.Configuration.Provider.ProviderException">未启用角色管理。</exception>
    </member>
    <member name="M:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)">
      <summary>确定已登录用户是否属于指定的角色。</summary>
      <returns>如果用户属于指定的角色，则为 true；否则为 false。</returns>
      <param name="role">要检查的角色的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="role" /> 为 null 或用户未登录。</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">未启用角色管理。</exception>
    </member>
    <member name="E:System.Web.ApplicationServices.RoleService.SelectingProvider">
      <summary>在 <see cref="T:System.Web.ApplicationServices.RoleService" /> 实例确定使用哪个角色提供程序检查用户的角色时发生。</summary>
    </member>
    <member name="T:System.Web.ApplicationServices.SelectingProviderEventArgs">
      <summary>为 <see cref="E:System.Web.ApplicationServices.RoleService.SelectingProvider" /> 事件提供数据。</summary>
    </member>
    <member name="P:System.Web.ApplicationServices.SelectingProviderEventArgs.ProviderName">
      <summary>获取或设置用于检索用户角色的角色提供程序。</summary>
      <returns>用于获取用户角色的角色提供程序的名称。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.SelectingProviderEventArgs.User">
      <summary>获取已经过身份验证的用户。</summary>
      <returns>包含已经过身份验证的用户的对象。</returns>
    </member>
    <member name="T:System.Web.ApplicationServices.ValidatingPropertiesEventArgs">
      <summary>提供 <see cref="E:System.Web.ApplicationServices.ProfileService.ValidatingProperties" /> 事件的数据。</summary>
    </member>
    <member name="P:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties">
      <summary>获取包含未通过验证的配置文件属性的集合。</summary>
      <returns>未通过验证的配置文件属性。</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.Properties">
      <summary>获取要验证的配置文件属性的名称和值的集合。</summary>
      <returns>要验证的配置文件属性的名称和值。</returns>
    </member>
    <member name="T:System.Web.ClientServices.ClientFormsIdentity">
      <summary>表示已使用窗体身份验证通过客户端应用程序服务身份验证的用户标识。</summary>
    </member>
    <member name="M:System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)">
      <summary>初始化 <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> 类的新实例。</summary>
      <param name="name">已验证身份的用户的名称。</param>
      <param name="password">已通过身份验证的用户的密码。</param>
      <param name="provider">用于对用户进行身份验证的成员资格提供程序。</param>
      <param name="authenticationType">使用的身份验证类型。</param>
      <param name="isAuthenticated">如果该用户已经过身份验证，则为 true；否则为 false。</param>
      <param name="authenticationCookies">从身份验证服务检索到的 Cookie。</param>
    </member>
    <member name="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies">
      <summary>获取从身份验证服务检索到的 Cookie 的集合。</summary>
      <returns>从身份验证服务检索到的 Cookie。</returns>
    </member>
    <member name="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType">
      <summary>获取用于对用户进行身份验证的身份验证类型。</summary>
      <returns>用于对用户进行身份验证的身份验证类型。</returns>
    </member>
    <member name="M:System.Web.ClientServices.ClientFormsIdentity.Dispose">
      <summary>释放由 <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated">
      <summary>获取一个值，该值指示是否验证了用户。</summary>
      <returns>如果该用户已经过身份验证，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.ClientServices.ClientFormsIdentity.Name">
      <summary>获取用户的名称。</summary>
      <returns>用户的名称。</returns>
    </member>
    <member name="P:System.Web.ClientServices.ClientFormsIdentity.Provider">
      <summary>获取用于对用户进行身份验证的成员资格提供程序。</summary>
      <returns>用于对用户进行身份验证的成员资格提供程序。</returns>
    </member>
    <member name="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser">
      <summary>通过使用缓存凭据来以静默方式验证用户身份。</summary>
    </member>
    <member name="T:System.Web.ClientServices.ClientRolePrincipal">
      <summary>表示客户端应用程序服务的安全信息，其中包括角色信息。</summary>
    </member>
    <member name="M:System.Web.ClientServices.ClientRolePrincipal.#ctor(System.Security.Principal.IIdentity)">
      <summary>初始化 <see cref="T:System.Web.ClientServices.ClientRolePrincipal" /> 类的新实例。</summary>
      <param name="identity">表示当前用户。</param>
    </member>
    <member name="P:System.Web.ClientServices.ClientRolePrincipal.Identity">
      <summary>获取与 <see cref="T:System.Web.ClientServices.ClientRolePrincipal" /> 关联的安全标识符。</summary>
      <returns>表示当前用户。</returns>
    </member>
    <member name="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)">
      <summary>获取一个值，该值指示由 <see cref="T:System.Web.ClientServices.ClientRolePrincipal" /> 表示的用户是否扮演指定的角色。</summary>
      <returns>如果用户处于指定的角色，则为 true；如果用户不处于指定的角色或者未通过身份验证，则为 false。</returns>
      <param name="role">要检查的角色。</param>
    </member>
    <member name="T:System.Web.ClientServices.ConnectivityStatus">
      <summary>表示应用程序网络连接的状态。</summary>
    </member>
    <member name="P:System.Web.ClientServices.ConnectivityStatus.IsOffline">
      <summary>获取或设置一个指示应用程序是否处于脱机模式的值。</summary>
      <returns>如果应用程序处于脱机模式，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials">
      <summary>表示使用客户端应用程序服务进行窗体身份验证的用户登录信息。</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials.#ctor(System.String,System.String,System.Boolean)">
      <summary>初始化 <see cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials" /> 类的新实例。</summary>
      <param name="username">用户名。</param>
      <param name="password">用户密码。</param>
      <param name="rememberMe">一个值，指示是否应保存用户凭据并在后续的登录尝试中重用。</param>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials.Password">
      <summary>获取或设置用户密码。</summary>
      <returns>用户密码。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials.RememberMe">
      <summary>获取或设置一个值，该值指示是否应保存用户凭据并在后续的登录尝试中重用。</summary>
      <returns>如果应保存并重用凭据，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials.UserName">
      <summary>获取或设置用户名。</summary>
      <returns>用户名。</returns>
    </member>
    <member name="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider">
      <summary>通过客户端应用程序服务实现窗体身份验证。</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ApplicationName">
      <summary>此类未使用此属性。</summary>
      <returns>使用自定义成员资格提供程序的应用程序的名称。</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ChangePassword(System.String,System.String,System.String)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <param name="oldPassword">未使用。</param>
      <param name="newPassword">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <param name="password">未使用。</param>
      <param name="newPasswordQuestion">未使用。</param>
      <param name="newPasswordAnswer">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <param name="password">未使用。</param>
      <param name="email">未使用。</param>
      <param name="passwordQuestion">未使用。</param>
      <param name="passwordAnswer">未使用。</param>
      <param name="isApproved">未使用。</param>
      <param name="providerUserKey">未使用。</param>
      <param name="status">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.DeleteUser(System.String,System.Boolean)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <param name="deleteAllRelatedData">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.EnablePasswordReset">
      <summary>此类未使用此属性。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.EnablePasswordRetrieval">
      <summary>此类未使用此属性。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="emailToMatch">未使用。</param>
      <param name="pageIndex">未使用。</param>
      <param name="pageSize">未使用。</param>
      <param name="totalRecords">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="usernameToMatch">未使用。</param>
      <param name="pageIndex">未使用。</param>
      <param name="pageSize">未使用。</param>
      <param name="totalRecords">未使用。 该参数未经初始化即被传递。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="pageIndex">未使用。</param>
      <param name="pageSize">未使用。</param>
      <param name="totalRecords">未使用。 该参数未经初始化即被传递。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetNumberOfUsersOnline">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetPassword(System.String,System.String)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <param name="answer">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetUser(System.Object,System.Boolean)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="providerUserKey">未使用。</param>
      <param name="userIsOnline">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetUser(System.String,System.Boolean)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <param name="userIsOnline">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetUserNameByEmail(System.String)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="email">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>初始化提供程序。</summary>
      <param name="name">该提供程序的友好名称。</param>
      <param name="config">名称/值对的集合，表示在配置中为该提供程序指定的、特定于提供程序的特性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。 - 或 - <paramref name="config" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 为空。 - 或 - <paramref name="config" /> 包含无法识别的值。 有关更多信息，请参见“备注”一节。</exception>
      <exception cref="T:System.InvalidOperationException">此 <see cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" /> 已初始化。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Logout">
      <summary>注销用户。</summary>
      <exception cref="T:System.Net.WebException">
        <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> 属性值为 false，并且成员资格提供程序无法访问身份验证服务。</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.MaxInvalidPasswordAttempts">
      <summary>此类未使用此属性。</summary>
      <returns>锁定成员资格用户之前允许的无效密码尝试次数。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.MinRequiredNonAlphanumericCharacters">
      <summary>此类未使用此属性。</summary>
      <returns>总是为零。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.MinRequiredPasswordLength">
      <summary>此类未使用此属性。</summary>
      <returns>总是为 1。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.PasswordAttemptWindow">
      <summary>此类未使用此属性。</summary>
      <returns>在锁定成员资格用户之前允许的最大无效密码或无效密码提示问题答案尝试次数的分钟数。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.PasswordFormat">
      <summary>此类未使用此属性。</summary>
      <returns>用于在数据存储中存储密码的格式。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.PasswordStrengthRegularExpression">
      <summary>此类未使用此属性。</summary>
      <returns>总是为“*”。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.RequiresQuestionAndAnswer">
      <summary>此类未使用此属性。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.RequiresUniqueEmail">
      <summary>此类未使用此属性。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ResetPassword(System.String,System.String)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <param name="answer">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ServiceUri">
      <summary>获取或设置身份验证服务的 URI。</summary>
      <returns>身份验证服务 URI。</returns>
      <exception cref="T:System.ArgumentException">获取此属性时，未在应用程序配置文件中发现任何服务 URI，并且以前未设置过此属性。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.UnlockUser(System.String)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
      <summary>此类未使用此方法。</summary>
      <param name="user">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="E:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.UserValidated">
      <summary>在用户通过验证后发生。</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ValidateUser(System.String,System.String)">
      <summary>使用指定的用户名和密码对用户进行身份验证。</summary>
      <returns>如果用户已经过验证，则为 true；否则为 false。</returns>
      <param name="username">要进行身份验证的用户的名称，或者 <see cref="F:System.String.Empty" /> 或 null，以便从配置此应用程序要使用的 <see cref="T:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider" /> 实现中检索凭据。</param>
      <param name="password">要进行身份验证的用户的密码。</param>
      <exception cref="T:System.Net.WebException">
        <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> 属性值为 false，并且成员资格提供程序无法访问身份验证服务。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ValidateUser(System.String,System.String,System.Boolean)">
      <summary>使用指定的用户名和密码对用户进行身份验证，并可以选择将密码的哈希值存储在本地数据缓存中。</summary>
      <returns>如果用户已经过验证，则为 true；否则为 false。</returns>
      <param name="username">要验证的用户名。</param>
      <param name="password">要进行身份验证的用户的密码。</param>
      <param name="rememberMe">如果为 true，则将密码的哈希值存储在本地数据缓存中，以便脱机使用或者在用户身份验证 Cookie 过期后自动重新进行身份验证；如果为 false，则禁用脱机登录，或者要求在 Cookie 过期后重新进行身份验证。</param>
      <exception cref="T:System.Net.WebException">
        <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> 属性值为 false，并且成员资格提供程序无法访问身份验证服务。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ValidateUser(System.String,System.String,System.String)">
      <summary>使用指定的用户名和密码对位于指定服务 URI 处的用户进行身份验证。</summary>
      <returns>如果用户已经过验证，则为 true；否则为 false。</returns>
      <param name="username">要验证的用户名。</param>
      <param name="password">要进行身份验证的用户的密码。</param>
      <param name="serviceUri">要使用的身份验证服务的 URI。</param>
      <exception cref="T:System.Net.WebException">
        <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> 属性值为 false，并且成员资格提供程序无法访问身份验证服务。</exception>
    </member>
    <member name="T:System.Web.ClientServices.Providers.ClientRoleProvider">
      <summary>从 Microsoft Ajax 角色服务中获取基于 Windows 的应用程序的角色信息。</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])">
      <summary>此类未使用此方法。</summary>
      <param name="usernames">未使用。</param>
      <param name="roleNames">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName">
      <summary>此类未使用此属性。</summary>
      <returns>提供程序的应用程序的名称。</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)">
      <summary>此类未使用此方法。</summary>
      <param name="roleName">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="roleName">未使用。</param>
      <param name="throwOnPopulatedRole">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="roleName">未使用。</param>
      <param name="usernameToMatch">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)">
      <summary>获取指定用户所属的角色的名称。</summary>
      <returns>
        <paramref name="username" /> 所属的角色名称；如果用户未通过身份验证，则为一个空数组。</returns>
      <param name="username">要检索其角色的用户的名称。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> 为 <see cref="F:System.String.Empty" /> 或 null。 - 或 - <paramref name="username" /> 不是当前通过身份验证的用户的用户名。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="roleName">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>初始化提供程序。</summary>
      <param name="name">该提供程序的友好名称。</param>
      <param name="config">名称/值对的集合，表示在配置中为该提供程序指定的、特定于提供程序的特性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。 - 或 - <paramref name="config" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 为空。 - 或 - <paramref name="config" /> 包含无法识别的值。 有关更多信息，请参见“备注”一节。</exception>
      <exception cref="T:System.InvalidOperationException">此 <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> 已初始化。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="config" /> 包含一个格式不正确的 cacheTimeout 值，无法转换为 <see cref="T:System.Int32" /> 值。</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="config" /> 包含一个 cacheTimeout 值，该值表示小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数字。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)">
      <summary>获取一个指示指定用户是否属于指定角色的值。</summary>
      <returns>如果指定用户处于指定的角色，则为 true；如果指定用户未通过身份验证或者不处于指定的角色，则为 false。</returns>
      <param name="username">用户的名称。</param>
      <param name="roleName">角色的名称。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> 为 <see cref="F:System.String.Empty" /> 或 null。 - 或 - <paramref name="username" /> 不是当前通过身份验证的用户的用户名。</exception>
      <exception cref="T:System.Net.WebException">用户不再是通过身份验证的用户。 - 或 - 角色服务不可用。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
      <summary>此类未使用此方法。</summary>
      <param name="usernames">未使用。</param>
      <param name="roleNames">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache">
      <summary>清除缓存的角色信息并重置缓存的超时期限。</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="roleName">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri">
      <summary>获取或设置角色服务的 URI。</summary>
      <returns>角色服务 URI。</returns>
      <exception cref="T:System.ArgumentException">获取此属性时，未在应用程序配置文件中发现任何服务 URI，并且以前未设置过此属性。</exception>
    </member>
    <member name="T:System.Web.ClientServices.Providers.ClientSettingsProvider">
      <summary>使基于 Windows 的应用程序可以从 Web 设置服务中检索用户设置。</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.ClientServices.Providers.ClientSettingsProvider" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientSettingsProvider.ApplicationName">
      <summary>此类未使用此属性。</summary>
      <returns>提供程序的应用程序的名称。</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary>获取指定属性的上一版本。</summary>
      <returns>表示指定属性的上一版本。</returns>
      <param name="context">该方法不使用此参数。</param>
      <param name="property">表示要获取上一版本的属性。</param>
      <exception cref="T:System.Net.WebException">
        <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> 属性值为 false，而 <see cref="P:System.Web.ClientServices.Providers.ClientSettingsProvider.ServiceUri" /> 位置的 Web 设置服务不可用。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.GetPropertyMetadata(System.String)">
      <summary>获取从指定的 Web 设置服务检索的所有属性的元数据集合。</summary>
      <returns>属性元数据。</returns>
      <param name="serviceUri">要从中检索属性元数据的 Web 设置服务。</param>
      <exception cref="T:System.Net.WebException">
        <see cref="P:System.Web.ClientServices.Providers.ClientSettingsProvider.ServiceUri" /> 位置的 Web 设置服务不可用。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>返回指定应用程序实例的设置属性值集合和设置属性组。</summary>
      <returns>一个包含指定设置属性组的值的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</returns>
      <param name="context">
        <see cref="T:System.Configuration.SettingsContext" />，描述当前应用程序的用法。</param>
      <param name="propertyCollection">一个包含设置属性组（将要检索该组中的值）的 <see cref="T:System.Configuration.SettingsPropertyCollection" />。</param>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>初始化提供程序。</summary>
      <param name="name">该提供程序的友好名称。</param>
      <param name="config">名称/值对的集合，表示在配置中为该提供程序指定的、特定于提供程序的特性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 为 <see cref="F:System.String.Empty" />。 - 或 - <paramref name="config" /> 包含无法识别的值。 有关更多信息，请参见“备注”一节。</exception>
      <exception cref="T:System.InvalidOperationException">此 <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> 已初始化。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary>将所有用户设置都重置为其默认值。</summary>
      <param name="context">该方法不使用此参数。</param>
      <exception cref="T:System.Net.WebException">
        <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> 属性值为 false，而 <see cref="P:System.Web.ClientServices.Providers.ClientSettingsProvider.ServiceUri" /> 位置的 Web 设置服务不可用。</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientSettingsProvider.ServiceUri">
      <summary>获取或设置 Web 设置服务位置。</summary>
      <returns>Web 设置服务的 URI。</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary>设置指定的属性设置组的值。</summary>
      <param name="context">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</param>
      <param name="propertyValueCollection">表示要设置的属性设置组的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</param>
    </member>
    <member name="E:System.Web.ClientServices.Providers.ClientSettingsProvider.SettingsSaved">
      <summary>在设置提供程序尝试将属性值保存到 Web 设置服务时发生。</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>此类未使用此方法。</summary>
      <param name="context">未使用。</param>
      <param name="properties">未使用。</param>
    </member>
    <member name="T:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider">
      <summary>通过客户端应用程序服务实现 Windows 身份验证。</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.ApplicationName">
      <summary>此类未使用此属性。</summary>
      <returns>使用自定义成员资格提供程序的应用程序的名称。</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.ChangePassword(System.String,System.String,System.String)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <param name="oldPassword">未使用。</param>
      <param name="newPassword">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <param name="password">未使用。</param>
      <param name="newPasswordQuestion">未使用。</param>
      <param name="newPasswordAnswer">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <param name="password">未使用。</param>
      <param name="email">未使用。</param>
      <param name="passwordQuestion">未使用。</param>
      <param name="passwordAnswer">未使用。</param>
      <param name="isApproved">未使用。</param>
      <param name="providerUserKey">未使用。</param>
      <param name="status">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.DeleteUser(System.String,System.Boolean)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <param name="deleteAllRelatedData">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.EnablePasswordReset">
      <summary>此类未使用此属性。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.EnablePasswordRetrieval">
      <summary>此类未使用此属性。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="emailToMatch">未使用。</param>
      <param name="pageIndex">未使用。</param>
      <param name="pageSize">未使用。</param>
      <param name="totalRecords">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="usernameToMatch">未使用。</param>
      <param name="pageIndex">未使用。</param>
      <param name="pageSize">未使用。</param>
      <param name="totalRecords">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="pageIndex">未使用。</param>
      <param name="pageSize">未使用。</param>
      <param name="totalRecords">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetNumberOfUsersOnline">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetPassword(System.String,System.String)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <param name="answer">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetUser(System.Object,System.Boolean)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="providerUserKey">未使用。</param>
      <param name="userIsOnline">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetUser(System.String,System.Boolean)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <param name="userIsOnline">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetUserNameByEmail(System.String)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="email">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.Logout">
      <summary>注销用户。</summary>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.MaxInvalidPasswordAttempts">
      <summary>此类未使用此属性。</summary>
      <returns>锁定成员资格用户之前允许的无效密码尝试次数。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.MinRequiredNonAlphanumericCharacters">
      <summary>此类未使用此属性。</summary>
      <returns>总是为零。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.MinRequiredPasswordLength">
      <summary>此类未使用此属性。</summary>
      <returns>总是为 1。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.PasswordAttemptWindow">
      <summary>此类未使用此属性。</summary>
      <returns>在锁定成员资格用户之前允许的最大无效密码或无效密码提示问题答案尝试次数的分钟数。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.PasswordFormat">
      <summary>此类未使用此属性。</summary>
      <returns>用于在数据存储中存储密码的格式。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.PasswordStrengthRegularExpression">
      <summary>此类未使用此属性。</summary>
      <returns>总是为“*”。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.RequiresQuestionAndAnswer">
      <summary>此类未使用此属性。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.RequiresUniqueEmail">
      <summary>此类未使用此属性。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.ResetPassword(System.String,System.String)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <param name="answer">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.UnlockUser(System.String)">
      <summary>此类未使用此方法。</summary>
      <returns>不适用。 此方法总是引发异常。</returns>
      <param name="username">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
      <summary>此类未使用此方法。</summary>
      <param name="user">未使用。</param>
      <exception cref="T:System.NotSupportedException">总是引发。</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.ValidateUser(System.String,System.String)">
      <summary>使用操作系统提供的标识自动对当前用户进行身份验证。</summary>
      <returns>始终为 true。</returns>
      <param name="username">必须为 <see cref="F:System.String.Empty" /> 或 null。</param>
      <param name="password">必须为 <see cref="F:System.String.Empty" /> 或 null。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> 不是 <see cref="F:System.String.Empty" /> 或 null。 - 或 - <paramref name="password" /> 不是 <see cref="F:System.String.Empty" /> 或 null。</exception>
    </member>
    <member name="T:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider">
      <summary>定义 <see cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" /> 类为了检索用户凭据而调用的方法。</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials">
      <summary>检索用户凭据。</summary>
      <returns>用户登录信息。</returns>
    </member>
    <member name="T:System.Web.ClientServices.Providers.SettingsSavedEventArgs">
      <summary>为 <see cref="E:System.Web.ClientServices.Providers.ClientSettingsProvider.SettingsSaved" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.SettingsSavedEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化 <see cref="T:System.Web.ClientServices.Providers.SettingsSavedEventArgs" /> 类的新实例。</summary>
      <param name="failedSettingsList">设置提供程序未能保存的设置。</param>
    </member>
    <member name="P:System.Web.ClientServices.Providers.SettingsSavedEventArgs.FailedSettingsList">
      <summary>获取 <see cref="T:System.Web.ClientServices.Providers.ClientSettingsProvider" /> 未能保存到服务器上的设置。</summary>
      <returns>未保存的设置。</returns>
    </member>
    <member name="T:System.Web.ClientServices.Providers.UserValidatedEventArgs">
      <summary>为 <see cref="E:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.UserValidated" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.UserValidatedEventArgs.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Web.ClientServices.Providers.UserValidatedEventArgs" /> 类的新实例。</summary>
      <param name="username">已验证的用户的用户名。</param>
    </member>
    <member name="P:System.Web.ClientServices.Providers.UserValidatedEventArgs.UserName">
      <summary>获取已验证的用户的用户名。</summary>
      <returns>已验证的用户的用户名。</returns>
    </member>
    <member name="T:System.Web.Compilation.IWcfReferenceReceiveContextInformation">
      <summary>定义要为获取附加上下文信息而实现的接口。</summary>
    </member>
    <member name="M:System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(System.Collections.Generic.IDictionary{System.String,System.Byte[]},System.IServiceProvider)">
      <summary>获取附加上下文信息。</summary>
      <param name="serviceReferenceExtensionFileContents">提供与 WCF 服务引用的 .svcmap 文件相关联的任何扩展文件的内容。</param>
      <param name="serviceProvider">对 Visual Studio 服务提供程序的引用，用于查询附加信息的。</param>
    </member>
    <member name="T:System.Web.Compilation.WCFBuildProvider">
      <summary>为 Windows Communication Foundation (WCF) 服务生成代理类代码</summary>
    </member>
    <member name="M:System.Web.Compilation.WCFBuildProvider.#ctor">
      <summary>初始化 <see cref="T:System.Web.Compilation.WCFBuildProvider" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.Compilation.WCFBuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)">
      <summary>生成服务代理类源代码并将其添加到指定的程序集生成器。</summary>
      <param name="assemblyBuilder">
        <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> 对象的实例，必须将所生成的代理代码添加到此实例中。 此实例由 ASP.NET 在运行时提供。</param>
    </member>
    <member name="T:System.Web.Configuration.Converter">
      <summary>表示配置文件中的配置元素。</summary>
    </member>
    <member name="M:System.Web.Configuration.Converter.#ctor">
      <summary>初始化 <see cref="T:System.Web.Configuration.Converter" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.Configuration.Converter.Name">
      <summary>获取或设置转换器的唯一标识符。</summary>
      <returns>转换器的唯一标识符。</returns>
    </member>
    <member name="P:System.Web.Configuration.Converter.Properties">
      <summary>获取配置元素属性的集合。</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 对象。</returns>
    </member>
    <member name="P:System.Web.Configuration.Converter.Type">
      <summary>获取或设置 <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> 对象的完全限定类型名。</summary>
      <returns>
        <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> 对象的完全限定类型名。</returns>
    </member>
    <member name="T:System.Web.Configuration.ConvertersCollection">
      <summary>表示包含对 <see cref="T:System.Web.Configuration.Converter" /> 对象的引用的配置集合。</summary>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.Configuration.ConvertersCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.Add(System.Web.Configuration.Converter)">
      <summary>向 <see cref="T:System.Web.Configuration.ConvertersCollection" /> 实例添加 <see cref="T:System.Web.Configuration.Converter" /> 对象。</summary>
      <param name="converter">指定 <see cref="T:System.Web.Configuration.Converter" /> 引用的字符串值。</param>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.Clear">
      <summary>从 <see cref="T:System.Web.Configuration.ConvertersCollection" /> 对象中移除所有 <see cref="T:System.Web.Configuration.Converter" /> 对象。</summary>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.CreateNewElement">
      <summary>创建一个新 <see cref="T:System.Configuration.ConfigurationElement" /> 对象。</summary>
      <returns>一个新的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象。</returns>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>获取指定的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象的元素键。</summary>
      <returns>用作指定的 <see cref="T:System.Configuration.ConfigurationElement" /> 实例的键的对象。</returns>
      <param name="element">要返回其键的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象。</param>
    </member>
    <member name="P:System.Web.Configuration.ConvertersCollection.Item(System.Int32)">
      <summary>获取或设置 <see cref="T:System.Web.Configuration.ConvertersCollection" /> 集合中的一项。</summary>
      <returns>位于指定索引处的 <see cref="T:System.Web.Configuration.Converter" /> 对象。</returns>
      <param name="index">一个 <see cref="T:System.Web.Configuration.Converter" /> 集合索引。</param>
    </member>
    <member name="P:System.Web.Configuration.ConvertersCollection.Properties">
      <summary>获取配置元素属性的集合。</summary>
      <returns>一个包含配置元素属性的 <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 对象。</returns>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.Remove(System.Web.Configuration.Converter)">
      <summary>从 <see cref="T:System.Web.Configuration.ConvertersCollection" /> 对象中移除指定的转换器。</summary>
      <param name="converter">要移除的转换器的名称。</param>
    </member>
    <member name="T:System.Web.Configuration.ScriptingAuthenticationServiceSection">
      <summary>表示身份验证服务设置的配置节。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingAuthenticationServiceSection.#ctor">
      <summary>初始化 <see cref="T:System.Web.Configuration.ScriptingAuthenticationServiceSection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingAuthenticationServiceSection.Enabled">
      <summary>获取或设置一个值，该值指示是否为使用 ASP.NET 的 AJAX 功能的应用程序启用身份验证服务。</summary>
      <returns>如果启用了身份验证服务，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingAuthenticationServiceSection.RequireSSL">
      <summary>获取或设置一个值，该值指示身份验证服务是否需要 SSL 安全连接。</summary>
      <returns>如果身份验证服务需要安全套接字层 (SSL)，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="T:System.Web.Configuration.ScriptingJsonSerializationSection">
      <summary>表示配置文件的 scripting 元素中的 jsonSerialization 配置节。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingJsonSerializationSection.#ctor">
      <summary>初始化 <see cref="T:System.Web.Configuration.ScriptingJsonSerializationSection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingJsonSerializationSection.Converters">
      <summary>获取 <see cref="T:System.Web.Configuration.ConvertersCollection" /> 对象，它包含 <see cref="T:System.Web.Configuration.Converter" /> 对象的集合。</summary>
      <returns>
        <see cref="T:System.Web.Configuration.ConvertersCollection" /> 对象。</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength">
      <summary>获取或设置 JavaScript 对象符号 (JSON) 字符串的 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 对象所接受的最大长度。</summary>
      <returns>一个表示 JSON 字符串的最大长度的整数。 默认值为 102400 个字符。</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit">
      <summary>获取或设置用于约束要处理的对象级别的数目的限制。</summary>
      <returns>对象级别的数目。 默认值为 100。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">该属性设置为小于 1 的值。</exception>
    </member>
    <member name="T:System.Web.Configuration.ScriptingProfileServiceSection">
      <summary>表示配置文件服务设置的配置节。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingProfileServiceSection.#ctor">
      <summary>初始化 <see cref="T:System.Web.Configuration.ScriptingProfileServiceSection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingProfileServiceSection.Enabled">
      <summary>获取或设置一个值，该值指示是否在启用 AJAX 功能的 ASP.NET 应用程序中提供配置文件服务。</summary>
      <returns>如果启用了配置文件服务，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingProfileServiceSection.ReadAccessProperties">
      <summary>获取或设置读访问配置文件属性。</summary>
      <returns>一个数组，其中包含读访问配置文件属性的名称。</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties">
      <summary>获取或设置写访问配置文件属性。</summary>
      <returns>一个数组，其中包含写访问配置文件属性的名称。</returns>
    </member>
    <member name="T:System.Web.Configuration.ScriptingRoleServiceSection">
      <summary>表示角色服务设置的配置节。</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingRoleServiceSection.#ctor">
      <summary>初始化 <see cref="T:System.Web.Configuration.ScriptingRoleServiceSection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingRoleServiceSection.Enabled">
      <summary>获取或设置一个值，该值指示是否对使用 AJAX 功能的 ASP.NET 应用程序启用角色服务。</summary>
      <returns>如果启用了角色服务，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="T:System.Web.Configuration.ScriptingScriptResourceHandlerSection">
      <summary>表示配置文件的 &lt;scripting&gt; 元素中的 ScriptingScriptResourceHandler 配置节。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingScriptResourceHandlerSection.#ctor">
      <summary>初始化 <see cref="T:System.Web.Configuration.ScriptingScriptResourceHandlerSection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCaching">
      <summary>获取或设置是否为作为程序集内的资源而嵌入的脚本文件启用缓存。</summary>
      <returns>如果为作为程序集内的资源而嵌入的脚本文件启用了缓存，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCompression">
      <summary>获取或设置是否为作为程序集内的资源而嵌入的脚本文件启用压缩。</summary>
      <returns>如果为作为程序集内的资源而嵌入的脚本文件启用了压缩，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="T:System.Web.Configuration.ScriptingSectionGroup">
      <summary>表示脚本设置的配置节。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingSectionGroup.#ctor">
      <summary>初始化 <see cref="T:System.Web.Configuration.ScriptingSectionGroup" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingSectionGroup.ScriptResourceHandler">
      <summary>获取从当前系统配置中派生的 <see cref="T:System.Web.Configuration.ScriptingScriptResourceHandlerSection" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.Configuration.ScriptingScriptResourceHandlerSection" /> 对象。</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingSectionGroup.WebServices">
      <summary>获取从当前系统配置派生的 <see cref="T:System.Web.Configuration.ScriptingWebServicesSectionGroup" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.Configuration.ScriptingWebServicesSectionGroup" /> 对象。</returns>
    </member>
    <member name="T:System.Web.Configuration.ScriptingWebServicesSectionGroup">
      <summary>表示配置文件中的一组相关节。</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingWebServicesSectionGroup.#ctor">
      <summary>初始化 <see cref="T:System.Web.Configuration.ScriptingWebServicesSectionGroup" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingWebServicesSectionGroup.AuthenticationService">
      <summary>获取配置文件中包含的 authenticationService 节。</summary>
      <returns>
        <see cref="T:System.Web.Configuration.ScriptingAuthenticationServiceSection" /> 对象。</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingWebServicesSectionGroup.JsonSerialization">
      <summary>获取配置文件中包含的 jsonSerialization 节。</summary>
      <returns>
        <see cref="T:System.Web.Configuration.ScriptingJsonSerializationSection" /> 对象。</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingWebServicesSectionGroup.ProfileService">
      <summary>获取配置文件中包含的 profileService 节。</summary>
      <returns>
        <see cref="T:System.Web.Configuration.ScriptingProfileServiceSection" /> 对象。</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingWebServicesSectionGroup.RoleService">
      <summary>获取配置文件中包含的 roleService 节。</summary>
      <returns>
        <see cref="T:System.Web.Configuration.ScriptingRoleServiceSection" /> 对象。</returns>
    </member>
    <member name="T:System.Web.Configuration.SystemWebExtensionsSectionGroup">
      <summary>表示配置文件中的一组相关节。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.Configuration.SystemWebExtensionsSectionGroup.#ctor">
      <summary>初始化 <see cref="T:System.Web.Configuration.SystemWebExtensionsSectionGroup" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.Configuration.SystemWebExtensionsSectionGroup.Scripting">
      <summary>获取从当前系统配置派生的 <see cref="T:System.Web.Configuration.ScriptingSectionGroup" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.Configuration.ScriptingSectionGroup" /> 对象。</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicDataSourceOperation">
      <summary>描述数据源对象正在执行的操作类型。</summary>
    </member>
    <member name="F:System.Web.DynamicData.DynamicDataSourceOperation.ContextCreate">
      <summary>数据源对象正在创建数据上下文对象。</summary>
    </member>
    <member name="F:System.Web.DynamicData.DynamicDataSourceOperation.Delete">
      <summary>数据源对象正在执行删除操作。</summary>
    </member>
    <member name="F:System.Web.DynamicData.DynamicDataSourceOperation.Insert">
      <summary>数据源对象正在执行插入操作。</summary>
    </member>
    <member name="F:System.Web.DynamicData.DynamicDataSourceOperation.Select">
      <summary>数据源对象正在执行选择操作。</summary>
    </member>
    <member name="F:System.Web.DynamicData.DynamicDataSourceOperation.Update">
      <summary>数据源对象正在执行更新操作。</summary>
    </member>
    <member name="T:System.Web.DynamicData.DynamicValidatorEventArgs">
      <summary>包含事件数据的 <see cref="T:System.Web.DynamicData.DynamicValidator" /> 类的基类。</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidatorEventArgs.#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)">
      <summary>使用发生的异常和引发异常的数据源操作初始化 <see cref="T:System.Web.DynamicData.DynamicValidatorEventArgs" /> 类的新实例。</summary>
      <param name="exception">发生的异常。</param>
      <param name="operation">引发异常的数据源操作。</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicValidatorEventArgs.Exception">
      <summary>获取在数据源操作事件期间发生的异常。</summary>
      <returns>在数据源操作事件期间发生的异常。</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicValidatorEventArgs.Operation">
      <summary>获取在 <see cref="T:System.Web.DynamicData.DynamicValidator" /> 类中引发异常的数据源操作。</summary>
      <returns>引发异常的数据源操作。</returns>
    </member>
    <member name="T:System.Web.DynamicData.IDynamicDataSource">
      <summary>表示动态数据控件的数据源。</summary>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.AutoGenerateWhereClause">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> 控件是否基于 <see cref="P:System.Web.DynamicData.IDynamicDataSource.WhereParameters" /> 集合中定义的值来动态创建 Where 子句。</summary>
      <returns>如果数据源控件动态创建 Where 子句，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.ContextType">
      <summary>获取 <see cref="T:System.Data.Linq.DataContext" /> 类的类型。</summary>
      <returns>与类关联的类型。</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.EnableDelete">
      <summary>获取或设置一个值，该值指示数据源视图是否支持删除行。</summary>
      <returns>如果数据源视图支持删除行，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.EnableInsert">
      <summary>获取或设置一个值，该值指示数据源视图是否支持插入行。</summary>
      <returns>如果数据源视图支持插入行，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.EnableUpdate">
      <summary>获取或设置一个值，该值指示数据源视图是否支持更新行。</summary>
      <returns>如果数据源视图支持更新行，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.EntitySetName">
      <summary>获取或设置实体集名称。</summary>
      <returns>实体的名称。</returns>
    </member>
    <member name="E:System.Web.DynamicData.IDynamicDataSource.Exception">
      <summary>当数据字段未能验证时发生。</summary>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.Where">
      <summary>获取或设置一个值，该值指定对于以下情况必须为真的条件：即要将记录包含在 Where 子句检索到的数据中。</summary>
      <returns>用于创建 Where 子句的值。</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.WhereParameters">
      <summary>获取用于创建 Where 子句的参数的集合。</summary>
      <returns>一个集合，其中包含由此属性使用的参数。</returns>
    </member>
    <member name="T:System.Web.DynamicData.IDynamicValidatorException">
      <summary>表示动态数据异常类实现的接口。</summary>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicValidatorException.InnerExceptions">
      <summary>获取在对新数据字段或编辑的数据字段进行验证时发生的异常。</summary>
      <returns>一个集合，其中包含发生的所有异常。</returns>
    </member>
    <member name="T:System.Web.Handlers.ScriptModule">
      <summary>管理用于 ASP.NET 中 AJAX 功能的 HTTP 模块。</summary>
    </member>
    <member name="M:System.Web.Handlers.ScriptModule.#ctor">
      <summary>初始化 <see cref="T:System.Web.Handlers.ScriptModule" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.Handlers.ScriptModule.Dispose">
      <summary>释放模块使用的资源（内存除外）。</summary>
    </member>
    <member name="M:System.Web.Handlers.ScriptModule.Init(System.Web.HttpApplication)">
      <summary>初始化模块，并使其为处理请求做好准备。</summary>
      <param name="app">一个 <see cref="T:System.Web.HttpApplication" /> 对象，该对象提供对 ASP.NET 应用程序内所有应用程序共用的方法、属性和事件的访问。</param>
    </member>
    <member name="M:System.Web.Handlers.ScriptModule.System#Web#IHttpModule#Dispose">
      <summary>执行应用程序定义的与释放或重置非托管资源关联的任务。</summary>
    </member>
    <member name="M:System.Web.Handlers.ScriptModule.System#Web#IHttpModule#Init(System.Web.HttpApplication)">
      <summary>初始化模块，并使其为处理请求做好准备。</summary>
      <param name="context">一个 <see cref="T:System.Web.HttpApplication" /> 对象，该对象提供对 ASP.NET 应用程序内所有应用程序对象共用的方法、属性和事件的访问。</param>
    </member>
    <member name="T:System.Web.Handlers.ScriptResourceHandler">
      <summary>提供 HTTP 处理程序，用于处理针对作为程序集内的资源而嵌入的脚本文件的请求。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.Handlers.ScriptResourceHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.Handlers.ScriptResourceHandler" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.Handlers.ScriptResourceHandler.IsReusable">
      <summary>当在派生类中重写时，获取一个指示其他请求能否使用该类实例的值。</summary>
      <returns>任何情况下都为 true。</returns>
    </member>
    <member name="M:System.Web.Handlers.ScriptResourceHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>当在派生类中重写时，处理针对作为程序集内的资源而嵌入的脚本文件的 HTTP Web 请求。</summary>
      <param name="context">一个 <see cref="T:System.Web.HttpContext" /> 对象，它提供对用于为 HTTP 请求提供服务的内部服务器对象（如 Request、Response、Session 和 Server）的引用。</param>
    </member>
    <member name="P:System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable">
      <summary>获取一个值，该值指示其他请求能否使用 <see cref="T:System.Web.IHttpHandler" /> 实例。</summary>
      <returns>任何情况下都为 true。</returns>
    </member>
    <member name="M:System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>处理针对作为程序集内的资源而嵌入的脚本文件的 HTTP Web 请求。</summary>
      <param name="context">一个 <see cref="T:System.Web.HttpContext" /> 对象，它提供对用于为 HTTP 请求提供服务的内部服务器对象（如 Request、Response、Session 和 Server）的引用。</param>
      <exception cref="T:System.Web.HttpException">嵌入脚本的调试版和发行版的类型名称不匹配。</exception>
    </member>
    <member name="T:System.Web.Management.WebServiceErrorEvent">
      <summary>定义包含有关 Web 服务错误信息的事件。</summary>
    </member>
    <member name="M:System.Web.Management.WebServiceErrorEvent.#ctor(System.String,System.Object,System.Exception)">
      <summary>使用指定的事件参数初始化 <see cref="T:System.Web.Management.WebServiceErrorEvent" /> 类的一个新实例。</summary>
      <param name="message">事件说明。</param>
      <param name="eventSource">作为事件源的对象。</param>
      <param name="exception">与错误关联的异常。</param>
    </member>
    <member name="P:System.Web.Management.WebServiceErrorEvent.WebServiceErrorEventCode">
      <summary>获取与当前错误事件关联的代码号。</summary>
      <returns>与此事件关联的代码号。 有关事件代码的更多信息，请参见 <see cref="T:System.Web.Management.WebEventCodes" />。</returns>
    </member>
    <member name="T:System.Web.Query.Dynamic.DynamicClass">
      <summary>提供可通过 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件中的值创建新类的功能。</summary>
    </member>
    <member name="M:System.Web.Query.Dynamic.DynamicClass.#ctor">
      <summary>初始化 <see cref="T:System.Web.Query.Dynamic.DynamicClass" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.Query.Dynamic.DynamicClass.ToString">
      <summary>返回动态类的字符串表示形式。</summary>
      <returns>一个表示动态类及其属性的字符串。</returns>
    </member>
    <member name="T:System.Web.Query.Dynamic.ParseException">
      <summary>表示在 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件分析值以创建查询时发生的错误。</summary>
    </member>
    <member name="M:System.Web.Query.Dynamic.ParseException.#ctor(System.String,System.Int32)">
      <summary>初始化 <see cref="T:System.Web.Query.Dynamic.ParseException" /> 类的新实例。</summary>
      <param name="message">描述错误的消息。</param>
      <param name="position">错误的位置。</param>
    </member>
    <member name="P:System.Web.Query.Dynamic.ParseException.Position">
      <summary>获取错误的位置。</summary>
      <returns>异常发生的位置。</returns>
    </member>
    <member name="M:System.Web.Query.Dynamic.ParseException.ToString">
      <summary>返回错误消息和错误的位置。</summary>
      <returns>消息和错误的位置。</returns>
    </member>
    <member name="T:System.Web.Script.AjaxFrameworkAssemblyAttribute">
      <summary>指定包含 ASP.NET AJAX 资源的程序集。</summary>
    </member>
    <member name="M:System.Web.Script.AjaxFrameworkAssemblyAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Script.AjaxFrameworkAssemblyAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.Script.AjaxFrameworkAssemblyAttribute.GetDefaultAjaxFrameworkAssembly(System.Reflection.Assembly)">
      <summary>返回包含 ASP.NET AJAX 资源的默认 ASP.NET AJAX 框架程序集。</summary>
      <returns>默认 ASP.NET AJAX 框架程序集。</returns>
      <param name="currentAssembly">在其中声明了 <see cref="T:System.Web.Script.AjaxFrameworkAssemblyAttribute" /> 特性的程序集。</param>
    </member>
    <member name="T:System.Web.Script.Serialization.JavaScriptConverter">
      <summary>为自定义类型转换器提供抽象基类。</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
      <summary>当在派生类中重写时，将所提供的字典转换为指定类型的对象。</summary>
      <returns>反序列化的对象。</returns>
      <param name="dictionary">作为名称/值对存储的属性数据的 <see cref="T:System.Collections.Generic.IDictionary`2" /> 实例。</param>
      <param name="type">所生成对象的类型。</param>
      <param name="serializer">
        <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 实例。</param>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
      <summary>当在派生类中重写时，生成名称/值对的字典。</summary>
      <returns>一个对象，包含表示该对象数据的键/值对。</returns>
      <param name="obj">要序列化的对象。</param>
      <param name="serializer">负责序列化的对象。</param>
    </member>
    <member name="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
      <summary>当在派生类中重写时，获取受支持类型的集合。</summary>
      <returns>一个实现 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的对象，用于表示转换器支持的类型。</returns>
    </member>
    <member name="T:System.Web.Script.Serialization.JavaScriptSerializer">
      <summary>为启用 AFAX 的应用程序提供序列化和反序列化功能。</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor">
      <summary>初始化不具有类型解析程序的 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)">
      <summary>初始化具有自定义类型解析程序的 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 类的新实例。</summary>
      <param name="resolver">自定义类型解析程序对象。</param>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
      <summary>将给定对象转换为指定类型。</summary>
      <returns>已转换为目标类型的对象。</returns>
      <param name="obj">要转换的对象。</param>
      <typeparam name="T">
        <paramref name="obj" /> 将转换成的类型。</typeparam>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="obj" />（或 <paramref name="obj" /> 的嵌套成员）包含指示自定义类型的“__type”属性，但是与序列化程序关联的类型解析程序找不到相应的托管类型。 - 或 - <paramref name="obj" />（或 <paramref name="obj" /> 的嵌套成员）包含指示自定义类型的“__type”属性，但是反序列化相应 JSON 字符串的结果无法分配给所需的目标类型。 - 或 - <paramref name="obj" />（或 <paramref name="obj" /> 的嵌套成员）包含指示 <see cref="T:System.Object" /> 或不可实例化的类型（例如，抽象类型或接口）的“__type”属性。 - 或 - 尝试将 <paramref name="obj" /> 转换为类似数组的托管类型，该类型不可用作反序列化目标。 - 或 - 不能将 <paramref name="obj" /> 转换为 <paramref name="T" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> 是字典类型但遇到一个非字符串键值。 - 或 - <paramref name="obj" /> 包括不可用于 <paramref name="T" /> 类型的成员定义。</exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)">
      <summary>将指定对象转换为指定类型。</summary>
      <returns>序列化的 JSON 字符串。</returns>
      <param name="obj">要转换的对象。</param>
      <param name="targetType">对象要转换为的类型。</param>
      <exception cref="T:System.InvalidOperationException">所生成的 JSON 格式字符串超出了 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。 - 或 - <paramref name="obj" /> 包含循环引用。 循环引用出现在子对象引用父对象，而父对象又引用子对象时。</exception>
      <exception cref="T:System.ArgumentException">超出了由 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 定义的递归限制。</exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
      <summary>将指定的 JSON 字符串转换为 <paramref name="T" /> 类型的对象。</summary>
      <returns>反序列化的对象。</returns>
      <param name="input">要进行反序列化的 JSON 字符串。</param>
      <typeparam name="T">所生成对象的类型。</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="input" /> 长度超出了 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。 - 或 - 超出了由 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 定义的递归限制。 - 或 - <paramref name="input" /> 包含意外的字符序列。 - 或 - <paramref name="input" /> 是字典类型但遇到一个非字符串键值。 - 或 - <paramref name="input" /> 包括不可用于 <paramref name="T" /> 类型的成员定义。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="input" /> 包含指示自定义类型的“__type”属性，但是与序列化程序关联的类型解析程序找不到相应的托管类型。 - 或 - <paramref name="input" /> 包含指示自定义类型的“__type”属性，但是反序列化相应 JSON 字符串的结果无法分配给所需的目标类型。 - 或 - <paramref name="input" /> 包含指示 <see cref="T:System.Object" /> 或不可实例化的类型（例如，抽象类型或接口）的“__type”属性。 - 或 - 尝试将 JSON 数组转换为类似数组的托管类型，该类型不可用作 JSON 反序列化目标。 - 或 - 不能将 <paramref name="input" /> 转换为 <paramref name="T" />。</exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
      <summary>将 JSON 格式字符串转换为指定类型的对象。</summary>
      <returns>反序列化的对象。</returns>
      <param name="input">要反序列化的 JSON 字符串。</param>
      <param name="targetType">所生成对象的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="input" /> 的长度超过了 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。 - 或 - 超出了由 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 定义的递归限制。 - 或 - <paramref name="input" /> 包含意外的字符序列。 - 或 - <paramref name="input" /> 是字典类型但遇到一个非字符串键值。 - 或 - <paramref name="input" /> 包括不可用于目标类型的成员定义。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="input" /> 包含指示自定义类型的“__type”属性，但是当前与序列化程序关联的类型解析程序找不到相应的托管类型。 - 或 - <paramref name="input" /> 包含指示自定义类型的“__type”属性，但是反序列化相应 JSON 字符串的结果无法分配给所需的目标类型。 - 或 - <paramref name="input" /> 包含指示 <see cref="T:System.Object" /> 或不可实例化的类型（例如，抽象类型或接口）的“__type”属性。 - 或 - 尝试将 JSON 数组转换为类似数组的托管类型，该类型不可用作 JSON 反序列化目标。 - 或 - 不能将 <paramref name="input" /> 转换为目标类型。</exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
      <summary>将指定的 JSON 字符串转换为对象图。</summary>
      <returns>反序列化的对象。</returns>
      <param name="input">要进行反序列化的 JSON 字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="input" /> 长度超出了 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。 - 或 - 超出了由 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 定义的递归限制。 - 或 - <paramref name="input" /> 包含意外的字符序列。 - 或 - <paramref name="input" /> 是字典类型但遇到一个非字符串键值。 - 或 - <paramref name="input" /> 包括不可用于目标类型的成员定义。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="input" /> 包含指示自定义类型的“__type”属性，但是当前与序列化程序关联的类型解析程序找不到相应的托管类型。 - 或 - <paramref name="input" /> 包含指示自定义类型的“__type”属性，但是反序列化相应 JSON 字符串的结果无法分配给所需的目标类型。 - 或 - <paramref name="input" /> 包含指示 <see cref="T:System.Object" /> 或不可实例化的类型（例如，抽象类型或接口）的“__type”属性。 - 或 - 尝试将 JSON 数组转换为类似数组的托管类型，该类型不可用作 JSON 反序列化目标。 - 或 - 不能将 <paramref name="input" /> 转换为目标类型。</exception>
    </member>
    <member name="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength">
      <summary>获取或设置 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 类接受的 JSON 字符串的最大长度。</summary>
      <returns>JSON 字符串的最大长度。 默认长度为 2097152 个字符，等同于 4 MB 的 Unicode 字符串数据。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">该属性设置为小于 1 的值。</exception>
    </member>
    <member name="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit">
      <summary>获取或设置用于约束要处理的对象级别的数目的限制。</summary>
      <returns>对象级别的数目。 默认值为 100。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">该属性设置为小于 1 的值。</exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})">
      <summary>使用 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 实例注册自定义转换器。</summary>
      <param name="converters">包含要注册自定义转换器的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="converters" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)">
      <summary>将对象转换为 JSON 字符串。</summary>
      <returns>序列化的 JSON 字符串。</returns>
      <param name="obj">要序列化的对象。</param>
      <exception cref="T:System.InvalidOperationException">所生成的 JSON 字符串超出了 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。 - 或 - <paramref name="obj" /> 包含循环引用。 循环引用出现在子对象引用父对象，而父对象又引用子对象时。</exception>
      <exception cref="T:System.ArgumentException">超出了由 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 定义的递归限制。</exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)">
      <summary>序列化对象并将生成的 JSON 字符串写入指定的 <see cref="T:System.Text.StringBuilder" /> 对象。</summary>
      <param name="obj">要序列化的对象。</param>
      <param name="output">用于写 JSON 字符串的 <see cref="T:System.Text.StringBuilder" /> 对象。</param>
      <exception cref="T:System.InvalidOperationException">所生成的 JSON 字符串超出了 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。 - 或 - <paramref name="obj" /> 包含循环引用。 循环引用出现在子对象引用父对象，而父对象又引用子对象时。</exception>
      <exception cref="T:System.ArgumentException">超出了由 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 定义的递归限制。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output" /> 为 null。</exception>
    </member>
    <member name="T:System.Web.Script.Serialization.JavaScriptTypeResolver">
      <summary>提供用于实现自定义类型解析器的抽象基类。</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor">
      <summary>初始化 <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)">
      <summary>当在派生类中重写时，返回与指定类型名称相关联的 <see cref="T:System.Type" /> 对象。</summary>
      <returns>与指定类型名称相关联的 <see cref="T:System.Type" /> 对象。</returns>
      <param name="id">托管类型的名称。</param>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)">
      <summary>当在派生类中重写时，返回指定的 <see cref="T:System.Type" /> 对象的类型名称。</summary>
      <returns>指定托管类型的名称。</returns>
      <param name="type">要解析的托管类型。</param>
    </member>
    <member name="T:System.Web.Script.Serialization.ScriptIgnoreAttribute">
      <summary>指定 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 不序列化公共属性或公共字段。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.ScriptIgnoreAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Script.Serialization.ScriptIgnoreAttribute" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.Script.Serialization.ScriptIgnoreAttribute.ApplyToOverrides">
      <summary>获取或设置是否重写 <see cref="T:System.Web.Script.Serialization.ScriptIgnoreAttribute" />，以便 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 将考虑公共属性或公共字段的序列化。</summary>
      <returns>true 要重写 <see cref="T:System.Web.Script.Serialization.ScriptIgnoreAttribute" />，否则为 false。</returns>
    </member>
    <member name="T:System.Web.Script.Serialization.SimpleTypeResolver">
      <summary>为托管类型提供类型解析器。</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.SimpleTypeResolver.#ctor">
      <summary>初始化 <see cref="T:System.Web.Script.Serialization.SimpleTypeResolver" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.SimpleTypeResolver.ResolveType(System.String)">
      <summary>返回指定名称的 <see cref="T:System.Type" />。</summary>
      <returns>具有指定名称的 <see cref="T:System.Type" />（如果找到的话）；否则为 null。</returns>
      <param name="id">托管类型的程序集限定名称。</param>
    </member>
    <member name="M:System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId(System.Type)">
      <summary>返回指定的 <see cref="T:System.Type" /> 的程序集限定名称。</summary>
      <returns>一个包含指定类型的程序集限定名称的字符串。</returns>
      <param name="type">要解析的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 null。</exception>
    </member>
    <member name="T:System.Web.Script.Services.GenerateScriptTypeAttribute">
      <summary>指定服务器类型必须在代理对象中生成。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)">
      <summary>为指定类型初始化 <see cref="T:System.Web.Script.Services.GenerateScriptTypeAttribute" /> 类的新实例。</summary>
      <param name="type">要包括在代理类中的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 null。</exception>
    </member>
    <member name="P:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId">
      <summary>获取或设置类型元数据标记的类型标识符。</summary>
      <returns>序列化的 JavaScript 对象符号 (JSON) 字符串中的类型元数据标记的类型标识符。 默认值为此类型的程序集限定名称。</returns>
    </member>
    <member name="P:System.Web.Script.Services.GenerateScriptTypeAttribute.Type">
      <summary>获取包含在代理对象中的类型。</summary>
      <returns>包含在所生成的代理对象中的类型对象。</returns>
    </member>
    <member name="T:System.Web.Script.Services.ProxyGenerator">
      <summary>表示代理代码生成器。</summary>
    </member>
    <member name="M:System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(System.Type,System.String,System.Boolean)">
      <summary>检索指定类型的代理生成代码。</summary>
      <returns>代理生成代码。</returns>
      <param name="type">要获取其脚本的对象的类型。</param>
      <param name="path">终结点的位置。</param>
      <param name="debug">true 表示包含 XML 代码注释；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 或 <paramref name="path" /> 参数为 null。</exception>
      <exception cref="T:System.ArgumentException">代理生成不支持该指定类型。</exception>
    </member>
    <member name="M:System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(System.Type,System.String,System.Boolean,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>使用路径和服务终结点检索指定类型的代理生成代码。</summary>
      <returns>代理生成代码。</returns>
      <param name="type">要获取其脚本的对象的类型。</param>
      <param name="path">终结点的位置。</param>
      <param name="debug">true 表示包含 XML 代码注释；否则为 false。</param>
      <param name="serviceEndpoint">服务终结点。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 或 <paramref name="path" /> 参数为 null。</exception>
      <exception cref="T:System.ArgumentException">代理生成不支持该指定类型。</exception>
    </member>
    <member name="T:System.Web.Script.Services.ResponseFormat">
      <summary>指定如何对 Web 方法返回类型进行序列化。</summary>
    </member>
    <member name="F:System.Web.Script.Services.ResponseFormat.Json">
      <summary>该返回类型将序列化为 JavaScript 对象符号 (JSON)。</summary>
    </member>
    <member name="F:System.Web.Script.Services.ResponseFormat.Xml">
      <summary>该返回类型将序列化为 XML。</summary>
    </member>
    <member name="T:System.Web.Script.Services.ScriptMethodAttribute">
      <summary>指定用于调用方法的 HTTP 谓词以及响应的格式。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.Script.Services.ScriptMethodAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Script.Services.ScriptMethodAttribute" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat">
      <summary>获取或设置方法响应的格式。</summary>
      <returns>
        <see cref="T:System.Web.Script.Services.ResponseFormat" /> 值之一。 默认值为 Json。</returns>
    </member>
    <member name="P:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet">
      <summary>获取或设置一个值，该值指示是否通过使用 HTTP GET 调用方法。</summary>
      <returns>如果通过使用 HTTP GET 命令调用方法，则为 true；如果通过使用 HTTP POST 命令调用方法，则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString">
      <summary>获取或设置一个值，该值指示是否将所有返回类型都序列化为包含字符串类型的 XML。</summary>
      <returns>如果所有返回类型都序列化为 XML，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="T:System.Web.Script.Services.ScriptServiceAttribute">
      <summary>指示某个 Web 服务可从脚本调用。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.Script.Services.ScriptServiceAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.Script.Services.ScriptServiceAttribute" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Web.UI.AjaxFrameworkMode">
      <summary>指定 Microsoft Ajax 客户端库的客户端脚本以何种方式包括在客户端上。</summary>
    </member>
    <member name="F:System.Web.UI.AjaxFrameworkMode.Disabled">
      <summary>指定所有 Microsoft Ajax 脚本功能处于禁用状态，并且 <see cref="T:System.Web.UI.ScriptManager" /> 控件不自动引用任何脚本。</summary>
    </member>
    <member name="F:System.Web.UI.AjaxFrameworkMode.Enabled">
      <summary>指定 <see cref="T:System.Web.UI.ScriptManager" /> 控件自动包括 MicrosoftAjax.js 脚本文件，该文件是所有核心框架脚本的合并脚本文件（旧版行为）。</summary>
    </member>
    <member name="F:System.Web.UI.AjaxFrameworkMode.Explicit">
      <summary>指定您将显式包括对页面所需的单独框架核心脚本文件的脚本引用，并且将包括对每个脚本文件所需的依赖项的引用。</summary>
    </member>
    <member name="T:System.Web.UI.AsyncPostBackErrorEventArgs">
      <summary>为 <see cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackErrorEventArgs.#ctor(System.Exception)">
      <summary>初始化 <see cref="T:System.Web.UI.AsyncPostBackErrorEventArgs" /> 类的新实例。</summary>
      <param name="exception">在呈现部分页期间引发的服务器异常。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="exception" /> 为 null。</exception>
    </member>
    <member name="P:System.Web.UI.AsyncPostBackErrorEventArgs.Exception">
      <summary>获取在呈现部分页期间引发的 <see cref="T:System.Exception" />。</summary>
      <returns>
        <see cref="T:System.Exception" /> 对象。</returns>
    </member>
    <member name="T:System.Web.UI.AsyncPostBackTrigger">
      <summary>定义一个控件，并将该控件的可选事件定义为导致 <see cref="T:System.Web.UI.UpdatePanel" /> 控件刷新的异步回发控件触发器。</summary>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackTrigger.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.AsyncPostBackTrigger.ControlID">
      <summary>获取或设置控件的名称，该控件会触发 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的异步回发。</summary>
      <returns>服务器控件 ID。</returns>
    </member>
    <member name="P:System.Web.UI.AsyncPostBackTrigger.EventName">
      <summary>获取或设置触发对 <see cref="T:System.Web.UI.UpdatePanel" /> 控件进行更新的回发控件事件。</summary>
      <returns>事件名称。 默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackTrigger.HasTriggered">
      <summary>返回一个指示是否已调用触发器的值。</summary>
      <returns>如果已调用触发器，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackTrigger.Initialize">
      <summary>初始化 <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> 控件，并确定触发器中命名的事件是否存在和有效。</summary>
      <exception cref="T:System.InvalidOperationException">在页上找不到 <see cref="T:System.Web.UI.ScriptManager" /> 控件。 - 或 - 对于在 <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> 属性中命名的控件，找不到在 <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> 属性中命名的事件。 - 或 - 对于在 <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> 属性中命名的控件，在 <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> 属性中命名的事件与标准事件处理程序签名不匹配。</exception>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)">
      <summary>引发事件，该事件将触发 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的回发和刷新。</summary>
      <param name="sender">事件发送方。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackTrigger.ToString">
      <summary>返回当前 <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> 控件的字符串表示形式。</summary>
      <returns>一个字符串，表示当前的 <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> 控件。</returns>
    </member>
    <member name="T:System.Web.UI.AuthenticationServiceManager">
      <summary>配置身份验证服务的自定义实现的位置。</summary>
    </member>
    <member name="M:System.Web.UI.AuthenticationServiceManager.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.AuthenticationServiceManager" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.AuthenticationServiceManager.Path">
      <summary>获取或设置身份验证服务的路径。</summary>
      <returns>自定义身份验证 Web 服务的路径。</returns>
      <exception cref="T:System.ArgumentException">在控件层次结构中设置了多个唯一路径。</exception>
    </member>
    <member name="T:System.Web.UI.CompositeScriptReference">
      <summary>表示要合并为单一复合脚本的脚本引用的集合。</summary>
    </member>
    <member name="M:System.Web.UI.CompositeScriptReference.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.CompositeScriptReference" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.CompositeScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)">
      <summary>返回呈现为 script 元素的 src 特性值的 URL。</summary>
      <returns>一个字符串，其中包含 URL。</returns>
      <param name="scriptManager">目标网页上的 ScriptManager 控件。</param>
      <param name="zip">若要压缩脚本，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.CompositeScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)">
      <summary>确定复合脚本是否为对 ASP.NET AJAX Framework 脚本的引用。</summary>
      <returns>如果复合脚本为对 ASP.NET AJAX Framework 脚本的引用，则为 true；否则为 false。</returns>
      <param name="scriptManager">包含在页上的 <see cref="T:System.Web.UI.ScriptManager" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.CompositeScriptReference.IsFromSystemWebExtensions">
      <summary>指示复合脚本是否包含对 ASP.NET AJAX 框架脚本的引用。</summary>
      <returns>如果复合脚本包含对 ASP.NET AJAX 框架脚本的引用，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.CompositeScriptReference.Scripts">
      <summary>获取复合脚本对象中所包含脚本引用的集合。</summary>
      <returns>复合脚本对象中所包含脚本引用的集合。</returns>
    </member>
    <member name="T:System.Web.UI.CompositeScriptReferenceEventArgs">
      <summary>为 <see cref="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.CompositeScriptReferenceEventArgs.#ctor(System.Web.UI.CompositeScriptReference)">
      <summary>初始化 <see cref="T:System.Web.UI.CompositeScriptReferenceEventArgs" /> 类的新实例。</summary>
      <param name="compositeScript">复合脚本引用。</param>
    </member>
    <member name="P:System.Web.UI.CompositeScriptReferenceEventArgs.CompositeScript">
      <summary>获取事件的复合脚本引用。</summary>
      <returns>复合脚本引用。</returns>
    </member>
    <member name="T:System.Web.UI.ExtenderControl">
      <summary>为扩展程序控件提供抽象基类。</summary>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.ExtenderControl" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.GetScriptDescriptors(System.Web.UI.Control)">
      <summary>当在派生类中重写时，为控件注册 <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象的枚举。</returns>
      <param name="targetControl">与扩展程序相关联的服务器控件。</param>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.GetScriptReferences">
      <summary>当在派生类中重写时，为控件注册脚本库。</summary>
      <returns>一个对象，它实现 <see cref="T:System.Collections.IEnumerable" /> 接口并包含已注册为嵌入资源的 ECMAScript (JavaScript) 文件。</returns>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.OnPreRender(System.EventArgs)">
      <summary>引发 <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> 事件，并将扩展程序脚本控件注册到 <see cref="T:System.Web.UI.ScriptManager" /> 控件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.Render(System.Web.UI.HtmlTextWriter)">
      <summary>将服务器控件内容发送到提供的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，此对象编写要在浏览器窗口中呈现的内容。</summary>
      <param name="writer">接收服务器控件内容的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.System#Web#UI#IExtenderControl#GetScriptDescriptors(System.Web.UI.Control)">
      <summary>为控件注册 <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象。 此方法是私有成员，无法继承。</summary>
      <returns>一个实现 <see cref="T:System.Collections.IEnumerable" /> 接口并包含 <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象的对象。</returns>
      <param name="targetControl">与扩展程序相关联的服务器控件。</param>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.System#Web#UI#IExtenderControl#GetScriptReferences">
      <summary>为控件注册脚本库。 此方法是私有成员，无法继承。</summary>
      <returns>一个对象，它实现 <see cref="T:System.Collections.IEnumerable" /> 接口并包含已注册为嵌入资源的 ECMAScript (JavaScript) 文件。</returns>
    </member>
    <member name="P:System.Web.UI.ExtenderControl.TargetControlID">
      <summary>获取或设置与扩展程序相关联的控件的 ID。</summary>
      <returns>要扩展的服务器控件的 ID。</returns>
    </member>
    <member name="P:System.Web.UI.ExtenderControl.Visible">
      <summary>重写 <see cref="P:System.Web.UI.Control.Visible" /> 属性可以禁止设置此值。</summary>
      <returns>如果在页上呈现扩展程序控件，则为 true；否则为 false。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Web.UI.HistoryEventArgs">
      <summary>为 <see cref="E:System.Web.UI.ScriptManager.Navigate" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.HistoryEventArgs.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>初始化 <see cref="T:System.Web.UI.HistoryEventArgs" /> 类的新实例。</summary>
      <param name="state">表示网页状态的名称/值对的集合。</param>
    </member>
    <member name="P:System.Web.UI.HistoryEventArgs.State">
      <summary>获取表示网页状态的名称/值对的集合。</summary>
      <returns>表示网页状态的集合。</returns>
    </member>
    <member name="T:System.Web.UI.IExtenderControl">
      <summary>定义扩展程序控件的行为。</summary>
    </member>
    <member name="M:System.Web.UI.IExtenderControl.GetScriptDescriptors(System.Web.UI.Control)">
      <summary>为控件注册 <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象，并为该控件返回包含 <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象的对象。</summary>
      <returns>一个包含 <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象的 <see cref="T:System.Collections.IEnumerable" /> 集合。</returns>
      <param name="targetControl">与扩展程序相关联的服务器控件。</param>
    </member>
    <member name="M:System.Web.UI.IExtenderControl.GetScriptReferences">
      <summary>为控件注册脚本库，并返回已注册为嵌入资源的 ECMAScript (JavaScript) 文件的枚举。</summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerable" /> 集合，其中包含已注册为嵌入资源的 JavaScript 文件。</returns>
    </member>
    <member name="T:System.Web.UI.IScriptControl">
      <summary>定义 ASP.NET 服务器控件为在启用 AJAX 的应用程序中定义 ECMAScript (JavaScript) 资源而必须实现的方法。</summary>
    </member>
    <member name="M:System.Web.UI.IScriptControl.GetScriptDescriptors">
      <summary>获取表示 ECMAScript (JavaScript) 客户端组件的脚本说明符的集合。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象的 <see cref="T:System.Collections.IEnumerable" /> 集合。</returns>
    </member>
    <member name="M:System.Web.UI.IScriptControl.GetScriptReferences">
      <summary>获取用于定义控件需要的脚本资源的 <see cref="T:System.Web.UI.ScriptReference" /> 对象的集合。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptReference" /> 对象的 <see cref="T:System.Collections.IEnumerable" /> 集合。</returns>
    </member>
    <member name="T:System.Web.UI.PostBackTrigger">
      <summary>将 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内部的控件定义为回发控件。</summary>
    </member>
    <member name="M:System.Web.UI.PostBackTrigger.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.PostBackTrigger" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.PostBackTrigger.ControlID">
      <summary>获取或设置一个控件的名称，该控件充当 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的 <see cref="T:System.Web.UI.PostBackTrigger" /> 控件。</summary>
      <returns>一个表示服务器控件 ID 的字符串。</returns>
    </member>
    <member name="M:System.Web.UI.PostBackTrigger.HasTriggered">
      <summary>返回一个指示是否已激活触发器的值。</summary>
      <returns>如果已激活触发器，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.PostBackTrigger.Initialize">
      <summary>初始化 <see cref="T:System.Web.UI.PostBackTrigger" /> 对象。</summary>
    </member>
    <member name="M:System.Web.UI.PostBackTrigger.ToString">
      <summary>返回表示当前 <see cref="T:System.Web.UI.PostBackTrigger" /> 对象的字符串。</summary>
      <returns>表示当前 <see cref="T:System.Web.UI.PostBackTrigger" /> 对象的字符串。</returns>
    </member>
    <member name="T:System.Web.UI.ProfileServiceManager">
      <summary>配置一组预加载的配置文件属性以及配置文件服务的自定义实现的位置。</summary>
    </member>
    <member name="M:System.Web.UI.ProfileServiceManager.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.ProfileServiceManager" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.ProfileServiceManager.LoadProperties">
      <summary>获取或设置一个数组，其中包含将提供给客户端脚本使用的配置文件属性。</summary>
      <returns>一个字符串数组，其中包含将预加载并将提供给客户端脚本使用的配置文件属性的名称。 默认为空数组。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Web.UI.ProfileServiceManager.LoadProperties" /> 属性包含当前应用程序的配置文件架构中不存在的属性名。</exception>
    </member>
    <member name="P:System.Web.UI.ProfileServiceManager.Path">
      <summary>获取或设置配置文件 Web 服务的自定义实现的路径。</summary>
      <returns>配置文件 Web 服务的自定义实现的路径。</returns>
      <exception cref="T:System.ArgumentException">在控件层次结构中设置了多个唯一路径。</exception>
    </member>
    <member name="T:System.Web.UI.RegisteredArrayDeclaration">
      <summary>用于访问先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的 ECMAScript (JavaScript) 数组声明。</summary>
    </member>
    <member name="P:System.Web.UI.RegisteredArrayDeclaration.Control">
      <summary>获取注册数组声明的控件。</summary>
      <returns>对注册数组的控件的引用。</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredArrayDeclaration.Name">
      <summary>获取数组的名称。</summary>
      <returns>数组的名称。</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredArrayDeclaration.Value">
      <summary>获取数组成员的值。</summary>
      <returns>数组的值。</returns>
    </member>
    <member name="T:System.Web.UI.RegisteredDisposeScript">
      <summary>用于访问 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内部某个控件的 dispose 脚本。</summary>
    </member>
    <member name="P:System.Web.UI.RegisteredDisposeScript.Control">
      <summary>获取注册 dispose 脚本的控件。</summary>
      <returns>对注册 dispose 脚本的控件的引用。</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredDisposeScript.Script">
      <summary>获取 dispose 脚本的名称。</summary>
      <returns>dispose 脚本的名称。</returns>
    </member>
    <member name="T:System.Web.UI.RegisteredExpandoAttribute">
      <summary>用于访问先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的自定义 (expando) 特性的名称/值对。</summary>
    </member>
    <member name="P:System.Web.UI.RegisteredExpandoAttribute.Control">
      <summary>获取注册自定义 (expando) 特性的控件。</summary>
      <returns>对注册自定义特性的控件的引用。</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredExpandoAttribute.ControlId">
      <summary>获取注册自定义 (expando) 特性的控件的标识符。</summary>
      <returns>注册自定义特性的控件的标识符。</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredExpandoAttribute.Encode">
      <summary>获取一个值，该值指示自定义 (expando) 特性是否已编码。</summary>
      <returns>如果自定义特性已编码，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredExpandoAttribute.Name">
      <summary>获取自定义 (expando) 特性的名称。</summary>
      <returns>自定义特性的名称。</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredExpandoAttribute.Value">
      <summary>获取自定义 (expando) 特性的值。</summary>
      <returns>自定义特性的值。</returns>
    </member>
    <member name="T:System.Web.UI.RegisteredHiddenField">
      <summary>用于访问先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的隐藏值。</summary>
    </member>
    <member name="P:System.Web.UI.RegisteredHiddenField.Control">
      <summary>获取注册隐藏字段的控件。</summary>
      <returns>对注册隐藏字段的控件的引用。</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredHiddenField.InitialValue">
      <summary>获取隐藏字段的初始值。</summary>
      <returns>隐藏字段的初始值。</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredHiddenField.Name">
      <summary>获取隐藏字段的名称。</summary>
      <returns>隐藏字段的名称。</returns>
    </member>
    <member name="T:System.Web.UI.RegisteredScript">
      <summary>用来访问先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的客户端脚本。</summary>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.AddScriptTags">
      <summary>获取一个值，该值指示脚本块是否应括在 &lt;script&gt; 标记中在网页上呈现。</summary>
      <returns>如果脚本应括在 &lt;script&gt; 标记中在网页上呈现，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.Control">
      <summary>获取注册脚本的控件。</summary>
      <returns>对注册脚本的控件的引用。</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.Key">
      <summary>获取与 <see cref="P:System.Web.UI.RegisteredScript.Type" /> 值一起标识脚本的键。</summary>
      <returns>键的值。 此值可以为 null 或空。</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.Script">
      <summary>获取脚本的文件名。</summary>
      <returns>脚本的文件名。 此值可以为 null 或空。</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.ScriptType">
      <summary>获取指示脚本将何时执行的脚本类型。</summary>
      <returns>由 <see cref="T:System.Web.UI.RegisteredScriptType" /> 枚举定义的值。</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.Type">
      <summary>获取与 <see cref="P:System.Web.UI.RegisteredScript.Key" /> 值一起标识脚本的客户端脚本类型。</summary>
      <returns>脚本的类型。</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.Url">
      <summary>获取脚本文件的 URL。</summary>
      <returns>该脚本文件的 URL。 此值可以为 null 或空。</returns>
    </member>
    <member name="T:System.Web.UI.RegisteredScriptType">
      <summary>指定 <see cref="T:System.Web.UI.RegisteredScript" /> 对象所表示的客户端脚本块的类型。</summary>
    </member>
    <member name="F:System.Web.UI.RegisteredScriptType.ClientScriptBlock">
      <summary>在初始页呈现期间执行一次的客户端代码块。 此类型的客户端脚本块在部分页更新期间不会执行。</summary>
    </member>
    <member name="F:System.Web.UI.RegisteredScriptType.ClientScriptInclude">
      <summary>在每次发生异步回发时执行的客户端脚本。</summary>
    </member>
    <member name="F:System.Web.UI.RegisteredScriptType.ClientStartupScript">
      <summary>与在控件启动时执行的控件相关联的客户端脚本。</summary>
    </member>
    <member name="F:System.Web.UI.RegisteredScriptType.OnSubmitStatement">
      <summary>在提交页时执行的客户端脚本。</summary>
    </member>
    <member name="T:System.Web.UI.RoleServiceManager">
      <summary>配置角色服务的自定义实现的位置。</summary>
    </member>
    <member name="M:System.Web.UI.RoleServiceManager.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.RoleServiceManager" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.RoleServiceManager.LoadRoles">
      <summary>获取或设置一个值，该值指示是否必须检索当前已登录用户的角色列表。</summary>
      <returns>如果必须检索角色列表，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.RoleServiceManager.Path">
      <summary>获取或设置角色服务的路径。</summary>
      <returns>自定义角色 Web 服务的路径。</returns>
      <exception cref="T:System.ArgumentException">在控件层次结构中设置了多个唯一路径。</exception>
    </member>
    <member name="T:System.Web.UI.ScriptBehaviorDescriptor">
      <summary>扩展 <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> 类以提供包装程序来定义转换为客户端脚本的行为。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptBehaviorDescriptor.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.ScriptBehaviorDescriptor" /> 类的新实例。</summary>
      <param name="type">一个字符串，表示要描述的客户端行为的类型。</param>
      <param name="elementID">目标控件的客户端 ID。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> 或 <paramref name="elementID" /> 为 null 或空字符串 ("")。</exception>
    </member>
    <member name="P:System.Web.UI.ScriptBehaviorDescriptor.ClientID">
      <summary>获取当前 <see cref="T:System.Web.UI.ScriptBehaviorDescriptor" /> 实例的标识符。</summary>
      <returns>ID 或生成的值，具体取决于下表中描述的条件。 已设置 <see cref="P:System.Web.UI.ScriptComponentDescriptor.ID" /> 属性。<see cref="P:System.Web.UI.ScriptComponentDescriptor.ID" /> 属性的值。 尚未设置 <see cref="P:System.Web.UI.ScriptComponentDescriptor.ID" /> 属性。生成的 ID，它由 <see cref="P:System.Web.UI.ScriptBehaviorDescriptor.ElementID" /> 属性值构成，后面分别跟有一个美元符号 ($) 和 <see cref="P:System.Web.UI.ScriptBehaviorDescriptor.Name" /> 属性值。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptBehaviorDescriptor.ElementID">
      <summary>获取关联元素的 id 特性，它在构造函数中进行设置。</summary>
      <returns>目标控件的客户端 ID，该 ID 在构造函数中进行设置。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptBehaviorDescriptor.GetScript">
      <summary>获取在页上实现目标控件的客户端脚本。</summary>
      <returns>在页上实现目标控件的客户端脚本。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptBehaviorDescriptor.Name">
      <summary>获取或设置当前 <see cref="T:System.Web.UI.ScriptBehaviorDescriptor" /> 实例的名称。</summary>
      <returns>如果已设置,则为当前 <see cref="T:System.Web.UI.ScriptBehaviorDescriptor" /> 实例的名称；否则为生成的名称。</returns>
    </member>
    <member name="T:System.Web.UI.ScriptComponentDescriptor">
      <summary>提供用于将服务器组件转换为客户端脚本的包装程序。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> 类的实例。</summary>
      <param name="type">目标客户端组件的类型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> 为 null 或空字符串 ("")。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.AddComponentProperty(System.String,System.String)">
      <summary>添加指定的属性，并将该属性与指定的元素相关联。</summary>
      <param name="name">属性的名称。</param>
      <param name="componentID">目标组件的 ID。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 或 <paramref name="componentID" /> 为 null 或空字符串 ("")。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.AddElementProperty(System.String,System.String)">
      <summary>添加指定的属性，并将该属性与指定的组件相关联。</summary>
      <param name="name">属性的名称。</param>
      <param name="elementID">目标元素的 ID。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 或 <paramref name="component" /> 为 null 或空字符串 ("")。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.AddEvent(System.String,System.String)">
      <summary>添加指定的事件和处理程序。</summary>
      <param name="name">事件的名称。</param>
      <param name="handler">指定事件的处理程序函数的名称。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 或 <paramref name="handler" /> 为 null 或空字符串 ("")。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.AddProperty(System.String,System.Object)">
      <summary>添加指定的属性和值。</summary>
      <param name="name">属性的名称。</param>
      <param name="value">该属性的值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 为 null 或空字符串 ("")。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.AddScriptProperty(System.String,System.String)">
      <summary>添加指定的属性，并将该属性与指定的脚本相关联。</summary>
      <param name="name">属性的名称。</param>
      <param name="script">呈现给浏览器的脚本。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="script" /> 为 null 或空字符串 ("")。</exception>
    </member>
    <member name="P:System.Web.UI.ScriptComponentDescriptor.ClientID">
      <summary>当在派生类中重写时，获取客户端组件的标识符。</summary>
      <returns>客户端组件的 ID。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.GetScript">
      <summary>获取在页上实现目标控件的客户端脚本。</summary>
      <returns>在页上实现目标控件的客户端脚本。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptComponentDescriptor.ID">
      <summary>获取或设置当前 <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> 实例的 ID。</summary>
      <returns>如果已设置，则为当前 <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> 实例的 ID；否则为空字符串 ("")。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptComponentDescriptor.Type">
      <summary>获取或设置目标客户端组件的类型。</summary>
      <returns>目标客户端组件的类型。</returns>
      <exception cref="T:System.ArgumentException">已尝试将该属性设置为 null。</exception>
    </member>
    <member name="T:System.Web.UI.ScriptControl">
      <summary>为脚本控件提供抽象基类。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptControl.#ctor">
      <summary>初始化派生类中 <see cref="T:System.Web.UI.ScriptControl" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptControl.GetScriptDescriptors">
      <summary>当在派生类中重写时，返回控件的 <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象的 <see cref="T:System.Collections.IEnumerable" /> 集合。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptControl.GetScriptReferences">
      <summary>当在派生类中重写时，返回控件的脚本文件。</summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerable" /> 集合，其中包含已注册为嵌入资源的 ECMAScript (JavaScript) 文件。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptControl.OnPreRender(System.EventArgs)">
      <summary>引发 <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> 事件，并将脚本控件注册到 <see cref="T:System.Web.UI.ScriptManager" /> 控件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.ScriptControl.Render(System.Web.UI.HtmlTextWriter)">
      <summary>引发 <see cref="M:System.Web.UI.Control.Render(System.EventArgs)" /> 事件并将服务器控件内容发送至提供的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，此对象编写要呈现到浏览器的内容。</summary>
      <param name="writer">接收服务器控件内容的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.ScriptControl.System#Web#UI#IScriptControl#GetScriptDescriptors">
      <summary>当在派生类中重写时，为控件注册 <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象的 <see cref="T:System.Collections.IEnumerable" /> 集合。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptControl.System#Web#UI#IScriptControl#GetScriptReferences">
      <summary>当在派生类中重写时，为控件注册脚本文件。</summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerable" /> 集合，其中包含已注册为嵌入资源的 ECMAScript (JavaScript) 文件。</returns>
    </member>
    <member name="T:System.Web.UI.ScriptControlDescriptor">
      <summary>定义客户端控件对象。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptControlDescriptor.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.ScriptControlDescriptor" /> 类的新实例。</summary>
      <param name="type">要创建的客户端控件对象的类型。</param>
      <param name="elementID">表示要创建的控件对象的 HTML 元素 ID。</param>
    </member>
    <member name="P:System.Web.UI.ScriptControlDescriptor.ClientID">
      <summary>获取客户端组件的 ID。</summary>
      <returns>客户端组件的 ID。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptControlDescriptor.ElementID">
      <summary>获取客户端控件对象的 HTML ID。</summary>
      <returns>客户端控件对象的 HTML ID。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptControlDescriptor.ID">
      <summary>获取当前 <see cref="T:System.Web.UI.ScriptControlDescriptor" /> 实例的 ID。</summary>
      <returns>如果已设置，则为当前 <see cref="T:System.Web.UI.ScriptControlDescriptor" /> 实例的 ID；否则为空字符串 ("")。</returns>
      <exception cref="T:System.InvalidOperationException">已尝试设置 <see cref="P:System.Web.UI.ScriptControlDescriptor.ID" /> 属性。</exception>
    </member>
    <member name="T:System.Web.UI.ScriptDescriptor">
      <summary>在派生类中重写时，定义可创建客户端类的一个实例的脚本。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptDescriptor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.ScriptDescriptor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptDescriptor.GetScript">
      <summary>当在派生类中重写时，返回可创建客户端类或对象的脚本。</summary>
      <returns>用于创建客户端对象的 ECMAScript (JavaScript) 代码。</returns>
    </member>
    <member name="T:System.Web.UI.ScriptManager">
      <summary>为 Web 和应用程序服务管理 ASP.NET Ajax 脚本库和脚本文件、部分页面呈现以及客户端代理类生成。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManager.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.ScriptManager" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)">
      <summary>使用指定的状态数据集合和状态标题创建历史时间点，然后将它添加到浏览器的历史记录堆栈中。</summary>
      <param name="state">包含状态数据的键/值对的集合。</param>
      <param name="title">将添加到浏览器的历史记录堆栈中、作为此状态的标题的文本。</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String)">
      <summary>使用指定的状态键和状态值创建历史时间点，然后将它添加到浏览器的历史记录堆栈中。</summary>
      <param name="key">标识网页状态的键/值对的键部分。</param>
      <param name="value">标识网页状态的键/值对的值部分。</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String,System.String)">
      <summary>使用指定的状态键、状态值和状态标题创建历史时间点，然后将它添加到浏览器的历史记录堆栈中。</summary>
      <param name="key">标识网页状态的键/值对的键部分。</param>
      <param name="value">标识网页状态的键/值对的值部分。</param>
      <param name="title">将添加到浏览器的历史记录堆栈中、作为此状态的标题的文本。</param>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AjaxFrameworkAssembly">
      <summary>获取页上的组件所使用的 Ajax framework 程序集。</summary>
      <returns>Ajax 框架程序集。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AjaxFrameworkMode">
      <summary>获取或设置一个值，该值指定客户端上将如何包括 Microsoft Ajax 客户端库的客户端脚本。</summary>
      <returns>一个 <see cref="T:System.Web.UI.AjaxFrameworkMode" /> 枚举值。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect">
      <summary>获取或设置一个值，以确定异步回发出现错误时是否使用 Web.config 文件的自定义错误部分。</summary>
      <returns>如果使用 Web.config 文件中的自定义错误设置来确定异步回发期间的错误行为，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="E:System.Web.UI.ScriptManager.AsyncPostBackError">
      <summary>当异步回发期间出现页面错误时发生。</summary>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage">
      <summary>获取或设置异步回发期间发生未处理的服务器异常时发送到客户端的错误消息。</summary>
      <returns>错误消息。 默认值为空字符串 ("")。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID">
      <summary>获取导致此异步回发的控件的唯一 ID。</summary>
      <returns>如果控件具有 ID，则为该控件的唯一 ID；否则，为空字符串 ("")。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AsyncPostBackTimeout">
      <summary>获取或设置一个值，该值指示在未收到响应时异步回发超时前的时间（以秒为单位）。</summary>
      <returns>一个表示超时的整数（以秒为单位）。 默认值为 90 秒。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AuthenticationService">
      <summary>获取与当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例关联的 <see cref="T:System.Web.UI.AuthenticationServiceManager" /> 对象。</summary>
      <returns>当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例的 <see cref="T:System.Web.UI.AuthenticationServiceManager" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.ClientNavigateHandler">
      <summary>获取或设置在客户端上处理 Sys.Application.navigate 事件的方法的名称。</summary>
      <returns>用于在客户端上处理 Sys.Application.navigate 事件的方法的名称。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.CompositeScript">
      <summary>获取对支持网页的复合脚本的引用。</summary>
      <returns>对复合脚本的引用。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EmptyPageUrl">
      <summary>获取或设置空白网页的 URL。</summary>
      <returns>要在目标网页为空时使用的 URL。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnableCdn">
      <summary>确定当前页是否从 CDN（内容传递网络）路径加载客户端脚本引用。</summary>
      <returns>若果从 CDN 路径加载客户端脚本引用，则为 true，否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnableCdnFallback">
      <summary>在无法访问 CDN 的情况下启动脚本本地副本加载。</summary>
      <returns>如果启用回退 CDN 值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnableHistory">
      <summary>获取或设置一个值，该值指示网页是否支持历史时间点管理。</summary>
      <returns>如果网页支持在浏览器的历史记录堆栈中添加历史时间点，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnablePageMethods">
      <summary>获取或设置一个值，该值指示能否从客户端脚本调用 ASP.NET 页中公共静态页方法。</summary>
      <returns>如果可以作为 Web 方法从客户端脚本调用 ASP.NET 页上的静态页方法，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnablePartialRendering">
      <summary>获取或设置一个可部分呈现页面的值，以便使用 <see cref="T:System.Web.UI.UpdatePanel" /> 控件来单独更新页面区域。</summary>
      <returns>如果启用了部分呈现且完全页面更新被禁止，则为 true；否则为 false。 默认值为 true。</returns>
      <exception cref="T:System.InvalidOperationException">在发生页面的 <see cref="E:System.Web.UI.Control.Init" /> 事件后设置 <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> 属性。</exception>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnableScriptGlobalization">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.ScriptManager" /> 控件是否呈现支持分析区域性特定的信息并设置其格式的脚本。</summary>
      <returns>如果可以显示区域性特定的信息，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnableScriptLocalization">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.ScriptManager" /> 控件是否呈现脚本文件的本地化版本。</summary>
      <returns>如果呈现本地化脚本文件，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnableSecureHistoryState">
      <summary>获取或设置一个值，该值指示是否加密历史记录状态字符串。</summary>
      <returns>如果应加密历史记录状态字符串，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetCurrent(System.Web.UI.Page)">
      <summary>获取给定 <see cref="T:System.Web.UI.Page" /> 对象的 <see cref="T:System.Web.UI.ScriptManager" /> 实例。</summary>
      <returns>选定 <see cref="T:System.Web.UI.Page" /> 对象的当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例；如果没有定义实例，则为 null。</returns>
      <param name="page">要从中检索 <see cref="T:System.Web.UI.ScriptManager" /> 的页实例。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="page" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations">
      <summary>检索先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的 ECMAScript (JavaScript) 数组声明的只读集合。</summary>
      <returns>一个包含数组声明的泛型集合。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks">
      <summary>检索先前已向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册的客户端脚本块的只读集合。</summary>
      <returns>一个包含客户端脚本块的泛型集合。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredDisposeScripts">
      <summary>检索先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的 dispose 脚本的只读集合。</summary>
      <returns>一个包含 dispose 脚本的泛型集合。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes">
      <summary>检索先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的自定义 (expando) 特性的只读集合。</summary>
      <returns>一个包含自定义特性的泛型集合。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredHiddenFields">
      <summary>检索先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的隐藏字段的只读集合。</summary>
      <returns>一个包含隐藏字段的泛型集合。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements">
      <summary>检索先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的 onsubmit 语句的只读集合。</summary>
      <returns>一个包含 onsubmit 语句的泛型集合。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredStartupScripts">
      <summary>检索先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的启动脚本的只读集合。</summary>
      <returns>一个包含启动脚本的泛型集合。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetStateString">
      <summary>检索包含表示网页状态的键/值对的字符串。</summary>
      <returns>一个字符串，其中包含表示网页状态的键/值对。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.IsDebuggingEnabled">
      <summary>获取一个指示是否呈现客户端脚本库的调试版本的值。</summary>
      <returns>如果在调试模式下执行当前请求，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.IsInAsyncPostBack">
      <summary>获取一个指示是否在部分呈现模式下执行当前回发的值。</summary>
      <returns>如果在部分呈现模式下执行当前回发，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.IsNavigating">
      <summary>获取一个值，该值指示当前是否正在处理 <see cref="E:System.Web.UI.ScriptManager.Navigate" /> 事件。</summary>
      <returns>如果正在处理 <see cref="E:System.Web.UI.ScriptManager.Navigate" />，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>读取从浏览器发送到服务器的窗体数据，并确定异步回发的来源。</summary>
      <returns>如果 <see cref="T:System.Web.UI.ScriptManager" /> 控件的状态已因回发而改变，则为 true；否则为 false。</returns>
      <param name="postDataKey">控件的主要标识符。</param>
      <param name="postCollection">所有传入的发布数据的集合。</param>
    </member>
    <member name="P:System.Web.UI.ScriptManager.LoadScriptsBeforeUI">
      <summary>获取或设置一个值，该值指示是在加载页面 UI 的标记之前还是在之后加载脚本。</summary>
      <returns>如果在加载 UI 标记前加载脚本，则为 true；如果在加载 UI 标记后加载脚本，则为 false。 默认值为 true。</returns>
    </member>
    <member name="E:System.Web.UI.ScriptManager.Navigate">
      <summary>在用户单击浏览器的“后退”或“前进”按钮时发生。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" /> 事件。</summary>
      <param name="e">该错误事件数据。</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.OnInit(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件并确保页面上只有一个 <see cref="T:System.Web.UI.ScriptManager" /> 控件。</summary>
      <param name="e">事件数据。</param>
      <exception cref="T:System.InvalidOperationException">页面上存在 <see cref="T:System.Web.UI.ScriptManager" /> 的多个实例。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件，并为部分页面更新注册脚本文件和服务。</summary>
      <param name="e">事件数据。</param>
      <exception cref="T:System.InvalidOperationException">发出部分页面请求的浏览器至少不支持 DOM Level 1.0。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" /> 事件。</summary>
      <param name="e">一个表示复合脚本引用的对象。</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)">
      <summary>为 <see cref="T:System.Web.UI.ScriptManager" /> 控件所管理的每个脚本引用引发 <see cref="E:System.Web.UI.ScriptManager.ResolveScriptReference" /> 事件。</summary>
      <param name="e">一个表示当前脚本的对象。</param>
    </member>
    <member name="P:System.Web.UI.ScriptManager.ProfileService">
      <summary>获取与当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例关联的 <see cref="T:System.Web.UI.ProfileServiceManager" /> 对象。</summary>
      <returns>当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例的 <see cref="T:System.Web.UI.ProfileServiceManager" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RaisePostBackEvent(System.String)">
      <summary>通过 <see cref="T:System.Web.UI.ScriptManager" /> 控件引发的处理回发事件，并加载网页的历史记录状态。</summary>
      <param name="eventArgument">表示网页的历史记录状态的键/值对的字符串。</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RaisePostDataChangedEvent">
      <summary>当 <see cref="T:System.Web.UI.ScriptManager" /> 控件回发到服务器时引发此控件的事件。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)">
      <summary>向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个 ECMAScript (JavaScript) 数组声明，以便和 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内的某个控件一起使用，并将该数组添加到页面中。</summary>
      <param name="control">正在注册该数组的控件。</param>
      <param name="arrayName">要注册的数组的名称。</param>
      <param name="arrayValue">要注册的数组值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="arrayName" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)">
      <summary>向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个 ECMAScript (JavaScript) 数组声明，以便和 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内的某个控件一起使用，并将该数组添加到页面中。</summary>
      <param name="page">正在注册该数组的页对象。</param>
      <param name="arrayName">要注册的数组的名称。</param>
      <param name="arrayValue">要注册的数组值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="arrayName" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)">
      <summary>将控件注册为异步回发的触发器。</summary>
      <param name="control">要为异步回发注册的控件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">将页面注册为异步回发控件。</exception>
      <exception cref="T:System.ArgumentException">将页面注册为异步回发控件。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)">
      <summary>向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个客户端脚本块，以便和 <see cref="T:System.Web.UI.UpdatePanel" /> 控件中的某个控件一起使用，然后将该脚本块添加到页面中。</summary>
      <param name="control">正在注册该客户端脚本块的控件。</param>
      <param name="type">该客户端脚本块的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定该参数，以检索正在注册该脚本的控件的类型。</param>
      <param name="key">该脚本块的唯一标识符。</param>
      <param name="script">脚本。</param>
      <param name="addScriptTags">如果用 &lt;script&gt; 和 &lt;/script&gt; 标记括起该脚本块，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">该客户端脚本块的 <paramref name="type" /> 为 null。 - 或 - 正在注册该脚本块的控件为 null。</exception>
      <exception cref="T:System.ArgumentException">正在注册该脚本块的控件不在页面的控件树中。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)">
      <summary>向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个客户端脚本块，以便和 <see cref="T:System.Web.UI.UpdatePanel" /> 控件中的某个控件一起使用，然后将该脚本块添加到页面中。</summary>
      <param name="page">正在注册该客户端脚本块的页对象。</param>
      <param name="type">该客户端脚本块的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定该参数，以检索正在注册该脚本的控件的类型。</param>
      <param name="key">该脚本块的唯一标识符。</param>
      <param name="script">要注册的脚本。</param>
      <param name="addScriptTags">如果用 &lt;script&gt; 和 &lt;/script&gt; 标记括起该脚本块，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">该脚本块的 <paramref name="type" /> 为 null。 - 或 - 正在注册该脚本块的页为 null。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)">
      <summary>向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个客户端脚本文件，以便和 <see cref="T:System.Web.UI.UpdatePanel" /> 控件中的某个控件一起使用，然后将脚本文件引用添加到页面中。</summary>
      <param name="control">正在注册该客户端脚本文件的控件。</param>
      <param name="type">该客户端脚本文件的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定该参数，以检索正在注册该脚本的控件的类型。</param>
      <param name="key">该脚本文件的唯一标识符。</param>
      <param name="url">该脚本文件的 URL。</param>
      <exception cref="T:System.ArgumentNullException">该客户端脚本文件的 <paramref name="type" /> 为 null。 - 或 - 正在注册该脚本文件的控件为 null。</exception>
      <exception cref="T:System.ArgumentException">正在注册该脚本文件的控件不在页面的控件树中。 - 或 - <paramref name="url" /> 为 null。 - 或 - <paramref name="url" /> 为空。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)">
      <summary>每次发生异步回发时都向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册客户端脚本，然后将一个脚本文件引用添加到页面中。</summary>
      <param name="page">正在注册该客户端脚本文件的页对象。</param>
      <param name="type">该客户端脚本文件的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定该参数，以检索正在注册该脚本的控件的类型。</param>
      <param name="key">该脚本文件的唯一标识符。</param>
      <param name="url">该脚本文件的 URL。</param>
      <exception cref="T:System.ArgumentNullException">该客户端脚本文件的 <paramref name="type" /> 为 null。 - 或 - 正在注册该脚本文件的页为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="url" /> 为 null。 - 或 - <paramref name="url" /> 为空。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)">
      <summary>向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册嵌入程序集中的客户端脚本，以便和正在参与部分页面呈现的控件一起使用。</summary>
      <param name="control">正在注册该脚本的控件。</param>
      <param name="type">该客户端脚本的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定该参数，以检索正在注册该脚本的控件的类型。</param>
      <param name="resourceName">该资源的标识符。</param>
      <exception cref="T:System.ArgumentNullException">该客户端资源的 <paramref name="type" /> 为 null。 - 或 - 正在注册该脚本的控件为 null。</exception>
      <exception cref="T:System.ArgumentException">正在注册该脚本的控件不在页面的控件树中。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)">
      <summary>每次发生回发时都向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册嵌入程序集中的客户端脚本文件。</summary>
      <param name="page">正在注册该脚本的页对象。</param>
      <param name="type">该客户端脚本的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定该参数，以检索正在注册该脚本的控件的类型。</param>
      <param name="resourceName">该资源的标识符。</param>
      <exception cref="T:System.ArgumentNullException">该客户端资源的 <paramref name="type" /> 为 null。 - 或 - 正在注册该脚本的页为 null。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)">
      <summary>在部分页面呈现期间将自定义数据发送到某个控件。</summary>
      <param name="control">正在接收该数据的控件。</param>
      <param name="dataItem">发送到该控件的数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">在回发期间调用 <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> 方法。</exception>
      <exception cref="T:System.ArgumentException">已为 <paramref name="control" /> 注册 <paramref name="dataItem" />。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)">
      <summary>在部分页面呈现期间，将自定义数据发送到某个控件，并指指数据是否为 JavaScript 对象表示法 (JSON) 格式。</summary>
      <param name="control">正在接收该数据的页面。</param>
      <param name="dataItem">发送到该控件的数据。</param>
      <param name="isJsonSerialized">如果 <paramref name="dataItem" /> 序列化为 JSON，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">在回发期间调用 <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> 方法。</exception>
      <exception cref="T:System.ArgumentException">已为 <paramref name="control" /> 注册 <paramref name="dataItem" />。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)">
      <summary>为 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内的某个控件注册一个 dispose 脚本。 在更新或删除 <see cref="T:System.Web.UI.UpdatePanel" /> 控件时会执行该脚本。</summary>
      <param name="control">使用该 dispose 脚本的控件。</param>
      <param name="disposeScript">dispose 脚本。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> 为 null。 - 或 - <paramref name="disposeScript" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">在页面上找不到 <paramref name="control" />。 - 或 - <paramref name="control" /> 不在 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
      <summary>在 <see cref="T:System.Web.UI.ScriptManager" /> 控件中，将名称/值对注册为指定控件的自定义 (expando) 特性。</summary>
      <param name="control">正在注册该 expando 特性的控件。</param>
      <param name="controlId">页中包含该自定义特性的控件。</param>
      <param name="attributeName">要注册的自定义特性的名称。</param>
      <param name="attributeValue">自定义特性的值。</param>
      <param name="encode">如果要编码正在注册的自定义特性，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> 不在页的控件树中。 - 或 - <paramref name="controlId" /> 为 null。 - 或 - <paramref name="controlId" /> 为空。 - 或 - <paramref name="attributeName" /> 为 null。 - 或 - <paramref name="attributeName" /> 为空。 - 或 - <paramref name="attributeName" /> 已注册。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)">
      <summary>向当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例注册扩展程序控件。</summary>
      <param name="extenderControl">要注册的扩展程序控件。</param>
      <param name="targetControl">该扩展程序控件扩展的脚本控件。</param>
      <typeparam name="TExtenderControl">实现 <see cref="T:System.Web.UI.IExtenderControl" /> 接口的控件。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="extenderControl" /> 为 null。 - 或 - <paramref name="targetControl" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)">
      <summary>针对 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内的控件，向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册隐藏字段。</summary>
      <param name="control">正在注册该隐藏字段的控件。</param>
      <param name="hiddenFieldName">要注册的隐藏字段的名称。</param>
      <param name="hiddenFieldInitialValue">隐藏字段的初始值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> 为 null。 - 或 - <paramref name="hiddenFieldName" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> 不在页的控件树中。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)">
      <summary>在每次异步回发期间向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册隐藏字段。</summary>
      <param name="page">正在注册该隐藏字段的页对象。</param>
      <param name="hiddenFieldName">要注册的隐藏字段的名称。</param>
      <param name="hiddenFieldInitialValue">隐藏字段的初始值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="page" /> 为 null。 - 或 - <paramref name="hiddenFieldName" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Control,System.String)">
      <summary>向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册嵌入程序集中的客户端脚本（按资源名称），以便和正在参与部分页面呈现的控件一起使用。</summary>
      <param name="control">正在注册该脚本的控件。</param>
      <param name="resourceName">该资源的标识符。</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Page,System.String)">
      <summary>向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册嵌入程序集中的客户端脚本（按资源名称），以便和正在参与部分页面呈现的控件一起使用。</summary>
      <param name="page">正在注册该脚本的页对象。</param>
      <param name="resourceName">该资源的标识符。</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)">
      <summary>针对与 <see cref="T:System.Web.UI.UpdatePanel" /> 控件一起使用的控件，向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册将在提交窗体时执行的 ECMAScript (JavaScript) 代码。</summary>
      <param name="control">正在注册该 onsubmit 语句的控件。</param>
      <param name="type">该客户端脚本语句的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定该参数，以检索正在注册该脚本的控件的类型。</param>
      <param name="key">该脚本语句的唯一标识符。</param>
      <param name="script">要注册的脚本。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> 为 null。 - 或 - <paramref name="type" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> 不在页的控件树中。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)">
      <summary>针对与 <see cref="T:System.Web.UI.UpdatePanel" /> 控件一起使用的控件，向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册将在提交窗体时执行的 ECMAScript (JavaScript) 代码。</summary>
      <param name="page">正在注册该 onsubmit 语句的页对象。</param>
      <param name="type">该客户端脚本语句的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定该参数，以检索正在注册该脚本的控件的类型。</param>
      <param name="key">该脚本语句的唯一标识符。</param>
      <param name="script">要注册的脚本。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="page" /> 为 null。 - 或 - <paramref name="type" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)">
      <summary>将控件注册为回发的触发器。 该方法用于配置 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内以其他方式执行异步回发的回发控件。</summary>
      <param name="control">要为回发注册的控件。</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)">
      <summary>向当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例注册脚本控件。</summary>
      <param name="scriptControl">要注册的脚本控件。</param>
      <typeparam name="TScriptControl">实现 <see cref="T:System.Web.UI.IScriptControl" /> 接口的控件。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="scriptControl" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)">
      <summary>回调 <see cref="T:System.Web.UI.ExtenderControl" /> 类以返回为支持表示客户端控件、组件或行为的客户端对象而必须呈现的实例脚本。</summary>
      <param name="extenderControl">将为其注册脚本说明符的扩展程序控件。</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)">
      <summary>调用 <see cref="T:System.Web.UI.ScriptControl" /> 类以返回为支持表示客户端控件、组件或行为的客户端对象而必须呈现的实例脚本。</summary>
      <param name="scriptControl">将为其注册脚本说明符的脚本控件。</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)">
      <summary>使用 <see cref="T:System.Web.UI.ScriptManager" /> 控件为 <see cref="T:System.Web.UI.UpdatePanel" /> 中的某个控件注册一个启动脚本块，并将该脚本块添加到页面中。</summary>
      <param name="control">正在注册该客户端脚本块的控件。</param>
      <param name="type">该客户端脚本块的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定该参数，以检索正在注册该脚本的控件的类型。</param>
      <param name="key">该脚本块的唯一标识符。</param>
      <param name="script">要注册的脚本。</param>
      <param name="addScriptTags">如果用 &lt;script&gt; 和 &lt;/script&gt; 标记括起该脚本块，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> 为 null。 - 或 - <paramref name="type" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> 不在页的控件树中。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)">
      <summary>为每个异步回发向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个启动脚本块，并将该脚本块添加到页面中。</summary>
      <param name="page">正在注册该客户端脚本块的页对象。</param>
      <param name="type">该客户端脚本块的类型。 通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定该参数，以检索正在注册该脚本的控件的类型。</param>
      <param name="key">该脚本块的唯一标识符。</param>
      <param name="script">要注册的脚本。</param>
      <param name="addScriptTags">如果用 &lt;script&gt; 和 &lt;/script&gt; 标记括起该脚本块，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)">
      <summary>使用指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象将 <see cref="T:System.Web.UI.ScriptManager" /> 控件的内容呈现给浏览器。</summary>
      <param name="writer">一个接收要写入页面的控件内容的对象。</param>
    </member>
    <member name="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference">
      <summary>在向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册复合脚本时发生。</summary>
    </member>
    <member name="E:System.Web.UI.ScriptManager.ResolveScriptReference">
      <summary>在向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册 <see cref="P:System.Web.UI.ScriptManager.Scripts" /> 集合的成员时发生。</summary>
    </member>
    <member name="P:System.Web.UI.ScriptManager.RoleService">
      <summary>获取与当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例关联的 <see cref="T:System.Web.UI.RoleServiceManager" /> 对象。</summary>
      <returns>当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例的 <see cref="T:System.Web.UI.RoleServiceManager" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.ScriptMode">
      <summary>获取或设置一个值，以指定是呈现客户端脚本库的调试版本还是发布版本。</summary>
      <returns>指示当前模式的枚举值。 默认值为 <see cref="F:System.Web.UI.ScriptMode.Auto" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Web.UI.ScriptManager.ScriptMode" /> 属性不是 <see cref="T:System.Web.UI.ScriptMode" /> 值中的一个。</exception>
    </member>
    <member name="P:System.Web.UI.ScriptManager.ScriptPath">
      <summary>获取或设置位置的根路径，该位置用来建立指向 ASP.NET AJAX 和自定义脚本文件的路径。</summary>
      <returns>存储脚本文件的位置。 默认值为空字符串 ("")，表示相对路径。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.ScriptResourceMapping">
      <summary>获取 <see cref="T:System.Web.UI.ScriptResourceMapping" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptResourceMapping" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.Scripts">
      <summary>获取一个包含 <see cref="T:System.Web.UI.ScriptReference" /> 对象（每个对象代表一个呈现给客户端的脚本文件）的 <see cref="T:System.Web.UI.ScriptReferenceCollection" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptManager" /> 实例的 <see cref="T:System.Web.UI.ScriptReferenceCollection" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.Services">
      <summary>获取一个 <see cref="T:System.Web.UI.ServiceReferenceCollection" /> 对象，该对象包含 ASP.NET 在客户端上针对 Ajax 功能而公开的每个 Web 服务的 <see cref="T:System.Web.UI.ServiceReference" /> 对象。</summary>
      <returns>当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例的 <see cref="T:System.Web.UI.ServiceReferenceCollection" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.SetFocus(System.String)">
      <summary>将浏览器焦点设置为由 ID 指定的控件。</summary>
      <param name="clientID">要接收焦点的控件的 ID。</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)">
      <summary>将浏览器焦点设置为指定控件。</summary>
      <param name="control">要接收焦点的控件。</param>
    </member>
    <member name="P:System.Web.UI.ScriptManager.SupportsPartialRendering">
      <summary>获取一个指示客户端是否支持部分页面呈现的值。</summary>
      <returns>如果客户端支持部分页面呈现，则为 true；否则为 false。 默认值为 true。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> 属性为 false，而 <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> 属性原来设置为 true。 - 或 - 在发生 <see cref="E:System.Web.UI.Control.Init" /> 事件之后设置 <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> 属性。</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />。</summary>
      <returns>如果 <see cref="T:System.Web.UI.ScriptManager" /> 控件的状态已因回发而改变，则为 true；否则为 false。</returns>
      <param name="postDataKey">该控件的密钥标识符。</param>
      <param name="postCollection">所有传入的发布数据的集合。</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>使 <see cref="T:System.Web.UI.ScriptManager" /> 控件可以处理回发事件并加载网页的历史记录状态。</summary>
      <param name="eventArgument">表示网页的历史记录状态的键/值对的字符串。</param>
    </member>
    <member name="P:System.Web.UI.ScriptManager.Visible">
      <summary>重写从 <see cref="T:System.Web.UI.Control" /> 基类继承的 <see cref="P:System.Web.UI.Control.Visible" /> 特性以防止设置该值。</summary>
      <returns>任何情况下都为 true。</returns>
      <exception cref="T:System.NotImplementedException">为值分配 <see cref="P:System.Web.UI.ScriptManager.Visible" /> 属性。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Web.UI.ScriptManagerProxy">
      <summary>当已在父元素中定义 <see cref="T:System.Web.UI.ScriptManager" /> 控件时，使嵌套组件（如内容页和用户控件）可以将脚本和服务引用添加到页中。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManagerProxy.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 类的新实例。</summary>
      <exception cref="T:System.InvalidOperationException">当前页没有 <see cref="T:System.Web.UI.ScriptManager" />。 - 或 - 当前页为 null。</exception>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.AuthenticationService">
      <summary>获取与当前 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 实例关联的 <see cref="T:System.Web.UI.AuthenticationServiceManager" /> 对象。</summary>
      <returns>当前 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 实例的 <see cref="T:System.Web.UI.AuthenticationServiceManager" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.CompositeScript">
      <summary>获取对支持内容页的复合脚本的引用。</summary>
      <returns>对复合脚本的引用。</returns>
    </member>
    <member name="E:System.Web.UI.ScriptManagerProxy.Navigate">
      <summary>在用户单击浏览器的“后退”或“前进”按钮时发生。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManagerProxy.OnInit(System.EventArgs)">
      <summary>引发基事件 <see cref="E:System.Web.UI.Control.Init" /> 并将 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 控件注册到 <see cref="T:System.Web.UI.ScriptManager" /> 控件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.ProfileService">
      <summary>获取与当前 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 实例关联的 <see cref="T:System.Web.UI.ProfileServiceManager" /> 对象。</summary>
      <returns>当前 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 实例的 <see cref="T:System.Web.UI.ProfileServiceManager" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.RoleService">
      <summary>获取与当前 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 实例关联的 <see cref="T:System.Web.UI.RoleServiceManager" /> 对象。</summary>
      <returns>当前 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 实例的 <see cref="T:System.Web.UI.RoleServiceManager" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.Scripts">
      <summary>获取一个 <see cref="T:System.Web.UI.ScriptReferenceCollection" /> 对象，该对象包含显式注册到 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 控件的每个脚本文件的 <see cref="T:System.Web.UI.ScriptReference" /> 对象。</summary>
      <returns>一个集合，其中包含 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 控件发送到浏览器的每个脚本文件的 <see cref="T:System.Web.UI.ScriptReference" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.Services">
      <summary>获取一个 <see cref="T:System.Web.UI.ScriptReferenceCollection" /> 对象，该对象包含显式注册到 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 控件的每个服务的 <see cref="T:System.Web.UI.ServiceReference" /> 对象。</summary>
      <returns>一个集合，其中包含注册到 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 控件的每个服务的 <see cref="T:System.Web.UI.ServiceReference" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.Visible">
      <summary>重写从基类 <see cref="T:System.Web.UI.Control" /> 继承的 <see cref="P:System.Web.UI.Control.Visible" /> 属性可以禁止设置此值。</summary>
      <returns>如果在页上呈现该控件，则为 true；否则为 false。</returns>
      <exception cref="T:System.NotImplementedException">将一个值赋给 <see cref="P:System.Web.UI.ScriptManagerProxy.Visible" /> 属性。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Web.UI.ScriptMode">
      <summary>指定 <see cref="T:System.Web.UI.ScriptManager" /> 和 <see cref="T:System.Web.UI.ScriptReference" /> 对象是引用客户端脚本的调试版本还是发布版本。</summary>
    </member>
    <member name="F:System.Web.UI.ScriptMode.Auto">
      <summary>
        <see cref="T:System.Web.UI.ScriptManager" /> 控件在运行时根据 Web.config 文件的应用程序级别的 &lt;compilation&gt; 元素确定要使用的客户端脚本的版本，除非该控件在 <see cref="T:System.Web.UI.ScriptReference" /> 控件实例中被重写。 在 <see cref="T:System.Web.UI.ScriptReference" /> 控件中，当将 <see cref="F:System.Web.UI.ScriptMode.Auto" /> 应用于独立脚本文件时，该值等效于 <see cref="F:System.Web.UI.ScriptMode.Release" />。 当将 <see cref="F:System.Web.UI.ScriptMode.Auto" /> 应用于程序集内的脚本引用时，该值等效于 <see cref="F:System.Web.UI.ScriptMode.Inherit" />。</summary>
    </member>
    <member name="F:System.Web.UI.ScriptMode.Debug">
      <summary>在网页的 <see cref="T:System.Web.UI.ScriptManager" /> 控件中使用客户端脚本的调试版本，除非该控件在 <see cref="T:System.Web.UI.ScriptReference" /> 控件实例中被重写。 在网页的 <see cref="T:System.Web.UI.ScriptReference" /> 控件中使用客户端脚本的调试版本。</summary>
    </member>
    <member name="F:System.Web.UI.ScriptMode.Inherit">
      <summary>在 <see cref="T:System.Web.UI.ScriptManager" /> 控件中，<see cref="F:System.Web.UI.ScriptMode.Inherit" /> 等效于 <see cref="F:System.Web.UI.ScriptMode.Auto" />。 在 <see cref="T:System.Web.UI.ScriptReference" /> 控件中，来自 <see cref="T:System.Web.UI.ScriptManager" /> 中的 <see cref="P:System.Web.UI.ScriptManager.ScriptMode" /> 值确定要使用客户端脚本的哪个版本。</summary>
    </member>
    <member name="F:System.Web.UI.ScriptMode.Release">
      <summary>在网页的 <see cref="T:System.Web.UI.ScriptManager" /> 控件中使用客户端脚本的发布版本，除非将 <see cref="T:System.Web.UI.ScriptReference" /> 实例的 <see cref="P:System.Web.UI.ScriptReference.ScriptMode" /> 属性设置为 <see cref="F:System.Web.UI.ScriptMode.Debug" /> 来重写该控件。 在网页的 <see cref="T:System.Web.UI.ScriptReference" /> 控件中使用客户端脚本的发布版本。</summary>
    </member>
    <member name="T:System.Web.UI.ScriptReference">
      <summary>注册 ECMAScript (JavaScript) 文件，以便在 ASP.NET 网页上使用。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptReference.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.ScriptReference" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptReference.#ctor(System.String)">
      <summary>使用指定的路径初始化 <see cref="T:System.Web.UI.ScriptReference" /> 类的新实例。</summary>
      <param name="path">客户端脚本文件相对于网页的路径。</param>
    </member>
    <member name="M:System.Web.UI.ScriptReference.#ctor(System.String,System.String)">
      <summary>使用指定的名称和程序集初始化 <see cref="T:System.Web.UI.ScriptReference" /> 类的新实例。</summary>
      <param name="name">嵌入到程序集中的脚本文件的名称。</param>
      <param name="assembly">包含作为嵌入资源的客户端脚本文件的程序集名称。</param>
    </member>
    <member name="P:System.Web.UI.ScriptReference.Assembly">
      <summary>获取或设置包含作为嵌入资源的客户端脚本文件的程序集名称。</summary>
      <returns>包含作为嵌入资源的客户端脚本文件的程序集完全限定名或部分限定名。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)">
      <summary>检索呈现为 script 元素的 src 特性值的 URL。</summary>
      <returns>一个字符串，其中包含作为 script 元素的 src 特性的值所呈现的 URL。</returns>
      <param name="scriptManager">目标网页上的 ScriptManager 控件。</param>
      <param name="zip">如果应压缩脚本，则为 true；否则为 false。</param>
    </member>
    <member name="P:System.Web.UI.ScriptReference.IgnoreScriptPath">
      <summary>获取或设置一个值，该值指示从资源注册客户端脚本文件时，URL 中是否包括 <see cref="P:System.Web.UI.ScriptManager.ScriptPath" /> 属性。</summary>
      <returns>如果在注册客户端脚本时未使用脚本路径，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)">
      <summary>确定脚本引用是否为 AJAX 脚本。</summary>
      <returns>如果脚本引用为 AJAX 脚本，则为 true；否则为 false。</returns>
      <param name="scriptManager">
        <see cref="T:System.Web.UI.ScriptManager" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.ScriptReference.IsFromSystemWebExtensions">
      <summary>指示复合脚本是否包含对 ASP.NET AJAX 框架脚本的引用。</summary>
      <returns>如果复合脚本包含对 ASP.NET AJAX 框架脚本的引用，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptReference.Name">
      <summary>获取或设置包含客户端脚本文件的嵌入资源的名称。</summary>
      <returns>作为资源嵌入到程序集中的客户端脚本文件的名称。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptReference.ToString">
      <summary>返回一个字符串，该字符串表示 <see cref="P:System.Web.UI.ScriptReference.Name" /> 属性、<see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> 属性或类型名称的值。</summary>
      <returns>如果已定义，则为 <see cref="P:System.Web.UI.ScriptReference.Name" /> 属性的值或 <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> 属性的值；否则为 <see cref="P:System.Reflection.MemberInfo.Name" /> 属性的值。</returns>
    </member>
    <member name="T:System.Web.UI.ScriptReferenceBase">
      <summary>所有脚本引用类的基类。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceBase.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.ScriptReferenceBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceBase.GetUrl(System.Web.UI.ScriptManager,System.Boolean)">
      <summary>检索呈现为 script 元素的 src 特性值的 URL。</summary>
      <returns>一个字符串，其中包含作为 script 元素的 src 特性的值所呈现的 URL。</returns>
      <param name="scriptManager">目标网页上的 ScriptManager 控件。</param>
      <param name="zip">若要压缩脚本，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceBase.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)">
      <summary>确定指定的脚本引用是否为 ASP.NET AJAX 脚本。</summary>
      <returns>如果脚本引用为 ASP.NET AJAX 脚本，则为 true；否则为 false。</returns>
      <param name="scriptManager">
        <see cref="T:System.Web.UI.ScriptManager" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceBase.IsFromSystemWebExtensions">
      <summary>指示复合脚本是否包含对 ASP.NET AJAX 框架脚本的引用。</summary>
      <returns>如果复合脚本包含对 ASP.NET AJAX 框架脚本的引用，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptReferenceBase.NotifyScriptLoaded">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.Handlers.ScriptResourceHandler" /> 对象是否在 ECMAScript (JavaScript) 文件的结尾自动添加代码，以调用 Sys.Application 类的客户端 <see cref="P:System.Web.UI.ScriptReferenceBase.NotifyScriptLoaded" /> 方法。</summary>
      <returns>如果在 JavaScript 文件的结尾自动调用 Sys.Application.notifyScriptLoaded 方法，则为 true；如果用户代码调用 JavaScript 文件中已有的 Sys.Application.notifyScriptLoaded 方法，则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptReferenceBase.Path">
      <summary>获取或设置引用客户端脚本文件相对于网页的路径。</summary>
      <returns>引用的客户端脚本的路径。</returns>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceBase.ReplaceExtension(System.String)">
      <summary>替换指定脚本路径中的文件扩展名以指定调试脚本。</summary>
      <returns>一个字符串，其中包含带有 debug 扩展名的脚本的路径。</returns>
      <param name="pathOrName">要重命名的脚本的完整路径。 该路径必须以“.js”结尾。</param>
    </member>
    <member name="P:System.Web.UI.ScriptReferenceBase.ResourceUICultures">
      <summary>获取或设置 <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> 属性支持的 UI 区域性的逗号分隔列表。</summary>
      <returns>一个字符串，其中包含以逗号分隔的 UI 区域性列表。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptReferenceBase.ScriptMode">
      <summary>获取或设置要使用的客户端脚本文件的版本（发布版本或调试版本）。</summary>
      <returns>一个 <see cref="T:System.Web.UI.ScriptMode" /> 值，指示要引用的客户端脚本文件的版本。 默认值为 <see cref="F:System.Web.UI.ScriptMode.Auto" />。</returns>
    </member>
    <member name="T:System.Web.UI.ScriptReferenceCollection">
      <summary>表示脚本引用的集合。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.ScriptReferenceCollection" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Web.UI.ScriptReferenceEventArgs">
      <summary>为 <see cref="E:System.Web.UI.ScriptManager.ResolveScriptReference" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceEventArgs.#ctor(System.Web.UI.ScriptReference)">
      <summary>初始化 <see cref="T:System.Web.UI.ScriptReferenceEventArgs" /> 类的新实例。</summary>
      <param name="script">一个 <see cref="T:System.Web.UI.ScriptReference" /> 对象，包含在网页上引用的客户端脚本。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="script" /> 为 null。</exception>
    </member>
    <member name="P:System.Web.UI.ScriptReferenceEventArgs.Script">
      <summary>获取包含脚本库的 <see cref="T:System.Web.UI.ScriptReference" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Web.UI.ScriptReference" /> 对象，包含在网页上引用的客户端脚本。</returns>
    </member>
    <member name="T:System.Web.UI.ScriptResourceAttribute">
      <summary>在程序集内定义要从客户端脚本文件使用的资源。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptResourceAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.ScriptResourceAttribute" /> 类的新实例。</summary>
      <param name="scriptName">脚本库的名称。</param>
    </member>
    <member name="M:System.Web.UI.ScriptResourceAttribute.#ctor(System.String,System.String,System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.ScriptResourceAttribute" /> 类的新实例。</summary>
      <param name="scriptName">脚本库的名称。</param>
      <param name="stringResourceName">脚本库中资源文件的名称。</param>
      <param name="stringResourceClientTypeName">要为资源文件中的值创建的类型的名称。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="scriptName" />、<paramref name="scriptResourceName" /> 或 <paramref name="typeName" /> 为 null 或空字符串 ("")。</exception>
    </member>
    <member name="P:System.Web.UI.ScriptResourceAttribute.ScriptName">
      <summary>获取脚本库的名称。</summary>
      <returns>脚本库的名称。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceAttribute.ScriptResourceName">
      <summary>获取脚本库中资源文件的名称。</summary>
      <returns>脚本库中资源文件的名称。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceAttribute.StringResourceClientTypeName">
      <summary>获取要为资源文件中的值创建的客户端类型的名称。</summary>
      <returns>客户端类型的名称。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceAttribute.StringResourceName">
      <summary>获取脚本库中资源文件的名称。</summary>
      <returns>资源文件的名称。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceAttribute.TypeName">
      <summary>获取检索资源文件中的值时所使用的名称。</summary>
      <returns>检索资源文件中的值时客户端脚本中所使用的名称。</returns>
    </member>
    <member name="T:System.Web.UI.ScriptResourceDefinition">
      <summary>定义脚本资源的位置。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptResourceDefinition.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.ScriptResourceDefinition.CdnDebugPath">
      <summary>获取或设置内容传递网络 (CDN) 上的脚本资源的调试模式路径。</summary>
      <returns>包含调试脚本资源的 CDN 的路径。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceDefinition.CdnPath">
      <summary>获取或设置内容传递网络 (CDN) 上的脚本资源的释放模式路径。</summary>
      <returns>CDN 的路径。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceDefinition.CdnSupportsSecureConnection">
      <summary>获取或设置一个值，该值向 <see cref="T:System.Web.UI.ScriptManager" /> 指示在使用 HTTPS 访问页时是否应使用到内容传递网络 (CDN) 路径的安全连接来访问脚本资源。</summary>
      <returns>如果应使用 HTTPS 访问 CDN，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceDefinition.DebugPath">
      <summary>获取或设置在启用了调试模式时使用的脚本资源的调试模式路径。</summary>
      <returns>在启用了调试模式时使用的脚本资源的路径。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceDefinition.LoadSuccessExpression">
      <summary>获取或设置用于检测 Javascript 文件是否成功加载的 Javascript 表达式。</summary>
      <returns>JavaScript 表达式。 默认值为空字符串。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceDefinition.Path">
      <summary>获取或设置脚本资源的释放模式路径。</summary>
      <returns>脚本资源的路径。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceDefinition.ResourceAssembly">
      <summary>获取或设置包含脚本资源的程序集对象。</summary>
      <returns>其中包含脚本资源的程序集对象。</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceDefinition.ResourceName">
      <summary>获取或设置指定资源程序集中脚本资源的名称。</summary>
      <returns>脚本资源的名称。</returns>
    </member>
    <member name="T:System.Web.UI.ScriptResourceMapping">
      <summary>提供对脚本资源的位置映射支持。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.ScriptResourceMapping" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.AddDefinition(System.String,System.Reflection.Assembly,System.Web.UI.ScriptResourceDefinition)">
      <summary>向 <see cref="T:System.Web.UI.ScriptResourceMapping" /> 对象中添加 <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 对象。</summary>
      <param name="name">脚本资源的名称。</param>
      <param name="assembly">一个包含脚本资源的 <see cref="T:System.Reflection.Assembly" /> 对象。</param>
      <param name="definition">一个 <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 对象，该对象指定对脚本资源的位置支持。</param>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.AddDefinition(System.String,System.Web.UI.ScriptResourceDefinition)">
      <summary>向 <see cref="T:System.Web.UI.ScriptResourceMapping" /> 对象中添加 <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 对象。</summary>
      <param name="name">脚本资源的名称。</param>
      <param name="definition">一个 <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 对象，该对象指定对脚本资源的位置支持。</param>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.Clear">
      <summary>从 <see cref="T:System.Web.UI.ScriptResourceMapping" /> 对象中移除所有 <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 对象。</summary>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.GetDefinition(System.String)">
      <summary>根据 <paramref name="name" /> 参数的 <see cref="T:System.Web.UI.ScriptResourceMapping" /> 对象中返回指定的 <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 对象。</returns>
      <param name="name">脚本资源的名称。</param>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.GetDefinition(System.String,System.Reflection.Assembly)">
      <summary>从 <see cref="T:System.Web.UI.ScriptResourceMapping" /> 对象中返回指定的 <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 对象。</returns>
      <param name="name">脚本资源的名称。</param>
      <param name="assembly">一个包含脚本资源的 <see cref="T:System.Reflection.Assembly" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.GetDefinition(System.Web.UI.ScriptReference)">
      <summary>从 <see cref="T:System.Web.UI.ScriptResourceMapping" /> 对象返回 <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 对象。</returns>
      <param name="scriptReference">
        <see cref="T:System.Web.UI.ScriptReference" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.RemoveDefinition(System.String)">
      <summary>基于 <paramref name="name" /> 参数，从 <see cref="T:System.Web.UI.ScriptResourceMapping" /> 中移除 <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 对象。</returns>
      <param name="name">要移除的脚本资源的名称。</param>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.RemoveDefinition(System.String,System.Reflection.Assembly)">
      <summary>从 <see cref="T:System.Web.UI.ScriptResourceMapping" /> 对象中移除 <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptResourceDefinition" /> 对象。</returns>
      <param name="name">要移除的脚本资源的名称。</param>
      <param name="assembly">一个包含脚本资源的 <see cref="T:System.Reflection.Assembly" /> 对象。</param>
    </member>
    <member name="T:System.Web.UI.ServiceReference">
      <summary>注册要在网页中使用的 Web 服务。</summary>
    </member>
    <member name="M:System.Web.UI.ServiceReference.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.ServiceReference" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.ServiceReference.#ctor(System.String)">
      <summary>使用指定的路径初始化 <see cref="T:System.Web.UI.ServiceReference" /> 类的新实例。</summary>
      <param name="path">Web 服务的位置。</param>
    </member>
    <member name="M:System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)">
      <summary>提供来自可被自定义重写的派生的 <see cref="T:System.Web.UI.ServiceReference" /> 对象的代理脚本。</summary>
      <returns>代理脚本。</returns>
      <param name="scriptManager">页上的 <see cref="T:System.Web.UI.ScriptManager" /> 控件。</param>
      <param name="containingControl">
        <see cref="T:System.Web.UI.Control" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)">
      <summary>提供来自可被自定义重写的派生的 <see cref="T:System.Web.UI.ServiceReference" /> 对象的代理 URL。</summary>
      <returns>代理 URL。</returns>
      <param name="scriptManager">页上的 <see cref="T:System.Web.UI.ScriptManager" /> 控件。</param>
      <param name="containingControl">
        <see cref="T:System.Web.UI.Control" /> 对象。</param>
    </member>
    <member name="P:System.Web.UI.ServiceReference.InlineScript">
      <summary>获取或设置一个值，该值指示是将代理生成脚本作为内联脚本块包含在页上还是通过单独的请求获取。</summary>
      <returns>如果代理生成脚本作为内联脚本块包含在页上，则为 true；如果通过单独的请求获取代理生成脚本，则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.ServiceReference.Path">
      <summary>获取或设置引用的 Web 服务的路径。</summary>
      <returns>引用的 Web 服务的路径。</returns>
    </member>
    <member name="M:System.Web.UI.ServiceReference.ToString">
      <summary>返回一个字符串，该字符串表示 <see cref="P:System.Web.UI.ServiceReference.Path" /> 属性或类型名称的值。</summary>
      <returns>如果已定义，则为 <see cref="P:System.Web.UI.ServiceReference.Path" /> 属性的值；否则为该类的 <see cref="P:System.Reflection.MemberInfo.Name" /> 属性值。</returns>
    </member>
    <member name="T:System.Web.UI.ServiceReferenceCollection">
      <summary>包含 <see cref="T:System.Web.UI.ServiceReference" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Web.UI.ServiceReferenceCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.ServiceReferenceCollection" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Web.UI.TargetControlTypeAttribute">
      <summary>扩展 <see cref="T:System.Attribute" /> 类，以指示扩展程序控件可应用到的服务器控件的类型。</summary>
    </member>
    <member name="M:System.Web.UI.TargetControlTypeAttribute.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.TargetControlTypeAttribute" /> 类的新实例。</summary>
      <param name="targetControlType">目标控件的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetControlType" /> 为 null。</exception>
    </member>
    <member name="P:System.Web.UI.TargetControlTypeAttribute.TargetControlType">
      <summary>获取目标控件的类型，在构造函数中指定该类型。</summary>
      <returns>目标控件的类型。</returns>
    </member>
    <member name="P:System.Web.UI.TargetControlTypeAttribute.TypeId">
      <summary>获取此 <see cref="T:System.Web.UI.TargetControlTypeAttribute" /> 的唯一标识符。</summary>
      <returns>此特性的唯一标识符。</returns>
    </member>
    <member name="T:System.Web.UI.Timer">
      <summary>按照定义的时间间隔执行异步网页回发或同步网页回发。</summary>
    </member>
    <member name="M:System.Web.UI.Timer.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Timer" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Timer.Enabled">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.Timer" /> 控件在经过 <see cref="P:System.Web.UI.Timer.Interval" /> 属性中指定的毫秒数后是否启动到服务器的回发。</summary>
      <returns>如果 <see cref="T:System.Web.UI.Timer" /> 将启动回发，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="M:System.Web.UI.Timer.GetScriptDescriptors">
      <summary>从传递给在浏览器中实现计时器逻辑的客户端组件的 <see cref="T:System.Web.UI.Timer" /> 对象中检索属性。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptDescriptor" /> 类型数组。</returns>
    </member>
    <member name="M:System.Web.UI.Timer.GetScriptReferences">
      <summary>检索 <see cref="T:System.Web.UI.Timer" /> 控件的客户端脚本。</summary>
      <returns>一个 <see cref="T:System.Web.UI.ScriptReference" /> 对象，其中包含 <see cref="T:System.Web.UI.Timer" /> 控件的客户端脚本。</returns>
    </member>
    <member name="P:System.Web.UI.Timer.Interval">
      <summary>获取或设置在启动回发之前需要等待的毫秒数。</summary>
      <returns>在启动回发之前需要等待的毫秒数。 默认值为 60,000（60 秒）。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定值小于或等于零。</exception>
    </member>
    <member name="M:System.Web.UI.Timer.OnPreRender(System.EventArgs)">
      <summary>引发 <see cref="T:System.Web.UI.Timer" /> 控件的 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Timer.OnTick(System.EventArgs)">
      <summary>引发 <see cref="T:System.Web.UI.Timer" /> 控件的 <see cref="E:System.Web.UI.Timer.Tick" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Timer.RaisePostBackEvent(System.String)">
      <summary>启用 <see cref="T:System.Web.UI.Timer" /> 控件可在将页发送到服务器时引发 <see cref="E:System.Web.UI.Timer.Tick" /> 事件。</summary>
      <param name="eventArgument">一个包含要传递给事件处理程序的可选参数的字符串。</param>
    </member>
    <member name="M:System.Web.UI.Timer.Render(System.Web.UI.HtmlTextWriter)">
      <summary>使用指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象将 <see cref="T:System.Web.UI.Timer" /> 控件内容呈现到浏览器。</summary>
      <param name="writer">用于将 <see cref="T:System.Web.UI.Timer" /> 控件内容呈现到浏览器的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>在将页发送到服务器时引发 <see cref="E:System.Web.UI.Timer.Tick" /> 事件。</summary>
      <param name="eventArgument">一个包含要传递给事件处理程序的可选参数的字符串。</param>
    </member>
    <member name="M:System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors">
      <summary>从传递给客户端组件的 <see cref="T:System.Web.UI.Timer" /> 对象中检索属性。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptDescriptor" /> 类型数组。</returns>
    </member>
    <member name="M:System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences">
      <summary>检索 <see cref="T:System.Web.UI.Timer" /> 控件的客户端脚本。</summary>
      <returns>一个 <see cref="T:System.Web.UI.ScriptReference" /> 对象，其中包含 <see cref="T:System.Web.UI.Timer" /> 控件的客户端脚本。</returns>
    </member>
    <member name="E:System.Web.UI.Timer.Tick">
      <summary>在经过 <see cref="P:System.Web.UI.Timer.Interval" /> 属性中指定的毫秒数并向服务器发送页时发生。</summary>
    </member>
    <member name="P:System.Web.UI.Timer.Visible">
      <summary>重写 <see cref="T:System.Web.UI.Control" /> 类的 <see cref="P:System.Web.UI.Control.Visible" /> 属性可以禁止设置此值。</summary>
      <returns>如果在页上呈现该控件，则为 true；否则为 false。</returns>
      <exception cref="T:System.NotImplementedException">将一个值赋给 Visible 属性。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Web.UI.UpdatePanel">
      <summary>在不回发的情况下使得部分呈现页的各部分。</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.UpdatePanel" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.Attributes">
      <summary>获取 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的级联样式表 (CSS) 特性集合。</summary>
      <returns>特性集合中的 CSS 样式规则的名称。</returns>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers">
      <summary>获取或设置一个值，该值指示来自 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的即时子控件的回发是否更新面板的内容。</summary>
      <returns>如果来自 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的即时子控件的回发将更新面板的内容，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.ContentTemplate">
      <summary>获取或设置定义 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内容的模板。</summary>
      <returns>一个 <see cref="T:System.Web.UI.ITemplate" /> 实例，用于定义 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容。 默认值为 null。</returns>
      <exception cref="T:System.InvalidOperationException">在创建模板实例或内容模板容器后，设置 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的 <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> 属性。</exception>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.ContentTemplateContainer">
      <summary>获取一个可以以编程方式向其添加子控件的控件对象。</summary>
      <returns>一个定义了 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内容的 <see cref="T:System.Web.UI.Control" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.Controls">
      <summary>获取包含 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的子控件的 <see cref="T:System.Web.UI.ControlCollection" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.UpdatePanel" /> 控件的子控件集合。</returns>
      <exception cref="T:System.InvalidOperationException">已调用 <see cref="T:System.Web.UI.ControlCollection" /> 类的 <see cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />、<see cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />、<see cref="M:System.Web.UI.ControlCollection.Clear" />、<see cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" /> 或 <see cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" /> 方法。 若要更改 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容，请修改 <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> 属性的子控件。</exception>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.CreateContentTemplateContainer">
      <summary>创建一个 <see cref="T:System.Web.UI.Control" /> 对象，该对象用作定义 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内容的子控件的容器。</summary>
      <returns>
        <see cref="T:System.Web.UI.UpdatePanel" /> 控件内容的 <see cref="T:System.Web.UI.Control" /> 容器。</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.CreateControlCollection">
      <summary>返回 <see cref="T:System.Web.UI.UpdatePanel" /> 控件中包含的所有控件的集合。</summary>
      <returns>一个 <see cref="T:System.Web.UI.ControlCollection" /> 对象，该对象包含定义 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内容的所有控件。</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.Initialize">
      <summary>如果启用部分页呈现，则会初始化 <see cref="T:System.Web.UI.UpdatePanel" /> 控件触发器集合。</summary>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.IsInPartialRendering">
      <summary>获取一个值，该值指示是否因异步回发而更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控件。</summary>
      <returns>如果因异步回发而更新当前 <see cref="T:System.Web.UI.UpdatePanel" /> 控件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
      <exception cref="T:System.InvalidOperationException">在已创建 <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> 属性之后定义 <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> 属性。</exception>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)">
      <summary>在未启用部分页呈现时，为 <see cref="T:System.Web.UI.UpdatePanel" /> 控件引发 <see cref="E:System.Web.UI.Control.Load" /> 事件，并调用 <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> 方法。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
      <exception cref="T:System.InvalidOperationException">将 <see cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" /> 属性设置为 false，而将 <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> 属性设置为 <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />。</exception>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Control.Unload" /> 基事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)">
      <summary>引发 <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> 事件。</summary>
      <param name="writer">一个 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，表示用于呈现 HTML 内容的输出流。</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)">
      <summary>引发 <see cref="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" /> 事件。</summary>
      <param name="writer">一个 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，表示用于呈现 HTML 内容的输出流。</param>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.RenderMode">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容是否包含在 HTML &lt;div&gt; 或 &lt;span&gt; 元素中。</summary>
      <returns>
        <see cref="T:System.Web.UI.UpdatePanelRenderMode" /> 值之一。 默认值为 <see cref="F:System.Web.UI.UpdatePanelRenderMode.Block" />，以便面板内容包含在 HTML &lt;div&gt; 元素中。</returns>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.RequiresUpdate">
      <summary>获取一个值，该值指示是否更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容。</summary>
      <returns>如果更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
      <summary>通过使用指定名称返回 Web 控件的特性。</summary>
      <returns>属性的值。</returns>
      <param name="key">属性名。</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
      <summary>设置指定的控件特性的值。</summary>
      <param name="key">要设置的特性的名称。</param>
      <param name="value">要设置的特性的值。</param>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.Triggers">
      <summary>获取一个 <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> 对象，该对象包含以声明方式为 <see cref="T:System.Web.UI.UpdatePanel" /> 控件注册的 <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> 和 <see cref="T:System.Web.UI.PostBackTrigger" /> 对象。</summary>
      <returns>类型为 <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> 和 <see cref="T:System.Web.UI.PostBackTrigger" /> 的对象的集合。</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.Update">
      <summary>导致更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> 属性设置为 <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />。 - 或 – 在执行页的 <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> 事件期间或之后，调用 <see cref="M:System.Web.UI.UpdatePanel.Update" /> 方法。</exception>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.UpdateMode">
      <summary>获取或设置一个值，该值指示何时更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容。</summary>
      <returns>
        <see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> 值之一。 默认值为 <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的类型不是 <see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> 值之一。</exception>
    </member>
    <member name="T:System.Web.UI.UpdatePanelControlTrigger">
      <summary>为可以作为 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的触发器的控件提供一个公共的基类。</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanelControlTrigger.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.UpdatePanelControlTrigger" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.UpdatePanelControlTrigger.ControlID">
      <summary>获取或设置一个字符串，该字符串表示某个控件（作为 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的触发器的控件）的 <see cref="P:System.Web.UI.Control.ID" />。</summary>
      <returns>一个字符串，包含控件的 <see cref="P:System.Web.UI.Control.ID" />。 默认值为空字符串 ("")。</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanelControlTrigger.FindTargetControl(System.Boolean)">
      <summary>搜索在 <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> 属性中指定的控件。</summary>
      <returns>ID 与 <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> 属性相匹配的控件。</returns>
      <param name="searchNamingContainers">一个布尔值，指示是否在包含当前 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的命名容器中以递归方式搜索该控件。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Web.UI.UpdatePanelControlTrigger" /> 的 <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> 属性为 null 或为空。 - 或 - 未找到具有指定 <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> 的控件。</exception>
    </member>
    <member name="T:System.Web.UI.UpdatePanelRenderMode">
      <summary>表示页上 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内容的可能的布局呈现选项。</summary>
    </member>
    <member name="F:System.Web.UI.UpdatePanelRenderMode.Block">
      <summary>指定将 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内容呈现在 HTML 元素 &lt;div&gt; 的内部。</summary>
    </member>
    <member name="F:System.Web.UI.UpdatePanelRenderMode.Inline">
      <summary>指定将 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内容呈现在 HTML 元素 &lt;span&gt; 的内部。</summary>
    </member>
    <member name="T:System.Web.UI.UpdatePanelTrigger">
      <summary>为可作为 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的触发器的对象提供一个公共基类。</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTrigger.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.UpdatePanelTrigger" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTrigger.HasTriggered">
      <summary>返回一个指示是否已调用触发器的值。</summary>
      <returns>如果已调用触发器，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTrigger.Initialize">
      <summary>当在派生类中重写时，使触发器初始化其自身。</summary>
    </member>
    <member name="P:System.Web.UI.UpdatePanelTrigger.Owner">
      <summary>获取对 <see cref="T:System.Web.UI.UpdatePanelTrigger" /> 所面向的 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的引用。</summary>
      <returns>一个 <see cref="T:System.Web.UI.UpdatePanel" /> 控件。</returns>
    </member>
    <member name="T:System.Web.UI.UpdatePanelTriggerCollection">
      <summary>表示某 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的 <see cref="T:System.Web.UI.UpdatePanelTrigger" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTriggerCollection.#ctor(System.Web.UI.UpdatePanel)">
      <summary>初始化 <see cref="T:System.Web.UI.UpdatePanelTrigger" /> 集合类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> 所属的 <see cref="T:System.Web.UI.UpdatePanel" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTriggerCollection.ClearItems">
      <summary>从 <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> 中移除所有元素。</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTriggerCollection.InsertItem(System.Int32,System.Web.UI.UpdatePanelTrigger)">
      <summary>将 <see cref="T:System.Web.UI.UpdatePanelTrigger" /> 对象插入到 <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> 对象的指定索引位置。</summary>
      <param name="index">从零开始的索引，应在该位置插入触发器。</param>
      <param name="item">要插入的触发器。 对于引用类型，该值可以为 null。</param>
    </member>
    <member name="P:System.Web.UI.UpdatePanelTriggerCollection.Owner">
      <summary>获取对 <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> 所属的 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的引用。</summary>
      <returns>一个 <see cref="T:System.Web.UI.UpdatePanel" /> 控件。</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTriggerCollection.RemoveItem(System.Int32)">
      <summary>移除 <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> 的指定索引处的元素。</summary>
      <param name="index">要移除的元素的从零开始的索引。</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTriggerCollection.SetItem(System.Int32,System.Web.UI.UpdatePanelTrigger)">
      <summary>替换 <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> 对象中指定索引位置的触发器。</summary>
      <param name="index">待替换触发器的从零开始的索引。</param>
      <param name="item">位于指定索引处的触发器的新值。 对于引用类型，该值可以为 null。</param>
    </member>
    <member name="T:System.Web.UI.UpdatePanelUpdateMode">
      <summary>表示 <see cref="T:System.Web.UI.UpdatePanel" /> 控件中内容可能的更新模式。</summary>
    </member>
    <member name="F:System.Web.UI.UpdatePanelUpdateMode.Always">
      <summary>对于源于页面的所有回发，<see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容都会进行更新。 其中也包括异步回发。</summary>
    </member>
    <member name="F:System.Web.UI.UpdatePanelUpdateMode.Conditional">
      <summary>
        <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容会在满足以下条件时进行更新：</summary>
    </member>
    <member name="T:System.Web.UI.UpdateProgress">
      <summary>更新一个或多个 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容时，在浏览器中提供可视反馈。</summary>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.UpdateProgress" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID">
      <summary>获取或设置 <see cref="T:System.Web.UI.UpdateProgress" /> 控件显示其状态的 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的 ID。</summary>
      <returns>关联的 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的 ID。 默认值为空字符串。</returns>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.Attributes">
      <summary>获取或设置 <see cref="T:System.Web.UI.UpdateProgress" /> 控件的级联样式表 (CSS) 特性。</summary>
      <returns>CSS 特性的名称。</returns>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.Controls">
      <summary>获取一个 <see cref="T:System.Web.UI.ControlCollection" /> 对象，该对象表示 <see cref="T:System.Web.UI.UpdateProgress" /> 控件的子控件。</summary>
      <returns>
        <see cref="T:System.Web.UI.UpdateProgress" /> 控件的子控件集合。</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.CreateChildControls">
      <summary>调用以创建 <see cref="T:System.Web.UI.UpdateProgress" /> 控件包含的任何子控件，以准备回发或呈现。</summary>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.DataBind">
      <summary>将数据源绑定到 <see cref="T:System.Web.UI.UpdateProgress" /> 控件及其所有子控件。</summary>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.DisplayAfter">
      <summary>获取或设置显示 <see cref="T:System.Web.UI.UpdateProgress" /> 控件之前所经过的时间值（以毫秒为单位）。</summary>
      <returns>一个整数，表示在显示 <see cref="T:System.Web.UI.UpdateProgress" /> 控件的进度模板之前所经过的毫秒数。 默认值为 500 毫秒（.5 秒）。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Web.UI.UpdateProgress.DisplayAfter" /> 属性小于零。</exception>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.DynamicLayout">
      <summary>获取或设置一个值，该值可确定是否动态呈现进度模板。</summary>
      <returns>如果动态呈现进度模板，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.GetScriptDescriptors">
      <summary>返回 <see cref="T:System.Web.UI.UpdateProgress" /> 控件的客户端功能所需的组件、行为及客户端控件的列表。</summary>
      <returns>一个包含 <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象的 <see cref="T:System.Collections.IEnumerable" /> 集合。</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.GetScriptReferences">
      <summary>返回 <see cref="T:System.Web.UI.UpdateProgress" /> 控件的客户端脚本库依赖项的列表。</summary>
      <returns>一个包含 <see cref="T:System.Web.UI.ScriptReference" /> 对象的 <see cref="T:System.Collections.IEnumerable" /> 集合。</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.OnPreRender(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.ProgressTemplate">
      <summary>获取或设置用于定义 <see cref="T:System.Web.UI.UpdateProgress" /> 控件内容的模板。</summary>
      <returns>一个 <see cref="T:System.Web.UI.ITemplate" /> 实例，用于定义 <see cref="T:System.Web.UI.UpdateProgress" /> 控件的内容。 默认值为 null。</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.Render(System.Web.UI.HtmlTextWriter)">
      <summary>通过使用提供的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，将 <see cref="T:System.Web.UI.UpdateProgress" /> 控件的呈现内容写入浏览器。</summary>
      <param name="writer">一个对象，表示用于呈现 HTML 内容的输出流。</param>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
      <summary>通过使用指定名称返回 Web 控件的特性。</summary>
      <returns>属性的值。</returns>
      <param name="key">要返回的特性的名称。</param>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
      <summary>设置指定的用户控件特性的值。</summary>
      <param name="key">要设置的特性的名称。</param>
      <param name="value">要设置的特性的值。</param>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.System#Web#UI#IScriptControl#GetScriptDescriptors">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.IScriptControl.GetScriptDescriptors" />。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptDescriptor" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.System#Web#UI#IScriptControl#GetScriptReferences">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.IScriptControl.GetScriptReferences" />。</summary>
      <returns>
        <see cref="T:System.Web.UI.ScriptReference" /> 对象的集合。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ContextDataSource">
      <summary>表示数据源控件的基类。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSource.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ContextDataSource" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSource.ContextTypeName">
      <summary>获取或设置对象的名称，该对象包含要从其检索数据的属性。</summary>
      <returns>对象的名称，该对象包含要从其检索数据的属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSource.EntitySetName">
      <summary>获取或设置数据源对象中属性或字段的名称，该数据源对象表示一个数据集合。</summary>
      <returns>数据源对象中属性或字段的名称，该数据源对象表示一个数据集合。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSource.EntityTypeName">
      <summary>获取或设置为“插入”、“删除”和“更新”操作创建的类型的名称。</summary>
      <returns>为“插入”、“删除”和“更新”操作创建的类型的名称。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ContextDataSourceContextData">
      <summary>表示 <see cref="T:System.Web.UI.WebControls.ContextDataSource" /> 类的上下文数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceContextData.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ContextDataSource" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceContextData.#ctor(System.Object)">
      <summary>使用数据上下文对象初始化 <see cref="T:System.Web.UI.WebControls.ContextDataSource" /> 类的新实例。</summary>
      <param name="context">要使用的数据上下文对象。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceContextData.Context">
      <summary>获取或设置数据上下文对象的实例。</summary>
      <returns>数据上下文对象的实例。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceContextData.EntitySet">
      <summary>获取或设置表示数据集合的数据上下文类中的属性或字段。</summary>
      <returns>表示数据集合的数据上下文类中的属性或字段。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ContextDataSourceView">
      <summary>支持 <see cref="T:System.Web.UI.WebControls.ContextDataSource" /> 控件并提供一个接口，使数据绑定控件可以执行数据操作。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.#ctor(System.Web.UI.DataSourceControl,System.String,System.Web.HttpContext)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ContextDataSourceView" /> 类的新实例。</summary>
      <param name="owner">与 <see cref="T:System.Web.UI.WebControls.ContextDataSourceView" /> 对象关联的数据源控件。</param>
      <param name="viewName">数据源视图在拥有它的数据源控件的范围中的唯一名称。</param>
      <param name="context">当前的 <see cref="T:System.Web.HttpContext" /> 实例。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.Context">
      <summary>获取或设置当前的数据上下文。</summary>
      <returns>当前的数据上下文。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.ContextType">
      <summary>获取数据上下文的类型。</summary>
      <returns>与 <see cref="P:System.Web.UI.WebControls.ContextDataSourceView.ContextTypeName" /> 属性中指定的数据上下文类关联的类型。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.ContextTypeName">
      <summary>获取或设置数据上下文类的名称，该数据上下文类包含 <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.TableName" /> 属性中指定的字段或属性。</summary>
      <returns>数据上下文类的名称，该数据上下文类包含 <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.TableName" /> 属性中指定的字段或属性。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.CreateContext(System.Web.UI.DataSourceOperation)">
      <summary>为指定操作创建数据上下文和实体集类型的实例。</summary>
      <returns>指定操作的数据上下文和实体集类型的实例。</returns>
      <param name="operation">要执行的数据操作的类型。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.DisposeContext">
      <summary>在执行操作之后释放上下文。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.DisposeContext(System.Object)">
      <summary>在执行操作之后释放指定数据上下文。</summary>
      <param name="dataContext">要释放的数据上下文。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.EntitySet">
      <summary>获取或设置对象，该对象包含要检索的数据的值。</summary>
      <returns>其中包含要检索的数据值的对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.EntitySetName">
      <summary>获取或设置数据上下文类中的属性或字段的名称，该数据上下文类表示一个数据集合。</summary>
      <returns>数据上下文类中属性或字段的名称，该数据上下文类表示一个数据集合。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.EntitySetType">
      <summary>获取或设置为插入、删除或更新操作创建的对象的名称。</summary>
      <returns>为插入、删除或更新操作创建的对象的名称。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.EntityType">
      <summary>获取或设置为插入、删除或更新操作创建的对象。</summary>
      <returns>为插入、删除或更新操作创建的对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.EntityTypeName">
      <summary>获取或设置为插入、删除或更新操作创建的对象的名称。</summary>
      <returns>为插入、删除或更新操作创建的对象的名称。</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.ContextDataSourceView.EventContextCreated">
      <summary>指示事件在创建上下文类型对象的实例之后发生。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ContextDataSourceView.EventContextCreating">
      <summary>指示事件在创建上下文类型对象的实例之前发生。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ContextDataSourceView.EventContextDisposing">
      <summary>指示事件在释放上下文类型对象的实例之前发生。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>使用指定键并使用用于检测冲突的行值执行删除操作。</summary>
      <returns>已从数据源中删除的对象数或行数。</returns>
      <param name="keys">要删除的记录的行键值字典。</param>
      <param name="oldValues">表示数据元素及其原始值的名称/值对的字典，该字典用于检测数据冲突。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
      <summary>通过使用集合中指定的值执行插入操作。</summary>
      <returns>已插入数据源中的对象数或行数。</returns>
      <param name="values">表示数据元素及其新值的名称/值对的字典。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>通过使用指定行键值、行值以及用于检测冲突的行值执行更新操作。</summary>
      <returns>已在数据源中更新的行数。</returns>
      <param name="keys">要更新的记录的行键值字典。</param>
      <param name="values">表示数据元素及其新值的名称/值对的字典。</param>
      <param name="oldValues">表示数据元素及其原始值的名称/值对的字典，该字典用于检测数据冲突。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.GetDataObjectType(System.Type)">
      <summary>检索要用于删除、插入和更新操作的数据对象的类型。</summary>
      <returns>用于删除、插入或更新操作的数据对象的类型。</returns>
      <param name="type">要用于操作的对象的数据类型。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.GetEntitySetType">
      <summary>以属性、字段或数据上下文的形式检索实体集。</summary>
      <returns>检索到的实体集。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.GetSource(System.Web.UI.WebControls.QueryContext)">
      <summary>检索查询上下文的源。</summary>
      <returns>要应用查询的数据源。</returns>
      <param name="context">当前的查询上下文。</param>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPager">
      <summary>为实现 <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> 接口的数据绑定控件（例如 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件）提供分页功能。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.DataPager" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
      <summary>将要在浏览器中呈现的 HTML 特性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
      <param name="writer">一个对象，表示要在浏览器中呈现 HTML 内容的输出流。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.Attributes">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的自定义特性名称/值对的集合。</summary>
      <returns>自定义特性名称/值对的集合。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.ConnectToEvents(System.Web.UI.WebControls.IPageableItemContainer)">
      <summary>将事件连接到 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件中的事件处理程序方法。</summary>
      <param name="container">引发 <see cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" /> 事件的数据绑定控件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="container" /> 为 null。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.Controls">
      <summary>获取 <see cref="T:System.Web.UI.ControlCollection" /> 对象，该对象表示 UI 层次结构中 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的子控件。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的子控件集合。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.CreatePagerFields">
      <summary>创建 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的 <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> 属性所包含的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.DataBind">
      <summary>将 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件及其所有子控件绑定到数据源。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.Fields">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象的集合，这些对象表示在 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件中指定的页导航字段。</summary>
      <returns>包含 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件中所指定的所有页导航字段的集合对象。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.FindPageableItemContainer">
      <summary>检索与 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件关联的数据绑定控件。</summary>
      <returns>与 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件关联的数据绑定控件。</returns>
      <exception cref="T:System.InvalidOperationException">未在页面上找到实现 <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> 接口的控件。 - 或 - <see cref="P:System.Web.UI.WebControls.DataPager.PagedControlID" /> 属性指定的控件未实现 <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> 接口。 - 或 - <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件没有命名容器。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.LoadControlState(System.Object)">
      <summary>为 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件中的属性加载必须在两次回发之间保留的状态信息（即使在 <see cref="P:System.Web.UI.Control.EnableViewState" /> 属性设置为 false 时也如此）。</summary>
      <param name="savedState">一个表示 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的状态的对象。</param>
      <exception cref="T:System.InvalidOperationException">没有与 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件关联的数据绑定控件。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.LoadViewState(System.Object)">
      <summary>还原上一个页请求过程中由 <see cref="M:System.Web.UI.WebControls.DataPager.SaveViewState" /> 方法保存的 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的视图状态信息。</summary>
      <param name="savedState">表示要还原的状态的对象。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.MaximumRows">
      <summary>获取为每个数据页显示的最大记录数。</summary>
      <returns>为每个数据页显示的最大记录数。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>确定 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的事件是否沿页面的用户界面 (UI) 服务器控件层次结构向上传递。</summary>
      <returns>如果事件已发送到父控件，则为 true；否则为 false。</returns>
      <param name="source">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.OnInit(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.OnLoad(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Control.Load" /> 事件。</summary>
      <param name="e">事件数据。</param>
      <exception cref="T:System.InvalidOperationException">未找到实现 <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> 接口的容器控件。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.OnTotalRowCountAvailable(System.Object,System.Web.UI.WebControls.PageEventArgs)">
      <summary>处理 <see cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" /> 事件。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.PagedControlID">
      <summary>获取或设置一个控件的 <see cref="P:System.Web.UI.Control.ID" />，该控件包含的数据将由 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件进行分页。</summary>
      <returns>一个控件的 <see cref="P:System.Web.UI.Control.ID" />，该控件包含的数据将由 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件进行分页。 默认值为空字符串，表示未设置此属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.PageSize">
      <summary>获取或设置为每个数据页显示的记录数。</summary>
      <returns>为每个数据页显示的记录数。 默认值为 10。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Web.UI.WebControls.DataPager.PageSize" /> 属性被设置为一个小于 1 的值。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.QueryStringField">
      <summary>获取或设置查询字符串字段的名称。</summary>
      <returns>查询字符串字段的名称。 默认值为空字符串，指示 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件将使用 HTTP POST 命令在页面中导航。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.RecreateChildControls">
      <summary>在设计时创建 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的子控件。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.Render(System.Web.UI.HtmlTextWriter)">
      <summary>将 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件内容发送到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，此对象写入将在浏览器上呈现的内容。</summary>
      <param name="writer">接收 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件内容的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
      <summary>将 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的 HTML 开始标记呈现到指定的编写器中。</summary>
      <param name="writer">一个对象，表示要在浏览器中呈现 HTML 内容的输出流。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.RenderContents(System.Web.UI.HtmlTextWriter)">
      <summary>将 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的内容呈现到指定的编写器。</summary>
      <param name="writer">一个对象，表示要在浏览器中呈现 HTML 内容的输出流。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.SaveControlState">
      <summary>保存 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件中必须在两次回发之间保留的属性状态（即使在 <see cref="P:System.Web.UI.Control.EnableViewState" /> 属性设置为 false 时也如此）。</summary>
      <returns>返回 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的当前视图状态。 如果没有与控件关联的视图状态，则此方法返回 null。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.SaveViewState">
      <summary>保存自页回发到服务器后发生的任何 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件视图状态更改。</summary>
      <returns>返回 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的当前视图状态。 如果没有与控件关联的视图状态，则此方法返回 null。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.SetPageProperties(System.Int32,System.Int32,System.Boolean)">
      <summary>设置 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件中与页相关的属性。</summary>
      <param name="startRowIndex">数据页中第一条记录的索引。</param>
      <param name="maximumRows">单个数据页上的最大项数。</param>
      <param name="databind">如果设置属性后重新绑定控件，则为 true；否则为 false。</param>
      <exception cref="T:System.InvalidOperationException">没有与 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件关联的数据绑定控件。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.StartRowIndex">
      <summary>获取在数据页上显示的第一条记录的索引。</summary>
      <returns>在数据页上显示的第一条记录的索引。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
      <summary>从 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件中检索具有指定名称的特性值。</summary>
      <returns>属性的值。</returns>
      <param name="name">属性名。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
      <summary>将 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的特性设置为指定的名称和值。</summary>
      <param name="name">要设置的特性的名称。</param>
      <param name="value">属性的值。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls">
      <summary>在设计时创建 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的子控件。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.TagKey">
      <summary>获取用于呈现 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的 HTML 元素。</summary>
      <returns>始终为 <see cref="F:System.Web.UI.HtmlTextWriterTag.Span" />。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.TotalRowCount">
      <summary>获取由关联数据绑定控件所引用的基础数据源对象检索到的总记录数。</summary>
      <returns>基础数据源对象检索到的总记录数。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.TrackViewState">
      <summary>跟踪 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的视图状态更改，以便可以将这些更改存储在该控件的 <see cref="T:System.Web.UI.StateBag" /> 对象中。 可以通过 <see cref="P:System.Web.UI.Control.ViewState" /> 属性访问此对象。</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPagerCommandEventArgs">
      <summary>为 <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> 类的 <see cref="E:System.Web.UI.WebControls.TemplatePagerField.PagerCommand" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerCommandEventArgs.#ctor(System.Web.UI.WebControls.DataPagerField,System.Int32,System.Web.UI.WebControls.CommandEventArgs,System.Web.UI.WebControls.DataPagerFieldItem)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.DataPagerCommandEventArgs" /> 类的新实例。</summary>
      <param name="pagerField">包含单击的命令按钮的对象。</param>
      <param name="totalRowCount">总记录数。</param>
      <param name="originalArgs">单击的按钮的命令名和命令参数。</param>
      <param name="item">包含 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象及其容器 <see cref="T:System.Web.UI.WebControls.DataPager" /> 对象的对象。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerCommandEventArgs.Item">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> 对象，该对象包含 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象以及 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象的容器 <see cref="T:System.Web.UI.WebControls.DataPager" /> 对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> 对象，它包含 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象以及 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象的容器 <see cref="T:System.Web.UI.WebControls.DataPager" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerCommandEventArgs.NewMaximumRows">
      <summary>获取或设置要在每个数据页上显示的最大记录数。</summary>
      <returns>要在每个数据页上显示的最大记录数。 默认值为 -1，表示未设置此属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerCommandEventArgs.NewStartRowIndex">
      <summary>获取或设置要在数据页上显示的第一条记录的索引。</summary>
      <returns>将在数据页上显示的第一条记录的索引。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerCommandEventArgs.PagerField">
      <summary>获取包含单击的按钮的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象。</summary>
      <returns>包含单击的按钮的对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerCommandEventArgs.TotalRowCount">
      <summary>获取要显示的总记录数。</summary>
      <returns>要显示的总记录数。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPagerField">
      <summary>用作数据页导航字段类型的基类，这些类型表示 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的导航控件。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.CloneField">
      <summary>创建从 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 派生的当前对象的副本。</summary>
      <returns>当前 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 对象的副本。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.CopyProperties(System.Web.UI.WebControls.DataPagerField)">
      <summary>将从 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 派生的当前对象的属性复制到指定的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象。</summary>
      <param name="newField">将当前 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 对象的属性复制到的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.CreateDataPagers(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>在派生类中重写时，为数据页导航字段对象创建用户界面 (UI) 控件并将它们添加到指定的容器。</summary>
      <param name="container">用来存储控件的容器。</param>
      <param name="startRowIndex">页面中第一条记录的索引。</param>
      <param name="maximumRows">单个页面上的最大项数。</param>
      <param name="totalRowCount">总项数。</param>
      <param name="fieldIndex">数据页导航字段在 <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> 集合中的索引。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.CreateField">
      <summary>在派生类中重写时，创建从 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 派生的空对象。</summary>
      <returns>从 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 派生的空对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.DataPager">
      <summary>获取对数据页导航的引用，该数据页导航与 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象关联。</summary>
      <returns>包含数据页导航字段的对象。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.GetQueryStringNavigateUrl(System.Int32)">
      <summary>创建一个 URL，该 URL 包含具有指定页码的查询字符串字段。</summary>
      <returns>目标 URL。</returns>
      <param name="pageNumber">目标页码。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.HandleEvent(System.Web.UI.WebControls.CommandEventArgs)">
      <summary>在派生类中重写时，处理在数据页导航字段对象中发生的事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.IsTrackingViewState">
      <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象是否在跟踪其视图状态更改。</summary>
      <returns>如果 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象正在跟踪其视图状态更改，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.LoadViewState(System.Object)">
      <summary>还原以前保存的视图状态信息。</summary>
      <param name="savedState">保存的该控件的视图状态值。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.OnFieldChanged">
      <summary>引发 FieldChanged 事件。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.QueryStringHandled">
      <summary>获取或设置一个值，该值指示是否已对查询字符串字段进行计算。</summary>
      <returns>如果已经对查询字符串字段进行计算，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.QueryStringValue">
      <summary>从请求的 URL 获取查询字符串字段的值。</summary>
      <returns>查询字符串字段的值。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.SaveViewState">
      <summary>保存对 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象的视图状态所做的更改。</summary>
      <returns>控件的视图状态更改。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象是否在跟踪其视图状态更改。</summary>
      <returns>如果 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象正在跟踪其视图状态更改，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>还原以前保存的视图状态信息。</summary>
      <param name="state">保存的该控件的视图状态值。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.System#Web#UI#IStateManager#SaveViewState">
      <summary>保存对 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象的视图状态所做的更改。</summary>
      <returns>控件的视图状态更改。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.System#Web#UI#IStateManager#TrackViewState">
      <summary>使 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象跟踪其视图状态更改，以便这些更改可以存储在控件的 <see cref="P:System.Web.UI.WebControls.DataPagerField.ViewState" /> 属性中并在同一页的不同请求间保留。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.TrackViewState">
      <summary>使 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象跟踪其视图状态更改，以便这些更改可以存储在控件的 <see cref="P:System.Web.UI.WebControls.DataPagerField.ViewState" /> 属性中并在同一页的不同请求间保留。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.ViewState">
      <summary>获取状态信息的字典，这些信息使您可以在同一页的多个请求间保存和还原 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象的视图状态。</summary>
      <returns>一个包含 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 视图状态信息的对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.Visible">
      <summary>获取或设置指示是否呈现数据页导航字段的值。</summary>
      <returns>如果呈现 <see cref="T:System.Web.UI.WebControls.DataPagerField" />，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPagerFieldCollection">
      <summary>表示 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件使用的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.#ctor(System.Web.UI.WebControls.DataPager)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> 类的新实例。</summary>
      <param name="dataPager">将包含集合的控件。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.Add(System.Web.UI.WebControls.DataPagerField)">
      <summary>将指定的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象追加到集合。</summary>
      <param name="field">要追加到集合的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.CloneFields(System.Web.UI.WebControls.DataPager)">
      <summary>创建当前集合的副本。</summary>
      <returns>一个包含当前集合中的每一个 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象的副本的对象。</returns>
      <param name="pager">包含集合的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.Contains(System.Web.UI.WebControls.DataPagerField)">
      <summary>确定 <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> 集合是否包含指定的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象。</summary>
      <returns>如果 <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> 集合包含指定的字段，则为 true；否则为 false。</returns>
      <param name="field">要在 <see cref="T:System.Web.UI.WebControls.DataControlFieldCollection" /> 集合中定位的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.CopyTo(System.Web.UI.WebControls.DataPagerField[],System.Int32)">
      <summary>从目标数组的指定索引位置开始，将整个 <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> 集合复制到一维 <see cref="T:System.Array" /> 对象中。</summary>
      <param name="array">作为从 <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> 集合复制的元素的目标的一维数组。 该数组对象必须使用从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中开始复制位置的从零开始的索引。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.CreateKnownType(System.Int32)">
      <summary>创建由提供的索引标识的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 类型的默认实例。</summary>
      <returns>根据提供的索引，表示从 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 类派生的类的实例的对象。</returns>
      <param name="index">要从由 <see cref="M:System.Web.UI.WebControls.DataPagerFieldCollection.GetKnownTypes" /> 方法返回的类型的排序列表创建的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 类型的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的索引不在已识别的范围内。</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.DataPagerFieldCollection.FieldsChanged">
      <summary>当 <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> 集合中的字段更改时发生。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.GetKnownTypes">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> 集合可以包含的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 类型的数组。</summary>
      <returns>类型对象的数组，这些类型对象标识集合可以包含的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象的类型。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.IndexOf(System.Web.UI.WebControls.DataPagerField)">
      <summary>获取集合中特定的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象的索引。</summary>
      <returns>如果 <paramref name="field" /> 参数在集合中，则为它的索引；否则为 -1。</returns>
      <param name="field">要在集合中定位的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.Insert(System.Int32,System.Web.UI.WebControls.DataPagerField)">
      <summary>将指定的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象插入到 <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> 集合中指定的索引位置。</summary>
      <param name="index">
        <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象将插入的位置的从零开始的索引。</param>
      <param name="field">要插入的对象。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerFieldCollection.Item(System.Int32)">
      <summary>获取集合中指定索引处的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象。</summary>
      <returns>集合中指定索引处的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象。</returns>
      <param name="index">要从集合中检索的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象的从零开始的索引。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.OnClearComplete">
      <summary>在所有项从集合中移除后执行附加处理。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>在向集合中添加项之后执行附加处理。</summary>
      <param name="index">集合中插入 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象位置的索引。</param>
      <param name="value">已插入到 <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> 集合中的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>在从集合中移除项之后执行附加处理。</summary>
      <param name="index">从集合中移除的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象的索引。</param>
      <param name="value">从 <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> 集合中移除的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.OnValidate(System.Object)">
      <summary>验证指定的对象是否为 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象。</summary>
      <param name="o">要验证的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="o" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> 不是 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 类或其派生类之一的实例。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.Remove(System.Web.UI.WebControls.DataPagerField)">
      <summary>从 <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> 集合中移除指定的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象。</summary>
      <param name="field">要从 <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> 集合中移除的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.RemoveAt(System.Int32)">
      <summary>从 <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> 集合中移除指定索引处的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象。</summary>
      <param name="index">要移除的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象的索引。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.SetDirtyObject(System.Object)">
      <summary>指示指定的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象将其完整状态记录到视图状态，而不是仅记录更改的信息。</summary>
      <param name="o">要标记为自上次加载或保存视图状态后已发生了更改的对象。</param>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPagerFieldCommandEventArgs">
      <summary>为 Command 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCommandEventArgs.#ctor(System.Web.UI.WebControls.DataPagerFieldItem,System.Object,System.Web.UI.WebControls.CommandEventArgs)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.DataPagerFieldCommandEventArgs" /> 类的新实例。</summary>
      <param name="item">生成事件的 <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> 对象。</param>
      <param name="commandSource">事件源。</param>
      <param name="originalArgs">包含 <see cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" /> 和 <see cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" /> 属性的原始事件数据。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerFieldCommandEventArgs.CommandSource">
      <summary>获取引发事件的控件。</summary>
      <returns>引发事件的控件。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerFieldCommandEventArgs.Item">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> 对象，该对象包含引发事件的控件。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> 对象，该对象包含引发事件的控件。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPagerFieldItem">
      <summary>表示 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件中的页导航字段项。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldItem.#ctor(System.Web.UI.WebControls.DataPagerField,System.Web.UI.WebControls.DataPager)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> 类的新实例。</summary>
      <param name="field">页导航字段对象。</param>
      <param name="pager">包含页导航字段对象的页导航控件。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldItem.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>确定服务器控件的事件是否沿页的 UI 服务器控件层次结构向上传递。</summary>
      <returns>如果事件发送给父控件，则为 true；否则为 false。</returns>
      <param name="source">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerFieldItem.Pager">
      <summary>获取包含页导航字段对象的页导航控件。</summary>
      <returns>页导航控件。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerFieldItem.PagerField">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象。</summary>
      <returns>页导航字段对象。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.InsertItemPosition">
      <summary>指定 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板在呈现为 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的一部分时该模板的位置。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.InsertItemPosition.FirstItem">
      <summary>
        <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板呈现为 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的第一项。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.InsertItemPosition.LastItem">
      <summary>
        <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板呈现为 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的最后一项。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.InsertItemPosition.None">
      <summary>不呈现 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板。</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.IPageableItemContainer">
      <summary>定义数据绑定控件为了获得 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件提供的分页功能而必须实现的成员。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.IPageableItemContainer.MaximumRows">
      <summary>获取要在单个数据页上显示的最大项数。</summary>
      <returns>要在单个数据页上显示的最大项数。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(System.Int32,System.Int32,System.Boolean)">
      <summary>设置数据页的属性。</summary>
      <param name="startRowIndex">页面中第一条记录的索引。</param>
      <param name="maximumRows">单个页面上的最大项数。</param>
      <param name="databind">如果设置属性后重新绑定控件，则为 true；否则为 false。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex">
      <summary>获取在数据页上显示的第一条记录的索引。</summary>
      <returns>在数据页上显示的第一条记录的索引。</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable">
      <summary>当控件可以使用数据源中的数据时发生。</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.IQueryableDataSource">
      <summary>显示用于与数据源控件进行通信的 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件的方法和属性。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.IQueryableDataSource.QueryCreated">
      <summary>在数据源中创建查询时发生。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged">
      <summary>调用 <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> 方法会引发 <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> 事件。</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSource">
      <summary>支持通过标记文本在 ASP.NET 网页中使用语言集成查询 (LINQ)，以从数据对象中检索和修改数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件是否根据 <see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /> 集合中的值来动态创建 Order By 子句。</summary>
      <returns>如果 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件创建 Order By 子句，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件是否基于 <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> 集合中定义的值来动态创建 Where 子句。</summary>
      <returns>如果 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件将创建 Where 子句，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件是否支持在运行时对数据的各部分进行导航。</summary>
      <returns>如果用户可以对数据进行分页，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件是否支持在运行时对数据进行排序。</summary>
      <returns>如果用户可以对数据进行排序，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
      <summary>在创建上下文类型对象实例后发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
      <summary>在创建上下文类型对象实例前发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing">
      <summary>在释放上下文类型对象前发生。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
      <summary>获取或设置包含属性（其值包含要检索的数据）的类型的名称。</summary>
      <returns>要从中检索数据的类的名称。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.CreateQueryableView">
      <summary>返回可查询的视图。</summary>
      <returns>可查询的视图。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.CreateView">
      <summary>创建与此控件相关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 类的新实例。</summary>
      <returns>充当数据绑定控件的接口的对象。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>执行删除操作。</summary>
      <returns>受删除操作影响的记录数。</returns>
      <param name="keys">要删除的记录的行键值。</param>
      <param name="oldValues">为检测数据冲突而计算的行值。</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Deleted">
      <summary>完成删除操作后发生。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.DeleteParameters">
      <summary>
        <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 类不使用此属性。</summary>
      <returns>参数的集合。</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
      <summary>执行删除操作前发生。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
      <summary>获取或设置一个值，该值指示是否可以通过 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件删除数据记录。</summary>
      <returns>如果启用了自动删除操作，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
      <summary>获取或设置一个值，该值指示是否可以通过 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件插入数据记录。</summary>
      <returns>如果启用了自动插入操作，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
      <summary>获取或设置一个值，该值指示是否跟踪对数据上下文对象所做的更改。</summary>
      <returns>如果跟踪数据上下文对象的更改，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
      <summary>获取或设置一个值，该值指示是否可以通过 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件更新数据记录。</summary>
      <returns>如果启用了自动更新操作，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
      <summary>获取或设置一个值，该值指定用于对检索到的数据进行分组的属性。</summary>
      <returns>用于创建 Group By 子句的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
      <summary>获取用于创建 Group By 子句的参数的集合。</summary>
      <returns>用于创建 Group By 子句的参数。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
      <summary>执行插入操作。</summary>
      <returns>受插入操作影响的行数。</returns>
      <param name="values">要插入到数据源的行值。</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
      <summary>完成插入操作后发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
      <summary>执行插入操作前发生。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
      <summary>获取在插入操作过程中使用的参数的集合。</summary>
      <returns>在插入操作过程中使用的参数。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 对象。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)">
      <param name="e">事件数据。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
      <summary>获取或设置一个值，该值指定用于对检索到的数据进行排序的字段。</summary>
      <returns>用于创建 Order By 子句的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
      <summary>获取用于创建 Order By 子句的参数的集合。</summary>
      <returns>用于创建 Order By 子句的参数。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
      <summary>获取或设置用于对分组数据进行排序的字段。</summary>
      <returns>用于创建 Order Groups By 子句的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
      <summary>获取用于创建 Order Groups By 子句的参数集合。</summary>
      <returns>用于创建 Order Groups By 子句的参数。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.Select">
      <summary>获取或设置属性和计算值，它们包含在检索到的数据中。</summary>
      <returns>用于创建 Select 子句的字符串。</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Selected">
      <summary>数据检索操作完成后发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
      <summary>执行数据检索操作前发生。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
      <summary>获取在数据检索操作过程中使用的参数的集合。</summary>
      <returns>用于创建 Select 子句的参数。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
      <summary>获取或设置一个值，该值指示数据源中的数据是否存储在视图状态中，以确保数据在更新或删除之前不会由其他进程更改。</summary>
      <returns>如果将值存储在视图状态中，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType">
      <summary>有关此成员的说明，请参见 <see cref="T:System.Web.DynamicData.IDynamicDataSource" />。</summary>
      <returns>与类关联的类型。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName">
      <summary>有关此成员的说明，请参见 <see cref="T:System.Web.DynamicData.IDynamicDataSource" />。</summary>
      <returns>实体的名称。</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#Exception">
      <summary>有关此成员的说明，请参见 <see cref="T:System.Web.DynamicData.IDynamicDataSource" />。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.TableName">
      <summary>获取或设置数据上下文类中的属性或字段的名称，该数据上下文类表示一个数据集合。</summary>
      <returns>包含属性（该属性包含数据集合）名称的字符串。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>执行更新操作。</summary>
      <returns>受更新操作影响的记录数。</returns>
      <param name="keys">要更新的记录的行键值。</param>
      <param name="values">要在数据源中更新的行值。</param>
      <param name="oldValues">为检测数据冲突而计算的行值。</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Updated">
      <summary>完成更新操作后发生。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.UpdateParameters">
      <summary>
        <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 类不使用此集合。</summary>
      <returns>参数的集合。</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Updating">
      <summary>执行更新操作前发生。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.Where">
      <summary>获取或设置一个值，该值指定要将记录包含在检索到的数据中必须为真的条件。</summary>
      <returns>用于创建 Where 子句的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
      <summary>获取用于创建 Where 子句的参数集合。</summary>
      <returns>用于创建 <see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /> 属性中 Where 子句的参数的集合。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceContextEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceContextEventArgs" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)">
      <summary>为指定的数据操作初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceContextEventArgs" /> 类的新实例。</summary>
      <param name="operation">正在执行的数据操作。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance">
      <summary>获取或设置要创建的数据上下文对象。</summary>
      <returns>已设置为 <see cref="P:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance" /> 属性的数据上下文对象；否则为 null。 默认值为 null。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation">
      <summary>获取正在执行的数据操作。</summary>
      <returns>一个表示正在执行的数据操作类型的值。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleting" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> 类的新实例。</summary>
      <param name="originalObject">具有 <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> 属性中指定类型的对象，该对象包含要删除的数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
      <summary>使用指定的异常初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> 类的新实例。</summary>
      <param name="exception">在验证要删除的数据时发生的异常。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception">
      <summary>获取在执行删除操作之前验证数据时引发的异常。</summary>
      <returns>如果发生错误，则为该异常；否则为 null。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled">
      <summary>获取或设置一个值，该值指示异常是否已得到处理而不该再次引发。</summary>
      <returns>如果异常已得到处理，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject">
      <summary>获取表示要删除数据的对象。</summary>
      <returns>具有 <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> 属性中指定类型的对象，该对象包含要删除的数据。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs" /> 类的新实例。</summary>
      <param name="instance">要释放的数据上下文对象。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs.ObjectInstance">
      <summary>获取要释放的数据上下文对象。</summary>
      <returns>表示数据上下文的对象。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> 类的新实例。</summary>
      <param name="newObject">包含要插入数据的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> 类的新实例并指定提供的异常。</summary>
      <param name="exception">在验证要插入的数据时发生的异常。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception">
      <summary>获取在执行插入操作之前验证数据时引发的异常。</summary>
      <returns>如果发生错误，则为该异常；否则为 null。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled">
      <summary>获取或设置一个值，该值指示异常是否已得到处理而不该再次引发。</summary>
      <returns>如果异常已得到处理，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject">
      <summary>获取包含要插入数据的对象。</summary>
      <returns>包含要插入数据的对象。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selecting" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.#ctor(System.Web.UI.DataSourceSelectArguments,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Specialized.IOrderedDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs" /> 类的新实例。</summary>
      <param name="arguments">从数据绑定控件传递过来的值，用于确定数据的分页和排序方式。 有关更多信息，请参见 <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments" /> 属性。</param>
      <param name="whereParameters">用于创建 Where 子句的参数集合。 有关更多信息，请参见 <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters" /> 属性。</param>
      <param name="orderByParameters">用于创建 Order By 子句的参数集合。 有关更多信息，请参见 <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters" /> 属性。</param>
      <param name="groupByParameters">用于创建 Group By 子句的参数集合。 有关更多信息，请参见 <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters" /> 属性。</param>
      <param name="orderGroupsByParameters">参数的集合，用来创建用于对分组数据进行排序的子句。 有关更多信息，请参见 <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters" /> 属性。</param>
      <param name="selectParameters">用于创建 Select 子句的参数集合。 有关更多信息，请参见 <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters" /> 属性。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments">
      <summary>获取用于确定数据返回方式的值。</summary>
      <returns>包含用于确定数据返回方式的值的对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters">
      <summary>获取用于创建 GroupBy 子句的参数集合。</summary>
      <returns>包含 GroupBy 子句参数的对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters">
      <summary>获取用于创建 OrderBy 子句的参数集合。</summary>
      <returns>包含 OrderBy 子句参数的对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters">
      <summary>获取参数的集合，这些参数用于创建指定如何对分组数据进行排序的子句。</summary>
      <returns>一个对象，其中包含指定如何对分组数据进行排序的子句的参数。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result">
      <summary>获取或设置在数据查询中使用的数据对象。</summary>
      <returns>表示查询数据的对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters">
      <summary>获取用于创建 Select 子句的参数集合。</summary>
      <returns>包含 Select 子句参数的对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters">
      <summary>获取用于创建 Where 子句的参数集合。</summary>
      <returns>包含 Where 子句参数的对象。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />、<see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />、<see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />、<see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" /> 和 <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)">
      <summary>使用数据操作所引发的异常初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> 类的新实例。</summary>
      <param name="exception">在数据操作过程中发生的错误。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)">
      <summary>使用包含数据操作结果数据的对象初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> 类的新实例。</summary>
      <param name="result">包含数据操作结果数据的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)">
      <summary>使用包含数据操作结果数据以及返回的行数的对象初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> 类的新实例。</summary>
      <param name="result">包含数据操作结果数据的对象。</param>
      <param name="totalRowCount">数据检索操作返回的行数。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception">
      <summary>获取在数据操作过程中引发的异常。</summary>
      <returns>如果出现错误，则为表示异常的 <see cref="T:System.Exception" /> 对象；否则为 null。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled">
      <summary>获取或设置一个值，该值指示异常是否已得到处理而不该再次引发。</summary>
      <returns>如果异常已得到处理，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result">
      <summary>获取表示数据操作结果的对象。</summary>
      <returns>包含数据操作结果数据的对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount">
      <summary>获取数据检索操作过程中在某个数据集中检索的总行数。</summary>
      <returns>数据检索操作过程中在某个数据集中检索的总行数；如果 <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> 对象是在数据修改操作过程中创建的，则为 -1；如果通过将 <see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> 设置为 true 并将 <see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" /> 设置为 false 启用了自定义分页，则为 -1。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> 类的新实例。</summary>
      <param name="originalObject">具有 <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> 属性中指定类型的对象，该对象包含从数据源检索的初始值。</param>
      <param name="newObject">具有 <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> 属性中指定类型的对象，该对象包含将保存在数据源中的值。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
      <summary>使用指定的异常初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> 类的新实例。</summary>
      <param name="exception">在验证要更新的数据时发生的异常。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
      <summary>获取在执行更新操作之前验证数据时引发的异常。</summary>
      <returns>如果发生错误，则为该异常；否则为 null。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
      <summary>获取或设置一个值，该值指示异常是否已得到处理而不该再次引发。</summary>
      <returns>如果异常已得到处理，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
      <summary>获取包含将保存在数据源中的值的对象。</summary>
      <returns>具有 <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> 属性中指定类型的对象，该对象包含要保存的值。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
      <summary>获取包含最初从数据源检索的值的对象。</summary>
      <returns>具有 <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> 属性中指定类型的对象，该对象包含从数据源检索的数据。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
      <summary>描述在 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件插入、更新或删除值之前验证新值或修改后的值期间发生的异常。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor">
      <summary>使用由系统提供的用来描述错误的消息初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 类的新实例。</summary>
      <param name="info">承载序列化对象数据的对象。</param>
      <param name="context">有关源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)">
      <summary>使用指定的描述错误的消息初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 类的新实例。</summary>
      <param name="message">描述错误的消息。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})">
      <summary>使用描述错误的指定消息和对内部异常的引用集合来初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 类的新实例。</summary>
      <param name="message">描述错误的消息。</param>
      <param name="innerExceptions">验证异常的集合。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)">
      <summary>使用指定的错误消息和对内部异常的引用来初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> 类的新实例。</summary>
      <param name="message">描述错误的消息。</param>
      <param name="innerException">导致当前异常的异常。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>获取关于异常的信息并将其添加到 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info">一个对象，保存有关所引发异常的序列化对象数据。</param>
      <param name="context">有关源或目标的上下文信息。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions">
      <summary>获取在验证新值或修改后的值期间发生的一个或多个异常。</summary>
      <returns>一个包含异常的集合。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceView">
      <summary>支持 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件并提供一个接口，使数据绑定控件可以执行 LINQ 数据操作。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.#ctor(System.Web.UI.WebControls.LinqDataSource,System.String,System.Web.HttpContext)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 类的新实例，将指定的 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件设置为当前视图的所有者。</summary>
      <param name="owner">与 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 对象关联的数据源控件。</param>
      <param name="name">数据源视图的唯一名称（在拥有它的数据源控件的范围内）。</param>
      <param name="context">当前的 <see cref="T:System.Web.HttpContext" /> 实例。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanDelete">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 对象是否支持删除操作。</summary>
      <returns>如果支持该操作，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanInsert">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 对象是否支持插入操作。</summary>
      <returns>如果支持该操作，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanPage">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 对象是否支持对检索的数据分页。</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 对象除支持检索数据外，是否还支持检索数据行的总数。</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanSort">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 对象是否支持在排序视图中显示检索的数据。</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanUpdate">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 对象是否支持更新操作。</summary>
      <returns>如果支持该操作，则为 true；否则为 false。</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreated">
      <summary>在创建上下文类型对象的实例后发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating">
      <summary>在创建上下文类型对象实例前发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing">
      <summary>在释放上下文类型对象前发生。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.ContextType">
      <summary>获取数据上下文类的类型。</summary>
      <returns>与 <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName" /> 属性中指定的数据上下文类关联的类型。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName">
      <summary>获取或设置数据上下文类的名称，该类包含 <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.TableName" /> 属性中指定的字段或属性。</summary>
      <returns>数据上下文类的名称。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Type)">
      <summary>创建数据上下文类型的实例。</summary>
      <returns>数据上下文类型的实例。</returns>
      <param name="contextType">要创建的数据上下文的类型。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Web.UI.DataSourceOperation)">
      <summary>使用指定的数据源操作创建数据上下文类型的实例。</summary>
      <returns>数据上下文的实例。</returns>
      <param name="operation">要使用的数据源操作。</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Deleted">
      <summary>完成删除操作后发生。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject(System.Object,System.Object,System.Object)">
      <summary>从表中删除数据对象。</summary>
      <param name="dataContext">要删除的对象的数据上下文。</param>
      <param name="table">包含要删除的对象的表。</param>
      <param name="oldDataObject">要删除的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.DeleteObject(System.Object)">
      <summary>从表中删除数据对象。</summary>
      <returns>已删除数据对象的数量。</returns>
      <param name="oldEntity">要删除的数据对象。</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Deleting">
      <summary>执行删除操作前发生。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.DisposeContext(System.Object)">
      <summary>释放数据上下文。</summary>
      <param name="dataContext">要释放的数据上下文。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.EnableDelete">
      <summary>获取或设置一个值，该值指示数据源视图是否支持删除行。</summary>
      <returns>如果数据源视图支持删除行，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.EnableInsert">
      <summary>获取或设置一个值，该值指示数据源视图是否支持添加新行。</summary>
      <returns>如果视图支持插入行，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking">
      <summary>获取或设置一个值，该值指示是否跟踪对数据上下文对象所做的更改。</summary>
      <returns>如果跟踪数据上下文对象的更改，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate">
      <summary>获取或设置一个值，该值指示数据源视图是否支持更新行。</summary>
      <returns>如果视图支持更新行，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>通过使用指定键和旧值执行删除操作。</summary>
      <returns>已从基础数据源中删除的对象数或行数。</returns>
      <param name="keys">要删除的记录的行键值。</param>
      <param name="oldValues">为检测数据冲突而计算的行值。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
      <summary>通过使用集合中指定的值执行插入操作。</summary>
      <returns>已插入数据源中的对象数或行数。</returns>
      <param name="values">要插入到数据源的行值。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
      <summary>执行数据检索操作。</summary>
      <returns>数据对象或行的列表。</returns>
      <param name="arguments">用于请求对数据执行基本数据检索操作以外的操作的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>执行更新操作。</summary>
      <returns>已在数据源中更新的行数。</returns>
      <param name="keys">要更新的记录的行键值。</param>
      <param name="values">要在数据源中更新的行值。</param>
      <param name="oldValues">为检测数据冲突而计算的行值。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.GetSource(System.Web.UI.WebControls.QueryContext)">
      <summary>返回要应用查询的数据源。</summary>
      <returns>要应用查询的数据源。</returns>
      <param name="context">要应用查询的数据上下文。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo(System.Type)">
      <summary>检索有关数据集合的元数据。</summary>
      <returns>包含数据集合的类型元数据的对象。</returns>
      <param name="contextType">表示数据上下文类的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors(System.Collections.Generic.IDictionary{System.String,System.Exception},System.Web.UI.DataSourceOperation)">
      <summary>处理数据对象创建过程中的数据操作失败时发生的任何异常。</summary>
      <param name="errors">所发生的系统生成的、特定于字段的异常。</param>
      <param name="operation">引发异常的数据操作。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject(System.Object,System.Object,System.Object)">
      <summary>将一个数据对象插入表中。</summary>
      <param name="dataContext">对象的数据上下文。</param>
      <param name="table">在其中插入数据的表。</param>
      <param name="newDataObject">要插入的对象。</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Inserted">
      <summary>完成插入操作后发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Inserting">
      <summary>执行插入操作前发生。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.InsertObject(System.Object)">
      <summary>将数据对象插入 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 对象。</summary>
      <returns>已插入数据源视图中的对象的数量。</returns>
      <param name="newEntity">要插入的数据对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreated" /> 事件</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating(System.Web.UI.WebControls.LinqDataSourceContextEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing(System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleted" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleting" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnException(System.Web.DynamicData.DynamicValidatorEventArgs)">
      <summary>在数据操作失败时，引发 <see cref="E:System.Web.DynamicData.IDynamicDataSource.Exception" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)">
      <summary>
        <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件完成插入操作后引发 <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserted" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserting" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)">
      <summary>
        <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件完成数据检索操作后引发 <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selected" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)">
      <summary>在 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件执行数据检索操作之前引发 <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selecting" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)">
      <summary>
        <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件完成更新操作后引发 <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updated" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)">
      <summary>在 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件执行更新操作之前引发 <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updating" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject(System.Object,System.Object)">
      <summary>将包含数据的对象重置为其原始状态。</summary>
      <param name="table">包含数据的表。</param>
      <param name="dataObject">包含数据的原始状态的实体。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)">
      <summary>从数据源中检索数据。</summary>
      <returns>数据行的列表。</returns>
      <param name="arguments">用于请求对数据执行基本数据检索操作以外的操作的对象。</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Selected">
      <summary>在数据检索操作完成后发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Selecting">
      <summary>执行数据检索操作前发生。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues(System.Collections.IList)">
      <summary>将来自 Select 操作的原始值存储在控件的视图状态中。</summary>
      <param name="results">Select 操作的结果。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState">
      <summary>获取或设置一个值，该值指示当启用删除或更新操作时将来自选择操作的原始值存储在视图状态中。</summary>
      <returns>如果将原始值保存在视图状态中，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.TableName">
      <summary>获取或设置包含数据集合的数据上下文类的属性或字段的名称。</summary>
      <returns>表示数据集合的属性的名称。</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Updated">
      <summary>完成更新操作后发生。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject(System.Object,System.Object,System.Object,System.Object)">
      <summary>更新数据对象。</summary>
      <param name="dataContext">要更新的数据上下文类。</param>
      <param name="table">包含要更新的对象的数据集合。</param>
      <param name="oldDataObject">要更新的对象。</param>
      <param name="newDataObject">已更新的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.UpdateObject(System.Object,System.Object)">
      <summary>更新数据对象。</summary>
      <returns>如果更新成功，则为 0（零）；如果更新失败，则为 -1。</returns>
      <param name="oldEntity">要更新的对象。</param>
      <param name="newEntity">要用于更新的新对象。</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Updating">
      <summary>执行更新操作前发生。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType(System.Type,System.Boolean)">
      <summary>检查数据上下文类是否是从 <see cref="T:System.Data.Linq.DataContext" /> 派生的。</summary>
      <param name="contextType">要验证的数据上下文类的类型。</param>
      <param name="selecting">指定当选择操作开始时是否已调用该方法。</param>
      <exception cref="T:System.InvalidOperationException">正在执行插入、更新或删除操作，并且数据上下文类不是从 <see cref="T:System.Data.Linq.DataContext" /> 派生的。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>验证是否存在执行删除操作的条件。</summary>
      <param name="keys">要删除的数据记录的键值字典。</param>
      <param name="oldValues">包含要删除的行值的字典。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.GroupBy" /> 或 <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.SelectNew" /> 属性包含值。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.CanDelete" /> 为 false。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported">
      <summary>验证是否存在执行编辑操作的条件。</summary>
      <exception cref="T:System.InvalidOperationException">验证失败或已取消。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported(System.Collections.IDictionary)">
      <summary>验证是否存在执行插入操作的条件。</summary>
      <param name="values">包含要插入的行值的字典。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.GroupBy" /> 或 <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.SelectNew" /> 属性包含值，或者 <paramref name="values" /> 参数不包含任何项。</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.CanInsert" /> 为 false。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType(System.Type,System.Boolean)">
      <summary>检查表示数据表的类的类型是否为泛型类型。</summary>
      <param name="tableType">要验证的表类型。</param>
      <param name="selecting">指定当选择操作开始时是否已调用该方法。</param>
      <exception cref="T:System.InvalidOperationException">表的类型不是泛型。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>验证是否存在执行更新操作的条件。</summary>
      <param name="keys">要更新的数据记录的键值字典。</param>
      <param name="values">包含用于更新操作的新行值的字典。</param>
      <param name="oldValues">包含用于更新操作的旧行值的字典。</param>
      <exception cref="T:System.NotSupportedException">不支持更新操作。</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.ListView">
      <summary>使用用户定义的模板显示数据源的值。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件使用户能够选择、排序、删除、编辑和插入记录。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListView" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.AccessKey">
      <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.AccessKey" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
      <returns>
        <see cref="F:System.String.Empty" />，表示该属性未设置。</returns>
      <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.AccessKey" /> 属性。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.AddControlToContainer(System.Web.UI.Control,System.Web.UI.Control,System.Int32)">
      <summary>将指定控件添加到指定容器。</summary>
      <param name="control">一个对象，包含要添加到容器的控件。</param>
      <param name="container">用于存储子控件的容器。</param>
      <param name="addLocation">控件集合中要添加子控件的位置。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中交替数据项的自定义内容。</summary>
      <returns>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中交替数据项的自定义内容。 默认值为 null，表示未设置此属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.BackColor">
      <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.BackColor" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
      <returns>
        <see cref="F:System.Drawing.Color.Empty" />，表示该属性未设置。</returns>
      <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.BackColor" /> 属性。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.BorderColor">
      <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.BorderColor" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
      <returns>
        <see cref="F:System.Drawing.Color.Empty" />，表示该属性未设置。</returns>
      <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.BorderColor" /> 属性。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.BorderStyle">
      <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
      <returns>
        <see cref="F:System.Web.UI.WebControls.BorderStyle.NotSet" />，表示该属性未设置。</returns>
      <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.BorderStyle" /> 属性。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.BorderWidth">
      <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
      <returns>
        <see cref="F:System.Web.UI.WebControls.Unit.Empty" />，表示该属性未设置。</returns>
      <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.BorderWidth" /> 属性。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ClientIDRowSuffix">
      <summary>获取或设置数据字段的名称，当 <see cref="P:System.Web.UI.Control.ClientIDMode" /> 属性设置为 <see cref="F:System.Web.UI.ClientIDMode.Predictable" /> 时，这些数据字段的值用于唯一地标识 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的每个数据行。</summary>
      <returns>数据字段的名称，当 ASP.NET 生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时，这些数据字段的值用于唯一地标识 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的每个实例。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ClientIDRowSuffixDataKeys">
      <summary>获取数据值，在 ASP.NET 生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时，这些数据值用于唯一标识数据绑定控件的每个实例。</summary>
      <returns>数据值，在 ASP.NET 生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时，这些数据值用于唯一标识数据绑定控件的每个实例。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.Controls">
      <summary>获取一个 <see cref="T:System.Web.UI.ControlCollection" /> 对象，该对象表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的子控件。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的子控件集合。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ConvertEmptyStringToNull">
      <summary>获取或设置一个值，该值指示在数据源中更新数据字段时是否将空字符串值 ("") 自动转换为 null 值。</summary>
      <returns>如果将空字符串值自动转换为 null 值，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateChildControls">
      <summary>根据视图状态中存储的值，创建用于呈现 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的控件层次结构。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)">
      <summary>使用指定数据源创建用于呈现 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的控件层次结构。</summary>
      <returns>所创建的项数。</returns>
      <param name="dataSource">一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的数据源。</param>
      <param name="dataBinding">如果为 true，则表示将子控件绑定到数据；如果为 false，则表示控件将在回发期间从视图状态重新创建自身。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="dataSource" /> 为 <see cref="T:System.Web.UI.DataSourceView" /> 返回 null。 - 或 - <paramref name="dataSource" /> 未实现 <see cref="T:System.Collections.ICollection" /> 接口，无法返回 <see cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" /> 值。 - 或 - <paramref name="dataSource" /> 未实现 <see cref="T:System.Collections.ICollection" /> 接口，<paramref name="dataBinding" /> 被设置为 false。 - 或 - <see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有指定组占位符。 - 或 - <see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有指定项占位符。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateControlStyle">
      <summary>为控件创建默认样式。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的样式。</returns>
      <exception cref="T:System.NotSupportedException">尝试调用 <see cref="M:System.Web.UI.WebControls.ListView.CreateControlStyle" /> 方法。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateDataItem(System.Int32,System.Int32)">
      <summary>在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中创建一个数据项。</summary>
      <returns>使用指定参数创建的数据项。</returns>
      <param name="dataItemIndex">数据项在基础数据源对象中的索引。</param>
      <param name="displayIndex">数据项在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的显示索引。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateDataSourceSelectArguments">
      <summary>创建 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 对象，该对象包含传递到数据源的参数。</summary>
      <returns>传递到数据源的参数。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateEmptyDataItem">
      <summary>在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中创建 <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> 模板。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateEmptyItem">
      <summary>在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中创建一个空项。</summary>
      <returns>所创建的空项。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateInsertItem">
      <summary>在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中创建一个插入项。</summary>
      <returns>所创建的插入项。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有指定 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)">
      <summary>创建一个具有指定类型的 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 对象。</summary>
      <returns>一个具有指定类型的 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 对象。</returns>
      <param name="itemType">
        <see cref="T:System.Web.UI.WebControls.ListViewItemType" /> 值之一。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateItemsInGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)">
      <summary>以组的形式创建 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件层次结构。</summary>
      <returns>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的当前数据页的所有数据项。</returns>
      <param name="dataSource">数据源。</param>
      <param name="dataBinding">如果 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件绑定到数据，则为 true；否则为 false。</param>
      <param name="insertPosition">
        <see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> 值之一。</param>
      <param name="keyArray">一个数组，表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的每一项的数据键值。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有指定项占位符。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)">
      <summary>创建不带有组的 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件层次结构。</summary>
      <returns>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的当前数据页的所有数据项。</returns>
      <param name="dataSource">数据源。</param>
      <param name="dataBinding">如果 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件绑定到数据，则为 true；否则为 false。</param>
      <param name="insertPosition">
        <see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> 值之一。</param>
      <param name="keyArray">一个数组，表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的每一项的数据键值。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateLayoutTemplate">
      <summary>在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中创建根容器。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateSuffixArrayList(System.Web.UI.WebControls.ListViewPagedDataSource,System.Collections.ArrayList)">
      <summary>创建一个后缀数组，以供 ASP.NET 在其生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时使用。</summary>
      <param name="dataSource">将为后缀提供值的数据源。</param>
      <param name="suffixArray">后缀数组。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.CssClass">
      <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.CssClass" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
      <returns>
        <see cref="F:System.String.Empty" />，表示该属性未设置。</returns>
      <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.CssClass" /> 属性。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.DataKeyNames">
      <summary>获取或设置一个数组，该数组包含了显示在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的项的主键字段的名称。</summary>
      <returns>一个数组，其中包含了显示在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的项的主键字段的名称。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.DataKeys">
      <summary>获取一个 <see cref="T:System.Web.UI.WebControls.DataKey" /> 对象集合，这些对象表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的每一项的数据键值。</summary>
      <returns>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的每一项的数据键。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.DeleteItem(System.Int32)">
      <summary>从数据源中删除位于指定索引位置的记录。</summary>
      <param name="itemIndex">要删除的项的索引。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="itemIndex" /> 小于 0。 - 或 - 与 <see cref="T:System.Web.UI.DataSourceView" /> 控件相关联的 <see cref="T:System.Web.UI.WebControls.ListView" /> 对象为 null。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.DeleteMethod">
      <summary>获取或设置为了删除数据要调用的方法的名称。</summary>
      <returns>方法的名称。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EditIndex">
      <summary>获取或设置所编辑的项的索引。</summary>
      <returns>所编辑的项的从零开始的索引。 默认值为 -1，表示没有正在编辑的项。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Web.UI.WebControls.ListView.EditIndex" /> 属性设置为一个小于 -1 的值。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EditItem">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中处于编辑模式的项。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中处于编辑模式的项；或者，如果没有项处于编辑模式，则为 null。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EditItemTemplate">
      <summary>获取或设置处于编辑模式的项的自定义内容。</summary>
      <returns>一个对象，包含处于编辑模式的项的自定义内容。 默认值为 null，表示未设置此属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate">
      <summary>获取或设置在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件绑定到不包含任何记录的数据源时所呈现的空模板的用户定义内容。</summary>
      <returns>一个对象，包含空模板的自定义内容。 默认值为 null，表示未设置此属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate">
      <summary>获取或设置在当前数据页的最后一行中没有可显示的数据项时，<see cref="T:System.Web.UI.WebControls.ListView" /> 控件中呈现的空项的用户定义内容。</summary>
      <returns>一个对象，该对象包含空项的自定义内容。 默认值为 null，表示未设置此属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EnableModelValidation">
      <summary>获取或设置一个值，该值指示验证程序控件是否会处理在插入或更新操作过程中出现的异常。</summary>
      <returns>如果验证程序控件将处理在插入或更新操作过程中出现的异常，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EnablePersistedSelection">
      <summary>获取或设置一个值，该值指示当用户在逐页浏览数据绑定控件中的数据时，行选择是否保持。</summary>
      <returns>如果行选择保持，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.EnsureLayoutTemplate">
      <summary>确保在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中正确创建 <see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" /> 内容。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.ExtractItemValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.ListViewItem,System.Boolean)">
      <summary>检索在指定项中声明的每个字段的值，并将它们存储在指定的 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 对象中。</summary>
      <param name="itemValues">一个字典对象，用于存储字段值。</param>
      <param name="item">要从中检索字段值的 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 对象。</param>
      <param name="includePrimaryKey">true 表示包含主键字段；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemValues" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="item" /> 不是 <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> 对象。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.FindPlaceholder(System.String,System.Web.UI.Control)">
      <summary>在指定容器中搜索具有指定标识符的控件。</summary>
      <returns>指定的控件；或者，如果找不到指定的控件，则为 null。</returns>
      <param name="containerID">要查找的控件的标识符。</param>
      <param name="container">要搜索的容器。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.Font">
      <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.Font" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持此属性。</summary>
      <returns>此属性不受支持，并且引发 <see cref="T:System.NotSupportedException" /> 错误。</returns>
      <exception cref="T:System.NotSupportedException">尝试访问 <see cref="P:System.Web.UI.WebControls.ListView.Font" /> 属性。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ForeColor">
      <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.ForeColor" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
      <returns>
        <see cref="F:System.Drawing.Color.Empty" />，表示该属性未设置。</returns>
      <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.ForeColor" /> 属性。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.GroupItemCount">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中每组显示的项数。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中每组显示的项数。 默认值为 1，表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件将每组显示一项。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" /> 属性被设置为一个小于 1 的值。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.GroupPlaceholderID">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的组占位符的 ID。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的组占位符的 ID。 默认值为“groupPlaceholder”。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的 ID 为 null 或空字符串。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的组之间的分隔符的用户定义内容。</summary>
      <returns>一个对象，包含组分隔符的自定义内容。 默认值为 null，表示未设置此属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.GroupTemplate">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的组容器的用户定义内容。</summary>
      <returns>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的组容器的自定义内容。 默认值为 null，表示未设置此属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.Height">
      <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.Height" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
      <returns>
        <see cref="F:System.Web.UI.WebControls.Unit.Empty" />，表示该属性未设置。</returns>
      <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.Height" /> 属性。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.InsertItem">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的插入项。</summary>
      <returns>一个对象，表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的插入项。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.InsertItemPosition">
      <summary>获取或设置 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板在作为 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的一部分呈现时的位置。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> 值之一。 默认值为 <see cref="F:System.Web.UI.WebControls.InsertItemPosition.None" />，表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件将不呈现 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 内容。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.InsertItemTemplate">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的插入项的自定义内容。</summary>
      <returns>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的插入项的自定义内容。 默认值为 null，表示未设置此属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.InsertMethod">
      <summary>获取或设置为了插入数据要调用的方法的名称。</summary>
      <returns>方法的名称。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InsertNewItem(System.Boolean)">
      <summary>将当前记录插入到数据源中。</summary>
      <param name="causesValidation">true 表示在调用此方法时执行页面验证；否则为 false。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有插入项。 - 或 - 与 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件相关联的 <see cref="T:System.Web.UI.DataSourceView" /> 对象为 null。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateEmptyDataTemplate(System.Web.UI.Control)">
      <summary>使用 <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> 模板中包含的子控件填充指定的 <see cref="T:System.Web.UI.Control" /> 对象。</summary>
      <param name="container">一个容器，用于存储 <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> 模板中的子控件。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateEmptyItemTemplate(System.Web.UI.Control)">
      <summary>通过使用 <see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" /> 模板中包含的子控件，填充指定的 <see cref="T:System.Web.UI.Control" /> 对象。</summary>
      <param name="container">一个容器，用于存储 <see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" /> 模板中的子控件。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateGroupSeparatorTemplate(System.Web.UI.Control)">
      <summary>通过使用 <see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" /> 模板中包含的子控件，填充指定的 <see cref="T:System.Web.UI.Control" /> 对象。</summary>
      <param name="container">一个容器，用于存储 <see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" /> 模板中的子控件。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateGroupTemplate(System.Web.UI.Control)">
      <summary>通过使用 <see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" /> 模板中包含的子控件，填充指定的 <see cref="T:System.Web.UI.Control" /> 对象。</summary>
      <param name="container">一个容器，用于存储 <see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" /> 模板中的子控件。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateInsertItemTemplate(System.Web.UI.Control)">
      <summary>通过使用 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板中包含的子控件，填充指定的 <see cref="T:System.Web.UI.Control" /> 对象。</summary>
      <param name="container">一个容器，用于存储 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板中的子控件。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateItemSeparatorTemplate(System.Web.UI.Control)">
      <summary>通过使用 <see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" /> 模板中包含的子控件，填充指定的 <see cref="T:System.Web.UI.Control" /> 对象。</summary>
      <param name="container">一个容器，用于存储 <see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" /> 模板中的子控件。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateItemTemplate(System.Web.UI.Control,System.Int32)">
      <summary>通过使用其中一个 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件模板的子控件，填充指定的 <see cref="T:System.Web.UI.Control" /> 对象。</summary>
      <param name="container">用于存储子控件的容器。</param>
      <param name="displayIndex">要实例化的项的显示索引。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有指定 <see cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" /> 模板。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.IsUsingModelBinders">
      <summary>获取一个值，该值指示是否使用模型绑定。</summary>
      <returns>如果正在使用模型绑定，则为 true；否则为 false。</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemCanceling">
      <summary>在请求取消操作之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 控件取消插入或编辑操作之前发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemCommand">
      <summary>当单击 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的按钮时发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemCreated">
      <summary>在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中创建项时发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemDataBound">
      <summary>在数据项绑定到 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的数据时发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemDeleted">
      <summary>在请求删除操作且 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件删除项之后发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemDeleting">
      <summary>在请求删除操作之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 控件删除项之前发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemEditing">
      <summary>在请求编辑操作之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 项进入编辑模式之前发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemInserted">
      <summary>在请求插入操作且 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件在数据源中插入项之后发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemInserting">
      <summary>在请求插入操作之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 控件执行插入之前发生。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ItemPlaceholderID">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的项占位符的 ID。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的项占位符的 ID。 默认值为“itemPlaceholder”。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">指定的 ID 为 null 或空字符串。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.Items">
      <summary>获取一个 <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> 对象集合，这些对象表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的当前数据页的数据项。</summary>
      <returns>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的当前数据页的所有数据项。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的项之间的分隔符的自定义内容。</summary>
      <returns>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的项之间的分隔符的自定义内容。 默认值为 null，表示未设置此属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ItemTemplate">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的数据项的自定义内容。</summary>
      <returns>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的数据项的自定义内容。 默认值为 null，表示未设置此属性。</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemUpdated">
      <summary>在请求更新操作且 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件更新项之后发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemUpdating">
      <summary>在请求更新操作之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 控件更新项之前发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.LayoutCreated">
      <summary>在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中创建 <see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" /> 模板后发生。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.LayoutTemplate">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的根容器的自定义内容。</summary>
      <returns>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的根容器的自定义内容。 默认值为 null，表示未设置此属性。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.LoadControlState(System.Object)">
      <summary>加载 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中必须保持的属性的状态（即使在 <see cref="P:System.Web.UI.Control.EnableViewState" /> 属性设置为 false 时仍然加载）。</summary>
      <param name="savedState">包含保存的控件状态值的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.LoadViewState(System.Object)">
      <summary>加载以前保存的 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的视图状态。</summary>
      <param name="savedState">包含控件的已保存视图状态值的对象。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.MaximumRows">
      <summary>获取要在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的单个页上显示的最大项数。</summary>
      <returns>要在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的单个页上显示的最大项数。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>确定是否应处理 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的事件。</summary>
      <returns>如果应处理事件，则为 true；否则为 false。</returns>
      <param name="source">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> 事件。</summary>
      <param name="e">事件数据。</param>
      <exception cref="T:System.InvalidOperationException">没有 <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> 事件的处理程序。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemCommand" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemCreated" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" /> 事件。</summary>
      <param name="e">事件数据。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有使用 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 属性绑定到数据源控件。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemEditing" /> 事件。</summary>
      <param name="e">事件数据。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有使用 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 属性绑定到数据源控件。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemInserting" /> 事件。</summary>
      <param name="e">事件数据。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有使用 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 属性绑定到数据源控件。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" /> 事件。</summary>
      <param name="e">事件数据。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有使用 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 属性绑定到数据源控件。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.LayoutCreated" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> 事件。</summary>
      <param name="e">事件数据。</param>
      <exception cref="T:System.InvalidOperationException">没有 <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> 事件的处理程序。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.Sorted" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.Sorting" /> 事件。</summary>
      <param name="e">事件数据。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有使用 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> 属性绑定到数据源控件。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#TotalRowCountAvailable" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged">
      <summary>在页属性更改且 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件设置新值之后发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging">
      <summary>在页属性更改之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 控件设置新值之前发生。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.PerformDataBinding(System.Collections.IEnumerable)">
      <summary>将 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件绑定到指定的数据源。</summary>
      <param name="data">一个对象，该对象实现 <see cref="T:System.Collections.IEnumerable" /> 接口并包含数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.PerformSelect">
      <summary>从关联的数据源中检索数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.RemoveItems">
      <summary>删除 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的项或组容器中的所有子控件。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.Render(System.Web.UI.HtmlTextWriter)">
      <summary>使用指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象将 Web 服务器控件内容呈现到客户端的浏览器。</summary>
      <param name="writer">一个对象，用于在客户端的浏览器上呈现服务器控件内容。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.SaveControlState">
      <summary>保存 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中必须保持的属性的状态（即使在 <see cref="P:System.Web.UI.Control.EnableViewState" /> 属性设置为 false 时仍然保存）。</summary>
      <returns>返回服务器控件的当前视图状态。 如果没有与控件关联的视图状态，则此方法返回 null。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.SaveViewState">
      <summary>保存 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的当前视图状态。</summary>
      <returns>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的已保存的视图状态值。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SelectedDataKey">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的数据键值。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的数据键值。 默认值为 null，表示当前未选择项。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" /> 属性中未指定数据键。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SelectedIndex">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的索引。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的从零开始的索引。 默认值为 -1，表示当前未选择项。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Web.UI.WebControls.ListView.SelectedIndex" /> 属性设置为一个小于 -1 的值。</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged">
      <summary>在单击项的“选择”按钮且 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件处理选择操作之后发生。</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging">
      <summary>在单击项的“选择”按钮之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 控件处理选择操作之前发生。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的自定义内容。</summary>
      <returns>一个对象，包含 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的自定义内容。 默认值为 null，表示未设置此属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SelectedPersistedDataKey">
      <summary>获取或设置数据绑定控件中选择的持久项的数据键值。</summary>
      <returns>数据绑定控件中选择的持久项的数据键。 默认值为 null，表示当前未选择项。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SelectedValue">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的数据键值。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的选定项的数据键值。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.SelectItem(System.Int32)">
      <summary>选择 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中处于编辑模式的项。</summary>
      <param name="rowIndex">处于编辑模式的项的索引。</param>
      <exception cref="T:System.InvalidOperationException">项索引为负。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.SetEditItem(System.Int32)">
      <summary>在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中将指定项设置为编辑模式。</summary>
      <param name="rowIndex">要设置为编辑模式的项的索引。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.SetPageProperties(System.Int32,System.Int32,System.Boolean)">
      <summary>设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的数据页的属性。</summary>
      <param name="startRowIndex">页面中第一条记录的索引。</param>
      <param name="maximumRows">单个页面上的最大项数。</param>
      <param name="databind">如果设置属性后重新绑定控件，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumRows" /> 小于 1。 - 或 - <paramref name="startRowIndex" /> 小于 0。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.Sort(System.String,System.Web.UI.WebControls.SortDirection)">
      <summary>根据指定的排序表达式和方向对 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件进行排序。</summary>
      <param name="sortExpression">用于对 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件进行排序的排序表达式。</param>
      <param name="sortDirection">
        <see cref="T:System.Web.UI.WebControls.SortDirection" /> 值之一。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件绑定到某个数据源控件，但是与该数据源关联的 <see cref="T:System.Web.UI.DataSourceView" /> 对象为 null。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SortDirection">
      <summary>获取要排序的字段的排序方向。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.SortDirection" /> 值之一。 默认值为 SortDirection.Ascending。</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.Sorted">
      <summary>在请求排序操作且 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件处理排序操作之后发生。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SortExpression">
      <summary>获取与要排序的字段关联的排序表达式。</summary>
      <returns>与要排序的字段关联的排序表达式。</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.Sorting">
      <summary>在请求排序操作之后、<see cref="T:System.Web.UI.WebControls.ListView" /> 控件处理排序操作之前发生。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.StartRowIndex">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的数据页上显示的第一条记录的索引。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的数据页上显示的第一条记录的索引。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys">
      <summary>获取数据值的集合，在 ASP.NET 生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时，这些数据值用于唯一标识数据绑定控件的每个实例。</summary>
      <returns>数据字段值的集合。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames">
      <summary>获取或设置一个数组，该数组包含显示在数据绑定控件中的项的主键字段的名称。</summary>
      <returns>一个数组，该数组包含显示在数据绑定控件中的项的主键字段的名称。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataMember">
      <summary>当数据源包含多个不同的数据项列表时，获取或设置数据绑定控件绑定到的数据列表的名称。</summary>
      <returns>数据绑定控件绑定到的数据列表的名称。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSource">
      <summary>获取或设置对象，数据绑定控件从该对象中检索其数据项列表。</summary>
      <returns>包含数据绑定控件所检索到的数据列表的对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID">
      <summary>获取或设置数据源控件的 ID，数据绑定控件从数据源控件中检索其数据项列表。</summary>
      <returns>表示数据源的控件的 ID，数据绑定控件从该控件中检索其数据。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject">
      <summary>获取一个对象，该对象实现 <see cref="T:System.Web.UI.IDataSource" /> 接口，以便提供对该对象的数据内容的访问。</summary>
      <returns>数据源对象，其中包含数据绑定控件所检索到的数据项列表。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix">
      <summary>获取数据字段的名称，当 <see cref="P:System.Web.UI.Control.ClientIDMode" /> 属性设置为 <see cref="F:System.Web.UI.ClientIDMode.Predictable" /> 时，这些数据字段的值用于唯一地标识 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的每个数据行。</summary>
      <returns>数据字段的名称，当 ASP.NET 生成 <see cref="P:System.Web.UI.Control.ClientID" /> 值时，这些数据字段的值用于唯一地标识 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的每个实例。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys">
      <summary>获取数据键值的集合，这些值表示数据绑定控件中的每一行。</summary>
      <returns>一个数组，其中包含数据绑定控件中每一行的数据键值。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection">
      <summary>获取或设置一个值，该值指定当用户在逐页浏览数据绑定控件的数据时，所选行是否保持。</summary>
      <returns>如果行选择基于数据键，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey">
      <summary>获取数据键对象，其中包含数据绑定控件中所选行的数据键值。</summary>
      <returns>一个对象，其中包含数据绑定控件中所选行的数据键值。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex">
      <summary>获取或设置数据绑定控件中所选行的索引。</summary>
      <returns>数据绑定控件中所选行的索引。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#MaximumRows">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Web.UI.WebControls.IPageableItemContainer.MaximumRows" />。</summary>
      <returns>要在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的单个页上显示的最大项数。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#SetPageProperties(System.Int32,System.Int32,System.Boolean)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />。</summary>
      <param name="startRowIndex">页面中第一条记录的索引。</param>
      <param name="maximumRows">单个页面上的最大项数。</param>
      <param name="databind">如果设置属性后重新绑定控件，则为 true；否则为 false。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#StartRowIndex">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex" />。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的数据页上显示的第一条记录的索引。</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#TotalRowCountAvailable">
      <summary>有关此成员的说明，请参见 <see cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" />。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPersistedSelector#DataKey">
      <summary>获取或设置数据绑定控件中所选记录的数据键值。</summary>
      <returns>数据绑定控件中所选记录的数据键值。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.TabIndex">
      <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.TabIndex" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
      <returns>0，表示该属性未设置。</returns>
      <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.TabIndex" /> 属性。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ToolTip">
      <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.ToolTip" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
      <returns>
        <see cref="F:System.String.Empty" />，表示该属性未设置。</returns>
      <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.ToolTip" /> 属性。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.UpdateItem(System.Int32,System.Boolean)">
      <summary>更新数据源中指定索引处的记录。</summary>
      <param name="itemIndex">要更新的项的索引。</param>
      <param name="causesValidation">true 表示在调用此方法时执行页面验证；否则为 false。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="itemIndex" /> 小于 0。 - 或 - 与 <see cref="T:System.Web.UI.DataSourceView" /> 控件相关联的 <see cref="T:System.Web.UI.WebControls.ListView" /> 对象为 null。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.UpdateMethod">
      <summary>获取或设置为了更新数据要调用的方法的名称。</summary>
      <returns>方法的名称。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.Width">
      <summary>重写 <see cref="P:System.Web.UI.WebControls.WebControl.Width" /> 属性。 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件不支持设置此属性。</summary>
      <returns>
        <see cref="F:System.Web.UI.WebControls.Unit.Empty" />，表示该属性未设置。</returns>
      <exception cref="T:System.NotSupportedException">已尝试设置 <see cref="P:System.Web.UI.WebControls.ListView.Width" /> 属性。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewCancelEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewCancelEventArgs.#ctor(System.Int32,System.Web.UI.WebControls.ListViewCancelMode)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewCancelEventArgs" /> 类的新实例。</summary>
      <param name="itemIndex">项的索引，该项包含引发事件的“取消”按钮。</param>
      <param name="cancelMode">
        <see cref="T:System.Web.UI.WebControls.ListViewCancelMode" /> 值之一，表示用户取消了何种操作。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewCancelEventArgs.CancelMode">
      <summary>获取单击“取消”按钮时 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件所处的数据输入模式。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListViewCancelMode" /> 值之一。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewCancelEventArgs.ItemIndex">
      <summary>获取项的索引，该项包含引发事件的“取消”按钮。</summary>
      <returns>包含引发事件的“取消”按钮的项从零开始的索引。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewCancelMode">
      <summary>确定在单击 <see cref="T:System.Web.UI.WebControls.ListView" /> 项中的“取消”按钮时用户正在执行的操作的类型。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ListViewCancelMode.CancelingEdit">
      <summary>用户取消了一个编辑操作。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ListViewCancelMode.CancelingInsert">
      <summary>用户取消了一个插入操作。</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewCommandEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.ItemCommand" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewCommandEventArgs.#ctor(System.Web.UI.WebControls.ListViewItem,System.Object,System.Web.UI.WebControls.CommandEventArgs)">
      <summary>使用指定的命令源和事件参数初始化 <see cref="T:System.Web.UI.WebControls.ListViewCommandEventArgs" /> 类的新实例。</summary>
      <param name="item">为其发出命令的 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的项。</param>
      <param name="commandSource">命令源。</param>
      <param name="originalArgs">事件数据。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewCommandEventArgs.CommandSource">
      <summary>获取命令源。</summary>
      <returns>命令源。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewCommandEventArgs.Handled">
      <summary>获取或设置指示控件是否已处理事件的值。</summary>
      <returns>如果数据绑定事件代码跳过或已完成，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewCommandEventArgs.Item">
      <summary>获取对其发出命令的数据项。</summary>
      <returns>对其发出命令的 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的数据项。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewDataItem">
      <summary>表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的单个数据项。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewDataItem.#ctor(System.Int32,System.Int32)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> 类的新实例。</summary>
      <param name="dataItemIndex">基础数据源对象中 <see cref="P:System.Web.UI.WebControls.ListViewDataItem.DataItem" /> 的索引。</param>
      <param name="displayIndex">数据项在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中显示的位置。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDataItem.DataItem">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 对象绑定到的基础数据对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 对象绑定到的基础数据对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDataItem.DataItemIndex">
      <summary>获取基础数据源对象中 <see cref="P:System.Web.UI.WebControls.ListViewDataItem.DataItem" /> 的索引。</summary>
      <returns>基础数据源对象中的 <see cref="P:System.Web.UI.WebControls.ListViewDataItem.DataItem" /> 的从零开始的索引。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex">
      <summary>获取数据项在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中显示的位置。</summary>
      <returns>在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中显示的数据项从零开始的位置。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewDataItem.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>确定是否将事件沿页面的 ASP.NET 服务器控件层次结构向上传递。</summary>
      <returns>如果事件已发送到父控件，则为 true；否则为 false。</returns>
      <param name="source">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewDeletedEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewDeletedEventArgs.#ctor(System.Int32,System.Exception)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewDeletedEventArgs" /> 类的新实例。</summary>
      <param name="affectedRows">受删除操作影响的行数。</param>
      <param name="exception">执行删除操作时引发的异常（如果有）。 如果未引发任何异常，则使用 null。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeletedEventArgs.AffectedRows">
      <summary>获取受删除操作影响的行数。</summary>
      <returns>受删除操作影响的行数。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeletedEventArgs.Exception">
      <summary>获取在删除操作过程中引发的异常（如果有）。</summary>
      <returns>删除操作过程中引发的异常（如果有）；否则为 null。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeletedEventArgs.ExceptionHandled">
      <summary>获取或设置一个值，该值指示是否在事件处理程序中处理了删除操作过程中引发的异常。</summary>
      <returns>如果异常已在事件处理程序中得到处理，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeletedEventArgs.Keys">
      <summary>获取已删除项的键。</summary>
      <returns>已删除项的键。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeletedEventArgs.Values">
      <summary>获取已删除项的非键字段值。</summary>
      <returns>已删除项的非键字段值。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewDeleteEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewDeleteEventArgs.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewDeleteEventArgs" /> 类的新实例。</summary>
      <param name="itemIndex">项的索引，该项包含引发事件的“删除”按钮。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeleteEventArgs.ItemIndex">
      <summary>获取要删除的项的索引。</summary>
      <returns>要删除的项的索引（从零开始）。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeleteEventArgs.Keys">
      <summary>获取一个字段名称/值对字典，这些名称/值对表示要删除的项的主键。</summary>
      <returns>包含名称/值对的对象，这些名称/值对表示要删除的项的主键。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeleteEventArgs.Values">
      <summary>获取要删除的项中非键字段名称/值对的字典。</summary>
      <returns>包含要删除的项的非键字段名称/值对的对象。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewEditEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.ItemEditing" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewEditEventArgs.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewEditEventArgs" /> 类的新实例。</summary>
      <param name="newEditIndex">要编辑的项的索引。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewEditEventArgs.NewEditIndex">
      <summary>获取要编辑的项的索引。</summary>
      <returns>要编辑的项的索引。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewInsertedEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewInsertedEventArgs.#ctor(System.Int32,System.Exception)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" /> 类的新实例。</summary>
      <param name="affectedRows">受插入操作影响的行数。</param>
      <param name="exception">执行插入操作时引发的异常（如果有）。 如果未引发异常，则将 null 用于此参数。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows">
      <summary>获取受插入操作影响的行数。</summary>
      <returns>受插入操作影响的行数。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception">
      <summary>获取插入操作过程中引发的异常（如果引发）。</summary>
      <returns>在插入操作过程中引发的异常，如果未引发异常，则为 null。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled">
      <summary>获取或设置一个值，该值指示在插入操作过程中所引发的异常是否已在事件处理程序中得到处理。</summary>
      <returns>如果异常已在事件处理程序中得到处理，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode">
      <summary>获取或设置一个值，该值指示是否为 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板内的控件保留用户输入值。</summary>
      <returns>如果为 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板内的控件保留用户输入值，则为 true；如果用该控件的默认值替代用户输入值，则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values">
      <summary>获取插入记录的字段名称/值对。</summary>
      <returns>插入记录的字段名称/值对。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewInsertEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.ItemInserting" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewInsertEventArgs.#ctor(System.Web.UI.WebControls.ListViewItem)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewInsertEventArgs" /> 类的新实例。</summary>
      <param name="item">要插入数据源中的数据项。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertEventArgs.Item">
      <summary>获取一个 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 对象，它表示要插入的数据项。</summary>
      <returns>要插入的数据项。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertEventArgs.Values">
      <summary>获取要插入的记录的值。</summary>
      <returns>要插入的记录的值。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewItem">
      <summary>表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的单个项。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewItem.#ctor(System.Web.UI.WebControls.ListViewItemType)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 类的新实例。</summary>
      <param name="itemType">
        <see cref="T:System.Web.UI.WebControls.ListViewItemType" /> 枚举值之一。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewItem.DataItem">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 对象绑定到的基础数据对象。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 对象绑定到的基础数据对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewItem.DataItemIndex">
      <summary>获取绑定到 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 控件的数据项的索引。</summary>
      <returns>绑定到 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 控件的数据项的索引。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewItem.DisplayIndex">
      <summary>获取数据项在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中显示的位置。</summary>
      <returns>数据项在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中显示的位置。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewItem.ItemType">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 对象的项类型。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListViewItemType" /> 值之一。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewItem.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>确定是否将事件沿页面的 ASP.NET 服务器控件层次结构向上传递。</summary>
      <returns>如果事件已被取消，则为 true；否则为 false。</returns>
      <param name="source">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewItemEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.ItemCreated" /> 和 <see cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewItemEventArgs.#ctor(System.Web.UI.WebControls.ListViewItem)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewItemEventArgs" /> 类的新实例。</summary>
      <param name="item">创建或绑定到数据的项。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewItemEventArgs.Item">
      <summary>获取创建或绑定到数据的项。</summary>
      <returns>创建或绑定到数据的项。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewItemType">
      <summary>指定 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中某个项的功能。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ListViewItemType.DataItem">
      <summary>
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的数据项。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ListViewItemType.EmptyItem">
      <summary>
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的空项。 当 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件没有要显示的记录，或 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的某个组没有要显示的记录时，将显示空项。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ListViewItemType.InsertItem">
      <summary>
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的插入项。</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewPagedDataSource">
      <summary>封装 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的与分页相关的属性。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewPagedDataSource.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewPagedDataSource" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging">
      <summary>获取或设置一个值，该值指示是否已启用基于服务器的分页。</summary>
      <returns>如果启用了基于服务器的分页，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo(System.Array,System.Int32)">
      <summary>从 <see cref="T:System.Array" /> 中的指定索引位置开始，将数据源中的所有项复制到指定的 <see cref="T:System.Array" />对象。</summary>
      <param name="array">从零开始的 <see cref="T:System.Array" />对象，它接收来自数据源的复制项。</param>
      <param name="index">指定的 <see cref="T:System.Array" /> 对象中接收复制内容的第一个位置。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.Count">
      <summary>获取要从数据源使用的当前页的项数。</summary>
      <returns>要从数据源使用的当前页的项数。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource">
      <summary>获取或设置数据源。</summary>
      <returns>实现表示数据源的 <see cref="T:System.Collections.IEnumerable" /> 的对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount">
      <summary>获取数据源中的项数。</summary>
      <returns>数据源中的项数。</returns>
      <exception cref="T:System.InvalidOperationException">数据源对象不实现 <see cref="T:System.Collections.ICollection" /> 接口。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator">
      <summary>返回一个实现 <see cref="T:System.Collections.IEnumerator" /> 的对象，该对象包含数据源中的所有项。</summary>
      <returns>包含数据源中所有项的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>返回一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> 对象，它表示用于绑定数据的属性。</summary>
      <returns>表示用于绑定数据的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />对象。</returns>
      <param name="listAccessors">要在集合中查找的可绑定的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象的数组。 它可以是 null。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewPagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>返回列表的名称。 此方法不适用于此类。</summary>
      <returns>所有情况下均为空字符串。</returns>
      <param name="listAccessors">对其返回此列表名称的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象的数组。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.ListViewPagedDataSource" /> 对象是否为只读。</summary>
      <returns>所有情况下均为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled">
      <summary>获取一个值，该值指示是否已启用基于服务器的分页。</summary>
      <returns>如果使用 <see cref="P:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging" /> 属性指示了基于服务器的分页，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized">
      <summary>获取一个值，该值指示是否同步对数据源的访问（线程安全）。</summary>
      <returns>所有情况下均为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows">
      <summary>获取或设置要在单页上显示的最大项数。</summary>
      <returns>要在单页上显示的最大项数。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex">
      <summary>获取或设置页面中显示的首条记录的索引。</summary>
      <returns>页面中显示的首条记录的索引。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot">
      <summary>获取可用于同步对集合的访问的对象。</summary>
      <returns>可用于同步集合访问的对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount">
      <summary>获取或设置使用基于服务器的分页时数据源中的总项数。</summary>
      <returns>使用基于服务器的分页时数据源中的总项数。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewSelectEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewSelectEventArgs.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewSelectEventArgs" /> 类的新实例。</summary>
      <param name="newSelectedIndex">要在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中选择的新项的索引。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewSelectEventArgs.NewSelectedIndex">
      <summary>获取或设置要在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中选择的新项的索引。</summary>
      <returns>要在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中选择的新项的索引。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewSortEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.Sorting" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewSortEventArgs.#ctor(System.String,System.Web.UI.WebControls.SortDirection)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewSortEventArgs" /> 类的新实例。</summary>
      <param name="sortExpression">用于对控件中的项进行排序的排序表达式。</param>
      <param name="sortDirection">指示控件中项的排序方向的 <see cref="T:System.Web.UI.WebControls.SortDirection" /> 值。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewSortEventArgs.SortDirection">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的排序方向。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.SortDirection" /> 值之一。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewSortEventArgs.SortExpression">
      <summary>获取或设置用于对 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的项进行排序的表达式。</summary>
      <returns>用于对 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的项进行排序的表达式。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs" /> 类的新实例。</summary>
      <param name="affectedRows">受更新操作影响的行数。</param>
      <param name="exception">执行更新操作时引发的异常（如果有）。 如果未引发任何异常，则使用 null。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows">
      <summary>获取受更新操作影响的行数。</summary>
      <returns>受更新操作影响的行数。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception">
      <summary>获取更新操作过程中引发的异常（如果有）。</summary>
      <returns>更新操作过程中引发的异常（如果有）；如果未引发任何异常，则为 null。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled">
      <summary>获取或设置一个值，该值指示是否在事件期间处理了更新操作过程中引发的异常。</summary>
      <returns>如果异常已在事件处理程序中得到处理，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode">
      <summary>获取或设置一个值，该值指示在更新操作之后 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件是否应该继续处于编辑模式。</summary>
      <returns>如果在更新操作之后该控件应继续处于编辑模式，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues">
      <summary>获取包含已更新项的新值的字典。</summary>
      <returns>已更新项的新值。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues">
      <summary>获取一个包含已更新项的原始值的字典。</summary>
      <returns>已更新项的原始值。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewUpdateEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewUpdateEventArgs.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewUpdateEventArgs" /> 类的新实例。</summary>
      <param name="itemIndex">要更新的项的索引。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdateEventArgs.ItemIndex">
      <summary>获取要更新的数据项的索引。</summary>
      <returns>要更新的数据项的索引。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys">
      <summary>获取一个字段名称/值对字典，这些名称/值对表示要更新的项的键。</summary>
      <returns>字段名称/值对，表示要更新的项的键。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues">
      <summary>获取一个字典，其中包含要更新的项的修改后的值。</summary>
      <returns>要更新的项的修改后的值。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues">
      <summary>获取一个字典，其中包含要更新的项的原始值。</summary>
      <returns>要更新的项的原始值。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.NextPreviousPagerField">
      <summary>表示一个字段，该字段显示 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件中使用户能够分页浏览数据的导航控件。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ButtonCssClass">
      <summary>获取或设置用于在浏览器上呈现页导航字段的按钮的级联样式表 (CSS) 类。</summary>
      <returns>用于在客户端上呈现页导航字段的按钮的 CSS 类。 默认值为空字符串，表示尚未设置 <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.ButtonCssClass" /> 属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ButtonType">
      <summary>获取或设置要在页导航字段中显示的按钮类型。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ButtonType" /> 值之一。 默认值为 ButtonType.Link。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.ButtonType" /> 属性的值并非 <see cref="T:System.Web.UI.WebControls.ButtonType" /> 值之一。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.CopyProperties(System.Web.UI.WebControls.DataPagerField)">
      <summary>将当前 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象的属性复制到指定的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象。</summary>
      <param name="newField">当前 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 的属性将复制到的 <see cref="T:System.Web.UI.WebControls.DataPagerField" />。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.CreateDataPagers(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>为页导航字段对象创建用户界面 (UI) 控件并将它们添加到指定的容器。</summary>
      <param name="container">用来存储控件的容器。</param>
      <param name="startRowIndex">页面中第一条记录的索引。</param>
      <param name="maximumRows">单个页面上的最大项数。</param>
      <param name="totalRowCount">总项数。</param>
      <param name="fieldIndex">数据页导航字段在 <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> 集合中的索引。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.CreateField">
      <summary>创建并返回 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 类的新实例。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 类的新实例。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.Equals(System.Object)">
      <summary>确定指定的对象是否等于当前的 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象。</summary>
      <returns>如果指定的对象等于当前的 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象，则为 true；否则为 false。</returns>
      <param name="o">要与当前 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 实例进行比较的对象。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.FirstPageImageUrl">
      <summary>获取或设置为第一页按钮显示的图像的 URL。</summary>
      <returns>为第一页按钮显示的图像的 URL。 默认值为空字符串 ("")，表示尚未设置 <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.FirstPageImageUrl" /> 属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.FirstPageText">
      <summary>获取或设置为第一页按钮显示的文本。</summary>
      <returns>为第一页按钮显示的文本。 默认为“First”。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.GetHashCode">
      <summary>用于 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 类的一个哈希函数。</summary>
      <returns>当前 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象的哈希代码。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.HandleEvent(System.Web.UI.WebControls.CommandEventArgs)">
      <summary>处理 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 控件中发生的事件并执行适当的操作。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.LastPageImageUrl">
      <summary>获取或设置为 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象中的最后一页按钮显示的图像的 URL。</summary>
      <returns>为 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象中的最后一页按钮显示的图像的 URL。 默认值为空字符串 ("")，表示尚未设置 <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.LastPageImageUrl" /> 属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.LastPageText">
      <summary>获取或设置为最后一页按钮显示的文本。</summary>
      <returns>为最后一页按钮显示的文本。 默认为“Last”。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.NextPageImageUrl">
      <summary>获取或设置为 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象中的下一页按钮显示的图像的 URL。</summary>
      <returns>为 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象中的下一页按钮显示的图像的 URL。 默认值为空字符串 ("")，表示尚未设置 <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.NextPageImageUrl" /> 属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.NextPageText">
      <summary>获取或设置为下一页按钮显示的文本。</summary>
      <returns>为下一页按钮显示的文本。 默认为“Next”。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.PreviousPageImageUrl">
      <summary>获取或设置为 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象中的上一页按钮显示的图像的 URL。</summary>
      <returns>为 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象中的上一页按钮显示的图像的 URL。 默认值为空字符串 ("")，表示尚未设置 <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.PreviousPageImageUrl" /> 属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.PreviousPageText">
      <summary>获取或设置为上一页按钮显示的文本。</summary>
      <returns>为上一页按钮显示的文本。 默认是“Previous”。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.RenderDisabledButtonsAsLabels">
      <summary>获取或设置一个值，该值指示禁用的按钮是否由 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象呈现为 <see cref="T:System.Web.UI.WebControls.Label" /> 控件。</summary>
      <returns>如果禁用的按钮呈现为 <see cref="T:System.Web.UI.WebControls.Label" /> 控件，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.RenderNonBreakingSpacesBetweenControls">
      <summary>获取或设置一个值，该值指示是否在控件之间呈现非换行空格。</summary>
      <returns>如果在控件之间呈现非换行空格，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ShowFirstPageButton">
      <summary>获取或设置一个值，该值指示第一页按钮是否显示在 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象中。</summary>
      <returns>如果第一页按钮显示在 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象中，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ShowLastPageButton">
      <summary>获取或设置一个值，该值指示最后一页按钮是否显示在 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象中。</summary>
      <returns>如果最后一页按钮显示在 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象中，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ShowNextPageButton">
      <summary>获取或设置一个值，该值指示下一页按钮是否显示在 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象中。</summary>
      <returns>如果下一页按钮显示在 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象中，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ShowPreviousPageButton">
      <summary>获取或设置一个值，该值指示上一页按钮是否显示在 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象中。</summary>
      <returns>如果上一页按钮显示在 <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> 对象中，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.NumericPagerField">
      <summary>表示一个 <see cref="T:System.Web.UI.WebControls.DataPager" /> 字段，该字段可使用户按页码选择页。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.ButtonCount">
      <summary>获取或设置要在 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 对象中显示的按钮的数目。</summary>
      <returns>要在 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 对象中显示的按钮的数目。 默认值为 5。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Web.UI.WebControls.NumericPagerField.ButtonCount" /> 属性被设置为一个小于 1 的值。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.ButtonType">
      <summary>获取或设置要在页导航字段中显示的按钮类型。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ButtonType" /> 值之一。 默认值为 <see cref="F:System.Web.UI.WebControls.ButtonType.Link" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Web.UI.WebControls.NumericPagerField.ButtonType" /> 属性的值并非 <see cref="T:System.Web.UI.WebControls.ButtonType" /> 值之一。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.CopyProperties(System.Web.UI.WebControls.DataPagerField)">
      <summary>将当前 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 对象的属性复制到指定的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象。</summary>
      <param name="newField">将当前 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 对象的属性复制到的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.CreateDataPagers(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>为页导航字段对象创建用户界面 (UI) 控件并将它们添加到指定的容器。</summary>
      <param name="container">用来存储控件的容器。</param>
      <param name="startRowIndex">页面中第一条记录的索引。</param>
      <param name="maximumRows">单个页面上的最大项数。</param>
      <param name="totalRowCount">总项数。</param>
      <param name="fieldIndex">数据页导航字段在 <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> 集合中的索引。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.CreateField">
      <summary>创建并返回 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 类的新实例。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 类的新实例。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.CurrentPageLabelCssClass">
      <summary>获取或设置用于设置当前页码样式的级联样式表 (CSS) 类。</summary>
      <returns>用于设置浏览器中当前页码的样式的 CSS 类。 默认值为空字符串 ("")，表示没有设置 <see cref="P:System.Web.UI.WebControls.NumericPagerField.CurrentPageLabelCssClass" /> 属性。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.Equals(System.Object)">
      <summary>确定指定的对象是否等于当前的 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 对象。</summary>
      <returns>如果指定的对象等于当前的 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 对象，则为 true；否则为 false。</returns>
      <param name="o">要与当前 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 实例进行比较的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.GetHashCode">
      <summary>用于 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 类的一个哈希函数。</summary>
      <returns>当前 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 对象的哈希代码。 有关更多信息，请参见 <see cref="M:System.Object.GetHashCode" /> 类。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.HandleEvent(System.Web.UI.WebControls.CommandEventArgs)">
      <summary>处理 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 对象中发生的事件并执行适当的操作。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.NextPageImageUrl">
      <summary>获取或设置为 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 对象中的下一页按钮显示的图像的 URL。</summary>
      <returns>为 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 对象中的下一页按钮显示的图像的 URL。 默认值为空字符串 ("")，表示没有设置 <see cref="P:System.Web.UI.WebControls.NumericPagerField.NextPageImageUrl" /> 属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.NextPageText">
      <summary>获取或设置为下一页按钮显示的文本。</summary>
      <returns>为下一页按钮显示的文本。 默认值为“…”。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.NextPreviousButtonCssClass">
      <summary>获取或设置一个级联样式表 (CSS) 类，用于为页导航字段的下一页按钮和上一页按钮设置样式。</summary>
      <returns>用于为页导航字段的下一页按钮和上一页按钮设置样式的 CSS 类。 默认值为空字符串 ("")，表示没有设置 <see cref="P:System.Web.UI.WebControls.NumericPagerField.NextPreviousButtonCssClass" /> 属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.NumericButtonCssClass">
      <summary>获取或设置一个级联样式表 (CSS) 类，用于为页导航字段的页码按钮设置样式。</summary>
      <returns>用于为页导航字段的页码按钮设置样式的 CSS 类。 默认值为空字符串 ("")，表示没有设置 <see cref="P:System.Web.UI.WebControls.NumericPagerField.NumericButtonCssClass" /> 属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.PreviousPageImageUrl">
      <summary>获取或设置为 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 对象中的上一页按钮显示的图像的 URL。</summary>
      <returns>为 <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> 对象中的上一页按钮显示的图像的 URL。 默认值为空字符串 ("")，表示没有设置 <see cref="P:System.Web.UI.WebControls.NumericPagerField.PreviousPageImageUrl" /> 属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.PreviousPageText">
      <summary>获取或设置为上一页按钮显示的文本。</summary>
      <returns>为上一页按钮显示的文本。 默认值为“…”。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.RenderNonBreakingSpacesBetweenControls">
      <summary>获取或设置一个值，该值指示是否将在控件之间呈现非换行空格。</summary>
      <returns>如果在控件之间呈现非换行空格，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.PageEventArgs">
      <summary>为实现 <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> 接口的类的 <see cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.PageEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.PageEventArgs" /> 类的新实例。</summary>
      <param name="startRowIndex">数据页中第一条记录的索引。</param>
      <param name="maximumRows">要在每个数据页上显示的最大项数。</param>
      <param name="totalRowCount">总记录数。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.PageEventArgs.MaximumRows">
      <summary>获取要在每页上显示的最大记录数。</summary>
      <returns>要在每页上显示的最大记录数。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.PageEventArgs.StartRowIndex">
      <summary>获取页面上的第一条记录的索引。</summary>
      <returns>页面上第一条记录的索引。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.PageEventArgs.TotalRowCount">
      <summary>获取基础数据源中的总记录数。</summary>
      <returns>基础数据源中的总记录数。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.PagePropertiesChangingEventArgs">
      <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.PagePropertiesChangingEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.PagePropertiesChangingEventArgs" /> 类的新实例。</summary>
      <param name="startRowIndex">页面的第一项的索引。</param>
      <param name="maximumRows">要在每个数据页上显示的最大项数。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.PagePropertiesChangingEventArgs.MaximumRows">
      <summary>获取要在每个数据页上显示的最大项数。</summary>
      <returns>要在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件中的每个数据页上显示的最大项数。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.PagePropertiesChangingEventArgs.StartRowIndex">
      <summary>获取页面的第一项的索引。</summary>
      <returns>要在 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的数据页上显示的第一项的索引。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.QueryableDataSource">
      <summary>表示使用 LINQ 查询获取数据的数据源对象的基类。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.CreateQueryableView">
      <summary>获取或设置与此 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象。</summary>
      <returns>与 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件关联的默认数据源视图。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.GetView(System.String)">
      <summary>获取与 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 对象关联的数据源视图。</summary>
      <returns>与 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件关联的默认数据源视图。</returns>
      <param name="viewName">要获取数据源视图的名称。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.GetViewNames">
      <summary>获取名称的集合，这些名称表示与 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件关联的视图。</summary>
      <returns>名称的集合，这些名称表示与 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件关联的视图。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.LoadViewState(System.Object)">
      <summary>加载必须保持的 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件中的值的状态。</summary>
      <param name="savedState">一个对象，它表示 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件的状态。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.OnInit(System.EventArgs)">
      <summary>使用事件数据初始化 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 对象。</summary>
      <param name="e">事件数据</param>
    </member>
    <member name="E:System.Web.UI.WebControls.QueryableDataSource.QueryCreated">
      <summary>向数据源控件添加查询或从中删除查询时发生。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.RaiseViewChanged">
      <summary>调用 <see cref="T:System.Web.UI.DataSourceView" /> 类的 <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> 方法。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.SaveViewState">
      <summary>保存 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件的当前视图状态。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件的已保存状态。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.TrackViewState">
      <summary>跟踪 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件的视图状态更改，以使这些更改可以存储在该控件的 <see cref="T:System.Web.UI.StateBag" /> 对象中。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.UpdateParameterVales">
      <summary>更新自上次请求以来发生更改的参数值。</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.QueryableDataSourceEditData">
      <summary>表示可从 <see cref="T:System.Web.UI.WebControls.QueryableDataSource`1" /> 对象中编辑的数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceEditData.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceEditData" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceEditData.NewDataObject">
      <summary>获取或设置所编辑数据对象的值。</summary>
      <returns>所编辑数据对象的值。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceEditData.OriginalDataObject">
      <summary>获取或设置要更改的数据对象在发生更改之前的值。</summary>
      <returns>要更改的数据对象在发生更改之前的值。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.QueryableDataSourceView">
      <summary>支持 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件并提供一个接口，使数据绑定控件可以执行 LINQ 数据操作。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.#ctor(System.Web.UI.DataSourceControl,System.String,System.Web.HttpContext)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 类的新实例。</summary>
      <param name="owner">与 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象关联的数据源控件。</param>
      <param name="viewName">数据源视图在拥有它的数据源控件的范围中的唯一名称。</param>
      <param name="context">当前的 <see cref="T:System.Web.HttpContext" /> 实例。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.AutoGenerateOrderByClause">
      <summary>获取或设置一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象是否创建动态 OrderBy 子句。</summary>
      <returns>如果 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象动态创建 OrderBy 子句，则为 true ；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.AutoGenerateWhereClause">
      <summary>获取或设置一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象是否创建动态 Where 子句。</summary>
      <returns>如果支持动态创建 Where 子句，则为 true ；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.AutoPage">
      <summary>获取或设置一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象默认情况下是否支持分页。</summary>
      <returns>如果支持分页，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.AutoSort">
      <summary>获取或设置一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象默认情况下是否支持排序。</summary>
      <returns>如果支持排序，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.BuildDeleteObject(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.Generic.IDictionary{System.String,System.Exception})">
      <summary>创建要用于删除操作的对象。</summary>
      <returns>要用于删除操作的对象。</returns>
      <param name="keys">要删除的行的键。</param>
      <param name="oldValues">为检测数据冲突而计算的行值。</param>
      <param name="validationErrors">当 CRUD 操作失败时，在数据源中创建的转换错误的列表。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.BuildInsertObject(System.Collections.IDictionary,System.Collections.Generic.IDictionary{System.String,System.Exception})">
      <summary>通过使用要插入的值和要在操作失败时显示的错误消息，创建要用于插入操作的对象。</summary>
      <returns>要用于插入操作的对象。</returns>
      <param name="values">要插入数据源的行的值。</param>
      <param name="validationErrors">当 CRUD 操作失败时，由系统创建的转换错误的列表。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.BuildQuery(System.Web.UI.DataSourceSelectArguments)">
      <summary>使用数据源的 Select 参数创建一个 Select 查询表达式。</summary>
      <returns>数据对象的列表。</returns>
      <param name="arguments">用于请求对数据执行基本数据检索操作以外的操作的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.BuildUpdateObjects(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.Generic.IDictionary{System.String,System.Exception})">
      <summary>通过使用指定值创建要用于更新操作的对象。</summary>
      <returns>要用于更新操作的对象。</returns>
      <param name="keys">要更新的行的键。</param>
      <param name="values">要在数据源中更新的行的值。</param>
      <param name="oldValues">为检测数据冲突而计算的行值。</param>
      <param name="validationErrors">当 CRUD 操作失败时，由系统创建的转换错误的列表。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.CanDelete">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象是否支持删除操作。</summary>
      <returns>如果支持删除操作，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.CanInsert">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象是否支持插入操作。</summary>
      <returns>如果支持插入操作，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.CanPage">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象是否支持分页。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.CanRetrieveTotalRowCount">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象是否支持检索总数据行数以及检索数据。</summary>
      <returns>如果对象支持检索总数据行数，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.CanSort">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象是否支持检索的数据的排序视图。</summary>
      <returns>如果对象支持检索的数据源的排序视图，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.CanUpdate">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象是否支持更新操作。</summary>
      <returns>如果支持更新操作，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ClearOriginalValues">
      <summary>清除原始值。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.CreateQueryContext(System.Web.UI.DataSourceSelectArguments)">
      <summary>创建查询上下文对象的实例，该对象包含计算所得的参数集合。</summary>
      <returns>查询上下文对象的实例，其中包含计算所得的参数集合。</returns>
      <param name="arguments">用于请求对数据执行基本数据检索操作以外的操作的对象集合。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>执行删除操作。</summary>
      <returns>已从数据源中删除的行数。</returns>
      <param name="keys">要删除的行的键。</param>
      <param name="oldValues">为检测数据冲突而计算的行值。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.DeleteObject(System.Object)">
      <summary>从表中删除数据对象。</summary>
      <returns>已从数据对象中删除的行数。</returns>
      <param name="oldEntity">要删除的数据对象。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.DeleteParameters">
      <summary>获取集合，该集合包含在删除操作过程中所使用的参数。</summary>
      <returns>一个集合，其中包含由 <see cref="M:System.Web.UI.WebControls.QueryableDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法使用的参数。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.EntityType">
      <summary>获取要用于 CUD 操作的数据对象的类型。</summary>
      <returns>要用于 CUD 操作的数据对象类型的实例。</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.QueryableDataSourceView.EventSelected">
      <summary>指定导致数据检索操作完成的事件是否已发生。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.QueryableDataSourceView.EventSelecting">
      <summary>指定在数据检索操作之前发生的事件是否已发生。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>通过使用指定值，对 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象所表示的数据项执行删除操作。</summary>
      <returns>已从数据源中删除的对象数或行数。</returns>
      <param name="keys">要删除的行的键。</param>
      <param name="oldValues">为检测数据冲突而计算的行值。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
      <summary>通过使用指定值，对 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象所表示的数据项执行插入操作。</summary>
      <returns>已插入数据源中的对象数或行数。</returns>
      <param name="values">要插入数据源的行的值。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecutePaging(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)">
      <summary>使用来自 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 对象的 <see cref="T:System.Web.UI.WebControls.QueryContext" /> 对象执行分页。</summary>
      <returns>数据对象中数据的页数。</returns>
      <param name="source">要使用的数据源。</param>
      <param name="context">要使用的数据上下文。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecuteQuery(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)">
      <summary>对 <see cref="T:System.Linq.IQueryable`1" /> 对象执行查询、排序或分页操作。</summary>
      <returns>其中包含查询、排序或分页结果的数据对象。</returns>
      <param name="source">要使用的数据源对象。</param>
      <param name="context">要使用的数据上下文。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecuteQueryExpressions(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)">
      <summary>通过使用 <see cref="T:System.Linq.IQueryable" /> 对象和 <see cref="T:System.Web.UI.WebControls.QueryContext" /> 对象执行查询表达式。</summary>
      <returns>其中包含查询表达式的结果的数据源。</returns>
      <param name="source">要使用的数据源。</param>
      <param name="context">要使用的数据上下文。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
      <summary>执行数据检索操作。</summary>
      <returns>所请求的操作的结果。</returns>
      <param name="arguments">用于请求对数据执行基本数据检索操作以外的操作的对象集合。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecuteSorting(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)">
      <summary>执行排序操作。</summary>
      <returns>已排序的数据对象。</returns>
      <param name="source">要使用的数据源。</param>
      <param name="context">要使用的数据上下文。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>执行更新操作。</summary>
      <returns>已在数据源中更新的行数。</returns>
      <param name="keys">要更新的行的键。</param>
      <param name="values">要更新的行的值。</param>
      <param name="oldValues">为检测数据冲突而计算的行值。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.GetOriginalValues(System.Collections.IDictionary)">
      <summary>检索在 Select 操作过程中存储的指定键的原始值。</summary>
      <returns>在 Select 操作过程中存储的指定键的原始值。</returns>
      <param name="keys">要更新的行的键。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.GetSource(System.Web.UI.WebControls.QueryContext)">
      <summary>基于查询上下文获取数据源视图的初始 <see cref="T:System.Linq.IQueryable" /> 对象。</summary>
      <returns>数据源视图的初始 <see cref="T:System.Linq.IQueryable" /> 对象。</returns>
      <param name="context">要应用查询的数据上下文。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy">
      <summary>获取或设置一个或多个属性名称，用于在选择操作过程中对数据进行分组。</summary>
      <returns>一个用于创建 GroupBy 表达式的值。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.GroupByParameters">
      <summary>获取一个参数集合，其中的参数值用于在选择操作过程中创建 GroupBy 子句。</summary>
      <returns>用于创建 GroupBy 子句的参数的集合。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.HandleValidationErrors(System.Collections.Generic.IDictionary{System.String,System.Exception},System.Web.UI.DataSourceOperation)">
      <summary>当 CRUD 操作的数据对象生成过程失败时，由执行 CRUD 操作的方法调用。</summary>
      <param name="errors">在 CRUD 操作过程中所引发的任何特定于字段的异常的类型。</param>
      <param name="operation">引发异常的数据操作。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.Insert(System.Collections.IDictionary)">
      <summary>对 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象所表示的数据项执行异步插入操作。</summary>
      <returns>已插入到数据源中的行数。</returns>
      <param name="values">要插入的行的值。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.InsertObject(System.Object)">
      <summary>将数据对象插入 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象。</summary>
      <returns>已插入数据源视图中的对象的数量。</returns>
      <param name="newEntity">要插入的数据对象。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.InsertParameters">
      <summary>获取在插入操作过程中使用的参数的集合。</summary>
      <returns>一个集合，其中包含在插入操作过程中使用的参数。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.IsTrackingViewState">
      <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象是否将更改保存到其视图状态。</summary>
      <returns>如果数据源视图被标记为保存其状态，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.LoadViewState(System.Object)">
      <summary>还原数据源视图的以前保存的视图状态。</summary>
      <param name="savedState">要还原的 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 控件状态。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.OnQueryCreated(System.Web.UI.WebControls.QueryCreatedEventArgs)">
      <summary>在 <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> 控件创建一个 <see cref="T:System.Linq.IQueryable" /> 对象后引发 <see cref="E:System.Web.UI.WebControls.QueryableDataSourceView.QueryCreated" /> 事件。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.OnQueryParametersChanged(System.Object,System.EventArgs)">
      <summary>调用 <see cref="M:System.Web.UI.WebControls.QueryableDataSourceView.RaiseViewChanged" /> 方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">事件数据。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.OrderBy">
      <summary>获取或设置一个或多个属性名称，这些属性用于在选择操作过程中对数据进行排序。</summary>
      <returns>用于创建 OrderBy 子句的值。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.OrderByParameters">
      <summary>获取用于在选择操作过程中对数据进行排序的参数的集合。</summary>
      <returns>用于创建 OrderBy 子句的参数。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.OrderGroupsBy">
      <summary>获取或设置属性的名称，这些属性用于在选择操作过程中对分组的数据进行排序。</summary>
      <returns>用于创建 OrderGroupsBy 子句的值。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.OrderGroupsByParameters">
      <summary>获取用于创建 OrderGroupsBy 子句的参数的集合。</summary>
      <returns>用于创建 OrderGroupsBy 子句的参数。</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.QueryableDataSourceView.QueryCreated">
      <summary>在创建查询时发生。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.RaiseViewChanged">
      <summary>调用 <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> 方法。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.SaveViewState">
      <summary>保存自将页传递到服务器时起 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 对象的视图状态更改。</summary>
      <returns>包含 <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> 控件的视图状态更改的对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew">
      <summary>获取或设置属性和计算值，它们包含在检索到的数据中。</summary>
      <returns>用于创建 Select 命令的值。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.SelectNewParameters">
      <summary>获取在数据检索操作过程中使用的参数的集合。</summary>
      <returns>用于创建 Select 命令的参数。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.StoreOriginalValues(System.Collections.IList)">
      <summary>将来自 Select 操作的原始值存储在控件的视图状态中。</summary>
      <param name="results">操作的结果。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.StoreOriginalValues(System.Collections.IList,System.Func{System.ComponentModel.PropertyDescriptor,System.Boolean})">
      <summary>在启用了删除或更新操作时，将来自选择操作的原始值存储在控件的视图状态中。</summary>
      <param name="results">操作的结果。</param>
      <param name="include">用于确定要包括的属性的方法。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>当由类实现时，获取一个值，该值指示服务器控件是否正在跟踪其视图状态更改。</summary>
      <returns>如果数据源视图被标记为保存其状态，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>当由类实现时，加载服务器控件以前保存的控件视图状态。</summary>
      <param name="state">数据源控件的状态。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#SaveViewState">
      <summary>当由类实现时，将服务器控件的视图状态更改保存到对象。</summary>
      <returns>其中包含服务器控件的视图状态更改的对象。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#TrackViewState">
      <summary>当由类实现时，获取一个值，该值指示服务器控件是否正在跟踪其视图状态更改。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.TrackViewState">
      <summary>导致跟踪对服务器控件所做的视图状态更改，以便将这些更改存储到服务器控件的状态中。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>执行更新操作。</summary>
      <returns>已在数据源中更新的行数。</returns>
      <param name="keys">要更新的行的键。</param>
      <param name="values">要更新的行的值。</param>
      <param name="oldValues">为检测数据冲突而计算的行值。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.UpdateObject(System.Object,System.Object)">
      <summary>更新数据对象。</summary>
      <returns>已在数据对象中更新的行数。</returns>
      <param name="oldEntity">要更新的对象。</param>
      <param name="newEntity">已更新的对象。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.UpdateParameters">
      <summary>获取在更新操作过程中使用的参数的集合。</summary>
      <returns>在更新操作过程中使用的参数的集合。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.Where">
      <summary>获取或设置一个值，该值指定要将行包含在检索到的数据中所必须满足的条件。</summary>
      <returns>用于创建 Where 子句的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.WhereParameters">
      <summary>获取用于创建 Where 子句的参数的集合。</summary>
      <returns>用于创建 Where 子句的参数的集合。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.QueryContext">
      <summary>表示用于查询数据源的参数的列表。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Specialized.IOrderedDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.UI.DataSourceSelectArguments)">
      <summary>使用 <see cref="P:System.Web.UI.WebControls.QueryContext.WhereParameters" />、<see cref="P:System.Web.UI.WebControls.QueryContext.OrderGroupsByParameters" />、<see cref="P:System.Web.UI.WebControls.QueryContext.OrderByParameters" />、<see cref="P:System.Web.UI.WebControls.QueryContext.GroupByParameters" />、<see cref="P:System.Web.UI.WebControls.QueryContext.SelectParameters" /> 和 <see cref="P:System.Web.UI.WebControls.QueryContext.Arguments" /> 属性初始化 <see cref="T:System.Web.UI.WebControls.QueryContext" /> 类的新实例。</summary>
      <param name="whereParameters">数据源用于创建 Where 子句的参数集合。</param>
      <param name="orderGroupsByParameters">数据源用于创建 OrderGroupsBy 子句的参数集合。</param>
      <param name="orderByParameters">数据源用于创建 OrderBy 子句的参数集合。</param>
      <param name="groupByParameters">数据源用于创建 GroupBy 子句的参数集合。</param>
      <param name="selectParameters">数据源用于创建 Select 命令的参数集合。</param>
      <param name="arguments">要传递给 <see cref="T:System.Web.UI.WebControls.QueryContext" /> 类的参数。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryContext.Arguments">
      <summary>获取或设置要传递给 <see cref="T:System.Web.UI.WebControls.QueryContext" /> 类的参数。</summary>
      <returns>要传递给 <see cref="T:System.Web.UI.WebControls.QueryContext" /> 类的参数。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryContext.GroupByParameters">
      <summary>获取或设置一个参数集合，这些参数指定使用哪些属性对检索到的数据进行分组。</summary>
      <returns>数据源用于创建 GroupBy 子句的参数集合。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryContext.OrderByParameters">
      <summary>获取或设置一个参数集合，这些参数指定使用哪些字段对检索到的数据进行排序。</summary>
      <returns>数据源用于创建 OrderBy 子句的参数集合。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryContext.OrderGroupsByParameters">
      <summary>获取或设置一个参数集合，这些参数指定用于对分组的数据进行排序的字段。</summary>
      <returns>数据源用于创建 OrderGroupsBy 子句的参数集合。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryContext.SelectParameters">
      <summary>获取或设置一个参数集合，这些参数指定检索到的数据中包括的属性和已计算值。</summary>
      <returns>数据源用于创建 Select 命令的参数集合。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryContext.WhereParameters">
      <summary>获取或设置一个参数集合，这些参数指定要将记录包含在检索到的数据中所必须满足的条件。</summary>
      <returns>数据源用于创建 Where 子句的参数集合。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.QueryCreatedEventArgs">
      <summary>表示 <see cref="E:System.Web.UI.WebControls.QueryableDataSource`1.QueryCreated" /> 事件的事件数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryCreatedEventArgs.#ctor(System.Linq.IQueryable)">
      <summary>使用 <see cref="T:System.Linq.IQueryable`1" /> 查询对象初始化 <see cref="T:System.Web.UI.WebControls.QueryCreatedEventArgs" /> 类的新实例。</summary>
      <param name="query">要使用的查询对象。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryCreatedEventArgs.Query">
      <summary>获取或设置要用于 <see cref="T:System.Web.UI.WebControls.QueryCreatedEventArgs" /> 类的 <see cref="T:System.Linq.IQueryable`1" /> 对象。</summary>
      <returns>要用于 <see cref="T:System.Web.UI.WebControls.QueryCreatedEventArgs" /> 类的 <see cref="T:System.Linq.IQueryable`1" /> 对象。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.QueryExtender">
      <summary>允许在数据源中没有显式 Where 子句的情况下筛选数据源中的数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryExtender.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryExtender.DataSource">
      <summary>获取要用于查询的数据源控件（<see cref="T:System.Web.UI.IDataSource" /> 对象）。</summary>
      <returns>要用于查询的数据源控件。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.WebControls.QueryExtender.DataSource" /> 属性为 null。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryExtender.Expressions">
      <summary>获取应用于 <see cref="T:System.Web.UI.IDataSource" /> 控件的表达式的集合。</summary>
      <returns>应用于数据源控件的表达式的集合。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)">
      <summary>加载必须保持的 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件中的值的状态。</summary>
      <param name="savedState">一个对象，它表示 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件的状态。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 类的新实例后发生。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryExtender.SaveViewState">
      <summary>保存 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件的当前视图状态。</summary>
      <returns>一个包含 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件的已保存状态的对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryExtender.TargetControlID">
      <summary>获取或设置用于查询的 <see cref="T:System.Web.UI.IDataSource" /> 控件的 ID。</summary>
      <returns>要用于查询的数据源控件的 ID。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryExtender.TrackViewState">
      <summary>跟踪 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件的视图状态更改，以使这些更改可以存储在该控件的 <see cref="T:System.Web.UI.StateBag" /> 对象中。</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.TemplatePagerField">
      <summary>表示一个 <see cref="T:System.Web.UI.WebControls.DataPager" /> 字段，使用该字段可以创建自定义的分页 UI。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.CopyProperties(System.Web.UI.WebControls.DataPagerField)">
      <summary>将当前 <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> 对象的属性复制到指定的 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> 对象。</summary>
      <param name="newField">将当前 <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> 实例的属性复制到的对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.CreateDataPagers(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>为页导航字段对象创建用户界面 (UI) 控件并将它们添加到指定的容器。</summary>
      <param name="container">用来存储控件的容器。</param>
      <param name="startRowIndex">页面中第一条记录的索引。</param>
      <param name="maximumRows">单个页面上的最大项数。</param>
      <param name="totalRowCount">总项数。</param>
      <param name="fieldIndex">数据页导航字段在 <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> 集合中的索引。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.CreateField">
      <summary>创建并返回 <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> 类的新实例。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> 类的新实例。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.HandleEvent(System.Web.UI.WebControls.CommandEventArgs)">
      <summary>处理 <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> 对象中发生的事件并执行适当的操作。</summary>
      <param name="e">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.OnPagerCommand(System.Web.UI.WebControls.DataPagerCommandEventArgs)">
      <summary>引发 <see cref="E:System.Web.UI.WebControls.TemplatePagerField.PagerCommand" /> 事件。</summary>
      <param name="e">事件数据。</param>
      <exception cref="T:System.InvalidOperationException">没有 <see cref="E:System.Web.UI.WebControls.TemplatePagerField.PagerCommand" /> 事件的处理程序。</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.TemplatePagerField.PagerCommand">
      <summary>当单击 <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> 对象中的按钮时发生。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplatePagerField.PagerTemplate">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件中的页导航字段的自定义内容。</summary>
      <returns>一个模板对象，它包含 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件中的页导航字段的自定义内容。 默认值为 null，表示未设置此属性。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.CustomExpression">
      <summary>提供了一个方法，用于指定为响应事件而调用的自定义 LINQ 查询。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.CustomExpression.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.Expressions.CustomExpression" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>提供对数据源使用的已修改 <see cref="T:System.Linq.IQueryable" /> 对象的访问。</summary>
      <returns>已修改数据源的实例。</returns>
      <param name="source">
        <see cref="T:System.Linq.IQueryable" /> 对象使用的数据源。</param>
    </member>
    <member name="E:System.Web.UI.WebControls.Expressions.CustomExpression.Querying">
      <summary>在设置了 <see cref="T:System.Linq.IQueryable" /> 数据源值时发生。</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs">
      <summary>表示 <see cref="T:System.Web.UI.WebControls.Expressions.CustomExpression" /> 类的事件数据。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.#ctor(System.Linq.IQueryable,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>使用数据源对象和计算所得参数值的字典，初始化 <see cref="T:System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs" /> 类的新实例。</summary>
      <param name="source">要使用的数据源对象。</param>
      <param name="values">
        <see cref="T:System.Web.UI.WebControls.Expressions.CustomExpression" /> 对象的参数集合中的计算值。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.Query">
      <summary>获取或设置数据源对象。</summary>
      <returns>数据源对象。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.Values">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.Expressions.CustomExpression" /> 对象的 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 实例中的计算值。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.Expressions.CustomExpression" /> 对象的 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 实例中的计算值。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.DataSourceExpression">
      <summary>表示用于创建表达式类的基类。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpression.Context">
      <summary>获取所有者控件的 <see cref="T:System.Web.HttpContext" /> 实例。</summary>
      <returns>所有者控件的 HTTP 上下文实例。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource">
      <summary>获取与所有者控件关联的数据源对象。</summary>
      <returns>与所有者控件关联的数据源对象。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>使用 <see cref="T:System.Linq.IQueryable" /> 接口计算 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> 实例。</summary>
      <returns>用于计算数据源表达式的 <see cref="T:System.Linq.IQueryable" /> 对象的实例。</returns>
      <param name="source">添加该表达式的 <see cref="T:System.Linq.IQueryable" /> 对象。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState">
      <summary>获取一个值，该值指示数据源表达式对象是否跟踪其视图状态更改。</summary>
      <returns>如果数据源表达式对象跟踪其视图状态更改，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.LoadViewState(System.Object)">
      <summary>加载必须持久化的 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> 对象中值的状态。</summary>
      <param name="savedState">一个对象，表示 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> 对象的状态。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner">
      <summary>获取所有者控件。</summary>
      <returns>所有者控件。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.SaveViewState">
      <summary>保存 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> 对象的当前视图状态。</summary>
      <returns>一个对象，其中包含数据源表达式的已保存状态。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>设置 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> 对象的 HTTP 上下文，该对象使用指定的所有者控件、<see cref="T:System.Web.HttpContext" /> 实例和 <see cref="T:System.Web.UI.WebControls.IQueryableDataSource" /> 对象。</summary>
      <param name="owner">
        <see cref="T:System.Linq.IQueryable" /> 数据源对象的所有者控件。</param>
      <param name="context">要使用的数据上下文。</param>
      <param name="dataSource">要使用的 <see cref="T:System.Linq.IQueryable" /> 数据源对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty">
      <summary>标记 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> 对象，以便在视图状态中保存其状态。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>由类实现时，获取一个值，该值指示数据源表达式对象是否跟踪其视图状态更改。</summary>
      <returns>如果数据源表达式对象跟踪其视图状态更改，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>由类实现时，加载数据源表达式对象以前保存的视图状态。</summary>
      <param name="state">一个对象，表示数据源表达式对象的已保存视图状态值。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState">
      <summary>由类实现时，保存 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> 对象的当前视图状态。</summary>
      <returns>包含视图状态更改的对象。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState">
      <summary>由类实现时，跟踪 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> 对象的视图状态更改，以使这些更改可以存储在数据源表达式对象的 <see cref="T:System.Web.UI.StateBag" /> 对象中。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.TrackViewState">
      <summary>跟踪 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> 对象的视图状态更改，以使这些更改可以存储在数据源表达式对象的 <see cref="T:System.Web.UI.StateBag" /> 对象中。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState">
      <summary>获取 <see cref="T:System.Web.UI.StateBag" /> 类的一个实例，其中包含当前的视图状态信息。</summary>
      <returns>状态袋对象的一个实例，其中包含当前的视图状态信息。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection">
      <summary>表示要应用于数据源控件的表达式的集合。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.Add(System.Web.UI.WebControls.Expressions.DataSourceExpression)">
      <summary>向 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> 对象的指定索引处添加数据源表达式对象。</summary>
      <param name="expression">要添加的数据源表达式对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.Contains(System.Web.UI.WebControls.Expressions.DataSourceExpression)">
      <summary>确定 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> 对象是否包含特定的数据源表达式对象。</summary>
      <param name="expression">要查找的数据源表达式对象。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.Context">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> 类的 <see cref="T:System.Web.HttpContext" /> 实例。</summary>
      <returns>
        <see cref="T:System.Web.HttpContext" /> 实例。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.CopyTo(System.Web.UI.WebControls.Expressions.DataSourceExpression[],System.Int32)">
      <summary>将 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> 对象的元素复制到一个数组中从特定的索引开始的位置。</summary>
      <param name="expressionArray">作为所复制元素的目标的一维数组。</param>
      <param name="index">数组中从零开始的索引，在此处开始复制。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.CreateKnownType(System.Int32)">
      <summary>创建数据源表达式对象的实例。</summary>
      <returns>要基于 <see cref="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.GetKnownTypes" /> 方法所返回类型的有序列表创建的数据源表达式的索引。</returns>
      <param name="index">数组中从零开始的索引，数据源表达式对象位于该索引位置处。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.GetKnownTypes">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> 对象可包含的数据源表达式对象的数组。</summary>
      <returns>数据源集合可以包含的数据源表达式对象的有序数组。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.IndexOf(System.Web.UI.WebControls.Expressions.DataSourceExpression)">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> 对象中指定数据源表达式对象的索引。</summary>
      <returns>如果该数据源表达式对象出现在集合中，则为其索引；否则为 -1。</returns>
      <param name="expression">要查找的数据源表达式对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.Insert(System.Int32,System.Web.UI.WebControls.Expressions.DataSourceExpression)">
      <summary>向 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> 对象的指定索引处插入数据源表达式对象。</summary>
      <param name="index">从零开始的索引，应在该位置插入对象。</param>
      <param name="expression">要插入的数据源表达式对象。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.Item(System.Int32)">
      <summary>获取或设置指定索引处的数据源表达式对象。</summary>
      <returns>指定索引处的数据源表达式对象。</returns>
      <param name="index">要获取的数据源表达式的索引（从零开始）。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.Owner">
      <summary>获取所有者控件。</summary>
      <returns>所有者控件。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.Remove(System.Web.UI.WebControls.Expressions.DataSourceExpression)">
      <summary>从 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> 对象中移除第一次出现的指定数据源表达式对象。</summary>
      <param name="expression">要移除的数据源表达式对象。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.RemoveAt(System.Int32)">
      <summary>从 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> 对象中移除指定索引处的数据源表达式对象。</summary>
      <param name="index">要移除的数据源表达式的索引（从零开始）。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.SetDirtyObject(System.Object)">
      <summary>将指定的数据源表达式对象标记为自上次从视图状态执行加载或保存操作以来已发生更改。</summary>
      <param name="o">要标记为自上次从视图状态执行加载或保存操作以来已发生更改的数据源表达式对象。</param>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.MethodExpression">
      <summary>提供一个方法，用于指定某个方法中定义的自定义 LINQ 查询。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.MethodExpression.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.Expressions.MethodExpression" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>使用指定 <see cref="T:System.Linq.IQueryable" /> 对象解析表达式。</summary>
      <returns>用于解析表达式的 <see cref="T:System.Linq.IQueryable" /> 对象的实例。</returns>
      <param name="source">要使用的数据源控件。</param>
      <exception cref="T:System.ArgumentNullException">数据源控件为 null。</exception>
      <exception cref="T:System.InvalidOperationException">未找到方法。 - 或 - 该方法不是静态的。 - 或 - 传递的 IQuerable&lt;T&gt; 对象的类型已更改。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound">
      <summary>获取或设置一个值，该值指示是否应忽略表达式。</summary>
      <returns>如果忽略表达式，则该值为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.MethodExpression.MethodName">
      <summary>获取或设置包含自定义 LINQ 查询的方法的名称。</summary>
      <returns>其中包含自定义 LINQ 查询的方法的名称。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName">
      <summary>获取或设置其方法包含自定义查询的类。</summary>
      <returns>包含方法作为成员的类。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.OfTypeExpression">
      <summary>提供了基于指定类型筛选查询的方法。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.OfTypeExpression.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.Expressions.OfTypeExpression" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.OfTypeExpression.#ctor(System.Type)">
      <summary>使用指定类型初始化 <see cref="T:System.Web.UI.WebControls.Expressions.OfTypeExpression" /> 类的新实例。</summary>
      <param name="type">筛选器所基于的类型。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.OfTypeExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>返回对其执行了 <see cref="T:System.Web.UI.WebControls.Expressions.OfTypeExpression" /> 的查询。</summary>
      <returns>其中包含指定类型的元素的查询。</returns>
      <param name="query">要用于筛选器的查询。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.OfTypeExpression.TypeName">
      <summary>获取或设置筛选器所基于的类型。</summary>
      <returns>筛选器所基于的类型。 默认值为 null。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.OrderByExpression">
      <summary>提供将排序表达式应用于 <see cref="T:System.Linq.IQueryable" /> 对象的方法。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> 属性为 null。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField">
      <summary>获取或设置要作为排序依据的 <see cref="T:System.Linq.IQueryable" /> 对象的属性。</summary>
      <returns>要作为排序依据的 <see cref="T:System.Linq.IQueryable" /> 数据源对象的属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction">
      <summary>获取和设置 <see cref="T:System.Linq.IQueryable" /> 数据源对象的排序方向。</summary>
      <returns>数据源对象的排序方向。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>基于 <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> 值和 <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" /> 值将排序表达式应用于 <see cref="T:System.Linq.IQueryable" /> 对象。</summary>
      <returns>应用了表达式的数据源的实例。</returns>
      <param name="source">指定要应用排序的数据源。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions">
      <summary>获取或设置要在将 <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> 值应用于数据源之后应用的 <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> 表达式的集合。</summary>
      <returns>要在将 <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> 应用于数据源之后应用的 <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> 表达式的集合。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression">
      <summary>表示 <see cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" /> 对象的抽象基类。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.LoadViewState(System.Object)">
      <summary>加载必须持久化的 <see cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" /> 对象中值的状态。</summary>
      <param name="savedState">一个对象，表示 <see cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" /> 对象的状态。</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.Parameters">
      <summary>获取与此 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> 对象关联的参数。</summary>
      <returns>与此 <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> 对象关联的参数。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SaveViewState">
      <summary>保存 <see cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" /> 对象的当前视图状态。</summary>
      <returns>一个对象，其中包含 <see cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" /> 对象的已保存状态。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>使用指定的所有者控件、上下文和数据源来执行表达式。</summary>
      <param name="owner">要使用的所有者控件。</param>
      <param name="context">要使用的上下文。</param>
      <param name="dataSource">要使用的数据源。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.TrackViewState">
      <summary>跟踪 <see cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" /> 对象的视图状态更改，以使这些更改可以存储在该对象的 <see cref="T:System.Web.UI.StateBag" /> 对象中。</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.PropertyExpression">
      <summary>提供一个方法，用于依据 <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> 集合中的参数创建 Where 子句。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.PropertyExpression.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.PropertyExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>使用指定的 <see cref="T:System.Linq.IQueryable" /> 数据源对象应用一个 <see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" /> 对象。</summary>
      <returns>应用了表达式的对象的实例。</returns>
      <param name="source">要用于查询的对象。</param>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.QueryExpression">
      <summary>通过使用复杂查询检索特定实体类型的实例。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.QueryExpression.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.Expressions.QueryExpression" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.QueryExpression.Expressions">
      <summary>获取查询中表达式的集合。</summary>
      <returns>查询中表达式的集合。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.QueryExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>通过使用指定 <see cref="T:System.Linq.IQueryable" /> 数据源控件解析表达式。</summary>
      <returns>用于解析表达式的数据源控件的实例。</returns>
      <param name="source">要使用的数据源控件。</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.QueryExpression.Initialize(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>通过使用指定的所有者控件、<see cref="T:System.Web.HttpContext" /> 实例和 <see cref="T:System.Web.UI.WebControls.IQueryableDataSource" /> 对象初始化 <see cref="T:System.Web.UI.WebControls.Expressions.QueryExpression" /> 对象。</summary>
      <param name="owner">要使用的控件。</param>
      <param name="context">要使用的上下文。</param>
      <param name="dataSource">要使用的数据源。</param>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.RangeExpression">
      <summary>提供了一个方法，用于确定某个值是大于还是小于指定值，或者某个值是否介于两个指定值之间。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> 属性为 null。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.RangeExpression.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.Expressions.RangeExpression" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField">
      <summary>获取或设置要用于比较的字段。</summary>
      <returns>要用于比较的字段。</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>获取对其执行范围比较的 <see cref="T:System.Linq.IQueryable" /> 对象。</summary>
      <returns>应用了表达式的 <see cref="T:System.Linq.IQueryable" /> 对象的实例。</returns>
      <param name="source">要用于比较的对象。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> 属性为 null。 - 或 - 将 <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> 和 <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> 属性设置为 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />。 - 或 - <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> 或 <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> 属性未设置为 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />，参数集合为空。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType">
      <summary>获取或设置范围的最大值。</summary>
      <returns>要用于最大值的比较的类型。 默认值为 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />，指示不执行最大值比较。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType">
      <summary>获取或设置范围的最小值。</summary>
      <returns>要用于最小值的比较的类型。 默认值为 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />，指示不执行最小值比较。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.RangeType">
      <summary>指定要在 <see cref="T:System.Web.UI.WebControls.Expressions.RangeExpression" /> 类的实例中使用的数值比较的类型。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Expressions.RangeType.Exclusive">
      <summary>指定大于或小于比较。 对应于 &gt; 或 &lt; 运算符。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Expressions.RangeType.Inclusive">
      <summary>指定等于或大于比较或者等于或小于比较。 对应于 &gt;= 或 &lt;= 运算符。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Expressions.RangeType.None">
      <summary>指定搜索没有边界。</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.SearchExpression">
      <summary>提供了一个方法，用于搜索字符串值的一个或多个字段，并将它们与指定字符串值进行比较。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> 属性为 null （在 Visual Basic 中为 Nothing）</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.SearchExpression.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType">
      <summary>获取或设置要执行的字符串比较的类型。</summary>
      <returns>要执行的字符串比较的类型。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> 属性为 null。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields">
      <summary>获取并设置要搜索的单个字段或以逗号分隔的字段列表。</summary>
      <returns>要搜索的一个或多个字段。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> 属性为 null。</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>基于 <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" /> 对象将 <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> 对象应用于指定的 <see cref="T:System.Linq.IQueryable" /> 对象。</summary>
      <returns>应用了 <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> 的 <see cref="T:System.Linq.IQueryable" /> 对象的实例。</returns>
      <param name="source">要使用的对象。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> 属性为 null。</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" /> 值，该值确定在字符串中的何处进行搜索。</summary>
      <returns>要执行的搜索的类型。</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.SearchType">
      <summary>指定 <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> 类的实例中的搜索类型。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Expressions.SearchType.Contains">
      <summary>指示搜索应确定搜索字符串是否匹配字段中任何位置的字符串。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Expressions.SearchType.EndsWith">
      <summary>指示搜索应确定搜索字符串是否匹配字段结尾处的字符串。</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Expressions.SearchType.StartsWith">
      <summary>指示搜索应确定搜索字符串是否匹配字段开始处的字符串。</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.ThenBy">
      <summary>提供了一个方法，用于在应用 <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> 表达式之后，将排序表达式应用于 <see cref="T:System.Linq.IQueryable" /> 数据源对象。</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.ThenBy.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.ThenBy.DataField">
      <summary>获取或设置要应用 <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> 表达式的 <see cref="T:System.Linq.IQueryable" /> 对象的属性。</summary>
      <returns>要应用 <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> 表达式的 <see cref="T:System.Linq.IQueryable" /> 对象的属性。</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.ThenBy.Direction">
      <summary>获取或设置 <see cref="T:System.Linq.IQueryable" /> 数据源对象的排序方向。</summary>
      <returns>
        <see cref="T:System.Linq.IQueryable" /> 数据源对象的排序方向。</returns>
    </member>
  </members>
</doc>