<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Extensions.Design</name>
  </assembly>
  <members>
    <member name="T:System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter">
      <summary>提供检索当前容器中控件 ID 的列表的类型转换器。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>在提供了格式上下文时，返回 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 对象中的容器中控件 ID 的集合。</summary>
      <returns>一个对象，它保存了一组表示当前容器中控件的控件 ID 的字符串。 如果此容器中没有控件，将返回一个空集合。 如果上下文为 null 或者没有当前容器，将返回 null。</returns>
      <param name="context">一个提供格式上下文的对象，可用来提取有关从中调用此转换器的环境的附加信息。 此参数或此参数的属性可以为 null。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回一个值，该值指示使用指定的上下文从 <see cref="M:System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> 方法返回的标准值集合是否为排他的可能值列表。</summary>
      <returns>如果从 <see cref="M:System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> 方法返回的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 对象提供了可能值的穷举列表，则为 true；如果还可能有其他值，则为 false。 默认值为 false。</returns>
      <param name="context">一个提供格式上下文的对象。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回一个值，该值指示此转换器是否支持可使用指定的上下文从列表中选取的一组标准的控件 ID。</summary>
      <returns>如果应调用 <see cref="M:System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> 方法来查找该对象支持的一组公共的控件 ID，则为 true；否则为 false。 默认值为 true。</returns>
      <param name="context">一个提供格式上下文的对象。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter">
      <summary>提供检索当前容器中某一控件的事件列表的类型转换器。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>为指定的格式上下文，返回 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 实例中的容器中某一控件的事件名称集合。</summary>
      <returns>一个字符串集合，表示当前容器中某一控件的事件名称。 如果当前不包含任何控件，则此方法将返回一个空集合。 如果上下文为 null 或者没有当前容器，则此方法将返回 null。</returns>
      <param name="context">一个格式上下文对象，可用于获取有关从中调用此转换器的环境的更多信息。 此参数或其属性可以为 null。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回一个值，该值指示从 <see cref="M:System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> 返回的标准值集合对于指定的上下文而言是否是排他的可能值列表。</summary>
      <returns>如果从 <see cref="M:System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> 返回的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 是可能值的穷举列表，则为 true；如果还可能有其他值，则为 false。 默认实现返回 false。</returns>
      <param name="context">格式上下文。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回一个值，该值指示此转换器是否支持可从列表中选择的一组标准的控件事件名称。</summary>
      <returns>如果应调用 <see cref="M:System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> 来查找该对象支持的一组公共控件 ID 值，则为 true；否则为 false。 默认实现返回 true。</returns>
      <param name="context">格式上下文。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Web.UI.Design.CollectionEditorBase">
      <summary>提供用户可用来在设计时编辑 <see cref="T:System.Web.UI.ScriptReferenceCollection" />、<see cref="T:System.Web.UI.ServiceReferenceCollection" /> 和 <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> 对象的用户界面。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.CollectionEditorBase.#ctor(System.Type)">
      <summary>使用指定的集合类型初始化 <see cref="T:System.Web.UI.Design.CollectionEditorBase" /> 类的新实例。</summary>
      <param name="type">要编辑的集合的类型。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.CollectionEditorBase.CreateCollectionForm">
      <summary>创建新的窗体，以显示和编辑当前集合。</summary>
      <returns>作为用于编辑集合的用户界面提供的对象。</returns>
    </member>
    <member name="T:System.Web.UI.Design.ExtenderControlDesigner">
      <summary>为在设计时使用扩展程序控件提供 UI 支持。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.ExtenderControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ExtenderControlDesigner" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.ExtenderControlDesigner.Dispose(System.Boolean)">
      <summary>释放 <see cref="T:System.Web.UI.Design.ExtenderControlDesigner" /> 使用的非托管资源，还可以选择释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Web.UI.Design.ExtenderControlDesigner.GetDesignTimeHtml">
      <summary>获取扩展程序控件在设计时的标准 HTML 呈现形式，包括类型和 ID 信息。</summary>
      <returns>此控件在设计时的 HTML 呈现形式。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.ExtenderControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化指定的组件，并将其添加到组件更改服务。</summary>
      <param name="component">类型为 <see cref="T:System.Web.UI.IExtenderControl" /> 的组件，该组件可实现 <see cref="T:System.ComponentModel.IComponent" /> 接口。</param>
    </member>
    <member name="M:System.Web.UI.Design.ExtenderControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整控件的属性网格中列出的项。</summary>
      <param name="properties">一个包含控件的属性的字典。</param>
    </member>
    <member name="P:System.Web.UI.Design.ExtenderControlDesigner.Visible">
      <summary>获取一个值，该值指示设计图面上是否显示当前控件以便该控件可被选中且其属性可被编辑。</summary>
      <returns>如果显示当前控件，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Web.UI.Design.ExtenderControlToolboxItem">
      <summary>提供一种方式，用于确定哪些目标控件可由工具箱中的特定扩展程序控件进行扩展。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.ExtenderControlToolboxItem.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ExtenderControlToolboxItem" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.ExtenderControlToolboxItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用指定的参数初始化 <see cref="T:System.Web.UI.Design.ExtenderControlToolboxItem" /> 类的新实例。</summary>
      <param name="info">一个提供序列化信息的对象。</param>
      <param name="context">一个对象，该对象描述序列化流的源和目标。</param>
    </member>
    <member name="M:System.Web.UI.Design.ExtenderControlToolboxItem.#ctor(System.Type)">
      <summary>使用指定的类型初始化 <see cref="T:System.Web.UI.Design.ExtenderControlToolboxItem" /> 类的新实例。</summary>
      <param name="type">目标控件的类型。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.ExtenderControlToolboxItem.GetTargetControlTypes(System.ComponentModel.Design.IDesignerHost)">
      <summary>返回目标类型的集合。</summary>
      <returns>目标类型的只读集合。</returns>
      <param name="host">控件宿主。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.ExtenderControlToolboxItem.Initialize(System.Type)">
      <summary>使用指定类型预先填充目标类型缓存项。</summary>
      <param name="type">目标控件的类型。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Web.UI.Design.PostBackTriggerControlIDConverter">
      <summary>提供检索当前容器中控件 ID 的列表的类型转换器。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.PostBackTriggerControlIDConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.PostBackTriggerControlIDConverter" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.PostBackTriggerControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>在提供了格式上下文时，返回 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 对象中的容器中控件 ID 的集合。</summary>
      <returns>一个字符串集合，表示当前容器中各控件的控件 ID。 如果当前不包含任何控件，则此方法将返回一个空集合。 如果上下文为 null 或者没有当前容器，则此方法将返回 null。</returns>
      <param name="context">一种格式上下文，可用于提取有关从中调用此转换器的环境的附加信息。 此参数或其属性可以为 null。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.PostBackTriggerControlIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回一个值，该值指示使用指定的上下文从 <see cref="M:System.Web.UI.Design.PostBackTriggerControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> 方法返回的标准值集合是否为排他的可能值列表。</summary>
      <returns>如果从 <see cref="M:System.Web.UI.Design.PostBackTriggerControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> 方法返回的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 对象提供一个完整的可能值列表，则为 true；如果还可能有其他值，则为 false。 默认值为 false。</returns>
      <param name="context">格式上下文。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.PostBackTriggerControlIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回一个值，该值指示此转换器是否支持可使用指定的上下文从列表中选择的一组标准的控件 ID。</summary>
      <returns>如果应调用 <see cref="M:System.Web.UI.Design.PostBackTriggerControlIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> 方法来查找该对象支持的一组公共控件 ID，则为 true；否则为 false。 默认值为 true。</returns>
      <param name="context">格式上下文。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Web.UI.Design.QueryExtenderDesigner">
      <summary>为 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件提供设计器功能。</summary>
    </member>
    <member name="M:System.Web.UI.Design.QueryExtenderDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.QueryExtenderDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.QueryExtenderDesigner.GetDesignTimeHtml">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 控件在设计时的占位符 HTML。</summary>
      <returns>控件在设计时的占位符 HTML。</returns>
    </member>
    <member name="T:System.Web.UI.Design.ScriptManagerDesigner">
      <summary>为可视化设计器中的 <see cref="T:System.Web.UI.ScriptManager" /> 控件提供设计时支持。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.ScriptManagerDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ScriptManagerDesigner" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.ScriptManagerDesigner.GetApplicationServices(System.Web.UI.ScriptManager,System.Collections.Generic.IEnumerable{System.Web.UI.ScriptManagerProxy})">
      <summary>返回 ECMAScript (JavaScript) 代码，它表示在网页的 <see cref="T:System.Web.UI.ScriptManager" /> 控件和 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 控件中定义的配置文件服务属性。</summary>
      <returns>定义配置文件服务属性的 JavaScript 代码。</returns>
      <param name="scriptManager">与此网页关联的 <see cref="T:System.Web.UI.ScriptManager" /> 控件。</param>
      <param name="proxies">与此网页关联的 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 控件的集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="scriptManager" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.ScriptManagerDesigner.GetDesignTimeHtml">
      <summary>返回在设计时表示 <see cref="T:System.Web.UI.ScriptManager" /> 控件的 HTML 标记。</summary>
      <returns>用于在设计时呈现 <see cref="T:System.Web.UI.ScriptManager" /> 的标记。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.ScriptManagerDesigner.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.ServiceReference)">
      <summary>从衍生的 <see cref="T:System.Web.UI.ServiceReference" /> 对象提供代理脚本。</summary>
      <returns>代理脚本。</returns>
      <param name="scriptManager">页上的 <see cref="T:System.Web.UI.ScriptManager" /> 控件。</param>
      <param name="serviceReference">在页面中用来注册 “Web” 服务使用的 <see cref="T:System.Web.UI.ServiceReference" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.ScriptManagerDesigner.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.ServiceReference)">
      <summary>从衍生的 <see cref="T:System.Web.UI.ServiceReference" /> 对象提供代理 URL。</summary>
      <returns>代理 URL。</returns>
      <param name="scriptManager">页上的 <see cref="T:System.Web.UI.ScriptManager" /> 控件。</param>
      <param name="serviceReference">在页面中用来注册 “Web” 服务使用的 <see cref="T:System.Web.UI.ServiceReference" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.ScriptManagerDesigner.GetScriptFromWebResource(System.Reflection.Assembly,System.String,System.Globalization.CultureInfo)">
      <summary>返回由 <see cref="T:System.Web.UI.ScriptResourceAttribute" /> 特性定义的 ECMAScript (JavaScript) 代码。</summary>
      <returns>JavaScript 资源。</returns>
      <param name="assembly">包含资源的程序集。</param>
      <param name="resourceName">程序集中资源的完全限定名称。</param>
      <param name="culture">为其指定资源的区域性。</param>
    </member>
    <member name="M:System.Web.UI.Design.ScriptManagerDesigner.GetScriptReferences(System.Web.UI.ScriptManager,System.Collections.Generic.IEnumerable{System.Web.UI.ScriptManagerProxy})">
      <summary>返回在网页的 <see cref="T:System.Web.UI.ScriptManager" /> 控件和 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 控件中定义的所有 <see cref="T:System.Web.UI.ScriptReference" /> 控件的集合。</summary>
      <returns>一个由 <see cref="T:System.Web.UI.ScriptReference" /> 控件组成的只读集合。</returns>
      <param name="scriptManager">与此网页关联的 <see cref="T:System.Web.UI.ScriptManager" /> 控件。</param>
      <param name="proxies">与此网页关联的 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 控件的集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="scriptManager" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.ScriptManagerDesigner.GetServiceReferences(System.Web.UI.ScriptManager,System.Collections.Generic.IEnumerable{System.Web.UI.ScriptManagerProxy})">
      <summary>返回在网页的 <see cref="T:System.Web.UI.ScriptManager" /> 控件和 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 控件中定义的所有 <see cref="T:System.Web.UI.ServiceReference" /> 控件的集合。</summary>
      <returns>一个由 <see cref="T:System.Web.UI.ServiceReference" /> 控件组成的只读集合。</returns>
      <param name="scriptManager">与此网页关联的 <see cref="T:System.Web.UI.ScriptManager" /> 控件。</param>
      <param name="proxies">与此网页关联的 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 控件的集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="scriptManager" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ScriptManagerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化指定的组件。</summary>
      <param name="component">一个实现 <see cref="T:System.ComponentModel.IComponent" /> 接口的 <see cref="T:System.Web.UI.ScriptManager" /> 组件。</param>
    </member>
    <member name="T:System.Web.UI.Design.ScriptManagerProxyDesigner">
      <summary>为可视化设计器中的 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 控件提供设计时支持。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.ScriptManagerProxyDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ScriptManagerProxyDesigner" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.ScriptManagerProxyDesigner.GetDesignTimeHtml">
      <summary>返回在设计时表示 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 控件的 HTML 标记。</summary>
      <returns>一个字符串，它包含用于在设计时呈现 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 的标记。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.ScriptManagerProxyDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化指定的组件。</summary>
      <param name="component">一个实现 <see cref="T:System.ComponentModel.IComponent" /> 接口的 <see cref="T:System.Web.UI.ScriptManagerProxy" /> 组件。</param>
    </member>
    <member name="T:System.Web.UI.Design.ServiceReferenceCollectionEditor">
      <summary>为 <see cref="T:System.Web.UI.ServiceReference" /> 控件的服务引用集合提供组件编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ServiceReferenceCollectionEditor.#ctor(System.Type)">
      <summary>使用指定的集合类型初始化 <see cref="T:System.Web.UI.Design.ServiceReferenceCollectionEditor" /> 类的新实例。</summary>
      <param name="type">要编辑的集合的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.ServiceReferenceCollectionEditor.CanSelectMultipleInstances">
      <summary>获取一个值，该值指示是否可以同时选择多个脚本引用实例。</summary>
      <returns>如果可以同时选择多个脚本引用实例，则为 true；否则，为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ServiceReferenceCollectionEditor.CreateNewItemTypes">
      <summary>获取集合编辑器可创建的数据类型。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.ServiceReferenceCollectionEditor" /> 类可创建的数据类型。</returns>
    </member>
    <member name="T:System.Web.UI.Design.TimerDesigner">
      <summary>为可视化设计器中的 <see cref="T:System.Web.UI.Timer" /> 控件提供设计时支持。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.TimerDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.TimerDesigner" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.TimerDesigner.GetDesignTimeHtml">
      <summary>返回用于在设计时呈现关联的 <see cref="T:System.Web.UI.Timer" /> 控件的 HTML 标记。</summary>
      <returns>一个字符串，它包含用于在设计时呈现 <see cref="T:System.Web.UI.Timer" /> 控件的标记。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Web.UI.Design.UpdatePanelDesigner">
      <summary>为可视化设计器中的 <see cref="T:System.Web.UI.UpdatePanel" /> 控件提供设计时支持。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.UpdatePanelDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.UpdatePanelDesigner" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.UpdatePanelDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>返回用于显示 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的 HTML 标记，并使用当前的控件设计器区域填充集合。</summary>
      <returns>关联控件（包括所有控件设计器区域）的设计时 HTML 标记。</returns>
      <param name="regions">关联控件的控件设计器区域。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.UpdatePanelDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的设计时视图中可编辑区域的内容。</summary>
      <returns>用于在设计时呈现关联 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的模板的序列化副本。</returns>
      <param name="region">要更新的区域。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.UpdatePanelDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化指定的组件。</summary>
      <param name="component">一个实现 <see cref="T:System.ComponentModel.IComponent" /> 接口的 <see cref="T:System.Web.UI.UpdatePanel" /> 组件。</param>
    </member>
    <member name="M:System.Web.UI.Design.UpdatePanelDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>指定 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的可编辑区域在设计时的内容。</summary>
      <param name="sender">要更新的区域。</param>
      <param name="ce">关联控件的序列化模板。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.UpdatePanelDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>在关联的 <see cref="T:System.Web.UI.UpdatePanel" /> 控件发生更改时调用。</summary>
      <param name="region">事件源。</param>
      <param name="content">事件数据。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.UpdatePanelDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示此设计器是否应使用 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的临时副本取代与此设计器关联的实际控件来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.UpdatePanelTriggerCollectionEditor">
      <summary>为 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的 <see cref="P:System.Web.UI.UpdatePanel.Triggers" /> 集合提供组件编辑器。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.UpdatePanelTriggerCollectionEditor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.UpdatePanelTriggerCollectionEditor" /> 类的新实例。</summary>
      <param name="type">要编辑的触发器的类型。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.UpdatePanelTriggerCollectionEditor.CanSelectMultipleInstances">
      <summary>获取一个值，该值指示是否可以同时选择多个触发器。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.UpdatePanelTriggerCollectionEditor.CreateCollectionItemType">
      <summary>获取此集合编辑的数据类型。</summary>
      <returns>
        <see cref="T:System.Web.UI.UpdatePanelTrigger" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.UpdatePanelTriggerCollectionEditor.CreateNewItemTypes">
      <summary>获取此集合编辑器能够创建的多个数据类型。</summary>
      <returns>一个由 <see cref="T:System.Web.UI.Design.UpdatePanelTriggerCollectionEditor" /> 能够创建的数据类型组成的数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.UpdatePanelTriggerCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的服务提供程序和上下文编辑指定对象的值。</summary>
      <returns>新的对象值。</returns>
      <param name="context">提供其他上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="provider">提供编辑服务的服务提供程序对象。</param>
      <param name="value">将编辑其值的对象。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter">
      <summary>提供检索当前容器中控件 ID 的列表的类型转换器。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>为指定的格式上下文返回 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 对象内的容器中控件 ID 的集合。</summary>
      <returns>一个字符串集合，表示当前容器中各控件的控件 ID。 如果该容器当前不包含任何控件，则此方法将返回一个空集合。 如果上下文为 null 或者没有当前容器，则此方法将返回 null。</returns>
      <param name="context">一个上下文，可用于获取有关从中调用此转换器的环境的更多信息。 此参数及其属性可以为 null。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回一个值，该值指示从 <see cref="M:System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> 返回的标准值集合对于指定的上下文而言是否是排他的可能值列表。</summary>
      <returns>如果从 <see cref="M:System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> 返回的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 是排他的可能值列表，则为 true；如果还可能有其他值，则为 false。 默认值为 false。</returns>
      <param name="context">格式上下文。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回一个值，该值指示此转换器是否支持可从列表中选择的一组控件 ID 值。</summary>
      <returns>如果应调用 <see cref="M:System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> 来查找此对象支持的一组公共的控件 ID 值，则为 true；否则为 false。 默认值为 true。</returns>
      <param name="context">格式上下文。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Web.UI.Design.UpdateProgressDesigner">
      <summary>为可视化设计器中的 <see cref="T:System.Web.UI.UpdateProgress" /> 控件提供设计时支持。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.UpdateProgressDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.UpdateProgressDesigner" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.UpdateProgressDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>返回 HTML 标记以显示 <see cref="T:System.Web.UI.UpdateProgress" /> 控件并使用当前控件设计器区域填充集合。</summary>
      <returns>关联控件（包括所有控件设计器区域）的设计时 HTML 标记。</returns>
      <param name="regions">一个包含关联控件的控件设计器区域的对象。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.UpdateProgressDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回 <see cref="T:System.Web.UI.UpdateProgress" /> 控件设计时视图中可编辑区域的内容。</summary>
      <returns>用于在设计时呈现关联 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的模板的序列化副本。</returns>
      <param name="region">要获取其内容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.UpdateProgressDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>指定控件的可编辑区域在设计时的内容。</summary>
      <param name="region">一个对象，它提供要更新的区域的名称。</param>
      <param name="content">关联控件的序列化模板。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.UpdateProgressDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataPagerDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件提供设计时支持。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataPagerDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataPagerDesigner" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataPagerDesigner.ActionLists">
      <summary>获取一个项列表，这些项用来创建关联的 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的智能标记面板。</summary>
      <returns>一个项列表，这些项用来创建关联<see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的智能标记面板。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataPagerDesigner.GetDesignTimeHtml">
      <summary>生成用于在设计时呈现关联的 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的 HTML 标记。</summary>
      <returns>用于在设计时呈现关联的 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的 HTML 标记。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataPagerDesigner.GetEmptyDesignTimeHtml">
      <summary>生成 HTML 标记，该标记在设计时表示在运行时不具有可视化表示形式的 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件。</summary>
      <returns>在设计时表示空的 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataPagerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化控件设计器并加载指定的控件。</summary>
      <param name="component">正在设计的控件。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataPagerDesigner.PagedControlID">
      <summary>获取或设置一个值，该值指示 <see cref="P:System.Web.UI.WebControls.DataPager.PagedControlID" /> 属性的设计器版本。</summary>
      <returns>
        <see cref="P:System.Web.UI.WebControls.DataPager.PagedControlID" /> 属性的值。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataPagerDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>在 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的属性网格中添加或移除属性。</summary>
      <param name="properties">一个集合，包含在设计时在 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的属性网格中公开的属性。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataPagerDesigner.TemplateGroups">
      <summary>获取关联的 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的模板化页导航字段的模板组集合。</summary>
      <returns>关联的 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的模板化页导航字段的模板组集合。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataPagerDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用与其关联的 <see cref="T:System.Web.UI.WebControls.DataPager" /> 控件的临时副本而不是实际控件来生成设计时标记。</summary>
      <returns>任何情况下都为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataPagerFieldTypeEditor">
      <summary>提供 <see cref="T:System.Web.UI.WebControls.DataPager" /> 字段的可视化编辑器。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataPagerFieldTypeEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataPagerFieldTypeEditor" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataPagerFieldTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用由 <see cref="Overload:System.Web.UI.Design.WebControls.DataPagerFieldTypeEditor.GetEditStyle" /> 方法指示的样式来显示可视化编辑器，以更新 <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> 属性。</summary>
      <returns>新的对象值。</returns>
      <param name="context">有关设计环境的上下文信息。</param>
      <param name="provider">对关联设计器的引用。</param>
      <param name="value">要编辑的对象。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataPagerFieldTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取编辑器将使用的样式。</summary>
      <returns>枚举值之一，它指示编辑器将使用的样式的类型。</returns>
      <param name="context">有关设计环境的上下文信息。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LinqDataSourceDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件提供设计时支持。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LinqDataSourceDesigner" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.ActionLists">
      <summary>获取项的列表，其中的项用来在设计时创建操作列表菜单。</summary>
      <returns>包含操作列表项的集合。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.CanConfigure">
      <summary>获取一个值，该值指示 <see cref="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Configure" /> 方法是否可被设计宿主调用。</summary>
      <returns>如果可以调用 <see cref="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Configure" /> 方法，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示 <see cref="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法是否可被设计宿主调用。</summary>
      <returns>如果可以调用 <see cref="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Configure">
      <summary>在设计宿主中启动数据源配置向导。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.ContextTypeName">
      <summary>获取或设置包含属性（其值包含要检索的数据）的类型的名称。</summary>
      <returns>要从中检索数据的类的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Delete">
      <summary>获取或设置删除操作的值。</summary>
      <returns>null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.EnableDelete">
      <summary>获取或设置一个值，该值指示是否可以在运行时从数据源中删除行。</summary>
      <returns>如果为关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 实例的用户启用了删除操作，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.EnableInsert">
      <summary>获取或设置一个值，该值指示是否可以在运行时向数据源中插入行。</summary>
      <returns>如果为关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 实例的用户启用了插入操作，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.EnableUpdate">
      <summary>获取或设置一个值，该值指示是否可以在运行时更新数据源中的行。</summary>
      <returns>如果为关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 实例的用户启用了更新操作，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.GetView(System.String)">
      <summary>返回具有指定名称的数据源视图。</summary>
      <returns>一个具有由 <paramref name="viewName" /> 指定的名称的对象；否则为 null。</returns>
      <param name="viewName">要返回的视图的名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.GetViewNames">
      <summary>获取可用视图的列表。</summary>
      <returns>具有一个包含名称“DefaultView”的元素的集合。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.GroupBy">
      <summary>获取或设置在创建 Group By 子句时使用的值。</summary>
      <returns>一个字符串，其中包含用于数据分组的属性。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化控件设计器并加载指定的组件。</summary>
      <param name="component">要初始化的对象。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Insert">
      <summary>获取或设置删除操作的值。</summary>
      <returns>null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.OrderBy">
      <summary>获取或设置在创建 Order By 子句时使用的值。</summary>
      <returns>一个字符串，其中包含用于数据排序的属性。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.OrderGroupsBy">
      <summary>获取或设置在创建 Order Groups By 子句时使用的值。</summary>
      <returns>一个字符串，其中包含用于排序分组数据的属性。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>由设计器用来在属性网格中添加或移除属性。</summary>
      <param name="properties">要筛选的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>刷新基础数据源的架构。</summary>
      <param name="preferSilent">true 表示取消所有数据源事件，直到刷新架构为止。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Select">
      <summary>获取或设置包含用于选择操作的值的字符串。</summary>
      <returns>一个在创建 Select 子句时使用的字符串。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.ServiceProvider">
      <summary>获取与 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 实例关联的服务提供程序。</summary>
      <returns>一个表示服务提供程序的对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.TableName">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 实例的 <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> 属性。</summary>
      <returns>包含数据的类的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Update">
      <summary>获取 Update 操作的值。</summary>
      <returns>null.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDataSourceDesigner.Where">
      <summary>获取或设置 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件的 <see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /> 属性。</summary>
      <returns>
        <see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /> 属性的值。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LinqDesignerDataSourceView">
      <summary>为 <see cref="T:System.Web.UI.Design.WebControls.LinqDataSourceDesigner" /> 类提供数据的设计时视图。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LinqDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.LinqDataSourceDesigner)">
      <summary>使用提供的数据源设计器和视图名称初始化 <see cref="T:System.Web.UI.Design.WebControls.LinqDesignerDataSourceView" /> 类的新实例。</summary>
      <param name="owner">父 <see cref="T:System.Web.UI.Design.WebControls.LinqDataSourceDesigner" /> 对象。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDesignerDataSourceView.CanDelete">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 对象是否支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法。</summary>
      <returns>如果支持 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDesignerDataSourceView.CanInsert">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 对象是否支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> 方法。</summary>
      <returns>如果支持 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> 方法，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDesignerDataSourceView.CanPage">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 对象是否支持对由 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法检索的数据进行分页。</summary>
      <returns>如果支持对由 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法检索的数据进行分页，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDesignerDataSourceView.CanSort">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 对象是否支持基础数据源的排序视图。</summary>
      <returns>如果支持基础数据源的排序视图，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDesignerDataSourceView.CanUpdate">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> 对象是否支持 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法。</summary>
      <returns>如果支持 <see cref="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LinqDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>使用指定的行数，获取与关联数据源控件的与架构相匹配的设计时数据。 返回一个值，该值指示数据是示例数据还是真实数据。</summary>
      <returns>要在设计时显示的数据。</returns>
      <param name="minimumRows">要返回的最小行数。</param>
      <param name="isSampleData">true 指示返回的数据为示例数据；false 指示返回的数据为实时数据。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDesignerDataSourceView.IsDataContext">
      <summary>获取一个值，该值指示 <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.ContextType" /> 属性是否包含从 <see cref="T:System.Data.Linq.DataContext" /> 派生的对象。</summary>
      <returns>如果 <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.ContextType" /> 属性中的对象是从 <see cref="T:System.Data.Linq.DataContext" /> 派生的，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDesignerDataSourceView.IsTableTypeTable">
      <summary>获取一个值，该值指示 <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.TableName" /> 属性是否返回 <see cref="T:System.Data.Linq.Table`1" /> 类型。</summary>
      <returns>如果 <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.TableName" /> 属性返回 <see cref="T:System.Data.Linq.Table`1" /> 类型，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LinqDesignerDataSourceView.Schema">
      <summary>获取描述由当前视图对象表示的数据源视图的架构。</summary>
      <returns>一个表示该架构的对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListViewDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件提供设计时支持。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListViewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ListViewDesigner" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListViewDesigner.ActionLists">
      <summary>获取一个项列表，这些项用来创建 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的智能标记面板。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListViewDesigner.GetDesignTimeHtml">
      <summary>生成用于在设计时呈现关联的 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的 HTML 标记。</summary>
      <returns>用于在设计时呈现关联的 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的 HTML 标记。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>生成用于在设计器呈现关联的 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的 HTML 标记，并用当前选定的设计器区域填充指定集合。</summary>
      <returns>用于在设计时呈现关联的 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的 HTML 标记。</returns>
      <param name="regions">关联的 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的设计器区域集合。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回关联的 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件设计时视图中的指定可编辑区域的内容。</summary>
      <returns>区域的 HTML 标记。</returns>
      <param name="region">要为其获取内容的区域。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListViewDesigner.GetEmptyDesignTimeHtml">
      <summary>生成 HTML 标记，该标记在设计时表示在运行时不具有可视化表示形式的 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件。</summary>
      <returns>在设计时表示 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化控件设计器并加载指定的控件。</summary>
      <param name="component">正在设计的控件。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListViewDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>在关联控件更改时发生。</summary>
      <param name="sender">事件源。</param>
      <param name="ce">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListViewDesigner.OnSchemaRefreshed">
      <summary>在 HTML 设计器中刷新数据源架构时，防止 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件更新。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListViewDesigner.SampleRowCount">
      <summary>获取 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件在设计图面上显示的记录的数量。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件在设计图面上显示的记录的数量。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>指定 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的可编辑区域在设计时的内容。</summary>
      <param name="region">
        <see cref="T:System.Web.UI.WebControls.ListView" /> 控件内包含的可编辑设计区域。</param>
      <param name="content">要为可编辑设计区域分配的内容。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListViewDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用与其关联的 <see cref="T:System.Web.UI.WebControls.ListView" /> 控件的临时副本而不是实际控件来生成设计时标记。</summary>
      <returns>任何情况下都为 true。</returns>
    </member>
  </members>
</doc>