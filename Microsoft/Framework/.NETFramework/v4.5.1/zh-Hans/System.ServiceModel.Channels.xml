<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel.Channels</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.UdpBinding">
      <summary>表示 UDP 绑定。</summary>
    </member>
    <member name="M:System.ServiceModel.UdpBinding.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.UdpBinding" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ServiceModel.UdpBinding.#ctor(System.String)">
      <summary>使用指定配置名称初始化 <see cref="T:System.ServiceModel.UdpBinding" /> 类的新实例。</summary>
      <param name="configurationName">配置名称。</param>
    </member>
    <member name="M:System.ServiceModel.UdpBinding.CreateBindingElements">
      <summary>创建一个绑定元素集合。</summary>
      <returns>一个绑定元素集合。</returns>
    </member>
    <member name="P:System.ServiceModel.UdpBinding.DuplicateMessageHistoryLength">
      <summary>获取或设置 UDP 绑定元素中重复的消息历史记录长度的值。</summary>
      <returns>要表示重复消息的绑定所使用的最大消息哈希数。</returns>
    </member>
    <member name="P:System.ServiceModel.UdpBinding.MaxBufferPoolSize">
      <summary>获取或设置与绑定关联的最大缓冲池的大小。</summary>
      <returns>一个指示缓冲池大小的数字。</returns>
    </member>
    <member name="P:System.ServiceModel.UdpBinding.MaxPendingMessagesTotalSize">
      <summary>获取或设置已接收但尚未从每个通道实例的输入队列中移除的消息的最大数目。</summary>
      <returns>最大挂起消息数。</returns>
    </member>
    <member name="P:System.ServiceModel.UdpBinding.MaxReceivedMessageSize">
      <summary>获取或设置绑定可处理的消息的最大大小。</summary>
      <returns>绑定可处理的消息的最大大小。</returns>
    </member>
    <member name="P:System.ServiceModel.UdpBinding.MaxRetransmitCount">
      <summary>获取或设置 UDP 绑定中最大重新传输消息的数量。</summary>
      <returns>在 UDP 绑定中的重传消息的最大数目。</returns>
    </member>
    <member name="P:System.ServiceModel.UdpBinding.MulticastInterfaceId">
      <summary>获取或设置 UDP 绑定中的 MulticastInterfaceID 属性的值。</summary>
      <returns>在多宿主计算机上发送和接收多播消息时所使用的网络适配器。</returns>
    </member>
    <member name="P:System.ServiceModel.UdpBinding.ReaderQuotas">
      <summary>获取或设置读取器配额。</summary>
      <returns>读取器配额。</returns>
    </member>
    <member name="P:System.ServiceModel.UdpBinding.Scheme">
      <summary>获取此绑定的方案名称。</summary>
      <returns>此绑定的方案名称。</returns>
    </member>
    <member name="M:System.ServiceModel.UdpBinding.ShouldSerializeReaderQuotas">
      <summary>返回一个值，该值指示是否应序列化 ReaderQuotas 属性。</summary>
      <returns>如果应序列化 ReaderQuotas，则为 True；否则为 false。</returns>
    </member>
    <member name="M:System.ServiceModel.UdpBinding.ShouldSerializeTextEncoding">
      <summary>返回是否应对文本编码设置进行序列化。</summary>
      <returns>如果应对文本编码的这些设置进行序列化，则为 True，否则，为 false。</returns>
    </member>
    <member name="P:System.ServiceModel.UdpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>获取一个值，该值指示是同步处理传入请求还是异步处理传入请求。</summary>
      <returns>如果同步处理传入的请求，则为 True；否则为 false。</returns>
    </member>
    <member name="P:System.ServiceModel.UdpBinding.TextEncoding">
      <summary>获取或设置用于绑定的文本编码。</summary>
      <returns>文本编码。</returns>
    </member>
    <member name="P:System.ServiceModel.UdpBinding.TimeToLive">
      <summary>获取或设置 UDP 绑定内的 TimeToLive 属性值。</summary>
      <returns>多播数据包可以遍历的网络段跃点数。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ByteStreamMessage">
      <summary>表示字节流消息。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessage.CreateMessage(System.ArraySegment{System.Byte})">
      <summary>使用指定的缓冲区数据创建字节流消息。</summary>
      <returns>所创建消息的 <see cref="T:System.ServiceModel.Channels.Message" /> 对象。</returns>
      <param name="buffer">为即将创建的消息提供数据的缓冲区。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessage.CreateMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>使用指定的缓冲区数据和缓冲区管理程序，创建字节流消息。</summary>
      <returns>所创建消息的 <see cref="T:System.ServiceModel.Channels.Message" /> 对象。</returns>
      <param name="buffer">为即将创建的消息提供数据的缓冲区。</param>
      <param name="bufferManager">
        <see cref="T:System.ServiceModel.Channels.BufferManager" /> 管理将消息创建的缓冲区。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessage.CreateMessage(System.IO.Stream)">
      <summary>使用指定流创建字节流消息。</summary>
      <returns>所创建消息的 <see cref="T:System.ServiceModel.Channels.Message" /> 对象。</returns>
      <param name="stream">用于创建消息的流。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement">
      <summary>绑定元素，它可指定消息编码作为字节流，也可以选择指定字符编码。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.#ctor(System.Xml.XmlDictionaryReaderQuotas)">
      <summary>使用指定的配额初始化 <see cref="T:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement" /> 类的新实例。</summary>
      <param name="quota">XML 消息的复杂性约束，这些消息可由采用此绑定元素配置的终结点进行处理。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>在客户端上生成通道工厂堆栈，该通道工厂堆栈可为指定上下文创建指定类型的通道。</summary>
      <returns>用于指定上下文的 <paramref name="TChannel" /> 类型的通道工厂。</returns>
      <param name="context">通道的绑定上下文。</param>
      <typeparam name="TChannel">通道工厂生成的通道类型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>在服务上生成通道侦听器，以接受指定上下文的指定类型通道。</summary>
      <returns>用于指定上下文的 <paramref name="TChannel" /> 类型的通道侦听器。</returns>
      <param name="context">侦听器的绑定上下文。</param>
      <typeparam name="TChannel">通道侦听器接受的通道类型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>返回一个值，该值指示当前绑定是否可以为指定的通道类型和上下文生成工厂。</summary>
      <returns>如果可以在服务上生成指定的通道工厂堆栈，则为 true；否则为 false。</returns>
      <param name="context">通道的绑定上下文。</param>
      <typeparam name="TChannel">通道工厂生成的通道类型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>返回一个值，该值指示当前绑定是否可以为指定的通道类型和上下文生成侦听器。</summary>
      <returns>如果可以在服务上生成指定的通道侦听器堆栈，则为 true；否则为 false。</returns>
      <param name="context">侦听器的绑定上下文。</param>
      <typeparam name="TChannel">通道侦听器接受的通道类型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.Clone">
      <summary>创建一个从当前对象初始化的新 <see cref="T:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement" /> 对象。</summary>
      <returns>一个绑定元素，其属性值等于当前元素的属性值。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>为字节流消息编码器创建一个工厂，这些编码器利用 SOAP 和 WS-Addressing 版本以及当前编码绑定元素指定的字符编码。</summary>
      <returns>此绑定元素创建的消息编码器工厂。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.MessageVersion">
      <summary>获取或设置使用的或预期的 SOAP 消息和 WS-Addressing 版本。</summary>
      <returns>使用的或预期的消息版本。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.ReaderQuotas">
      <summary>获取或设置可由配置了此绑定元素的终结点处理的 XML 消息的复杂性约束。</summary>
      <returns>对交换的 SOAP 消息的复杂性约束。 下面的备注部分中提供了这些约束的默认值。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.ShouldSerializeMessageVersion">
      <summary>返回一个值，该值指示 <see cref="P:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.MessageVersion" /> 属性是否已更改（不再是默认值）而且应进行序列化。</summary>
      <returns>false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.ShouldSerializeReaderQuotas">
      <summary>返回一个值，该值指示 <see cref="P:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.ReaderQuotas" /> 属性是否已更改（不再是默认值）而且应进行序列化。</summary>
      <returns>如果应当将 <see cref="P:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement.ReaderQuotas" /> 属性值序列化，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpRequestMessageExtensionMethods.ToMessage(System.Net.Http.HttpRequestMessage)">
      <summary>通过 <see cref="T:System.Net.Http.HttpRequestMessage" /> 实例创建 <see cref="T:System.ServiceModel.Channels.Message" /> 实例。</summary>
      <returns>新的 <see cref="T:System.ServiceModel.Channels.Message" /> 实例。</returns>
      <param name="httpRequestMessage">从中创建 <see cref="T:System.ServiceModel.Channels.Message" /> 实例的 <see cref="T:System.Net.Http.HttpRequestMessage" />。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpResponseMessageExtensionMethods">
      <summary>一种静态扩展方法类，用于从一个 <see cref="T:System.Net.Http.HttpResponseMessage" /> 实例中获取一个 <see cref="T:System.ServiceModel.Channels.Message" /> 实例。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpResponseMessageExtensionMethods.ToMessage(System.Net.Http.HttpResponseMessage)">
      <summary>通过 <see cref="T:System.Net.Http.HttpResponseMessage" /> 实例创建 <see cref="T:System.ServiceModel.Channels.Message" /> 实例。</summary>
      <returns>新的 <see cref="T:System.ServiceModel.Channels.Message" /> 实例。</returns>
      <param name="httpResponseMessage">从中创建 <see cref="T:System.ServiceModel.Channels.Message" /> 实例的 <see cref="T:System.Net.Http.HttpResponseMessage" />。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageExtensionMethods">
      <summary>用于从 <see cref="T:System.ServiceModel.Channels.Message" /> 实例中获取<see cref="T:System.Net.Http.HttpRequestMessage" /> 或 <see cref="T:System.Net.Http.HttpResponseMessage" /> 实例的静止引伸方法类。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageExtensionMethods.ToHttpRequestMessage(System.ServiceModel.Channels.Message)">
      <summary>通过 <see cref="T:System.ServiceModel.Channels.Message" /> 实例创建 <see cref="T:System.Net.Http.HttpRequestMessage" /> 实例。</summary>
      <returns>
        <see cref="T:System.Net.Http.HttpRequestMessage" /> 实例。</returns>
      <param name="message">要从其中获取 <see cref="T:System.Net.Http.HttpRequestMessage" /> 实例的 <see cref="T:System.ServiceModel.Channels.Message" /> 实例。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageExtensionMethods.ToHttpResponseMessage(System.ServiceModel.Channels.Message)">
      <summary>通过 <see cref="T:System.ServiceModel.Channels.Message" /> 实例创建 <see cref="T:System.Net.Http.HttpResponseMessage" /> 实例。</summary>
      <returns>
        <see cref="T:System.Net.Http.HttpResponseMessage" /> 实例。</returns>
      <param name="message">要从其中获取 <see cref="T:System.Net.Http.HttpResponseMessage" /> 实例的 <see cref="T:System.ServiceModel.Channels.Message" /> 实例。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.NetworkInterfaceMessageProperty">
      <summary>表示网络接口消息属性。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.NetworkInterfaceMessageProperty.#ctor(System.Int32)">
      <summary>使用指定 interfaceIndex 初始化 <see cref="T:System.ServiceModel.Channels.NetworkInterfaceMessageProperty" /> 类的新实例。</summary>
      <param name="interfaceIndex">指定的接口索引。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.NetworkInterfaceMessageProperty.AddTo(System.ServiceModel.Channels.Message)">
      <summary>指定消息以加入到消息属性。</summary>
      <param name="message">要添加的消息。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.NetworkInterfaceMessageProperty.AddTo(System.ServiceModel.Channels.MessageProperties)">
      <summary>指定加入到消息属性的属性。</summary>
      <param name="properties">要添加的属性。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.NetworkInterfaceMessageProperty.InterfaceIndex">
      <summary>获取为消息属性指定接口索引的值。</summary>
      <returns>为消息属性指定接口索引的值。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.NetworkInterfaceMessageProperty.Name">
      <summary>获取用于网络接口消息属性的指定名称。</summary>
      <returns>用于网络接口消息属性的指定名称。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.NetworkInterfaceMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.NetworkInterfaceMessageProperty@)">
      <summary>尝试从指定消息的属性获取 NetworkInterfaceMessageProperty。</summary>
      <returns>如果从该消息中获取 NetworkInterfaceMessageproperty 的值，则为 True， 否则为 false。</returns>
      <param name="message">从中检索网络接口消息属性的消息 。</param>
      <param name="property">方法返回 true， “networkInterfaceMessageProperty” 包含一个与消息关联的 “NetworkInterfaceMessageProperty”。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.NetworkInterfaceMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.NetworkInterfaceMessageProperty@)">
      <summary>尝试从消息属性的指定集合获取 NetworkInterfaceMessageProperty。</summary>
      <returns>如果从这些属性中获取 NetworkInterfaceMessageproperty 的值，则为 True， 否则为 false。</returns>
      <param name="properties">从中检索网络接口消息属性的“消息属性”“。</param>
      <param name="property">方法返回 true， “networkInterfaceMessageProperty” 包含一个与属性关联的 “NetworkInterfaceMessageProperty”。</param>
    </member>
    <member name="T:System.ServiceModel.Channels.UdpRetransmissionSettings">
      <summary>指定 UDP 重新传输设置。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpRetransmissionSettings.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.UdpRetransmissionSettings" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpRetransmissionSettings.#ctor(System.Int32,System.Int32)">
      <summary>用指定的重新传输单播的最大计数和重新传输多播的最大计数初始化  <see cref="T:System.ServiceModel.Channels.UdpRetransmissionSettings" />  类的新实例。</summary>
      <param name="maxUnicastRetransmitCount">多播重传计数最大值。</param>
      <param name="maxMulticastRetransmitCount">最大多播重传计数。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpRetransmissionSettings.#ctor(System.Int32,System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
      <summary>用指定的重新传输单播的最大计数和重新传播多播的最大计数、延迟下限、延迟上限和每次重新传输的最大延迟初始化<see cref="T:System.ServiceModel.Channels.UdpRetransmissionSettings" /> 类的新实例。</summary>
      <param name="maxUnicastRetransmitCount">多播重传计数最大值。</param>
      <param name="maxMulticastRetransmitCount">最大多播重传计数。</param>
      <param name="delayLowerBound">下界延迟。</param>
      <param name="delayUpperBound">上限值延迟。</param>
      <param name="maxDelayPerRetransmission">每次重发的最大延迟。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.UdpRetransmissionSettings.DelayLowerBound">
      <summary>获取或设置重新传输设置的下限绑定延迟。</summary>
      <returns>UDP 重新传输设置的下限延迟。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.UdpRetransmissionSettings.DelayUpperBound">
      <summary>获取或设置重新传输设置的上限绑定延迟。</summary>
      <returns>UDP 重新传输设置的上限延迟。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.UdpRetransmissionSettings.MaxDelayPerRetransmission">
      <summary>获取或设置重新传输设置的每重新传输的最大延迟。</summary>
      <returns>用于重发设置的每次重发的最大延迟。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.UdpRetransmissionSettings.MaxMulticastRetransmitCount">
      <summary>获取或设置最大多播重新传输计数。</summary>
      <returns>最大多播重发计数。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.UdpRetransmissionSettings.MaxUnicastRetransmitCount">
      <summary>获取或设置最大单播重新传输计数。</summary>
      <returns>多播重发计数最大值。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpRetransmissionSettings.ShouldSerializeDelayLowerBound">
      <summary>指示 UDP 重新传输设置是否应序列化更低绑定延迟。</summary>
      <returns>如果 UDP 重新传输设置应序列化更低绑定延迟，则为 True；否则为 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpRetransmissionSettings.ShouldSerializeDelayUpperBound">
      <summary>指示 UDP 重新传输设置是否应序列化更高绑定延迟。</summary>
      <returns>如果 UDP 重新传输设置应序列化更高绑定延迟，则为 True；否则为 false。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpRetransmissionSettings.ShouldSerializeMaxDelayPerRetransmission">
      <summary>指示 UDP 重新传输设置是否应序列化每次重新传输的最大延迟。</summary>
      <returns>如果 UDP 重新传输设置应序列化每次重新传输的最大延迟，则为 True；否则为 false。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.UdpTransportBindingElement">
      <summary>表示网络 UDP transport 绑定元素。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportBindingElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.UdpTransportBindingElement" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>初始化通道工厂，用于生成来自绑定上下文中指定类型的通道。</summary>
      <returns>类型 <paramref name="TChannel" /> 的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />（从上下文中初始化）。</returns>
      <param name="context">为绑定元素提供上下文的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="TChannel">工厂生成的通道类型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>初始化通道侦听器，用于接受绑定上下文中指定类型的通道。</summary>
      <returns>类型 <paramref name="TChannel" /> 的 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" />（从上下文中初始化）。</returns>
      <param name="context">为绑定元素提供上下文的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="TChannel">生成侦听器以接受的通道类型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>返回一个值，该值指示绑定元素是否可以为特定的通道类型生成通道工厂。</summary>
      <returns>如果绑定元素可以生成类型为 <paramref name="TChannel" /> 的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />，则为 true；否则为 false。</returns>
      <param name="context">提供上下文给绑定元素的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="TChannel">通道工厂生成的通道类型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>返回一个值，该值指示绑定元素是否可以为特定类型的通道生成侦听器。</summary>
      <returns>如果绑定元素可以生成类型为 <paramref name="TChannel" /> 的 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" />，则为 true；否则为 false。</returns>
      <param name="context">提供上下文给绑定元素的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</param>
      <typeparam name="TChannel">侦听器接受的通道类型。</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportBindingElement.Clone">
      <summary>返回绑定元素对象的副本。</summary>
      <returns>一个 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 对象，它是原始绑定元素对象的深层克隆。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.UdpTransportBindingElement.DuplicateMessageHistoryLength">
      <summary>获取或设置要表示重复消息的绑定所使用的最大消息哈希数。</summary>
      <returns>要表示重复消息的绑定所使用的最大消息哈希数。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>从指定的绑定上下文中返回一个属性。</summary>
      <returns>指定绑定上下文中的属性。</returns>
      <param name="context">绑定上下文。</param>
      <typeparam name="T">要获取的属性的类型。</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.UdpTransportBindingElement.MaxPendingMessagesTotalSize">
      <summary>获取或设置已接收但尚未从每个通道实例的输入队列中移除的消息的最大数目。</summary>
      <returns>已接收但尚未从每个通道实例的输入队列中移除的消息的最大数目。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.UdpTransportBindingElement.MulticastInterfaceId">
      <summary>获取或设置在多宿主计算机上发送和接收多播消息时所使用的网络适配器。</summary>
      <returns>在多宿主计算机上发送和接收多播消息时所使用的网络适配器。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.UdpTransportBindingElement.RetransmissionSettings">
      <summary>获取或设置 UDP 重新传输设置。</summary>
      <returns>UDP 重新传输设置。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.UdpTransportBindingElement.Scheme">
      <summary>获取传输的 URI 方案。</summary>
      <returns>传输的 URI 方案。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportBindingElement.ShouldSerializeRetransmissionSettings">
      <summary>指示是否应序列化绑定元素的重新传输设置。</summary>
      <returns>如果应序列化绑定元素的重新传输设置，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.UdpTransportBindingElement.SocketReceiveBufferSize">
      <summary>获取或设置基础 WinSock 套接字上的接收缓冲区的大小。</summary>
      <returns>基础套接字上的接收缓冲区大小。</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>将一自定义策略断言写入到绑定元素的上下文中。</summary>
      <param name="exporter">可导出元数据信息的对象。</param>
      <param name="context">能用来插入自定义策略断言的 <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>为协定将一自定义 Web 服务描述语言 (WSDL) 元素写入到生成的 WSDL 中。</summary>
      <param name="exporter">可导出协定信息的对象。</param>
      <param name="context">该上下文，该对象提供从导出的 WSDL 元素到协定说明的映射。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>为终结点将自定义 Web 服务描述语言 (WSDL) 元素添加到生成的 WSDL 中。</summary>
      <param name="exporter">可导出协定信息的对象。</param>
      <param name="context">该上下文，它提供从导出的 WSDL 元素到终结点说明的映射。</param>
    </member>
    <member name="P:System.ServiceModel.Channels.UdpTransportBindingElement.TimeToLive">
      <summary>获取或设置网络段跃点数。</summary>
      <returns>网络段跃点数。</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.UdpTransportImporter">
      <summary>表示网络 UDP transport 导入程序。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportImporter.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Channels.UdpTransportImporter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportImporter.BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>表示在导入元数据文档前传输 UDP。</summary>
      <param name="wsdlDocuments">WSDL 文档。</param>
      <param name="xmlSchemas">XML 架构。</param>
      <param name="policy">策略。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportImporter.ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>将协定导入 UDP 传输导入程序。</summary>
      <param name="importer">WSDL 导入程序。</param>
      <param name="context">上下文。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportImporter.ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>将终结点导入 UDP 传输导入程序。</summary>
      <param name="importer">WSDL 导入程序。</param>
      <param name="context">上下文。</param>
    </member>
    <member name="M:System.ServiceModel.Channels.UdpTransportImporter.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>将策略导入 UDP 传输导入程序。</summary>
      <param name="importer">WSDL 导入程序。</param>
      <param name="context">上下文。</param>
    </member>
    <member name="T:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement">
      <summary>启用配置元素的构造，该配置元素定义字节流消息编码元素的设置。</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>将指定绑定元素的内容应用到当前的 <see cref="T:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement" /> 对象。</summary>
      <param name="bindingElement">要将其设置应用到此配置元素的绑定元素。</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement.BindingElementType">
      <summary>获取 <see cref="T:System.ServiceModel.Channels.ByteStreamMessageEncodingBindingElement" /> 的类型。</summary>
      <returns>配置元素类型。</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>将来自指定配置节的内容复制到当前的 <see cref="T:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement" /> 对象。</summary>
      <param name="from">所复制的内容。</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.ByteStreamMessageEncodingElement.ReaderQuotas">
      <summary>获取一个 <see cref="T:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement" /> 配置元素，该配置元素针对可由配置了此编码的终结点处理的 SOAP 消息的复杂性定义一些约束。</summary>
      <returns>一个配置元素。</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.UdpBindingCollectionElement">
      <summary>表示绑定集合元素的 UDP。</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.UdpBindingCollectionElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Configuration.UdpBindingCollectionElement" /> 类的新实例。</summary>
    </member>
    <member name="T:System.ServiceModel.Configuration.UdpBindingElement">
      <summary>表示 UDP 绑定元素。</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.UdpBindingElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Configuration.UdpBindingElement" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.UdpBindingElement.#ctor(System.String)">
      <summary>用指定的名称初始化 <see cref="T:System.ServiceModel.Configuration.UdpBindingElement" /> 类的新实例。</summary>
      <param name="name">名称。</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpBindingElement.BindingElementType">
      <summary>获取绑定的类型。</summary>
      <returns>绑定的类型。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpBindingElement.DuplicateMessageHistoryLength">
      <summary>获取或设置 UDP 传输配置元素中使用的最大数量的消息哈希值。</summary>
      <returns>用于消息哈希的最大数目值。</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.UdpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>使用指定绑定的内容初始化此绑定配置元素。</summary>
      <param name="binding">要使用的绑定。</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpBindingElement.MaxBufferPoolSize">
      <summary>获取或设置传输使用的任何缓冲池的最大大小。</summary>
      <returns>任意使用的缓冲池的最大值尺寸。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpBindingElement.MaxPendingMessagesTotalSize">
      <summary>获取或设置指定已经接收但尚未从 UDP 绑定元素的属性中移除的消息的总大小的值。</summary>
      <returns>挂起消息的总大小。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpBindingElement.MaxReceivedMessageSize">
      <summary>获取或设置 UDP 绑定元素中接收的最大消息大小属性的值。</summary>
      <returns>接收消息最大大小属性的值。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpBindingElement.MaxRetransmitCount">
      <summary>获取或设置 UDP 绑定元素的最大重新传输计数。</summary>
      <returns>重传计数最大值。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpBindingElement.MulticastInterfaceId">
      <summary>获取或设置 UDP 绑定元素中使用的网络适配器的值。</summary>
      <returns>使用 UDP 绑定元素网络适配器的值。</returns>
    </member>
    <member name="M:System.ServiceModel.Configuration.UdpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>将指定的绑定应用于 <see cref="T:System.ServiceModel.Configuration.UdpBindingElement" /> 实例。</summary>
      <param name="binding">要应用的绑定。</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpBindingElement.Properties">
      <summary>获取与此 UDP binding 元素关联的属性。</summary>
      <returns>与 UDP 绑定元素相关的属性。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpBindingElement.ReaderQuotas">
      <summary>获取在 UDP 绑定元素中使用的读取器配额。</summary>
      <returns>在 UDP 绑定元素中使用的读取器配额。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpBindingElement.TextEncoding">
      <summary>获取或设置 UDP 绑定元素中使用的文本编码。</summary>
      <returns>使用 UDP 绑定元素的文本内码。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpBindingElement.TimeToLive">
      <summary>获取或设置 UDP 绑定元素的活动时间。</summary>
      <returns>UDP 绑定元素的生存时间。</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.UdpRetransmissionSettingsElement">
      <summary>表示 UDP 重新传输设置元素。</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.UdpRetransmissionSettingsElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Configuration.UdpRetransmissionSettingsElement" /> 类的新实例。</summary>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpRetransmissionSettingsElement.DelayLowerBound">
      <summary>获取或设置 UDP 重新传输设置元素的下限绑定延迟。</summary>
      <returns>用于 UDP 重发设置元素的下界延迟。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpRetransmissionSettingsElement.DelayUpperBound">
      <summary>获取或设置 UDP 重新传输设置元素的上限绑定延迟。</summary>
      <returns>UDP 重新传输设置元素的最高接口延迟。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpRetransmissionSettingsElement.MaxDelayPerRetransmission">
      <summary>获取或设置 UDP 重新传输设置元素的每重新传输的最大延迟。</summary>
      <returns>用于 UDP 重发设置元素的最大延迟。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpRetransmissionSettingsElement.MaxMulticastRetransmitCount">
      <summary>获取或设置 UDP 重新传输设置元素的重新传输的最大多播数量。</summary>
      <returns>用于重发的多播的最大数目。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpRetransmissionSettingsElement.MaxUnicastRetransmitCount">
      <summary>获取或设置 UDP 重新传输设置元素的重新传输的最大单播数量。</summary>
      <returns>用于 UDP 重发设置元素重发的单播的最大数目。</returns>
    </member>
    <member name="T:System.ServiceModel.Configuration.UdpTransportElement">
      <summary>表示一个配置元素，该配置元素如果包括在某个自定义绑定中，则会促使某个通道在 UDP 传输上传输消息。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.UdpTransportElement.#ctor">
      <summary>初始化 <see cref="T:System.ServiceModel.Configuration.UdpTransportElement" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ServiceModel.Configuration.UdpTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>将指定的 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 的设置应用到此配置元素。</summary>
      <param name="bindingElement">要将其设置应用到此配置元素的 <see cref="T:System.ServiceModel.Channels.BindingElement" />。</param>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpTransportElement.BindingElementType">
      <summary>获取表示自定义绑定元素的 <see cref="T:System.Type" /> 对象。</summary>
      <returns>一个表示自定义绑定元素的 <see cref="T:System.Type" /> 对象。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpTransportElement.DuplicateMessageHistoryLength">
      <summary>获取或设置 UDP 传输配置元素中使用的最大数量的消息哈希值。</summary>
      <returns>用于消息哈希的最大数目值。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpTransportElement.MaxPendingMessagesTotalSize">
      <summary>获取或设置 UDP 传输元素内的最大接收消息大小属性的值。</summary>
      <returns>绑定可处理的消息的最大大小。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpTransportElement.MulticastInterfaceId">
      <summary>获取或设置一个值，该值唯一地标识在发送和接收多播消息时所使用的网络适配器。</summary>
      <returns>使用 UDP 绑定元素网络适配器的值。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpTransportElement.RetransmissionSettings">
      <summary>获取或设置用于<see cref="T:System.ServiceModel.Configuration.UdpTransportElement" /> 的重新传输设置。</summary>
      <returns>使用的重发设置。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpTransportElement.SocketReceiveBufferSize">
      <summary>获取或设置 UDP 传输元素内的接收缓冲区大小的值。</summary>
      <returns>基础套接字上的接收缓冲区大小。</returns>
    </member>
    <member name="P:System.ServiceModel.Configuration.UdpTransportElement.TimeToLive">
      <summary>获取或设置 UDP 绑定元素的活动时间。</summary>
      <returns>UDP 绑定元素的生存时间。</returns>
    </member>
  </members>
</doc>