<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <summary>为 <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.#ctor(System.ComponentModel.Design.DesignSurface,System.ComponentModel.Design.DesignSurface)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" /> 类的新实例。</summary>
      <param name="oldSurface">正在失活的设计图面。</param>
      <param name="newSurface">正在激活的设计图面。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface">
      <summary>获取正在激活的设计图面。</summary>
      <returns>正在获得激活的 <see cref="T:System.ComponentModel.Design.DesignSurface" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface">
      <summary>获取正在失活的设计图面。</summary>
      <returns>正在失活的 <see cref="T:System.ComponentModel.Design.DesignSurface" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler">
      <summary>表示将要处理 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 的 <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> 事件的方法。 此类不能被继承。</summary>
      <param name="sender">事件的源，即 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />。</param>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ArrayEditor">
      <summary>提供用于在设计时编辑数组的用户界面。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <summary>使用数组的指定数据类型初始化 <see cref="T:System.ComponentModel.Design.ArrayEditor" /> 的新实例。</summary>
      <param name="type">数组项的数据类型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <summary>获取此集合需包含的数据类型。</summary>
      <returns>此 <see cref="T:System.Type" /> 指示集合需包含的数据类型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <summary>获取数组中的项。</summary>
      <returns>此数组包括指定数组中的项。 如果在 <paramref name="editValue" /> 参数中指定的对象不是数组，则将返回新的空对象。</returns>
      <param name="editValue">要从其中检索项的数组。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <summary>设置数组中的项。</summary>
      <returns>新数组的一个实例。 如果由 <paramref name="editValue" /> 参数指定的对象不是数组，则将返回由 <paramref name="editValue" /> 参数指定的对象。</returns>
      <param name="editValue">要将项设置到的数组。</param>
      <param name="value">要设置为数组项的对象的数组。</param>
    </member>
    <member name="T:System.ComponentModel.Design.BinaryEditor">
      <summary>提供用于编辑二进制数据的用户界面。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.BinaryEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的服务提供程序和上下文编辑指定对象的值。</summary>
      <returns>新的对象值。 如果该对象的值尚未更改，则这应返回与传递给它的对象相同的对象。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">可通过其获取编辑服务的服务提供程序对象。</param>
      <param name="value">要编辑其值的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取由 <see cref="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法使用的编辑器样式。</summary>
      <returns>一个指示所提供的编辑样式的 enum 值。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ByteViewer">
      <summary>以十六进制、ANSI 和 Unicode 格式显示字节数组。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ByteViewer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetBytes">
      <summary>获取缓冲区中的字节。</summary>
      <returns>无符号的字节数组引用。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode">
      <summary>获取控件的显示模式。</summary>
      <returns>此控件使用的显示模式。 返回值在 <see cref="T:System.ComponentModel.Design.DisplayMode" /> 中定义。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Forms.Control.Layout" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)">
      <summary>将原始数据从数据缓冲区写入文件。</summary>
      <param name="path">要保存到的文件路径。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> 为空字符串 ("")，只包含空格，或者包含一个或多个无效字符。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的路径无效，比如在未映射的驱动器上。</exception>
      <exception cref="T:System.IO.IOException">文件写入失败。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定的路径、文件名或者两者都超出了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须小于 248 个字符，文件名必须小于 260 个字符。</exception>
      <exception cref="T:System.UnauthorizedAccessException">对于指定的 <paramref name="path" /> 操作系统不允许所请求的访问，比如当访问是 Write 或 ReadWrite 而文件或目录设置为只读访问时。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)">
      <summary>处理 <see cref="T:System.ComponentModel.Design.ByteViewer" /> 控件的 <see cref="T:System.Windows.Forms.ScrollBar" /> 上的 <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" /> 事件。</summary>
      <param name="source">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])">
      <summary>设置要在查看器中显示的字节数组。</summary>
      <param name="bytes">要显示的字节数组。</param>
      <exception cref="T:System.ArgumentNullException">指定的字节数组为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)">
      <summary>设置当前显示模式。</summary>
      <param name="mode">要设置的显示模式。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定的显示数组并非来自 <see cref="T:System.ComponentModel.Design.DisplayMode" /> 枚举。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)">
      <summary>设置要在查看器中显示的文件。</summary>
      <param name="path">要从其中加载的文件路径。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> 为空字符串 ("")，只包含空格，或者包含一个或多个无效字符。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">指定的路径无效，比如在未映射的驱动器上。</exception>
      <exception cref="T:System.IO.IOException">文件加载失败。</exception>
      <exception cref="T:System.IO.PathTooLongException">指定的路径、文件名或者两者都超出了系统定义的最大长度。 例如，在基于 Windows 的平台上，路径必须小于 248 个字符，文件名必须小于 260 个字符。</exception>
      <exception cref="T:System.UnauthorizedAccessException">对于指定的 <paramref name="path" /> 操作系统不允许所请求的访问，比如当访问是 Write 或 ReadWrite 而文件或目录设置为只读访问时。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)">
      <summary>设置 <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> 视图的当前行。</summary>
      <param name="line">开始显示的当前行。</param>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor">
      <summary>提供一个用户界面，该界面可以在设计时编辑大多数类型的集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <summary>使用指定的集合类型初始化 <see cref="T:System.ComponentModel.Design.CollectionEditor" /> 类的新实例。</summary>
      <param name="type">此编辑器要编辑的集合的类型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <summary>取消对集合的更改。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <summary>指示是否可以移除集合的初始成员。</summary>
      <returns>如果允许从集合中移除此值，则为 true；否则，为 false。 默认实现始终返回 true。</returns>
      <param name="value">要移除的值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <summary>指示是否可一次选择多个集合项。</summary>
      <returns>如果可以同时选择多个集合成员，则为 true；否则，为 false。 默认情况下，它将返回 true。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <summary>获取集合中每项的数据类型。</summary>
      <returns>集合项的数据类型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <summary>获取集合对象的数据类型。</summary>
      <returns>集合对象的数据类型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.Context">
      <summary>获取指示当前上下文的类型说明符。</summary>
      <returns>
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，指示当前正在使用的上下文；或者如果没有可用的上下文，则为 null。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <summary>创建新的窗体，以显示和编辑当前集合。</summary>
      <returns>作为用于编辑集合的用户界面提供的 <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <summary>获取此集合包含的数据类型。</summary>
      <returns>集合中项的数据类型，如果对于该集合未找到 Item 属性，则为 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <summary>创建指定的集合项类型的新实例。</summary>
      <returns>指定对象的新实例。</returns>
      <param name="itemType">要创建的项类型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <summary>获取此集合编辑器可包含的数据类型。</summary>
      <returns>此集合可包含的数据类型数组。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <summary>销毁对象的指定实例。</summary>
      <param name="instance">要销毁的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的服务提供程序和上下文编辑指定对象的值。</summary>
      <returns>新的对象值。 如果对象的值尚未更改，则它返回的对象应与传递给它的对象相同。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">服务提供程序对象，通过它可获得编辑服务。</param>
      <param name="value">要编辑其值的对象。</param>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">尝试签出已签入源代码管理程序的文件未成功。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <summary>检索给定列表项的显示文本。</summary>
      <returns>
        <paramref name="value" /> 的显示文本。</returns>
      <param name="value">要检索其显示文本的列表项。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取 <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法使用的编辑样式。</summary>
      <returns>指示所提供的编辑样式的 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值。 如果在指定上下文中不支持此方法，此方法将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> 标识符。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <summary>获取包含指定集合的对象数组。</summary>
      <returns>包含集合对象的数组，如果指定集合不从 <see cref="T:System.Collections.ICollection" /> 继承则为空对象数组。</returns>
      <param name="editValue">要编辑的集合。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <summary>返回包含给定对象的列表</summary>
      <returns>包含要创建的各个对象的 <see cref="T:System.Collections.ArrayList" />。</returns>
      <param name="instance">作为对象返回的 <see cref="T:System.Collections.ArrayList" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <summary>获取请求的服务（如果该服务可用的话）。</summary>
      <returns>该服务的实例；或者如果找不到该服务，则为 null。</returns>
      <param name="serviceType">要检索的服务类型。</param>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <summary>在用户按下编辑器对话框中的“帮助”按钮或 F1 键时，获取“帮助”关键字以显示“帮助”主题或主题列表。</summary>
      <returns>当从编辑器请求帮助时为其显示帮助主题或主题列表的帮助关键字。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <summary>获取可为此集合创建的项的可用类型。</summary>
      <returns>可创建的项的类型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <summary>将指定数组设置为集合项。</summary>
      <returns>新创建的集合对象，否则则为 <paramref name="editValue" /> 参数指示的集合。</returns>
      <param name="editValue">要编辑的集合。</param>
      <param name="value">要设置为集合项的对象数组。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <summary>显示集合编辑器的默认帮助主题。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <summary>提供一个有模式的对话框，用以通过 <see cref="T:System.Drawing.Design.UITypeEditor" /> 编辑集合的内容。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> 类的新实例。</summary>
      <param name="editor">用于编辑集合的 <see cref="T:System.ComponentModel.Design.CollectionEditor" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <summary>指示是否可以移除集合的初始成员。</summary>
      <returns>如果允许从集合中移除此值，则为 true；否则，为 false。 默认情况下，此方法返回来自当前窗体 <see cref="T:System.ComponentModel.Design.CollectionEditor" /> 的 <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" /> 的值。</returns>
      <param name="value">要移除的值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <summary>指示是否可一次选择多个集合项。</summary>
      <returns>如果可以同时选择多个集合成员，则为 true；否则，为 false。 默认情况下，此方法返回来自当前窗体 <see cref="T:System.ComponentModel.Design.CollectionEditor" /> 的 <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" /> 的值。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <summary>获取集合中每项的数据类型。</summary>
      <returns>集合项的数据类型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <summary>获取集合对象的数据类型。</summary>
      <returns>集合对象的数据类型。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <summary>获取指示当前上下文的类型说明符。</summary>
      <returns>
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，指示当前正在使用的上下文；或者如果没有可用的上下文，则为 null。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <summary>创建指定的集合项类型的新实例。</summary>
      <returns>指定对象的新实例，或者在用户选择取消创建此实例的情况下为 null。</returns>
      <param name="itemType">要创建的项类型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <summary>销毁对象的指定实例。</summary>
      <param name="instance">要销毁的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <summary>向用户显示指定的异常。</summary>
      <param name="e">要显示的异常。</param>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <summary>获取或设置要编辑的集合对象。</summary>
      <returns>要编辑的集合对象。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <summary>获取请求的服务（如果该服务可用的话）。</summary>
      <returns>该服务的实例；或者如果找不到该服务，则为 null。</returns>
      <param name="serviceType">要检索的服务类型。</param>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <summary>获取或设置此窗体要显示的项数组。</summary>
      <returns>此窗体要显示的对象数组。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <summary>获取可为此集合创建的可用项类型。</summary>
      <returns>可创建的项的类型。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <summary>提供在集合值已更改的情况下执行处理的机会。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <summary>为使用指定 <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> 对象的集合编辑器显示对话框。</summary>
      <returns>此 <see cref="T:System.Windows.Forms.DialogResult" /> 指示从对话框中返回的结果代码。</returns>
      <param name="edSvc">此 <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> 可用于显示对话框。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentActionsType">
      <summary>根据对象绑定智能标记与组件的关联方式，指定其类型。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.All">
      <summary>两种智能标记类型。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.Component">
      <summary>仅拉模型智能标记。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.Service">
      <summary>仅推模型智能标记。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary>扩展组件的设计模式行为。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary>获取与设计器相关联的组件所支持的设计时操作列表。</summary>
      <returns>与设计器相关联的组件所支持的设计时操作列表。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary>获取与设计器所管理的组件关联的组件集合。</summary>
      <returns>与设计器所管理的组件关联的组件。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary>获取此设计器正在设计的组件。</summary>
      <returns>由该设计器管理的组件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary>在源代码文件中为组件的默认事件创建方法签名，并将用户的光标定位到该位置。</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">签出已签入源代码管理程序的文件的尝试失败。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Finalize">
      <summary>在垃圾回收将对象回收之前，尝试通过调用 Dispose(false) 来释放资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary>尝试从设计器组件的设计模式站点检索指定类型的服务。</summary>
      <returns>实现所请求服务的对象，在无法解析服务时则为 null。</returns>
      <param name="serviceType">要请求的服务的类型。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary>获取一个特性，该特性指示关联组件的继承类型。</summary>
      <returns>关联组件的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary>获取一个值，该值指示是否继承此组件。</summary>
      <returns>如果继承此组件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>使设计器准备查看、编辑和设计指定的组件。</summary>
      <param name="component">此设计器的组件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>重新初始化现有组件。</summary>
      <param name="defaultValues">要应用于属性的默认值的名称/值字典。 如果未指定默认值，则可能为 null。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>初始化新创建的组件。</summary>
      <param name="defaultValues">要应用于属性的默认值的名称/值字典。 如果未指定默认值，则可能为 null。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary>对已初始化为非默认设置的导入组件的设置进行初始化。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary>获取指定 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</summary>
      <returns>指定设计器的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</returns>
      <param name="toInvoke">要检索其继承特性的 <see cref="T:System.ComponentModel.Design.ComponentDesigner" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary>设置组件的默认属性。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary>获取此设计器的父组件。</summary>
      <returns>此设计器的父组件，或者如果此设计器为根组件，则为 null。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>允许设计器从通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的特性集中更改或移除项。</summary>
      <param name="attributes">组件的类的特性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>允许设计器从通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的事件集中更改或移除项。</summary>
      <param name="events">组件的类的事件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>允许设计器从通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集中更改或移除项。</summary>
      <param name="properties">组件的类的特性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>允许设计器在通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的特性集中添加项。</summary>
      <param name="attributes">组件的类的特性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>允许设计器在通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的事件集中添加项。</summary>
      <param name="events">组件的类的事件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>允许设计器在通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集中添加项。</summary>
      <param name="properties">组件的类的特性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>通知 <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> 此组件已被更改。</summary>
      <param name="member">指示已更改的成员的 <see cref="T:System.ComponentModel.MemberDescriptor" />。</param>
      <param name="oldValue">该成员的旧值。</param>
      <param name="newValue">该成员的新值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary>通知 <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> 此组件即将被更改。</summary>
      <param name="member">指示即将被更改的成员的 <see cref="T:System.ComponentModel.MemberDescriptor" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary>获取重写用户设置的属性值的集合。</summary>
      <returns>指示设计文档隐藏属性的 <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="attributes">组件的类的 <see cref="T:System.Attribute" /> 对象。 特性字典中的关键字是特性的 <see cref="P:System.Attribute.TypeId" /> 值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="events">
        <see cref="T:System.ComponentModel.EventDescriptor" /> 对象，它表示组件的类的事件。 事件字典中的关键字是事件名。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="properties">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的类的属性。 属性字典中的关键字是属性名。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="attributes">组件的类的 <see cref="T:System.Attribute" /> 对象。 特性字典中的关键字是特性的 <see cref="P:System.Attribute.TypeId" /> 值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="events">
        <see cref="T:System.ComponentModel.EventDescriptor" /> 对象，它表示组件的类的事件。 事件字典中的关键字是事件名。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> 方法。</summary>
      <param name="properties">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的类的属性。 属性字典中的关键字是属性名。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary>有关此成员的说明，请参见 <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> 属性。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" />，其中包含在当前的父设计器中所包含的 <see cref="T:System.ComponentModel.Design.IDesigner" /> 设计器的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary>有关此成员的说明，请参见 <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> 属性。</summary>
      <returns>表示父设计器的 <see cref="T:System.ComponentModel.Design.IDesigner" />，如果没有父设计器，则为 null。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary>获取与设计器相关联的组件所支持的设计时谓词。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerVerb" /> 对象的 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />，在没有可用设计器谓词的情况下为 null。 此默认实现始终返回 null。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary>表示应重写特定属性的继承默认值或分配值的遮盖属性集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary>指示集合中是否存在匹配指定名称的属性。</summary>
      <returns>如果集合中存在此属性，则为 true；否则为 false。</returns>
      <param name="propertyName">要在集合中检查的属性的名称。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary>获取或设置指定索引处的对象。</summary>
      <returns>指定的属性值（如果该值存在于集合中）。 否则，将从非隐藏属性的当前值中检索该值。</returns>
      <param name="propertyName">要在集合中访问的属性的名称。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DateTimeEditor">
      <summary>日期时间编辑器是一个 <see cref="T:System.Drawing.Design.UITypeEditor" />，适于以可视方式编辑 <see cref="T:System.DateTime" /> 对象。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DateTimeEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 GetEditorStyle 提供的编辑器样式编辑指定的对象值。 提供服务提供程序以获取任何所需要的编辑服务。</summary>
      <returns>新的对象值。 如果该对象的值尚未更改，则这应返回与传递给它的对象相同的对象。</returns>
      <param name="context">一个类型说明符上下文，可用于提供附加的上下文信息。</param>
      <param name="provider">可通过其获取编辑服务的服务提供程序对象。</param>
      <param name="value">正在编辑的值的实例。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>检索 <see cref="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue" /> 方法的编辑样式。 如果不支持该方法，则返回 None。</summary>
      <returns>一个指示所提供的编辑样式的 enum 值。</returns>
      <param name="context">一个类型说明符上下文，可用于提供附加的上下文信息。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary>表示智能标记面板的静态标题项。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary>使用提供的名称字符串初始化 <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> 类的新实例。</summary>
      <param name="displayName">要显示在标题上的文本。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary>使用提供的名称和类别字符串初始化 <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> 类的新实例。</summary>
      <param name="displayName">要显示在标题上的文本。</param>
      <param name="category">区分大小写的 <see cref="T:System.String" />，它定义面板条目的分组。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary>为表示智能标记面板上的面板项的类型提供基类。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 类的新实例。</summary>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">区分大小写的 <see cref="T:System.String" />，它定义面板条目的分组。</param>
      <param name="description">此项的补充文本，可能用在工具提示或状态栏中。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary>获取或设置一个值，该值表示是否允许将此项放入具有相同 <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" /> 属性值的一组项中。</summary>
      <returns>如果该项可以组合，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary>获取某个项的组名。</summary>
      <returns>一个字符串，表示该项所属的组。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary>获取项的补充文本。</summary>
      <returns>
        <see cref="T:System.String" />，其中包含项的描述文本。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary>获取此项的文本。</summary>
      <returns>
        <see cref="T:System.String" />，其中包含项的显示文本。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary>获取对一个集合的引用，该集合可用于存储程序员定义的键/值对。</summary>
      <returns>可实现 <see cref="T:System.Collections.IDictionary" /> 的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <summary>获取或设置指示此项目是否在源代码视图中显示的值。</summary>
      <returns>如果该项显示在原始代码视图，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary>表示 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 对象的集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary>将提供的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 添加到当前集合中。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 索引，已在此处添加了值。</returns>
      <param name="value">要添加的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary>确定 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 是否包含特定元素。</summary>
      <returns>如果 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 包含指定值，则为 true；否则，为 false。</returns>
      <param name="value">要在 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 中查找的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary>将当前集合的元素复制到提供的数组，从指定的数组索引开始。</summary>
      <param name="array">一维 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 数组，它是从当前集合复制的元素的目标位置。 该数组的索引必须从零开始。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary>确定集合中特定项的索引。</summary>
      <returns>如果在整个 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 中找到 <paramref name="value" /> 的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</returns>
      <param name="value">要在集合中定位的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary>将元素插入 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 的指定索引处。</summary>
      <param name="index">从零开始的索引，应在该位置插入 <paramref name="value" />。</param>
      <param name="value">要插入的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary>获取或设置位于指定索引处的元素。</summary>
      <returns>位于指定索引处的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</returns>
      <param name="index">元素的索引（索引从零开始）。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary>从 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 中移除特定对象的第一个匹配项。</summary>
      <param name="value">要从 <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> 移除的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary>为定义用于创建智能标记面板的项列表的类型提供基类。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 类的新实例。</summary>
      <param name="component">与 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 相关的组件。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary>获取或设置一个值，该值表示智能标记面板在创建后是否应自动显示。</summary>
      <returns>如果在所属组件创建后应显示面板，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary>获取与 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 相关的组件。</summary>
      <returns>与 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 相关的组件。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary>返回一个对象，该对象表示由与 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 相关联的组件提供的服务。</summary>
      <returns>一个 <see cref="T:System.Object" />，表示由 <see cref="T:System.ComponentModel.Component" /> 提供的服务。 如果 <see cref="T:System.ComponentModel.Component" /> 不提供指定的服务，则此值为 null。</returns>
      <param name="serviceType">由 <see cref="T:System.ComponentModel.Component" /> 提供的服务。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary>返回包含在列表中的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 对象的集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 数组，包含此列表中的项。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary>表示 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象的集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary>用默认设置初始化 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary>用指定的面板项初始化 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 类的新实例。</summary>
      <param name="value">要填充到集合中的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary>将提供的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 添加到当前集合。</summary>
      <returns>要将新元素插入到集合的内部列表中的位置。</returns>
      <param name="value">要相加的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary>将提供的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 数组的元素添加到当前集合的末尾。</summary>
      <param name="value">要添加的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象的数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>将提供的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 的元素添加到当前集合的末尾。</summary>
      <param name="value">要相加的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary>指示集合是否包含特定值。</summary>
      <returns>如果集合包含指定的值，则为 true；否则为 false。</returns>
      <param name="value">要搜索的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary>将当前集合的元素复制到提供的数组，从指定的数组索引开始。</summary>
      <param name="array">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 类型的一维数组，它是从当前集合复制的元素的目标数组。 该数组的索引必须从零开始。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于 0。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多维的。 - 或 - 当前集合中的元素数目大于从 <paramref name="index" /> 到目标数组的末尾的可用空间。</exception>
      <exception cref="T:System.InvalidCastException">将当前集合的元素强制转换为目标数组的类型时发生问题，可能是由于失败的向下转换造成的。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary>确定集合中特定项的索引。</summary>
      <returns>如果在内部列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
      <param name="value">要在集合中定位的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary>将提供的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 插入到集合中的指定位置。</summary>
      <param name="index">从零开始的索引，应在该位置插入 <paramref name="value" />。</param>
      <param name="value">要插入到集合中的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于 0 或大于当前集合中的元素计数。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary>获取或设置位于指定索引处的元素。</summary>
      <returns>位于指定索引处的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</returns>
      <param name="index">元素的索引（索引从零开始）。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnClear">
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnInsert(System.Int32,System.Object)">
      <summary>在向 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 实例中插入新元素之前执行其他自定义进程。</summary>
      <param name="index">从零开始的索引，在该处插入 <paramref name="value" />。</param>
      <param name="value">
        <paramref name="index" /> 处的元素的新值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnRemove(System.Int32,System.Object)">
      <summary>当从 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 实例移除元素时执行其他自定义进程。</summary>
      <param name="index">从零开始的索引，可在该位置找到 <paramref name="value" />。</param>
      <param name="value">要从 <paramref name="index" /> 移除的元素的值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>当在 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 实例中设置值之前执行其他自定义进程。</summary>
      <param name="index">从零开始的索引，可在该位置找到 <paramref name="oldValue" />。</param>
      <param name="oldValue">要用 <paramref name="newValue" /> 替换的值。</param>
      <param name="newValue">
        <paramref name="index" /> 处的元素的新值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary>当验证值时执行其他自定义进程。</summary>
      <param name="value">要验证的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>从集合中移除特定 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 的第一个匹配项。</summary>
      <param name="value">要从当前集合中移除的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary>为 <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> 类的新实例。</summary>
      <param name="relatedObject">与此集合相关联的对象。</param>
      <param name="changeType">指定是否已在此集合中添加或移除 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 的值。</param>
      <param name="actionLists">应用此操作后列表元素的集合。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary>获取与此事件关联的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象的集合。</summary>
      <returns>表示集合当前状态的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary>获取一个标志，该标志指示是否已在 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象的集合中添加或移除某个元素。</summary>
      <returns>指示更改类型的 <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary>获取与 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象的集合相关联的对象。</summary>
      <returns>与托管的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 关联的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary>表示将要处理 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 的 <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> 事件的方法。 此类不能被继承。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary>指定发生于 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象集合中的更改类型。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary>一个或多个 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象已被添加到集合中。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary>一个或多个 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象已从集合中移除。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary>表示与从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的方法关联的智能标记面板项。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary>使用指定的方法和显示名称初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类的新实例。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />，包含与此项关联的方法。</param>
      <param name="memberName">要通过面板项调用的方法的名称，此方法是从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的一个方法，其方法名区分大小写。</param>
      <param name="displayName">此项的面板文本。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary>使用指定的方法和显示名称以及一个标志（用于指示此项是否应显示在其他用户界面上下文中），初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类的新实例。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />，包含与此项关联的方法。</param>
      <param name="memberName">要通过面板项调用的方法的名称，此方法是从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的一个方法，其方法名区分大小写。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="includeAsDesignerVerb">一个标志，指定是否也将关联方法处理为设计器谓词。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary>使用指定的方法名称、显示名称和类别名称，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类的新实例。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />，包含与此项关联的方法。</param>
      <param name="memberName">要通过面板项调用的方法的名称，此方法是从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的一个方法，其方法名区分大小写。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">用于对面板上的相似项进行分组的、区分大小写的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary>使用指定的方法名称、显示名称和类别名称，以及指示此项是否应显示在其他用户界面上下文中的标志，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类的新实例。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />，包含与此项关联的方法。</param>
      <param name="memberName">要通过面板项调用的方法的名称，此方法是从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的一个方法，其方法名区分大小写。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">用于对面板上的相似项进行分组的、区分大小写的 <see cref="T:System.String" />。</param>
      <param name="includeAsDesignerVerb">一个标志，指定是否也将关联方法视为关联组件的设计器谓词。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary>使用指定的方法、类别名称以及显示和说明文本，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类的新实例。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />，包含与此项关联的方法。</param>
      <param name="memberName">要通过面板项调用的方法的名称，此方法是从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的一个方法，其方法名区分大小写。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">用于对面板上的相似项进行分组的、区分大小写的 <see cref="T:System.String" />。</param>
      <param name="description">此项的补充文本，用在工具提示或状态栏中。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>使用指定的方法和类别名称、显示和说明文本，以及指示此项是否应显示在其他用户界面上下文中的标志，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 类的新实例。</summary>
      <param name="actionList">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" />，包含与此项关联的方法。</param>
      <param name="memberName">要通过面板项调用的方法的名称，此方法是从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的一个方法，其方法名区分大小写。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">用于对面板上的相似项进行分组的、区分大小写的 <see cref="T:System.String" />。</param>
      <param name="description">此项的补充文本，用在工具提示或状态栏中。</param>
      <param name="includeAsDesignerVerb">一个标志，指定是否也将关联方法视为关联组件的设计器谓词。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary>获取一个值，该值指示 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 应显示在其他用户界面上下文中。</summary>
      <returns>如果此项要在快捷菜单中使用，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary>以编程方式执行与 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 关联的方法。</summary>
      <exception cref="T:System.InvalidOperationException">找不到在 <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" /> 中指定的方法。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary>获取与此 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 关联的方法的名称。</summary>
      <returns>
        <see cref="T:System.String" />，包含关联方法的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary>获取或设置为当前面板提供 <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> 对象的组件。</summary>
      <returns>提供对象的组件，它应有提供项的关联设计器。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary>表示与从 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 派生的类中的属性相关的面板项。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary>用指定的属性和显示名称初始化 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> 类的新实例。</summary>
      <param name="memberName">与此面板项关联的属性的名称（区分大小写）。</param>
      <param name="displayName">此项的面板文本。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary>使用指定的属性和类别名称以及显示文本，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> 类的新实例。</summary>
      <param name="memberName">与此面板项关联的属性的名称（区分大小写）。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">用于对面板上的相似项进行分组的、区分大小写的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary>使用指定的属性名称和类别名称以及显示和说明文本，初始化 <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> 类的新实例。</summary>
      <param name="memberName">与此面板项关联的属性的名称（区分大小写）。</param>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">用于对面板上的相似项进行分组的、区分大小写的 <see cref="T:System.String" />。</param>
      <param name="description">此项的补充文本，用在工具提示或状态栏中。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary>获取与此项关联的属性的名称。</summary>
      <returns>一个 <see cref="T:System.String" />，它包含关联属性的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary>获取或设置将其项供给当前面板的组件。</summary>
      <returns>供给组件，该组件应具有提供 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 对象的关联设计器。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary>建立管理组件的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 对象集合的设计时服务。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 类的新实例。</summary>
      <param name="serviceProvider">当前设计时环境的服务提供程序。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>将 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 添加到当前的托管智能标记集合。</summary>
      <param name="comp">要与智能标记关联的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="actionList">包含要添加的新智能标记项的 <see cref="T:System.ComponentModel.Design.DesignerActionList" />。</param>
      <exception cref="T:System.ArgumentNullException">其中一个参数或两个参数都是 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>将 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 添加到当前的托管智能标记集合。</summary>
      <param name="comp">要与智能标记关联的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="designerActionListCollection">包含要添加的新智能标记项的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">其中一个参数或两个参数都是 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary>解除所有组件的管理，并清除所有推模型智能标记列表。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary>确定当前智能标记服务是否管理指定组件的操作列表。</summary>
      <returns>如果组件由当前服务管理，则为 true；否则为 false。</returns>
      <param name="comp">要搜索的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> 为 null。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary>为任何组件移除或添加 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 时发生。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary>释放 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 类使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary>返回与某个组件关联的智能标记项列表的集合。</summary>
      <returns>指定组件的智能标记集合。</returns>
      <param name="component">与智能标记关联的组件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)">
      <summary>返回与某个组件关联的指定类型的智能标记项列表的集合。</summary>
      <returns>指定组件的指定类型的智能标记集合。</returns>
      <param name="component">与智能标记关联的组件。</param>
      <param name="type">用于筛选关联的智能标记的 <see cref="T:System.ComponentModel.Design.ComponentActionsType" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>检索与组件关联的拉模型智能标记。</summary>
      <param name="component">与智能标记关联的组件。</param>
      <param name="actionLists">要添加关联智能标记的集合。</param>
      <exception cref="T:System.ArgumentNullException">其中一个参数或两个参数都是 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>检索与组件关联的推模型智能标记。</summary>
      <param name="component">与智能标记关联的组件。</param>
      <param name="actionLists">要添加关联智能标记的集合。</param>
      <exception cref="T:System.ArgumentNullException">其中一个参数或两个参数都是 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>从由当前服务管理的所有组件中移除指定的智能标记列表。</summary>
      <param name="actionList">要移除的智能标记列表。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actionList" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary>移除与指定组件关联的所有智能标记列表。</summary>
      <param name="comp">要与智能标记断开关联的组件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>从指定的组件移除指定的智能标记列表。</summary>
      <param name="comp">要与智能标记断开关联的组件。</param>
      <param name="actionList">要移除的智能标记列表。</param>
      <exception cref="T:System.ArgumentNullException">其中一个参数或两个参数都是 null。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary>表示智能标记面板上的静态文本项。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" /> 类的新实例。</summary>
      <param name="displayName">此项的面板文本。</param>
      <param name="category">用于组合面板上类似项的类别。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary>管理智能标记面板的用户界面 (UI)。 此类不能被继承。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary>当请求显示或隐藏智能标记面板时发生。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary>释放 <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> 类使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary>隐藏组件的智能标记面板。</summary>
      <param name="component">应隐藏其智能标记面板的组件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary>更新智能标记面板。</summary>
      <param name="component">要刷新的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary>指示是否自动显示智能标记面板。</summary>
      <returns>要自动显示智能标记面板，则为 true；否则为 false。</returns>
      <param name="component">要自动显示的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary>显示组件的智能标记面板。</summary>
      <param name="component">应显示其智能标记面板的组件。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary>为 <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" /> 类的新实例。</summary>
      <param name="relatedObject">与面板相关联的对象。</param>
      <param name="changeType">指定面板正处于显示或隐藏状态的值。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary>获取指示智能标记面板处于显示还是隐藏状态的标志。</summary>
      <returns>指示面板状态的 <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary>获取与智能标记面板相关联的对象。</summary>
      <returns>与智能标记面板相关联的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary>表示将要处理 <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> 的 <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> 事件的方法。</summary>
      <param name="sender">引发事件的 <see cref="T:System.Object" />。</param>
      <param name="e">事件特定的信息。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary>指定智能标记面板的显示状态。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary>智能标记面板正处于隐藏状态。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary>智能标记面板正在刷新。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary>智能标记面板正处于显示状态。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary>表示设计时工具的基类（不是从 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 派生的），它提供智能标记或设计器谓词能力。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignerCommandSet" /> 类的实例。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary>获取与设计的组件关联的所有智能标记的集合。</summary>
      <returns>包含关联的设计的组件的智能标记的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary>返回命令对象的集合。</summary>
      <returns>包含命令对象的指定类型（<see cref="T:System.ComponentModel.Design.DesignerActionList" /> 或 <see cref="T:System.ComponentModel.Design.DesignerVerb" />）的集合。 此基实现总是返回 null。</returns>
      <param name="name">要返回的集合的类型，指示 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 或 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary>获取与设计的组件关联的所有设计器谓词的集合。</summary>
      <returns>包含关联的设计组件的设计器谓词的 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary>为设计组件提供一个用户界面。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</summary>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</summary>
      <param name="parentProvider">父服务提供程序；如果不存在用于解决服务的父服务提供程序，则为 null。</param>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</summary>
      <param name="parentProvider">父服务提供程序；如果不存在用于解决服务的父服务提供程序，则为 null。</param>
      <param name="rootComponentType">要创建的根组件的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的新实例。</summary>
      <param name="rootComponentType">要创建的根组件的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary>使用给定的设计器加载程序开始加载过程。</summary>
      <param name="loader">用于加载设计器的设计器加载程序。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loader" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary>开始加载过程。</summary>
      <param name="rootComponentType">要在设计模式中创建的组件的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponentType" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary>获取设计图面中的 <see cref="T:System.ComponentModel.IContainer" /> 实现。</summary>
      <returns>设计图面中的 <see cref="T:System.ComponentModel.IContainer" /> 实现。</returns>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary>创建组件的实例。</summary>
      <returns>新创建的组件。</returns>
      <param name="componentType">要创建的组件的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentType" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary>在将组件添加到容器时创建设计器。</summary>
      <returns>所请求的设计器的实例，如果找不到匹配的设计器，则为 null。</returns>
      <param name="component">应为其创建设计器的组件。</param>
      <param name="rootDesigner">true 表示创建根设计器；false 表示创建普通设计器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary>创建给定类型的实例。</summary>
      <returns>新创建的对象。</returns>
      <param name="type">要创建的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary>创建一个适合嵌套控件或组件的容器。</summary>
      <returns>嵌套容器。</returns>
      <param name="owningComponent">管理嵌套容器的组件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary>创建一个适合嵌套控件或组件的容器。</summary>
      <returns>嵌套容器。</returns>
      <param name="owningComponent">管理嵌套容器的组件。</param>
      <param name="containerName">嵌套容器的其他名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> 为 null。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 占用的资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 占用的资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary>在释放设计图面时发生。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary>获取一个值，该值指示是否正在加载“设计时错误列表”。</summary>
      <returns>如果正在加载“设计时错误列表”，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary>序列化对设计图面的更改。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary>调用 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> 方法时发生。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary>从服务容器中获取服务。</summary>
      <returns>实现 <paramref name="serviceType" /> 或作为其派生类的对象，如果服务容器中不存在该服务，则为 null。</returns>
      <param name="serviceType">要检索的服务类型。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary>获取一个值，该值指示当前是否正在加载设计图面。</summary>
      <returns>如果当前正在加载设计图面，则为 true；否则为 false。</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary>在设计器加载完成时发生。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary>返回加载错误的集合或空集合。</summary>
      <returns>加载错误的 <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary>在将要加载设计器时发生。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary>获取服务容器。</summary>
      <returns>为设计图面中包含的设计器提供所有服务的服务容器。</returns>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary>在设计器完成卸载时发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary>在设计器将要卸载时发生。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary>获取根设计器的视图。</summary>
      <returns>根设计器的视图。</returns>
      <exception cref="T:System.InvalidOperationException">设计图面当前未加载，设计器加载程序尚未创建根设计器，或者设计图面虽已完成加载，但加载失败。 在 <see cref="P:System.Exception.InnerException" /> 中可能提供了更多信息。</exception>
      <exception cref="T:System.NotSupportedException">设计器已加载，但是它没有提供与此设计图面兼容的视图。</exception>
      <exception cref="T:System.ObjectDisposedException">附加到 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 已被释放。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary>在 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 上已调用 <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> 方法时发生。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceCollection">
      <summary>包含设计图面的集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)">
      <summary>从指定的目标索引开始，将集合成员复制到指定的 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 数组中。</summary>
      <param name="array">要将集合成员复制到的数组。</param>
      <param name="index">开始复制的目标索引。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Count">
      <summary>获取 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 中设计图面的总数。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 中元素的总数。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator">
      <summary>返回可循环访问 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 实例的枚举数。</summary>
      <returns>用于 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 实例的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)">
      <summary>获取指定索引处的设计图面。</summary>
      <returns>指定索引处的设计图面。</returns>
      <param name="index">要返回的设计图面的索引。</param>
      <exception cref="T:System.NotSupportedException">不支持 <paramref name="index" /> 指定的设计图面。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> 方法。</summary>
      <param name="array">一维 <see cref="T:System.Array" />，是从 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 复制的值的目标。</param>
      <param name="index">
        <paramref name="array" /> 中复制开始处的索引。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.Count" /> 属性。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 中包含的元素个数。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" /> 属性。</summary>
      <returns>如果对 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 的访问是同步的（线程安全），则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" /> 属性。</summary>
      <returns>可用于同步对 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 的访问的对象。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 方法。</summary>
      <returns>用于 <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> 实例的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <summary>为 <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceEventArgs.#ctor(System.ComponentModel.Design.DesignSurface)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" /> 类的新实例。</summary>
      <param name="surface">正在创建的设计图面。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="surface" /> 为 null。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface">
      <summary>获取正在创建的设计图面。</summary>
      <returns>正在创建的 <see cref="T:System.ComponentModel.Design.DesignSurface" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventHandler">
      <summary>表示将处理 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 类的 <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> 事件的方法。 此类不能被继承。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceManager">
      <summary>管理 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 对象集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 类的新实例。</summary>
      <param name="parentProvider">父服务提供程序。 如果设计图面管理器无法解析服务请求，则将它们转发到此提供程序。</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
      <summary>获取或设置活动设计器。</summary>
      <returns>活动设计器。</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
      <summary>在当前处于活动状态的设计器更改时发生。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
      <summary>创建设计图面的实例。</summary>
      <returns>新的设计图面实例。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
      <summary>创建设计图面的实例。</summary>
      <returns>新的设计图面实例。</returns>
      <param name="parentProvider">父服务提供程序。 将创建一个新的合并服务提供程序，它将首先向此提供程序请求一个服务，然后将任何失败委托给设计图面管理器对象。 此合并提供程序将被传递到 <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> 方法中。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentProvider" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
      <summary>可创建设计图面的实现。</summary>
      <returns>新的设计图面实例。</returns>
      <param name="parentProvider">传递给设计图面的服务提供程序。 它既可以是 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 的实例，也可以是实现 <see cref="T:System.IServiceProvider" /> 的对象，表示 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 类的服务提供程序与外部传递的提供程序之间的合并。</param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
      <summary>在创建设计器时发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
      <summary>在释放设计器时发生。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
      <summary>获取设计图面的集合。</summary>
      <returns>当前由设计图面管理器承载的设计图面的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 占用的资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
      <summary>获取设计图面管理器的服务容器中的服务。</summary>
      <returns>实现给定服务类型或作为其派生类的对象；否则，如果服务容器中不存在该服务，则为 null。</returns>
      <param name="serviceType">要检索的服务类型。</param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
      <summary>在全局选择更改时发生。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
      <summary>获取设计图面管理器的 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />。</summary>
      <returns>设计图面管理器的 <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DisplayMode">
      <summary>定义用于指示 <see cref="T:System.ComponentModel.Design.ByteViewer" /> 所使用的显示模式的标识符。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Ansi">
      <summary>ANSI 格式的显示。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Auto">
      <summary>自动选择显示模式的显示模式。 在此模式下，将对字节进行检查，以确定它们是否为十六进制或可打印的格式。 如果字节为十六进制格式，则将选择 <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> 模式。 如果字符匹配可打印的字符集，则运行一项测试，以自动选择 <see cref="F:System.ComponentModel.Design.DisplayMode.Ansi" /> 或 <see cref="F:System.ComponentModel.Design.DisplayMode.Unicode" /> 显示模式。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Hexdump">
      <summary>十六进制格式的显示。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Unicode">
      <summary>Unicode 格式的显示。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.EventBindingService">
      <summary>
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> 接口的默认实现。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.EventBindingService" /> 类的新实例。</summary>
      <param name="provider">服务提供程序，<see cref="T:System.ComponentModel.Design.EventBindingService" /> 将通过它查询服务。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>创建唯一的方法名称。</summary>
      <returns>唯一的方法名称。</returns>
      <param name="component">要为其创建方法名称的组件。</param>
      <param name="e">要为其创建名称的事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> 或 <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>提供一个通知，声明特定方法不再由某个事件处理程序使用。</summary>
      <param name="component">该方法绑定到的组件。</param>
      <param name="e">事件处理程序的 <see cref="T:System.ComponentModel.EventDescriptor" />。</param>
      <param name="methodName">要释放的方法的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>返回兼容方法的名称集合。</summary>
      <returns>兼容方法名称的字符串的集合。</returns>
      <param name="e">包含兼容委托的 <see cref="T:System.ComponentModel.EventDescriptor" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)">
      <summary>从服务提供程序获取请求的服务。</summary>
      <returns>由 <paramref name="serviceType" /> 指定的对服务的引用，如果请求的服务不可用，则为 null。</returns>
      <param name="serviceType">要检索的服务类型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode">
      <summary>显示用户代码。</summary>
      <returns>如果可以显示该代码，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>显示指定方法的用户代码。</summary>
      <returns>如果可以显示该代码，则为 true；否则为 false。</returns>
      <param name="component">该方法绑定到的组件。</param>
      <param name="e">事件处理程序的 <see cref="T:System.ComponentModel.EventDescriptor" />。</param>
      <param name="methodName">要显示其代码的方法的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)">
      <summary>显示给定行号的用户代码。</summary>
      <returns>如果可以显示该代码，则为 true；否则为 false。</returns>
      <param name="lineNumber">要显示的行号。</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>为指定组件和事件的事件处理程序方法创建唯一的名称。</summary>
      <returns>为此事件的事件处理程序方法建议的名称。</returns>
      <param name="component">事件连接到的组件实例。</param>
      <param name="e">要为其创建名称的事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> 或 <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>获取其方法签名与指定事件兼容的事件处理程序方法的集合。</summary>
      <returns>兼容方法名称的字符串的集合。</returns>
      <param name="e">要为其获取兼容事件处理程序方法的事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)">
      <summary>为指定属性说明符（如果它表示事件）所表示的事件获取 <see cref="T:System.ComponentModel.EventDescriptor" />。</summary>
      <returns>属性所表示的事件的 <see cref="T:System.ComponentModel.EventDescriptor" />，或者在属性不表示事件的情况下为 null。</returns>
      <param name="property">表示事件的属性。</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <summary>将一组事件说明符转换为一组属性说明符。</summary>
      <returns>对事件集进行描述的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象数组。</returns>
      <param name="events">要转换为属性的事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="events" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)">
      <summary>将单个事件说明符转换为属性说明符。</summary>
      <returns>对事件进行描述的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</returns>
      <param name="e">要转换的事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
      <summary>显示设计器的用户代码。</summary>
      <returns>如果显示该代码，则为 true，否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>显示指定事件的用户代码。</summary>
      <returns>如果显示该代码，则为 true，否则为 false。</returns>
      <param name="component">事件要连接到组件。</param>
      <param name="e">要显示的事件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="events" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)">
      <summary>在指定行显示设计器的用户代码。</summary>
      <returns>如果显示该代码，则为 true，否则为 false。</returns>
      <param name="lineNumber">要放置插入符号的行号。</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>提供一个通知，告知特定方法正由事件处理程序使用。</summary>
      <param name="component">该方法绑定到的组件。</param>
      <param name="e">事件处理程序的 <see cref="T:System.ComponentModel.EventDescriptor" />。</param>
      <param name="methodName">方法的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)">
      <summary>验证提供的方法名称对于正在使用的语言或脚本是有效的。</summary>
      <param name="methodName">要验证的方法名称。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary>表示异常的集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ExceptionCollection" /> 类的新实例。</summary>
      <param name="exceptions">
        <see cref="T:System.Exception" /> 类型的数组，包含要填充集合的对象。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary>获取表示异常集合的 <see cref="T:System.Exception" /> 对象的数组。</summary>
      <returns>表示异常集合的 <see cref="T:System.Exception" /> 数组。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化 <see cref="T:System.ComponentModel.Design.ExceptionCollection" /> 所需的数据来填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 为 null。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentDesignerDebugService">
      <summary>在设计时环境中提供调试服务。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Assert(System.Boolean,System.String)">
      <summary>断言设计时环境内的条件。</summary>
      <param name="condition">若要禁止显示 <paramref name="message" />，则为 true；否则为 false。</param>
      <param name="message">要显示的消息。</param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Fail(System.String)">
      <summary>记录设计时环境内的失败消息。</summary>
      <param name="message">要记录的消息。</param>
    </member>
    <member name="P:System.ComponentModel.Design.IComponentDesignerDebugService.IndentLevel">
      <summary>获取或设置调试输出的缩进级别。</summary>
      <returns>调试输出的缩进级别。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IComponentDesignerDebugService.Listeners">
      <summary>获取用于监视设计时调试输出的跟踪侦听器的集合。</summary>
      <returns>跟踪侦听器的集合</returns>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Trace(System.String,System.String)">
      <summary>记录设计时环境内的调试消息。</summary>
      <param name="message">要记录的消息。</param>
      <param name="category">
        <paramref name="message" /> 的类别。</param>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentDesignerStateService">
      <summary>允许设计器存储和检索其状态。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerStateService.GetState(System.ComponentModel.IComponent,System.String)">
      <summary>获取由给定组件的键所指定的状态项。</summary>
      <returns>由 <paramref name="key" /> 指定的 <paramref name="component" /> 的设计器状态。</returns>
      <param name="component">要为其检索设计器状态项的组件。</param>
      <param name="key">设计器状态项的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerStateService.SetState(System.ComponentModel.IComponent,System.String,System.Object)">
      <summary>设置由给定组件的键所指定的状态项。</summary>
      <param name="component">要为其设置设计器状态项的组件。</param>
      <param name="key">设计器状态项的名称。</param>
      <param name="value">
        <paramref name="component" /> 的设计器状态项。</param>
    </member>
    <member name="T:System.ComponentModel.Design.IDesignTimeAssemblyLoader">
      <summary>用于在设计器中加载程序集的实用工具。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.GetTargetAssemblyPath(System.Reflection.AssemblyName,System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>确定目标框架中指定程序集的加载路径。</summary>
      <returns>程序集的实际加载路径；如果无法加载程序集，则为 null。</returns>
      <param name="runtimeOrTargetAssemblyName">运行时或目标程序集的完整程序集名称。</param>
      <param name="suggestedAssemblyPath">从中加载程序集的建议路径。</param>
      <param name="targetFramework">设计器的目标框架。</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.LoadRuntimeAssembly(System.Reflection.AssemblyName)">
      <summary>加载指定的运行时程序集。</summary>
      <returns>加载的运行时程序集；如果未能加载程序集，则为 null。</returns>
      <param name="targetAssemblyName">完整的目标程序集名称。</param>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary>定义设计时环境中的多目标类型名称解析服务。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary>将目标框架的类型解析为程序集限定名称。</summary>
      <returns>目标框架中的 <paramref name="type" /> 的 <see cref="P:System.Type.AssemblyQualifiedName" />。</returns>
      <param name="type">要解析的类型。</param>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary>提供了一组用于标识继承的组件的方法。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>将由指定组件继承的组件添加到 <see cref="T:System.ComponentModel.Design.InheritanceService" />。</summary>
      <param name="component">用于搜索继承的组件以添加到指定容器中的组件。</param>
      <param name="container">要将继承的组件添加到其中的容器。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>将由指定组件继承的指定类型的组件添加到 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 中。</summary>
      <param name="type">要搜索的基类型。</param>
      <param name="component">用于搜索继承的组件以添加到指定容器中的组件。</param>
      <param name="container">要将继承的组件添加到其中的容器。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.InheritanceService" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary>获取指定组件的继承特性。</summary>
      <returns>描述此组件的继承级别的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</returns>
      <param name="component">要为其检索继承特性的组件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary>指示是否忽略指定的成员。</summary>
      <returns>如果指定的成员应该包含在继承的组件集中，为 true；否则为 false。</returns>
      <param name="member">要检查的成员。 此成员是 <see cref="T:System.Reflection.FieldInfo" /> 或 <see cref="T:System.Reflection.MethodInfo" />。</param>
      <param name="component">此成员所绑定到的组件实例。</param>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary>为 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 事件提供数据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> 类的新实例。</summary>
      <param name="succeeded">如果指示设计器加载已成功，则为 true；否则为 false。</param>
      <param name="errors">设计器加载时发生的错误的集合。</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary>获取设计器加载时发生的错误的集合。</summary>
      <returns>设计器加载时发生的错误的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary>获取一个值，该值指示设计器加载是否成功。</summary>
      <returns>如果设计器加载已成功，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary>表示将处理 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 事件的方法。 此类不能被继承。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.LocalizationExtenderProvider">
      <summary>向根设计器提供本地化功能的设计时支持。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.#ctor(System.ComponentModel.ISite,System.ComponentModel.IComponent)">
      <summary>使用指定的服务提供程序和基组件初始化 <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> 类的新实例。</summary>
      <param name="serviceProvider">指定组件的服务提供程序。</param>
      <param name="baseComponent">要本地化的基组件。</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.CanExtend(System.Object)">
      <summary>指示此对象是否可以将其扩展程序属性提供给指定的对象。</summary>
      <returns>如果此对象可以扩展程序属性提供给指定对象，则为 true；否则为 false。</returns>
      <param name="o">要接收扩展程序属性的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose">
      <summary>处置由 <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> 占用的资源（内存除外）。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLanguage(System.Object)">
      <summary>获取指定对象的当前资源区域性。</summary>
      <returns>指示资源种类的 <see cref="T:System.Globalization.CultureInfo" />。</returns>
      <param name="o">要获取其当前资源区域性的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLoadLanguage(System.Object)">
      <summary>获取默认的资源区域性，在设计时初始化本地化对象的值时将使用该区域性。</summary>
      <returns>
        <see cref="T:System.Globalization.CultureInfo" />，指示用于初始化指定对象的值的资源区域性。</returns>
      <param name="o">要获取其资源区域性的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLocalizable(System.Object)">
      <summary>获取一个值，用以指示指定对象是否支持资源本地化。</summary>
      <returns>如果指定对象支持资源本地化，则为 true；否则为 false。</returns>
      <param name="o">要检查本地化支持的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.ResetLanguage(System.Object)">
      <summary>重置指定对象的资源区域性。</summary>
      <param name="o">要重置其资源区域性的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLanguage(System.Object,System.Globalization.CultureInfo)">
      <summary>将指定对象的当前资源区域性设置为指定的资源区域性。</summary>
      <param name="o">要设置其资源区域性的基组件。</param>
      <param name="language">指示要使用的资源区域性的 <see cref="T:System.Globalization.CultureInfo" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLocalizable(System.Object,System.Boolean)">
      <summary>设置一个值，该值指示指定的对象是否支持经过本地化的资源。</summary>
      <param name="o">要设置为可本地化或不可本地化的基组件。</param>
      <param name="localizable">如果此对象支持资源本地化，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.ShouldSerializeLanguage(System.Object)">
      <summary>获取一个值，该值指示指定的对象是否必须将其可本地化的值保持在资源中。</summary>
      <returns>如果可本地化的值应该保持在资源中，则为 true；否则为 false。</returns>
      <param name="o">要获取语言支持持久性标志的对象。</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <summary>为 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandsChangedEventArgs.#ctor(System.ComponentModel.Design.MenuCommandsChangedType,System.ComponentModel.Design.MenuCommand)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> 类的新实例。</summary>
      <param name="changeType">更改类型。</param>
      <param name="command">菜单命令。</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType">
      <summary>获取导致引发 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 的更改类型。</summary>
      <returns>导致引发 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 的 <see cref="T:System.ComponentModel.Design.MenuCommandsChangedType" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command">
      <summary>获取已被添加、移除或更改的命令。</summary>
      <returns>添加、移除或更改的 <see cref="T:System.ComponentModel.Design.MenuCommand" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler">
      <summary>表示将要处理 <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 的 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 事件的方法。 此类不能被继承。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedType">
      <summary>指定在相关对象的 <see cref="T:System.Windows.Forms.Design.MenuCommands" /> 集合上发生的操作的类型。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandAdded">
      <summary>指定已添加一个或多个命令对象。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandChanged">
      <summary>指定一个或多个命令已更改其状态。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandRemoved">
      <summary>指定已删除一个或多个命令。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandService">
      <summary>实现 <see cref="T:System.ComponentModel.Design.IMenuCommandService" /> 接口。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 类的新实例。</summary>
      <param name="serviceProvider">此服务用于获取其他服务的服务提供程序。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>将命令处理程序添加到菜单命令服务。</summary>
      <param name="command">要相加的 <see cref="T:System.ComponentModel.Design.MenuCommand" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="command" /> 命令处理程序已存在。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>将谓词添加到 <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 的谓词表中。</summary>
      <param name="verb">要相加的 <see cref="T:System.ComponentModel.Design.DesignerVerb" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="verb" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.MenuCommandService" /> 使用的所有资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
      <summary>确保已经创建谓词列表。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>搜索与给定命令 ID 关联的 <see cref="T:System.ComponentModel.Design.MenuCommand" />。</summary>
      <returns>与给定命令关联的 <see cref="T:System.ComponentModel.Design.MenuCommand" />；如果找不到命令，则为 null。</returns>
      <param name="commandID">要查找的 <see cref="T:System.ComponentModel.Design.CommandID" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
      <summary>搜索与给定命令关联的 <see cref="T:System.ComponentModel.Design.MenuCommand" />。</summary>
      <returns>与给定命令关联的 <see cref="T:System.ComponentModel.Design.MenuCommand" />；如果找不到命令，则为 null。</returns>
      <param name="guid">命令的 GUID。</param>
      <param name="id">命令的 ID。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
      <summary>获取给定 GUID 的命令列表。</summary>
      <returns>命令的 <see cref="T:System.Collections.ICollection" />。</returns>
      <param name="guid">命令列表的 GUID。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
      <summary>获取对所请求服务的引用。</summary>
      <returns>对 <paramref name="serviceType" /> 的引用；如果找不到服务，则为 null。</returns>
      <param name="serviceType">要检索的服务的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary>在本地窗体上或全局环境中调用给定命令。</summary>
      <returns>如果找到了命令，则为 true；否则为 false。</returns>
      <param name="commandID">要调用的命令。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
      <summary>在本地窗体上或全局环境中调用具有给定参数的给定命令。</summary>
      <returns>如果找到了命令，则为 true；否则为 false。</returns>
      <param name="commandId">要调用的命令。</param>
      <param name="arg">调用的参数。</param>
    </member>
    <member name="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
      <summary>当菜单命令的状态更改时发生。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>从文档中移除给定的菜单命令。</summary>
      <param name="command">要移除的命令。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>从文档中移除给定谓词。</summary>
      <param name="verb">要移除的谓词。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="verb" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary>在给定位置显示带有给定的命令 ID 的快捷菜单。</summary>
      <param name="menuID">要显示的快捷菜单。</param>
      <param name="x">快捷菜单位置的 x 坐标。</param>
      <param name="y">快捷菜单位置的 y 坐标。</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandService.Verbs">
      <summary>获取当前可用的设计器谓词的集合。</summary>
      <returns>当前可用的设计器谓词的 <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MultilineStringEditor">
      <summary>显示一个用于在设计模式中编辑多行字符串的对话框。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.MultilineStringEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 提供的编辑样式编辑指定的对象值。</summary>
      <returns>新的对象值。 如果对象的值尚未更改，则此方法返回的对象应与传递给它的对象相同。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">服务提供程序对象，通过它可获得编辑服务。</param>
      <param name="value">正在编辑的值的实例。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取 <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法的编辑样式。</summary>
      <returns>指示所支持的编辑样式的 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示该编辑器是否支持绘制对象值表示形式。</summary>
      <returns>false，指示此 <see cref="T:System.Drawing.Design.UITypeEditor" /> 不在“属性”窗口中显示可视的表示形式。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <summary>实现可用于设计值编辑器的基本功能。 这些编辑器反过来又可以提供一个用户界面，用于显示和编辑受支持的数据类型的对象的值。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 类的新实例。</summary>
      <param name="subObjectSelector">指定的子对象选择器值。</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <summary>表示 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 的当前值。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" /> 指示的编辑器样式编辑指定的对象值。</summary>
      <returns>新的对象值。 如果对象的值尚未更改，则此方法返回的对象应与传递给它的对象相同。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />，此编辑器可用其来获取服务。</param>
      <param name="value">要编辑的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <summary>确定指定的 <see cref="T:System.Object" /> 是否等于当前的 <see cref="T:System.Object" />。</summary>
      <returns>如果指定的 <see cref="T:System.Object" /> 等于当前的 <see cref="T:System.Object" />，则为 true；否则为 false。</returns>
      <param name="value">与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary>填充标记项的分层集合，每个标记项用一个 <see cref="T:System.Windows.Forms.TreeNode" /> 来表示。</summary>
      <param name="selector">标记项的分层集合。</param>
      <param name="context">组件的上下文信息。</param>
      <param name="provider">此接口的 <see cref="M:System.IServiceProvider.GetService(System.Type)" /> 方法，用于获取提供服务的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取由 <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" /> 方法使用的编辑器样式。</summary>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，指示 <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" /> 使用的编辑器的样式。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <summary>表示 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 以前的值。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <summary>将当前 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> 设置为指定的值。</summary>
      <param name="value">指定的值。</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <summary>控制标记项的分层集合内的节点是否可访问。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <summary>显示标记项的分层集合，每个标记项用一个 <see cref="T:System.Windows.Forms.TreeNode" /> 来表示。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" /> 类的新实例。</summary>
      <param name="editor">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <summary>在集合中添加新的树节点。</summary>
      <returns>添加到集合中的 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />。</returns>
      <param name="label">节点的标签。</param>
      <param name="value">
        <see cref="T:System.Object" />，表示节点的值。</param>
      <param name="parent">该节点的父级。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <summary>从集合中删除所有树节点。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <summary>此字段仅供内部使用。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary>在选定树节点后发生。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.TreeViewEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>在控件有焦点的情况下按下键时发生。</summary>
      <param name="e">为 <see cref="E:System.Windows.Forms.Control.KeyDown" /> 事件提供数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>在控件有焦点的情况下按下键时发生。</summary>
      <param name="e">为 <see cref="E:System.Windows.Forms.Control.KeyPress" /> 事件提供数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary>当鼠标指针位于控件上并单击鼠标按钮时发生。</summary>
      <param name="e">为 <see cref="E:System.Windows.Forms.Control.MouseUp" />、<see cref="E:System.Windows.Forms.Control.MouseDown" /> 和 <see cref="E:System.Windows.Forms.Control.MouseMove" /> 事件提供数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <summary>将集合节点设置为指定值。</summary>
      <returns>如果该集合节点被设置，则为 true；否则为 false。</returns>
      <param name="value">要设置的值。</param>
      <param name="nodes">节点集合。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <summary>初始化编辑器服务。</summary>
      <param name="edSvc">编辑器服务。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <summary>移除编辑器服务。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <param name="m">要处理的 Windows<see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <summary>表示 <see cref="T:System.Windows.Forms.TreeView" /> 的节点。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> 类的新实例。</summary>
      <param name="label">节点的标签。</param>
      <param name="value">
        <see cref="T:System.Object" />，表示节点的值。</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <summary>表示节点的值。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary>指定项目的目标框架。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" /> 类的新实例。</summary>
      <param name="targetFrameworkMoniker">项目的目标框架。</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary>获取项目的目标框架。</summary>
      <returns>项目的目标框架。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary>指定一般的设计时撤消/重复功能。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 类的新实例。</summary>
      <param name="provider">父级服务提供程序。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> 为 null。</exception>
      <exception cref="T:System.NotSupportedException">找不到所需的服务。 有关所需的服务，请参见 <see cref="T:System.ComponentModel.Design.UndoEngine" />。 如果已移除此服务，请确保提供了替代服务。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>将 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 添加到撤消堆栈中。</summary>
      <param name="unit">要添加的撤消单元</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary>创建一个新的 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</summary>
      <returns>一个新的具有指定名称的 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</returns>
      <param name="name">要创建的单元的名称。</param>
      <param name="primary">true 表示创建一系列嵌套单元的第一个单元；false 表示创建后续嵌套单元。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>放弃 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</summary>
      <param name="unit">要放弃的单元。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary>启用或禁用 <see cref="T:System.ComponentModel.Design.UndoEngine" />。</summary>
      <returns>如果启用 <see cref="T:System.ComponentModel.Design.UndoEngine" />，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary>获取所请求的服务。</summary>
      <returns>请求的服务（如果找到）。</returns>
      <param name="serviceType">要检索的服务类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> 为 null。</exception>
      <exception cref="T:System.NotSupportedException">需要 <paramref name="serviceType" />，但未找到。 如果已移除此服务，请确保提供了替代服务。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary>获取所请求的服务。</summary>
      <returns>所请求的服务，如果找不到所请求的服务，则为 null。</returns>
      <param name="serviceType">要检索的服务类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary>紧挨在执行撤消操作之前发生。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary>指示撤消操作是否正在进行。</summary>
      <returns>如果撤消操作正在进行，则为 true；否则为 false。</returns>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary>在执行撤消操作之后立即发生。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary>封装用户可以撤消的工作单元。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 类的新实例。</summary>
      <param name="engine">拥有此撤消单元的撤消引擎。</param>
      <param name="name">此撤消单元的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="engine" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary>接收来自撤消引擎的调用以关闭此单元。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary>接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary>获取所请求服务的实例。</summary>
      <returns>给定服务的实例；或者如果无法解析服务，则为 null。</returns>
      <param name="serviceType">要检索的服务类型。</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary>获取一个值，该值指示 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 是否不包含事件。</summary>
      <returns>如果 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 不包含事件，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary>获取 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 的名称。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 的名称。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary>返回 <see cref="T:System.String" />，它表示单元的当前名称。</summary>
      <returns>
        <see cref="T:System.String" />，表示单元的当前名称。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary>执行撤消或重复操作。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary>由 <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> 调用以执行撤消操作。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary>获取父 <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />。</summary>
      <returns>附加此 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 的 <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceDescriptor">
      <summary>在 EnvDTE.Project 级别实现单个数据源所需的基本功能。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptor.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 类的新实例。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.Image">
      <summary>在派生类中重写后，关闭流且基础流获取表示数据源的 <see cref="T:System.Drawing.Bitmap" /> 图像。</summary>
      <returns>表示数据源的 <see cref="T:System.Drawing.Bitmap" /> 图像。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.IsDesignable">
      <summary>在派生类中重写后，获取一个值，该值指示数据源是否是可设计的。</summary>
      <returns>如果数据源是可设计的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.Name">
      <summary>在派生类中重写后，获取数据源的名称。</summary>
      <returns>数据源的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.TypeName">
      <summary>在派生类中重写后，获取数据源的完全限定类型名。</summary>
      <returns>数据源的完全限定类型名。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection">
      <summary>提供 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 对象的类型安全集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Add(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>将 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 添加到集合。</summary>
      <returns>要添加到集合的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 的索引。</returns>
      <param name="value">要添加到集合中的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Contains(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>获取一个值，该值指示 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> 是否包含指定的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />。</summary>
      <returns>如果 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 包含在集合中，则为 true；否则为 false。</returns>
      <param name="value">要定位的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.CopyTo(System.ComponentModel.Design.Data.DataSourceDescriptor[],System.Int32)">
      <summary>将 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> 值复制到一个一维 <see cref="T:System.Array" /> 中的指定索引位置。</summary>
      <param name="array">一维 <see cref="T:System.Array" />，为从 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> 所复制的值的目标位置。</param>
      <param name="index">
        <paramref name="array" /> 中复制开始处的索引。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.IndexOf(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>返回 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> 中的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 的索引。</summary>
      <returns>如果找到 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> 中 <paramref name="value" /> 的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 的索引则返回该索引；否则返回 -1。</returns>
      <param name="value">要定位的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Insert(System.Int32,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>将 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> 插入 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> 中的指定索引处。</summary>
      <param name="index">应插入 <paramref name="value" /> 处的从零开始的索引。</param>
      <param name="value">要插入的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Item(System.Int32)">
      <summary>获取或设置指定的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />。</summary>
      <returns>指定的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />。</returns>
      <param name="index">指定的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Remove(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>从 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> 中移除特定的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />。</summary>
      <param name="value">要从 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> 移除的 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceGroup">
      <summary>在 EnvDTE.Project 级别实现单个数据源所需的基本功能。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroup.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 类的新实例。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.DataSources">
      <summary>在派生类中重写后，获取组中数据源的说明符的集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />，表示组中数据源的说明符的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.Image">
      <summary>在派生类中重写后，获取表示组的 <see cref="T:System.Drawing.Bitmap" /> 图像。</summary>
      <returns>一个表示组的 <see cref="T:System.Drawing.Bitmap" /> 图像。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.IsDefault">
      <summary>在派生类中重写后，获取一个值，该值指示组是否是默认组。</summary>
      <returns>如果组是默认组，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.Name">
      <summary>在派生类中重写后，获取组的名称。</summary>
      <returns>组的名称。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceGroupCollection">
      <summary>提供 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 对象的类型安全集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Add(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>将 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 添加到集合。</summary>
      <returns>要添加到集合的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 的索引。</returns>
      <param name="value">要添加到集合中的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Contains(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>获取一个值，该值指示 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> 是否包含指定的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />。</summary>
      <returns>如果 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 包含在集合中，则为 true；否则为 false。</returns>
      <param name="value">要定位的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.CopyTo(System.ComponentModel.Design.Data.DataSourceGroup[],System.Int32)">
      <summary>将 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> 值复制到一个一维 <see cref="T:System.Array" /> 中的指定索引位置。</summary>
      <param name="array">一维 <see cref="T:System.Array" />，为从 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> 所复制的值的目标位置。</param>
      <param name="index">
        <paramref name="array" /> 中复制开始处的索引。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.IndexOf(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>返回 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> 中的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 的索引。</summary>
      <returns>如果找到 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> 中 <paramref name="value" /> 的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 的索引则返回该索引；否则返回 -1。</returns>
      <param name="value">要定位的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Insert(System.Int32,System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>将 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 插入 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> 中的指定索引处。</summary>
      <param name="index">应插入 <paramref name="value" /> 处的从零开始的索引。</param>
      <param name="value">要插入的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroupCollection.Item(System.Int32)">
      <summary>获取或设置指定的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />。</summary>
      <returns>指定的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />。</returns>
      <param name="index">指定的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Remove(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>从 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> 中移除特定的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />。</summary>
      <param name="value">要从 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> 移除的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceProviderService">
      <summary>实现服务所需的基本功能，以便在 EnvDTE.Project 级别提供对数据源的访问。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Data.DataSourceProviderService" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.AddDataSourceInstance(System.ComponentModel.Design.IDesignerHost,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>在派生类中重写后，创建并返回给定数据源的实例，并将该实例添加到设计图面。</summary>
      <returns>一个 <see cref="T:System.Object" />，表示添加的数据源的实例。</returns>
      <param name="host">设计器宿主。</param>
      <param name="dataSourceDescriptor">数据源。</param>
      <exception cref="T:System.ArgumentException">无法创建或解析类型名称。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.GetDataSources">
      <summary>在派生类中重写后，在 EnvDTE.Project 级别检索数据源的集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />，如果在 EnvDTE.Project 级别没有任何数据源，则为 null。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)">
      <summary>在派生类中重写后，调用“添加新数据源向导”。</summary>
      <returns>新添加的数据源的 <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> 集合，如果没有添加任何数据源，则为 null。</returns>
      <param name="parentWindow">父窗口。</param>
      <param name="startPosition">窗体的初始位置。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>在派生类中重写后，对指定的数据源调用“配置数据源”对话框。</summary>
      <returns>如果对数据源进行了任何更改，则为 true；否则为 false。</returns>
      <param name="parentWindow">父窗口。</param>
      <param name="startPosition">窗体的初始位置。</param>
      <param name="dataSourceDescriptor">数据源。</param>
      <exception cref="T:System.ArgumentException">指定的数据源无效或为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.NotifyDataSourceComponentAdded(System.Object)">
      <summary>在派生类中重写后，通知服务向设计图面添加了一个表示数据源的组件。</summary>
      <param name="dsc">数据源组件。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceProviderService.SupportsAddNewDataSource">
      <summary>在派生类中重写后，获取一个值，该值指示服务是否支持使用 <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)" /> 添加新数据源。</summary>
      <returns>如果服务支持使用 <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)" /> 添加新数据源，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceProviderService.SupportsConfigureDataSource">
      <summary>在派生类中重写后，获取一个值，该值指示服务是否支持使用 <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)" /> 配置数据源。</summary>
      <returns>如果服务支持使用 <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)" /> 配置数据源，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataColumn">
      <summary>表示通过数据连接访问的数据存储区中的表或视图的列。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType)">
      <summary>使用指定的名称和数据类型初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> 类的新实例。</summary>
      <param name="name">在数据存储区中标识列的名称。</param>
      <param name="dataType">
        <see cref="T:System.Data.DbType" /> 值之一。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType,System.Object)">
      <summary>使用指定的名称、数据类型和默认值初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> 类的新实例。</summary>
      <param name="name">在数据存储区中标识列的名称。</param>
      <param name="dataType">
        <see cref="T:System.Data.DbType" /> 值之一。</param>
      <param name="defaultValue">列的默认值。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
      <summary>用指定的值初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> 类的新实例。</summary>
      <param name="name">在数据存储区中标识列的名称。</param>
      <param name="dataType">
        <see cref="T:System.Data.DbType" /> 值之一。</param>
      <param name="defaultValue">列的默认值</param>
      <param name="identity">如果字段是数据行的标识字段，则为 true；否则为 false。</param>
      <param name="nullable">如果字段在数据存储区中可以为空，则为 true；否则为 false。</param>
      <param name="primaryKey">如果字段是数据行的主键，则为 true；否则为 false。</param>
      <param name="precision">数值数据字段使用的最大位数。</param>
      <param name="scale">数值数据字段中小数点右边的最大位数。</param>
      <param name="length">数据字段的长度（以字节为单位）。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.DataType">
      <summary>获取数据列的数据类型。</summary>
      <returns>
        <see cref="T:System.Data.DbType" /> 值之一。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.DefaultValue">
      <summary>获取数据列的默认值。</summary>
      <returns>数据列的默认值。 默认值为 null。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Identity">
      <summary>获取一个值，该值指示数据列是否是数据行的标识列。</summary>
      <returns>如果列是标识列，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Length">
      <summary>获取用字节表示的数据列长度。</summary>
      <returns>数据列的长度（以字节为单位）。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Name">
      <summary>获取数据存储区中的列的名称。</summary>
      <returns>数据存储区中列的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Nullable">
      <summary>获取一个值，该值指示列在数据存储区中是否可以为空。</summary>
      <returns>如果列在数据存储区中可以为空，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Precision">
      <summary>获取数值数据列中的位数。</summary>
      <returns>数值数据列中的位数。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.PrimaryKey">
      <summary>获取一个值，该值指示列是否是表的主键的一部分。</summary>
      <returns>如果列是表的主键的一部分，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Scale">
      <summary>获取数值列中小数点右边的位数。</summary>
      <returns>数值列中小数点右边的位数。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataConnection">
      <summary>在设计工具中表示到数据存储区的连接。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataConnection.#ctor(System.String,System.String,System.String)">
      <summary>使用指定的名称、数据提供程序和连接字符串初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> 类的新实例。</summary>
      <param name="name">与连接相关联的名称。</param>
      <param name="providerName">用于访问基础数据存储区的提供程序对象的名称</param>
      <param name="connectionString">指定如何连接数据存储区的字符串。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataConnection.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>用指定的名称、数据提供程序和连接字符串，并指示连接是否是从配置文件加载的，初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> 类的新实例。</summary>
      <param name="name">与连接相关联的名称。</param>
      <param name="providerName">用于访问基础数据存储区的提供程序对象的名称。</param>
      <param name="connectionString">指定如何连接数据存储区的字符串。</param>
      <param name="isConfigured">如果连接是从存储在应用程序配置文件中的信息创建的，则为 true；否则为 false。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.ConnectionString">
      <summary>获取为连接定义的应用程序连接字符串。</summary>
      <returns>为连接定义的应用程序连接字符串。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.IsConfigured">
      <summary>获取一个值，该值指示连接信息是否在应用程序的配置文件中。</summary>
      <returns>如果连接是在应用程序的配置文件中定义的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.Name">
      <summary>获取数据连接的名称。</summary>
      <returns>数据连接的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.ProviderName">
      <summary>获取用于访问基础数据存储区的提供程序的名称。</summary>
      <returns>用于访问基础数据存储区的提供程序的名称。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataParameter">
      <summary>表示存储过程的参数。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataParameter.#ctor(System.String,System.Data.DbType,System.Data.ParameterDirection)">
      <summary>使用指定的名称、数据类型和输入/输出语义初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataParameter" /> 类的新实例。</summary>
      <param name="name">参数的名称。</param>
      <param name="dataType">
        <see cref="T:System.Data.DbType" /> 值之一。</param>
      <param name="direction">
        <see cref="T:System.Data.ParameterDirection" /> 值之一。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.DataType">
      <summary>获取参数的数据库类型。</summary>
      <returns>
        <see cref="T:System.Data.DbType" /> 值之一。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.Direction">
      <summary>获取一个值，该值指示参数是只可输入、只可输出、双向或存储过程返回值参数。</summary>
      <returns>
        <see cref="T:System.Data.ParameterDirection" /> 值之一。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.Name">
      <summary>获取参数名。</summary>
      <returns>参数的名称。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataRelationship">
      <summary>向设计器表示通过数据连接访问的数据源中两个表之间的关系。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataRelationship.#ctor(System.String,System.Collections.ICollection,System.ComponentModel.Design.Data.DesignerDataTable,System.Collections.ICollection)">
      <summary>使用指定的名称、父列和子关系初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> 类的新实例。</summary>
      <param name="name">关系的名称。</param>
      <param name="parentColumns">父表中定义关系的列。</param>
      <param name="childTable">关系中的子表。</param>
      <param name="childColumns">子表中定义关系的列。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ChildColumns">
      <summary>获取子表中属于关系一部分的列的集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> 对象的集合，定义子表中的关系。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ChildTable">
      <summary>获取关系中引用的子表。</summary>
      <returns>表示关系中的子表的 <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> 对象。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.Name">
      <summary>获取关系的名称。</summary>
      <returns>关系的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ParentColumns">
      <summary>获取父表中的列的集合，这些列是两个表之间关系的一部分。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> 对象的集合，定义父表中的关系。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataSchemaClass">
      <summary>指定可从数据存储区架构检索的对象的类型。 此类不能被继承。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.StoredProcedures">
      <summary>指示存储过程应从数据存储区架构返回。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.Tables">
      <summary>指示表应从数据存储区架构返回。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.Views">
      <summary>指示数据视图应从数据存储区架构返回。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure">
      <summary>表示数据存储区中的存储过程。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.#ctor(System.String)">
      <summary>用指定的名称初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure" /> 类的新实例。</summary>
      <param name="name">存储过程的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.#ctor(System.String,System.String)">
      <summary>用指定的名称和所有者初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure" /> 类的新实例。</summary>
      <param name="name">存储过程的名称。</param>
      <param name="owner">存储过程的数据存储区所有者。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.CreateParameters">
      <summary>在派生类中重写后，返回存储过程的参数的集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.Data.DesignerDataParameter" /> 对象的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Name">
      <summary>获取存储过程的名称。</summary>
      <returns>存储过程的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Owner">
      <summary>获取存储过程的所有者。</summary>
      <returns>存储过程的所有者。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Parameters">
      <summary>获取存储过程所需的参数的集合。</summary>
      <returns>存储过程的参数的集合。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataTable">
      <summary>表示数据存储区中的表。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.#ctor(System.String)">
      <summary>用指定的名称初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> 类的新实例。</summary>
      <param name="name">表的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.#ctor(System.String,System.String)">
      <summary>用指定的名称和所有者初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> 类的新实例。</summary>
      <param name="name">表的名称。</param>
      <param name="owner">表的所有者。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.CreateRelationships">
      <summary>在派生类中重写后，返回关系对象的集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> 对象的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTable.Relationships">
      <summary>获取为表定义的关系的集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> 对象的集合。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataTableBase">
      <summary>定义在数据存储区表与数据存储区视图之间共享的属性和方法。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataTableBase" /> 类的新实例。</summary>
      <param name="name">表或视图的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.#ctor(System.String,System.String)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataTableBase" /> 类的新实例。</summary>
      <param name="name">表或视图的名称。</param>
      <param name="owner">表或视图的数据存储区所有者。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Columns">
      <summary>获取为表或视图定义的列的集合。</summary>
      <returns>为表或视图定义的列的集合。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.CreateColumns">
      <summary>在派生类中重写后，返回数据存储区列对象的集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> 对象的集合。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Name">
      <summary>获取数据存储区表或视图的名称。</summary>
      <returns>数据存储区表或视图的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Owner">
      <summary>获取数据存储区表或视图的所有者。</summary>
      <returns>数据存储区表或视图的所有者。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataView">
      <summary>表示数据存储区中的数据视图。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataView.#ctor(System.String)">
      <summary>用指定的名称初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataView" /> 类的新实例。</summary>
      <param name="name">视图的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataView.#ctor(System.String,System.String)">
      <summary>用指定的名称和所有者初始化 <see cref="T:System.ComponentModel.Design.Data.DesignerDataView" /> 类的新实例。</summary>
      <param name="name">视图的名称。</param>
      <param name="owner">视图的数据存储区所有者。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.IDataEnvironment">
      <summary>定义一个数据服务接口，控件设计人员可以通过该接口将数据存储区或与数据库相关的功能集成到设计环境中。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.BuildConnection(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>使用设计工具的新连接用户界面创建新的数据连接或编辑现有连接。</summary>
      <returns>一个新的或编辑过的 <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> 对象，如果用户取消操作，则为 null。</returns>
      <param name="owner">连接对话框的父窗口。</param>
      <param name="initialConnection">要编辑的连接（如果有）。 若要创建新连接，则 <paramref name="initialConnection" /> 应为 null。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.BuildQuery(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection,System.ComponentModel.Design.Data.QueryBuilderMode,System.String)">
      <summary>启动一个对话框以生成 SQL 查询字符串。</summary>
      <returns>一个包含 SQL 查询的字符串，如果用户取消，则为 null。</returns>
      <param name="owner">该对话框的父窗口。</param>
      <param name="connection">要用于查询的数据连接。</param>
      <param name="mode">
        <see cref="T:System.ComponentModel.Design.Data.QueryBuilderMode" /> 值之一。</param>
      <param name="initialQueryText">查询的初始值，或为 <see cref="F:System.String.Empty" /> 以创建新查询。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.ConfigureConnection(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection,System.String)">
      <summary>将连接字符串写入应用程序的配置文件。</summary>
      <returns>一个包含保存的连接数据的 <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> 对象，该对象的 <see cref="P:System.ComponentModel.Design.Data.DesignerDataConnection.Name" /> 属性设置为 <paramref name="name" />，<see cref="P:System.ComponentModel.Design.Data.DesignerDataConnection.IsConfigured" /> 属性设置为 true。</returns>
      <param name="owner">该对话框的父窗口（如果有）。</param>
      <param name="connection">一个 <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> 对象，包含要保存的连接数据。</param>
      <param name="name">新连接配置项的名称。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.IDataEnvironment.Connections">
      <summary>获取在当前设计会话中定义的数据连接的集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> 对象的集合，这些对象表示在当前设计会话中可用的数据连接。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetCodeExpression(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>返回一个代码表达式，该表达式包含从应用程序的配置文件检索连接字符串所需的源代码。</summary>
      <returns>一个 <see cref="T:System.CodeDom.CodeExpression" /> 对象，包含从应用程序的配置文件检索连接字符串所需的源代码。</returns>
      <param name="connection">要从应用程序的配置文件检索的连接。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetConnectionSchema(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>获取指定数据连接的架构。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.Data.IDesignerDataSchema" /> 对象，包含指定数据连接的架构信息；如果无可用架构信息，则为 null。</returns>
      <param name="connection">要返回其架构信息的数据连接。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetDesignTimeConnection(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>获取可以在设计时使用的数据库连接。</summary>
      <returns>一个可以在设计时使用的 <see cref="T:System.Data.Common.DbConnection" /> 对象。</returns>
      <param name="connection">所需的数据连接。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.IDesignerDataSchema">
      <summary>定义用于检索数据存储区架构信息的方法。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems(System.ComponentModel.Design.Data.DesignerDataSchemaClass)">
      <summary>获取指定架构项的集合。</summary>
      <returns>指定类型的架构对象的集合。</returns>
      <param name="schemaClass">要返回的架构对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass(System.ComponentModel.Design.Data.DesignerDataSchemaClass)">
      <summary>返回一个值，该值指示数据存储区是否包含指定的数据架构对象。</summary>
      <returns>如果数据存储区支持指定的数据架构对象，则为 true；否则为 false。</returns>
      <param name="schemaClass">要返回的架构对象。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.QueryBuilderMode">
      <summary>指定设计环境应构造的数据存储区查询的类型。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Delete">
      <summary>要生成的查询为“删除”查询。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Insert">
      <summary>要生成的查询为“插入”查询。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Select">
      <summary>要生成的查询为“选择”查询。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Update">
      <summary>要生成的查询为“更新”查询。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader">
      <summary>提供 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> 接口的实现。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
      <summary>启动加载过程。</summary>
      <param name="host">要加载的设计器加载程序宿主。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">设计器已经加载，或者已经使用其他设计器加载程序宿主调用了 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <paramref name="host" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> 占用的资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)">
      <summary>使用 <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> 启用或禁用组件通知。</summary>
      <returns>如果在进行此调用之前启用了组件通知，则为 true；否则为 false。</returns>
      <param name="enable">要通过 <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> 启用组件通知，则为 true；要通过 <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> 禁用组件通知，则为 false。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush">
      <summary>刷新设计器加载程序的挂起更改。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)">
      <summary>获取所请求的服务。</summary>
      <returns>请求的服务，或者，如果找不到请求的服务则为 null。</returns>
      <param name="serviceType">服务的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize">
      <summary>初始化服务。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded">
      <summary>指示是否应该重新加载设计器。</summary>
      <returns>如果应重新加载设计器，则为 true；否则为 false。 默认实现始终返回 true。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost">
      <summary>获取加载程序宿主。</summary>
      <returns>已传递至 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> 方法的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 已被释放。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading">
      <summary>获取一个值，指示设计器加载程序是否正在加载设计图面。</summary>
      <returns>如果设计器加载程序当前正在加载设计图面，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified">
      <summary>获取或设置一个值，该值指示设计器是否已修改。</summary>
      <returns>如果设计器已修改，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad">
      <summary>通知设计器加载程序加载即将开始。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload">
      <summary>通知设计器加载程序卸载即将开始。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>通知设计器加载程序加载已完成。</summary>
      <param name="successful">如果已成功地完成了加载，则为 true；否则为 false。</param>
      <param name="errors">包含被报告为错误的对象（通常是异常）的 <see cref="T:System.Collections.ICollection" />。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying">
      <summary>通知设计器加载程序即将修改文档的状态。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>刷新对设计器的所有更改。</summary>
      <param name="serializationManager">用于保持加载的设计器的状态的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>从持久性存储中加载设计器。</summary>
      <param name="serializationManager">用于加载设计器的状态的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider">
      <summary>获取或设置加载程序使用的序列化管理器的属性提供程序。</summary>
      <returns>要将其属性提供给序列化管理器的对象。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)">
      <summary>排队设计器的重新加载。</summary>
      <param name="flags">
        <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> 值的按位组合。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending">
      <summary>获取一个值，指示重新加载是否已经排队。</summary>
      <returns>如果对 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> 的调用已经为重新加载请求排队，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)">
      <summary>报告刷新更改时发生的错误。</summary>
      <param name="errors">包含错误对象（通常是异常）的 <see cref="T:System.Collections.ICollection" />。</param>
      <exception cref="T:System.InvalidOperationException">刷新更改时发生了一个或多个错误。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)">
      <summary>设置基组件的完整类名。</summary>
      <param name="name">表示要设计的组件的全名的字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency">
      <summary>将外部组件注册为由 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> 管理的加载过程的一部分。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
      <summary>发出信号表示已完成依赖加载。</summary>
      <param name="successful">如果加载成功，则为 true；否则为 false。</param>
      <param name="errorCollection">包含加载期间发生的错误的 <see cref="T:System.Collections.ICollection" />。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" /> 未添加任何加载依赖项，或者 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 已被释放。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload">
      <summary>重新加载设计文档。</summary>
      <returns>如果接受重新加载请求，则为 true；如果加载程序不允许重新加载，则为 false。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions">
      <summary>定义 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> 方法的行为。 可以使用按位 OR 运算符组合这些标志。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Default">
      <summary>设计器加载程序在重新加载前会刷新更改，但它不会强制重新加载，如果发生加载错误，它也不会将 <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> 属性设置为 true。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Force">
      <summary>设计器加载程序强制发生重新加载。 通常，只有在 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" /> 方法返回 true 时，才会发生重新加载。 此标志会跳过调用此方法，并且总是会执行重新加载。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.ModifyOnError">
      <summary>如果发生加载错误，设计器加载程序会将 <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> 属性设置为 true。 如果您希望刷新加载程序以覆盖有错的持久性状态，此标志很有用。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.NoFlush">
      <summary>设计器加载程序在重新加载前会放弃所有更改。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary>将一组组件序列化到一个序化列存储区中。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary>使用给定的服务提供程序初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> 类的新实例以解析服务。</summary>
      <param name="provider">用于解析服务的 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary>创建一个新的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</summary>
      <returns>新序列化存储区。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary>将给定存储区反序列化以产生一个对象集合。</summary>
      <returns>已反序列化的组件的集合。</returns>
      <param name="store">将从中反序列化对象的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 不是受支持的序列化存储区类型。 使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary>将给定存储区反序列化，并使用反序列化的 <see cref="T:System.ComponentModel.IComponent" /> 对象填充给定的 <see cref="T:System.ComponentModel.IContainer" />。</summary>
      <returns>已反序列化的组件的集合。</returns>
      <param name="store">将从中反序列化对象的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="container">
        <see cref="T:System.ComponentModel.IComponent" /> 对象将要添加到的容器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> 或 <paramref name="container" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 不是受支持的序列化存储区类型。 使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary>将给定 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 反序列化为给定容器，还可以应用默认属性值。</summary>
      <param name="store">将从中反序列化对象的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="container">数据将应用到的对象的容器。</param>
      <param name="validateRecycledTypes">如果要验证回收类型，则为 true；否则为 false。</param>
      <param name="applyDefaults">如果要应用默认属性值，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> 或 <paramref name="container" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 不是受支持的序列化存储区类型。 使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary>从给定流加载 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</summary>
      <returns>已加载的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</returns>
      <param name="stream">要从其加载 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 的流。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="stream" /> 支持查找，其长度为 0。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>将给定的对象序列化为给定的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</summary>
      <param name="store">
        <paramref name="value" /> 将序列化为的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="value">要序列化的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> 或 <paramref name="value" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 已关闭，或者 <paramref name="store" /> 不是序列化存储区的支持类型。 使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>根据默认属性值序列化给定对象。</summary>
      <param name="store">
        <paramref name="value" /> 将序列化为的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="value">要序列化的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> 或 <paramref name="value" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 已关闭，或者 <paramref name="store" /> 不是序列化存储区的支持类型。 使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>序列化给定对象上的给定成员。</summary>
      <param name="store">
        <paramref name="member" /> 将序列化为的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="owningObject">拥有 <paramref name="member" /> 的对象。</param>
      <param name="member">给定的成员。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 已关闭，或者 <paramref name="store" /> 不是序列化存储区的支持类型。 使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>将给定对象的给定成员序列化，但是，如果成员包含默认属性值，也要序列化该成员。</summary>
      <param name="store">
        <paramref name="member" /> 将序列化为的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</param>
      <param name="owningObject">拥有 <paramref name="member" /> 的对象。</param>
      <param name="member">给定的成员。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> 已关闭，或者 <paramref name="store" /> 不是序列化存储区的支持类型。 使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 返回的存储区。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
      <summary>提供用于实现基于 CodeDOM 的设计器加载程序的基类。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> 类的新实例。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider">
      <summary>获取此设计器加载程序将使用的 <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />。</summary>
      <returns>此设计器加载程序将使用的 <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /></returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose">
      <summary>释放 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> 类使用的资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize">
      <summary>初始化服务。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化，或设计器加载程序不支持类型解析服务，该服务是 CodeDom 序列化所必需的。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded">
      <summary>返回一个值，指示重新加载是否是必需的。</summary>
      <returns>如果 <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> 决定重新加载是必需的，则为 true；否则为 false。</returns>
      <exception cref="T:System.NotSupportedException">该语言不为此文件提供代码分析器；此文件类型可能不支持设计器。</exception>
      <exception cref="T:System.InvalidOperationException">可以设计该类，但它不是文件中的第一个类，否则将无法设计此文件中的任何类，进而导致无法为此文件显示设计器。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad">
      <summary>通知设计器加载程序加载即将开始。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload">
      <summary>通知设计器加载程序卸载即将开始。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> 事件。</summary>
      <param name="component">要重命名的组件。</param>
      <param name="oldName">组件的原始名称。</param>
      <param name="newName">组件的新名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>通知设计器加载程序加载已完成。</summary>
      <param name="successful">为 true 则指示加载已成功完成；否则，为 false。</param>
      <param name="errors">被报告为错误的对象（通常为异常）的 <see cref="T:System.Collections.ICollection" /></param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse">
      <summary>分析文本或其他永久存储区并返回 <see cref="T:System.CodeDom.CodeCompileUnit" />。</summary>
      <returns>从分析操作生成的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>请求设计器的根组件的序列化。</summary>
      <param name="manager">要从中请求序列化程序的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <exception cref="T:System.NotSupportedException">该语言不为此文件提供代码分析器；此文件类型可能不支持设计器。</exception>
      <exception cref="T:System.InvalidOperationException">可以设计该类，但它不是文件中的第一个类，否则将无法设计此文件中的任何类，进而导致无法为此文件显示设计器。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>分析来自 CodeDOM 提供程序的代码。</summary>
      <param name="manager">要从中请求序列化程序的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <exception cref="T:System.NotSupportedException">该语言不为此文件提供代码分析器；此文件类型可能不支持设计器。</exception>
      <exception cref="T:System.InvalidOperationException">可以设计该类，但它不是文件中的第一个类，否则将无法设计此文件中的任何类，进而导致无法为此文件显示设计器。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)">
      <summary>反序列化指定的序列化数据对象并返回由这些数据表示的对象的集合。</summary>
      <returns>由 <paramref name="serializationData" /> 表示的对象集合。</returns>
      <param name="serializationData">包含序列化的数据的对象。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="serializationData" /> 不是 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)">
      <summary>序列化指定的对象集合并将其存储在序列化数据对象中。</summary>
      <returns>包含指定的对象集合的序列化状态的对象。</returns>
      <param name="objects">要序列化的对象的集合。</param>
      <exception cref="T:System.InvalidOperationException">未找到 <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)">
      <summary>创建一个新名称，该名称对于指定容器中的所有组件来说是唯一的。</summary>
      <returns>数据类型的唯一名称。</returns>
      <param name="container">将新对象添加到的容器。</param>
      <param name="dataType">接收该名称的对象的数据类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataType" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)">
      <summary>获取一个值，该值指示指定名称是否有效。</summary>
      <returns>如果该名称有效，则为 true；否则为 false。</returns>
      <param name="name">要验证的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)">
      <summary>获取一个值，该值指示指定名称是否有效。</summary>
      <param name="name">要验证的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 不是有效标识符，或者已经存在具有相同名称的组件。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService">
      <summary>获取要与此设计器加载程序一起使用的类型解析服务。</summary>
      <returns>CodeDOM 序列化程序在解析类型时将使用的 <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)">
      <summary>将编译单元更改写入永久存储区。</summary>
      <param name="unit">要保持的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel">
      <summary>确定 CodeDom 资源适配器要使用的本地化模型。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.None">
      <summary>本地化提供程序应忽略经过本地化的属性。 本地化提供程序仍将为不支持代码生成且可序列化的对象写出资源。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyAssignment">
      <summary>本地化提供程序将通过为每个属性分配一个资源的方式写出经过本地化的属性。 当属性的数目很小时，此模型的处理速度很快，但随着包含默认值的属性的数目增长，此模型的扩展能力很差。</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyReflection">
      <summary>本地化提供程序将经过本地化的属性值写入到一个资源文件中，然后使用 <see cref="T:System.ComponentModel.ComponentResourceManager" /> 类按名称对属性进行反射以在运行时填充这些属性值。 此模型需要在运行时使用反射，因此处理速度会比较慢，但对于大量具有默认值的属性，此模型的扩展能力较好。</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider">
      <summary>提供 CodeDOM 资源序列化服务。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> 类的新实例。</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />，本地化提供程序使用它添加其扩展程序属性。</param>
      <param name="model">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> 值，指示 CodeDOM 资源适配器要使用的本地化模型</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel,System.Globalization.CultureInfo[])">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> 类的新实例。</summary>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />，本地化提供程序使用它添加其扩展程序属性。</param>
      <param name="model">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> 值，指示 CodeDOM 资源适配器要使用的本地化模型</param>
      <param name="supportedCultures">此资源适配器应支持的区域性数组。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.Dispose">
      <summary>释放由 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.System#ComponentModel#Design#Serialization#IDesignerSerializationProvider#GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)" />。</summary>
      <returns>所请求类型的序列化程序的实例，如果不能满足该请求则为 null。</returns>
      <param name="manager">请求序列化程序的序列化管理器。</param>
      <param name="currentSerializer">指定类型的当前序列化程序的实例。 如果不存在指定类型的序列化程序，则这可能为 null。</param>
      <param name="objectType">要序列化的对象的数据类型。</param>
      <param name="serializerType">要创建的序列化程序的数据类型。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary>将对象图序列化为一系列 CodeDOM 语句。 此类提供序列化程序的抽象基类。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将指定的已序列化的 CodeDOM 对象反序列化为一个对象。</summary>
      <returns>反序列化的 CodeDOM 对象。</returns>
      <param name="manager">在反序列化进程中使用的序列化管理器接口。</param>
      <param name="codeObject">要进行反序列化的已序列化 CodeDOM 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="codeObject" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="codeObject" /> 是不受支持的代码元素。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>反序列化单条语句。</summary>
      <returns>反序列化 <paramref name="statement" /> 所产生的对象实例。</returns>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="statement">要反序列化的语句。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary>确定给定的语句应属于的语句组。</summary>
      <returns>应与 <paramref name="statement" /> 分为一组的组件的名称。</returns>
      <param name="statement">要为其确定组的 <see cref="T:System.CodeDom.CodeStatement" />。</param>
      <param name="expression">
        <paramref name="statement" /> 已缩减成的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <param name="targetType">
        <paramref name="statement" /> 的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将指定的对象序列化为 CodeDOM 对象。</summary>
      <returns>一个 CodeDOM 对象，它表示已序列化的对象。</returns>
      <param name="manager">要在序列化过程中使用的序列化管理器。</param>
      <param name="value">要序列化的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>序列化给定的对象（考虑默认值）。</summary>
      <returns>表示 <paramref name="value" /> 的 CodeDom 对象。</returns>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="value">要序列化的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>序列化给定对象上的给定成员。</summary>
      <returns>一个 <see cref="T:System.CodeDom.CodeStatementCollection" />，它表示 <paramref name="member" /> 的序列化状态。</returns>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="owningObject">
        <paramref name="member" /> 要附加到的对象。</param>
      <param name="member">要序列化的成员。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 为 null。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> 不是可序列化类型。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>序列化给定成员（考虑默认值）。</summary>
      <returns>一个 CodeDom 对象，它表示 <paramref name="member" />。</returns>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="owningObject">
        <paramref name="member" /> 要附加到的对象。</param>
      <param name="member">要序列化的成员。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="owningObject" /> 或 <paramref name="member" /> 为 null。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> 不是可序列化类型。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将指定值序列化为 CodeDOM 表达式。</summary>
      <returns>已序列化的值。 如果无法获得指定值的引用表达式，或者无法序列化该值，则该方法返回 null。</returns>
      <param name="manager">要在序列化过程中使用的序列化管理器。</param>
      <param name="value">要序列化的对象。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary>为 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 类提供基类。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary>将给定表达式反序列化为内存中的对象。</summary>
      <returns>从 <paramref name="expression" /> 的解释生成的对象。</returns>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="name">从表达式生成的对象的名称。 如果不需要命名该对象，可以为 null。</param>
      <param name="expression">要解释的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary>返回给定类型的实例。</summary>
      <returns>
        <paramref name="type" /> 的一个实例。</returns>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="type">要返回的实例的 <see cref="T:System.Type" />。</param>
      <param name="parameters">要传递给 <paramref name="type" /> 的构造函数的参数。</param>
      <param name="name">反序列化的对象的名称。</param>
      <param name="addToContainer">要将该对象添加到设计容器，则为 true；否则为 false。 该对象必须实现 <see cref="T:System.ComponentModel.IComponent" /> 才能使此功能生效。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="type" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>反序列化来自固定区域性资源包的给定对象的属性。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要从其中对属性进行反序列化的对象。</param>
      <param name="filter">筛选将反序列化哪些属性的 <see cref="T:System.Attribute" /> 数组。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>通过解释并执行 CodeDOM 语句反序列化语句。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statement">要反序列化的 <see cref="T:System.CodeDom.CodeStatement" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>获取项目目标 .NET Framework 版本中定义的特性的集合。</summary>
      <returns>项目目标 .NET Framework 版本中定义的特性的集合。</returns>
      <param name="manager">序列化管理器。</param>
      <param name="type">目标类型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>获取项目目标 .NET Framework 版本中定义的特性的集合。</summary>
      <returns>项目目标 .NET Framework 版本中定义的特性的集合。</returns>
      <param name="manager">序列化管理器。</param>
      <param name="instance">目标类型的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>获取项目的 .NET Framework 的目标版本中定义的事件的集合。</summary>
      <returns>项目的 .NET Framework 的目标版本中定义的事件的集合。</returns>
      <param name="manager">序列化管理器。</param>
      <param name="instance">目标类型的对象。</param>
      <param name="attributes">要传递给目标 .NET Framework 版本的特性的数组。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>返回给定对象的表达式。</summary>
      <returns>表示 v<paramref name="alue" /> 的 <see cref="T:System.CodeDom.CodeExpression" />，或者，如果没有 v<paramref name="alue" /> 的现有表达式，则为 null。</returns>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要为其获取表达式的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>获取项目的 .NET Framework 的目标版本中定义的属性的集合。</summary>
      <returns>项目的 .NET Framework 的目标版本中定义的属性的集合。</returns>
      <param name="manager">序列化管理器。</param>
      <param name="instance">目标类型的对象。</param>
      <param name="attributes">要传递给目标 .NET Framework 版本的特性的数组。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>获取从类型元数据生成的反射类型。</summary>
      <returns>从 <paramref name="type" /> 的元数据生成的反射类型。</returns>
      <param name="manager">序列化管理器。</param>
      <param name="type">要从中使用元数据的类型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>获取从对象元数据生成的反射类型。</summary>
      <returns>从 <paramref name="object" /> 的元数据生成的反射类型。</returns>
      <param name="manager">序列化管理器。</param>
      <param name="instance">要从中使用元数据的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>定位给定对象值的序列化程序。</summary>
      <returns>适合于 <paramref name="value" /> 的 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />。</returns>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">指定要检索的序列化程序的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>定位给定类型的序列化程序。</summary>
      <returns>适合于 <paramref name="valueType" /> 的 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />。</returns>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="valueType">指定要检索的序列化程序的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="valueType" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary>获取 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />，它可在类型筛选中用来识别 .NET Framework 的目标版本。</summary>
      <returns>一个可识别 .NET Framework 的类型说明提供程序。</returns>
      <param name="provider">类型说明提供程序服务。</param>
      <param name="instance">如果 <paramref name="provider" /> 为 null，则为一个可从中派生类型说明提供程序服务的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>返回给定对象的唯一名称。</summary>
      <returns>
        <paramref name="value" /> 的唯一名称。</returns>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">将检索其名称的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>返回一个值，指示给定对象是否已序列化。</summary>
      <returns>如果已序列化 <paramref name="value" />，则为 true；否则为 false。</returns>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要为上面的序列化测试的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>返回一个值，指示给定对象是否已序列化，也可以考虑预设表达式。</summary>
      <returns>如果已序列化 <paramref name="value" />，则为 true；否则为 false。</returns>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要为上面的序列化测试的对象。</param>
      <param name="honorPreset">要包含预设表达式，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary>返回一个表示给定对象的创建的表达式。</summary>
      <returns>表示 <paramref name="value" /> 的创建的表达式。</returns>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <param name="isComplete">如果已完全序列化 <paramref name="value" />，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary>将给定事件序列化为给定的语句集合。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">事件将序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">
        <paramref name="descriptor" /> 绑定到的对象。</param>
      <param name="descriptor">指定要序列化的事件的 <see cref="T:System.ComponentModel.EventDescriptor" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" /> 或 <paramref name="descriptor" /> 为 null。</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> 不可用。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>将指定事件序列化为给定的语句集合。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">事件将序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">将序列化其事件的对象。</param>
      <param name="filter">筛选将序列化哪些事件的 <see cref="T:System.Attribute" /> 数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="statements" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>将给定对象的属性序列化为给定的语句集合。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">属性将序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">将序列化其属性的对象。</param>
      <param name="filter">筛选将序列化哪些属性的 <see cref="T:System.Attribute" /> 数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="statements" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>将给定对象的属性序列化为固定区域性资源包。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">未使用。</param>
      <param name="value">其属性将被序列化的对象。</param>
      <param name="filter">筛选将序列化哪些属性的 <see cref="T:System.Attribute" /> 数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="statements" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary>序列化给定对象的属性。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="statements">属性将序列化为的 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
      <param name="value">将序列化其属性的对象。</param>
      <param name="propertyToSerialize">要序列化的属性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" />、<paramref name="statements" /> 或 <paramref name="propertyToSerialize" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>将给定对象序列化为使用给定资源名称的资源包。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="resourceName">
        <paramref name="value" /> 将被序列化到的资源包的名称。</param>
      <param name="value">要序列化的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>将给定对象序列化为使用给定资源名称的资源包。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="resourceName">
        <paramref name="value" /> 将被序列化到的资源包的名称。</param>
      <param name="value">要序列化的对象。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将给定对象序列化为表达式。</summary>
      <returns>如果 <paramref name="value" /> 可以序列化，则为 <see cref="T:System.CodeDom.CodeExpression" /> 对象；否则为 null。</returns>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。 可以为 null。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将给定对象序列化为表达式。</summary>
      <returns>将 <paramref name="value" /> 作为序列化的表达式包含在内的 <see cref="T:System.CodeDom.CodeExpression" />。</returns>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>将给定对象序列化为适合于固定区域性的表达式。</summary>
      <returns>将 <paramref name="value" /> 作为序列化的表达式包含在内的 <see cref="T:System.CodeDom.CodeExpression" />。</returns>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <param name="ensureInvariant">要序列化为固定区域性，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary>将对象与表达式关联。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <param name="expression">要与 <paramref name="value" /> 关联的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="value" /> 或 <paramref name="expression" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary>将对象与表达式关联，并选择指定预设表达式。</summary>
      <param name="manager">用于序列化的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <param name="expression">要与 <paramref name="value" /> 关联的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <param name="isPreset">要指定预设表达式，则为 true；否则为 false。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary>当行号信息可用于序列化错误时引发的异常。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary>使用指定的异常和行信息初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 类的新实例。</summary>
      <param name="ex">要引发的异常。</param>
      <param name="linePragma">指示异常发生位置的 <see cref="T:System.CodeDom.CodeLinePragma" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 类的新实例。</summary>
      <param name="ex">要引发的异常。</param>
      <param name="manager">要从中提取上下文的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用指定的序列化数据和上下文初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 类的新实例。</summary>
      <param name="info">存储正用于序列化或反序列化正由 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 序列化或反序列化的对象的数据。</param>
      <param name="context">描述生成该异常的流的源和目标，以及用于保留该上下文和附加的由调用方定义的上下文的序列化方法。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary>使用指定的消息和行信息初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 类的新实例。</summary>
      <param name="message">描述异常的消息。</param>
      <param name="linePragma">指示异常发生位置的 <see cref="T:System.CodeDom.CodeLinePragma" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> 类的新实例。</summary>
      <param name="message">描述异常的消息。</param>
      <param name="manager">要从中提取上下文的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>设置带有参数名和附加异常信息的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info">存储正用于序列化或反序列化正由 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 序列化或反序列化的对象的数据。</param>
      <param name="context">描述生成该异常的流的源和目标，以及用于保留该上下文和附加的由调用方定义的上下文的序列化方法。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 参数为 null。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary>获取或设置与此异常关联的错误的行信息。</summary>
      <returns>指示该错误的行信息的 <see cref="T:System.CodeDom.CodeLinePragma" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary>序列化集合。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary>验证 <paramref name="method" /> 提供的序列化支持。</summary>
      <returns>如果 <paramref name="method" /> 支持序列化，则为 true；否则为 false。</returns>
      <param name="method">要检查其序列化特性的 <see cref="T:System.Reflection.MethodInfo" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将给定集合序列化为 CodeDOM 对象。</summary>
      <returns>表示 <paramref name="value" /> 的 CodeDOM 对象。</returns>
      <param name="manager">要在序列化期间使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="value">要序列化的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>序列化给定集合。</summary>
      <returns>如果序列化进程成功，则序列化集合；否则为 null。</returns>
      <param name="manager">要在序列化期间使用的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</param>
      <param name="targetExpression">引用该集合的 <see cref="T:System.CodeDom.CodeExpression" /></param>
      <param name="targetType">集合的 <see cref="T:System.Type" />。</param>
      <param name="originalCollection">要序列化的集合。</param>
      <param name="valuesToSerialize">要序列化的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="targetType" />、<paramref name="originalCollection" /> 或 <paramref name="valuesToSerialize" /> 为 null。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary>提供 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> 接口的实现。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary>使用给定的服务提供程序初始化 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> 类的新实例。</summary>
      <param name="provider">一个 <see cref="T:System.IServiceProvider" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> 为 null。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary>获取或设置该序列化管理器的容器。</summary>
      <returns>序列化管理器将向其添加组件的 <see cref="T:System.ComponentModel.IContainer" />。</returns>
      <exception cref="T:System.InvalidOperationException">序列化管理器中有一个活动的序列化会话。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>创建类型的实例。</summary>
      <returns>由 <paramref name="type" /> 指定的类型的新实例。</returns>
      <param name="type">要创建的实例的类型。</param>
      <param name="arguments">类型的构造函数的参数。 这可以为 null 或空集合，以调用默认构造函数。</param>
      <param name="name">要为对象提供的名称。 如果为 null，将不会为对象提供名称，除非将该对象添加到某个容器并且该容器为该对象提供名称。</param>
      <param name="addToContainer">如果要在对象实现 <see cref="T:System.ComponentModel.IComponent" /> 时向容器中添加对象，则为 true；否则为 false。</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="type" /> 不具有采用 <paramref name="arguments" /> 中包含的参数的构造函数。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary>创建新序列化会话。</summary>
      <returns>表示新序列化会话的 <see cref="T:System.IDisposable" />。</returns>
      <exception cref="T:System.InvalidOperationException">序列化管理器已经在一个会话中。 这一版的 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> 不支持同时会话。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary>获取在序列化或反序列化期间发生的错误的列表。</summary>
      <returns>在序列化或反序列化期间发生的错误的列表。</returns>
      <exception cref="T:System.InvalidOperationException">对该属性的访问是在序列化会话的外部进行的。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary>获取与指定类型名称对应的类型。</summary>
      <returns>指定的类型。</returns>
      <param name="typeName">要获取的类型的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>获取给定对象类型的序列化程序。</summary>
      <returns>
        <paramref name="objectType" /> 的序列化程序，或者，如果找不到序列化程序则为 null。</returns>
      <param name="objectType">要检索其序列化程序的对象的类型。</param>
      <param name="serializerType">要检索的序列化程序的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectType" /> 或 <paramref name="serializerType" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary>获取所请求的服务。</summary>
      <returns>所请求的服务，或者在无法解析服务的情况下为 null。</returns>
      <param name="serviceType">要检索的服务类型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary>获取请求的类型。</summary>
      <returns>请求的类型，或者在无法解析类型的情况下为 null。</returns>
      <param name="typeName">要检索的类型的名称。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> 事件。</summary>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary>引发 <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary>获取或设置一个值，指示 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 方法是否应该检查容器中是否存在给定名称。</summary>
      <returns>如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 将传递给定组件名称，则为 true。如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 将检查容器中是否存在给定名称，则为 false。 默认值为 true。</returns>
      <exception cref="T:System.InvalidOperationException">该属性已在序列化会话中发生更改。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary>获取应该用于为序列化管理器的 <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 属性提供属性的对象。</summary>
      <returns>应该用于为序列化管理器的 <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 属性提供属性的对象。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary>获取或设置一个标志，指示 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 是否始终创建类型的新实例。</summary>
      <returns>如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 将返回现有实例，则为 true。如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 将创建类型的新实例，则为 false。 默认值为 false。</returns>
      <exception cref="T:System.InvalidOperationException">序列化管理器中有一个活动的序列化会话。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary>在创建会话时发生。</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary>在释放会话时发生。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>向序列化管理器添加自定义的序列化提供程序。</summary>
      <param name="provider">要添加的序列化提供程序。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary>获取该序列化会话的上下文堆栈。</summary>
      <returns>存储数据的 <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />。</returns>
      <exception cref="T:System.InvalidOperationException">对该属性的访问是在序列化会话的外部进行的。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>实现 <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 方法。</summary>
      <returns>新创建的对象实例。</returns>
      <param name="type">要创建的数据类型。</param>
      <param name="arguments">要传递到此类型的构造函数的参数。</param>
      <param name="name">对象的名称。 此名称可用于以后通过 <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /> 访问该对象。 如果传递了 null，则仍将创建该对象，但无法按名称访问它。</param>
      <param name="addToContainer">要将该对象添加到设计容器中，则为 true。 该对象必须实现 <see cref="T:System.ComponentModel.IComponent" /> 才能使此功能生效。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary>检索具有指定名称的创建对象的实例。</summary>
      <returns>具有给定名称的对象的实例，如果按该名称无法找到任何对象则为 null。</returns>
      <param name="name">要检索的对象名。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">对该属性的访问是在序列化会话的外部进行的。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary>为指定的对象检索名称。</summary>
      <returns>对象的名称，如果对象是未命名的，则为 null。</returns>
      <param name="value">要检索其名称的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">对该属性的访问是在序列化会话的外部进行的。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary>为指定对象类型获取所请求类型的序列化程序。</summary>
      <returns>请求的序列化程序的实例，如果不能找到任何适当的序列化程序，则为 null。</returns>
      <param name="objectType">要为其获取序列化程序的对象类型。</param>
      <param name="serializerType">要检索的序列化程序的类型。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary>获取指定名称的类型。</summary>
      <returns>该类型的实例，如果无法加载该类型，则为 null。</returns>
      <param name="typeName">要加载的类型的完全限定名。</param>
      <exception cref="T:System.InvalidOperationException">对该属性的访问是在序列化会话的外部进行的。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary>实现 <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> 属性。</summary>
      <returns>包含要进行序列化的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>移除以前添加的序列化提供程序。</summary>
      <param name="provider">要移除的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary>用于报告序列化中可以恢复的错误。</summary>
      <param name="errorInformation">包含错误信息的对象，其类型通常为 <see cref="T:System.String" /> 或 <see cref="T:System.Exception" />。</param>
      <exception cref="T:System.InvalidOperationException">对该属性的访问是在序列化会话的外部进行的。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary>当 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> 无法在序列化管理器的名称表中找到指定名称时发生。</summary>
      <exception cref="T:System.InvalidOperationException">序列化管理器没有活动的序列化会话。</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary>在序列化完成时发生。</summary>
      <exception cref="T:System.InvalidOperationException">序列化管理器没有活动的序列化会话。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary>设置指定对象的名称。</summary>
      <param name="instance">要设置名称的对象。</param>
      <param name="name">用作对象名称的 <see cref="T:System.String" />。</param>
      <exception cref="T:System.ArgumentNullException">其中一个参数或两个参数都是 null。</exception>
      <exception cref="T:System.ArgumentException">实例指定的对象已经有名称，或者 <paramref name="name" /> 已被另一个命名对象使用。</exception>
      <exception cref="T:System.InvalidOperationException">对该属性的访问是在序列化会话的外部进行的。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.IServiceProvider.GetService(System.Type)" /> 方法。</summary>
      <returns>
        <paramref name="serviceType" /> 类型的服务对象。 - 或 - 如果没有 <paramref name="serviceType" /> 类型的服务对象，则为 null。</returns>
      <param name="serviceType">一个对象，它指定要获取的服务对象的类型。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary>获取或设置一个标志，指示 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 方法是否验证匹配的名称是否表示同一类型。</summary>
      <returns>如果 <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> 验证类型，则为 true；否则，如果不验证类型，则为 false。 默认值为 true。</returns>
      <exception cref="T:System.InvalidOperationException">序列化管理器中有一个活动的序列化会话。</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary>提供一种在序列化程序之间传递上下文状态的方法。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary>使用给定的表达式和所有者初始化 <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> 类的新实例。</summary>
      <param name="expression">给定的代码表达式。</param>
      <param name="expressionType">给定的代码表达式类型。</param>
      <param name="owner">给定的代码表达式所有者。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />、<paramref name="expressionType" /> 或 <paramref name="owner" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary>用当前值初始化 <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> 类的新实例。</summary>
      <param name="expression">给定的代码表达式。</param>
      <param name="expressionType">给定的代码表达式类型。</param>
      <param name="owner">给定的代码表达式所有者。</param>
      <param name="presetValue">给定的代码表达式预设值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />、<paramref name="expressionType" /> 或 <paramref name="owner" /> 为 null。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary>获取此上下文表示的表达式。</summary>
      <returns>此上下文表示的表达式。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary>获取该表达式的 <see cref="T:System.Type" />。</summary>
      <returns>该表达式的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary>获取拥有此表达式的对象。</summary>
      <returns>拥有此表达式的对象。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary>获取表达式的预设值。</summary>
      <returns>此表达式的预设值，如果没有赋值，则为 null。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload">
      <summary>提供可用于优化设计器的重新加载的接口。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner(System.CodeDom.CodeCompileUnit)">
      <summary>指示设计器是否应重新加载以正确导入指定的编译单元。</summary>
      <returns>如果设计器应重新加载，则为 true；否则为 false。</returns>
      <param name="newTree">包含设计器文档代码的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary>提供用于序列化对象图内的反射基元的基类。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary>将给定值的给定成员说明符序列化为一个语句集合。</summary>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="value">成员被绑定到的对象。</param>
      <param name="descriptor">要序列化的成员的说明符。</param>
      <param name="statements">
        <paramref name="descriptor" /> 会被序列化为 <see cref="T:System.CodeDom.CodeStatementCollection" />。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>确定给定成员是否应序列化。</summary>
      <returns>如果由 <paramref name="descriptor" /> 描述的成员应序列化，则为 true；否则为 false。</returns>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="value">成员被绑定到的对象。</param>
      <param name="descriptor">要序列化的成员的说明符。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary>保存一个由 <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> 提供的语句表。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary>确定表中是否包含给定的语句所有者。</summary>
      <returns>如果 <paramref name="statementOwner" /> 在表中，则为 true；否则为 false。</returns>
      <param name="statementOwner">语句集合的所有者。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary>返回 <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" /> 的 <see cref="T:System.Collections.IEnumerator" />。</summary>
      <returns>用于 <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" /> 的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary>获取给定所有者的语句集合。</summary>
      <returns>
        <paramref name="statementOwner" /> 的语句集合，如果 <paramref name="statementOwner" /> 没在表中，则为 null。</returns>
      <param name="statementOwner">语句集合的所有者。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary>用语句所有者集合填充语句表。</summary>
      <param name="statementOwners">要添加到表的语句所有者集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary>用语句所有者填充语句表。</summary>
      <param name="owner">要添加到表的语句所有者。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 方法。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary>
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> 可添加根上下文以提供根对象的定义。 无法继承此类</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.RootContext" /> 类的新实例。</summary>
      <param name="expression">表示对象图中的根对象的表达式。</param>
      <param name="value">对象图的根对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary>获取表示对象图中的根对象的表达式。</summary>
      <returns>表示对象图中的根对象的 <see cref="T:System.CodeDom.CodeExpression" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary>获取对象图的根对象。</summary>
      <returns>对象图的根对象。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary>指定序列化程序应处理默认值。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>使用到特定成员的绑定选项初始化 <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> 类的新实例。</summary>
      <param name="member">此上下文绑定到的成员。 可以为 null。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary>获取此上下文绑定到的成员。</summary>
      <returns>此上下文绑定到的成员，或者如果上下文绑定到某个对象的所有成员，则为 null。</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary>获取一个值，指示在此上下文中是否应序列化给定成员。</summary>
      <returns>如果在此上下文中应序列化给定成员，则为 true，否则为 false。</returns>
      <param name="member">要检查序列化的成员。</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary>提供可将语句序列化到的位置。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> 类的新实例。</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary>获取由语句上下文提供的语句集合。</summary>
      <returns>包含由语句上下文提供的语句的 <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary>将对象序列化为新类型。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>将给定类型声明反序列化。</summary>
      <returns>根对象。</returns>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="declaration">用于序列化的类型声明。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="typeDecl" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary>返回存储用于序列化成员的语句的方法。</summary>
      <returns>用于发出给定成员的所有初始化代码的方法。</returns>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="declaration">用于序列化的类型声明。</param>
      <param name="value">用于序列化的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />、<paramref name="typeDecl" /> 或 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>返回要在反序列化期间解释的方法数组。</summary>
      <returns>要在反序列化期间解释的方法的 <see cref="T:System.CodeDom.CodeMemberMethod" /> 数组。</returns>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="declaration">用于序列化的类型声明。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="typeDecl" /> 为 null。</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary>通过创建定义根的新类型声明将对象根序列化。</summary>
      <returns>定义根对象的 <see cref="T:System.CodeDom.CodeTypeDeclaration" />。</returns>
      <param name="manager">用于序列化的序列化管理器。</param>
      <param name="root">要序列化的对象。</param>
      <param name="members">可选的成员集合。 可以为 null 或空。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="root" /> 为 null。</exception>
    </member>
    <member name="T:System.Data.Design.MethodSignatureGenerator">
      <summary>此类用于生成数据库查询方法签名，与类型化数据集生成器所创建的签名相同。</summary>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.#ctor">
      <summary>初始化 MethodSignatureGenerator 类的新实例。</summary>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.CodeProvider">
      <summary>获取或设置 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 对象。</summary>
      <returns>
        <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 对象，它为一种编程语言提供用于生成代码和管理编译的代码生成和代码编译接口。 代码生成器可用于以特定的语言生成代码，而代码编译器可用于将代码编译为程序集。</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.ContainerParameterType">
      <summary>获取或设置查询将填充的对象类型。</summary>
      <returns>查询将填充的对象类型。 该类型将为 <see cref="T:System.Data.DataSet" /> 或 <see cref="T:System.Data.DataTable" />。</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.DataSetClassName">
      <summary>获取或设置要填充的类型化数据集的类型名称。</summary>
      <returns>表示要填充的类型化数据集的类型名称的字符串。</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateMethod">
      <summary>返回表示数据库查询的代码成员方法，由类型化数据集生成器生成。</summary>
      <returns>表示数据库查询的 <see cref="T:System.CodeDom.CodeMemberMethod" /> 对象，由类型化数据集生成器生成。</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateMethodSignature">
      <summary>返回表示数据库查询方法签名的字符串，由类型化数据集生成器生成。</summary>
      <returns>表示数据库查询方法签名的字符串，由类型化数据集生成器生成。</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateUpdatingMethods">
      <summary>返回一个代码类型声明，其中包含与数据库查询关联的 Insert、Update 和 Delete 方法。</summary>
      <returns>一个 <see cref="T:System.CodeDom.CodeTypeDeclaration" /> 对象，其中包含与数据库查询关联的 Insert、Update 和 Delete 方法。</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.IsGetMethod">
      <summary>获取或设置一个布尔值，该值指定生成的签名是否需要返回 <see cref="T:System.Data.DataTable" /> 对象。</summary>
      <returns>一个布尔值，该值指定生成的签名是否需要返回 <see cref="T:System.Data.DataTable" /> 对象：如果生成的签名需要返回数据表，则为 True；否则为 False。</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.PagingMethod">
      <summary>获取或设置一个布尔值，该值指定方法是否支持分页。</summary>
      <returns>指定方法是否支持分页的布尔值：如果该方法支持分页，则为 True；如果它不支持分页，则为 False。</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.ParameterOption">
      <summary>获取或设置要用作参数的类型的类别。</summary>
      <returns>一个 ParameterGenerationOption 值，指定要用作参数的类型的类别：<see cref="F:System.Data.Design.ParameterGenerationOption.ClrTypes" />（默认值）、<see cref="F:System.Data.Design.ParameterGenerationOption.SqlTypes" /> 或 <see cref="F:System.Data.Design.ParameterGenerationOption.Objects" />。</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.SetDesignTableContent(System.String)">
      <summary>设置将为其生成数据库查询方法的设计表的架构。</summary>
      <param name="designTableContent">表架构的字符串表示形式。</param>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.SetMethodSourceContent(System.String)">
      <summary>设置将为其生成方法签名的数据库查询。</summary>
      <param name="methodSourceContent">数据库查询的字符串表示形式。</param>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.TableClassName">
      <summary>获取或设置要填充的类型化表的类型名称。</summary>
      <returns>指示要填充的类型化表的类型名称的字符串。</returns>
    </member>
    <member name="T:System.Data.Design.ParameterGenerationOption">
      <summary>设置在类型化 <see cref="T:System.Data.DataSet" /> 类中生成的参数类型。</summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.ClrTypes">
      <summary>类型化数据集中的参数为 CLR 类型。</summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.Objects">
      <summary>类型化数据集中的参数为所有 <see cref="T:System.Object" />。</summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.SqlTypes">
      <summary>类型化数据集中的参数为 SQL 类型。</summary>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGenerator">
      <summary>生成强类型 <see cref="T:System.Data.DataSet" /> 类。</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>基于现有 <see cref="T:System.Data.DataSet" /> 生成强类型 <see cref="T:System.Data.DataSet" />。</summary>
      <returns>强类型 <see cref="T:System.Data.DataSet" />。</returns>
      <param name="dataSet">源 <see cref="T:System.Data.DataSet" />，它为类型化 <see cref="T:System.Data.DataSet" /> 指定元数据。</param>
      <param name="codeNamespace">为类型化 <see cref="T:System.Data.DataSet" /> 提供目标命名空间的命名空间。</param>
      <param name="codeProvider">用于生成数据集的特定语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>基于提供的输入文件生成强类型 <see cref="T:System.Data.DataSet" />。</summary>
      <returns>强类型 <see cref="T:System.Data.DataSet" />。</returns>
      <param name="inputFileContent">表示 <see cref="T:System.Data.DataSet" /> 所基于的 XML 架构的字符串。</param>
      <param name="compileUnit">包含生成的代码的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
      <param name="mainNamespace">包含生成的数据集的 <see cref="T:System.CodeDom.CodeNamespace" />。</param>
      <param name="codeProvider">用于生成数据集的特定语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable)">
      <summary>基于提供的输入文件生成强类型 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="inputFileContent">表示 <see cref="T:System.Data.DataSet" /> 所基于的 XML 架构的字符串。</param>
      <param name="compileUnit">包含生成的代码的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
      <param name="mainNamespace">包含生成的数据集的 <see cref="T:System.CodeDom.CodeNamespace" />。</param>
      <param name="codeProvider">用于生成数据集的特定语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</param>
      <param name="customDBProviders">将连接映射到类型化数据集中的特定提供程序的 HashTable。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>基于提供的输入文件生成强类型 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="inputFileContent">表示 <see cref="T:System.Data.DataSet" /> 所基于的 XML 架构的字符串。</param>
      <param name="compileUnit">包含生成的代码的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
      <param name="mainNamespace">包含生成的数据集的 <see cref="T:System.CodeDom.CodeNamespace" />。</param>
      <param name="codeProvider">用于生成数据集的特定语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</param>
      <param name="customDBProviders">将连接映射到类型化数据集中的特定提供程序的 HashTable。</param>
      <param name="option">确定生成类型化数据集时要创建哪些（如果有）其他组件和方法的 <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" />。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)">
      <summary>基于提供的输入文件生成强类型 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="inputFileContent">表示 <see cref="T:System.Data.DataSet" /> 所基于的 XML 架构的字符串。</param>
      <param name="compileUnit">包含生成的代码的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
      <param name="mainNamespace">包含生成的数据集的 <see cref="T:System.CodeDom.CodeNamespace" />。</param>
      <param name="codeProvider">用于生成数据集的特定语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</param>
      <param name="customDBProviders">将连接映射到类型化数据集中的特定提供程序的 HashTable。</param>
      <param name="option">确定生成类型化数据集时要创建哪些（如果有）其他组件和方法的 <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" />。</param>
      <param name="dataSetNamespace">一个字符串，包含生成的数据集的命名空间。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)">
      <summary>基于提供的输入文件生成强类型 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="inputFileContent">表示 <see cref="T:System.Data.DataSet" /> 所基于的 XML 架构的字符串。</param>
      <param name="compileUnit">包含生成的代码的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
      <param name="mainNamespace">包含生成的数据集的 <see cref="T:System.CodeDom.CodeNamespace" />。</param>
      <param name="codeProvider">用于生成数据集的特定语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</param>
      <param name="customDBProviders">将连接映射到类型化数据集中的特定提供程序的 HashTable。</param>
      <param name="option">确定生成类型化数据集时要创建哪些（如果有）其他组件和方法的 <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" />。</param>
      <param name="dataSetNamespace">一个字符串，包含生成的数据集的命名空间。</param>
      <param name="basePath">一个字符串，该字符串表示基于数据集输入文件的相对路径的架构路径。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Common.DbProviderFactory)">
      <summary>基于提供的输入文件生成强类型 <see cref="T:System.Data.DataSet" />。</summary>
      <param name="inputFileContent">表示 <see cref="T:System.Data.DataSet" /> 所基于的 XML 架构的字符串。</param>
      <param name="compileUnit">包含生成的代码的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
      <param name="mainNamespace">包含生成的数据集的 <see cref="T:System.CodeDom.CodeNamespace" />。</param>
      <param name="codeProvider">用于生成数据集的特定语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</param>
      <param name="specifiedFactory">用于重写 <paramref name="inputFileContent" /> 中包含的提供程序的 <see cref="T:System.Data.Common.DbProviderFactory" />。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>基于提供的输入文件生成强类型 <see cref="T:System.Data.DataSet" />。</summary>
      <returns>强类型 <see cref="T:System.Data.DataSet" />。</returns>
      <param name="inputFileContent">表示 <see cref="T:System.Data.DataSet" /> 所基于的 XML 架构的字符串。</param>
      <param name="compileUnit">包含生成的代码的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
      <param name="mainNamespace">包含生成的数据集的 <see cref="T:System.CodeDom.CodeNamespace" />。</param>
      <param name="codeProvider">用于生成数据集的特定语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</param>
      <param name="option">确定生成类型化数据集时要创建哪些（如果有）其他组件和方法的 <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" />。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)">
      <summary>基于提供的输入文件生成强类型 <see cref="T:System.Data.DataSet" />。</summary>
      <returns>强类型 <see cref="T:System.Data.DataSet" />。</returns>
      <param name="inputFileContent">表示 <see cref="T:System.Data.DataSet" /> 所基于的 XML 架构的字符串。</param>
      <param name="compileUnit">包含生成的代码的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
      <param name="mainNamespace">包含生成的数据集的 <see cref="T:System.CodeDom.CodeNamespace" />。</param>
      <param name="codeProvider">用于生成数据集的特定语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</param>
      <param name="option">确定生成类型化数据集时要创建哪些（如果有）其他组件和方法的 <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" />。</param>
      <param name="dataSetNamespace">一个字符串，包含生成的数据集的命名空间。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)">
      <summary>基于提供的输入文件生成强类型 <see cref="T:System.Data.DataSet" />。</summary>
      <returns>强类型 <see cref="T:System.Data.DataSet" />。</returns>
      <param name="inputFileContent">表示 <see cref="T:System.Data.DataSet" /> 所基于的 XML 架构的字符串。</param>
      <param name="compileUnit">包含生成的代码的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
      <param name="mainNamespace">包含生成的数据集的 <see cref="T:System.CodeDom.CodeNamespace" />。</param>
      <param name="codeProvider">用于生成数据集的特定语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</param>
      <param name="option">确定生成类型化数据集时要创建哪些（如果有）其他组件和方法的 <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" />。</param>
      <param name="dataSetNamespace">一个字符串，包含生成的数据集的命名空间。</param>
      <param name="basePath">一个字符串，该字符串表示基于数据集输入文件的相对路径的架构路径。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String)">
      <summary>返回在提供的输入文件中找到的第一个提供程序名称。</summary>
      <returns>表示用于此 <see cref="T:System.Data.DataSet" /> 的特定提供程序的字符串。</returns>
      <param name="inputFileContent">表示 <see cref="T:System.Data.DataSet" /> 所基于的 XML 架构的字符串。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String,System.String)">
      <summary>返回输入文件中 <paramref name="tableName" /> 的提供程序名称。</summary>
      <returns>表示传递给 <paramref name="tableName" /> 参数的特定表的提供程序名称的字符串。</returns>
      <param name="inputFileContent">表示 <see cref="T:System.Data.DataSet" /> 所基于的 XML 架构的字符串。</param>
      <param name="tableName">表示要从其返回提供程序名称的表名称的字符串。</param>
    </member>
    <member name="P:System.Data.Design.TypedDataSetGenerator.ReferencedAssemblies">
      <summary>获取或设置在类型化数据集中引用的程序集的集合。</summary>
      <returns>包含数据集中所有引用程序集的集合。</returns>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGenerator.GenerateOption">
      <summary>向 <see cref="T:System.Data.Design.TypedDataSetGenerator" /> 提供用于创建支持 LINQ to DataSet 和分层更新的类型化数据集的信息。</summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.HierarchicalUpdate">
      <summary>生成包含 TableAdapterManager 和关联方法的类型化数据集，以便启用分层更新。</summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.LinqOverTypedDatasets">
      <summary>生成包含从 <see cref="T:System.Data.TypedTableBase`1" /> 继承的数据表的类型化数据集，以便能够对数据表执行 LINQ 查询。</summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.None">
      <summary>生成与在早于 Visual Studio 2008 的 Visual Studio 版本中生成的类型化数据集兼容的类型化数据集。</summary>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGeneratorException">
      <summary>在生成强类型 <see cref="T:System.Data.DataSet" /> 时发生名称冲突的情况下引发的异常。</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor">
      <summary>使用由系统提供的用来描述错误的消息初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.Collections.IList)">
      <summary>通过传入错误集合初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 类的新实例。</summary>
      <param name="list">错误的 <see cref="T:System.Collections.IList" />。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用指定的序列化信息和流上下文初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 类的新实例。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.String)">
      <summary>使用指定的描述错误的消息初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 类的新实例。</summary>
      <param name="message">描述该异常的消息。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)">
      <summary>使用指定的字符串和内部异常初始化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 类的新实例。</summary>
      <param name="message">描述该异常的消息。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</param>
      <param name="innerException">导致当前异常的异常。 如果 <paramref name="innerException" /> 参数不为 null，则当前异常将在处理内部异常的 catch 块中引发。</param>
    </member>
    <member name="P:System.Data.Design.TypedDataSetGeneratorException.ErrorList">
      <summary>获取生成的错误的动态列表。</summary>
      <returns>错误列表。</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>实现 ISerializable 接口并返回序列化 <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> 对象所必需的数据。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 结构。</param>
    </member>
    <member name="T:System.Data.Design.TypedDataSetSchemaImporterExtension">
      <summary>为 XML 架构元素声明（包括 WSDL 文档中的文本 XSD 消息部分）生成到 .NET Framework 类型的内部映射。</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.#ctor">
      <summary>初始化 <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.#ctor(System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>初始化 <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" /> 类的新实例。</summary>
      <param name="dataSetGenerateOptions">用于生成类型化数据集的 <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> 值，可启用数据集的 LINQ 以及层次更新。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>为 XML 架构文档中定义的元素生成内部类型映射信息。</summary>
      <returns>返回表示类型化数据集类的名称的 <see cref="T:System.String" />。</returns>
      <param name="name">表示要导入的架构的名称的 <see cref="T:System.String" />。</param>
      <param name="namespaceName">表示 XML 架构的命名空间的 <see cref="T:System.String" />。</param>
      <param name="context">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 表示 Xml 架构对象模型层次结构的根类，并作为诸如 XML Schema 的类基类。</param>
      <param name="schemas">表示 XML 架构集合的 <see cref="T:System.Xml.Schema.XmlSchema" /> 类。</param>
      <param name="importer">基 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />，它为 XML 架构元素声明（包括 WSDL 文档中的 XSD 消息部分）生成 .NET Framework 类型的内部映射。</param>
      <param name="compileUnit">包含生成的代码的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
      <param name="mainNamespace">包含生成的数据集的 <see cref="T:System.CodeDom.CodeNamespace" />。</param>
      <param name="options">指定生成 .NET Framework 类型以用于 XML Web services 时要使用的各种选项的 <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />。</param>
      <param name="codeProvider">用于生成数据集的特定语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>为 XML 架构文档中定义的元素生成内部类型映射信息。</summary>
      <returns>返回表示类型化数据集类的名称的 <see cref="T:System.String" />。</returns>
      <param name="type">XMLSchemaType</param>
      <param name="context">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 表示 Xml 架构对象模型层次结构的根类，并作为诸如 XmlSchema 的类基类。</param>
      <param name="schemas">表示 XML 架构集合的 <see cref="T:System.Xml.Schema.XmlSchema" /> 类。</param>
      <param name="importer">基 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />，它为 XML 架构元素声明（包括 WSDL 文档中的 XSD 消息部分）生成 .NET Framework 类型的内部映射。</param>
      <param name="compileUnit">包含生成的代码的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</param>
      <param name="mainNamespace">CodeNamespace</param>
      <param name="options">指定生成 .NET Framework 类型以用于 XML Web services 时要使用的各种选项的 <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />。</param>
      <param name="codeProvider">用于生成数据集的特定语言的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</param>
    </member>
    <member name="T:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35">
      <summary>为 XML 架构元素声明生成到 .NET Framework 类型的内部映射。 扩展 <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" />，以便向为 .NET Framework 3.5 版创建的类型化数据集提供其他功能。</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35.#ctor">
      <summary>初始化 <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Diagnostics.Design.LogConverter">
      <summary>提供 <see cref="P:System.Diagnostics.EventLog.Log" /> 属性的类型转换器。</summary>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.#ctor">
      <summary>初始化给定类型的 <see cref="T:System.Diagnostics.Design.LogConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指示该转换器是否可以使用指定的上下文将给定类型的对象转换为此转换器的类型。</summary>
      <returns>如果转换可以执行，则为 true；否则为 false。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供格式上下文。</param>
      <param name="sourceType">一个 T:System.Type，它表示要转换的类型。</param>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>使用指定的上下文和区域性信息将给定的对象转换为字符串。</summary>
      <returns>表示转换的 value 的 <see cref="T:System.Object" />。</returns>
      <param name="context">提供一个格式上下文的 T:System.ComponentModel.ITypeDescriptorContext。</param>
      <param name="culture">作为当前区域性使用的 T:System.Globalization.CultureInfo。</param>
      <param name="value">要转换的 T:System.Object。</param>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取此验证器设计用于的数据类型的标准值集合。</summary>
      <returns>包含标准有效值集的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />；如果数据类型不支持标准值集，则为 null。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供格式上下文。</param>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指示此对象是否支持可使用指定的上下文从列表中选取的标准值集。</summary>
      <returns>返回 true，因为应当调用 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 来查找对象支持的一组公共值。 此方法从不返回 false。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供格式上下文。</param>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessDesigner">
      <summary>用于扩展进程的设计模式行为的基本设计器类。</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.Design.ProcessDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整进程通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" />，包含组件的类的属性。</param>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessModuleDesigner">
      <summary>用于扩展进程模块的设计模式行为的基本设计器类。</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessModuleDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.Design.ProcessModuleDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessModuleDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整进程模块通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" />，包含组件的类的属性。</param>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessThreadDesigner">
      <summary>用于扩展进程线程的设计模式行为的基本设计器类。</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessThreadDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.Design.ProcessThreadDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessThreadDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整组件通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" />，包含组件的类的属性。</param>
    </member>
    <member name="T:System.Messaging.Design.MessageDesigner">
      <summary>提供 <see cref="T:System.Messaging.Message" /> 类的基本设计时功能。</summary>
    </member>
    <member name="M:System.Messaging.Design.MessageDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Messaging.Design.MessageDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Messaging.Design.MessageDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>修改设计器通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 类公开的属性集。</summary>
      <param name="properties">一个 <see cref="T:System.Collections.IDictionary" />，包含为组件筛选的属性集。</param>
    </member>
    <member name="T:System.Resources.Tools.ITargetAwareCodeDomProvider">
      <summary>定义启动强类型的资源生成器（<see cref="T:System.Resources.Tools.StronglyTypedResourceBuilder" /> 对象）的接口，确定哪些类型和属性可用，因此它可以发出正确的代码文档对象模型 (CodeDOM) 树。</summary>
    </member>
    <member name="M:System.Resources.Tools.ITargetAwareCodeDomProvider.SupportsProperty(System.Type,System.String,System.Boolean)">
      <summary>指示在项目的目标框架中的指定类型是否具有指定的命名属性。</summary>
      <returns>true 如果在项目的目标框架的 <paramref name="type" /> 具有 <paramref name="propertyname" />命名属性；否则 false。</returns>
      <param name="type">将要查询其属性的类型。</param>
      <param name="propertyName">要在 <paramref name="type" /> 中查找的属性的名称。</param>
      <param name="isWritable">指定属性是否必须包括 get 访问器的标志。</param>
    </member>
    <member name="T:System.Resources.Tools.StronglyTypedResourceBuilder">
      <summary>为强类型资源提供支持。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>生成一个类文件，该文件包含与指定集合中所引用的资源相匹配的强类型属性。</summary>
      <returns>一个 <see cref="T:System.CodeDom.CodeCompileUnit" /> 容器。</returns>
      <param name="resourceList">
        <see cref="T:System.Collections.IDictionary" /> 集合，其中每个字典项键/值对都是资源的名称和值。</param>
      <param name="baseName">要生成的类的名称。</param>
      <param name="generatedCodeNamespace">要生成的类的命名空间。</param>
      <param name="codeProvider">一个 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 类，它提供生成该类时使用的语言。</param>
      <param name="internalClass">如果为 true，则生成内部类；如果为 false，则生成公共类。</param>
      <param name="unmatchable">一个数组，它包含所有无法生成属性的资源名称。 通常，属性无法生成是因为资源名称不是一个有效的标识符。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceList" />、<paramref name="basename" /> 或 <paramref name="codeProvider" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">资源节点名称与它在 <paramref name="resourceList" /> 中的密钥不匹配。</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>生成一个类文件，该文件包含与指定集合中所引用的资源相匹配的强类型属性。</summary>
      <returns>一个 <see cref="T:System.CodeDom.CodeCompileUnit" /> 容器。</returns>
      <param name="resourceList">
        <see cref="T:System.Collections.IDictionary" /> 集合，其中每个字典项键/值对都是资源的名称和值。</param>
      <param name="baseName">要生成的类的名称。</param>
      <param name="generatedCodeNamespace">要生成的类的命名空间。</param>
      <param name="resourcesNamespace">要生成的资源的命名空间。</param>
      <param name="codeProvider">
        <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 对象，它提供生成该类时使用的语言。</param>
      <param name="internalClass">如果为 true，则生成内部类；如果为 false，则生成公共类。</param>
      <param name="unmatchable">一个 <see cref="T:System.String" /> 数组，它包含所有无法生成属性的资源名称。 通常，属性无法生成是因为资源名称不是一个有效的标识符。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceList" />、<paramref name="basename" /> 或 <paramref name="codeProvider" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">资源节点名称与它在 <paramref name="resourceList" /> 中的密钥不匹配。</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>生成一个类文件，该文件包含与指定的 .resx 文件中的资源相匹配的强类型属性。</summary>
      <returns>一个 <see cref="T:System.CodeDom.CodeCompileUnit" /> 容器。</returns>
      <param name="resxFile">.resx 文件的名称用作输入。</param>
      <param name="baseName">要生成的类的名称。</param>
      <param name="generatedCodeNamespace">要生成的类的命名空间。</param>
      <param name="codeProvider">一个 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 类，它提供生成该类时使用的语言。</param>
      <param name="internalClass">如果为 true，则生成内部类；如果为 false，则生成公共类。</param>
      <param name="unmatchable">一个 <see cref="T:System.String" /> 数组，它包含所有无法生成属性的资源名称。 通常，属性无法生成是因为资源名称不是一个有效的标识符。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="basename" /> 或 <paramref name="codeProvider" /> 为 null。</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>生成一个类文件，该文件包含与指定的 .resx 文件中的资源相匹配的强类型属性。</summary>
      <returns>一个 <see cref="T:System.CodeDom.CodeCompileUnit" /> 容器。</returns>
      <param name="resxFile">.resx 文件的名称用作输入。</param>
      <param name="baseName">要生成的类的名称。</param>
      <param name="generatedCodeNamespace">要生成的类的命名空间。</param>
      <param name="resourcesNamespace">要生成的资源的命名空间。</param>
      <param name="codeProvider">一个 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 类，它提供生成该类时使用的语言。</param>
      <param name="internalClass">如果为 true，则生成内部类；如果为 false，则生成公共类。</param>
      <param name="unmatchable">一个 <see cref="T:System.String" /> 数组，它包含所有无法生成属性的资源名称。 通常，属性无法生成是因为资源名称不是一个有效的标识符。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="basename " /> 或 <paramref name="codeProvider" /> 为 null。</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName(System.String,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>根据指定的输入字符串和代码提供程序，生成一个有效的资源字符串。</summary>
      <returns>派生自 <paramref name="key" /> 参数的有效资源名称。 如果根据 <paramref name="provider" /> 参数所指定的语言，派生的字符串仍包含无效字符，所有无效标记都会被下划线 (_) 字符或 null 替代。</returns>
      <param name="key">待验证的字符串，如有必要，则转换为有效的资源名称。</param>
      <param name="provider">
        <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 对象，它指定将使用的目标语言。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 或 <paramref name="provider" /> 为 null。</exception>
    </member>
    <member name="T:System.ServiceProcess.Design.ServiceControllerDesigner">
      <summary>为 <see cref="T:System.ServiceProcess.ServiceController" /> 类提供设计时服务。</summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceControllerDesigner.#ctor">
      <summary>初始化 <see cref="T:System.ServiceProcess.Design.ServiceControllerDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceControllerDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整 <see cref="T:System.ServiceProcess.ServiceController" /> 通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集。</summary>
      <param name="properties">一个包含 <see cref="T:System.ServiceProcess.ServiceController" /> 类的属性的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.AppSettingsExpressionEditor">
      <summary>提供用于在设计时计算和编辑配置文件中的应用程序设置表达式的属性和方法。</summary>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>计算应用程序设置表达式字符串，并为控件属性提供设计时值。</summary>
      <returns>如果表达式计算成功，则为由 <paramref name="expression" /> 引用的对象；否则为 null。</returns>
      <param name="expression">要计算的应用程序设置表达式字符串。 <paramref name="expression" /> 不包含 AppSettings 表达式前缀。</param>
      <param name="parseTimeData">一个包含附加分析信息（用以计算 <paramref name="expression" />）的对象。</param>
      <param name="propertyType">控件属性类型。</param>
      <param name="serviceProvider">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</param>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>返回应用程序设置表达式的表达式编辑器表。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 实现，用于定义应用程序设置表达式的属性。</returns>
      <param name="expression">为控件属性设置的表达式字符串，用于初始化表达式编辑器表。 <paramref name="expression" /> 不包含 AppSettings 表达式前缀。</param>
      <param name="serviceProvider">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</param>
    </member>
    <member name="T:System.Web.UI.Design.CalendarDataBindingHandler">
      <summary>为日历提供数据绑定处理程序。</summary>
    </member>
    <member name="M:System.Web.UI.Design.CalendarDataBindingHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.CalendarDataBindingHandler" /> 类的实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.CalendarDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>如果 <see cref="P:System.Web.UI.WebControls.Calendar.SelectedDate" /> 属性是数据绑定属性，则将日历的日期设置为当日。</summary>
      <param name="designerHost">包含该控件的文档的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <param name="control">要向其添加数据绑定的 <see cref="T:System.Web.UI.Control" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.ClientScriptItem">
      <summary>表示设计时 Web 窗体或用户控件中的客户端脚本元素。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ClientScriptItem.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>使用提供的参数初始化 <see cref="T:System.Web.UI.Design.ClientScriptItem" /> 类的新实例。</summary>
      <param name="text">script 元素的内容；要在客户端上运行的脚本语句的字符串。</param>
      <param name="source">script 元素的 src 特性值，该值指定客户端脚本内容的外部源位置。</param>
      <param name="language">script 元素的 language 特性值，该值指定脚本语句的语言。</param>
      <param name="type">script 元素的类型特性值，它表明关联的脚本撰写引擎的 MIME 类型。</param>
      <param name="id">script 元素的 ID。 此参数是设计宿主（如 Visual Studio 2005）所必需的。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 为空（由设计宿主引发）。</exception>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Id">
      <summary>获取客户端脚本元素的 ID 特性值。</summary>
      <returns>script 元素的 ID 值。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Language">
      <summary>获取客户端脚本元素的 language 特性值。</summary>
      <returns>为 script 元素中的 language 特性指定的语言名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Source">
      <summary>获取客户端脚本元素的 src 特性值。</summary>
      <returns>为 script 元素中的 src 特性指定的源文件的路径。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Text">
      <summary>获取包含在客户端脚本元素中的脚本语句。</summary>
      <returns>包含在 script 元素中的脚本语句。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Type">
      <summary>获取客户端脚本元素的 type 特性值。</summary>
      <returns>与 script 元素关联的 MIME 类型的名称。</returns>
    </member>
    <member name="T:System.Web.UI.Design.ClientScriptItemCollection">
      <summary>表示客户端脚本块的只读集合，这些脚本块在设计时包含在 Web 窗体或用户控件中。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ClientScriptItemCollection.#ctor(System.Web.UI.Design.ClientScriptItem[])">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" /> 类的新实例。</summary>
      <param name="clientScriptItems">用于初始化该集合的 <see cref="T:System.Web.UI.Design.ClientScriptItem" /> 元素数组。</param>
    </member>
    <member name="T:System.Web.UI.Design.ColorBuilder">
      <summary>在设计时提供一个 HTML 颜色字符串生成器，供用户选择颜色使用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ColorBuilder.BuildColor(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String)">
      <summary>启动颜色编辑器以生成 HTML 颜色属性值。</summary>
      <returns>表示为 HTML 颜色格式字符串的颜色值，或者如果未能检索到生成器服务，则为 null。</returns>
      <param name="component">将使用其站点来访问设计时服务的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="owner">用作选择器窗口的父级的 <see cref="T:System.Web.UI.Control" />。</param>
      <param name="initialColor">将在选择器窗口中显示的初始颜色，为有效的 HTML 颜色格式。</param>
    </member>
    <member name="T:System.Web.UI.Design.ConnectionStringEditor">
      <summary>为用户界面提供基类，以便在设计时选择和编辑连接字符串属性。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的服务提供程序和上下文编辑指定对象的值。</summary>
      <returns>所选的连接表达式（作为字符串对象）；否则，如果未选择连接表达式，则为传入的 <paramref name="value" />。</returns>
      <param name="context">用于获取其他上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">用来获得编辑服务的服务提供程序对象。</param>
      <param name="value">所编辑对象的实例。</param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回与指定上下文的连接字符串编辑器关联的编辑样式。</summary>
      <returns>一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值，该值指示所提供的用户界面的编辑样式。</returns>
      <param name="context">用于获取其他上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.GetProviderName(System.Object)">
      <summary>返回提供的 <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> 类实例的提供程序名称。</summary>
      <returns>始终为空字符串 ("")。</returns>
      <param name="instance">
        <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> 或派生类的实例。</param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.SetProviderName(System.Object,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>将提供程序名称放在 <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> 类的指定实例上。</summary>
      <param name="instance">
        <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> 或派生类的实例。</param>
      <param name="connection">
        <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.ConnectionStringsExpressionEditor">
      <summary>提供用于选择在设计时与控件属性关联的数据连接表达式的属性和方法。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ConnectionStringsExpressionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>计算连接字符串表达式并提供控件属性的设计时值。</summary>
      <returns>如果表达式计算成功，则为由计算的表达式字符串引用的对象；否则为 null。</returns>
      <param name="expression">要计算的连接字符串表达式。 该表达式不包含 ConnectionStrings 表达式前缀。</param>
      <param name="parseTimeData">一个包含附加分析信息（用以计算表达式）的对象。</param>
      <param name="propertyType">控件属性的类型。</param>
      <param name="serviceProvider">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>返回连接字符串表达式的表达式编辑器表。</summary>
      <returns>一个定义连接字符串表达式属性的 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 实例。</returns>
      <param name="expression">为控件属性设置的表达式字符串，用于初始化表达式编辑器表。 该表达式不包含 ConnectionStrings 表达式前缀。</param>
      <param name="serviceProvider">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</param>
    </member>
    <member name="T:System.Web.UI.Design.ContainerControlDesigner">
      <summary>为包含子控件或可在设计时修改的属性的控件提供设计器功能。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ContainerControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)">
      <summary>在设计时添加控件的样式特性。</summary>
      <param name="styleAttributes">样式特性的键控集合。</param>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.AllowResize">
      <summary>获取一个值，该值指示控件的大小在设计时是否可以调整。</summary>
      <returns>如果控件的大小可以调整，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.FrameCaption">
      <summary>获取控件在设计时显示的标题。</summary>
      <returns>如果该控件有设计时标题，则为设计时用作控件框架标题的字符串；否则为空字符串 ("")。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.FrameStyle">
      <summary>获取设计时应用于控件框架的样式。</summary>
      <returns>设计时控件框架的 <see cref="T:System.Web.UI.WebControls.Style" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes">
      <summary>返回控件在设计时的样式特性集合。</summary>
      <returns>一个样式特性集合，该集合应用于设计图面上的控件。 样式特性名是用于访问 <see cref="T:System.Collections.IDictionary" /> 中的样式特性值的键。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>返回用于在设计时表示控件的 HTML 标记。</summary>
      <returns>表示控件的 HTML 标记字符串。</returns>
      <param name="regions">设计器区域的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回设计时控件可编辑区域的内容。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.ContainerControlDesigner" /> 内包含的该区域的保持的内容。</returns>
      <param name="region">控件内包含的可编辑设计区域。</param>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetPersistenceContent">
      <summary>返回设计时控件的可保持内容。</summary>
      <returns>null.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.NoWrap">
      <summary>获取指定是否在窗口中使用的 HTML nowrap 特性的值。</summary>
      <returns>使用在窗口中的 HTML nowrap 属性，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>在设计时设置控件的可编辑区域的内容。</summary>
      <param name="region">控件内包含的可编辑设计区域。</param>
      <param name="content">要为可编辑设计区域分配的内容。</param>
    </member>
    <member name="T:System.Web.UI.Design.ContentDefinition">
      <summary>提供在设计时定义 Web 内容的属性结构。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ContentDefinition.#ctor(System.String,System.String,System.String)">
      <summary>创建 <see cref="T:System.Web.UI.Design.ContentDefinition" /> 类的新实例。</summary>
      <param name="id">内容的字符串标识符。</param>
      <param name="content">默认的 HTML 标记内容。</param>
      <param name="designTimeHtml">设计时 HTML 标记内容。</param>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.ContentPlaceHolderID">
      <summary>获取与当前内容关联的 <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> 控件的 ID。</summary>
      <returns>与当前内容关联的 <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> 的 ID。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.DefaultContent">
      <summary>获取内容的默认 HTML 标记。</summary>
      <returns>一个包含 HTML 标记的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.DefaultDesignTimeHtml">
      <summary>获取用于在设计时表示内容的 HTML 标记。</summary>
      <returns>一个包含 HTML 标记的字符串。</returns>
    </member>
    <member name="T:System.Web.UI.Design.ContentDesignerState">
      <summary>枚举 <see cref="T:System.Web.UI.Design.WebControls.ContentDesigner" /> 控件的状态在设计时的可能设置。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ContentDesignerState.ShowDefaultContent">
      <summary>关联控件显示默认内容。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ContentDesignerState.ShowUserContent">
      <summary>关联控件显示用户内容。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlDesigner">
      <summary>提供用于扩展 Web 服务器控件的设计模式行为的基控件设计器类。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ActionLists">
      <summary>获取该控件设计器的操作列表集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象，它包含控件设计器的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 项。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.AllowResize">
      <summary>获取一个值，该值指示是否可以在设计时环境中调整控件的大小。</summary>
      <returns>如果控件的大小可以调整，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.AutoFormats">
      <summary>获取预定义自动格式设置方案的集合，以便设计时在关联控件的“自动套用格式”对话框中显示。</summary>
      <returns>包含控件的预定义方案的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)">
      <summary>创建在设计时显示指定错误消息的 HTML 标记。</summary>
      <returns>一个包含指定错误消息的 HTML 标记字符串。</returns>
      <param name="errorMessage">要包括在生成的 HTML 标记中的错误消息。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)">
      <summary>创建在设计时显示指定异常错误消息的 HTML 标记。</summary>
      <returns>包含指定的 <paramref name="errorMessage" /> 和 <paramref name="e" /> 的 HTML 标记。</returns>
      <param name="errorMessage">要包含在生成的 HTML 字符串中的错误消息。</param>
      <param name="e">要包含在生成的 HTML 字符串中的异常。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml">
      <summary>提供一个简单的矩形占位符表示形式，该表示形式显示该控件的类型和 ID。</summary>
      <returns>一个字符串，包含提供有关控件的基本信息的设计时 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)">
      <summary>提供一个简单的矩形占位符表示形式，该表示形式显示该控件的类型和 ID 以及指定的附加说明或信息。</summary>
      <returns>一个字符串，包含提供有关控件的信息的设计时 HTML 标记。</returns>
      <param name="instruction">一个字符串，包含要添加到 HTML 输出的文本和标记。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateViewControl">
      <summary>返回要在设计图面上查看或呈现的关联控件的副本。</summary>
      <returns>一个 Web 服务器控件。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DataBindingsEnabled">
      <summary>获取一个值，该值指示包含关联控件的区域是否支持数据绑定。</summary>
      <returns>如果控件的容器支持数据绑定，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignerState">
      <summary>获取用于在设计时保持关联控件数据的对象。</summary>
      <returns>一个 <see cref="P:System.Web.UI.Design.ControlDesigner.DesignerState" /> 属性，该属性实现 <see cref="T:System.Collections.IDictionary" /> 并使用 <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> 在设计时保持关联控件的状态数据。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignTimeElementView">
      <summary>获取控件设计器的视图控件对象。</summary>
      <returns>null.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete">
      <summary>获取一个值，该值指示是否必须在设计宿主完成加载之后才能调用 <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> 方法。</summary>
      <returns>如果必须在完成加载之后才能调用 <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> 方法，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetBounds">
      <summary>检索矩形的坐标，该矩形表示设计图面上显示的控件的边界。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" /> 对象，表示设计图面上相对于控件而非文档的控件边界。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml">
      <summary>检索用于在设计时表示控件的 HTML 标记。</summary>
      <returns>用于在设计时表示控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>检索 HTML 标记以显示控件并使用当前控件设计器区域填充集合。</summary>
      <returns>关联控件（包括所有控件设计器区域）的设计时 HTML 标记。</returns>
      <param name="regions">关联控件的控件设计器区域集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory(System.IServiceProvider)">
      <summary>根据站点配置文件中的全球化设置返回相应的资源提供程序工厂。</summary>
      <returns>如果在配置文件中定义了任何 <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> 对象，则为该对象；否则为 null。</returns>
      <param name="serviceProvider">可检索全局和本地服务的 <see cref="T:System.IServiceProvider" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回关联控件设计时视图中可编辑区域的内容。</summary>
      <returns>如果控件设计器支持可编辑区域，则为区域的保持内容；否则为空字符串 ("")。</returns>
      <param name="region">要为其获取内容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml">
      <summary>检索设计时表示 Web 服务器控件的 HTML 标记，该控件在运行时将不具有可视化表示形式。</summary>
      <returns>设计时用于表示控件的 HTML 标记，否则该控件将不具有可视化表示形式。 默认值是一个包含该组件的类型和 ID 的矩形。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>检索提供有关指定异常的信息的 HTML 标记。</summary>
      <returns>指定异常的设计时 HTML 标记。</returns>
      <param name="e">发生的异常。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent">
      <summary>在设计时检索该控件的持久内部 HTML 标记。</summary>
      <returns>一个字符串，表示关联控件的持久性内部 HTML 标记。 默认值为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml">
      <summary>检索控件的持久性内部 HTML 标记。</summary>
      <returns>控件的持久性内部 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering">
      <summary>检索一个对象，该对象包含关联控件的内容和区域的设计时标记。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.ViewRendering" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Control)">
      <summary>检索一个对象，该对象包含指定控件的内容和区域的设计时标记。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.ViewRendering" /> 对象。</returns>
      <param name="control">
        <see cref="T:System.Web.UI.Control" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Design.ControlDesigner)">
      <summary>检索一个对象，该对象包含指定控件设计器关联控件的内容和区域的设计时标记。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.ViewRendering" /> 对象。</returns>
      <param name="designer">派生自 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 的控件设计器。</param>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode">
      <summary>获取一个值，该值指示当控件处于模板模式时，关联控件的属性是否被隐藏。</summary>
      <returns>如果当控件处于模板模式时关联控件的属性被隐藏，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ID">
      <summary>获取或设置控件的 ID 字符串。</summary>
      <returns>控件的 ID 字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化控件设计器并加载指定的组件。</summary>
      <param name="component">正在设计的控件。</param>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.InTemplateMode">
      <summary>获取一个值，该值指示控件在设计宿主中是否处于模板查看模式或模板编辑模式之一。 <see cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" /> 属性为只读。</summary>
      <returns>如果控件处于模板查看模式或模板编辑模式之一，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Invalidate">
      <summary>使显示在设计图面上的控件的整个区域无效，并向控件设计器发送重新绘制控件的信号。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Invalidate(System.Drawing.Rectangle)">
      <summary>使显示在设计图面上的控件的指定区域无效，并向控件设计器发送重新绘制控件的信号。</summary>
      <param name="rectangle">一个 <see cref="T:System.Drawing.Rectangle" /> 对象，表示要使之无效的区域，它相对于控件的左上角。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)">
      <summary>使用指定参数将一系列更改包装到事务中，这些指定参数可以通过设计宿主的撤消功能作为一个单元进行回滚。</summary>
      <param name="component">与控件设计器关联的控件。</param>
      <param name="callback">一个 <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> 对象，表示要在控件设计器中作为事务的一部分调用的函数。</param>
      <param name="context">一个包含回调参数的对象。</param>
      <param name="description">允许事务完成的效果的说明，由设计宿主用于使用户有机会取消事务。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> 为 null。 - 或 - <paramref name="callback" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)">
      <summary>使用指定参数将一系列更改包装到事务中，这些指定参数可以通过设计宿主的撤消功能作为一个单元进行回滚。</summary>
      <param name="component">与控件设计器关联的控件。</param>
      <param name="callback">一个 <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> 对象，表示要在控件设计器中作为事务的一部分调用的函数。</param>
      <param name="context">一个包含回调参数的对象。</param>
      <param name="description">允许事务完成的效果的说明，由设计宿主用于使用户有机会取消事务。</param>
      <param name="member">一个 <see cref="T:System.ComponentModel.MemberDescriptor" /> 对象（通常是 <see cref="T:System.ComponentModel.EventDescriptor" /> 或 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象），它描述作为事务的一部分进行调用的关联控件的成员。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> 为 null。 - 或 - <paramref name="callback" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.IServiceProvider,System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)">
      <summary>使用指定参数将一系列更改包装到事务中，这些指定参数可以通过设计宿主的撤消功能作为一个单元进行回滚。</summary>
      <param name="serviceProvider">一个 <see cref="T:System.IServiceProvider" /> 对象，它表示为关联控件提供控件设计器服务的设计宿主。</param>
      <param name="component">与控件设计器关联的控件。</param>
      <param name="callback">一个 <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> 对象，表示要在控件设计器中作为事务的一部分调用的函数。</param>
      <param name="context">一个包含回调参数的对象。</param>
      <param name="description">允许事务完成的效果的说明，由设计宿主用于使用户有机会取消事务。</param>
      <param name="member">一个 <see cref="T:System.ComponentModel.MemberDescriptor" /> 对象（通常是 <see cref="T:System.ComponentModel.EventDescriptor" /> 或 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象），描述作为事务的一部分进行调用的关联控件的成员。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> 为 null。 - 或 - <paramref name="callback" /> 为 null。 - 或 - <paramref name="serviceProvider" /> 为 null。</exception>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.IsDirty">
      <summary>获取或设置一个值，该值指示 Web 服务器控件是否已被标记为已更改。</summary>
      <returns>如果 Web 服务器控件自上次保持或加载后已更改，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.IsPropertyBound(System.String)">
      <summary>检索一个值，该值指示关联控件上的指定属性是否是数据绑定的。</summary>
      <returns>如果该属性是数据绑定的，则为 true；否则为 false。</returns>
      <param name="propName">用于测试数据绑定的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)">
      <summary>使用提供的资源编写器将关联控件的可本地化属性保持到设计宿主中的某个资源。</summary>
      <param name="resourceWriter">一个派生自 <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" /> 对象的对象，用于将资源写入设计时响应流中。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>对关联控件应用预定义的自动格式设置方案后调用。</summary>
      <param name="appliedAutoFormat">定义样式的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged(System.String)">
      <summary>在数据绑定集合发生更改时调用。</summary>
      <param name="propName">要测试其绑定集合中的更改的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>当用户在设计时单击关联控件时由设计宿主调用。</summary>
      <param name="e">一个 <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> 对象，它指定了位置，还可能指定了用户单击的控件设计器区域。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>在关联控件发生更改时调用。</summary>
      <param name="sender">事件源。</param>
      <param name="ce">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>表示将处理关联控件的 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> 事件的方法。</summary>
      <param name="sender">作为事件源的对象。</param>
      <param name="ce">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnControlResize">
      <summary>关联的 Web 服务器控件的大小在设计宿主中发生设计时调整后被调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>当控件设计器在设计图面上绘制关联控件，且 <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> 的值为 true 时调用。</summary>
      <param name="e">指定用于绘制控件的图形和矩形边界的 <see cref="T:System.Windows.Forms.PaintEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>在设计时向设计宿主中的“属性”网格添加属性或从中移除属性，或提供可能与关联控件上的属性相对应的新设计时属性。</summary>
      <param name="properties">组件的类的特性。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent">
      <summary>引发 <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> 事件。</summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ReadOnly">
      <summary>获取或设置一个值，该值指示控件的属性在设计时是否为只读。</summary>
      <returns>如果控件的属性在设计时为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.RegisterClone(System.Object,System.Object)">
      <summary>注册克隆控件中的内部数据。</summary>
      <param name="original">与控件设计器关联的控件。</param>
      <param name="clone">关联控件的克隆副本。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="original" /> 为 null。 - 或 - <paramref name="clone" /> 为 null。</exception>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.RootDesigner">
      <summary>获取包含关联控件的 Web 窗体页的控件设计器。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> 对象，可以在设计时用于访问包含控件的 Web 窗体页上的组件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>指定设计时控件可编辑区域的内容。</summary>
      <param name="region">控件内包含的可编辑设计区域。</param>
      <param name="content">要为可编辑设计区域分配的内容。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>指定控件设计时视图中可编辑区域的内容。</summary>
      <param name="region">控件的设计时视图中包含的可编辑设计区域。</param>
      <param name="content">要为可编辑设计区域分配的内容。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)">
      <summary>将指定的按位 <see cref="T:System.Web.UI.Design.ViewFlags" /> 枚举分配给指定的标志值。</summary>
      <param name="viewFlags">一个 <see cref="T:System.Web.UI.Design.ViewFlags" /> 值。</param>
      <param name="setFlag">为 true 时设置标志，为 false 时移除标志。</param>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.Tag">
      <summary>获取表示关联控件的 HTML 标记元素的对象。</summary>
      <returns>表示关联控件的 HTML 标记元素的 <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.TemplateGroups">
      <summary>获取模板组的集合，每个模板组包含一个或多个模板定义。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象的集合。 默认值为空 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml">
      <summary>通过调用 <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> 方法刷新关联 Web 服务器控件的设计时 HTML 标记。</summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl">
      <summary>获取一个指示控件设计器是否使用临时预览控件来生成设计时 HTML 标记的值。</summary>
      <returns>如果控件设计器使用控件的临时副本进行设计时预览，则为 true；否则，即如果控件设计器为控件设计器中包含的控件使用 <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> 属性，则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ViewControl">
      <summary>获取或设置可用于预览设计时 HTML 标记的 Web 服务器控件。</summary>
      <returns>基类用于生成设计时 HTML 标记的 <see cref="T:System.Web.UI.Control" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ViewControlCreated">
      <summary>获取或设置一个值，该值指示是否已创建 View 控件以在设计图面上显示。</summary>
      <returns>如果已创建要在设计图面上查看的控件，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.Visible">
      <summary>获取指示该控件在设计时是否可见的值。</summary>
      <returns>任何情况下都为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.ControlDesignerState">
      <summary>通过 <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> 接口提供对设计宿主中控件设计器的状态的访问。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesignerState.Item(System.String)">
      <summary>表示控件设计器状态集合中的一个元素（由给定的键标识）。</summary>
      <returns>由 <paramref name="key" /> 标识的对象。</returns>
      <param name="key">要从状态集合中设置或检索的项的名称。</param>
    </member>
    <member name="T:System.Web.UI.Design.ControlLocation">
      <summary>指定在容器中添加控件的可能位置。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.After">
      <summary>在当前所选内容或当前控件之后添加控件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.Before">
      <summary>在当前所选内容或当前控件之前添加控件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.First">
      <summary>在文档开头添加控件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.FirstChild">
      <summary>如果选择的控件是容器控件，则将控件添加为所选控件的第一个子控件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.Last">
      <summary>在文档末尾添加控件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.LastChild">
      <summary>如果选择的控件是容器控件，则将控件添加为所选控件的最后一个子控件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlParser">
      <summary>提供满足以下条件的方法：用于根据表示持久性控件或模板的标记的字符串来创建 Web 服务器 <see cref="T:System.Web.UI.Control" /> 控件或 <see cref="T:System.Web.UI.ITemplate" /> 接口。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>使用指定的设计器宿主，根据指定的标记创建控件。</summary>
      <returns>controlText 表示的 <see cref="T:System.Web.UI.Control" />；否则，如果分析器无法生成控件，则为 null。</returns>
      <param name="designerHost">作为页面的设计器宿主的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 实例。</param>
      <param name="controlText">控件的 HTML 标记。</param>
      <exception cref="T:System.ArgumentNullException">参数无效。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String,System.String)">
      <summary>使用指定的设计器宿主和指令，根据指定的标记创建控件。</summary>
      <returns>
        <paramref name="controlText" /> 所表示的 <see cref="T:System.Web.UI.Control" />。</returns>
      <param name="designerHost">作为页面的设计器宿主的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 实例。</param>
      <param name="controlText">控件的 HTML 标记文本。</param>
      <param name="directives">要包括在控件代码中的页面指令。</param>
      <exception cref="T:System.ArgumentNullException">参数无效。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControls(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>使用指定的设计器宿主，根据指定的标记创建控件的数组。</summary>
      <returns>从 <paramref name="controlText" /> 分析得出的 <see cref="T:System.Web.UI.Control" /> 元素的数组；否则，如果分析器无法生成控件，则为 null。</returns>
      <param name="designerHost">作为页面的设计器宿主的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 实例。</param>
      <param name="controlText">表示控件标记的集合的字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerHost" /> 为 null。 - 或 - <paramref name="controlText" /> 为 null 或空字符串 ("")。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>根据指定的模板标记创建 <see cref="T:System.Web.UI.ITemplate" /> 接口。</summary>
      <returns>通过分析 <paramref name="templateText" /> 创建的 <see cref="T:System.Web.UI.ITemplate" /> 实例。</returns>
      <param name="designerHost">作为页面的设计器宿主的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 实例。</param>
      <param name="templateText">包含模板标记的字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerHost" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String,System.String)">
      <summary>分析指定的模板标记并创建 <see cref="T:System.Web.UI.ITemplate" /> 接口。</summary>
      <returns>通过分析 <paramref name="templateText" /> 创建的 <see cref="T:System.Web.UI.ITemplate" /> 实例。</returns>
      <param name="designerHost">作为页面的设计器宿主的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 实例。</param>
      <param name="templateText">包含模板标记的字符串。</param>
      <param name="directives">任何要添加到模板代码的开头的指令。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerHost" /> 为 null。</exception>
    </member>
    <member name="T:System.Web.UI.Design.ControlPersister">
      <summary>提供在设计时用于保持 Web 服务器控件的方法。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control)">
      <summary>将代表指定控件的持久形式的数据字符串输出到指定的 <see cref="T:System.IO.TextWriter" />。</summary>
      <param name="sw">要将保持的控件数据输出到其中的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="control">要保持的 <see cref="T:System.Web.UI.Control" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control,System.ComponentModel.Design.IDesignerHost)">
      <summary>使用指定的设计器宿主，将代表指定控件的持久形式的数据字符串输出到指定的 <see cref="T:System.IO.TextWriter" />。</summary>
      <param name="sw">要将保持的控件数据输出到其中的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="control">要保持的 <see cref="T:System.Web.UI.Control" />。</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />，它是控件的设计器宿主。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.Web.UI.Control)">
      <summary>获取一个数据字符串，它表示指定控件的持久形式。</summary>
      <returns>一个表示控件的持久形式的字符串。</returns>
      <param name="control">要保持的 <see cref="T:System.Web.UI.Control" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.Web.UI.Control,System.ComponentModel.Design.IDesignerHost)">
      <summary>使用指定的设计器宿主，获取代表指定控件的持久形式的数据字符串。</summary>
      <returns>一个表示控件的持久形式的字符串。</returns>
      <param name="control">要保持的 <see cref="T:System.Web.UI.Control" />。</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />，它是控件的设计器宿主。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistInnerProperties(System.IO.TextWriter,System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>使用指定的设计器宿主将可以保持指定控件的内部属性的数据字符串输出到指定的 <see cref="T:System.IO.TextWriter" />。</summary>
      <param name="sw">要使用的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="component">要保持的组件。</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />，它是控件的设计器宿主。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistInnerProperties(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>获取可以保持指定控件的内部属性的数据字符串。</summary>
      <returns>字符串，它包含要保持的有关控件的内部属性的信息。</returns>
      <param name="component">要保持其内部属性的组件。</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />，它是控件的设计器宿主。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistTemplate(System.IO.TextWriter,System.Web.UI.ITemplate,System.ComponentModel.Design.IDesignerHost)">
      <summary>将表示指定模板的持久形式的数据字符串写入指定的 <see cref="T:System.IO.TextWriter" /> 对象。</summary>
      <param name="writer">要将保持的模板数据写入其中的 <see cref="T:System.IO.TextWriter" />。</param>
      <param name="template">要保持的模板。</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />，它是控件的设计器宿主。</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistTemplate(System.Web.UI.ITemplate,System.ComponentModel.Design.IDesignerHost)">
      <summary>获取一个数据字符串，它表示指定模板的持久形式。</summary>
      <returns>一个表示模板持久形式的字符串。</returns>
      <param name="template">要保持的模板。</param>
      <param name="host">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" />，它是控件的设计器宿主。</param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingCollectionConverter">
      <summary>提供 <see cref="T:System.Web.UI.DataBindingCollection" /> 对象的类型转换器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataBindingCollectionConverter" /> 类的实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将数据绑定集合转换为指定的类型。</summary>
      <returns>通过类型转换产生的对象。 如果 <paramref name="destinationType" /> 参数为 <see cref="T:System.String" /> 类型，则该方法返回一个空字符串 ("")。</returns>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，它指示数据绑定集合所属的组件或控件。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" />，它可以用于提供附加的区域性信息。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">要转换到的类型。</param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingCollectionEditor">
      <summary>提供一个用户界面，用于编辑数据绑定的集合。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataBindingCollectionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的服务提供程序和上下文编辑指定的数据绑定集合的值。</summary>
      <returns>新集合。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象，标识集合所属的组件或控件。</param>
      <param name="provider">要使用的 <see cref="T:System.IServiceProvider" />。</param>
      <param name="value">要编辑的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取由 <see cref="M:System.Web.UI.Design.DataBindingCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法使用的编辑器样式。</summary>
      <returns>一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 对象，指定组件或控件的编辑器样式。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象，标识要为其检索编辑样式的组件或控件。</param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingHandler">
      <summary>为数据绑定处理程序提供基类。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataBindingHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>绑定指定的控件。</summary>
      <param name="designerHost">该文档的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <param name="control">要绑定的 <see cref="T:System.Web.UI.Control" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingValueUIHandler">
      <summary>为数据绑定值提供一个用户界面处理程序。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingValueUIHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataBindingValueUIHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingValueUIHandler.OnGetUIValueItem(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor,System.Collections.ArrayList)">
      <summary>如果当前控件有数据绑定而当前对象还没有绑定，则会为指定的属性和指定的值项列表添加一个数据绑定。</summary>
      <param name="context">可提供其他上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="propDesc">表示要为其添加数据绑定的属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <param name="valueUIItemList">具有数据绑定的项的 <see cref="T:System.Collections.ArrayList" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.DataColumnSelectionConverter">
      <summary>为表示 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中绑定列字段的字段名称的属性提供类型转换器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataColumnSelectionConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指示指定的源类型是否可转换为关联控件属性的类型。</summary>
      <returns>如果转换器能执行转换，则为 true；否则为 false。</returns>
      <param name="context">一个可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
      <param name="sourceType">要转换的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定对象转换为关联控件属性的类型。</summary>
      <returns>一个 <see cref="T:System.Object" /> 实例，表示已转换的对象。</returns>
      <param name="context">一个可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
      <param name="culture">可用于支持本地化功能的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="value">要转换的对象。</param>
      <exception cref="T:System.NotSupportedException">转换未能执行。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回可以分配给关联控件属性的可用值的列表。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 实例，包含可以分配给关联控件属性的可用值。</returns>
      <param name="context">一个可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指示此转换器是否返回一个列表，在其中包含可分配给关联的控件属性的所有可能值。</summary>
      <returns>如果此转换器返回一个列表，在其中包含可分配给关联的控件属性的所有可能值，则返回 true；否则返回 false。</returns>
      <param name="context">一个可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指示在指定的上下文内，此转换器是否返回一组可以分配给控件属性的值。</summary>
      <returns>如果此转换器返回一组可以分配给关联控件属性的值，则返回 true；否则返回 false。</returns>
      <param name="context">一个可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
    </member>
    <member name="T:System.Web.UI.Design.DataFieldConverter">
      <summary>提供类型转换器，它可从当前组件的选定数据源中检索数据字段的列表。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataFieldConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>获取一个值，该值指示转换器是否可以将指定源类型的对象转换为转换器的本机类型。</summary>
      <returns>如果转换器能执行转换，则为 true；否则为 false。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="sourceType">
        <see cref="T:System.Type" />，表示要从中进行转换的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定对象转换为转换器的本机类型。</summary>
      <returns>表示转换后的指定对象的 <see cref="T:System.Object" />。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="culture">可用来支持本地化功能的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">要转换的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.NotSupportedException">不能执行转换。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>如果可以得到关于存在于选定数据源内的数据字段的信息，则获取这些数据字段。</summary>
      <returns>
        <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />，它列出标准的可访问数据源。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象，它指示要获取其值的组件或控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示从 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 返回的标准值集合是否为所有可能值的列表。</summary>
      <returns>如果从 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 返回的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 是所有可能的有效值的排他列表，则为 true；如果还可能有其他值，则为 false。 当在此类中实现时，此方法始终返回 false。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示转换器是否支持可从列表中选取的一组标准值。</summary>
      <returns>如果可以调用 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 以查找该对象支持的一组公共值，则为 true；否则，为 false。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.DataMemberConverter">
      <summary>提供类型转换器，可从当前组件选定的数据源中检索数据成员的列表。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataFieldConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>获取一个值，该值指示转换器是否可以将指定源类型的对象转换为转换器的本机类型。</summary>
      <returns>如果转换器能执行转换，则为 true；否则为 false。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="sourceType">
        <see cref="T:System.Type" />，表示要从中进行转换的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定对象转换为转换器的本机类型。</summary>
      <returns>表示转换后的指定对象的 <see cref="T:System.Object" />。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="culture">可用来支持本地化功能的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">要转换的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.NotSupportedException">不能执行转换。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>如果可以得到有关存在于选定数据源中的数据成员的信息，则获取这些数据成员。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />，它列出为组件选定的数据源的数据成员。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象，它指示要获取其值的组件或控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示从 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 返回的标准值集合是否为所有可能值的列表。</summary>
      <returns>如果从 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 返回的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 是所有可能的有效值的排他列表，则为 true；如果还可能有其他值，则为 false。 当在此类中实现时，此方法始终返回 false。</returns>
      <param name="context">一个提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示转换器是否支持可从列表中选取的一组标准值。</summary>
      <returns>如果应调用 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 来查找对象支持的一组公共值，则为 true；否则，为 false。 此实现总是返回 true。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
    </member>
    <member name="T:System.Web.UI.Design.DataSetFieldSchema">
      <summary>表示数据字段的结构或架构。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSetFieldSchema.#ctor(System.Data.DataColumn)">
      <summary>使用指定 <see cref="T:System.Data.DataColumn" /> 初始化 <see cref="T:System.Web.UI.Design.DataSetFieldSchema" /> 类的新实例。</summary>
      <param name="column">
        <see cref="T:System.Web.UI.Design.DataSetFieldSchema" /> 对象描述的 <see cref="T:System.Data.DataColumn" /> 对象。</param>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.DataType">
      <summary>获取数据字段中存储的数据的类型。</summary>
      <returns>表示数据字段包含的数据类型的 <see cref="T:System.Type" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Identity">
      <summary>获取一个值，该值指示对于向表或视图添加的每一个新行，数据字段的值是否自动递增。</summary>
      <returns>如果 <see cref="P:System.Web.UI.Design.DataSetFieldSchema.DataType" /> 为数字，并且向 <see cref="T:System.Data.DataTable" /> 添加新行时该列的值会自动增加，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="T:System.Data.DataColumn" /> 是否为只读。</summary>
      <returns>如果该数据字段为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.IsUnique">
      <summary>获取一个值，该值指示数据字段中的值是否必须唯一。</summary>
      <returns>如果数据字段中的数据是唯一的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Length">
      <summary>获取一个值，该值指示可在数据字段中存储的数据的大小。</summary>
      <returns>列可以存储的字节数。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Name">
      <summary>获取数据字段的名称。</summary>
      <returns>数据字段的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Nullable">
      <summary>获取一个值，该值指示数据字段是否可接受 null 值。</summary>
      <returns>如果数据字段可接受 null 值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Precision">
      <summary>获取用于在数据字段中呈现数值的最大位数。</summary>
      <returns>该属性始终返回 -1。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.PrimaryKey">
      <summary>获取一个值，该值指示数据字段是否位于包含表或视图的主键中。</summary>
      <returns>如果数据字段位于主键中，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Scale">
      <summary>获取数据字段中的数值将解析到的小数位数。</summary>
      <returns>此属性总是返回 -1。</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSetSchema">
      <summary>
        <see cref="T:System.Web.UI.Design.DataSetSchema" /> 类表示数据源的结构或架构。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSetSchema.#ctor(System.Data.DataSet)">
      <summary>使用指定的 <see cref="T:System.Data.DataSet" /> 创建 <see cref="T:System.Web.UI.Design.DataSetSchema" /> 类的实例。</summary>
      <param name="dataSet">
        <see cref="T:System.Web.UI.Design.DataSetSchema" /> 实例将描述的 <see cref="T:System.Data.DataSet" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSetSchema.GetViews">
      <summary>获取一个数组，该数组包含数据源中各视图的有关信息。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象的数组。</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSetViewSchema">
      <summary>表示 <see cref="T:System.Data.DataTable" /> 的结构或架构。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.#ctor(System.Data.DataTable)">
      <summary>使用指定的 <see cref="T:System.Data.DataTable" /> 创建 <see cref="T:System.Web.UI.Design.DataSetViewSchema" /> 类的实例。</summary>
      <param name="dataTable">
        <see cref="T:System.Web.UI.Design.DataSetViewSchema" /> 实例将描述的 <see cref="T:System.Data.DataTable" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.GetChildren">
      <summary>获取一个数组，该数组表示当前视图中所包含的子视图。</summary>
      <returns>null.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.GetFields">
      <summary>获取一个数组，该数组包含视图中每个数据字段的有关信息。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceFieldSchema" /> 对象的数组。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetViewSchema.Name">
      <summary>使用视图的 <see cref="P:System.Data.DataTable.TableName" /> 属性获取其名称。</summary>
      <returns>视图的名称。</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter">
      <summary>为表示数据源架构中的布尔字段的属性提供一个类型转换器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter.#ctor">
      <summary>创建 <see cref="T:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回可以分配给关联字段的可用布尔值的列表。</summary>
      <returns>布尔值的集合。</returns>
      <param name="context">一个提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceConverter">
      <summary>提供类型转换器，可检索当前组件所能访问的数据源的列表。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataSourceConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>获取一个值，该值指示转换器是否可以将指定源类型的对象转换为转换器的本机类型。</summary>
      <returns>如果转换器能执行转换，则为 true；否则为 false。 当在此类中实现时，此方法始终返回 false。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">一个 <see cref="T:System.Type" />，表示要转换的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定对象转换为转换器的本机类型。</summary>
      <returns>表示转换后的指定对象的 <see cref="T:System.Object" />。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">可用于支持本地化功能的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">要转换的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.NotSupportedException">转换未能执行。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取控件可以访问的标准数据源。</summary>
      <returns>
        <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />，它列出标准的可访问数据源。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，它指示要获取其值的组件或控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示从 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 返回的标准值集合是否为所有可能值的列表。</summary>
      <returns>如果从 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 返回的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 是所有可能值的独占列表，则为 true；如果还可能有其他值，则为 false。 当在此类中实现时，此方法始终返回 false。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示转换器是否支持可从列表中选取的一组标准值。</summary>
      <returns>如果应调用 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> 来查找对象支持的一组公共值，则为 true；否则，为 false。 此实现总是返回 true。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>指示指定组件是否为此转换器的有效数据源。</summary>
      <returns>如果 <paramref name="component" /> 实现了 <see cref="T:System.Collections.IEnumerable" /> 或 <see cref="T:System.ComponentModel.IListSource" />，则为 true；否则为 false。</returns>
      <param name="component">要检查是否为有效数据源的组件。</param>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceDesigner">
      <summary>在 <see cref="T:System.Web.UI.DataSourceControl" /> 类的设计宿主中提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataSourceDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.ActionLists">
      <summary>获取项的列表，其中的项用来在设计时创建操作列表菜单。</summary>
      <returns>包含控件设计器的操作列表项的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.CanConfigure">
      <summary>获取一个值，该值指示是否可以调用 <see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" /> 方法。</summary>
      <returns>如果可以调用 <see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" />，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示是否可以调用 <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法。</summary>
      <returns>如果可以调用 <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" />，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.Configure">
      <summary>启动设计宿主中的数据源配置实用工具。</summary>
      <exception cref="T:System.NotSupportedException">已尝试在基类中调用此方法。</exception>
    </member>
    <member name="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged">
      <summary>当关联数据源的任何属性发生更改时发生。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetDesignTimeHtml">
      <summary>检索用于在设计时显示关联数据源控件的 HTML 标记。</summary>
      <returns>用于在设计时显示的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetView(System.String)">
      <summary>检索由视图名称标识的 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 对象。</summary>
      <returns>此实现总是返回 null。</returns>
      <param name="viewName">视图的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetViewNames">
      <summary>返回此数据源中可用的视图名称的数组。</summary>
      <returns>视图名称的数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged(System.EventArgs)">
      <summary>当数据源的属性已更改且 <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> 值为 false 时，引发 <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" /> 对象，由调用对象提供。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed(System.EventArgs)">
      <summary>当数据源的架构已更改且 <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> 值为 false 时，引发 <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> 事件。</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>在可以选择取消事件时从数据源刷新架构。</summary>
      <param name="preferSilent">若为 true，则在刷新架构时允许事件发生；若为 false，则在刷新架构时禁用 <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> 和 <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> 事件。</param>
      <exception cref="T:System.NotSupportedException">已尝试在基类中调用此方法。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents">
      <summary>在已取消数据源事件之后恢复数据源事件。</summary>
      <exception cref="T:System.InvalidOperationException">已尝试在基类中调用此方法。</exception>
    </member>
    <member name="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed">
      <summary>在架构刷新后发生。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent(System.Web.UI.Design.IDataSourceSchema,System.Web.UI.Design.IDataSourceSchema)">
      <summary>提供一个值，该值指示两个架构是否相等。</summary>
      <returns>如果两个架构等效，则为 true；否则为 false。</returns>
      <param name="schema1">要比较的第一个架构（派生自 <see cref="T:System.Web.UI.Design.IDataSourceSchema" />）。</param>
      <param name="schema2">要比较的第二个架构。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents">
      <summary>推迟所有数据源事件，直到 <see cref="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents" /> 方法被调用为止。</summary>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents">
      <summary>获取一个值，该值指示是否发生 <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> 事件或 <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法。</summary>
      <returns>如果事件被取消，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent(System.Web.UI.Design.IDataSourceViewSchema,System.Web.UI.Design.IDataSourceViewSchema)">
      <summary>提供一个值，该值确定两个架构视图是否相等。</summary>
      <returns>如果两个视图等效，则为 true；否则为 false。</returns>
      <param name="viewSchema1">要比较的第一个视图（派生自 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />）。</param>
      <param name="viewSchema2">要比较的第二个视图。</param>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceViewSchemaConverter">
      <summary>为表示数据源架构中的字段的属性提供一个类型转换器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DataSourceViewSchemaConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指示指定的源类型是否可转换为关联控件属性的类型。</summary>
      <returns>如果转换器能执行转换，则为 true；否则为 false。</returns>
      <param name="context">一个可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
      <param name="sourceType">要转换的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定对象转换为关联控件属性的类型。</summary>
      <returns>一个 <see cref="T:System.Object" /> 实例，表示已转换的对象。</returns>
      <param name="context">一个可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
      <param name="culture">可用于支持本地化功能的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="value">要转换的对象。</param>
      <exception cref="T:System.NotSupportedException">转换未能执行。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回可以分配给关联控件属性的可用值的列表。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />，包含可以分配给关联控件属性的值。</returns>
      <param name="context">一个可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回可以分配给关联控件属性的可用值的列表。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />，包含可以分配给关联控件属性的值。</returns>
      <param name="context">一个可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
      <param name="typeFilter">用于筛选要包含在标准值列表中的字段的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指示此转换器是否返回一个列表，在其中包含可分配给关联的控件属性的所有可能值。</summary>
      <returns>如果此转换器返回一个列表，在其中包含可分配给关联的控件属性的所有可能值，则返回 true；否则返回 false。</returns>
      <param name="context">一个可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指示在指定的上下文内，此转换器是否返回一组可以分配给控件属性的值。</summary>
      <returns>如果此转换器返回一组可以分配给关联控件属性的值，则返回 true；否则返回 false。</returns>
      <param name="context">一个可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormat">
      <summary>为创建设计时可应用于自定义 Web 服务器控件的格式提供抽象基类。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 类的新实例。</summary>
      <param name="name">一个标识特定 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象的字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.Apply(System.Web.UI.Control)">
      <summary>对指定控件应用关联的格式设置。</summary>
      <param name="control">要向其应用格式设置的 Web 服务器控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.GetPreviewControl(System.Web.UI.Control)">
      <summary>返回关联控件的副本，以便在将格式应用于该控件之前提供预览。</summary>
      <returns>
        <see cref="M:System.Web.UI.Design.DesignerAutoFormat.GetPreviewControl(System.Web.UI.Control)" /> 方法返回关联 Web 服务器控件的副本。</returns>
      <param name="runtimeControl">Web 服务器控件的运行时版本。</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormat.Name">
      <summary>获取 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象的名称。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormat.Style">
      <summary>获取一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" /> 对象，<see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象将使用该对象呈现关联控件的设计时预览。</summary>
      <returns>一个对象，被 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象使用，并通过它呈现关联控件的设计时预览。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.ToString">
      <summary>返回表示当前 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象的字符串。</summary>
      <returns>当前 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 的 <see cref="P:System.Web.UI.Design.DesignerAutoFormat.Name" /> 属性。</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormatCollection">
      <summary>表示控件设计器内的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象的集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Add(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>将指定的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象添加到集合末尾。</summary>
      <returns>集合中添加了格式的位置的索引。</returns>
      <param name="format">
        <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 的一个实例。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Clear">
      <summary>从集合中移除所有格式。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Contains(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>确定指定格式是否包含在集合中。</summary>
      <returns>如果集合中存在指定的格式，则为 true；否则为 false。</returns>
      <param name="format">
        <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 的一个实例。</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count">
      <summary>获取集合中的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象数。</summary>
      <returns>集合中的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象数。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.IndexOf(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>返回指定的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象在集合中的索引。</summary>
      <returns>集合中 <paramref name="format" /> 的第一个匹配项从零开始的索引；如果格式不在集合中，则为 -1。</returns>
      <param name="format">要在集合中定位的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Insert(System.Int32,System.Web.UI.Design.DesignerAutoFormat)">
      <summary>将 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象插入到集合中的指定索引处。</summary>
      <param name="index">要插入 <paramref name="format" /> 的位置在集合中从零开始的索引。</param>
      <param name="format">要插入到集合中的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。 - 或 - <paramref name="index" /> 大于 <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" /> 属性。</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.Item(System.Int32)">
      <summary>获取或设置集合中指定索引处的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象。</summary>
      <returns>集合中指定索引处的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />。</returns>
      <param name="index">要获取或设置的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 在集合中的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。 - 或 - <paramref name="index" /> 大于 <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" /> 属性。</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.PreviewSize">
      <summary>获取控件将在运行时显示的最大外部尺寸。</summary>
      <returns>包含设计图面上的控件的高度和宽度的 <see cref="T:System.Drawing.Size" /> 结构。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Remove(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>从集合中移除指定的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象。</summary>
      <param name="format">要从该集合中移除的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.RemoveAt(System.Int32)">
      <summary>移除集合中指定索引处的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象。</summary>
      <param name="index">要从集合中移除的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。 - 或 - <paramref name="index" /> 大于 <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" /> 属性。</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.SyncRoot">
      <summary>获取一个对象，该对象可用于同步对 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象的访问。</summary>
      <returns>可用于同步对 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 的访问的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>当 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象被强制转换为 <see cref="T:System.Collections.ICollection" /> 接口时，从特定 <see cref="T:System.Array" /> 索引开始将集合的元素复制到一个 <see cref="T:System.Array" /> 对象。</summary>
      <param name="array">要接收指定项的 <see cref="T:System.Array" />。</param>
      <param name="index">要复制的项的起始索引。</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#Count">
      <summary>获取当 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象强制转换为 <see cref="T:System.Collections.ICollection" /> 接口时包含在集合中的元素的数目。</summary>
      <returns>集合中的项数。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#IsSynchronized">
      <summary>获取一个值，该值指示当 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象强制转换为 <see cref="T:System.Collections.ICollection" /> 接口时对集合的访问是否同步（线程安全）。</summary>
      <returns>如果 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 已同步，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回一个 <see cref="T:System.Collections.IEnumerator" /> 接口，该接口在 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象被强制转换为 <see cref="T:System.Collections.IEnumerable" /> 接口时循环访问该集合。</summary>
      <returns>用于 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Add(System.Object)">
      <summary>当 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象被强制转换为 <see cref="T:System.Collections.IList" /> 接口时向该集合添加一个项。</summary>
      <returns>所添加的项的索引。</returns>
      <param name="value">要添加到 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Contains(System.Object)">
      <summary>当 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象被强制转换为 <see cref="T:System.Collections.IList" /> 接口时，确定该集合是否包含某个特定的值。</summary>
      <returns>如果对象在 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 中，则为 true；否则为 false。</returns>
      <param name="value">
        <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>当 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象被强制转换为 <see cref="T:System.Collections.IList" /> 接口时，确定该集合中特定项的索引。</summary>
      <returns>集合中某项的索引。</returns>
      <param name="value">值。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>当 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象被强制转换为 <see cref="T:System.Collections.IList" /> 接口时，在该集合中的指定索引处插入一个项。</summary>
      <param name="index">要插入 <paramref name="value" /> 的位置的索引。</param>
      <param name="value">要插入的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IsFixedSize">
      <summary>获取一个值，该值指示当 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象强制转换为 <see cref="T:System.Collections.IList" /> 接口时集合是否具有固定大小。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IsReadOnly">
      <summary>有关此方法的说明，请参见 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>始终为 true，指示无法替换或删除集合。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Item(System.Int32)">
      <summary>当 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象被强制转换为 <see cref="T:System.Collections.IList" /> 接口时，获取指定索引处的元素。</summary>
      <returns>位于指定索引处的元素。</returns>
      <param name="index">索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Remove(System.Object)">
      <summary>当 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象被强制转换为 <see cref="T:System.Collections.IList" /> 接口时，移除特定对象在集合中的第一个匹配项。</summary>
      <param name="value">要移除的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>当 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象被强制转换为 <see cref="T:System.Collections.IList" /> 接口时，移除指定索引处的项。</summary>
      <param name="index">要移除的项的索引。</param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormatStyle">
      <summary>表示 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象的样式。 此类主要由控件开发人员使用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatStyle.#ctor">
      <summary>用默认值初始化 <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatStyle.VerticalAlign">
      <summary>获取或设置关联控件内容的垂直对齐方式。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.VerticalAlign" /> 值之一。 默认值为 NotSet。</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerDataSourceView">
      <summary>用作设计时数据源视图类的基类。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerDataSourceView.#ctor(System.Web.UI.Design.IDataSourceDesigner,System.String)">
      <summary>使用指定的数据源设计器和视图名称初始化 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 类的新实例。</summary>
      <param name="owner">父数据源设计器。</param>
      <param name="viewName">数据源视图的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> 为null - 或 - <paramref name="viewName" /> 为 null。</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanDelete">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.DataSourceControl" /> 对象关联的 <see cref="T:System.Web.UI.DataSourceView" /> 对象是否支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法。</summary>
      <returns>如果支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanInsert">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.DataSourceControl" /> 对象关联的 <see cref="T:System.Web.UI.DataSourceView" /> 对象是否支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> 方法。</summary>
      <returns>如果支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> 方法，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanPage">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.DataSourceControl" /> 对象关联的 <see cref="T:System.Web.UI.DataSourceView" /> 对象是否支持对由 <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法检索的数据进行分页。</summary>
      <returns>如果支持对由 <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法检索的数据进行分页，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.DataSourceControl" /> 对象关联的 <see cref="T:System.Web.UI.DataSourceView" /> 对象是否支持检索数据的总行数，而不是检索数据本身。</summary>
      <returns>如果支持检索数据的总行数，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanSort">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.DataSourceControl" /> 对象关联的 <see cref="T:System.Web.UI.DataSourceView" /> 对象是否支持基础数据源的排序视图。</summary>
      <returns>如果支持基础数据源的排序视图，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanUpdate">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.DataSourceControl" /> 对象关联的 <see cref="T:System.Web.UI.DataSourceView" /> 对象是否支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法。</summary>
      <returns>如果支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.DataSourceDesigner">
      <summary>获取对创建此 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 控件的设计器的引用。</summary>
      <returns>创建当前 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 实例时提供的 <see cref="T:System.Web.UI.Design.IDataSourceDesigner" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>使用指定的行数生成与关联数据源控件的架构相匹配的设计时数据，以指示其返回示例数据还是实时数据。</summary>
      <returns>包含要在设计时显示的数据的 <see cref="T:System.Web.UI.DataSourceView" /> 对象。</returns>
      <param name="minimumRows">要返回的最小行数。</param>
      <param name="isSampleData">true 指示返回的数据为示例数据；false 指示返回的数据为实时数据。</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.Name">
      <summary>获取在创建 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 类的此实例时提供的视图的名称。</summary>
      <returns>视图名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.Schema">
      <summary>获取描述由此视图对象表示的数据源视图的架构。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象。</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView">
      <summary>基于分层数据提供数据视图设计器的基类。 必须继承此类。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.IHierarchicalDataSourceDesigner,System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" />，它是关联控件的设计器。</param>
      <param name="viewPath">视图所用的数据块的唯一路径。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> 为null - 或 - <paramref name="viewPath" /> 为 null。</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.DataSourceDesigner">
      <summary>获取关联设计器。</summary>
      <returns>父 <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>生成与关联数据源控件的架构匹配的设计时数据，并返回一个指示数据是示例数据还是真实数据的值。</summary>
      <returns>此实现总是返回 null。</returns>
      <param name="isSampleData">true 指示返回的数据是示例数据；false 则指示返回的数据是实时数据。</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.Path">
      <summary>获取在视图中显示的数据块的路径。</summary>
      <returns>创建 <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> 时所提供的路径。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.Schema">
      <summary>获取一个架构，该架构描述关联控件的数据源视图。</summary>
      <returns>此实现总是返回 null。</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerObject">
      <summary>表示设计宿主（如 Visual Studio 2005）中的一个对象。 必须继承此类。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DesignerObject" /> 类的新实例。</summary>
      <param name="designer">父设计器。</param>
      <param name="name">对象的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 为 null。 - 或 - <paramref name="name" /> 为 null。</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Designer">
      <summary>获取关联的设计器组件。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.ControlDesigner" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.GetService(System.Type)">
      <summary>从设计宿主中获取由所提供的类型标识的服务。</summary>
      <returns>请求的服务。</returns>
      <param name="serviceType">所请求的服务类型。</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Name">
      <summary>获取对象的名称。</summary>
      <returns>对象的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Properties">
      <summary>获取对象的属性。</summary>
      <returns>包含对象的属性及其值的 <see cref="T:System.Collections.IDictionary" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.System#IServiceProvider#GetService(System.Type)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.IServiceProvider.GetService(System.Type)" />。</summary>
      <returns>请求的服务。</returns>
      <param name="serviceType">所请求的服务类型。</param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegion">
      <summary>为关联控件定义设计时标记内的内容区域。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>用某个控件设计器的指定名称初始化 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 类的新实例。</summary>
      <param name="designer">包含此设计器区域的控件设计器。</param>
      <param name="name">此设计器区域的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 为 null。 - 或 - <paramref name="designer" /> 为空字符串 ("")。 - 或 - <paramref name="name" /> 为 null。 - 或 - <paramref name="name" /> 为空字符串 ("")。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Boolean)">
      <summary>用某个控件设计器的指定名称初始化 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 类的新实例，还可以选择将该实例设置为设计器中的可选区域。</summary>
      <param name="designer">包含此设计器区域的控件设计器。</param>
      <param name="name">此设计器区域的名称。</param>
      <param name="selectable">如果为 true，则选择区域；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 为 null。 - 或 - <paramref name="designer" /> 为空字符串 ("")。 - 或 - <paramref name="name" /> 为 null。 - 或 - <paramref name="name" /> 为空字符串 ("")。</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Description">
      <summary>获取或设置设计器区域的说明。</summary>
      <returns>设计器区域的文本说明。 默认值为空字符串 ("")。</returns>
    </member>
    <member name="F:System.Web.UI.Design.DesignerRegion.DesignerRegionAttributeName">
      <summary>为设计器区域定义 HTML 特性名称。</summary>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.DisplayName">
      <summary>获取或设置设计器区域的友好显示名称。</summary>
      <returns>用于设计器区域的文本显示名称。 默认值为空字符串 ("")。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.EnsureSize">
      <summary>获取或设置一个值，指示设计宿主是否在设计器区域上显式设置区域大小。</summary>
      <returns>如果设计宿主应该在设计器区域上设置大小，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.GetBounds">
      <summary>检索设计图面上设计器区域的大小。</summary>
      <returns>表示设计图面上设计器区域大小的 <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Highlight">
      <summary>获取或设置一个值，指示是否在设计图面上突出显示设计器区域。</summary>
      <returns>如果可视化设计器应在设计图面上突出显示设计器区域，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Selectable">
      <summary>获取或设置一个值，指示用户是否可以在设计图面上选择该设计器区域。</summary>
      <returns>如果用户可以在设计图面上选择该设计器区域，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Selected">
      <summary>获取或设置一个值，指示设计图面上的设计器区域当前是否被选中。</summary>
      <returns>如果该设计器区域在设计图面上当前被选中，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.UserData">
      <summary>获取或设置可选用户数据，以关联设计器区域。</summary>
      <returns>一个对象，它包含为设计器区域存储的用户数据。 默认值为 null。</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegionCollection">
      <summary>表示控件设计器内的 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.#ctor(System.Web.UI.Design.ControlDesigner)">
      <summary>为指定的控件设计器初始化 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 类的新实例。</summary>
      <param name="owner">具有这一设计器区域集合的控件设计器。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Add(System.Web.UI.Design.DesignerRegion)">
      <summary>将指定的 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象添加到集合末尾。</summary>
      <returns>集合中添加了区域的位置的索引。</returns>
      <param name="region">要添加到集合中的 <see cref="T:System.Web.UI.Design.DesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Clear">
      <summary>从集合中移除所有区域。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Contains(System.Web.UI.Design.DesignerRegion)">
      <summary>获取指示集合中是否包含指定区域的值。</summary>
      <returns>如果集合中存在该区域，则为 true；否则为 false。</returns>
      <param name="region">要在集合中定位的 <see cref="T:System.Web.UI.Design.DesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.CopyTo(System.Array,System.Int32)">
      <summary>从特定的 <see cref="T:System.Array" /> 索引开始，将集合的元素复制到 <see cref="T:System.Array" /> 对象。</summary>
      <param name="array">复制区域的目标 <see cref="T:System.Array" />。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Count">
      <summary>获取集合中的 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象数。</summary>
      <returns>集合中的 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象数。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.GetEnumerator">
      <summary>返回一个循环访问集合的枚举器。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.IndexOf(System.Web.UI.Design.DesignerRegion)">
      <summary>返回指定的 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象在集合中的索引。</summary>
      <returns>集合中 <paramref name="region" /> 的第一个匹配项的索引（索引从零开始）；否则，如果 <paramref name="region" /> 不在集合中，则为 -1。</returns>
      <param name="region">要在集合中定位的 <see cref="T:System.Web.UI.Design.DesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Insert(System.Int32,System.Web.UI.Design.DesignerRegion)">
      <summary>将 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象插入到集合中的指定索引处。</summary>
      <param name="index">集合中要插入区域的位置的从零开始的索引。</param>
      <param name="region">要插入到集合中的 <see cref="T:System.Web.UI.Design.DesignerRegion" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。 - 或 - <paramref name="index" /> 大于 <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" /> 属性。</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsFixedSize">
      <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象是否具有固定大小。</summary>
      <returns>如果集合的大小不能随添加或移除项而改变，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象是否为只读。</summary>
      <returns>如果集合无法更改，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsSynchronized">
      <summary>获取一个值，该值指示对 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象的访问是否同步（线程安全）。</summary>
      <returns>如果对 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 的访问是同步的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Item(System.Int32)">
      <summary>获取或设置集合中指定索引处的 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象。</summary>
      <returns>位于集合中指定索引处的 <see cref="T:System.Web.UI.Design.DesignerRegion" />。</returns>
      <param name="index">要获取或设置的 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 在集合中的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> 小于零。 - 或 - <paramref name="value" /> 大于 <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" /> 属性。</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Owner">
      <summary>获取具有设计器区域集合的控件设计器。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.ControlDesigner" /> 控件，表示具有 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 的控件设计器。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Remove(System.Web.UI.Design.DesignerRegion)">
      <summary>从集合中移除指定的 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象。</summary>
      <param name="region">要从该集合中移除的 <see cref="T:System.Web.UI.Design.DesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.RemoveAt(System.Int32)">
      <summary>移除集合中指定索引处的 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象。</summary>
      <param name="index">要移除的 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 在集合中的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。 - 或 - <paramref name="index" /> 大于 <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" /> 属性。</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.SyncRoot">
      <summary>获取一个对象，该对象可用于同步对 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象的访问。</summary>
      <returns>可用于同步对 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 的访问的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">复制区域的目标 <see cref="T:System.Array" />。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.Count" />。</summary>
      <returns>集合中的元素数。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>如果对集合的访问是同步的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>可用于同步集合访问的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <returns>集合中添加项的位置的索引。</returns>
      <param name="o">要添加到集合的项。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Clear" />。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <returns>如果集合中存在该区域，则为 true；否则为 false。</returns>
      <param name="o">要在集合中定位的 <see cref="T:System.Web.UI.Design.DesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <returns>集合中该对象的第一个匹配项从零开始的索引；如果该对象不在集合中，则为 -1。</returns>
      <param name="o">要在集合中定位的 <see cref="T:System.Web.UI.Design.DesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index">集合中要插入对象的位置的从零开始的索引。</param>
      <param name="o">要在集合中插入的对象。</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>如果集合的大小随着新对象的添加而动态增加，则为 false；否则为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>
        <see cref="P:System.Web.UI.Design.DesignerRegionCollection.IsReadOnly" /> 属性的值。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <returns>位于集合中指定索引处的对象。</returns>
      <param name="index">要获取的对象在集合中的从零开始的索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="o">要从集合中移除的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />。</summary>
      <param name="index">要移除的对象在集合中从零开始的索引。</param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegionMouseEventArgs">
      <summary>为 <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> 事件提供数据，单击选定的控件或选定控件中的设计器区域时引发此事件。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionMouseEventArgs.#ctor(System.Web.UI.Design.DesignerRegion,System.Drawing.Point)">
      <summary>使用指定的区域和位置初始化 <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> 类的新实例。</summary>
      <param name="region">单击的设计器区域；用于初始化 <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region" />。</param>
      <param name="location">单击的位置，相对于区域的左上角；用于初始化 <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Location" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Location">
      <summary>获取被单击的控件内的位置。</summary>
      <returns>
        <see cref="T:System.Drawing.Point" />，标识被单击的区域内的位置。</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region">
      <summary>获取被单击的设计器区域（如果有）。</summary>
      <returns>应用单击事件的 <see cref="T:System.Web.UI.Design.DesignerRegion" />，或为 null（如果未单击区域）。</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignTimeData">
      <summary>提供帮助器方法，控件设计器可以使用这些方法在设计时生成数据绑定属性的示例数据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateDummyDataBoundDataTable">
      <summary>创建一个 <see cref="T:System.Data.DataTable" /> 对象，该对象包含三列，列的名称指示这些列连接到数据源。</summary>
      <returns>一个新的 <see cref="T:System.Data.DataTable" /> 对象，包含三列但没有数据。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateDummyDataTable">
      <summary>创建一个 <see cref="T:System.Data.DataTable" /> 对象，包含三列，列的名称指示这些列包含示例数据。</summary>
      <returns>一个新的 <see cref="T:System.Data.DataTable" />，包含三列。 这些列可以包含字符串类型的数据。</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateSampleDataTable(System.Collections.IEnumerable)">
      <summary>创建一个与提供的数据具有相同架构的示例 <see cref="T:System.Data.DataTable" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Data.DataTable" /> 对象，包含与提供的 <paramref name="referenceData" /> 具有相同名称和数据类型的列。</returns>
      <param name="referenceData">一个数据源，其架构将要用作示例 <see cref="T:System.Data.DataTable" /> 对象的格式。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateSampleDataTable(System.Collections.IEnumerable,System.Boolean)">
      <summary>创建一个与提供的数据具有相同架构的 <see cref="T:System.Data.DataTable" /> 对象，该对象还可以选择包含指示数据为绑定数据的列名称。</summary>
      <returns>
        <see cref="T:System.Data.DataTable" /> 对象。</returns>
      <param name="referenceData">包含数据的 <see cref="T:System.Collections.IEnumerable" /> 对象。</param>
      <param name="useDataBoundData">如果为 true，则列名称指示其中包含绑定数据。</param>
    </member>
    <member name="F:System.Web.UI.Design.DesignTimeData.DataBindingHandler">
      <summary>获取数据绑定的事件处理程序。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataFields(System.Collections.IEnumerable)">
      <summary>获取指定数据源的数据字段的属性说明符集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> 对象，它描述指定数据源的数据字段。</returns>
      <param name="dataSource">要从中检索数据字段的数据源。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataMember(System.ComponentModel.IListSource,System.String)">
      <summary>从指定的数据源获取指定的数据成员。</summary>
      <returns>一个对象，实现包含来自指定数据源的指定数据成员的 <see cref="T:System.Collections.IEnumerable" />（如果存在）。</returns>
      <param name="dataSource">一个 <see cref="T:System.ComponentModel.IListSource" />，它包含要从中查找成员的数据。</param>
      <param name="dataMember">要检索的数据成员的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataSource" /> 为null - 或 - <paramref name="dataMember" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataMembers(System.Object)">
      <summary>获取指定数据源中的数据成员的名称。</summary>
      <returns>一个类型为 String 的数组，该数组包含指定数据源中的数据成员的名称。</returns>
      <param name="dataSource">从中检索成员名称的数据源。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDesignTimeDataSource(System.Data.DataTable,System.Int32)">
      <summary>向指定数据表中添加指定数目的示例行。</summary>
      <returns>一个对象，实现包含在设计时使用的示例数据的 <see cref="T:System.Collections.IEnumerable" />。</returns>
      <param name="dataTable">向其中添加示例行的 <see cref="T:System.Data.DataTable" /> 对象。</param>
      <param name="minimumRows">要添加的最小行数。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetSelectedDataSource(System.ComponentModel.IComponent,System.String)">
      <summary>获取在设计宿主中根据名称选择、由指定组件的站点属性表示并由指定的数据源名称标识的数据源。</summary>
      <returns>一个实现表示所选数据源的 <see cref="T:System.ComponentModel.IListSource" /> 或 <see cref="T:System.Collections.IEnumerable" /> 的对象，如果未能访问数据源或设计器宿主，则为 null。</returns>
      <param name="component">包含数据源的 <see cref="T:System.ComponentModel.IComponent" /> 对象。</param>
      <param name="dataSource">要检索的数据源的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetSelectedDataSource(System.ComponentModel.IComponent,System.String,System.String)">
      <summary>获取在设计宿主中根据名称选择、由指定组件的站点属性表示并由指定的数据源名称和成员名称标识的数据源。</summary>
      <returns>一个对象，实现包含数据成员的 <see cref="T:System.Collections.IEnumerable" /> 的对象；如果未能访问数据源、成员或组件站点，则为 null。</returns>
      <param name="component">一个对象，实现包含数据源属性的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="dataSource">要检索的数据源。</param>
      <param name="dataMember">要检索的数据成员。</param>
    </member>
    <member name="T:System.Web.UI.Design.DesignTimeResourceProviderFactory">
      <summary>在控件本地化过程中用于在设计时读写资源。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.#ctor">
      <summary>创建 <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeGlobalResourceProvider(System.IServiceProvider,System.String)">
      <summary>在派生类中重写时，使用提供的 <see cref="T:System.IServiceProvider" /> 接口和资源类名称创建全局资源提供程序。</summary>
      <returns>为 <see cref="T:System.Web.Compilation.IResourceProvider" /> 或 <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" />。</returns>
      <param name="serviceProvider">对设计宿主的引用。</param>
      <param name="classKey">资源类的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeLocalResourceProvider(System.IServiceProvider)">
      <summary>在派生类中重写时，使用提供的对设计宿主的引用创建本地资源提供程序。</summary>
      <returns>
        <see cref="T:System.Web.Compilation.IResourceProvider" /> 或从 <see cref="T:System.Web.Compilation.IResourceProvider" /> 派生的类。</returns>
      <param name="serviceProvider">对设计宿主的引用。</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeLocalResourceWriter(System.IServiceProvider)">
      <summary>在派生类中重写时，创建本地资源编写器以使用提供的对设计宿主的引用。</summary>
      <returns>用于为设计宿主提供引用的本地资源编写器。</returns>
      <param name="serviceProvider">对设计宿主的引用。</param>
    </member>
    <member name="T:System.Web.UI.Design.EditableDesignerRegion">
      <summary>表示关联控件的设计时标记内的可编辑内容区域。</summary>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>使用给定的所有者和名称初始化 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 类的新实例。</summary>
      <param name="owner">一个 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 对象或一个从 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 派生的设计器。</param>
      <param name="name">区域的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Boolean)">
      <summary>使用给定的所有者、名称和 <see cref="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly" /> 属性的初始值创建 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 类的新实例。</summary>
      <param name="owner">一个 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 对象或一个从 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 派生的设计器。</param>
      <param name="name">区域的名称。</param>
      <param name="serverControlsOnly">如果要使区域只接受 Web 服务器控件作为内容，则为 true；否则为 false。</param>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.Content">
      <summary>获取或设置区域内容的 HTML 标记。</summary>
      <returns>HTML 标记，表示 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象的内容。</returns>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.GetChildViewRendering(System.Web.UI.Control)">
      <summary>返回一个 <see cref="T:System.Web.UI.Design.ViewRendering" /> 对象，该对象包含给定控件的设计时 HTML 标记。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.ViewRendering" /> 对象。</returns>
      <param name="control">为其获取当前区域的 <see cref="T:System.Web.UI.Design.ViewRendering" /> 对象的控件。</param>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly">
      <summary>获取或设置一个值，该值指示区域是否只能接受 Web 服务器控件。</summary>
      <returns>如果区域只能包含 Web 服务器控件，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding">
      <summary>获取或设置一个值，该值指示区域是否可绑定到数据源。</summary>
      <returns>如果 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 内容支持绑定到数据源，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionEditor">
      <summary>定义一组属性和方法，用来计算设计时与控件属性关联的表达式，并向可视化设计宿主提供表达式编辑器表，以便在表达式编辑器对话框中使用。 该类为抽象类。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>计算表达式字符串并提供控件属性的设计时值。</summary>
      <returns>如果表达式计算成功，则为由计算的表达式字符串引用的对象；否则为 null。</returns>
      <param name="expression">要计算的表达式字符串。 该表达式不包含表达式前缀。</param>
      <param name="parseTimeData">一个包含附加分析信息（用以计算 <paramref name="expression" />）的对象。 这通常是由表达式生成器提供的。</param>
      <param name="propertyType">
        <paramref name="expression" /> 绑定到的控件属性的类型。</param>
      <param name="serviceProvider">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</param>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix">
      <summary>获取表达式前缀，该前缀标识受表达式编辑器实现支持的表达式字符串。</summary>
      <returns>表示从 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 派生的类所支持的表达式前缀的字符串；否则，如果表达式编辑器没有关联的表达式前缀，则为空字符串 ("")。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)">
      <summary>返回一个与指定的表达式前缀相关联的 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 实现。</summary>
      <returns>与 <paramref name="expressionPrefix" /> 关联的 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 实现；否则，如果未定义 <paramref name="expressionPrefix" /> 或者未将它与 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 关联，则为 null。</returns>
      <param name="expressionPrefix">用来查找相关联的表达式编辑器的表达式前缀。</param>
      <param name="serviceProvider">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)">
      <summary>返回一个与指定表达式生成器类型相关联的 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 实现。</summary>
      <returns>与 <paramref name="expressionBuilderType" /> 关联的 <see cref="T:System.Web.UI.Design.ExpressionEditor" /> 实现；否则，如果无法定位 <paramref name="expressionBuilderType" /> 或者它没有关联的 <see cref="T:System.Web.UI.Design.ExpressionEditor" />，则为 null。</returns>
      <param name="expressionBuilderType">派生的表达式生成器类的类型，用于定位相关联的表达式编辑器。</param>
      <param name="serviceProvider">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expressionBuilderType" /> 为 null。 - 或 - <paramref name="serviceProvider" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>返回与当前表达式编辑器相关联的表达式编辑器表。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />，定义自定义的表达式的属性。</returns>
      <param name="expression">为控件属性设置的表达式字符串，用于初始化表达式编辑器表。</param>
      <param name="serviceProvider">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</param>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionEditorSheet">
      <summary>表示自定义表达式的设计时编辑器表。 必须继承此类。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 类的新实例。</summary>
      <param name="serviceProvider">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</param>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
      <summary>当在派生类中重写时，返回由表达式编辑器表属性值组成的表达式字符串。</summary>
      <returns>当前属性值的自定义表达式字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid">
      <summary>获取一个值，该值指示表达式字符串是否有效。</summary>
      <returns>如果表达式字符串有效，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
      <summary>获取表达式编辑器表使用的服务提供程序实现。</summary>
      <returns>一个 <see cref="T:System.IServiceProvider" />，通常由设计宿主提供，可用于获取其他设计时服务。</returns>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionsCollectionConverter">
      <summary>为表达式绑定集合提供一个类型转换器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ExpressionsCollectionConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将表达式绑定集合转换为指定的类型。</summary>
      <returns>如果 <paramref name="destinationType" /> 不属于类型 <see cref="T:System.String" />，则为类型转换产生的对象；否则，如果 <paramref name="destinationType" /> 是字符串，则为空字符串 ("")。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象，该对象指示表达式绑定集合所属的组件或控件。</param>
      <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它可以用于提供附加的区域性信息。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">要转换到的类型。</param>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionsCollectionEditor">
      <summary>提供可在设计时选择和编辑表达式绑定集合的用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ExpressionsCollectionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的服务提供程序和上下文编辑指定对象的值。</summary>
      <returns>一个包含选定表达式的 <see cref="T:System.Web.UI.ExpressionBindingCollection" /> 对象；如果未选定表达式，则为 <paramref name="value" /> 对象。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象，可用于获取附加上下文信息，例如关联控件。</param>
      <param name="provider">服务提供程序对象，通过它可获得编辑服务。</param>
      <param name="value">所编辑对象的实例。</param>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>为指定的上下文获取与此编辑器关联的编辑样式。</summary>
      <returns>一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值，指示所提供用户界面的编辑样式。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
    </member>
    <member name="T:System.Web.UI.Design.HierarchicalDataSourceConverter">
      <summary>提供类型转换器，可检索当前组件所能访问的分层数据源的列表。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.HierarchicalDataSourceConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>指示指定组件是否为此转换器的有效数据源。</summary>
      <returns>如果 <paramref name="component" /> 实现了 <see cref="T:System.Web.UI.IHierarchicalEnumerable" />，则为 true；否则为 false。</returns>
      <param name="component">要检查是否为有效数据源的组件。</param>
    </member>
    <member name="T:System.Web.UI.Design.HierarchicalDataSourceDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.HierarchicalDataSourceDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.ActionLists">
      <summary>获取该控件设计器的操作列表集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象，它包含控件设计器的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 项。</returns>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.CanConfigure">
      <summary>获取一个值，该值指示是否可以调用 <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" /> 方法。</summary>
      <returns>此实现总是返回 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示是否可以调用 <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法。</summary>
      <returns>此实现总是返回 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.Configure">
      <summary>启动基础数据源配置向导。</summary>
      <exception cref="T:System.NotSupportedException">在所有情况下。</exception>
    </member>
    <member name="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged">
      <summary>当关联数据源的任何属性发生更改时发生。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的 HTML 标记。</summary>
      <returns>用于在设计时表示控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.GetView(System.String)">
      <summary>获取与数据源控件关联的命名的数据源视图。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> 对象。</returns>
      <param name="viewPath">创建视图时所用的数据块的唯一路径。</param>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.OnDataSourceChanged(System.EventArgs)">
      <summary>当数据源的属性发生更改且 <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> 属性值为 false 时，引发 <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" /> 对象，由调用对象提供。</param>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.OnSchemaRefreshed(System.EventArgs)">
      <summary>当数据源的架构发生更改且 <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> 属性值为 false 时，引发 <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed" /> 事件。</summary>
      <param name="e">
        <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>刷新数据的架构。</summary>
      <param name="preferSilent">该实现中不使用此参数。 但是，派生类中必须支持此参数。</param>
      <exception cref="T:System.NotSupportedException">在所有情况下。</exception>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.ResumeDataSourceEvents">
      <summary>在数据源事件被取消后还原它们。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> 属性为 false。</exception>
    </member>
    <member name="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed">
      <summary>在架构刷新后发生。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressDataSourceEvents">
      <summary>推迟所有数据源事件，直到 <see cref="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.ResumeDataSourceEvents" /> 方法被调用为止。</summary>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents">
      <summary>指示数据源事件是否已被禁用。</summary>
      <returns>如果 <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged" /> 或 <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed" /> 事件已被禁用，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Web.UI.Design.HtmlControlDesigner">
      <summary>提供 ASP.NET 服务器控件的基本设计时功能。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.Behavior">
      <summary>获取或设置与设计器关联的 DHTML 行为。</summary>
      <returns>与设计器关联的 <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.DataBindings">
      <summary>获取当前控件的数据绑定集合。</summary>
      <returns>包含当前控件的数据绑定的 <see cref="T:System.Web.UI.DataBindingCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.DesignTimeElement">
      <summary>获取一个设计时对象，该对象表示与设计图面上的 <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> 对象关联的控件。</summary>
      <returns>设计时对象，该对象表示与 <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> 相关联的控件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> 对象占用的非托管资源，还可以选择释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.Expressions">
      <summary>获取当前控件在设计时的表达式绑定。</summary>
      <returns>一个 <see cref="T:System.Web.UI.ExpressionBindingCollection" /> 集合，包含为当前控件中的属性设置的表达式字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化设计器并设置用于设计的组件。</summary>
      <param name="component">用于设计的控件元素。</param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorAttached">
      <summary>当某个行为与该元素关联时被调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorDetaching">
      <summary>当某个行为与该元素取消关联时被调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBindingsCollectionChanged(System.String)">
      <summary>提供可用于指示数据绑定更改时间的方法。</summary>
      <param name="propName">已更改的属性名。</param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnSetParent">
      <summary>提供一种在将关联控件附加到父控件时执行附加处理的方式。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>设置在设计时为用于组件的 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象公开的事件列表。</summary>
      <param name="events">包含要公开的组件的事件名称的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>允许设计器通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象在设计时公开一组特定的属性。</summary>
      <param name="properties">要为组件筛选的属性集。</param>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.ShouldCodeSerialize">
      <summary>获取或设置一个值，该值指示在序列化期间是否应为当前设计文档在代码隐藏文件中创建控件的字段声明。</summary>
      <returns>如果应创建声明，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Web.UI.Design.HtmlIntrinsicControlDesigner">
      <summary>为所有内部 HTML 控件提供基设计器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlIntrinsicControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.HtmlIntrinsicControlDesigner" /> 类的实例。</summary>
    </member>
    <member name="T:System.Web.UI.Design.HyperLinkDataBindingHandler">
      <summary>提供超链接属性的数据绑定处理程序。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HyperLinkDataBindingHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.HyperLinkDataBindingHandler" /> 类的实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.HyperLinkDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>为指定控件解析设计时数据绑定。</summary>
      <param name="designerHost">包含该控件的文档的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <param name="control">要将数据绑定到的 <see cref="T:System.Web.UI.Control" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.IContentResolutionService">
      <summary>提供在设计时从内容页访问母版页的接口（如果诸如 Visual Studio 2005 的设计宿主提供上述成员）。</summary>
    </member>
    <member name="P:System.Web.UI.Design.IContentResolutionService.ContentDefinitions">
      <summary>获取母版页中标识的内容占位符的 <see cref="T:System.Web.UI.Design.ContentDefinition" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Collections.IDictionary" />，包含标识符和 <see cref="T:System.Web.UI.Design.ContentDefinition" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IContentResolutionService.GetContentDesignerState(System.String)">
      <summary>检索标识的内容占位符的当前状态。</summary>
      <returns>标识的内容占位符的当前状态。</returns>
      <param name="identifier">内容占位符的标识符。</param>
    </member>
    <member name="M:System.Web.UI.Design.IContentResolutionService.SetContentDesignerState(System.String,System.Web.UI.Design.ContentDesignerState)">
      <summary>设置标识的内容占位符的当前状态。</summary>
      <param name="identifier">内容占位符的标识符。</param>
      <param name="state">
        <see cref="T:System.Web.UI.Design.ContentDesignerState" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerBehavior">
      <summary>启用控件设计器的特定行为的扩展。</summary>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerBehavior.DesignTimeElementView">
      <summary>获取设计器的设计时视图控件对象。</summary>
      <returns>设计器的视图控件对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerBehavior.DesignTimeHtml">
      <summary>获取或设置设计器的控件的设计时 HTML。</summary>
      <returns>在设计时用于格式化控件的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerBehavior.OnTemplateModeChanged">
      <summary>提供当设计器进入或退出模板模式时执行处理的机会。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerTag">
      <summary>提供一个接口，用于对与控件设计器相关联的控件的 HTML 标记进行设计时访问。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetAttribute(System.String)">
      <summary>检索标记的已标识特性的值。</summary>
      <returns>一个字符串，它包含特性的值。</returns>
      <param name="name">属性名。</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetContent">
      <summary>检索标记的内容的 HTML 标记。</summary>
      <returns>标记的内容的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetOuterContent">
      <summary>检索控件的完整 HTML 标记，包括外部标记。</summary>
      <returns>控件的外部 HTML 标记。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerTag.IsDirty">
      <summary>获取一个值，该值指示标记的特性或内容是否已更改。</summary>
      <returns>如果标记已更改，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.RemoveAttribute(System.String)">
      <summary>从标记中删除指定的特性。</summary>
      <param name="name">属性名。</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetAttribute(System.String,System.String)">
      <summary>如有必要，设置指定特性的值并创建特性。</summary>
      <param name="name">特性名称。</param>
      <param name="value">特性值。</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetContent(System.String)">
      <summary>设置标记的内容的 HTML 标记。</summary>
      <param name="content">标记的内容的 HTML 标记。</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetDirty(System.Boolean)">
      <summary>设置标记的 <see cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" /> 属性。</summary>
      <param name="dirty">
        <see cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" /> 属性的值。</param>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerView">
      <summary>提供一个接口，用于在设计时访问控件的可视表示形式和内容。</summary>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.ContainingRegion">
      <summary>获取包含关联控件的设计器区域（如果有）。</summary>
      <returns>如果关联的控件包含在设计器区域中，则为 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象；否则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.GetBounds(System.Web.UI.Design.DesignerRegion)">
      <summary>检索设计器视图的外部边界。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" />，它包含有关设计时视图的位置和尺寸的信息。</returns>
      <param name="region">希望检索其边界的 <see cref="T:System.Web.UI.Design.DesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.Invalidate(System.Drawing.Rectangle)">
      <summary>通知设计宿主需要在设计图面上重新绘制由提供的矩形表示的区域。</summary>
      <param name="rectangle">一个 <see cref="T:System.Drawing.Rectangle" />，它表示设计图面上视图的位置和外部尺寸。 此矩形的坐标系原点位于附加该行为的元素的左上角。</param>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.NamingContainerDesigner">
      <summary>获取关联控件的命名容器的设计器组件（如果有）。</summary>
      <returns>一个 IDesigner 对象，它表示关联控件的命名容器的设计器组件；否则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.SetFlags(System.Web.UI.Design.ViewFlags,System.Boolean)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IControlDesignerView.SetFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />。</summary>
      <param name="viewFlags">
        <see cref="T:System.Web.UI.Design.ViewFlags" /> 枚举的成员。</param>
      <param name="setFlag">如果要设置标志，则为 true；如果要取消标志，则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>将提供的内容置于提供的设计器区域中。</summary>
      <param name="region">要向其中放入内容的 <see cref="T:System.Web.UI.Design.DesignerRegion" />。</param>
      <param name="content">将放入设计器区域的 HTML 标记。</param>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.SupportsRegions">
      <summary>获取一个值，该值指示是否支持设计器区域。</summary>
      <returns>如果支持设计器区域，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.Update">
      <summary>导致关联的控件在其工作区内重新绘制无效区域。</summary>
    </member>
    <member name="E:System.Web.UI.Design.IControlDesignerView.ViewEvent">
      <summary>设计宿主为视图和设计器组件引发的事件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataBindingSchemaProvider">
      <summary>提供设计时访问设计宿主中的架构提供程序的接口。</summary>
    </member>
    <member name="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema">
      <summary>获取一个值，该值指示提供程序是否能刷新架构。</summary>
      <returns>如果能刷新架构，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)">
      <summary>刷新数据源的架构。</summary>
      <param name="preferSilent">true，则在刷新架构前禁用数据绑定事件；false，则启用数据绑定事件。</param>
    </member>
    <member name="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema">
      <summary>获取设计器的当前架构对象。</summary>
      <returns>设计器的当前架构对象。</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceDesigner">
      <summary>定义数据源设计器的基本功能。</summary>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure">
      <summary>获取一个值，该值指示是否可以调用 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" /> 方法。</summary>
      <returns>如果基础数据源有可以由 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" /> 方法启动的配置向导，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示是否可以调用 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法。</summary>
      <returns>如果基础数据源可以刷新其架构，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.Configure">
      <summary>启动基础数据源的配置向导。</summary>
    </member>
    <member name="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged">
      <summary>当数据源以某种影响数据绑定控件的方式发生更改时发生。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)">
      <summary>获取指定视图的 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" />。</summary>
      <returns>包含有关标识的视图信息的 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" />，或者，如果未找到具有指定名称的视图，则为 null。</returns>
      <param name="viewName">基础数据源中的视图的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames">
      <summary>获取基础数据源中的视图的名称。</summary>
      <returns>
        <see cref="T:System.String" /> 类型数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>刷新基础数据源的架构。</summary>
      <param name="preferSilent">指示是否取消刷新架构时引发的所有事件。</param>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents">
      <summary>调用 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" /> 方法后继续引发数据源事件。</summary>
    </member>
    <member name="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed">
      <summary>基础数据源的字段或数据已更改时发生。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents">
      <summary>取消由数据源引发的所有事件，直至调用 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" /> 方法。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceFieldSchema">
      <summary>提供用于在设计时描述数据字段结构的基本功能。</summary>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType">
      <summary>获取存储在字段中的数据的类型。</summary>
      <returns>
        <see cref="T:System.Type" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Identity">
      <summary>获取一个值，该值指示字段值是否随每个新增行自动递增。</summary>
      <returns>如果字段的 <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> 为 numeric 并且基础字段随新增行自动递增，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.IsReadOnly">
      <summary>获取一个值，该值指示此字段是否为可编辑字段。</summary>
      <returns>如果该字段为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.IsUnique">
      <summary>获取一个值，该值指示是否要求字段值是唯一的。</summary>
      <returns>如果字段中的数据必须是唯一的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Length">
      <summary>获取一个值，该值指示存储在字段中的数据的大小。</summary>
      <returns>字段可以存储的字节数。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Name">
      <summary>获取字段名。</summary>
      <returns>字段名。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Nullable">
      <summary>获取一个值，该值指示字段是否可接受 null 值。</summary>
      <returns>如果字段可以接受 null 值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Precision">
      <summary>获取用于表示字段中的数值的最大位数。</summary>
      <returns>如果字段的 <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> 属性表示 numeric 类型，则为用于表示字段值的最大位数。 如果该属性未实现，则返回 -1。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.PrimaryKey">
      <summary>获取一个值，该值指示字段是否在主键中。</summary>
      <returns>如果字段在主键中，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Scale">
      <summary>获取字段中的数值解析成的小数位数。</summary>
      <returns>如果字段的 <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> 属性为 numeric 类型，则返回数值解析成的小数位数；否则返回 -1。</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceProvider">
      <summary>定义经控件设计器实现后可访问数据源的接口。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource">
      <summary>从所选的数据源中获取选定的数据成员。</summary>
      <returns>从选择的数据源中选择的数据成员 -- 如果控件允许用户为数据源选择 <see cref="T:System.ComponentModel.IListSource" />（例如 <see cref="T:System.Data.DataSet" />），并提供 DataMember 属性来选择数据源内的特定列表（或 <see cref="T:System.Data.DataTable" />）。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource">
      <summary>获取对数据源提供程序的选定数据源的引用。</summary>
      <returns>此数据源提供程序的当前选定的数据源对象。</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceSchema">
      <summary>提供在设计时描述数据源结构的基本功能。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceSchema.GetViews">
      <summary>获取一个包含在数据源中的视图的架构说明符数组。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象的数组。</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceViewSchema">
      <summary>定义一组用于检查数据源的方法和属性。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceViewSchema.GetChildren">
      <summary>获取一个数组，该数组表示当前视图中所包含的子视图。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象的数组，表示当前视图中所包含的子视图。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceViewSchema.GetFields">
      <summary>获取一个数组，该数组包含数据源中各字段的信息。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceFieldSchema" /> 对象的数组，表示数据源中的各字段。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceViewSchema.Name">
      <summary>获取视图名。</summary>
      <returns>视图的名称。</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDesignTimeResourceProviderFactoryService">
      <summary>提供用于创建自定义 <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> 类的接口。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDesignTimeResourceProviderFactoryService.GetFactory">
      <summary>创建一个 <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> 对象。</summary>
      <returns>设计时资源的提供程序工厂。</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDesignTimeResourceWriter">
      <summary>由 <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> 类用于在设计时对数据进行本地化。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDesignTimeResourceWriter.CreateResourceKey(System.String,System.Object)">
      <summary>使用提供的字符串创建一个键，用以从给定资源中检索数据。</summary>
      <returns>用于写入或从 <paramref name="resourceName" /> 检索 <paramref name="obj" /> 的键。</returns>
      <param name="resourceName">资源的名称。</param>
      <param name="obj">要本地化的对象。</param>
    </member>
    <member name="T:System.Web.UI.Design.IDocumentProjectItem">
      <summary>提供一个接口，用于对从设计宿主检索的文档项进行设计时访问。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDocumentProjectItem.GetContents">
      <summary>提供对从设计宿主检索的文档项的内容的访问。</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDocumentProjectItem.Open">
      <summary>打开从设计宿主检索的文档项。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IFolderProjectItem">
      <summary>为设计宿主（如 Visual Studio 2005）中的项目文件夹提供一个接口。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IFolderProjectItem.AddDocument(System.String,System.Byte[])">
      <summary>向设计宿主（如 Visual Studio 2005）中的项目文件夹添加一个文档。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.IDocumentProjectItem" />，表示所添加的文档。</returns>
      <param name="name">文档的名称。</param>
      <param name="content">包含文档内容的 <see cref="T:System.Byte" /> 类型数组。</param>
    </member>
    <member name="M:System.Web.UI.Design.IFolderProjectItem.AddFolder(System.String)">
      <summary>在设计宿主（如 Visual Studio 2005）的项目文件夹中创建一个新文件夹。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.IFolderProjectItem" />，表示新文件夹。</returns>
      <param name="name">新文件夹的名称。</param>
    </member>
    <member name="P:System.Web.UI.Design.IFolderProjectItem.Children">
      <summary>获取设计宿主（如 Visual Studio 2005）中的项目文件夹中的项集合。</summary>
      <returns>一个 <see cref="T:System.Collections.ICollection" />，包含设计宿主的项目文件夹中的项。</returns>
    </member>
    <member name="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner">
      <summary>在可视化设计器中为从 <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> 类派生的类提供设计时支持。</summary>
    </member>
    <member name="P:System.Web.UI.Design.IHierarchicalDataSourceDesigner.CanConfigure">
      <summary>获取一个值，该值指示是否可以调用 <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" /> 方法。</summary>
      <returns>如果基础数据源有可用 <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" /> 启动的配置向导，则为 true，否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IHierarchicalDataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示是否可以调用 <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法。</summary>
      <returns>如果可以调用 <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" />，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure">
      <summary>启动基础数据源配置向导。</summary>
    </member>
    <member name="E:System.Web.UI.Design.IHierarchicalDataSourceDesigner.DataSourceChanged">
      <summary>当数据源控件以某种影响数据绑定控件的方式发生变化时发生。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.GetView(System.String)">
      <summary>获取与数据源控件关联的命名的数据源视图。</summary>
      <returns>与数据源控件关联的命名数据源视图。</returns>
      <param name="viewPath">要检索的数据源部分的 XPath。</param>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>刷新基础数据源的架构。</summary>
      <param name="preferSilent">true，则在刷新架构时取消引发的事件；否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.ResumeDataSourceEvents">
      <summary>在调用 <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SuppressDataSourceEvents" /> 方法之后还原事件。</summary>
    </member>
    <member name="E:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SchemaRefreshed">
      <summary>基础数据源的字段或数据已更改时发生。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SuppressDataSourceEvents">
      <summary>关闭数据源控件中的事件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.IHtmlControlDesignerBehavior">
      <summary>定义一个接口，该接口使得可以对 HTML 控件设计器的特定行为进行扩展。</summary>
    </member>
    <member name="P:System.Web.UI.Design.IHtmlControlDesignerBehavior.Designer">
      <summary>获取或设置与此行为相关联的设计器。</summary>
      <returns>与此行为相关联的 <see cref="T:System.Web.UI.Design.HtmlControlDesigner" />。 <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> 接口已过时。 使用 <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> 和 <see cref="T:System.Web.UI.Design.IControlDesignerView" /> 接口实现等效的控件设计器功能。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IHtmlControlDesignerBehavior.DesignTimeElement">
      <summary>获取与此设计器相关联的元素。</summary>
      <returns>与此设计器相关联的对象。 <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> 接口已过时。 使用 <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> 和 <see cref="T:System.Web.UI.Design.IControlDesignerView" /> 接口实现等效的控件设计器功能。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.GetAttribute(System.String,System.Boolean)">
      <summary>获取指定的特性。</summary>
      <returns>被检索的特性。</returns>
      <param name="attribute">要检索的特性。</param>
      <param name="ignoreCase">如果特性语法不区分大小写，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.GetStyleAttribute(System.String,System.Boolean,System.Boolean)">
      <summary>获取指定的样式特性。</summary>
      <returns>被检索的样式特性。</returns>
      <param name="attribute">要检索的样式特性。</param>
      <param name="designTimeOnly">如果该特性仅在设计时活动，则为 true；否则为 false。</param>
      <param name="ignoreCase">如果特性语法不区分大小写，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.RemoveAttribute(System.String,System.Boolean)">
      <summary>移除指定的特性。</summary>
      <param name="attribute">要移除的特性。</param>
      <param name="ignoreCase">如果特性语法不区分大小写，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.RemoveStyleAttribute(System.String,System.Boolean,System.Boolean)">
      <summary>移除指定的样式特性。</summary>
      <param name="attribute">要移除的样式特性。</param>
      <param name="designTimeOnly">如果该特性仅在设计时活动，则为 true；否则为 false。</param>
      <param name="ignoreCase">如果特性语法不区分大小写，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.SetAttribute(System.String,System.Object,System.Boolean)">
      <summary>将指定的特性设置到指定的对象。</summary>
      <param name="attribute">要设置的特性。</param>
      <param name="value">要对其设置特性的对象。</param>
      <param name="ignoreCase">如果特性语法不区分大小写，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.SetStyleAttribute(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>将指定的样式特性设置到指定的对象。</summary>
      <param name="attribute">要设置的特性。</param>
      <param name="designTimeOnly">如果该特性仅在设计时活动，则为 true；否则为 false。</param>
      <param name="value">要设置其特性的对象。</param>
      <param name="ignoreCase">如果特性语法不区分大小写，则为 true；否则为 false。</param>
    </member>
    <member name="T:System.Web.UI.Design.ImageUrlEditor">
      <summary>提供用于选择引用图像的 URL 的用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ImageUrlEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ImageUrlEditor" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.ImageUrlEditor.Caption">
      <summary>获取要在选择对话窗口中显示的标题。</summary>
      <returns>要在选择对话窗口中显示的标题。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ImageUrlEditor.Filter">
      <summary>获取编辑器的文件名筛选器字符串。 该字符串用来确定在对话框的文件列表中显示的项。</summary>
      <returns>可用于筛选对话框的文件列表的筛选器字符串。</returns>
    </member>
    <member name="T:System.Web.UI.Design.IProjectItem">
      <summary>为设计时从设计宿主（如 Visual Studio 2005）中检索出的项提供接口。</summary>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.AppRelativeUrl">
      <summary>获取项相对于设计宿主的 URL。</summary>
      <returns>相对 URL。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.Name">
      <summary>获取项名。</summary>
      <returns>项的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.Parent">
      <summary>获取对包含的项的引用（如果有）。</summary>
      <returns>如果当前项包含在另一个项中，则为 <see cref="T:System.Web.UI.Design.IProjectItem" />；否则为 null。</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.PhysicalPath">
      <summary>获取项目项的路径。</summary>
      <returns>项的路径。</returns>
    </member>
    <member name="T:System.Web.UI.Design.ITemplateEditingFrame">
      <summary>提供管理模板编辑区域的界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Close(System.Boolean)">
      <summary>关闭该控件并根据需要保存所有更改。</summary>
      <param name="saveChanges">如果应保存对此文档所做的更改，则为 true；否则为 false。</param>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.ControlStyle">
      <summary>获取编辑框的样式。</summary>
      <returns>表示编辑框的 Web 服务器控件样式特性的 <see cref="T:System.Web.UI.WebControls.Style" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.InitialHeight">
      <summary>获取或设置控件的初始高度。</summary>
      <returns>控件的初始高度。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.InitialWidth">
      <summary>获取或设置控件的初始宽度。</summary>
      <returns>控件的初始宽度。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.Name">
      <summary>获取编辑框的名称。</summary>
      <returns>编辑框的名称。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Open">
      <summary>打开并显示该控件。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Resize(System.Int32,System.Int32)">
      <summary>将控件的大小调整到指定的宽度和高度。</summary>
      <param name="width">控件的新宽度。</param>
      <param name="height">控件的新高度。</param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Save">
      <summary>保存对文档所做的所有更改。</summary>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.TemplateNames">
      <summary>获取要使用的模板的名称集。</summary>
      <returns>一个模板名称数组。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.TemplateStyles">
      <summary>获取控件的模板样式。</summary>
      <returns>表示控件的模板样式的 <see cref="T:System.Web.UI.WebControls.Style" /> 对象的数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.UpdateControlName(System.String)">
      <summary>将控件的名称更改为指定的名称。</summary>
      <param name="newName">控件的新名称。</param>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.Verb">
      <summary>获取或设置调用此模板的谓词。</summary>
      <returns>调用此模板的 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" />。</returns>
    </member>
    <member name="T:System.Web.UI.Design.ITemplateEditingService">
      <summary>提供在设计时编辑控件模板的服务。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[])">
      <summary>使用指定的名称和模板为指定的模板化控件设计器创建新的模板编辑框。</summary>
      <returns>新的 <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />。</returns>
      <param name="designer">将使用模板编辑框架的 <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />。</param>
      <param name="frameName">将在框架上显示的编辑框架的名称。 通常，这与用作创建框架时将调用的 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 的菜单文本的 <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> 属性相同。</param>
      <param name="templateNames">模板编辑框架将包含的模板的名称数组。</param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[],System.Web.UI.WebControls.Style,System.Web.UI.WebControls.Style[])">
      <summary>使用指定的名称、模板名称、控件样式和模板样式为指定的 <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> 创建新的模板编辑框。</summary>
      <returns>新的 <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />。</returns>
      <param name="designer">将使用模板编辑框架的 <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />。</param>
      <param name="frameName">将在框架上显示的编辑框架的名称。 通常，这与用作创建框架时将调用的 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 的菜单文本的 <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> 属性相同。</param>
      <param name="templateNames">模板编辑框架将包含的模板的名称数组。</param>
      <param name="controlStyle">编辑框的控件 <see cref="T:System.Web.UI.WebControls.Style" />。</param>
      <param name="templateStyles">表示编辑框的模板样式的 <see cref="T:System.Web.UI.WebControls.Style" /> 类型的数组。</param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.GetContainingTemplateName(System.Web.UI.Control)">
      <summary>获取父模板的名称。</summary>
      <returns>父模板的名称。</returns>
      <param name="control">要为其获取父模板名称的 <see cref="T:System.Web.UI.Control" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingService.SupportsNestedTemplateEditing">
      <summary>获取一个值，该值指示服务是否支持嵌套模板编辑。</summary>
      <returns>如果服务支持嵌套模板编辑，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Web.UI.Design.IWebAdministrationService">
      <summary>提供用于在设计时创建管理网站的服务的接口。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebAdministrationService.Start(System.Collections.IDictionary)">
      <summary>启动设计宿主中的 Web 管理功能。</summary>
      <param name="arguments">一个 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.IWebApplication">
      <summary>提供用于在设计时访问设计宿主（如 Microsoft Visual Studio 2005）中的 Web 应用程序的接口。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebApplication.GetProjectItemFromUrl(System.String)">
      <summary>从设计宿主中基于 URL 返回一个项目项。</summary>
      <returns>来自基于其 URL 的设计宿主的一个项目项。</returns>
      <param name="appRelativeUrl">待检索的项目项的相对路径。</param>
    </member>
    <member name="M:System.Web.UI.Design.IWebApplication.OpenWebConfiguration(System.Boolean)">
      <summary>返回一个 <see cref="T:System.Configuration.Configuration" /> 对象，表示设计宿主中的当前 Web 应用程序。</summary>
      <returns>一个对象，表示设计宿主中的当前 Web 应用程序。</returns>
      <param name="isReadOnly">true 指示返回的 <see cref="T:System.Configuration.Configuration" /> 是可编辑的；否则为 false。</param>
    </member>
    <member name="P:System.Web.UI.Design.IWebApplication.RootProjectItem">
      <summary>获取设计宿主中的根项目项。</summary>
      <returns>设计宿主中的根项目项。</returns>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormReferenceManager">
      <summary>提供一个接口，该接口可以查找有关在当前 Web 窗体项目中使用的类型的信息。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetObjectType(System.String,System.String)">
      <summary>获取指定对象的类型。</summary>
      <returns>该对象的 <see cref="T:System.Type" />（如果能够解析它的话）。</returns>
      <param name="tagPrefix">类型的标记前缀。</param>
      <param name="typeName">类型名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetRegisterDirectives">
      <summary>获取当前项目的注册指令。</summary>
      <returns>当前项目的注册指令。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetTagPrefix(System.Type)">
      <summary>获取指定对象类型的标记前缀。</summary>
      <returns>指定对象类型的标记前缀（如果能够找到的话）。</returns>
      <param name="objectType">对象的类型。</param>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormsBuilderUIService">
      <summary>提供方法以启动在设计时生成属性的特定用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsBuilderUIService.BuildColor(System.Windows.Forms.Control,System.String)">
      <summary>启动 <see cref="T:System.Web.UI.Design.ColorBuilder" /> 以生成颜色属性。</summary>
      <returns>所选的颜色。 该值将是已命名的颜色，或者是以 HTML 颜色格式 (#RRGGBB) 表示的 RGB 颜色。</returns>
      <param name="owner">该控件用于创建 <see cref="T:System.Web.UI.Design.ColorBuilder" /> 所示对话框的父级。</param>
      <param name="initialColor">要预先选定的编辑器的初始颜色。</param>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsBuilderUIService.BuildUrl(System.Windows.Forms.Control,System.String,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>启动编辑器以生成 URL 属性。</summary>
      <returns>包含由 <see cref="T:System.Web.UI.Design.UrlBuilder" /> 返回的 URL 的字符串。</returns>
      <param name="owner">该控件用于创建 <see cref="T:System.Web.UI.Design.UrlBuilder" /> 所示对话框的父级。</param>
      <param name="initialUrl">要在选择界面中显示的初始 URL。</param>
      <param name="baseUrl">用于构造相对 URL 的基 URL。</param>
      <param name="caption">在选择界面中提供消息的标题。</param>
      <param name="filter">筛选器字符串，用于有选择地筛选显示在选择界面中的文件。</param>
      <param name="options">指示 <see cref="T:System.Web.UI.Design.UrlBuilder" /> 的选项的 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormsDocumentService">
      <summary>提供访问服务的方法，这些服务包括跟踪 Web 窗体文档的加载状态、在加载时处理事件、访问文档的位置、管理文档的撤消服务和在文档中设置新的选定内容。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.CreateDiscardableUndoUnit">
      <summary>创建可放弃的撤消单元。</summary>
      <returns>新的可放弃的撤消单元。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.DiscardUndoUnit(System.Object)">
      <summary>放弃指定的撤消单元。</summary>
      <param name="discardableUndoUnit">要放弃的撤消单元。</param>
    </member>
    <member name="P:System.Web.UI.Design.IWebFormsDocumentService.DocumentUrl">
      <summary>获取文档所在的 URL。</summary>
      <returns>文档所在的 URL，或者如果该文档没有关联的 URL，则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.EnableUndo(System.Boolean)">
      <summary>启用撤消在无法撤消的操作单元或事务内发生的操作的能力。</summary>
      <param name="enable">如果操作应为不可撤消的，则为 true；否则为 false。</param>
    </member>
    <member name="P:System.Web.UI.Design.IWebFormsDocumentService.IsLoading">
      <summary>获取一个值，该值指示当前是否正在加载文档服务。</summary>
      <returns>如果正在加载文档服务，则为 true；否则为 false。</returns>
    </member>
    <member name="E:System.Web.UI.Design.IWebFormsDocumentService.LoadComplete">
      <summary>当服务完成加载时发生。</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.UpdateSelection">
      <summary>当在派生类中实现时，将更新当前选定内容。</summary>
    </member>
    <member name="T:System.Web.UI.Design.MailFileEditor">
      <summary>提供可用于在设计时选择和编辑属性的邮件文件名的用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.MailFileEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.MailFileEditor" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.MailFileEditor.Caption">
      <summary>获取编辑器对话框的标题。</summary>
      <returns>设计时对话框的标题。</returns>
    </member>
    <member name="P:System.Web.UI.Design.MailFileEditor.Filter">
      <summary>获取对话框的文件筛选字符串（例如“*.txt”）。</summary>
      <returns>在设计时对话框中用来选择文件的筛选器。</returns>
    </member>
    <member name="T:System.Web.UI.Design.MdbDataFileEditor">
      <summary>提供用于选择 Microsoft Access 数据库文件的设计时用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.MdbDataFileEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.MdbDataFileEditor" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.MdbDataFileEditor.Caption">
      <summary>获取要在选择对话框中显示的标题。</summary>
      <returns>要在选择对话框中显示的标题文本。</returns>
    </member>
    <member name="P:System.Web.UI.Design.MdbDataFileEditor.Filter">
      <summary>获取编辑器的 URL 筛选选项，用于对 URL 选择对话框中出现的项进行筛选。</summary>
      <returns>一个字符串，表示对话框的一个或多个 URL 筛选选项。</returns>
    </member>
    <member name="T:System.Web.UI.Design.ReadWriteControlDesigner">
      <summary>扩展读/写服务器控件的设计时行为。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ReadWriteControlDesigner" /> 类的实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.GetDesignTimeHtml">
      <summary>获取设计时用于表示控件的 HTML。</summary>
      <returns>设计时用于表示控件的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.MapPropertyToStyle(System.String,System.Object)">
      <summary>将属性（包括说明和值）映射为内部 HTML 样式。</summary>
      <param name="propName">要映射的属性的名称。</param>
      <param name="varPropValue">该属性的值。</param>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.OnBehaviorAttached">
      <summary>提供通知，该通知在行为附加到设计器时引发。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>表示将处理 <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> 类的 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> 事件的方法。</summary>
      <param name="sender">发送事件的对象。</param>
      <param name="ce">为事件提供数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.UpdateDesignTimeHtml">
      <summary>刷新控件的显示。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ResourceExpressionEditor">
      <summary>提供用于在设计时计算和编辑资源表达式的属性和方法。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>计算资源表达式并提供控件属性的设计时值。</summary>
      <returns>如果表达式计算成功，则为由计算的表达式字符串引用的对象；否则为 null。</returns>
      <param name="expression">要计算的资源表达式。 <paramref name="expression" /> 不包含 Resources 表达式前缀。</param>
      <param name="parseTimeData">一个对象，它以 <see cref="T:System.Web.Compilation.ResourceExpressionFields" /> 值的形式提供附加分析数据。</param>
      <param name="propertyType">控件属性的类型。</param>
      <param name="serviceProvider">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</param>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>返回使用输入表达式字符串和服务提供程序实现初始化的资源表达式编辑器表。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />，定义资源表达式属性。</returns>
      <param name="expression">一个资源表达式，用于初始化表达式编辑器表。</param>
      <param name="serviceProvider">设计器宿主提供的服务提供程序实现，用于初始化表达式编辑器表。</param>
    </member>
    <member name="T:System.Web.UI.Design.ResourceExpressionEditorSheet">
      <summary>在设计时表示设计器宿主 UI 中资源表达式属性的设计时编辑器表。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> 类的新实例。</summary>
      <param name="expression">一个资源表达式，用于初始化表达式编辑器表。</param>
      <param name="serviceProvider">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</param>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey">
      <summary>获取或设置与项目的全局资源文件夹中资源的文件名匹配的键。</summary>
      <returns>全局资源文件夹中的资源文件的键。</returns>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditorSheet.GetExpression">
      <summary>返回由表达式编辑器表属性值形成的资源表达式。</summary>
      <returns>表中当前设置的资源表达式字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.IsValid">
      <summary>获取一个值，该值指示资源表达式字符串是否有效。</summary>
      <returns>如果资源表达式字符串有效，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey">
      <summary>获取或设置资源的名称，该名称可用作查找资源值的键。</summary>
      <returns>资源的名称。</returns>
    </member>
    <member name="T:System.Web.UI.Design.RouteUrlExpressionEditor">
      <summary>提供用于在设计时组成 RouteURL 表达式的属性和方法。</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>计算 RouteUrl 表达式并提供设计时值。</summary>
      <returns>如果表达式计算成功，则为指定路由的 URL 以及路由参数值；否则为 null。</returns>
      <param name="expression">要计算的 RouteUrl 表达式。 该表达式不包含 RouteUrl 表达式前缀。</param>
      <param name="parseTimeData">一个对象，其中包含用于计算表达式的其他分析信息。</param>
      <param name="propertyType">控件属性的类型。</param>
      <param name="serviceProvider">一个服务提供程序实现，它由设计器宿主提供，用于获取其他设计时服务。</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>返回 RouteUrl 表达式的表达式编辑器表。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet" /> 实例，它定义 RouteUrl 表达式属性。</returns>
      <param name="expression">一个表达式字符串，用于初始化表达式编辑器表。 该表达式不包含 RouteUrl 表达式前缀。</param>
      <param name="serviceProvider">一个服务提供程序实现，它由设计器宿主提供，用于获取其他设计时服务。</param>
    </member>
    <member name="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet">
      <summary>表示设计时某个设计器宿主的 UI 中 RouteUrl 表达式的属性的设计时编辑器表。</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet" /> 类的新实例。</summary>
      <param name="expression">一个 RouteUrl 表达式，用于初始化表达式编辑器表。</param>
      <param name="serviceProvider">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditorSheet.GetExpression">
      <summary>返回由表达式编辑器表属性值组成的 RouteUrl 表达式。</summary>
      <returns>表中当前设置的 RouteUrl 表达式字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.IsValid">
      <summary>获取一个值，该值指示 RouteUrl 表达式字符串是否有效。</summary>
      <returns>如果 RouteUrl 表达式字符串有效，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteName">
      <summary>获取或设置要为其生成 URL 的路由的名称。</summary>
      <returns>要为其生成 URL 的路由的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteValues">
      <summary>获取或设置要用于根据路由生成 URL 的 URL 参数名称和值。</summary>
      <returns>用于根据路由生成 URL 的 URL 参数名称和值。</returns>
    </member>
    <member name="T:System.Web.UI.Design.RouteValueExpressionEditor">
      <summary>提供用于在设计时组成 RouteValue 表达式的属性和方法。</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.RouteValueExpressionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>计算 RouteValue 表达式并提供设计时值。</summary>
      <returns>如果表达式计算成功，则为指定 URL 参数的值；否则为 null。</returns>
      <param name="expression">要计算的 RouteValue 表达式。 该表达式不包含 RouteValue 表达式前缀。</param>
      <param name="parseTimeData">一个对象，其中包含用于计算表达式的其他分析信息。</param>
      <param name="propertyType">控件属性的类型。</param>
      <param name="serviceProvider">一个服务提供程序实现，它由设计器宿主提供，用于获取其他设计时服务。</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>返回 RouteValue 表达式的表达式编辑器表。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" /> 实例，它定义 RouteValue 表达式属性。</returns>
      <param name="expression">一个表达式字符串，用于初始化表达式编辑器表。 该表达式不包含 RouteValue 表达式前缀。</param>
      <param name="serviceProvider">一个服务提供程序实现，它由设计器宿主提供，用于获取其他设计时服务。</param>
    </member>
    <member name="T:System.Web.UI.Design.RouteValueExpressionEditorSheet">
      <summary>表示设计时某个设计器宿主的 UI 中 RouteValue 表达式的属性的设计时编辑器表。</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" /> 类的新实例。</summary>
      <param name="expression">一个 RouteValue 表达式，用于初始化表达式编辑器表。</param>
      <param name="serviceProvider">一个服务提供程序实现，它由设计器宿主提供，用于获取其他设计时服务</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditorSheet.GetExpression">
      <summary>返回由表达式编辑器表属性值组成的 RouteValue 表达式。</summary>
      <returns>表中当前设置的 RouteValue 表达式字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteValueExpressionEditorSheet.IsValid">
      <summary>获取一个值，该值指示 RouteValue 表达式字符串是否有效。</summary>
      <returns>如果 RouteValue 表达式字符串有效，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteValueExpressionEditorSheet.RouteValue">
      <summary>获取或设置要由 RouteValue 表达式计算的 URL 参数的名称。</summary>
      <returns>要由 RouteValue 表达式计算的 URL 参数的名称。</returns>
    </member>
    <member name="T:System.Web.UI.Design.SkinIDTypeConverter">
      <summary>基于当前适用的主题，在设计时为控件提供有效的外观 ID 列表。</summary>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.SkinIDTypeConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回一个值，该值指示此转换器是否可以使用提供的格式上下文和类型将 <see cref="P:System.Web.UI.Control.SkinID" /> 对象转换为字符串。</summary>
      <returns>如果可以执行转换，则为 true；否则为 false。</returns>
      <param name="context">提供委派的控件的格式上下文的 T:System.ComponentModel.ITypeDescriptorContext。</param>
      <param name="sourceType">
        <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回一个值，该值指示此转换器是否可以使用指定的上下文将 <see cref="P:System.Web.UI.Control.SkinID" /> 对象转换为指定的类型。</summary>
      <returns>如果转换可以执行，则为 true；否则为 false。</returns>
      <param name="context">提供委派的控件的格式上下文的 T:System.ComponentModel.ITypeDescriptorContext。</param>
      <param name="destType">A T：System. 类型表示要转换为的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>使用指定的上下文和区域性信息将给定的字符串转换为 <see cref="P:System.Web.UI.Control.SkinID" /> 对象。</summary>
      <returns>如果转换可以执行，则为可强制转换为 <see cref="P:System.Web.UI.DataSourceControl.SkinID" /> 对象的对象；否则为 null。</returns>
      <param name="context">提供表示委派的控件的格式上下文的 T:System.ComponentModel.ITypeDescriptorContext。</param>
      <param name="culture">A T：System.Globalization.CultureInfo. 如果传递 null，则采用当前区域性。</param>
      <param name="value">要转换的字符串。</param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>使用指定的上下文和区域性信息将给定的 <see cref="P:System.Web.UI.Control.SkinID" /> 对象转换为字符串。</summary>
      <returns>一个对象，表示转换后的值。</returns>
      <param name="context">提供表示委派的控件的格式上下文的 T:System.ComponentModel.ITypeDescriptorContext。</param>
      <param name="culture">A T：System.Globalization.CultureInfo. 如果为 null，则假定为当前区域性。</param>
      <param name="value">要转换的 <see cref="P:System.Web.UI.Control.SkinID" /> 对象。</param>
      <param name="destinationType">T:System.Type，可将 <paramref name="value" /> 转换为它（必须为 <see cref="T:System.String" />）。</param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回可以应用于用给定格式上下文表示的控件的一组 <see cref="P:System.Web.UI.Control.SkinID" /> 对象。</summary>
      <returns>
        <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />，它保存一组 <see cref="P:System.Web.UI.Control.SkinID" /> 对象；否则，如果该控件不支持外观，则为 null。</returns>
      <param name="context">提供表示委派的控件的格式上下文的 T:System.ComponentModel.ITypeDescriptorContext。 <paramref name="context" /> 或 <paramref name="context" /> 的属性可以为 null。</param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回一个值，该值指示用给定上下文表示的控件是否支持可从列表中选取的一组 <see cref="P:System.Web.UI.Control.SkinID" /> 对象。</summary>
      <returns>如果应调用 <see cref="Overload:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValues" /> 来查找该对象支持的一组公共值，则为 true；否则为 false。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于设计中的控件。</param>
    </member>
    <member name="T:System.Web.UI.Design.SupportsPreviewControlAttribute">
      <summary>指示在设计时控制设计器是否需要控件的预览实例。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.#ctor(System.Boolean)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 类的新实例，并设置 <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" /> 属性的初始值。</summary>
      <param name="supportsPreviewControl">为 <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" /> 分配的初始值。</param>
    </member>
    <member name="F:System.Web.UI.Design.SupportsPreviewControlAttribute.Default">
      <summary>获取设置为默认预览值的 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 类的实例。 此字段为只读。</summary>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.Equals(System.Object)">
      <summary>确定指定的对象表示的预览特性设置是否与 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 类当前实例的设置相同。</summary>
      <returns>如果 <paramref name="obj" /> 为 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 特性，并且它的值与 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 的此实例相同，则为 true；否则为 false。</returns>
      <param name="obj">要与 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 当前实例进行比较的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.GetHashCode">
      <summary>返回 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 类的此实例的哈希代码。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 当前实例的 32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.IsDefaultAttribute">
      <summary>指示 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 类的当前实例是否设置为默认的预览特性值。</summary>
      <returns>如果 <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> 的当前实例等于默认预览特性值，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl">
      <summary>获取一个指示设计时控件设计器是否需要临时预览控件的值。</summary>
      <returns>如果设计器将相关控件的临时副本用作设计时预览，则为 true；如果设计器使用所包含的 <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> 控件实例，则为 false。</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplatedControlDesigner">
      <summary>扩展基于模板的服务器控件的设计时行为。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.ActiveTemplateEditingFrame">
      <summary>获取活动的模板编辑框。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />，它是当前活动的模板编辑框。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.CanEnterTemplateMode">
      <summary>获取一个值，该值指示此设计器是否允许查看或编辑模板。</summary>
      <returns>如果设计器允许查看或编辑模板，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>当在派生类中被重写时，为指定的谓词创建一个模板编辑框架。</summary>
      <returns>新模板编辑框。</returns>
      <param name="verb">要为其创建模板编辑框的模板编辑谓词。</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.DataBindingsEnabled">
      <summary>获取一个值，该值指示设计器是否允许数据绑定。</summary>
      <returns>如果设计器允许数据绑定，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.EnterTemplateMode(System.Web.UI.Design.ITemplateEditingFrame)">
      <summary>打开特定的模板框对象以在设计器中进行编辑。</summary>
      <param name="newTemplateEditingFrame">要在设计器中打开的模板编辑框对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.ExitTemplateMode(System.Boolean,System.Boolean,System.Boolean)">
      <summary>保存所有相关的更改之后，关闭当前活动的模板编辑框。</summary>
      <param name="fSwitchingTemplates">当从一个模板编辑框架切换到另一个时，为 true；否则为 false。</param>
      <param name="fNested">如果此设计器嵌套（一级或多级）在其设计器也处于模板编辑模式的另一个控件中，则为 true；否则为 false。</param>
      <param name="fSave">如果模板应在退出时保存，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetCachedTemplateEditingVerbs">
      <summary>获取缓存的模板编辑谓词。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 对象（如果有的话）的数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>获取模板容器的数据项属性。</summary>
      <returns>表示数据的字符串。</returns>
      <param name="templateName">模板的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataSource(System.String)">
      <summary>获取模板容器的数据源。</summary>
      <returns>指定模板的容器的数据源。</returns>
      <param name="templateName">模板的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>当在派生类中被重写时，获取模板的内容。</summary>
      <returns>模板的内容。</returns>
      <param name="editingFrame">要检索其内容的模板编辑框。</param>
      <param name="templateName">模板的名称。</param>
      <param name="allowEditing">如果模板的内容可以编辑，则为 true；如果模板的内容为只读，则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateEditingVerbs">
      <summary>获取设计器可以使用的模板编辑谓词。</summary>
      <returns>设计器可以使用的模板编辑谓词。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateFromText(System.String)">
      <summary>从指定文本创建模板。</summary>
      <returns>指定文本的 <see cref="T:System.Web.UI.ITemplate" />。</returns>
      <param name="text">要从中检索模板的文本。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplatePropertyParentType(System.String)">
      <summary>获取模板属性的父级的类型。</summary>
      <returns>具有模板属性的对象的类型。</returns>
      <param name="templateName">要返回其父级类型的模板的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTextFromTemplate(System.Web.UI.ITemplate)">
      <summary>获取表示指定模板的文本字符串。</summary>
      <returns>表示指定模板的字符串。</returns>
      <param name="template">要转换为文本的 <see cref="T:System.Web.UI.ITemplate" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="template" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化设计器并加载指定的组件。</summary>
      <param name="component">正在设计的控件元素。</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.InTemplateMode">
      <summary>获取一个值，该值指示设计器文档是否处于模板模式。</summary>
      <returns>如果设计器文档处于模板模式，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnBehaviorAttached">
      <summary>提供将行为附加到设计器时进行附加处理的机会。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>要处理组件更改事件的委托。</summary>
      <param name="sender">发送事件的对象。</param>
      <param name="ce">为事件提供数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnSetParent">
      <summary>提供在此设计器的父级被更改时执行附加处理的机会。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged">
      <summary>提供在模板模式被更改时执行附加处理的机会。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.SaveActiveTemplateEditingFrame">
      <summary>保存活动的模板编辑框。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>当在派生类中被重写时，将指定模板的内容设置为指定的内容。</summary>
      <param name="editingFrame">要为其提供内容的模板编辑框。</param>
      <param name="templateName">模板的名称。</param>
      <param name="templateContent">要为此模板设置的内容。</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.TemplateGroups">
      <summary>获取模板组的集合，每个模板组都包含一个模板定义。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.TemplateGroup" /> 元素的集合。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.UpdateDesignTimeHtml">
      <summary>更新设计时 HTML。</summary>
    </member>
    <member name="T:System.Web.UI.Design.TemplatedEditableDesignerRegion">
      <summary>为关联控件定义设计时标记内的可编辑内容区域。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedEditableDesignerRegion.#ctor(System.Web.UI.Design.TemplateDefinition)">
      <summary>使用提供的模板定义初始化 <see cref="T:System.Web.UI.Design.TemplatedEditableDesignerRegion" /> 类的新实例。</summary>
      <param name="templateDefinition">要编辑的模板的 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 实例。</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.IsSingleInstanceTemplate">
      <summary>获取或设置模板在包含控件的每个实例上是只出现一次（如 header 模板），还是能根据可用数据出现多次（如 item 模板）。</summary>
      <returns>如果模板只出现一次，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.SupportsDataBinding">
      <summary>获取或设置一个值，该值指示模板是否可以绑定到数据源。</summary>
      <returns>如果由区域所表示的模板能够绑定到数据源，则为 true；否则为 false。</returns>
      <exception cref="T:System.InvalidOperationException">已尝试设置此属性。</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.TemplateDefinition">
      <summary>获取一个 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 对象，该对象描述由区域所引用的模板。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 对象。</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateDefinition">
      <summary>提供设计时在 Web 服务器控件中定义模板元素的属性和方法。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String)">
      <summary>使用所提供的设计器、模板名称、模板和属性名初始化 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 类的新实例。</summary>
      <param name="designer">父 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 对象。</param>
      <param name="name">模板的名称。</param>
      <param name="templatedObject">包含模板的对象。</param>
      <param name="templatePropertyName">属性名，在设计宿主的“属性”列表中表示此模板。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 为 null， - 或 - <paramref name="templatedObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Boolean)">
      <summary>使用所提供的设计器、模板名称、模板、属性名以及是否将模板内容限制为 Web 服务器控件来初始化 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 类的新实例。</summary>
      <param name="designer">父 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 对象。</param>
      <param name="name">模板的名称。</param>
      <param name="templatedObject">包含模板的对象。</param>
      <param name="templatePropertyName">属性名，在设计宿主的“属性”列表中表示此模板。</param>
      <param name="serverControlsOnly">一个布尔值，指示模板内容是否只允许为 Web 服务器控件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 为 null， - 或 - <paramref name="templatedObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style)">
      <summary>使用所提供的设计器、模板名称、模板、属性名以及 <see cref="T:System.Web.UI.WebControls.Style" /> 对象来初始化 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 类的新实例。</summary>
      <param name="designer">父 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 对象。</param>
      <param name="name">模板的名称。</param>
      <param name="templatedObject">包含模板的对象。</param>
      <param name="templatePropertyName">属性名，在设计宿主的“属性”列表中表示此模板。</param>
      <param name="style">要应用到每个模板的 <see cref="T:System.Web.UI.WebControls.Style" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 为 null， - 或 - <paramref name="templatedObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style,System.Boolean)">
      <summary>使用所提供的设计器、模板名称、模板、属性名、<see cref="T:System.Web.UI.WebControls.Style" /> 对象以及是否将内容限制为 Web 服务器控件来初始化 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 类的新实例。</summary>
      <param name="designer">父 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 对象。</param>
      <param name="name">模板的名称。</param>
      <param name="templatedObject">包含模板的对象。</param>
      <param name="templatePropertyName">属性名，在设计宿主的“属性”列表中表示此模板。</param>
      <param name="style">要应用到每个模板的 <see cref="T:System.Web.UI.WebControls.Style" /> 对象。</param>
      <param name="serverControlsOnly">一个布尔值，指示模板是否应将内容限制为 Web 服务器控件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> 为 null， - 或 - <paramref name="templatedObject" /> 为 null。</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.AllowEditing">
      <summary>获取一个值，该值指示模板是否允许编辑其内容。</summary>
      <returns>如果允许编辑，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.Content">
      <summary>获取或设置表示模板内容的 HTML 标记。</summary>
      <returns>表示模板内容的 HTML 标记。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.ServerControlsOnly">
      <summary>检索一个值，该值指示模板是否应将内容限制为 Web 服务器控件，该值在 <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" /> 构造函数中设置。 此属性是只读的。</summary>
      <returns>如果内容限制为 Web 服务器控件，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.Style">
      <summary>检索应当应用到模板的样式，该样式在 <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" /> 构造函数中设置。 此属性是只读的。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.Style" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.SupportsDataBinding">
      <summary>检索或设置一个值，该值指示模板是否支持数据绑定。</summary>
      <returns>如果模板支持数据绑定，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.TemplatedObject">
      <summary>检索包含模板的组件。 此属性是只读的。</summary>
      <returns>在创建此 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 时进行设置的组件。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.TemplatePropertyName">
      <summary>检索设计宿主应在属性网格中显示的模板的属性名称。</summary>
      <returns>模板名称，它将出现在设计宿主的“属性”列表中。</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateEditingService">
      <summary>提供在设计时编辑控件模板的服务。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>使用指定的设计器宿主初始化 <see cref="T:System.Web.UI.Design.TemplateEditingService" /> 类的新实例。</summary>
      <param name="designerHost">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 实现，用于在设计时访问组件。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[])">
      <summary>使用指定的名称和模板为指定的模板化控件设计器创建新的模板编辑框。</summary>
      <returns>新的 <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />。</returns>
      <param name="designer">将使用模板编辑框架的 <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />。</param>
      <param name="frameName">将在框架上显示的编辑框架的名称。 通常，这与用作 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" />（创建框架时调用）的菜单文本的 <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> 相同。</param>
      <param name="templateNames">模板编辑框架将包含的模板的名称数组。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[],System.Web.UI.WebControls.Style,System.Web.UI.WebControls.Style[])">
      <summary>使用指定的名称、模板名称、控件样式和模板样式为指定的 <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> 创建一个新的模板编辑框。</summary>
      <returns>新的 <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />。</returns>
      <param name="designer">将使用模板编辑框架的 <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />。</param>
      <param name="frameName">将在框架上显示的编辑框架的名称。 通常，这与用作 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" />（创建框架时调用）的菜单文本的 <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> 相同。</param>
      <param name="templateNames">模板编辑框架将包含的模板的名称数组。</param>
      <param name="controlStyle">编辑框的控件 <see cref="T:System.Web.UI.WebControls.Style" />。</param>
      <param name="templateStyles">表示编辑框的模板样式的 <see cref="T:System.Web.UI.WebControls.Style" /> 类型的数组。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.Dispose">
      <summary>释放由 <see cref="T:System.Web.UI.Design.TemplateEditingService" /> 对象使用的所有资源。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.GetContainingTemplateName(System.Web.UI.Control)">
      <summary>获取父模板的名称。</summary>
      <returns>父模板的名称。</returns>
      <param name="control">要为其获取父模板名称的 <see cref="T:System.Web.UI.Control" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingService.SupportsNestedTemplateEditing">
      <summary>获取一个值，该值指示服务是否支持嵌套模板编辑。</summary>
      <returns>如果服务支持嵌套模板编辑，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateEditingVerb">
      <summary>表示一个设计器谓词，该谓词创建模板编辑框并且只能由模板编辑器调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.#ctor(System.String,System.Int32)">
      <summary>使用指定的谓词文本和索引初始化 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 类的新实例。</summary>
      <param name="text">要为菜单上的谓词显示的文本。</param>
      <param name="index">可由设计器使用的可选整数值，通常指示谓词在谓词集中的索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.#ctor(System.String,System.Int32,System.Web.UI.Design.TemplatedControlDesigner)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 类的新实例。</summary>
      <param name="text">要为菜单上的谓词显示的文本。</param>
      <param name="index">可由设计器使用的可选整数值，通常指示谓词在谓词集中的索引。</param>
      <param name="designer">可使用此谓词的 <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Dispose">
      <summary>释放由 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Finalize">
      <summary>在垃圾回收将对象回收之前，尝试释放资源。</summary>
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingVerb.Index">
      <summary>获取该谓词的索引或其他用户数据。</summary>
      <returns>该谓词的索引或用户数据。</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateGroup">
      <summary>表示设计时 Web 服务器控件中的模板元素的 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 对象集合。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.#ctor(System.String)">
      <summary>使用所提供的名称初始化 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 类的新实例。</summary>
      <param name="groupName">组的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.#ctor(System.String,System.Web.UI.WebControls.Style)">
      <summary>使用所提供的名称和样式初始化 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 类的新实例。</summary>
      <param name="groupName">组的名称</param>
      <param name="groupStyle">要应用到组中的模板的 <see cref="T:System.Web.UI.WebControls.Style" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.AddTemplateDefinition(System.Web.UI.Design.TemplateDefinition)">
      <summary>将提供的 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 添加到组。</summary>
      <param name="templateDefinition">
        <see cref="T:System.Web.UI.Design.TemplateDefinition" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.GroupName">
      <summary>获取组的名称。</summary>
      <returns>组的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.GroupStyle">
      <summary>获取组的当前样式。</summary>
      <returns>如果已设置，则为组的 <see cref="T:System.Web.UI.WebControls.Style" />；否则为 null。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.IsEmpty">
      <summary>获取一个指示组中是否有模板的值。</summary>
      <returns>如果组中没有模板，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.Templates">
      <summary>获取组中所有模板定义的数组。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 对象的数组。</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateGroupCollection">
      <summary>表示某控件设计器内的 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象的集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Add(System.Web.UI.Design.TemplateGroup)">
      <summary>将指定的 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象添加到集合末尾。</summary>
      <returns>向集合添加 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 的位置的索引。</returns>
      <param name="group">要添加到集合中的 <see cref="T:System.Web.UI.Design.TemplateGroup" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.AddRange(System.Web.UI.Design.TemplateGroupCollection)">
      <summary>将现有 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 对象中的模板组添加到当前 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 对象。</summary>
      <param name="groups">
        <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />，它包含要添加到集合的组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groups" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Clear">
      <summary>从集合中移除所有组。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Contains(System.Web.UI.Design.TemplateGroup)">
      <summary>确定指定组是否包含在集合中。</summary>
      <returns>如果 <paramref name="group" /> 在集合中，则为 true；否则为 false。</returns>
      <param name="group">要在集合中定位的 <see cref="T:System.Web.UI.Design.TemplateGroup" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.CopyTo(System.Web.UI.Design.TemplateGroup[],System.Int32)">
      <summary>将集合中的组复制到一个兼容的一维数组（从目标数组的指定索引处开始）。</summary>
      <param name="array">一个 <see cref="T:System.Array" />，是复制的组的目标位置。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多维的。 - 或 - <paramref name="index" /> 大于或等于 <paramref name="array" /> 的长度。 - 或 - 源 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 中的元素数目大于从 <paramref name="index" /> 到 <paramref name="array" /> 结尾的可用空间。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null。</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.Count">
      <summary>获取集合中的 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象数。</summary>
      <returns>集合中的 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象数。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.IndexOf(System.Web.UI.Design.TemplateGroup)">
      <summary>返回集合内指定 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象的索引。</summary>
      <returns>集合中 <paramref name="group" /> 的第一个匹配项的从零开始的索引；否则，如果 <paramref name="group" /> 不在集合中，则为 -1。</returns>
      <param name="group">要在集合中定位的 <see cref="T:System.Web.UI.Design.TemplateGroup" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Insert(System.Int32,System.Web.UI.Design.TemplateGroup)">
      <summary>将 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象插入到集合中的指定索引处。</summary>
      <param name="index">要插入 <paramref name="group" /> 的位置在集合中从零开始的索引。</param>
      <param name="group">要插入到集合中的 <see cref="T:System.Web.UI.Design.TemplateGroup" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。 - 或 - <paramref name="index" /> 大于 <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" /> 属性。</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.Item(System.Int32)">
      <summary>获取或设置集合中指定索引处的 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象。</summary>
      <returns>集合中位于 <paramref name="index" /> 处的 <see cref="T:System.Web.UI.Design.TemplateGroup" />。</returns>
      <param name="index">要获取或设置的 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 在集合中的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> 小于零。 - 或 - <paramref name="value" /> 大于 <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" /> 属性。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Remove(System.Web.UI.Design.TemplateGroup)">
      <summary>从集合中移除指定的 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象。</summary>
      <param name="group">要从该集合中移除的 <see cref="T:System.Web.UI.Design.TemplateGroup" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.RemoveAt(System.Int32)">
      <summary>移除集合中位于指定索引处的 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象。</summary>
      <param name="index">要移除的 <see cref="T:System.Web.UI.Design.TemplateGroup" /> 在集合中从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。 - 或 - <paramref name="index" /> 大于 <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" /> 属性。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">一个 <see cref="T:System.Array" />，是复制的组的目标位置。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#Count">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.Count" />。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 中元素的数目。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>如果对 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 的访问不是同步的（线程安全），则为 false；否则为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>用于同步对 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 的访问的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Add(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" />。</summary>
      <returns>向集合添加 <paramref name="o" /> 的位置的索引。</returns>
      <param name="o">要添加到集合中的 <see cref="T:System.Web.UI.Design.TemplateGroup" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Clear">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Clear" />。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</summary>
      <returns>如果 <paramref name="o" /> 在集合中，则为 true；否则为 false。</returns>
      <param name="o">要在集合中定位的 <see cref="T:System.Web.UI.Design.TemplateGroup" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</summary>
      <returns>集合中 <paramref name="o" /> 的第一个匹配项的从零开始的索引；否则，如果 <paramref name="o" /> 不在集合中，则为 -1。</returns>
      <param name="o">要在集合中定位的 <see cref="T:System.Web.UI.Design.TemplateGroup" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</summary>
      <param name="index">要插入 <paramref name="o" /> 的位置在集合中从零开始的索引。</param>
      <param name="o">要在集合中插入的对象。</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>如果添加新对象时 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 动态增加，则为 false；否则为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IsReadOnly">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>如果可以添加、修改和移除 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />，则为 false；否则为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="T:System.Collections.IList" /> 类。</summary>
      <returns>集合中位于 <paramref name="index" /> 处的对象。</returns>
      <param name="index">要获取的对象在集合中的从零开始的索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</summary>
      <param name="o">要从集合中移除的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />。</summary>
      <param name="index">要移除的对象在集合中从零开始的索引。</param>
    </member>
    <member name="T:System.Web.UI.Design.TemplateModeChangedEventArgs">
      <summary>向设计图面上的控件的模板模式更改时引发的 <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateModeChangedEventArgs.#ctor(System.Web.UI.Design.TemplateGroup)">
      <summary>使用指定的模板组初始化 <see cref="T:System.Web.UI.Design.TemplateModeChangedEventArgs" /> 类的新实例。</summary>
      <param name="newTemplateGroup">用于初始化 <see cref="P:System.Web.UI.Design.TemplateModeChangedEventArgs.NewTemplateGroup" /> 的新模板组。</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateModeChangedEventArgs.NewTemplateGroup">
      <summary>获取进入模板编辑模式时创建的模板组。</summary>
      <returns>如果您进入新模板的模板编辑模式，则为 <see cref="T:System.Web.UI.Design.TemplateGroup" />；否则为 null。</returns>
    </member>
    <member name="T:System.Web.UI.Design.TextControlDesigner">
      <summary>扩展其 Text 属性已持久化为内部文本的 Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.TextControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示关联控件的标记。</summary>
      <returns>设计时用于表示控件的标记。</returns>
    </member>
    <member name="T:System.Web.UI.Design.TextDataBindingHandler">
      <summary>在设计时为数据绑定控件提供数据绑定处理程序。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextDataBindingHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.TextDataBindingHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>数据绑定到指定的控件。</summary>
      <param name="designerHost">为包含该控件的文档实现 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 的对象。</param>
      <param name="control">数据绑定的目标 <see cref="T:System.Web.UI.Control" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.TransactedChangeCallback">
      <summary>引用自定义 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 对象中的方法的委托，该自定义对象将由 <see cref="Overload:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange" /> 方法调用以实现与设计器相关联的控件中的属性更改。</summary>
      <returns>如果事务成功完成，则为 true；如果事务应该回滚，则为 false。</returns>
      <param name="context">事务被调用时要调用的方法。</param>
    </member>
    <member name="T:System.Web.UI.Design.TypeSchema">
      <summary>表示对象类型的结构（或架构）。</summary>
    </member>
    <member name="M:System.Web.UI.Design.TypeSchema.#ctor(System.Type)">
      <summary>使用提供的 <see cref="T:System.Type" /> 对象创建 <see cref="T:System.Web.UI.Design.TypeSchema" /> 类的新实例。</summary>
      <param name="type">一个描述对象的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.TypeSchema.GetViews">
      <summary>获取架构说明符的数组来查看数据源。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 的实例数组，或者实现 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 接口的类的实例数组。</returns>
    </member>
    <member name="T:System.Web.UI.Design.UrlBuilder">
      <summary>启动使用户可以选择或创建 URL 的 URL 编辑器。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String,System.String,System.String)">
      <summary>创建用户界面以创建或选取 URL。</summary>
      <returns>从用户界面中返回的 URL。</returns>
      <param name="component">将使用其站点来访问设计时服务的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="owner">用作选择器窗口的父级的 <see cref="T:System.Windows.Forms.Control" />。</param>
      <param name="initialUrl">要在选择器窗口中显示的初始 URL。</param>
      <param name="caption">选择器窗口的标题。</param>
      <param name="filter">筛选字符串，用于有选择地筛选显示在选择器窗口中的文件。</param>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>使用指定的 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> 对象创建用户界面以创建或选取 URL。</summary>
      <returns>从用户界面中返回的 URL。</returns>
      <param name="component">将使用其站点来访问设计时服务的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="owner">用作选择器窗口的父级的 <see cref="T:System.Windows.Forms.Control" />。</param>
      <param name="initialUrl">要在选择器窗口中显示的初始 URL。</param>
      <param name="caption">选择器窗口的标题。</param>
      <param name="filter">筛选字符串，用于有选择地筛选显示在选择器窗口中的文件。</param>
      <param name="options">指示 URL 选择的选项的 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.IServiceProvider,System.Windows.Forms.Control,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>使用指定的 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> 对象创建用户界面以创建或选取 URL。</summary>
      <returns>从用户界面中返回的 URL。</returns>
      <param name="serviceProvider">要用来访问设计时服务的 <see cref="T:System.IServiceProvider" />。</param>
      <param name="owner">用作选择器窗口的父级的 <see cref="T:System.Windows.Forms.Control" />。</param>
      <param name="initialUrl">要在选择器窗口中显示的初始 URL。</param>
      <param name="caption">选择器窗口的标题。</param>
      <param name="filter">筛选字符串，用于有选择地筛选显示在选择器窗口中的文件。</param>
      <param name="options">指示 URL 选择的选项的 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.UrlBuilderOptions">
      <summary>定义 <see cref="T:System.Web.UI.Design.UrlBuilder" /> 的设置的标识符。</summary>
    </member>
    <member name="F:System.Web.UI.Design.UrlBuilderOptions.NoAbsolute">
      <summary>生成引用相对于当前路径的路径的 URL，而不是引用完全限定的绝对路径的 URL。</summary>
    </member>
    <member name="F:System.Web.UI.Design.UrlBuilderOptions.None">
      <summary>不使用 <see cref="T:System.Web.UI.Design.UrlBuilder" /> 的任何附加选项。</summary>
    </member>
    <member name="T:System.Web.UI.Design.UrlEditor">
      <summary>提供选择 URL 的用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.UrlEditor" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Caption">
      <summary>获取要在选择对话框中显示的标题。</summary>
      <returns>要在选择对话框中显示的标题。</returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="M:System.Web.UI.Design.UrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法所提供的编辑器样式编辑指定对象的值。</summary>
      <returns>新的对象值。 如果未更改对象的值，则此方法应返回所传递的同一对象。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="provider">可通过其获取编辑服务的服务提供程序对象。</param>
      <param name="value">正在编辑的值的实例。</param>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Filter">
      <summary>获取编辑器的文件名筛选器字符串。 这用来确定在对话框的文件列表中显示的项。</summary>
      <returns>一个字符串，包含对话框中可用的文件筛选选项的信息。</returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取 <see cref="M:System.Web.UI.Design.UrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法的编辑样式。</summary>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值之一，指示所提供的编辑样式。 如果不支持该方法，则此方法将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Options">
      <summary>获取 URL 生成器要使用的选项。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" />，它指示要使用的 URL 生成器选项。</returns>
    </member>
    <member name="T:System.Web.UI.Design.UserControlDesigner">
      <summary>向用户控件提供设计器功能。</summary>
    </member>
    <member name="M:System.Web.UI.Design.UserControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.UserControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.UserControlDesigner.ActionLists">
      <summary>获取用户控件设计器的操作列表集合。</summary>
      <returns>一个包含控件设计器的操作列表标记的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.UserControlDesigner.AllowResize">
      <summary>获取一个值，该值指示用户控件的大小是否可以调整。</summary>
      <returns>false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.UserControlDesigner.GetDesignTimeHtml">
      <summary>获取在设计时用于表示用户控件的 HTML 标记。</summary>
      <returns>设计时用于表示控件的标记。</returns>
      <exception cref="T:System.InvalidOperationException">子控件的 <see cref="P:System.Web.UI.Control.ID" /> 属性为空（即 null）。</exception>
    </member>
    <member name="T:System.Web.UI.Design.UserControlFileEditor">
      <summary>提供用于选择设计时要编辑的文件的对话框。</summary>
    </member>
    <member name="M:System.Web.UI.Design.UserControlFileEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.UserControlFileEditor" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.UserControlFileEditor.Caption">
      <summary>获取对话框的标题。</summary>
      <returns>编辑器窗口的标题。</returns>
    </member>
    <member name="P:System.Web.UI.Design.UserControlFileEditor.Filter">
      <summary>获取文件名筛选器字符串，它用于确定出现在对话框文件列表中的项。</summary>
      <returns>一个字符串（如“*.txt”），筛选对话框中的可用文件列表。</returns>
    </member>
    <member name="T:System.Web.UI.Design.ViewEvent">
      <summary>表示设计时在控件的视图上发生的事件的类型。 此类不能被继承。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.Click">
      <summary>指示在设计器区域上单击引发了查看事件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.Paint">
      <summary>指示在设计图面上绘制控件引发了查看事件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.TemplateModeChanged">
      <summary>指示更改控件设计器的模板模式引发了查看事件。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ViewEventArgs">
      <summary>为 <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ViewEventArgs.#ctor(System.Web.UI.Design.ViewEvent,System.Web.UI.Design.DesignerRegion,System.EventArgs)">
      <summary>初始化设计图面上的查看事件的类型的 <see cref="T:System.Web.UI.Design.ViewEventArgs" /> 类的新实例。</summary>
      <param name="eventType">引发事件的操作类型；用于初始化 <see cref="P:System.Web.UI.Design.ViewEventArgs.EventType" />。</param>
      <param name="region">应用操作的设计器区域；用于初始化 <see cref="P:System.Web.UI.Design.ViewEventArgs.Region" />。</param>
      <param name="eventArgs">
        <paramref name="eventType" /> 的关联事件参数；用于初始化 <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.EventArgs">
      <summary>获取与引发事件的操作相关联的事件参数。</summary>
      <returns>
        <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" />，包含特定于事件类型的其他事件数据。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.EventType">
      <summary>获取引发该事件的操作的类型。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.ViewEvent" />，指定引发事件的操作类型。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.Region">
      <summary>获取应用事件的设计器区域。</summary>
      <returns>应用操作的 <see cref="T:System.Web.UI.Design.DesignerRegion" />。</returns>
    </member>
    <member name="T:System.Web.UI.Design.ViewEventHandler">
      <summary>表示将处理 <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> 事件的方法，该事件由实现 <see cref="T:System.Web.UI.Design.IControlDesignerView" /> 接口的可视化设计工具（例如 Visual Studio 2005）引发。 此类不能被继承。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Web.UI.Design.ViewEventArgs" /> 对象。</param>
    </member>
    <member name="T:System.Web.UI.Design.ViewFlags">
      <summary>指示设计器的 <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> 方法启用了哪些功能。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.CustomPaint">
      <summary>为设计时显示自定义控件启用绘制事件。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.DesignTimeHtmlRequiresLoadComplete">
      <summary>推迟所有事件直到控件加载完成为止。</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.TemplateEditing">
      <summary>启用设计时模板编辑。</summary>
    </member>
    <member name="T:System.Web.UI.Design.ViewRendering">
      <summary>包含内容和区域的设计时标记。</summary>
    </member>
    <member name="M:System.Web.UI.Design.ViewRendering.#ctor(System.String,System.Web.UI.Design.DesignerRegionCollection)">
      <summary>使用指定的内容和区域初始化 <see cref="T:System.Web.UI.Design.ViewRendering" /> 类的一个新实例。</summary>
      <param name="content">HTML 标记。</param>
      <param name="regions">包含区域的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.ViewRendering.#ctor(System.String,System.Web.UI.Design.DesignerRegionCollection,System.Boolean)">
      <summary>使用指定的内容、区域和可见性模式初始化 <see cref="T:System.Web.UI.Design.ViewRendering" /> 类的一个新实例。</summary>
      <param name="content">HTML 标记。</param>
      <param name="regions">区域的集合</param>
      <param name="visible">指示是否呈现控件的值。</param>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Content">
      <summary>获取设计时 HTML 标记。</summary>
      <returns>要在设计时显示的 HTML 标记。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Regions">
      <summary>在设计时获取 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象集合。</summary>
      <returns>区域的集合。</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Visible">
      <summary>获取指示该控件是否可见的值。</summary>
      <returns>如果呈现该控件，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControlToolboxItem">
      <summary>为 Web 服务器控件 <see cref="T:System.Drawing.Design.ToolboxItem" /> 提供基类。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用提供的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象和 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 创建 <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> 类的新实例。</summary>
      <param name="info">包含通过反序列化实例化 Web 控件时所需信息的 SerializationInfo 对象。</param>
      <param name="context">StreamingContext 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor(System.Type)">
      <summary>使用提供的类型创建 <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> 类的新实例。</summary>
      <param name="type">此工具箱项的工具的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>创建此 <see cref="T:System.Drawing.Design.ToolboxItem" /> 所包含的每个类型的对象，并将这些对象添加到指定的设计器。</summary>
      <returns>创建的 <see cref="T:System.ComponentModel.IComponent" /> 对象数组。</returns>
      <param name="host">当前设计文档的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <exception cref="T:System.Exception">
        <see cref="M:System.Web.UI.Design.WebControlToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)" /> 方法仅在 Windows 窗体中可用。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>从指定的序列化信息对象中加载工具箱项的状态。</summary>
      <param name="info">描述 <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> 的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">指示序列化流特征的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolAttributeValue(System.ComponentModel.Design.IDesignerHost,System.Type)">
      <summary>获取工具箱项的指定类型特性的值。</summary>
      <returns>指定类型特性的值。</returns>
      <param name="host">当前设计文档的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <param name="attributeType">要检索其值的特性类型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="attributeType" /> 参数不是 <see cref="T:System.Web.UI.PersistChildrenAttribute" />。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolHtml(System.ComponentModel.Design.IDesignerHost)">
      <summary>获取工具所创建的 Web 控件的 HTML。</summary>
      <returns>工具所创建的 Web 控件的 HTML。</returns>
      <param name="host">当前设计文档的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolType(System.ComponentModel.Design.IDesignerHost)">
      <summary>获取此工具箱项的类型。</summary>
      <returns>此工具箱项的 <see cref="T:System.Type" />。</returns>
      <param name="host">当前设计文档的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Initialize(System.Type)">
      <summary>初始化此工具箱项。</summary>
      <param name="type">Web 服务器控件工具箱项的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>将此工具箱项的状态保存到指定的序列化信息对象中。</summary>
      <param name="info">用于保存 <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> 的状态的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">指示序列化流特征的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsDesignerActionService">
      <summary>建立管理组件的 <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> 对象集合的设计时服务。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsDesignerActionService.#ctor(System.IServiceProvider)">
      <summary>使用提供的对设计宿主的引用创建 <see cref="T:System.Web.UI.Design.WebFormsDesignerActionService" /> 类的新实例。</summary>
      <param name="serviceProvider">对设计宿主的引用。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsDesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>获取与组件相关联的智能标记项列表。</summary>
      <param name="component">对与设计器相关联的控件的引用。</param>
      <param name="actionLists">要添加相关联的智能标记的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsReferenceManager">
      <summary>提供一个基类，用于访问当前 Web 项目文档中的类型、指令和控件。 必须继承此类。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetRegisterDirectives">
      <summary>获取当前项目文档的注册指令。</summary>
      <returns>字符串集合，表示当前文档中所定义的注册指令。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetTagPrefix(System.Type)">
      <summary>获取指定对象类型的标记前缀。</summary>
      <returns>如果找到，则为指定对象类型的标记前缀；否则为 null。</returns>
      <param name="objectType">对象的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetType(System.String,System.String)">
      <summary>获取具有指定标记前缀和标记名称的对象类型。</summary>
      <returns>如果找到，则为具有指定标记前缀和名称的对象的 <see cref="T:System.Type" />；否则为 null。</returns>
      <param name="tagPrefix">要检索的类型的标记前缀。</param>
      <param name="tagName">要检索的类型的标记名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath(System.String,System.String)">
      <summary>获取具有指定标记前缀和标记名称的用户控件的相对 URL 路径。</summary>
      <returns>如果找到，则为表示指定用户控件的相对 URL 路径的字符串；否则为 null。</returns>
      <param name="tagPrefix">要检索的用户控件的标记前缀。</param>
      <param name="tagName">要检索的用户控件的标记名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.RegisterTagPrefix(System.Type)">
      <summary>向指定类型添加标记前缀。</summary>
      <returns>标记前缀字符串。</returns>
      <param name="objectType">当前文档中要添加标记前缀的类型。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsRootDesigner">
      <summary>为 Web 窗体页的设计时功能提供基类，并允许在设计时对 Web 窗体页中包含的组件和控件进行访问和操作。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument(System.Web.UI.Design.ClientScriptItem)">
      <summary>在派生类中重写时，向当前 Web 窗体页中添加一个客户端脚本元素。</summary>
      <param name="scriptItem">要添加到 Web 窗体页中的 <see cref="T:System.Web.UI.Design.ClientScriptItem" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.AddControlToDocument(System.Web.UI.Control,System.Web.UI.Control,System.Web.UI.Design.ControlLocation)">
      <summary>在派生类中重写时，向 Web 窗体页中添加一个 Web 服务器控件。</summary>
      <returns>添加的控件的 ID。</returns>
      <param name="newControl">要添加到 Web 窗体页中的控件。</param>
      <param name="referenceControl">添加 <paramref name="newControl" /> 时所参照的控件。</param>
      <param name="location">一个 <see cref="T:System.Web.UI.Design.ControlLocation" /> 值，指示 <paramref name="newControl" /> 相对于 <paramref name="referenceControl" /> 的位置。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.Component">
      <summary>获取或设置此设计器正在设计的组件。</summary>
      <returns>由该设计器管理的组件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.CreateDesignerActionService(System.IServiceProvider)">
      <summary>返回一个设计时 <see cref="T:System.ComponentModel.Design.DesignerActionService" /> 对象。</summary>
      <returns>设计时设计师操作服务对象。</returns>
      <param name="serviceProvider">作为 <see cref="T:System.IServiceProvider" /> 强制转换的设计宿主，如 Visual Studio 2005。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.CreateUrlResolutionService">
      <summary>返回可解析相对 URL 的 <see cref="T:System.Web.UI.IUrlResolutionService" />。</summary>
      <returns>一个可解析相对 URL 的对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.CurrentCulture">
      <summary>获取当前线程的区域性信息。</summary>
      <returns>当前线程的区域性信息。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> 使用的非托管资源，还可以选择释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.DocumentUrl">
      <summary>在派生类中重写时，获取 Web 窗体页所在的 URL。</summary>
      <returns>Web 窗体页所在的 URL；如果 Web 窗体页没有关联的 URL，则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Finalize">
      <summary>在当前 <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> 对象的资源被垃圾回收器回收之前释放这些资源。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GenerateEmptyDesignTimeHtml(System.Web.UI.Control)">
      <summary>在设计时为控件生成空的 HTML 标记。</summary>
      <returns>用于空控件的 HTML 标记。</returns>
      <param name="control">为其生成 HTML 标记的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GenerateErrorDesignTimeHtml(System.Web.UI.Control,System.Exception,System.String)">
      <summary>生成 HTML 标记，用于在设计时通过使用指定的控件、异常和消息来显示错误消息。</summary>
      <returns>用于控件和异常信息的 HTML 标记。</returns>
      <param name="control">引发异常的控件。 - 或 - null.</param>
      <param name="e">异常。 - 或 - null.</param>
      <param name="errorMessage">要添加到异常消息中的消息。 - 或 - 空字符串 ("")。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument">
      <summary>在派生类中重写时，返回一个 <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" /> 对象，其中包含该页上的所有客户端脚本项。</summary>
      <returns>一个包含页面上所有客户端脚本项的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)">
      <summary>在派生类中重写时，返回指定控件的当前设计时视图和 HTML 标记。</summary>
      <param name="control">要为其提供视图和标记的控件。</param>
      <param name="view">当 <see cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)" /> 方法返回时，<paramref name="view" /> 包含一个 IControlDesignerView 对象，该对象在设计时提供对控件的可视表示形式和内容的访问。 <paramref name="view" /> 未经初始化即被传递。</param>
      <param name="tag">当 <see cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)" /> 方法返回时，<paramref name="tag" /> 包含一个 IControlDesignerTag 对象，该对象提供对控件的控件设计器的 HTML 元素的访问。 <paramref name="tag" /> 未经初始化即被传递。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetService(System.Type)">
      <summary>返回所请求的服务。</summary>
      <returns>请求的服务；如果无法解析服务，则为 null。</returns>
      <param name="serviceType">要检索的服务类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>返回由提供的 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 对象所确定的视图对象。</summary>
      <returns>包含组件的当前视图的对象。</returns>
      <param name="viewTechnology">从 <see cref="P:System.Web.UI.Design.WebFormsRootDesigner.SupportedTechnologies" /> 属性获取的 <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>使用指定的组件初始化 <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> 对象。</summary>
      <param name="component">此设计器正在设计的组件。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.IsDesignerViewLocked">
      <summary>在派生类中重写时，获取一个指示设计器视图是否锁定的值。</summary>
      <returns>如果设计器视图被锁定，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.IsLoading">
      <summary>在派生类中重写时，获取一个指示是否仍在加载 Web 窗体页的值。</summary>
      <returns>如果 Web 窗体页仍在加载，则为 true；否则为 false。</returns>
    </member>
    <member name="E:System.Web.UI.Design.WebFormsRootDesigner.LoadComplete">
      <summary>当设计器完成 Web 窗体页的加载时发生。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.OnLoadComplete(System.EventArgs)">
      <summary>当 Web 窗体页完全加载后，引发 <see cref="E:System.Web.UI.Design.WebFormsRootDesigner.LoadComplete" /> 事件。</summary>
      <param name="e">一个 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>允许设计器在通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象公开的特性集中更改或移除项。</summary>
      <param name="attributes">组件的类的特性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>允许设计器在通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象公开的事件集中更改或移除项。</summary>
      <param name="events">组件的类的事件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>允许设计器在通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象公开的属性集中更改或移除项。</summary>
      <param name="properties">组件的类的特性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>允许设计器在通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象公开的特性集中添加项。</summary>
      <param name="attributes">组件的类的特性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>允许设计器在通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象公开的事件集中添加项。</summary>
      <param name="events">组件的类的事件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>允许设计器在通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象公开的属性集中添加项。</summary>
      <param name="properties">组件的类的特性。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager">
      <summary>在派生类中重写时，获取一个 <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> 对象，其中包含有关当前 Web 窗体页的信息。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" />，其中包含有关当前 Web 窗体页的信息。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.RemoveClientScriptFromDocument(System.String)">
      <summary>在设计时将指定客户端脚本从文档移除。</summary>
      <param name="clientScriptId">以前注册的客户端脚本的标识符。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.RemoveControlFromDocument(System.Web.UI.Control)">
      <summary>在派生类中重写时，从 Web 窗体页中移除指定的控件。</summary>
      <param name="control">要从 Web 窗体页中移除的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.ResolveUrl(System.String)">
      <summary>将相对的 URL 转换为完全限定的 URL。</summary>
      <returns>由 <paramref name="relativeUrl" /> 解析所得的完全限定 URL。</returns>
      <param name="relativeUrl">站点中资源的相对 URL。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relativeUrl" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.SetControlID(System.Web.UI.Control,System.String)">
      <summary>用指定的字符串设置指定控件的 ID 属性。</summary>
      <param name="control">要对其设置 ID 的控件。</param>
      <param name="id">要设置为控件 ID 的字符串。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.SupportedTechnologies">
      <summary>获取设计器组件可为其显示提供支持的技术集。</summary>
      <returns>受支持的 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 值的数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesigner#DoDefaultAction">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesigner#Verbs">
      <summary>获取或设置设计器支持的设计时谓词。 有关此成员的说明，请参见 <see cref="P:System.ComponentModel.Design.IDesigner.Verbs" />。</summary>
      <returns>设计器支持的设计时谓词。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />。</summary>
      <param name="attributes">组件的类的特性对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />。</summary>
      <param name="events">事件描述符对象，表示组件的类的各种事件。 事件字典中的关键字是事件名。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />。</summary>
      <param name="properties">属性描述符对象，表示组件的类的各种属性。 属性字典中的关键字是属性名。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />。</summary>
      <param name="attributes">组件的类的特性对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />。</summary>
      <param name="events">事件描述符对象，表示组件的类的各种事件。 事件字典中的关键字是事件名。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />。</summary>
      <param name="properties">属性描述符对象，表示组件的类的各种属性。 属性字典中的关键字是属性名。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>获取指定视图技术的视图对象。 有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)" />。</summary>
      <returns>指定视图技术的视图对象。</returns>
      <param name="viewTechnology">视图技术。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>获取设计器组件可为其显示提供支持的技术集。 有关此成员的说明，请参见 <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />。</summary>
      <returns>设计器组件对于自身显示可支持的技术的数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#IDisposable#Dispose">
      <summary>有关此成员的说明，请参见 <see cref="M:System.IDisposable.Dispose" />。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.Verbs">
      <summary>获取设计器支持的设计时谓词。</summary>
      <returns>设计器所支持的 <see cref="T:System.ComponentModel.Design.DesignerVerb" /> 对象的数组；如果组件没有谓词，则为 null。</returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlDataFileEditor">
      <summary>提供用于选择 XML 数据文件的设计时用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlDataFileEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.XmlDataFileEditor" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.XmlDataFileEditor.Caption">
      <summary>获取要在选择对话框中显示的标题。</summary>
      <returns>要在选择对话框中显示的标题文本。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlDataFileEditor.Filter">
      <summary>获取编辑器的 URL 筛选选项，用于对 URL 选择对话框中出现的项进行筛选。</summary>
      <returns>一个字符串，表示对话框的一个或多个 URL 筛选选项。</returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlDocumentSchema">
      <summary>表示 <see cref="T:System.Xml.XmlDocument" /> 的结构或架构。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlDocumentSchema.#ctor(System.Xml.XmlDocument,System.String)">
      <summary>使用指定的 <see cref="T:System.Xml.XmlDocument" /> 和一个 XPath 字符串来创建 <see cref="T:System.Web.UI.Design.XmlDocumentSchema" /> 类的实例。</summary>
      <param name="xmlDocument">一个 <see cref="T:System.Xml.XmlDocument" /> 对象的实例。</param>
      <param name="xPath">一个 XPath 字符串，它标识文档根目录的子节点。</param>
    </member>
    <member name="M:System.Web.UI.Design.XmlDocumentSchema.GetViews">
      <summary>获取一个数组，它包含从构造函数中的 <paramref name="xPath" /> 参数所标识的节点开始的每个子节点的有关信息，或者从文档根目录开始的每个子节点的有关信息（如果 <paramref name="xPath" /> 参数为空）。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象的数组。</returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlFileEditor">
      <summary>为使用标准 <see cref="T:System.Windows.Forms.OpenFileDialog" /> 框选择 XML 文件而提供用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.XmlFileEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的服务提供程序和上下文编辑指定对象的值。</summary>
      <returns>新的对象值。 如果未更改对象的值，则此方法应返回所传递的同一对象。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">可通过其获取编辑服务的服务提供程序对象。</param>
      <param name="value">正在编辑的值的实例。</param>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>使用指定的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象获取与此编辑器关联的编辑样式。</summary>
      <returns>指示所提供的编辑样式的 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值。 如果指定的上下文不支持此方法，则返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> 标识符。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.XmlUrlEditor">
      <summary>为选择指示 XML 文件位置的 URL 提供用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlUrlEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.XmlUrlEditor" /> 类的实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Caption">
      <summary>获取要在选择对话窗口中显示的标题。</summary>
      <returns>要在选择对话窗口中显示的标题。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Filter">
      <summary>获取编辑器的文件名筛选器字符串。 这用来确定在对话框的文件列表中显示的项。</summary>
      <returns>一个字符串，包含对话框中可用的文件筛选选项的信息。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Options">
      <summary>获取 URL 生成器要使用的选项。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" />，它指示要使用的 URL 生成器选项。</returns>
    </member>
    <member name="T:System.Web.UI.Design.XsdSchemaFileEditor">
      <summary>提供用于选择 XML 架构定义文件的设计时用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.XsdSchemaFileEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.XsdSchemaFileEditor" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.XsdSchemaFileEditor.Caption">
      <summary>获取要在选择对话框中显示的标题。</summary>
      <returns>要在选择对话框中显示的标题文本。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XsdSchemaFileEditor.Filter">
      <summary>获取编辑器的 URL 筛选选项，用于对 URL 选择对话框中出现的项进行筛选。</summary>
      <returns>一个字符串，表示对话框的一个或多个 URL 筛选选项。</returns>
    </member>
    <member name="T:System.Web.UI.Design.XslTransformFileEditor">
      <summary>提供用于选择 XML 转换文件的设计时用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.XslTransformFileEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.XslTransformFileEditor" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.XslTransformFileEditor.Caption">
      <summary>获取要在选择对话框中显示的标题。</summary>
      <returns>要在选择对话框中显示的标题文本。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslTransformFileEditor.Filter">
      <summary>获取编辑器的 URL 筛选选项，用于对 URL 选择对话框中出现的项进行筛选。</summary>
      <returns>一个字符串，表示对话框的一个或多个 URL 筛选选项。</returns>
    </member>
    <member name="T:System.Web.UI.Design.XslUrlEditor">
      <summary>为选择指示 XSL 文件位置的 URL 提供用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.XslUrlEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.XslUrlEditor" /> 类的实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Caption">
      <summary>获取要在选择对话窗口中显示的标题。</summary>
      <returns>要在选择对话窗口中显示的标题。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Filter">
      <summary>获取编辑器的文件名筛选器字符串。 这用来确定在对话框的文件列表中显示的项。</summary>
      <returns>一个字符串，包含对话框中可用的文件筛选选项的信息。</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Options">
      <summary>获取 URL 生成器要使用的选项。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.UrlBuilderOptions" />，它指示要使用的 URL 生成器选项。</returns>
    </member>
    <member name="T:System.Web.UI.Design.Directives.DirectiveAttribute">
      <summary>指定指令的一个自定义属性。</summary>
    </member>
    <member name="M:System.Web.UI.Design.Directives.DirectiveAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.Directives.DirectiveAttribute" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.AllowedOnMobilePages">
      <summary>获取或设置指定移动页面上是否允许属性的指令属性。</summary>
      <returns>如果移动页面允许特性，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.BuilderType">
      <summary>获取或设置与特性相关的类型。</summary>
      <returns>与属性关联的类型。</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.Culture">
      <summary>获取或设置区域性数值是否与特征关联。</summary>
      <returns>如果同属性相关的区域性值，则为 true；否则，为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.RenameType">
      <summary>获取或设置表示特性的已重命名类型的值。</summary>
      <returns>一个值，该值表示特性的重命名类型。</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.ServerLanguageExtensions">
      <summary>获取或设置指示服务器语言扩展是否可用的值。</summary>
      <returns>如果服务器语言扩展可用，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.Directives.DirectiveAttribute.ServerLanguageNames">
      <summary>获取或设置指示服务器语言名称是否可用的值。</summary>
      <returns>如果服务器语言名称可用，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Web.UI.Design.Directives.DirectiveRegistry">
      <summary>提供设计时创建指令 IntelliSense 的支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.Directives.DirectiveRegistry.GetDirectives(System.Version,System.String)">
      <summary>返回基于 <paramref name="frameworkVersion" /> 参数和 <paramref name="extension" /> 参数的指令集合。</summary>
      <returns>一个只读集合。</returns>
      <param name="frameworkVersion">.NET Framework 版本。</param>
      <param name="extension">文件扩展名。</param>
    </member>
    <member name="T:System.Web.UI.Design.Directives.SchemaElementNameAttribute">
      <summary>指定指令特性的自定义名称。</summary>
    </member>
    <member name="M:System.Web.UI.Design.Directives.SchemaElementNameAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.Directives.SchemaElementNameAttribute" /> 类的新实例。</summary>
      <param name="value">名称值。</param>
    </member>
    <member name="P:System.Web.UI.Design.Directives.SchemaElementNameAttribute.Value">
      <summary>获取命令特性的名称值。</summary>
      <returns>指令特性的名称值。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.AccessDataSourceDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.DataFile">
      <summary>实现设计器属性，以便隐藏关联控件的 <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> 属性。</summary>
      <returns>一个 <see cref="T:System.String" />，包含与 <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> 关联的数据文件的名称和路径。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.GetConnectionString">
      <summary>为与此设计器关联的控件获取在设计时有效的连接字符串。</summary>
      <returns>对于关联的 <see cref="T:System.Web.UI.WebControls.AccessDataSource" />，<see cref="T:System.String" /> 包含其设计时连接。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>由设计器用来在“属性”网格中添加或移除属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.AdRotatorDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.AdRotator" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AdRotatorDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.AdRotatorDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AdRotatorDesigner.GetDesignTimeHtml">
      <summary>生成用于在设计图面上呈现该控件的标记。</summary>
      <returns>在设计图面上表示该控件的标记。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner">
      <summary>在可视化设计器中提供从 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 类派生的控件的设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.ConnectToDataSource">
      <summary>在派生类中重写后，一般会从上一个数据源卸载事件，然后将新事件附加到新数据源。</summary>
      <returns>如果执行了与新数据源的连接（通常是这种情况），则为 true；如果新旧数据源相同，则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.CreateDataSource">
      <summary>在派生类中重写后，为关联 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 对象创建新的数据源。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>在派生类中重写后，执行必要的操作以设置从 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 类派生的关联控件。</summary>
      <param name="dataBoundControl">与该设计器关联的 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource">
      <summary>获取或设置关联控件的 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> 属性值。</summary>
      <returns>由 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 派生的关联控件使用的数据绑定表达式。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSourceID">
      <summary>获取或设置基础 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 对象的 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> 属性值。</summary>
      <returns>与基础 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 关联的 <see cref="T:System.Web.UI.DataSourceControl" /> 的 ID。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DisconnectFromDataSource">
      <summary>在派生类中重写后，从当前数据源卸载事件。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" /> 对象占用的非托管资源，还可以选择释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetDesignTimeHtml">
      <summary>生成用于在设计时呈现控件的标记。</summary>
      <returns>在设计时呈现控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetEmptyDesignTimeHtml">
      <summary>如果控件为空，或者无法检索数据源，则提供在设计时用来呈现控件的标记。</summary>
      <returns>在设计时用来呈现控件的带空数据源的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>提供发生错误后在设计时呈现控件的标记。</summary>
      <returns>发生错误时在设计时呈现控件的标记。</returns>
      <param name="e">引发的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">由 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 派生的实现 <see cref="T:System.ComponentModel.IComponent" /> 的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnDataSourceChanged(System.Boolean)">
      <summary>关联 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 对象的数据源发生更改时被调用。</summary>
      <param name="forceUpdateView">强制更新设计时标记时为 true；否则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnSchemaRefreshed">
      <summary>关联 <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> 对象的数据源加载新架构时被调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从“属性”网格的显示中移除属性或向其添加其他属性或者隐藏关联控件的属性。</summary>
      <param name="properties">该 <see cref="T:System.Collections.IDictionary" /> 包含要筛选的属性。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.ShowCreateDataSourceDialog(System.Web.UI.Design.ControlDesigner,System.Type,System.Boolean,System.String@)">
      <summary>在设计宿主中，（比如 Visual Studio 2005），会显示一个对话框来协助用户创建数据源。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.DialogResult" /> 对象。</returns>
      <param name="controlDesigner">对此设计器的引用。</param>
      <param name="dataSourceType">数据源的类型。</param>
      <param name="configure">设置为 true 则启用配置的编辑，或设置为 false 则禁用配置编辑。</param>
      <param name="dataSourceID">页上 <see cref="T:System.Web.UI.DataSourceControl" /> 控件的 ID。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataListComponentEditor">
      <summary>为 <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 类派生的 Web 服务器控件提供组件编辑器基类。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.BaseDataListComponentEditor" /> 类的新实例。</summary>
      <param name="initialPage">要显示的初始页面的页面控制类型数组中的索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Windows.Forms.IWin32Window)">
      <summary>使用指定的上下文说明符和父窗口编辑指定的组件。</summary>
      <returns>如果已成功编辑组件，则为 true；否则为 false。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="obj">实现 <see cref="T:System.ComponentModel.IComponent" /> 的 <see cref="T:System.Object" />，它代表要编辑的组件。</param>
      <param name="parent">表示父窗口的 <see cref="T:System.Windows.Forms.IWin32Window" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.GetInitialComponentEditorPageIndex">
      <summary>获取要在组件编辑器中显示的初始页面的索引。</summary>
      <returns>数组中初始页面的索引。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataListDesigner">
      <summary>为组件提供一个基类，该组件在设计器宿主中为 <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 类派生的 Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.BaseDataListDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.ActionLists">
      <summary>获取此设计器的设计器动作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataKeyField">
      <summary>获取或设置关联控件的数据键字段的值。</summary>
      <returns>关联的控件的 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" /> 值。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataMember">
      <summary>获取或设置关联控件的数据成员字段的值。</summary>
      <returns>关联的控件的 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" /> 值。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSource">
      <summary>获取或设置关联控件的数据源属性的值。</summary>
      <returns>关联的控件的 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> 值。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSourceDesigner">
      <summary>获取数据源的设计器（如果已根据数据绑定的需要作了选择）。</summary>
      <returns>关联控件数据源的设计器。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSourceID">
      <summary>获取或设置数据源 ID 属性的设计器版本，然后用来隐藏关联控件的相应属性。</summary>
      <returns>一个 <see cref="T:System.String" />，是关联控件的数据源 ID。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DesignerView">
      <summary>获取与关联控件绑定的数据源的默认视图。</summary>
      <returns>表示数据源默认视图的 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.Dispose(System.Boolean)">
      <summary>释放由设计器占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetDesignTimeDataSource(System.Collections.IEnumerable,System.Int32,System.Boolean@)">
      <summary>生成可在设计时作为数据源使用的对象。</summary>
      <returns>实现 <see cref="T:System.Collections.IEnumerable" /> 接口（用作设计时的数据源）的对象。</returns>
      <param name="selectedDataSource">实现 <see cref="T:System.Collections.IEnumerable" />（用作数据格式的模板）的对象。</param>
      <param name="minimumRows">数据源数据应包含的示例数据的最少行数。</param>
      <param name="dummyDataSource">如果返回的数据源包含虚拟数据，则为 true；如果返回的数据源包含实际数据源中的数据，则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetDesignTimeDataSource(System.Int32,System.Boolean@)">
      <summary>生成可在设计时作为数据源使用的对象。</summary>
      <returns>实现 <see cref="T:System.Collections.IEnumerable" /> 接口（用作设计时的数据源）的对象。</returns>
      <param name="minimumRows">数据源应包含的示例数据的最少行数。</param>
      <param name="dummyDataSource">如果返回的数据源包含虚拟数据，则为 true；如果返回的数据源包含实际数据源中的数据，则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetResolvedSelectedDataSource">
      <summary>从解析到特定数据成员的关联控件容器中获取数据源组件。</summary>
      <returns>实现 <see cref="T:System.Collections.IEnumerable" /> 接口（包含解析到 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" /> 参数的关联控件的设计时 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />）的对象；否则，如果找不到数据源，则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetSelectedDataSource">
      <summary>从关联控件容器中获取数据源组件。</summary>
      <returns>实现 <see cref="T:System.Collections.IEnumerable" /> 接口（包含关联控件的设计时 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" />）的对象；否则，如果未找到数据源，则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetTemplateContainerDataSource(System.String)">
      <summary>获取模板容器的数据源。</summary>
      <returns>实现 <see cref="T:System.Collections.IEnumerable" /> 接口（包含设计时 <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> 属性）的对象。</returns>
      <param name="templateName">一个 <see cref="T:System.String" />，指定要获取数据源的模板的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">
        <see cref="T:System.Web.UI.WebControls.BaseDataList" /> 派生的控件，将实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.InvokePropertyBuilder(System.Int32)">
      <summary>调用关联控件的组件编辑器。</summary>
      <param name="initialPage">用来初始化组件编辑器的页面的索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnAutoFormat(System.Object,System.EventArgs)">
      <summary>处理 AutoFormat 事件。</summary>
      <param name="sender">引发事件的 <see cref="T:System.Object" />。</param>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>在已将自动格式设置方案应用到关联控件时调用。</summary>
      <param name="appliedAutoFormat">定义样式的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>当关联的控件更改时调用。</summary>
      <param name="sender">作为事件源的 <see cref="T:System.Object" />。</param>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnDataSourceChanged">
      <summary>当关联控件的数据源发生更改时调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnPropertyBuilder(System.Object,System.EventArgs)">
      <summary>表示处理属性生成器事件的方法。</summary>
      <param name="sender">作为事件源的 <see cref="T:System.Object" />。</param>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnSchemaRefreshed">
      <summary>当关联控件的数据源架构更改时，将调用它。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnStylesChanged">
      <summary>可以重写以实现特定的功能，当关联控件的样式发生更改时必须出现此功能。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnTemplateEditingVerbsChanged">
      <summary>可以重写以实现特定的功能，当设计器的模板编辑谓词发生更改时必须出现此功能。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从“属性”网格的显示中移除属性或向其添加其他属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现已添加和隐藏属性的 <see cref="T:System.Collections.IDictionary" /> 接口的集合。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" />。</summary>
      <returns>如果可以刷新架构，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" />。</summary>
      <param name="preferSilent">true，则在刷新架构前禁用数据绑定事件；false，则启用数据绑定事件。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" />。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseValidatorDesigner">
      <summary>在可视化设计器中为从 <see cref="T:System.Web.UI.WebControls.BaseValidator" /> 类派生的 Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.BaseValidatorDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.CreateViewControl">
      <summary>返回要在设计图面上呈现的关联控件的副本。</summary>
      <returns>一个 Web 服务器控件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个字符串，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.BaseValidator" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>由设计器用来在属性网格中移除或添加属性，或者隐藏关联控件的属性。</summary>
      <param name="properties">一个集合，该集合实现已添加和隐藏属性的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BulletedListDesigner">
      <summary>用于在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.BulletedList" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BulletedListDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.BulletedListDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BulletedListDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>允许设计器筛选关联控件在设计时将要公开的事件集。</summary>
      <param name="events">包括 <see cref="T:System.ComponentModel.EventDescriptor" /> 对象（表示控件事件）的 <see cref="T:System.Collections.IDictionary" />。 <see cref="T:System.Collections.IDictionary" /> 中的键为事件名。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BulletedListDesigner.UsePreviewControl">
      <summary>获取一个值，指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ButtonDesigner">
      <summary>用于在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Button" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ButtonDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ButtonDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ButtonDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.Button" /> 的标记。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog">
      <summary>为 <see cref="T:System.Web.UI.WebControls.Calendar" /> Web 服务器控件提供一个“自动套用格式”对话框。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.#ctor(System.Web.UI.WebControls.Calendar)">
      <summary>为设计器宿主创建一个与 <see cref="T:System.Web.UI.WebControls.Calendar" /> 实例关联的新 AutoFormatPage 实例。</summary>
      <param name="calendar">显示 AutoFormatePage 的 <see cref="T:System.Web.UI.WebControls.Calendar" /> 实例。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.DoDelayLoadActions">
      <summary>执行任一被延迟到第一次空闲时间的初始化</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnActivated(System.Object,System.EventArgs)">
      <summary>当激活 <see cref="T:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog" /> 时发生。</summary>
      <param name="source">事件源。</param>
      <param name="e">提供有关该事件的信息的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnOKClicked(System.Object,System.EventArgs)">
      <summary>处理预定义方案选项中的更改</summary>
      <param name="source">事件源。</param>
      <param name="e">提供有关该事件的信息的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnSelChangedScheme(System.Object,System.EventArgs)">
      <summary>处理预定义方案选项中的更改</summary>
      <param name="source">事件源。</param>
      <param name="e">提供有关该事件的信息的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.SaveComponent">
      <summary>将所有更改保存到组件中</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CalendarDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.Calendar" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.CalendarDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CalendarDesigner.AutoFormats">
      <summary>获取可用于该控件的所有 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象，它包含可用于该控件的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>用指定的组件初始化设计器。</summary>
      <param name="component">用于此设计器的 <see cref="T:System.ComponentModel.IComponent" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.OnAutoFormat(System.Object,System.EventArgs)">
      <summary>在已将自动套用格式方案应用于控件时调用。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.ActionLists">
      <summary>获取此设计器的操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.AllowResize">
      <summary>指定 <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" /> 控件是否允许调整大小。</summary>
      <returns>如果控件允许调整大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.AutoFormats">
      <summary>获取将在“自动套用格式”对话框中显示的自动套用格式方案的集合。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> 的预定义方案。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>获取用于在设计时呈现关联控件的标记，并填充设计器区域的集合。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> 的标记。</returns>
      <param name="regions">一个 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />，其中已添加关联的控件的当前视图的定义。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>获取关联控件的当前模板的持久形式。</summary>
      <returns>
        <see cref="T:System.String" />，其中包含关联的 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> 的当前模板的持久形式。</returns>
      <param name="region">未由 <see cref="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" /> 的重写方法使用的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>获取呈现为占位符的标记，该占位符中包含尝试在设计时创建或呈现关联的控件时产生的错误的有关信息。</summary>
      <returns>包含指定异常的有关信息的占位符的标记。</returns>
      <param name="e">创建或呈现关联的控件时抛出的 <see cref="T:System.Exception" /> 异常。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.ChangePassword" />，它实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从“属性”网格的显示中移除属性或向其添加其他属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.RenderOuterTable">
      <summary>指定 <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" /> 控件是否使用外部表容器来应用内联 CSS 样式规则。</summary>
      <returns>如果该控件使用外部表容器来应用内联 CSS 样式规则，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>设置关联控件的模板的值。</summary>
      <param name="region">要设置其内容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <param name="content">
        <see cref="T:System.String" />，包含一个持久性控件或模板。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.TemplateGroups">
      <summary>获取与此设计器关联的控件的模板组成的模板组的集合。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />，其中为关联的 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> 的每个模板包含一个元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.UsePreviewControl">
      <summary>获取一个值，指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CheckBoxDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.CheckBox" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CheckBoxDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.CheckBoxDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CheckBoxDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的标记。</summary>
      <returns>设计时用于表示控件的标记。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CompositeControlDesigner">
      <summary>扩展实现 <see cref="T:System.Web.UI.WebControls.CompositeControl" /> 抽象类方法的控件的设计时行为。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.CompositeControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.CreateChildControls">
      <summary>创建该 <see cref="T:System.Web.UI.WebControls.CompositeControl" /> 控件的子控件。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.GetDesignTimeHtml">
      <summary>获取设计时用于表示控件的 HTML。</summary>
      <returns>设计时用于表示控件的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>用指定的 <see cref="T:System.ComponentModel.IComponent" /> 对象初始化设计器。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" />，它是与此设计器关联的控件。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ContentDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.Content" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ContentDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentDesigner.ActionLists">
      <summary>获取此设计器的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentDesigner.AllowResize">
      <summary>获取一个值，该值指示是否可以在可视设计器图面上调整控件的大小。</summary>
      <returns>如果控件的大小可以调整，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>从指定 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象获取用于在设计时表示控件的标记。</summary>
      <returns>设计时用于表示控件的标记。</returns>
      <param name="regions">与 <see cref="M:System.Web.UI.Design.WebControls.ContentDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> 生成的设计时标记关联的 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>获取指定 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象的内容。</summary>
      <returns>指定 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 内容的持久性字符串。</returns>
      <param name="region">要从其中获取内容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetPersistenceContent">
      <summary>获取控件的内部标记。</summary>
      <returns>控件的内部标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>当在派生类中重写后，允许设计器更改或移除它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象公开的属性集中的项。</summary>
      <param name="properties">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的类的属性。 属性字典中的关键字是属性名。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>当在派生类中被重写时，允许设计器将项添加到它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象公开的事件集中。</summary>
      <param name="events">
        <see cref="T:System.ComponentModel.EventDescriptor" /> 对象，它表示组件的类的事件。 事件字典中的关键字是事件名。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>设置指定 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象的内容。</summary>
      <param name="region">在其中设置内容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <param name="content">
        <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 内容的持久性字符串。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.AllowResize">
      <summary>获取一个值，该值指示控件的大小是否可以调整。</summary>
      <returns>如果控件的大小可以调整，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetDesignTimeHtml">
      <summary>获取设计时用于表示控件的 HTML。</summary>
      <returns>用于在设计时表示控件的 HTML 标记。</returns>
      <exception cref="T:System.InvalidOperationException">根组件不是 <see cref="T:System.Web.UI.MasterPage" /> 实例。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>使用 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象获取设计时用于表示控件的 HTML。</summary>
      <returns>设计时用于表示控件的 HTML。</returns>
      <param name="regions">
        <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象，其中包含用于生成设计时 HTML 的区域。</param>
      <exception cref="T:System.InvalidOperationException">根组件不是 <see cref="T:System.Web.UI.MasterPage" /> 实例。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>获取指定 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象的内容。</summary>
      <returns>指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象的内容。</returns>
      <param name="region">要从中提取内容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetPersistenceContent">
      <summary>获取控件的持久性内部 HTML。</summary>
      <returns>控件的持久性内部 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>设置指定 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象的内容。</summary>
      <param name="region">要设置的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 实例。</param>
      <param name="content">
        <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 的新内容。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CreateUserWizardDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.CreateUserWizardDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.ActionLists">
      <summary>获取此设计器的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.AddDesignerRegions(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>为与基础向导控件相关联的每个步骤创建一个 <see cref="T:System.Web.UI.Design.DesignerRegion" /> 对象，然后将该对象添加到指定的 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象。</summary>
      <param name="regions">向其中添加了与向导控件相关联的区域的 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.AutoFormats">
      <summary>获取与此设计器关联的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象。</summary>
      <returns>与此设计器关联的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.ConvertToCustomNavigationTemplate">
      <summary>将与基础向导控件关联的子控件转换为自定义导航模板。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>获取提供有关指定异常的信息的 HTML。 通常在设计时遇到错误后调用该方法。</summary>
      <returns>指定的异常的 HTML。</returns>
      <param name="e">发生的异常。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化设计器并加载指定的组件。</summary>
      <param name="component">正在设计的控件元素。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>通过设计器工具上的属性网格来公开与每个默认步骤相关联的属性。</summary>
      <param name="properties">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的基类的属性。 属性字典中的关键字是属性名。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是使用 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> 控件本身还是使用临时创建的副本生成设计时 HTML。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor">
      <summary>在设计宿主（如 Visual Studio 2005）中提供编辑器，以编辑 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web 服务器控件的 <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> 对象。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.#ctor(System.Type)">
      <summary>使用给定的 <see cref="T:System.Type" /> 初始化 <see cref="T:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor" /> 类的新实例。</summary>
      <param name="type">与集合编辑器关联的集合中的项的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.CanRemoveInstance(System.Object)">
      <summary>返回一个值，该值指示能否从集合中移除提供的对象。</summary>
      <returns>如果可以从集合中移除 <see cref="T:System.Web.UI.WebControls.WizardStep" />，则为 true；否则为 false。</returns>
      <param name="value">确定能否从集合中移除的 <see cref="T:System.Web.UI.WebControls.WizardStep" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.CreateCollectionForm">
      <summary>为编辑 <see cref="T:System.Web.UI.WebControls.CreateUserWizardStep" /> 对象集合的内容创建模式对话框。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.HelpTopic">
      <summary>获取 Help 关键字，它用于当用户在编辑器的对话框中单击“帮助”按钮或按 F1 键时显示帮助主题或主题列表。</summary>
      <returns>当从编辑器请求帮助时显示帮助主题或主题列表的 Help 关键字。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner">
      <summary>为从 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 派生的控件的设计时支持提供一个基类。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ActionLists">
      <summary>获取此设计器的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ConnectToDataSource">
      <summary>将事件与之前的数据源断开连接，并将其连接到当前数据源。</summary>
      <returns>如果数据绑定控件已连接到新数据源，则为 true；如果数据源未更改，则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.CreateDataSource">
      <summary>调用标准对话框以创建一个新的数据源控件，将新数据源控件的 ID 设置为数据绑定控件的 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> 属性。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>将 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 对象绑定到数据源。</summary>
      <param name="dataBoundControl">要绑定到数据源的 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 对象。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember">
      <summary>获取基础数据绑定控件的隐藏 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> 属性。</summary>
      <returns>基础数据绑定控件的隐藏 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataSourceDesigner">
      <summary>获取基础数据绑定控件的数据源的设计器。</summary>
      <returns>基础数据绑定控件的数据源的设计器。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DesignerView">
      <summary>获取与此设计器的数据源相关联的 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 对象。</summary>
      <returns>与此设计器的数据源相关联的 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DisconnectFromDataSource">
      <summary>将数据绑定控件与数据源事件断开连接。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" /> 对象使用的非托管资源，还可以选择释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.GetDesignTimeDataSource">
      <summary>从关联的 DataSourceDesigner 或 DataSource 属性中获取设计时数据源。</summary>
      <returns>实现引用设计时数据源的 <see cref="T:System.Collections.IEnumerable" /> 接口的对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.GetSampleDataSource">
      <summary>如果无法通过DataSourceDesigner 或 DataSource 属性创建示例数据，则获取虚拟示例数据，以便在设计图面上呈现数据绑定控件。</summary>
      <returns>实现 <see cref="T:System.Collections.IEnumerable" /> 接口的对象，该接口包含用于在设计图面上呈现数据绑定控件的虚拟示例数据。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>由设计器重写，以便用设计器实现的属性隐藏数据绑定控件的对应运行时属性。</summary>
      <param name="properties">一个 <see cref="T:System.Collections.IDictionary" /> 对象，它包含要筛选的属性。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.SampleRowCount">
      <summary>获取数据绑定控件显示在设计图面上的行数。</summary>
      <returns>数据绑定控件显示在设计图面上的行数。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" />。</summary>
      <returns>如果设计器可以刷新数据源，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" />。</summary>
      <param name="preferSilent">指示是否取消刷新架构时引发的所有事件。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" />。</summary>
      <returns>描述数据源的 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataSourceProvider#GetResolvedSelectedDataSource">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource" />。</summary>
      <returns>如果控件允许用户为数据源选择 IListSource 对象（如 <see cref="T:System.Data.DataSet" /> 对象），并提供 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> 属性来选择数据源内的特定列表（或 <see cref="T:System.Data.DataTable" /> 对象），则为所选数据源中的所选数据成员。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataSourceProvider#GetSelectedDataSource">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource" />。</summary>
      <returns>实现 <see cref="T:System.Collections.IEnumerable" /> 接口（包含关联控件的设计时 <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />）的对象；如果未找到数据源，则为 null。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.UseDataSourcePickerActionList">
      <summary>获取一个值，该值指示设计器是否应在其操作列表中包括“选择数据源”。</summary>
      <returns>true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataControlFieldDesigner">
      <summary>在可视化设计器中提供设计时支持，以便在数据绑定控件（例如 <see cref="T:System.Web.UI.WebControls.GridView" /> 或 <see cref="T:System.Web.UI.WebControls.DetailsView" />）中添加和编辑数据字段。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataControlFieldDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.CreateField">
      <summary>当在派生类中重写时，创建一个空的字段对象。</summary>
      <returns>一个空的字段对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.CreateField(System.Web.UI.Design.IDataSourceFieldSchema)">
      <summary>在派生类中重写时，使用指定的数据字段信息创建新的字段对象。</summary>
      <returns>一个新的字段对象。</returns>
      <param name="fieldSchema">其中包含数据字段结构的架构信息。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.CreateTemplateField(System.Web.UI.WebControls.DataControlField,System.Web.UI.WebControls.DataBoundControl)">
      <summary>当在派生类中重写时，为指定数据字段创建 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 字段。</summary>
      <returns>新的模板字段。</returns>
      <param name="dataControlField">数据字段。</param>
      <param name="dataBoundControl">包含数据字段的数据绑定控件。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataControlFieldDesigner.DefaultNodeText">
      <summary>当在派生类中重写时，获取为字段编辑器中的数据字段显示的默认文本。</summary>
      <returns>为字段编辑器中的数据字段显示的默认文本。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetNewDataSourceName(System.Type,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>获取当数据字段转换为 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 时创建的控件的唯一 ID。</summary>
      <returns>控件的唯一 ID。</returns>
      <param name="controlType">将创建的控件的类型。</param>
      <param name="mode">控件的数据输入模式。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetNodeText(System.Web.UI.WebControls.DataControlField)">
      <summary>当在派生类中重写时，获取为字段编辑器中数据字段显示的名称。</summary>
      <returns>为字段编辑器中的数据字段显示的名称。</returns>
      <param name="dataControlField">数据字段。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetService(System.Type)">
      <summary>获取指定类型的服务对象。</summary>
      <returns>指定类型的服务对象。</returns>
      <param name="serviceType">要获取的服务对象的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetTemplate(System.Web.UI.WebControls.DataBoundControl,System.String)">
      <summary>获取包含指定数据绑定控件的模板标记的 <see cref="T:System.Web.UI.ITemplate" /> 对象。</summary>
      <returns>一个包含指定数据绑定控件的模板标记的对象。</returns>
      <param name="control">数据绑定控件。</param>
      <param name="templateContent">模板标记。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetTemplateField(System.Web.UI.WebControls.DataControlField,System.Web.UI.WebControls.DataBoundControl)">
      <summary>获取指定数据字段的 <see cref="T:System.Web.UI.WebControls.TemplateField" /> 对象。</summary>
      <returns>新的模板字段。</returns>
      <param name="dataControlField">数据字段。</param>
      <param name="dataBoundControl">包含数据字段的数据绑定控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.IsEnabled(System.Web.UI.WebControls.DataBoundControl)">
      <summary>当在派生类中重写时，获取指示是否在字段编辑器中启用数据字段的值。</summary>
      <returns>一个值，该值指示数据字段在字段编辑器中是否处于启用状态。</returns>
      <param name="parent">包含数据字段的数据绑定控件。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataControlFieldDesigner.ServiceProvider">
      <summary>获取字段编辑器所使用的服务提供程序实现。</summary>
      <returns>服务提供程序实现通常由设计宿主提供，可用于获取其他设计时服务。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataControlFieldDesigner.UsesSchema">
      <summary>当在派生类中重写时，获取指示是否使用架构信息加载数据字段的值。</summary>
      <returns>如果使用架构信息加载数据字段，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor">
      <summary>为数据控件字段提供用于编辑的用户界面 (UI)。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 和 <see cref="T:System.IServiceProvider" /> 对象编辑指定的值。</summary>
      <returns>对象在进行编辑后的最终值。</returns>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，指示所编辑的对象的上下文。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />，它包含对关联设计器的引用。</param>
      <param name="value">要编辑的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>使用指定的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象获取与此编辑器关联的编辑样式。</summary>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，它表示此编辑器的编辑样式。 默认值为 Modal。</returns>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，指示所编辑的对象的上下文。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor">
      <summary>为 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 控件的列集合提供用于编辑的用户界面 (UI)。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的上下文说明符和服务提供程序编辑指定的值。</summary>
      <returns>对象在进行编辑后的最终值。</returns>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象，它指示所编辑的对象的上下文。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" /> 对象，它包含对关联设计器的引用。</param>
      <param name="value">要编辑的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>使用指定的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象获取与此编辑器关联的编辑样式。</summary>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，它表示此编辑器的编辑样式。 默认值为 Modal。</returns>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象，它指示所编辑的对象的上下文。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridComponentEditor">
      <summary>为 <see cref="T:System.Web.UI.WebControls.DataGrid" /> Web 服务器控件提供组件编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataGridComponentEditor" /> 类的新实例，并将其初始页设置为 0。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataGridComponentEditor" /> 类的新实例，并将其初始页设置为指定索引。</summary>
      <param name="initialPage">初始页的索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.GetComponentEditorPages">
      <summary>获取与可使用此编辑器进行编辑的页相对应的 <see cref="T:System.Type" /> 对象的数组。</summary>
      <returns>与可使用此编辑器进行编辑的页相对应的 <see cref="T:System.Type" /> 对象的数组。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.DataGrid" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataGridDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataGridDesigner.AutoFormats">
      <summary>获取与此设计器关联的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象。</summary>
      <returns>与此设计器关联的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>使用指定的谓词创建模板编辑框架。</summary>
      <returns>一个模板编辑框。</returns>
      <param name="verb">要为其创建模板编辑框架的 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Web.UI.Design.WebControls.DataGridDesigner" /> 对象使用的非托管资源，还可以选择释放托管资源。</summary>
      <param name="disposing">为 true 则既释放托管资源又释放非托管资源；为 false 则仅释放非托管资源。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetCachedTemplateEditingVerbs">
      <summary>获取可用于设计器的缓存的模板编辑谓词。</summary>
      <returns>一个由 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 对象组成的数组，包含可供设计器使用的缓存的模板编辑谓词。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetDesignTimeHtml">
      <summary>获取设计时用于表示 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 控件的 HTML 标记。</summary>
      <returns>设计时用于表示 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetEmptyDesignTimeHtml">
      <summary>获取设计时用于表示空白的基于模板的控件的 HTML 标记。</summary>
      <returns>设计时用于表示空白的基于模板的控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>在呈现控件时遇到错误后获取设计时为指定的异常显示的 HTML 标记。</summary>
      <returns>设计时为指定的异常显示的 HTML 标记。</returns>
      <param name="e">发生的异常。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>获取模板容器的数据项属性。</summary>
      <returns>模板容器的数据项属性。</returns>
      <param name="templateName">模板的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>获取模板的内容。</summary>
      <returns>模板的内容。</returns>
      <param name="editingFrame">要从其中获取内容的 <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />。</param>
      <param name="templateName">模板的名称。</param>
      <param name="allowEditing">如果模板的内容可以编辑，则为 true；如果模板的内容为只读，则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplatePropertyParentType(System.String)">
      <summary>获取与指定模板的父级对应的 <see cref="T:System.Type" /> 对象。</summary>
      <returns>与指定模板的父级对应的 <see cref="T:System.Type" />。</returns>
      <param name="templateName">模板的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>用指定的 <see cref="T:System.Web.UI.WebControls.DataGrid" /> 控件初始化设计器。</summary>
      <param name="component">正在设计的控件元素。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.OnColumnsChanged">
      <summary>在模板的列更改时调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.OnTemplateEditingVerbsChanged">
      <summary>在模板编辑谓词更改时调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>为指定的模板和框架设置内容。</summary>
      <param name="editingFrame">要为其设置内容的 <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />。</param>
      <param name="templateName">模板的名称。</param>
      <param name="templateContent">模板的新内容。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataListComponentEditor">
      <summary>为 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件提供组件编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataListComponentEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataListComponentEditor" /> 类的新实例，并将其初始页设置为指定索引。</summary>
      <param name="initialPage">初始页的索引。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.GetComponentEditorPages">
      <summary>获取与可使用此编辑器进行编辑的页相对应的 <see cref="T:System.Type" /> 对象的数组。</summary>
      <returns>与可使用此编辑器进行编辑的页相对应的 <see cref="T:System.Type" /> 对象的数组。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataListDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.DataList" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.AllowResize">
      <summary>获取一个值，该值指示 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的大小是否可以调整。</summary>
      <returns>如果数据列表有模板，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.AutoFormats">
      <summary>获取与此设计器关联的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象。</summary>
      <returns>与此设计器关联的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>使用指定的谓词创建模板编辑框架。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> 对象。</returns>
      <param name="verb">要为其创建模板编辑框架的 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" /> 对象使用的非托管资源，并可选择释放托管资源。</summary>
      <param name="disposing">为 true 则既释放托管资源又释放非托管资源；为 false 则仅释放非托管资源。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetCachedTemplateEditingVerbs">
      <summary>获取可用于设计器的缓存的模板编辑谓词。</summary>
      <returns>一个由 <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> 对象组成的数组，包含可供设计器使用的缓存的模板编辑谓词。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetDesignTimeHtml">
      <summary>获取设计时用于表示 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的 HTML。</summary>
      <returns>设计时用于表示 <see cref="T:System.Web.UI.WebControls.DataList" /> 控件的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetEmptyDesignTimeHtml">
      <summary>获取设计时用于表示基于模板的空控件的 HTML。</summary>
      <returns>设计时用于表示基于模板的空控件的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>获取当呈现控件时遇到错误后在设计时为指定的异常显示的 HTML。</summary>
      <returns>设计时为指定的异常显示的 HTML。</returns>
      <param name="e">发生的异常。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>获取模板容器的 <see cref="P:System.Web.UI.WebControls.DataListItem.System#Web#UI#IDataItemContainer#DataItem" /> 属性。</summary>
      <returns>模板容器的 <see cref="P:System.Web.UI.WebControls.DataListItem.System#Web#UI#IDataItemContainer#DataItem" /> 属性。</returns>
      <param name="templateName">模板的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>获取模板的内容。</summary>
      <returns>模板的内容。</returns>
      <param name="editingFrame">要从其中获取内容的 <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> 实例。</param>
      <param name="templateName">模板的名称。</param>
      <param name="allowEditing">如果模板的内容可以编辑，则为 true；如果模板的内容为只读，则为 false。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>用指定的组件初始化设计器。</summary>
      <param name="component">正在设计的控件元素。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.OnSchemaRefreshed">
      <summary>在基础控件所绑定到的数据源加载新架构时调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.OnTemplateEditingVerbsChanged">
      <summary>在模板编辑谓词更改时调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>为指定的模板和框架设置内容。</summary>
      <param name="editingFrame">要为其设置内容的 <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> 实例。</param>
      <param name="templateName">模板的名称。</param>
      <param name="templateContent">模板的新内容。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.TemplatesExist">
      <summary>获取一个值，该值指示是否为关联控件定义了模板。</summary>
      <returns>如果为关联控件定义了模板，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataProviderNameConverter">
      <summary>为 .NET Framework (ADO.NET) 提供程序名称创建用户可选择的 ActiveX® 数据对象 (ADO) 的列表。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataProviderNameConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回 .NET Framework (ADO.NET) 提供程序名称的可用 ActiveX® 数据对象 (ADO) 的列表。</summary>
      <returns>
        <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />，它包含可用 ADO.NET 提供程序的名称。</returns>
      <param name="context">一个实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 的对象，该对象将有关上下文的信息提供给类型转换器，以便类型转换器可以执行转换。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示为 .NET Framework (ADO.NET) 提供程序名称返回的 ActiveX® 数据对象 (ADO) 是否为可能值的独占列表。</summary>
      <returns>始终为 false。</returns>
      <param name="context">一个实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 的对象，该对象将有关上下文的信息提供给类型转换器，以便类型转换器可以执行转换。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示此对象是否为 .NET Framework (ADO.NET) 提供程序名称返回可从列表中选取的一组标准 ActiveX® 数据对象 (ADO)。</summary>
      <returns>始终为 true。</returns>
      <param name="context">一个实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 的对象，该对象将有关上下文的信息提供给类型转换器，以便类型转换器可以执行转换。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataSourceIDConverter">
      <summary>创建一个可由用户选择的数据源名称列表。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DataSourceIDConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>获取一个值，该值指示此转换器是否可以将指定源类型的对象转换为转换器的本机类型。</summary>
      <returns>如果 <paramref name="sourceType" /> 是字符串，则为 true；否则为 false。</returns>
      <param name="context">一个实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 的对象，该对象将有关上下文的信息提供给类型转换器，以便类型转换器可以执行转换。</param>
      <param name="sourceType">正在为其请求转换的对象的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定对象转换为转换器的本机类型。</summary>
      <returns>
        <paramref name="value" /> 参数作为字符串返回。</returns>
      <param name="context">一个实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 的对象，该对象将有关上下文的信息提供给类型转换器，以便类型转换器可以执行转换。</param>
      <param name="culture">用于指定 <paramref name="value" /> 参数的区域性的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="value">要转换的对象。</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> 既不是字符串也不是 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回可用数据源名称的列表。</summary>
      <returns>包含一些控件名称的 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />，这些控件可实现 <see cref="T:System.Web.UI.IDataSource" /> 接口并可在给定上下文中使用。</returns>
      <param name="context">一个实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 的对象，该对象将有关上下文的信息提供给类型转换器，以便类型转换器可以执行转换。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示返回的数据源名称是否为可能值的排他性列表。</summary>
      <returns>始终为 false。</returns>
      <param name="context">一个实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 的对象，该对象将有关上下文的信息提供给类型转换器，以便类型转换器可以执行转换。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示此对象是否返回可从列表中选取的一组标准数据源名称。</summary>
      <returns>始终为 true。</returns>
      <param name="context">一个实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 的对象，该对象将有关上下文的信息提供给类型转换器，以便类型转换器可以执行转换。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>获取一个值，该值指示指定组件是否是有效数据源。</summary>
      <returns>如果 <paramref name="component" /> 是有效数据源，则为 true；否则，为 false。</returns>
      <param name="component">实现 <see cref="T:System.ComponentModel.IComponent" /> 接口的对象。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DetailsViewDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.DetailsViewDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.ActionLists">
      <summary>获取此设计器的设计器动作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.AutoFormats">
      <summary>获取自动格式设置方案的集合，以便在“自动套用格式”对话框中显示。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 的预定义方案。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>将关联控件绑定到设计时数据源。</summary>
      <param name="dataBoundControl">要绑定到设计时数据源的 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>获取用于在设计时呈现关联控件的标记，并填充设计器区域的集合。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 的标记。</returns>
      <param name="regions">一个 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />，它将向其中添加控件设计时视图的可选择和可单击区域的定义。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回关联控件设计时视图中可编辑区域的内容。</summary>
      <returns>
        <see cref="F:System.String.Empty" />.</returns>
      <param name="region">要为其获取内容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件，它实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>当单击关联控件设计时视图的区域时，会调用它。</summary>
      <param name="e">一个 <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" />，它定义控件的被单击区域。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.OnSchemaRefreshed">
      <summary>当关联控件的数据源架构更改时，将调用它。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从 <paramref name="Properties" /> 网格的显示中移除属性或向其添加属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.SampleRowCount">
      <summary>获取要显示的关联控件的示例行数。</summary>
      <returns>要显示的示例行的行数。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>指定关联控件设计时视图中可编辑区域的内容。</summary>
      <param name="region">要更新的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <param name="content">要写入 <paramref name="region" /> 的 <see cref="T:System.String" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.TemplateGroups">
      <summary>获取用于关联控件字段的模板组集合。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />，其中为 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 控件中的每个模板化字段包含一个元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本（而非与设计器关联的实际控件）来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor">
      <summary>为 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 对象中的嵌入邮件对象集合提供组件编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor" /> 类的新实例。</summary>
      <param name="type">要编辑的集合的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的服务提供程序和上下文编辑指定对象的值。</summary>
      <returns>新的 <paramref name="value" />；否则，如果对象的值未发生更改，则 <paramref name="value" /> 不会更改。</returns>
      <param name="context">用于获取其它上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">实现 <see cref="T:System.IServiceProvider" /> 的对象，通过前者可以获取编辑服务。</param>
      <param name="value">要编辑其值的对象。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.FormViewDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.FormView" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.FormViewDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.ActionLists">
      <summary>获取此设计器的设计器动作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.AutoFormats">
      <summary>获取自动格式设置方案的集合，以便在“自动套用格式”对话框中显示。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.FormView" /> 的预定义方案。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.FormView" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.GetEmptyDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件占位符的标记文本。</summary>
      <returns>一个 <see cref="T:System.String" />，包含在设计图面上呈现到占位符的标记文本。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.FormView" />，可实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.OnSchemaRefreshed">
      <summary>当关联控件的数据源架构更改时，将调用它。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>设计时在设计宿主的属性网格中添加或移除属性，或提供可能与关联控件上的属性相对应的新设计时属性。</summary>
      <param name="properties">组件的类的特性。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.RenderOuterTable">
      <summary>指定 <see cref="T:System.Web.UI.Design.WebControls.FormViewDesigner" /> 控件是否使用外部表容器来应用内联 CSS 样式规则。</summary>
      <returns>如果该控件使用外部表容器来应用内联 CSS 样式规则，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.SampleRowCount">
      <summary>获取要显示的关联控件的示例行数。</summary>
      <returns>示例行数。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.TemplateGroups">
      <summary>获取用于关联控件字段的模板组集合。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />，其中为 <see cref="T:System.Web.UI.WebControls.FormView" /> 中的每个模板化字段包含一个元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.UsePreviewControl">
      <summary>获取一个值，指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>始终返回 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.GridViewDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.GridViewDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.ActionLists">
      <summary>获取此设计器的设计器动作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.AutoFormats">
      <summary>获取预定义的格式设置方案的集合，以便在“自动套用格式”对话框中显示。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.GridView" /> 的预定义方案。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>将关联控件绑定到设计时数据源。</summary>
      <param name="dataBoundControl">要绑定到设计时数据源的 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.GridView" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>获取用于在设计时呈现关联控件的标记，并填充设计器区域的集合。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.GridView" /> 的标记。</returns>
      <param name="regions">一个 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />，将在其中添加控件设计时视图中定义的可选择和可单击区域。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回关联控件设计时视图中可编辑区域的内容。</summary>
      <returns>
        <see cref="F:System.String.Empty" />.</returns>
      <param name="region">要为其获取内容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.GridView" />，它实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>当单击关联控件设计时视图的区域时，会调用它。</summary>
      <param name="e">一个 <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" />，它定义控件的被单击区域。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.OnSchemaRefreshed">
      <summary>当关联控件的数据源架构更改时，将调用它。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从“属性”网格的显示中移除属性或向其添加其他属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.SampleRowCount">
      <summary>获取要显示的关联控件的示例行数。</summary>
      <returns>示例行数。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>指定关联控件设计时视图中可编辑区域的内容。</summary>
      <param name="region">要更新的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <param name="content">要写入 <paramref name="region" /> 的 <see cref="T:System.String" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.TemplateGroups">
      <summary>获取用于关联控件字段的模板组集合。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />，其中为 <see cref="T:System.Web.UI.WebControls.GridView" /> 中的每个模板化字段包含一个元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HiddenFieldDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.HiddenField" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.HiddenFieldDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个字符串，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.HiddenField" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.HiddenField" />，它实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner">
      <summary>在设计器宿主中为 <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.ActionLists">
      <summary>获取此设计器的设计器动作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.ConnectToDataSource">
      <summary>执行与当前数据源连接所必要的操作。</summary>
      <returns>如果执行了与新数据源的连接，则为 true；如果新旧数据源相同，则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.CreateDataSource">
      <summary>创建关联控件的新数据源。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>将关联控件绑定到设计时数据源。</summary>
      <param name="dataBoundControl">要绑定到设计时数据源的 <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> 控件。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DataSourceDesigner">
      <summary>用于访问数据源的设计器（如果已为数据绑定选择了设计器）。</summary>
      <returns>由 <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> 派生的关联控件数据源的设计器，它可以实现 <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DesignerView">
      <summary>获取与关联控件绑定的数据源的默认视图。</summary>
      <returns>表示数据源默认视图的 <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DisconnectFromDataSource">
      <summary>执行与当前数据源断开所必要的操作。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.GetDesignTimeDataSource">
      <summary>获取一个设计时使用的关联控件的数据源。</summary>
      <returns>实现 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 接口的对象，可用作 <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> 派生的控件的数据源。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.GetSampleDataSource">
      <summary>构造可在设计时用于关联控件的示例数据源。</summary>
      <returns>实现 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 接口的对象，可用作 <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> 派生的控件的数据源。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从“属性”网格的显示中移除属性或向其添加其他属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.UseDataSourcePickerActionList">
      <summary>获取一个值，该值指示控件是否应呈现其默认操作列表，该操作列表包含一个数据源 ID 下拉列表和相关任务。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter">
      <summary>创建一个可由用户选择的分层数据源名称列表。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>获取一个值，该值指示指定组件是否是有效数据源。</summary>
      <returns>如果 <paramref name="component" /> 是有效数据源，则为 true；否则，为 false。</returns>
      <param name="component">实现 <see cref="T:System.ComponentModel.IComponent" /> 的对象。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor">
      <summary>在 <see cref="T:System.Web.UI.WebControls.ImageMap" /> 或类似控件中提供 <see cref="T:System.Web.UI.WebControls.HotSpotCollection" /> 对象的组件编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> 类的新实例。</summary>
      <param name="type">要编辑的集合的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.CanSelectMultipleInstances">
      <summary>获取一个值，该值指示是否可以一次选择多个 <see cref="T:System.Web.UI.WebControls.HotSpot" /> 集合元素。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.CreateNewItemTypes">
      <summary>获取此集合编辑器能够创建的多个数据类型。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> 能够创建的数据类型的类型数组。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.HelpTopic">
      <summary>获取要为 <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> 对象显示的帮助主题。</summary>
      <returns>一个字符串，用来指定要显示的帮助主题。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HyperLinkDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.HyperLink" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.HyperLinkDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>包含用于在设计时呈现关联的超链接控件的标记的字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>当关联的控件更改时调用。</summary>
      <param name="sender">作为事件源的对象。</param>
      <param name="ce">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 对象。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LabelDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Label" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LabelDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LabelDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LabelDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>当关联的控件更改时调用。</summary>
      <param name="sender">作为事件源的对象。</param>
      <param name="ce">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LinkButtonDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.LinkButton" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LinkButtonDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LinkButtonDesigner" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControlDataBindingHandler">
      <summary>在可视化设计器中执行 <see cref="T:System.Web.UI.WebControls.ListControl" /> Web 服务器控件的数据绑定。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDataBindingHandler.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ListControlDataBindingHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>对指定的控件执行数据绑定。</summary>
      <param name="designerHost">包含该控件的文档的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
      <param name="control">要绑定的 <see cref="T:System.Web.UI.Control" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControlDesigner">
      <summary>用作设计器的基类，这些设计器在可视 Web 设计器中为 <see cref="T:System.Web.UI.WebControls.ListControl" /> 抽象类派生的控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ListControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.ActionLists">
      <summary>获取此设计器的设计器操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>将指定的控件绑定到设计时数据源。</summary>
      <param name="dataBoundControl">
        <see cref="T:System.Web.UI.WebControls.ListControl" /> 派生的关联控件，或该控件的副本。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField">
      <summary>获取或设置控件的数据文本字段。</summary>
      <returns>列表控件的 <see cref="P:System.Web.UI.WebControls.ListControl.DataTextField" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField">
      <summary>获取或设置控件的数据值字段。</summary>
      <returns>列表控件的 <see cref="P:System.Web.UI.WebControls.ListControl.DataValueField" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml">
      <summary>获取设计时用于表示控件的 HTML。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.ListControl" /> 派生的控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetResolvedSelectedDataSource">
      <summary>从解析到特定数据成员的关联控件容器中获取数据源组件。</summary>
      <returns>一个包含设计时 <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" /> 的 <see cref="T:System.Collections.IEnumerable" />，将被解析到关联控件的 <see cref="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource">
      <summary>从关联控件容器中获取数据源组件。</summary>
      <returns>一个对象，实现 <see cref="T:System.Collections.IEnumerable" /> 接口并包含关联控件设计时 <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">
        <see cref="T:System.Web.UI.WebControls.ListControl" /> 派生的控件实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged">
      <summary>当关联控件的数据源发生更改时调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged(System.Boolean)">
      <summary>当关联控件的数据源发生更改时调用。</summary>
      <param name="forceUpdateView">一个 <see cref="T:System.Boolean" />，指示是否无条件更新设计时标记。 忽略此参数。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从“属性”网格的显示中移除属性或向其添加属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现已添加或隐藏属性 <see cref="T:System.Collections.IDictionary" /> 的集合，在设计时为关联控件公开。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.UseDataSourcePickerActionList">
      <summary>获取一个值，该值指示关联控件是否应呈现其默认操作列表。</summary>
      <returns>始终返回 false。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor">
      <summary>为从 <see cref="T:System.Web.UI.WebControls.ListControl" /> 或相似控件派生的控件中的 <see cref="T:System.Web.UI.WebControls.ListItemCollection" /> 对象提供组件编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor" /> 类的新实例。</summary>
      <param name="type">要编辑的集合的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.CanSelectMultipleInstances">
      <summary>获取指示是否可以一次选择多个 <see cref="T:System.Web.UI.WebControls.ListItem" /> 元素的值。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.HelpTopic">
      <summary>获取要为 <see cref="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor" /> 对象显示的帮助主题。</summary>
      <returns>一个 <see cref="T:System.String" />，它指定要显示的帮助主题。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LiteralDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Literal" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LiteralDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LiteralDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LiteralDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>当关联的控件更改时调用。</summary>
      <param name="sender">作为事件源的对象。</param>
      <param name="ce">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 对象。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Login" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.ActionLists">
      <summary>获取此设计器的设计器操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.AllowResize">
      <summary>获取或设置一个值，该值指定 <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" /> 控件是否允许调整大小。</summary>
      <returns>如果控件允许调整大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.AutoFormats">
      <summary>获取预定义的格式设置方案的集合，以便在“自动套用格式”对话框中显示。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.Login" /> 的预定义方案。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>获取用于在设计时呈现关联控件的标记，并填充设计器区域的集合。</summary>
      <returns>一个字符串，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.Login" /> 的标记。</returns>
      <param name="regions">一个 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />，将在其中添加控件设计时视图中定义的可选择和可单击区域。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回用于在设计时呈现关联控件的当前模板的序列化副本。</summary>
      <returns>一个字符串，其中包含用于在设计时呈现关联 <see cref="T:System.Web.UI.WebControls.Login" /> 的模板的序列化副本。</returns>
      <param name="region">要为其获取内容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>提供发生错误后在设计时呈现关联控件的标记。</summary>
      <returns>一个字符串，包含发生错误后在设计时呈现关联 <see cref="T:System.Web.UI.WebControls.Login" /> 的标记。</returns>
      <param name="e">引发的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.Login" />，可实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从“属性”网格的显示中移除属性或向其添加其他属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.RenderOuterTable">
      <summary>获取或设置一个值，该值指定 <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" /> 控件是否使用外部表容器来应用内联 CSS 样式规则。</summary>
      <returns>如果该控件使用外部表容器来应用内联 CSS 样式规则，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>根据控件模板的序列化副本设置关联控件的一个区域。</summary>
      <param name="region">一个 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />，提供要更新的区域的名称。</param>
      <param name="content">一个字符串，其中包含关联控件的序列化模板。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.TemplateGroups">
      <summary>获取用于关联控件字段的模板组集合。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />，其中为 <see cref="T:System.Web.UI.WebControls.Login" /> 中的每个模板化字段包含一个元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginNameDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.LoginName" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginNameDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LoginNameDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginNameDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>提供发生错误后在设计时呈现关联控件的标记。</summary>
      <returns>一个字符串，包含发生错误后在设计时呈现关联 <see cref="T:System.Web.UI.WebControls.LoginName" /> 的标记。</returns>
      <param name="e">引发的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginNameDesigner.UsePreviewControl">
      <summary>获取一个值，指示设计器是否应使用临时副本，而不是与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginStatusDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.LoginStatus" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LoginStatusDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginStatusDesigner.ActionLists">
      <summary>获取此设计器的设计器动作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个字符串，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.LoginStatus" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.LoginStatus" />，可实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginStatusDesigner.UsePreviewControl">
      <summary>获取一个值，指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginViewDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.LoginView" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.LoginViewDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists">
      <summary>获取此设计器的设计器动作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个字符串，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.LoginView" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>获取用于在设计时呈现关联控件的标记，并填充设计器区域的集合。</summary>
      <returns>一个字符串，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.LoginView" /> 的标记。</returns>
      <param name="regions">一个 <see cref="T:System.Web.UI.WebControls.LoginView" />，其中将添加 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 的设计时视图中的可选择和可单击区域。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回用于在设计时呈现关联控件的当前模板的序列化副本。</summary>
      <returns>一个字符串，其中包含用于在设计时呈现关联 <see cref="T:System.Web.UI.WebControls.LoginView" /> 的模板的序列化副本。</returns>
      <param name="region">要为其获取内容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml">
      <summary>如果当前模板未定义，获取在设计时呈现关联控件的占位符的标记。</summary>
      <returns>一个字符串，包含在设计图面上呈现到占位符的标记文本。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>如果发生了错误，提供在设计时呈现关联控件的标记。</summary>
      <returns>一个字符串，包含发生错误后在设计时呈现关联 <see cref="T:System.Web.UI.WebControls.LoginView" /> 的标记。</returns>
      <param name="e">引发的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.LoginView" />，它实现一个 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="component" /> 不是 <see cref="T:System.Web.UI.WebControls.LoginView" />，也不属于 <see cref="T:System.Web.UI.WebControls.LoginView" /> 的派生类。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>与此设计器关联的控件发生更改时调用。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从“属性”网格的显示中移除属性或向其添加属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>根据控件模板的序列化副本设置关联控件的一个区域。</summary>
      <param name="region">一个 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />，提供要更新的区域的名称。</param>
      <param name="content">一个字符串，其中包含关联控件的序列化模板。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups">
      <summary>获取用于关联控件字段的模板组集合。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />，<see cref="T:System.Web.UI.WebControls.LoginView" /> 控件中每个模板都有一个元素包含在其中。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl">
      <summary>获取一个值，指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor">
      <summary>提供一个用于选择 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 对象中的电子邮件正文文件的编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.Caption">
      <summary>获取显示在 <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" /> 窗体上的标题。</summary>
      <returns>一个字符串，即出现在编辑器窗体上的标题。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.Filter">
      <summary>获取 <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" /> 对象要接受的文件类型的列表。</summary>
      <returns>一个字符串，为每种接受的文件类型指定一个用户友好的名称，并指定各种文件类型。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuBindingsEditor">
      <summary>为关联的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的 <see cref="P:System.Web.UI.WebControls.Menu.DataBindings" /> 集合提供组件编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.MenuBindingsEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑关联的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的数据绑定集合的值。</summary>
      <returns>新的 <paramref name="value" />；否则，如果对象的值未发生更改，则 <paramref name="value" /> 不会更改。</returns>
      <param name="context">实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 接口的对象，该接口用于获取上下文信息。</param>
      <param name="provider">实现 <see cref="T:System.IServiceProvider" /> 接口的对象，通过该接口可以获取编辑服务。</param>
      <param name="value">要编辑其值的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取与此编辑器关联的编辑样式。</summary>
      <returns>与此编辑器关联的编辑样式。</returns>
      <param name="context">实现 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 接口的对象，该接口指示所编辑的对象的上下文。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.MenuDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.ActionLists">
      <summary>获取此设计器的设计器动作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.AutoFormats">
      <summary>获取预定义的格式设置方案的集合，以便在“自动套用格式”对话框中显示。</summary>
      <returns>一个 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />，它包含 <see cref="T:System.Web.UI.WebControls.Menu" /> 的预定义方案。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示提供程序是否可以刷新架构。</summary>
      <returns>如果可以刷新架构，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>将关联控件绑定到设计时数据源。</summary>
      <param name="dataBoundControl">要绑定到设计时数据源的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时呈现关联控件的标记。</summary>
      <returns>一个字符串，其中包含用于在设计时呈现 <see cref="T:System.Web.UI.WebControls.Menu" /> 的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetEmptyDesignTimeHtml">
      <summary>如果没有以其他方式提供标记，则获取在设计时呈现关联控件的占位符的标记。</summary>
      <returns>一个字符串，包含在设计图面上呈现到占位符的标记文本。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>如果发生了错误，提供在设计时呈现关联控件的标记。</summary>
      <returns>一个字符串，包含发生错误后在设计时呈现关联 <see cref="T:System.Web.UI.WebControls.Menu" /> 的标记。</returns>
      <param name="e">引发的 <see cref="T:System.Exception" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetSampleDataSource">
      <summary>构造设计时使用的关联控件的示例数据源。</summary>
      <returns>实现 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 的对象，以作为关联 <see cref="T:System.Web.UI.WebControls.Menu" /> 的数据源。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.Menu" />，它实现 <see cref="T:System.ComponentModel.IComponent" /> 接口。</param>
      <exception cref="T:System.ArgumentException">组件 不是 <see cref="T:System.Web.UI.WebControls.Menu" />，也不属于 <see cref="T:System.Web.UI.WebControls.Menu" /> 的派生类。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.RefreshSchema(System.Boolean)">
      <summary>刷新关联的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的数据源视图的架构。</summary>
      <param name="preferSilent">如果为 true，则在处理过程中出现异常时将不显示错误信息；否则，将显示异常消息。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.Schema">
      <summary>获取描述关联的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的数据源视图的架构。</summary>
      <returns>描述数据源的结构的 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>获取一个值，该值指示提供程序是否能刷新架构。 有关此成员的说明，请参见 <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" /> 属性。</summary>
      <returns>如果能刷新架构，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" /> 方法。</summary>
      <param name="preferSilent">若为 true，则表明在处理过程中发生异常时不应显示错误消息；否则，为 false。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>获取设计器的当前架构对象。 有关此成员的说明，请参见 <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" /> 属性。</summary>
      <returns>设计器的当前架构对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.TemplateGroups">
      <summary>获取用于关联控件的模板组集合。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />，其中为 <see cref="T:System.Web.UI.WebControls.Menu" /> 中的每个模板包含一个元素。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器应使用关联控件的副本还是应使用控件本身来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuItemCollectionEditor">
      <summary>为由关联的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件的 <see cref="P:System.Web.UI.WebControls.Menu.Items" /> 属性指定的集合提供组件编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.MenuItemCollectionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑关联控件的菜单项集合的值。</summary>
      <returns>新的 <paramref name="value" />；否则，如果对象的值未发生更改，则 <paramref name="value" /> 不会更改。</returns>
      <param name="context">用于获取上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">实现 <see cref="T:System.IServiceProvider" /> 的对象，通过前者可以获取编辑服务。</param>
      <param name="value">要编辑其值的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取与此编辑器关联的编辑样式。</summary>
      <returns>始终返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal" />。</returns>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，指示所编辑的对象的上下文。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor">
      <summary>为关联的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中的 <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 对象提供组件编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" /> 类的新实例。</summary>
      <param name="type">要编辑的集合的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CanSelectMultipleInstances">
      <summary>获取一个值，该值指示是否可在编辑器中一次选择多个 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 元素。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateCollectionForm">
      <summary>创建新的窗体，以显示和编辑当前 <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> 对象。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> 的一个实例，用作 <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateInstance(System.Type)">
      <summary>创建指定的集合项类型的新实例。</summary>
      <returns>指定类型 <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> 的新实例。</returns>
      <param name="itemType">要创建的项的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateNewItemTypes">
      <summary>获取此集合编辑器能够创建的数据类型。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" /> 能够创建的数据类型的类型数组。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MultiViewDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.MultiView" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MultiViewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.MultiViewDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MultiViewDesigner.NoWrap">
      <summary>获取指示 nowrap HTML 特征不应被使用的值。</summary>
      <returns>任何情况下都为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> Web 服务器控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.CanConfigure">
      <summary>获取一个值，该值指示是否可以调用 <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure" /> 方法。</summary>
      <returns>如果可以调用 <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure" /> 方法，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示是否可以调用 <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法。</summary>
      <returns>如果可以调用 <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)" />，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure">
      <summary>在可视化设计器图面上显示“配置数据源”向导。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.GetView(System.String)">
      <summary>返回具有指定名称的数据源视图。</summary>
      <returns>具有 <paramref name="viewName" /> 所指定名称的 <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" />。</returns>
      <param name="viewName">包含 <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> 的名称的字符串。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.GetViewNames">
      <summary>为关联的控件返回数据源视图名称列表。</summary>
      <returns>一个字符串数组，其中包含关联的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 的 <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> 对象的名称。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从“属性”网格的显示中移除属性或向其添加其他属性或者隐藏关联控件的属性。</summary>
      <param name="properties">实现添加的和隐藏的属性的 <see cref="T:System.Collections.IDictionary" /> 的集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>从关联控件所指定的业务对象中为“选择”方法提取元数据。</summary>
      <param name="preferSilent">如果为 true，则在处理过程中出现异常时将不显示错误信息；否则，将显示异常消息。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.SelectMethod">
      <summary>获取或设置要在调用关联控件的 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> 方法时执行的方法的名称。</summary>
      <returns>一个字符串，其中包含要在调用 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> 时执行的方法的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.TypeName">
      <summary>获取或设置类型名称，该类型包含在关联控件中指定的方法。</summary>
      <returns>包含类型名称的字符串，该类型中包含在关联的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 中所指定的用以执行删除、插入、选择和更新数据库操作的方法。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView">
      <summary>提供与 <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" /> 类关联的设计时视图。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.ObjectDataSourceDesigner,System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> 类的新实例。</summary>
      <param name="owner">拥有此 <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> 对象的 <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" />。</param>
      <param name="viewName">包含此 <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> 对象的名称的字符串。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanDelete">
      <summary>获取一个值，它指示关联的数据源控件是否可按当前配置执行删除操作。</summary>
      <returns>如果关联的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 可执行删除操作，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanInsert">
      <summary>获取一个值，它指示关联的数据源控件是否可按当前配置执行插入操作。</summary>
      <returns>如果关联的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 可执行插入操作，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanPage">
      <summary>获取一个值，该值指示关联的数据源控件是否可执行基于服务器的分页。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>获取一个值，它指示关联的数据源控件是否可以返回查询所返回的总行数。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanSort">
      <summary>获取一个值，它指示关联的数据源控件是否可对行排序。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanUpdate">
      <summary>获取一个值，它指示关联的数据源控件是否可按当前配置执行更新操作。</summary>
      <returns>如果关联的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 可以执行更新操作，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>生成与关联数据源控件的架构匹配的设计时数据。</summary>
      <returns>由关联的 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 表示的数据示例；如果设计器无法生成任何示例数据，则返回 null。</returns>
      <param name="minimumRows">包含要检索的最小行数的整数。</param>
      <param name="isSampleData">一个值，它指示返回的数据是示例数据还是真实数据。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.Schema">
      <summary>获取描述由此视图对象表示的数据源视图的架构。</summary>
      <returns>实现 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />（用于描述列表中的对象的视图和属性）的对象；如果该架构不可用，则返回 null。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PanelContainerDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.PanelContainerDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)">
      <summary>在集合中添加样式特性的字符串表示形式，以用于在设计时呈现控件。</summary>
      <param name="styleAttributes">实现 <see cref="T:System.Collections.IDictionary" /> 的样式属性的集合。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.FrameCaption">
      <summary>获取在关联 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件上显示的标题。</summary>
      <returns>包含面板标题的字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.FrameStyle">
      <summary>获取关联 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件的样式。</summary>
      <returns>一个 <see cref="T:System.Web.UI.WebControls.Style" /> 对象，包含关联 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件的设计时样式。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">一个 <see cref="T:System.Web.UI.WebControls.Panel" />，它实现 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="component" /> 不是 <see cref="T:System.Web.UI.WebControls.Panel" />，也不属于 <see cref="T:System.Web.UI.WebControls.Panel" /> 的派生类。</exception>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.UsePreviewControl">
      <summary>获取一个值，指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PanelDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Panel" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.PanelDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.MapPropertyToStyle(System.String,System.Object)">
      <summary>将指定的属性和值映射到指定的标记样式。</summary>
      <param name="propName">一个包含属性名的字符串。</param>
      <param name="varPropValue">作为属性值的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.OnBehaviorAttached">
      <summary>当某一行为附加到设计器时提供通知。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ParameterCollectionEditor">
      <summary>为由关联的数据源控件的 Parameters 属性指定的 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 对象提供组件编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ParameterCollectionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>编辑关联的数据源控件的 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 对象的元素。</summary>
      <returns>新的 <paramref name="value" />；否则，如果对象的值未发生更改，则 <paramref name="value" /> 不会更改。</returns>
      <param name="context">用于获取上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="provider">实现 <see cref="T:System.IServiceProvider" /> 的对象，通过前者可以获取编辑服务。</param>
      <param name="value">要编辑其值的对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取与此编辑器关联的编辑样式。</summary>
      <returns>与此编辑器关联的编辑样式。</returns>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象，它指示所编辑的对象的上下文。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl">
      <summary>提供用于编辑 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 对象的可重用 <see cref="T:System.Windows.Forms.UserControl" /> 对象。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.#ctor(System.IServiceProvider)">
      <summary>使用指定 <see cref="T:System.IServiceProvider" /> 初始化 <see cref="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl" /> 类的新实例。</summary>
      <param name="serviceProvider">当前设计宿主（如 Visual Studio 2005）的 <see cref="T:System.IServiceProvider" /> 接口。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.AddParameters(System.Web.UI.WebControls.Parameter[])">
      <summary>向编辑器中添加现有参数的数组。</summary>
      <param name="parameters">要添加到编辑器中的现有参数的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 数组。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ClearParameters">
      <summary>从编辑器中移除所有参数。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.GetParameters">
      <summary>获取编辑器中的所有参数。</summary>
      <returns>编辑器中所有参数的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.OnParametersChanged(System.Object,System.EventArgs)">
      <summary>当编辑器中某个参数的状态更改时引发 <see cref="E:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersChanged" /> 事件。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersChanged">
      <summary>当任何参数或参数某个属性更改时发生。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersConfigured">
      <summary>返回一个值，该值指示编辑器中的所有参数是否都已配置。</summary>
      <returns>如果编辑器中的所有参数已全部配置，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.SetAllowCollectionChanges(System.Boolean)">
      <summary>控制是否可对编辑器中的值执行添加和删除操作。</summary>
      <param name="allowChanges">一个 <see cref="T:System.Boolean" />，它指示是否可对正在编辑的 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 执行添加和删除操作。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ParameterEditorUserControl.TypeDescriptionProvider">
      <summary>为 <see cref="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl" /> 类提供元数据。</summary>
      <returns>类型说明符提供程序对象。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.ActionLists">
      <summary>获取该控件设计器的操作列表集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象，它包含控件设计器的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 项。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.AllowResize">
      <summary>获取或设置一个值，该值指定 <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" /> 控件是否允许调整大小。</summary>
      <returns>如果控件允许调整大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.AutoFormats">
      <summary>获取自动格式设置方案的集合，以在设计时显示在关联控件的“自动套用格式”对话框中。</summary>
      <returns>包含控件的预定义方案的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetDesignTimeHtml">
      <summary>检索用于在设计时显示关联控件的 HTML 标记。</summary>
      <returns>用于在设计时表示控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>检索要在设计时显示所有区域的 HTML 标记。</summary>
      <returns>关联控件（包括所有控件设计器区域）的设计时 HTML 标记。</returns>
      <param name="regions">关联控件的控件设计器区域集合。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>返回关联控件设计时视图中可编辑区域的内容。</summary>
      <returns>如果控件设计器支持可编辑区域，则为区域的保持内容；否则为空字符串 ("")。</returns>
      <param name="region">要为其获取内容的区域。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>检索提供有关指定异常的信息的 HTML 标记。</summary>
      <returns>指定异常的设计时 HTML 标记。</returns>
      <param name="e">发生的异常。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化设计器并加载指定的组件。</summary>
      <param name="component">正在设计的控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>由设计器类用来在设计时在“属性”网格中添加或移除属性或者隐藏关联控件的属性。</summary>
      <param name="properties">组件的类的特性。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.RenderOuterTable">
      <summary>获取或设置一个值，该值指定 <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" /> 控件是否使用外部表容器来应用内联 CSS 样式规则。</summary>
      <returns>如果该控件使用外部表容器来应用内联 CSS 样式规则，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>建立设计时控件的可编辑区域的内容。</summary>
      <param name="region">控件内包含的可编辑设计区域。</param>
      <param name="content">要为可编辑设计区域分配的内容。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.TemplateGroups">
      <summary>获取模板组的集合，每个模板组包含一个或多个模板定义。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.TemplateGroup" /> 对象的集合。   默认值为空 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.UsePreviewControl">
      <summary>获取一个指示控件设计器是否使用临时预览控件来生成设计时 HTML 标记的值。</summary>
      <returns>true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PreviewControlDesigner">
      <summary>在可视化设计器中为设计图面必须使用关联控件预览的控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PreviewControlDesigner.#ctor">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PreviewControlDesigner.UsePreviewControl">
      <summary>获取一个指示控件设计器是否使用临时预览控件来生成设计时 HTML 标记的值。</summary>
      <returns>true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RegexEditorDialog">
      <summary>提供用于编辑 <see cref="T:System.Web.UI.WebControls.RegularExpressionValidator" /> 使用的正则表达式的对话框。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.#ctor(System.ComponentModel.ISite)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> 类的新实例。</summary>
      <param name="site">此对话框的位置。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdHelp_Click(System.Object,System.EventArgs)">
      <summary>表示将处理对话框的 Help 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">为事件提供数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdOK_Click(System.Object,System.EventArgs)">
      <summary>表示将处理对话框的 OK 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">为事件提供数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdTestValidate_Click(System.Object,System.EventArgs)">
      <summary>表示将处理对话框的“TestValidate”事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="args">为事件提供数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">一个值，它指示此 <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> 引用的任意托管对象所具有的全部资源。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.lstStandardExpressions_SelectedIndexChanged(System.Object,System.EventArgs)">
      <summary>表示将处理对话框的 SelectedIndexChanged 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">为事件提供数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.RegexTypeEditor_Activated(System.Object,System.EventArgs)">
      <summary>表示将处理对话框的 Activated 事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">为事件提供数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RegexEditorDialog.RegularExpression">
      <summary>获取或设置要编辑的正则表达式的名称。</summary>
      <returns>正则表达式的名称。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.txtExpression_TextChanged(System.Object,System.EventArgs)">
      <summary>表示将处理对话框的“TextChanged”事件的方法。</summary>
      <param name="sender">事件源。</param>
      <param name="e">为事件提供数据的 <see cref="T:System.EventArgs" /> 对象。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RegexTypeEditor">
      <summary>提供用于编辑正则表达式的用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.#ctor">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.RegexTypeEditor" /> 类的实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的服务提供程序和上下文编辑给定的正则表达式对象的值。</summary>
      <returns>新的对象值。 如果未更改对象的值，则此方法将返回传递给它的同一对象。</returns>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，它可以提供附加的上下文信息。</param>
      <param name="provider">服务提供程序。</param>
      <param name="value">值需要编辑的正则表达式对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取由 <see cref="M:System.Web.UI.Design.WebControls.RegexTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法使用的编辑器样式。</summary>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，指示该方法使用的编辑器样式。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RepeaterDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.Repeater" /> 控件的设计时行为。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.RepeaterDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.ActionLists">
      <summary>获取该控件设计器的操作列表集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象，它包含控件设计器的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 项。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataMember">
      <summary>获取或设置要将 <see cref="T:System.Web.UI.WebControls.Repeater" /> 控件绑定到的数据源对象中的特定表或视图的名称。</summary>
      <returns>数据源中的表或视图的名称。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSource">
      <summary>标识关联的 <see cref="T:System.Web.UI.WebControls.Repeater" /> 控件的数据源的数据绑定表达式。</summary>
      <returns>数据绑定表达式。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSourceDesigner">
      <summary>提供对数据源的关联设计器组件的访问。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceDesigner" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSourceID">
      <summary>获取或设置关联控件的 <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> 属性。</summary>
      <returns>关联控件的数据源控件的 ID。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DesignerView">
      <summary>获取与此设计器的数据源相关联的 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 对象。</summary>
      <returns>与此设计器的数据源相关联的 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Web.UI.Design.WebControls.RepeaterDesigner" /> 对象使用的非托管资源，并可选择释放托管资源。</summary>
      <param name="disposing">为 true 则既释放托管资源又释放非托管资源；为 false 则仅释放非托管资源。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.ExecuteChooseDataSourcePostSteps">
      <summary>在用户选择数据源之后由设计宿主（如 Visual Studio 2005）在设计时调用。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeDataSource(System.Collections.IEnumerable,System.Int32)">
      <summary>根据提供的数据同时使用指定的行数返回设计时示例数据。</summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerable" /> 对象，它包含要在设计时使用的示例数据。</returns>
      <param name="selectedDataSource">一个 <see cref="T:System.Collections.IEnumerable" /> 对象，它包含要在设计时用于创建类似示例数据的数据。</param>
      <param name="minimumRows">数据源应包含的示例数据的最少行数。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeDataSource(System.Int32)">
      <summary>根据 <see cref="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetResolvedSelectedDataSource" /> 方法同时使用指定的行数返回设计时示例数据。</summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerable" /> 对象，它包含要在设计时使用的示例数据。</returns>
      <param name="minimumRows">数据源应包含的示例数据的最少行数。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeHtml">
      <summary>检索要用于控件的设计时表示形式的 HTML 标记。</summary>
      <returns>设计时 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetEmptyDesignTimeHtml">
      <summary>检索设计时表示 Web 服务器控件的 HTML 标记，该控件在运行时将不具有可视化表示形式。</summary>
      <returns>设计时用于表示控件的 HTML 标记，否则该控件将不具有可视化表示形式。   默认值是一个包含该组件的类型和 ID 的矩形。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>检索提供有关指定异常的信息的 HTML 标记。</summary>
      <returns>指定异常的设计时 HTML 标记。</returns>
      <param name="e">发生的异常。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetResolvedSelectedDataSource">
      <summary>从所选的数据源中获取选定的数据成员。</summary>
      <returns>一个 <see cref="T:System.Collections.IEnumerable" />，它包含用于提供设计时数据的值的集合。 默认值为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetSelectedDataSource">
      <summary>从关联的 <see cref="T:System.Web.UI.WebControls.Repeater" /> 控件的容器中检索选定的数据源组件。</summary>
      <returns>选定的数据源；如果未找到数据源或不存在具有选定名称的数据源，则为 null。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>用提供的 <see cref="T:System.Web.UI.WebControls.Repeater" /> 控件初始化设计器。</summary>
      <param name="component">关联的 <see cref="T:System.Web.UI.WebControls.Repeater" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>在关联控件发生更改时调用。</summary>
      <param name="source">事件源。</param>
      <param name="ce">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.OnDataSourceChanged">
      <summary>处理对数据源所做的更改</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>筛选属性，用设计器的属性说明符替换运行时数据源属性说明符。</summary>
      <param name="properties">组件的类的特性。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.TemplatesExist">
      <summary>获取一个值，它指示关联控件是否已定义任何模板。</summary>
      <returns>一个值，它指示是否为关联控件定义任何模板。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor">
      <summary>提供用于 <see cref="T:System.Web.UI.WebControls.RoleGroupCollection" /> 类的设计时编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor.#ctor(System.Type)">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor" /> 类的新实例。</summary>
      <param name="type">集合中的对象类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor.CanSelectMultipleInstances">
      <summary>提供一个值，该值指示编辑器是否允许在集合中选择多项。</summary>
      <returns>false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.#ctor">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> 类的实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示该架构是否可刷新。</summary>
      <returns>此实现总是返回 true。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.GetView(System.String)">
      <summary>获取指定视图的 <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> 对象。</returns>
      <param name="viewPath">要检索的数据源部分的 XPath 查询。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.GetViewNames">
      <summary>获取一个名称数组，其中的名称表示数据源中的已命名视图。</summary>
      <returns>此实现始终返回一个空字符串数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化设计器并加载指定的组件。</summary>
      <param name="component">组件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>当关联组件更改时调用。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">包含有关事件信息的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>由设计器宿主调用以刷新基础数据源的架构。</summary>
      <param name="preferSilent">如果直到刷新操作完成后才允许显示数据源事件，则为 true；否则为 false。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanConfigure">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure" />。</summary>
      <returns>如果基础数据源有可以由 Configure 方法启动的配置向导，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanRefreshSchema">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema" />。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#Configure">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" />。</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#DataSourceChanged">
      <summary>有关此成员的说明，请参见 <see cref="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged" />。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetView(System.String)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)" />。</summary>
      <returns>一个设计器数据源视图，包含有关所标识视图的信息；如果未找到具有指定名称的视图，则为 null。</returns>
      <param name="viewName">要获取的视图的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetViewNames">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames" />。</summary>
      <returns>基础数据源中视图的名称。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#RefreshSchema(System.Boolean)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" />。</summary>
      <param name="preferSilent">true 取消数据源事件，直到刷新结束为止。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#ResumeDataSourceEvents">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" /></summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SchemaRefreshed">
      <summary>有关此成员的说明，请参见 <see cref="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed" />。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SuppressDataSourceEvents">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" />。</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView">
      <summary>为 <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> 和 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> 类提供数据的设计时视图。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner,System.String)">
      <summary>使用所提供的 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> 对象和视图名称创建 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView" /> 类的新实例。</summary>
      <param name="owner">父 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" />。</param>
      <param name="viewName">数据源向其提供数据的视图的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>使用所提供的行数生成与关联数据源控件的架构匹配的设计时数据，并返回一个指示数据是示例数据还是真实数据的布尔值。</summary>
      <returns>与关联数据源控件的架构匹配的设计时数据。</returns>
      <param name="minimumRows">要检索或创建的最小行数。</param>
      <param name="isSampleData">true 指示为示例数据；false 指示为真实数据。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.Schema">
      <summary>获取描述由此 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView" /> 对象表示的数据的架构。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 或从 <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 派生的对象。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView">
      <summary>为 <see cref="T:System.Web.SiteMap" /> 类提供分层数据的设计时视图。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner,System.String)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView" /> 类的新实例。</summary>
      <param name="owner">
        <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" />，它是关联 <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> 的设计器。</param>
      <param name="viewPath">XPath 查询，定义用于视图的数据块。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>生成与关联数据源控件的架构匹配的设计时数据，并返回一个指示数据是示例数据还是真实数据的值。</summary>
      <returns>与关联数据源控件的架构匹配的设计时数据。</returns>
      <param name="isSampleData">true 指示返回的数据为示例数据；false 指示返回的数据为真实数据。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.Schema">
      <summary>获取描述由此视图对象表示的数据源视图的架构。</summary>
      <returns>一个描述由此视图对象表示的数据源视图的架构。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapPathDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.SiteMapPathDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.AutoFormats">
      <summary>获取自动格式设置方案的集合，以在设计时显示在关联控件的“自动套用格式”对话框中。</summary>
      <returns>返回 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的 HTML 标记。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>获取提供有关指定异常的信息的 HTML 标记。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
      <param name="e">发生的异常。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 控件。</summary>
      <param name="component">可强制转换成 <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> 的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.TemplateGroups">
      <summary>获取模板组的集合，每个模板组包含一个或多个模板定义。</summary>
      <returns>返回 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.UsePreviewControl">
      <summary>获取一个指示控件设计器是否使用临时预览控件来生成设计时 HTML 标记的值。</summary>
      <returns>true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor">
      <summary>提供可在设计时选择和编辑 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 对象的连接字符串属性的用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.#ctor">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.GetProviderName(System.Object)">
      <summary>返回 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 对象的 <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> 属性。</summary>
      <returns>如果 <paramref name="instance" /> 不为 null，则为 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 的 <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> 属性；否则为空字符串 ("")。</returns>
      <param name="instance">应用连接字符串的 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.SetProviderName(System.Object,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>设置 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 对象的 <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> 属性。</summary>
      <param name="instance">应用连接字符串的 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />。</param>
      <param name="connection">与 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 关联的 <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.#ctor">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> 类的实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CanConfigure">
      <summary>获取一个值，该值指示设计宿主能否调用 <see cref="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.Configure" /> 方法。</summary>
      <returns>如果设计宿主支持 <see cref="T:System.ComponentModel.Design.Data.IDataEnvironment" /> 接口，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示 <see cref="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法是否可被设计宿主调用。</summary>
      <returns>如果 <see cref="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ConnectionString" /> 和 <see cref="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectCommand" /> 属性不为空，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.Configure">
      <summary>启动设计宿主中的数据源配置实用工具。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ConnectionString">
      <summary>获取或设置用于打开数据库的字符串。</summary>
      <returns>用于在运行时打开数据库连接的字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CreateView(System.String)">
      <summary>使用指定名称创建一个新的 <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> 实例。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> 对象。</returns>
      <param name="viewName">要创建的视图的名称。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.DeleteQuery">
      <summary>指示此 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> 支持删除查询。</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Delete" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.DeriveParameters(System.String,System.Data.Common.DbCommand)">
      <summary>从指定的 SQL 命令派生参数并向该命令的参数集合中添加相应的 <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象。</summary>
      <param name="providerName">数据提供程序的名称。</param>
      <param name="command">
        <see cref="T:System.Data.Common.DbCommand" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetConnectionString">
      <summary>为与此设计器关联的控件获取在设计时有效的连接字符串。</summary>
      <returns>连接字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetView(System.String)">
      <summary>检索由视图名称标识的 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 对象。</summary>
      <returns>如果能在数据源中找到，则为 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 对象；否则为 null。</returns>
      <param name="viewName">要获取的视图的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetViewNames">
      <summary>获取可用视图的列表。</summary>
      <returns>包含可用视图的名称的字符串数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.InferParameterNames(System.ComponentModel.Design.Data.DesignerDataConnection,System.String,System.Web.UI.WebControls.SqlDataSourceCommandType)">
      <summary>使用指定的连接、命令文本和命令类型返回参数数组。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.Parameter" /> 对象的数组。</returns>
      <param name="connection">一个 <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> 对象</param>
      <param name="commandText">命令的文本。</param>
      <param name="commandType">指示命令类型的 <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.InsertQuery">
      <summary>指示此 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> 支持插入查询。</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Insert" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>由设计器用来在“属性”网格中添加或移除属性或者隐藏关联控件的属性。</summary>
      <param name="properties">要筛选的属性。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ProviderName">
      <summary>获取或设置 .NET Framework 数据提供程序的名称，关联的 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控件使用此程序来连接基础数据源。</summary>
      <returns>包含数据提供程序的名称的字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>刷新基础数据源的架构。</summary>
      <param name="preferSilent">true 取消所有数据源事件，直到刷新架构为止。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectCommand">
      <summary>获取或设置关联的 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 中的 SQL 查询，以便从基础数据库中选择数据。</summary>
      <returns>SQL 查询。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectQuery">
      <summary>指示此 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> 支持选择查询。</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Select" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.UpdateQuery">
      <summary>指示此 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> 支持更新查询。</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Update" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView">
      <summary>为 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> 类提供数据的设计时视图。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.SqlDataSourceDesigner,System.String)">
      <summary>使用所提供的数据源设计器和视图名称创建 <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> 类的新实例。</summary>
      <param name="owner">父 <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" />。</param>
      <param name="viewName">数据源视图的名称。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanDelete">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 控件是否支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法。</summary>
      <returns>如果支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanInsert">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 对象关联的 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 是否支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> 方法。</summary>
      <returns>如果支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> 方法，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanPage">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 是否支持对由 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法检索的数据进行分页。</summary>
      <returns>如果支持对由 <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法检索的数据进行分页，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 是否支持检索数据的总行数（而不是数据）。</summary>
      <returns>如果支持检索数据的总行数，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanSort">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 控件是否支持基础数据源的排序视图。</summary>
      <returns>如果支持基础数据源的排序视图，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanUpdate">
      <summary>获取一个值，该值指示与当前 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控件关联的 <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> 控件是否支持 <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法。</summary>
      <returns>如果支持 <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> 方法，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>使用所提供的行数生成与关联数据源控件的架构匹配的设计时数据，并返回一个指示数据是示例数据还是真实数据的值。</summary>
      <returns>包含要在设计时显示的数据的 <see cref="T:System.Web.UI.DataSourceView" /> 对象。</returns>
      <param name="minimumRows">要返回的最小行数。</param>
      <param name="isSampleData">true 指示返回的数据为示例数据；false 指示返回的数据为实时数据。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.Schema">
      <summary>获取描述由此视图对象表示的数据源视图的架构。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.StyleCollectionEditor">
      <summary>在设计宿主（如 Microsoft Visual Studio 2005）中为 <see cref="T:System.Web.UI.WebControls.StyleCollection" /> 对象提供设计时编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.StyleCollectionEditor.#ctor(System.Type)">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.StyleCollectionEditor" /> 类的新实例。</summary>
      <param name="type">要创建的实例的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.StyleCollectionEditor.CreateInstance(System.Type)">
      <summary>创建指定的集合项类型的新实例。</summary>
      <returns>指定的类型的集合。</returns>
      <param name="itemType">要创建的实例的类型。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor">
      <summary>为关联 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中的 <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> 对象提供组件编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" /> 类的新实例。</summary>
      <param name="type">要编辑的集合的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CanSelectMultipleInstances">
      <summary>获取一个值，该值指示是否可在编辑器中一次选择多个 <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> 元素。</summary>
      <returns>始终为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateCollectionForm">
      <summary>创建新的窗体，以显示和编辑当前 <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> 集合。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> 的一个实例，该实例用作 <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateInstance(System.Type)">
      <summary>创建指定的集合项类型的新实例。</summary>
      <returns>指定类型的新实例，该新实例应为 <see cref="T:System.Web.UI.WebControls.SubMenuStyle" />。</returns>
      <param name="itemType">要创建的项的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateNewItemTypes">
      <summary>获取此集合编辑器能够创建的数据类型。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" /> 能够创建的数据类型的类型数组。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SubstitutionDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Substitution" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubstitutionDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.SubstitutionDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubstitutionDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的 HTML 标记。</summary>
      <returns>用于在设计时表示控件的 HTML 标记。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableCellsCollectionEditor">
      <summary>为编辑表格行中单元格的集合提供用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.TableCellsCollectionEditor" /> 类的新实例。</summary>
      <param name="type">要编辑的集合的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.CanSelectMultipleInstances">
      <summary>指示是否可以同时选择多个表单元格。</summary>
      <returns>如果可以同时选择多个单元格，则为 true；否则，为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.CreateInstance(System.Type)">
      <summary>创建指定类型的编辑器的实例。</summary>
      <returns>指定类型的对象。</returns>
      <param name="itemType">要创建的项的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.Table" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.TableDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableDesigner.GetDesignTimeHtml">
      <summary>获取设计时用于表示控件的 HTML。</summary>
      <returns>用于在设计时表示控件的 HTML。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableRowsCollectionEditor">
      <summary>提供用于编辑表中的行的用户界面。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.TableRowsCollectionEditor" /> 类的新实例。</summary>
      <param name="type">要编辑的集合的类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.CanSelectMultipleInstances">
      <summary>指示是否可以选择多个实例。</summary>
      <returns>如果可以同时选择多个项，则为 true；否则，为 false。 此实现总是返回 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.CreateInstance(System.Type)">
      <summary>创建指定类型的实例。</summary>
      <returns>指定类型的对象。</returns>
      <param name="itemType">要创建的项的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter">
      <summary>提供将 <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" /> 属性与其他表示形式相互转换的类型转换器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.#ctor">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>使用所提供的上下文和区域性信息将给定的值转换为此转换器的类型。</summary>
      <returns>一个对象，表示转换后的值。</returns>
      <param name="context">一个提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">用作当前区域性的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">要转换的对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>使用提供的上下文和区域性信息将对象转换为指定的类型。</summary>
      <returns>一个对象，表示转换后的值。</returns>
      <param name="context">一个提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">用作当前区域性的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">要将 <paramref name="value" /> 转换成的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor">
      <summary>在设计宿主（如 Microsoft Visual Studio 2005）中为 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象提供设计时编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用所提供的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象和由 <see cref="T:System.IServiceProvider" /> 接口表示的设计宿主编辑指定对象的值。</summary>
      <returns>新的对象值。   如果对象的值尚未更改，则它返回的对象应与传递给它的对象相同。</returns>
      <param name="context">类型描述符上下文。</param>
      <param name="provider">提供程序。</param>
      <param name="value">要编辑的值。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>检索由 <see cref="Overload:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.EditValue" /> 方法使用的编辑样式。</summary>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，指示 <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> 方法使用的编辑器样式。   如果 <see cref="T:System.Drawing.Design.UITypeEditor" /> 不支持该方法，则 <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> 将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</returns>
      <param name="context">上下文。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor">
      <summary>在设计宿主（如 Microsoft Visual Studio 2005）中为 <see cref="T:System.Web.UI.WebControls.TreeNodeStyleCollection" /> 对象提供设计时编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor.#ctor(System.Type)">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor" /> 类的新实例。</summary>
      <param name="type">类型。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor.CreateCollectionItemType">
      <summary>获取此集合编辑的数据类型。</summary>
      <returns>此集合编辑的数据类型。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeViewBindingsEditor">
      <summary>在设计宿主（如 Microsoft Visual Studio 2005）中为 <see cref="T:System.Web.UI.Design.WebControls.TreeViewDesigner" /> 对象提供设计时数据绑定编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.TreeViewBindingsEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的服务提供程序和上下文编辑指定对象的值。</summary>
      <param name="context">类型描述符上下文。</param>
      <param name="provider">服务提供程序。</param>
      <param name="value">要编辑的值。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>检索由 <see cref="Overload:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.EditValue" /> 方法使用的编辑样式。</summary>
      <param name="context">类型描述符上下文。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeViewDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.TreeViewDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.ActionLists">
      <summary>获取该控件设计器的操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.AutoFormats">
      <summary>获取预定义自动格式设置方案的集合，以便设计时在关联控件的“自动套用格式”对话框中显示。</summary>
      <returns>包含控件的预定义方案的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.CreateLineImages">
      <summary>显示对话框来编辑 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的连线图像。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>将关联控件绑定到设计时数据源。</summary>
      <param name="dataBoundControl">数据绑定控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.EditBindings">
      <summary>显示对话框来编辑数据绑定。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.EditNodes">
      <summary>显示对话框来编辑 <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 对象。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetDesignTimeHtml">
      <summary>检索用于在设计时表示控件的 HTML 标记。</summary>
      <returns>在设计时呈现控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetEmptyDesignTimeHtml">
      <summary>检索在设计时用于呈现关联控件的占位符的 HTML 标记文本。</summary>
      <returns>在设计时用来呈现控件的带空数据源的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>如果发生了错误，提供在设计时呈现关联控件的标记。</summary>
      <returns>发生错误时在设计时呈现控件的标记。</returns>
      <param name="e">异常。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetSampleDataSource">
      <summary>构造可在设计时用于关联控件的示例数据源。</summary>
      <returns>实现 <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> 接口的对象，可用作 <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> 派生的控件的数据源。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>当在派生类中重写时，提供给定 <see cref="T:System.Web.UI.WebControls.TreeView" /> 控件的自定义初始化。</summary>
      <param name="component">可强制转换为 <see cref="T:System.Web.UI.WebControls.TreeView" /> 的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.UsePreviewControl">
      <summary>获取一个指示控件设计器是否使用临时预览控件来生成设计时 HTML 标记的值。</summary>
      <returns>如果控件设计器使用控件的临时副本进行设计时预览，则为 true；否则，即如果控件设计器为控件设计器中包含的控件使用 <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> 属性，则为 false。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ValidationSummaryDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ValidationSummaryDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ValidationSummaryDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ValidationSummaryDesigner.CreateViewControl">
      <summary>返回要在设计图面上查看或呈现的关联控件的副本。</summary>
      <returns>一个 Web 服务器控件。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ValidationSummaryDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>供设计器使用，以从属性网格的显示中移除属性或向其添加属性或者隐藏关联控件的属性。</summary>
      <param name="properties">一个集合，该集合实现已添加和隐藏属性的字典。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ViewDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.View" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.ViewDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.GetDesignTimeHtml">
      <summary>检索用于在设计时表示控件的 HTML 标记。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>检索 HTML 标记以显示控件并使用当前控件设计器区域填充集合。</summary>
      <param name="regions">当前控件设计器区域。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计关联的组件。</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> 对象。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ViewDesigner.NoWrap">
      <summary>获取指示 nowrap HTML 特征不应被使用的值。</summary>
      <returns>任何情况下都为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.ActionLists">
      <summary>获取该控件设计器的操作列表集合。</summary>
      <returns>一个 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 对象，它包含控件设计器的自定义 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 项。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.AddDesignerRegions(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>向当前设计器区域添加提供的设计器区域集合。</summary>
      <param name="regions">包含要添加的区域的 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> 对象。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.AutoFormats">
      <summary>获取预定义自动格式设置方案的集合，以便设计时在关联控件的“自动套用格式”对话框中显示。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 对象。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ConvertToCustomNavigationTemplate">
      <summary>从活动步骤创建导航模板，并将其保存到活动步骤的 <see cref="P:System.Web.UI.WebControls.TemplatedWizardStep.CustomNavigationTemplate" /> 属性中。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ConvertToTemplate(System.String,System.ComponentModel.IComponent,System.String,System.String[])">
      <summary>将选择的控件转换为关联控件中的模板。</summary>
      <param name="description">允许事务完成的效果的说明，由设计宿主使用，以便为用户提供取消操作的机会。</param>
      <param name="component">与此设计器关联的向导控件。</param>
      <param name="templateName">要转换的目标模板的名称。</param>
      <param name="keys">要包含在模板中的控件的 ID 数组。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.CreateChildControls">
      <summary>创建关联控件的子控件。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.DisplaySideBar">
      <summary>获取或设置指示是否显示侧栏的关联向导控件中的属性。</summary>
      <returns>如果显示侧栏，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的标记。</summary>
      <returns>设计时用于表示控件的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>获取 HTML 标记以在设计时显示控件，并使用当前的控件设计器区域填充集合。</summary>
      <returns>关联控件（包括所有控件设计器区域）的设计时 HTML 标记。</returns>
      <param name="regions">使用基</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>获取设计时的控件的可编辑区域的内容。</summary>
      <returns>如果控件设计器支持可编辑区域，则为区域的保持内容；否则为空字符串 ("")。</returns>
      <param name="region">
        <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="region" /> 不是 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 类型的对象。</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>用指定的 <see cref="T:System.ComponentModel.IComponent" /> 对象初始化设计器。</summary>
      <param name="component">使用基</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>当用户在设计时单击关联控件时由设计宿主调用。</summary>
      <param name="e">使用基</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>在关联控件发生更改时调用。</summary>
      <param name="sender">事件源。</param>
      <param name="ce">事件数据。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>向设计宿主中的“属性”网格添加属性或从中移除属性，或提供与关联控件上的属性相对应的新的设计时设置或属性。</summary>
      <param name="properties">包含组件中类的属性的 <see cref="T:System.Collections.IDictionary" /> 对象。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ResetTemplate(System.String,System.ComponentModel.IComponent,System.String)">
      <summary>将指定模板重置为其默认值。</summary>
      <param name="description">允许事务完成的效果的说明，由设计宿主使用，以便为用户提供取消操作的机会。</param>
      <param name="component">与此设计器关联的 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件。</param>
      <param name="templateName">要重置的模板的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>指定设计时控件可编辑区域的内容。</summary>
      <param name="region">控件内包含的可编辑设计区域。</param>
      <param name="content">要为可编辑设计区域分配的内容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="region" /> 不是 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 类型的对象。</exception>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.TemplateGroups">
      <summary>获取模板组的集合，每个模板组包含一个或多个模板定义。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 对象。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.UsePreviewControl">
      <summary>获取指示设计宿主是否应使用预览控件的值。</summary>
      <returns>如果使用预览控件，则为 true；如果使用关联控件，则为 false。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepCollectionEditor">
      <summary>在设计宿主（如 Visual Studio 2005）中为 <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> 提供设计时编辑器。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.#ctor(System.Type)">
      <summary>使用给定的 <see cref="T:System.Type" /> 创建 <see cref="T:System.Web.UI.Design.WebControls.WizardStepCollectionEditor" /> 类的新实例。</summary>
      <param name="type">集合中的项的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CanSelectMultipleInstances">
      <summary>指示是否可以选择多个实例。</summary>
      <returns>如果可以同时选择多个项，则为 true；否则，为 false。 此实现总是返回 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateCollectionForm">
      <summary>创建新的窗体，以显示和编辑当前集合。</summary>
      <returns>作为用于编辑集合的用户界面提供的 <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateInstance(System.Type)">
      <summary>创建指定的 <see cref="T:System.Type" /> 的集合的实例。</summary>
      <returns>指定的 <paramref name="itemType" /> 的集合。</returns>
      <param name="itemType">要创建的集合的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateNewItemTypes">
      <summary>检索此集合可包含的数据类型。</summary>
      <returns>
        <see cref="T:System.Type" /> 对象的数组。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepEditableRegion">
      <summary>定义 <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> 对象的向导步骤的设计时标记内的可编辑内容区域。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepEditableRegion.#ctor(System.Web.UI.Design.WebControls.WizardDesigner,System.Web.UI.WebControls.WizardStepBase)">
      <summary>使用给定的设计器和步骤初始化 <see cref="T:System.Web.UI.Design.WebControls.WizardStepEditableRegion" /> 类的新实例。</summary>
      <param name="designer">一个 <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> 是向导的父设计器。</param>
      <param name="wizardStep">一个 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 定义步骤。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardStepEditableRegion.Step">
      <summary>获取关联的设计时向导步骤。</summary>
      <returns>关联的设计时向导步骤。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion">
      <summary>定义 <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> 的向导步骤中的模板的设计时标记内的可编辑内容区域。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion.#ctor(System.Web.UI.Design.TemplateDefinition,System.Web.UI.WebControls.WizardStepBase)">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion" /> 类的新实例。</summary>
      <param name="templateDefinition">一个 <see cref="T:System.Web.UI.Design.TemplateDefinition" /> 对象，它在设计时定义向导步骤中的模板元素。</param>
      <param name="wizardStep">一个 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 对象表示 <see cref="T:System.Web.UI.WebControls.Wizard" /> 控件中显示的步骤。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion.Step">
      <summary>获取关联的设计时向导步骤。</summary>
      <returns>
        <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 对象。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.CanConfigure">
      <summary>获取一个值，该值指示是否可以调用 <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure" /> 方法。</summary>
      <returns>如果可以调用 <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure" /> 方法，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.CanRefreshSchema">
      <summary>获取一个值，该值指示是否可以调用 <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法。</summary>
      <returns>如果可以调用 <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)" /> 方法，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure">
      <summary>启动基础数据源配置向导。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data">
      <summary>获取或设置关联的数据源控件所绑定的 XML 块。</summary>
      <returns>XML 数据字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile">
      <summary>获取或设置关联的数据源控件所绑定到的 XML 文件的文件名。</summary>
      <returns>XML 文件名。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.GetView(System.String)">
      <summary>为关联的 <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 控件检索设计时数据源视图对象。</summary>
      <returns>关联的 <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> 控件的设计时数据源视图对象。</returns>
      <param name="viewPath">要检索的视图的路径。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化设计器并加载指定的组件。</summary>
      <param name="component">组件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>由设计器组件在设计时用来在设计宿主的“属性”网格中添加或移除属性，或提供可能与关联控件的属性对应的新的设计时属性。</summary>
      <param name="properties">属性的 IDictionary。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>在可以选择取消事件时从数据源刷新架构。</summary>
      <param name="preferSilent">如果取消架构 UI 事件，则为 true；否则为 false。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanConfigure">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure" />。</summary>
      <returns>如果可以配置数据源，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanRefreshSchema">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema" />。</summary>
      <returns>如果可以刷新架构，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#Configure">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" />。</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#DataSourceChanged">
      <summary>有关此成员的说明，请参见 <see cref="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged" />。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetView(System.String)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)" />。</summary>
      <returns>包含有关标识的视图信息的 <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> 对象，或者，如果未找到具有指定名称的视图，则为 null。</returns>
      <param name="viewName">基础数据源中的视图的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetViewNames">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames" />。</summary>
      <returns>数据源中的视图的名称数组。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#RefreshSchema(System.Boolean)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" />。</summary>
      <param name="preferSilent">指定是否取消刷新架构时引发的所有事件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#ResumeDataSourceEvents">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" />。</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SchemaRefreshed">
      <summary>有关此成员的说明，请参见 <see cref="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed" />。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SuppressDataSourceEvents">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" />。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Transform">
      <summary>获取或设置一个可扩展样式表语言 (XSL) 块，该语言块定义将对 XML 数据执行的 XSLT 转换，XML 数据包含在 <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> 属性或由 <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" /> 属性指示的 XML 文件中。</summary>
      <returns>XSL 数据字符串。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.TransformFile">
      <summary>获取或设置可扩展样式表语言 (XSL) 文件 (.xsl) 的文件名，该文件定义将对 XML 数据执行的 XSLT 转换，XML 数据包含在 <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> 属性或由 <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" /> 属性指示的 XML 文件中。</summary>
      <returns>XSLT 文件名。</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.XPath">
      <summary>获取或设置要应用于 XML 数据的 XPath 查询，XML 数据包含在 <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> 属性或由 <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" /> 属性指示的 XML 文件中。</summary>
      <returns>XPath 查询。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesigner">
      <summary>扩展 <see cref="T:System.Web.UI.WebControls.Xml" /> Web 服务器控件的设计时行为。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.XmlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Web.UI.Design.WebControls.XmlDesigner" /> 占用的非托管资源，也可以选择释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.GetDesignTimeHtml">
      <summary>检索用于在设计时表示控件的 HTML 标记。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.GetEmptyDesignTimeHtml">
      <summary>获取用于填充空控件的 HTML。</summary>
      <returns>用于填充空控件的 HTML。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>用与此设计器实例相关联的控件初始化设计器。</summary>
      <param name="component">关联的控件。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView">
      <summary>为 <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> 类提供数据的设计时视图。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.XmlDataSourceDesigner,System.String)">
      <summary>创建 <see cref="T:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView" /> 类的新实例。</summary>
      <param name="owner">父 <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" />。</param>
      <param name="viewName">数据源视图的名称。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>生成与关联数据源控件的架构匹配的设计时数据，并返回一个指示数据是示例数据还是真实数据的值。</summary>
      <returns>包含要在设计时显示的数据的 <see cref="T:System.Web.UI.DataSourceView" /> 对象。</returns>
      <param name="minimumRows">要返回的最小行数。</param>
      <param name="isSampleData">true 指示返回的数据为示例数据；false 指示返回的数据为实时数据。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.Schema">
      <summary>获取描述由此视图对象表示的数据源视图的架构。</summary>
      <returns>
        <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> 对象。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView">
      <summary>为 <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> 类提供数据的分层设计时视图。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.WebControls.XmlDataSourceDesigner,System.String)">
      <summary>使用提供的设计器和 XPath 创建 <see cref="T:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView" /> 类的新实例。</summary>
      <param name="owner">一个 <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" />。</param>
      <param name="viewPath">XPath 字符串，标识视图的数据。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>生成与关联数据源控件的架构匹配的设计时数据，并返回一个指示数据是示例数据还是真实数据的布尔值。</summary>
      <returns>此实现总是返回 null。</returns>
      <param name="isSampleData">true 指示返回的数据为示例数据；false 指示返回的数据为实时数据。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.Schema">
      <summary>获取描述由此视图对象表示的数据的架构。</summary>
      <returns>此实现总是返回 null。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner">
      <summary>为 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />、<see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> 和 <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.CreateViewControl">
      <summary>创建要在设计时呈现的关联的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的副本。</summary>
      <returns>关联的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的副本。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.GetDesignTimeHtml">
      <summary>确认控件驻留在 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 类型的区域中，然后获取用于在设计时表示控件的标记。</summary>
      <returns>用于在设计时表示控件的标记；或者如果控件未驻留在 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 中，则为错误标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到关联的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 派生的控件。</summary>
      <param name="component">与设计器关联的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 派生的控件。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner">
      <summary>提供对 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> 控件的设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.AutoFormats">
      <summary>获取预定义自动格式设置方案的集合，以便设计时在关联控件的“自动套用格式”对话框中显示。</summary>
      <returns>预先指定的具有默认 CatalogZone 方案的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml">
      <summary>通过使用空参数调用 <see cref="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> 方法来获取用于在设计时表示控件的标记。</summary>
      <returns>使用空变量作为参数对 <see cref="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> 进行的方法调用。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>在生成控件的设计时 HTML 之前在设计器中创建一个 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</summary>
      <returns>表示控件的设计时 HTML 的 <see cref="T:System.String" />。</returns>
      <param name="regions">与控件相关联的 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />（如果有）。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>获取指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 的内容。</summary>
      <returns>表示设计器区域内容的保持形式的 <see cref="T:System.String" />。</returns>
      <param name="region">指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>获取用于表示空控件的标记。</summary>
      <returns>一个空 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到关联的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> 控件。</summary>
      <param name="component">关联的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>设置指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 的内容。</summary>
      <param name="region">指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <param name="content">表示要归入指定区域的内容的 <see cref="T:System.String" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.TemplateGroups">
      <summary>获取模板组的集合，每个模板组包含一个或多个模板定义。</summary>
      <returns>预先指定的具有 CatalogZone 环境的默认设置的 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner">
      <summary>为 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.AutoFormats">
      <summary>获取预定义自动格式设置方案的集合，以便设计时在关联控件的“自动套用格式”对话框中显示。</summary>
      <returns>具有默认 ConnectionZone 方案的预定义 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.GetDesignTimeHtml">
      <summary>获取用于在设计时表示控件的标记。</summary>
      <returns>一个 <see cref="T:System.String" />，是在设计时表示控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到指定的 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件。</summary>
      <param name="component">与设计器关联的 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>在设计时隐藏一组预设置的属性。</summary>
      <param name="properties">与控件关联的属性集的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner">
      <summary>为 <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetDesignTimeHtml">
      <summary>重写父方法以阻止呈现控件。</summary>
      <returns>空字符串 ("") 或 <see cref="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetEmptyDesignTimeHtml" /> 的值。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetEmptyDesignTimeHtml">
      <summary>获取在设计图面上表示空控件的标记。</summary>
      <returns>空标记字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到关联的 <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件并将 <see cref="F:System.Web.UI.Design.ViewFlags.TemplateEditing" /> 视图标记设置为 true。</summary>
      <param name="component">与此设计器关联的 <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> 控件。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.TemplateGroups">
      <summary>获取模板组的集合，每个模板组包含一个或多个模板定义。</summary>
      <returns>与此类关联的追加 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner">
      <summary>为 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.CreateViewControl">
      <summary>创建要在设计时呈现的关联的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的副本。</summary>
      <returns>关联的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件的副本。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.GetDesignTimeHtml">
      <summary>验证控件是否驻留在 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 类型的区域中，然后获取用于在设计时表示控件的标记。</summary>
      <returns>用于在设计时表示控件的标记或错误标记（如果控件未驻留在 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> 中）。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到关联的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件。</summary>
      <param name="component">与设计器关联的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 控件。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner">
      <summary>为 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.AutoFormats">
      <summary>获取预定义自动格式设置方案的集合，以便设计时在关联控件的“自动套用格式”对话框中显示。</summary>
      <returns>使用默认的 EditorZone 方案预先指定的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml">
      <summary>使用空参数调用 <see cref="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />。</summary>
      <returns>一个 <see cref="T:System.String" />，在设计时表示控件的标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>获取用于在设计时表示控件的标记。</summary>
      <returns>一个 <see cref="T:System.String" />，在设计时表示控件的标记。</returns>
      <param name="regions">与控件相关联的 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />（如果有）。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>获取指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 的内容。</summary>
      <returns>表示设计器区域内容的保持形式的 <see cref="T:System.String" />。</returns>
      <param name="region">指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>获取用于表示空控件的标记。</summary>
      <returns>一个空 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到关联的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 控件。</summary>
      <param name="component">与设计器关联的 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>设置指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 的内容。</summary>
      <param name="region">指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <param name="content">表示要归入指定区域的内容的 <see cref="T:System.String" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.TemplateGroups">
      <summary>获取模板组的集合，每个模板组包含一个或多个模板定义。</summary>
      <returns>使用 EditorZone 环境的默认设置预先指定的 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner">
      <summary>在可视化设计器中为 <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.GetDesignTimeHtml">
      <summary>检索用于在设计时表示控件的 HTML。</summary>
      <returns>用于在设计时表示控件的 HTML 标记。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计 <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> 控件。</summary>
      <param name="component">要初始化的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.PartDesigner">
      <summary>扩展实现 <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> 抽象类的控件的设计时行为。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>创建绑定到关联的 <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> 控件的设计器的一个实例。</summary>
      <param name="component">与此设计器关联的 <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> 控件。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.PartDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner">
      <summary>为 <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> 控件提供最小设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.GetDesignTimeHtml">
      <summary>获取一个空字符串 ("")，它指示可视化设计环境应恢复为默认控件呈现。</summary>
      <returns>一个空 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到关联的 <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> 控件。</summary>
      <param name="component">与此设计器关联的 <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> 控件。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner">
      <summary>在可视化设计器中为 Web 部件区域提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.ActionLists">
      <summary>获取区域设计器的操作列表集合。</summary>
      <returns>与此设计器关联的 <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>准备设计器，以查看、编辑和设计 Web 部件区域。</summary>
      <param name="component">要初始化的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.ViewInBrowseMode">
      <summary>获取或设置一个值，该值指示当用户处于浏览显示模式时是否显示 Web 部件区域。</summary>
      <returns>如果当用户处于浏览显示模式时显示 Web 部件区域，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner">
      <summary>提供对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件的设计时可视支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到控件并验证该控件是否为 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件。</summary>
      <param name="component">与此设计器关联的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控件。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner">
      <summary>为 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 控件提供最低的设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.GetDesignTimeHtml">
      <summary>返回一个空字符串 ("")，该值指示可视化设计环境应恢复为默认控件呈现。</summary>
      <returns>一个空 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器绑定到关联的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 控件。</summary>
      <param name="component">与设计器关联的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 控件。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner">
      <summary>为 <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner" /> 控件提供设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>初始化绑定到关联 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 控件的设计器实例。</summary>
      <param name="component">与此设计器关联的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>在设计时隐藏 <see cref="P:System.Web.UI.WebControls.WebParts.WebZone.VerbStyle" /> 属性。</summary>
      <param name="properties">与控件关联的属性集的 <see cref="T:System.Collections.IDictionary" />。</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner">
      <summary>提供对 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> 控件的设计时支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.AutoFormats">
      <summary>获取预定义自动格式设置方案的集合，以便设计时在关联控件的“自动套用格式”对话框中显示。</summary>
      <returns>预先指定的具有默认 WebPartZone 架构的 <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml">
      <summary>通过使用空参数调用 <see cref="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> 方法获取用于在设计时表示控件的标记。</summary>
      <returns>使用空参数的 <see cref="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> 方法调用。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>在生成控件的设计时 HTML 之前在设计器中创建一个 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</summary>
      <returns>表示控件的设计时 HTML 的 <see cref="T:System.String" />。</returns>
      <param name="regions">与控件相关联的 <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />（如果有）。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>获取指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 的内容。</summary>
      <returns>表示设计器区域内容保留形式的 <see cref="T:System.String" />。</returns>
      <param name="region">指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>如果关联的控件没有设计时 HTML，则提供一个空字符串 ("")。</summary>
      <returns>空字符串。</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>将设计器附加到关联的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> 控件。</summary>
      <param name="component">关联的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> 控件。</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>设置指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 的内容。</summary>
      <param name="region">指定的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />。</param>
      <param name="content">表示指定区域的内容的 <see cref="T:System.String" />。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner.TemplateGroups">
      <summary>获取模板组的集合，每个模板组包含一个或多个模板定义。</summary>
      <returns>预先指定的具有 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> 环境的默认设置的 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> 对象。</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner">
      <summary>为 <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> 控件提供设计时可视化支持。</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>创建绑定到关联 <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> 控件的设计器实例。</summary>
      <param name="component">与此设计器关联的 <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> 控件。</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner.UsePreviewControl">
      <summary>获取一个值，该值指示设计器是否应使用临时副本取代与设计器关联的实际控件来生成设计时标记。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AnchorEditor">
      <summary>提供用于配置 <see cref="P:System.Windows.Forms.Control.Anchor" /> 属性的用户界面。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.AnchorEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用指定的服务提供程序和上下文编辑指定对象的值。</summary>
      <returns>新的对象值。 如果该对象的值尚未更改，则这应返回与传递给它的对象相同的对象。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />，通过它可能获得编辑服务。</param>
      <param name="value">正在编辑的值的实例。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取由 <see cref="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法使用的编辑器样式。</summary>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值之一，指示所提供的编辑样式。 如果不支持该方法，则此方法将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary>导入 ActiveX 控件并生成可由设计器访问的包装。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.AxImporter" /> 类的新实例。</summary>
      <param name="options">
        <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />，指示要使用的 ActiveX 控件导入程序的选项。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.AxImporter.GeneratedAssemblies">
      <summary>获取为控件生成的程序集的名称。</summary>
      <returns>所生成程序集的名称的数组，或者，如果没有生成程序集，则为空字符串数组。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxImporter.GeneratedSources">
      <summary>获取生成的源文件的名称。</summary>
      <returns>所生成源文件的文件名的数组，如果都不存在，则为 null。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxImporter.GeneratedTypeLibAttributes">
      <summary>获取所生成类型库的特性。</summary>
      <returns>
        <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> 类型的数组，指示所生成类型库的特性。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GenerateFromFile(System.IO.FileInfo)">
      <summary>生成 ActiveX 控件的包装以供在设计时环境中使用。</summary>
      <returns>生成包装的 ActiveX 控件类型的程序集限定名。</returns>
      <param name="file">
        <see cref="T:System.IO.FileInfo" />，指示包含该控件的文件。</param>
      <exception cref="T:System.Exception">类型库未能从 <paramref name="file" /> 加载。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GenerateFromTypeLibrary(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>生成 ActiveX 控件的包装以供在设计时环境中使用。</summary>
      <returns>生成包装的 ActiveX 控件类型的程序集限定名。</returns>
      <param name="typeLib">
        <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />，指示要从中生成控件的类型库。</param>
      <exception cref="T:System.Exception">在 <paramref name="typeLib" /> 中没有找到任何已注册的 ActiveX 控件。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GenerateFromTypeLibrary(System.Runtime.InteropServices.UCOMITypeLib,System.Guid)">
      <summary>生成 ActiveX 控件的包装以供在设计时环境中使用。</summary>
      <returns>生成包装的 ActiveX 控件类型的程序集限定名。</returns>
      <param name="typeLib">
        <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />，指示要从中生成控件的类型库。</param>
      <param name="clsid">
        <see cref="T:System.Guid" />，用于控件包装。</param>
      <exception cref="T:System.Exception">在 <paramref name="typeLib" /> 中没有找到任何已注册的 ActiveX 控件。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.GetFileOfTypeLib(System.Runtime.InteropServices.TYPELIBATTR@)">
      <summary>获取所指定类型库的路径和文件名称。</summary>
      <returns>所指定类型库的路径和文件名，或者，如果未能找到库，则为 null。</returns>
      <param name="tlibattr">
        <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" />，指示要检索其文件名的类型库。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary>提供方法来解析对 ActiveX 库、COM 类型库或程序集或托管程序集的引用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>解析对包含 ActiveX 控件的指定类型库的引用。</summary>
      <returns>程序集的完全限定路径。</returns>
      <param name="typeLib">要解析对其引用的 <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary>解析对包含 COM 组件的指定程序集的引用。</summary>
      <returns>程序集的完全限定路径。</returns>
      <param name="name">
        <see cref="T:System.Reflection.AssemblyName" />，指示要解析对其的引用的程序集。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary>解析对包含 COM 组件的指定类型库的引用。</summary>
      <returns>程序集的完全限定路径。</returns>
      <param name="typeLib">要解析对其引用的 <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary>解析对指定程序集的引用。</summary>
      <returns>程序集的完全限定路径。</returns>
      <param name="assemName">要解析对其的引用的程序集名称。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary>表示 <see cref="T:System.Windows.Forms.Design.AxImporter" /> 的一组选项。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> 类的新实例。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary>指定所生成程序集是否具有强名称，以及以后是否将对其签名。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary>指定是否应为类型库包装生成源。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.ignoreRegisteredOcx">
      <summary>指定是否使用从命令行代替依靠已注册版本的唯一输入。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary>为生成的程序集指定包含强名称密钥容器的文件的路径。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary>为生成的程序集指定包含强名称密钥的文件的路径。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary>指定用于所生成程序集的强名称。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary>指定是否以 Microsoft Build Engine (MSBuild) 格式输出错误。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary>指示 ActiveX 导入程序工具徽标在导入控件时是否显示。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary>指定将在其中创建所生成程序集的目录的路径。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary>指定生成 ActiveX 控件包装要使用的文件名。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary>指定生成程序集时是否覆盖现有文件。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary>指定用于为所生成程序集签名的公钥。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary>指定 <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" />，在生成程序集时用于解析类型和引用。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary>指定是否以静态模式编译，这种模式在编译时生成的显示信息较少。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary>指定是否以详细模式编译，这种模式在编译时生成的显示信息较多。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.AxParameterData">
      <summary>表示寄宿 ActiveX 控件的方法的参数。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.Reflection.ParameterInfo)">
      <summary>使用指定的参数信息初始化 <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 类的新实例。</summary>
      <param name="info">一个 <see cref="T:System.Reflection.ParameterInfo" />，指示要使用的参数信息。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.Reflection.ParameterInfo,System.Boolean)">
      <summary>使用指定的参数信息以及是否忽略通过引用传递的参数初始化 <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 类的新实例。</summary>
      <param name="info">一个 <see cref="T:System.Reflection.ParameterInfo" />，指示要使用的参数信息。</param>
      <param name="ignoreByRefs">一个值，指示是否忽略通过引用传递的参数。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.String,System.String)">
      <summary>使用指定的名称和类型名称初始化 <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 类的新实例。</summary>
      <param name="inname">参数的名称。</param>
      <param name="typeName">参数的类型的名称。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.#ctor(System.String,System.Type)">
      <summary>使用指定的名称和类型初始化 <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 类的新实例。</summary>
      <param name="inname">参数的名称。</param>
      <param name="type">参数的类型。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.Convert(System.Reflection.ParameterInfo[])">
      <summary>将指定的参数信息转换为 <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 对象。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 对象的数组，该数组表示 <see cref="T:System.Reflection.ParameterInfo" /> 对象的指定数组。</returns>
      <param name="infos">要转换的 <see cref="T:System.Reflection.ParameterInfo" /> 对象的数组。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.AxParameterData.Convert(System.Reflection.ParameterInfo[],System.Boolean)">
      <summary>根据指示是否忽略通过引用传递的参数的指定值，将指定的参数信息转换为 <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 对象。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.AxParameterData" /> 对象的数组，该数组表示 <see cref="T:System.Reflection.ParameterInfo" /> 对象的指定数组。</returns>
      <param name="infos">要转换的 <see cref="T:System.Reflection.ParameterInfo" /> 对象的数组。</param>
      <param name="ignoreByRefs">一个值，指示是否忽略通过引用传递的参数。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.Direction">
      <summary>指示赋值字段的方向。</summary>
      <returns>一个 <see cref="T:System.CodeDom.FieldDirection" />，指示赋值字段的方向。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsByRef">
      <summary>指示参数数据是否通过引用传递。</summary>
      <returns>如果参数数据通过引用传递，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsIn">
      <summary>指示参数数据是否为输入参数。</summary>
      <returns>如果参数数据是输入参数，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsOptional">
      <summary>指示参数数据是否可选。</summary>
      <returns>如果参数数据是可选的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.IsOut">
      <summary>指示参数数据是否为输出参数。</summary>
      <returns>如果参数数据是输出参数，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.Name">
      <summary>获取或设置参数的名称。</summary>
      <returns>参数的名称。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.ParameterType">
      <summary>获取参数需要的类型。</summary>
      <returns>参数需要的类型。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.AxParameterData.TypeName">
      <summary>获取参数需要的类型的名称。</summary>
      <returns>参数需要的类型的名称。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxWrapperGen">
      <summary>生成 ActiveX 控件的包装以供在设计时环境中使用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxWrapperGen.#ctor(System.Type)">
      <summary>生成 ActiveX 包装以供在设计时承载 ActiveX 控件。</summary>
      <param name="axType">要为其生成包装的 ActiveX 控件的类型。</param>
    </member>
    <member name="F:System.Windows.Forms.Design.AxWrapperGen.GeneratedSources">
      <summary>此字段初始化一个名为 GeneratedSources 的局部 <see cref="T:System.Collections.ArrayList" /> 变量。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.BorderSidesEditor">
      <summary>提供一个用于设置 <see cref="P:System.Windows.Forms.ToolStripStatusLabel.BorderSides" /> 属性的编辑器。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.BorderSidesEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 提供的编辑器样式编辑给定对象值。</summary>
      <returns>编辑后的对象。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供关于控件或组件的信息。</param>
      <param name="provider">一个 <see cref="T:System.IServiceProvider" />，提供对其他对象的自定义支持。</param>
      <param name="value">要编辑的对象值。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>检索 EditValue 方法的编辑样式。</summary>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值之一。 如果不支持该方法，则此方法将返回 <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />。</returns>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，提供关于控件或组件的信息。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary>设计器基类，用于扩展支持嵌套组件的根设计文档的设计模式行为。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary>为设计器获取控件。</summary>
      <returns>设计器正在编辑的 <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>获取一个值，该值指示设计器是否支持指定工具。</summary>
      <returns>如果应在工具箱上启用该工具，则为 true；如果文档设计器不知道如何使用该工具，则为 false。</returns>
      <param name="tool">要对其进行工具箱支持测试的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>用指定的组件初始化设计器。</summary>
      <param name="component">要与设计器关联的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整该组件将通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" />，包含组件的类的属性。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>有关此成员的说明，请参见 <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</summary>
      <returns>表示此设计器的视图的对象。</returns>
      <param name="technology">指示特定视图技术的 <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>有关此成员的说明，请参见 <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />。</summary>
      <returns>受支持的 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 值的数组。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />。</summary>
      <returns>如果将缓存经过筛选的特性集，则为 true；如果筛选服务必须再次查询，则为 false。</returns>
      <param name="component">要筛选其特性的组件。</param>
      <param name="attributes">可修改的特性字典。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />。</summary>
      <returns>如果将缓存经过筛选的事件集，则为 true；如果筛选服务必须再次查询，则为 false。</returns>
      <param name="component">要为其筛选事件的组件。</param>
      <param name="events">可修改的事件字典。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />。</summary>
      <returns>如果将缓存经过筛选的属性集，则为 true；如果筛选服务必须再次查询，则为 false。</returns>
      <param name="component">要筛选其属性的组件。</param>
      <param name="properties">可修改的属性字典。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />。</summary>
      <returns>如果工具箱支持该工具而且该工具可启用，则为 true；如果该文档设计器不知道如何使用该工具，则为 false。</returns>
      <param name="tool">要进行工具箱支持测试的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />。</summary>
      <param name="tool">要选择的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary>获取或设置一个值，该值指示设计器的组件栏是否处于自动排列模式。</summary>
      <returns>如果设计器的组件栏处于自动排列模式，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary>获取或设置一个值，该值指示设计器的组件栏处是否处于大图标模式。</summary>
      <returns>如果设计器的组件栏处于大图标模式，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary>为设计器的组件栏提供行为。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary>使用指定的设计器和服务提供程序初始化 <see cref="T:System.Windows.Forms.Design.ComponentTray" /> 类的新实例。</summary>
      <param name="mainDesigner">
        <see cref="T:System.ComponentModel.Design.IDesigner" />，它是当前项目的主设计器或文档设计器。</param>
      <param name="serviceProvider">可用于获得设计时服务的 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary>向组件栏添加组件。</summary>
      <param name="component">要添加到组件栏的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary>获取或设置一个值，该值指示是否自动对齐组件栏项。</summary>
      <returns>如果组件栏项自动排列，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>获取一个值，该值指示指定的工具是否可用于创建新组件。</summary>
      <returns>如果指定的工具可用于创建组件，则为 true；否则为 false。</returns>
      <param name="tool">要测试的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary>获取一个值，该值指示是否可显示指定的组件。</summary>
      <returns>如果可以显示该组件，则为 true；否则为 false。</returns>
      <param name="component">要测试的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary>获取包含在组件栏中的组件数。</summary>
      <returns>组件栏中的组件数。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary>从指定的工具箱项中创建一个组件，然后将该组件添至当前文档，并在组件栏中显示该组件的表示形式。</summary>
      <param name="tool">要从中创建组件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary>向用户显示错误信息，其中包括有关指定的异常的信息。</summary>
      <param name="e">要显示其相关信息的异常。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.ComponentTray" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary>获取指定组件相对于组件栏的左上角的位置。</summary>
      <returns>指示所指定组件的坐标的 <see cref="T:System.Drawing.Point" />；或者，如果未能在组件栏中找到指定的组件，则为空 <see cref="T:System.Drawing.Point" />。 空 <see cref="T:System.Drawing.Point" /> 具有等于 true 的 <see cref="P:System.Drawing.Point.IsEmpty" /> 属性，并且，通常具有分别都等于零的 <see cref="P:System.Drawing.Point.X" /> 属性和 <see cref="P:System.Drawing.Point.Y" /> 属性。</returns>
      <param name="receiver">要检索其位置的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary>类似于 <see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />，给定一个起始组件时，该方法返回组件栏中的下一个组件。</summary>
      <returns>组件栏中的下一个组件，如果遇到列表末尾（在 <paramref name="forward" /> 为 false 时为列表的开头），则为 null。</returns>
      <param name="component">从其开始枚举的组件。</param>
      <param name="forward">如果为 true，则向前枚举列表；否则（为 false 时）向后枚举列表。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary>获取所请求的服务类型。</summary>
      <returns>所请求的服务类型实例，如果未能找到服务，则为 null。</returns>
      <param name="serviceType">要检索的服务类型。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary>获取 Location 扩展程序属性的值。</summary>
      <returns>一个 <see cref="T:System.Drawing.Point" />，表示 <paramref name="receiver" /> 的位置。</returns>
      <param name="receiver">接收位置扩展程序属性的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary>测试某组件是否存在于组件栏中。</summary>
      <returns>如果组件栏上显示有 <paramref name="comp" />，则为 true；否则为 false。</returns>
      <param name="comp">要测试其是否存在于组件栏中的组件。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>在将已拖动对象放到组件栏上时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>在组件栏上拖动对象且对象已进入组件栏上的区域时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary>在将对象拖出组件栏上的区域时调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>在将对象拖动到组件栏上时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>在 OLE 拖放操作期间调用，向组件栏提供机会来向用户反馈有关将对象置于指定点的结果。</summary>
      <param name="gfevent">为事件提供数据的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>引发 <see cref="E:System.Windows.Forms.Control.Layout" /> 事件。</summary>
      <param name="levent">包含事件数据的 <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary>在取消鼠标拖动选择操作时调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>在组件栏上双击鼠标时调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>在按下鼠标键时调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>在鼠标光标位置发生更改时调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>在已释放鼠标键时调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.Windows.Forms.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>在应该刷新组件栏视图时调用。</summary>
      <param name="pe">为事件提供数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary>调用以设置鼠标光标。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary>从组件栏中移除指定的组件。</summary>
      <param name="component">要从组件栏中移除的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>将所指定组件的位置设置为指定的位置。</summary>
      <param name="receiver">要设置其位置的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="location">
        <see cref="T:System.Drawing.Point" />，指示所指定组件的新位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary>设置 Location 扩展程序属性的值。</summary>
      <param name="receiver">接收位置扩展程序属性的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="location">一个 <see cref="T:System.Drawing.Point" />，表示 <paramref name="receiver" /> 的位置。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary>获取或设置一个值，该值指示组件栏是否显示大图标来表示组件栏中的各个组件。</summary>
      <returns>如果显示大图标，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />。</summary>
      <returns>如果此对象可以扩展程序属性提供给指定对象，则为 true；否则为 false。</returns>
      <param name="component">要接收扩展程序属性的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary>扩展 <see cref="T:System.Windows.Forms.Control" /> 的设计模式行为。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary>为设计器指定可访问对象。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary>获取分配给该控件的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</summary>
      <returns>分配给该控件的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary>获取与设计器所管理的组件关联的组件集合。</summary>
      <returns>与设计器所管理的组件关联的组件。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary>获取或设置一个值，该值指示调整手柄的分配是否取决于 <see cref="P:System.Windows.Forms.Control.AutoSize" /> 属性的值。</summary>
      <returns>如果调整手柄的分配取决于 <see cref="P:System.Windows.Forms.Control.AutoSize" /> 和 AutoSizeMode 属性的值，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary>从设计环境获取 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />，若该服务不可用则为 null。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary>指示指定设计器的控件是否可以成为此设计器控件的父级。</summary>
      <returns>如果由指定设计器管理的控件可以成为由此设计器管理的控件的父级，则为 true；否则为 false。</returns>
      <param name="parentDesigner">
        <see cref="T:System.ComponentModel.Design.IDesigner" />，它可管理要检查的控件。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary>获取设计器正在设计的控件。</summary>
      <returns>设计器正在设计的控件。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary>提供对 Windows 消息的默认处理。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary>向用户显示有关所指定异常的信息。</summary>
      <param name="e">要显示的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary>启用子控件的设计时功能。</summary>
      <returns>如果可以启用子控件的设计时功能，则为 true；如果宿主基础结构不支持这一功能，则为 false。</returns>
      <param name="child">要为其启用设计模式的子控件。</param>
      <param name="name">为最终用户公开的 <paramref name="child" /> 名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> 或 <paramref name="name" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary>启用或禁用对正在设计的控件的拖放支持。</summary>
      <param name="value">要启用对控件的拖放支持，则为 true；如果该控件不应有拖放支持，则为 false。 默认值为 false。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary>获取一个值，该值指示是否可以在该设计器组件上绘制拖动矩形。</summary>
      <returns>如果可以绘制拖动矩形，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>返回表示此控件的边界的 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />。</summary>
      <returns>表示此控件的边界的 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />。</returns>
      <param name="selectionType">一个指定选择状态的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>获取一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合，其中的 Glyph 对象表示标准控件的选择边框和抓取手柄。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。</returns>
      <param name="selectionType">一个指定选择状态的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>指示该控件是否应处理在指定点单击鼠标的操作。</summary>
      <returns>如果在指定点单击的操作将由该控件处理，则为 true；否则为 false。</returns>
      <param name="point">
        <see cref="T:System.Drawing.Point" />，它指示屏幕坐标中单击鼠标的位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary>将来自指定控件的子控件的消息路由到设计器。</summary>
      <param name="firstChild">要处理的第一个子级 <see cref="T:System.Windows.Forms.Control" />。 此方法可以为控件的子级递归地调用其自身。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary>获取设计器的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</summary>
      <returns>如果设计器是根设计器，则为 <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" />；否则，为父设计器的 <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> 属性值。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>用指定的组件初始化设计器。</summary>
      <param name="component">要与设计器关联的 <see cref="T:System.ComponentModel.IComponent" />。 此组件必须始终为 <see cref="T:System.Windows.Forms.Control" /> 的一个实例，或从其中派生。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>重新初始化现有组件。</summary>
      <param name="defaultValues">要应用于属性的默认值的名称/值字典。 如果未指定默认值，则可能为 null。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>初始化新创建的组件。</summary>
      <param name="defaultValues">要应用于属性的默认值的名称/值字典。 如果未指定默认值，则可能为 null。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary>返回 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 中具有指定索引的内部控件设计器。</summary>
      <returns>指定索引处的 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</returns>
      <param name="internalControlIndex">一个用于选择内部控件设计器的指定索引。 索引是从零开始的。</param>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary>定义一个本地 <see cref="T:System.Drawing.Point" />，它表示无效 <see cref="T:System.Drawing.Point" /> 的值。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary>返回 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 中内部控件设计器的数目。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 中内部控件设计器的数目。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>显示上下文菜单，并提供在上下文菜单将要显示时执行附加处理的机会。</summary>
      <param name="x">上下文菜单显示处的 x 坐标。</param>
      <param name="y">上下文菜单显示处的 y 坐标。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary>提供在创建控件处理程序之后立即执行附加处理的机会。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>接收调用以清理拖放操作。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>在将拖放对象放置到控件设计器视图上时接收调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>在拖放操作进入控件设计器视图时接收调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>在拖放操作离开控件设计器视图时接收调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>在控件设计器视图上拖动拖放对象时接收调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>在进行拖放操作时接收调用，以在拖动操作进行的同时基于鼠标的位置提供可视提示。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>当响应在组件上按住鼠标左键不放这一操作时接收调用。</summary>
      <param name="x">屏幕坐标中鼠标的 x 位置。</param>
      <param name="y">屏幕坐标中鼠标的 y 位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>在拖放操作结束时接收调用，以完成或取消此次操作。</summary>
      <param name="cancel">要取消拖动，为 true；要提交拖动，为 false。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>为拖放操作期间的每一次鼠标移动接收调用。</summary>
      <param name="x">屏幕坐标中鼠标的 x 位置。</param>
      <param name="y">屏幕坐标中鼠标的 y 位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary>当鼠标首次进入控件时接收调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary>鼠标在控件上悬停后接收调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary>当鼠标首次进入控件时接收调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>当设计器正在管理的控件绘制了它的图面时接收调用，这样设计器就可以在控件顶部绘制任意附加装饰。</summary>
      <param name="pe">
        <see cref="T:System.Windows.Forms.PaintEventArgs" />，设计器可以使用它在控件上绘制。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary>在设计器初始化时调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary>在每次需要设置光标时接收调用。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 的父组件。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 的父组件；否则（没有父组件时）为 null。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary>获取一个值，该值指示在拖动操作期间 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 是否允许按对齐线对齐。</summary>
      <returns>如果在主要拖动控件位于该设计器之上时 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 允许在拖动操作期间按对齐线对齐，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整组件通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" />，包含组件的类的属性。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary>获取指示组件的移动功能的选择规则。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.SelectionRules" /> 值的按位组合。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary>获取表示此控件的重要对齐点的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 对象的列表。</summary>
      <returns>表示此控件的重要对齐点的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 对象的列表。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary>将所指定控件的子级的消息路由到每个控件而不是路由到父级设计器。</summary>
      <param name="firstChild">要处理的第一个子级 <see cref="T:System.Windows.Forms.Control" />。 此方法可以为控件的子级递归地调用其自身。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息，并可以选择将其路由到控件。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary>为 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 提供 <see cref="T:System.Windows.Forms.AccessibleObject" />。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary>使用指定的设计器和控件初始化 <see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> 类的新实例。</summary>
      <param name="designer">辅助性对象的 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</param>
      <param name="control">辅助性对象的 <see cref="T:System.Windows.Forms.Control" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary>获取定义设计器的辅助性对象的边界的点。</summary>
      <returns>指示设计器的辅助性对象的边界的 <see cref="T:System.Drawing.Rectangle" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary>获取描述指定对象默认操作的字符串。</summary>
      <returns>指定对象默认操作的说明。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary>获取说明指定对象可视外观的字符串。</summary>
      <returns>用户可看到的对象外观的说明，或者，如果该对象没有说明，则是 null。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary>检索对应于指定索引的辅助性子级。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" />，表示与指定索引对应的辅助性子级。</returns>
      <param name="index">辅助性子级的从零开始的索引。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary>检索属于辅助性对象的子级的个数。</summary>
      <returns>属于辅助性对象的子级的个数。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary>检索具有键盘焦点的对象。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" />，指定当前已设定焦点的子级。 如果对象本身设定了焦点，此方法返回调用对象。 如果没有对象具有焦点，则返回 null。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary>检索当前选定的子级。</summary>
      <returns>表示当前选定子级的 <see cref="T:System.Windows.Forms.AccessibleObject" />。 如果选定了对象本身，则此方法返回调用对象。 如果当前没有选定子级且对象本身没有焦点，则返回 null。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary>在指定的屏幕坐标位置检索子对象。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" />，表示位于给定屏幕坐标位置的子对象。 如果对象本身位于指定位置，则此方法返回调用对象。 如果测试位置没有对象，则返回 null。</returns>
      <param name="x">水平屏幕坐标。</param>
      <param name="y">垂直屏幕坐标。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary>获取或设置对象名。</summary>
      <returns>对象名，或者，如果尚未设置属性，则是 null。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary>获取辅助性对象的父级。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleObject" />，表示辅助性对象的父级，或者，如果没有父对象，则是 null。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary>获取此辅助性对象的角色。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleRole" /> 值之一，或者，如果没有指定角色，则是 <see cref="F:System.Windows.Forms.AccessibleRole.None" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary>获取此辅助性对象的状态。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.AccessibleStates" /> 值之一，或者，如果没有设置状态，则是 <see cref="F:System.Windows.Forms.AccessibleStates.None" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary>获取或设置辅助性对象的值。</summary>
      <returns>辅助性对象的值，或者，如果此对象没有设置值，则是 null。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary>提供对设计器的获取选项值和设置选项值的访问。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary>获取或设置一个值，该值指示启用或禁用 <see cref="T:System.Windows.Forms.ToolStrip" /> 控件的就地编辑。</summary>
      <returns>如果启用 <see cref="T:System.Windows.Forms.ToolStrip" /> 控件的就地编辑，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary>获取或设置表示网格单元尺寸的 <see cref="T:System.Drawing.Size" />。</summary>
      <returns>一个表示网格单元尺寸的 <see cref="T:System.Drawing.Size" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary>获取或设置一个值，该值指定在创建组件时设计器是否自动显示组件的智能标记面板。</summary>
      <returns>如果允许组件的智能标记面板在创建时自动打开，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary>获取或设置一个值，该值指示启用或禁用设计器中的网格。</summary>
      <returns>如果启用网格，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary>获取或设置一个值，该值指示控件是否自动放置于网格坐标处。</summary>
      <returns>如果启用对齐功能，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary>获取或设置一个值，该值指示启用或禁用组件缓存。</summary>
      <returns>如果启用组件缓存，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary>获取或设置一个值，该值指示启用或禁用设计器中的智能标记。</summary>
      <returns>如果启用设计器中的智能标记，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary>获取或设置一个值，该值指示启用或禁用设计器中的对齐线。</summary>
      <returns>如果启用设计器中的对齐线，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DockEditor">
      <summary>提供用于指定 <see cref="P:System.Windows.Forms.Control.Dock" /> 属性的用户界面。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.DockEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 GetEditorStyle 提供的编辑器样式编辑指定的对象值。 提供服务提供程序以获取任何所需要的编辑服务。</summary>
      <returns>新的对象值。 如果该对象的值尚未更改，则这应返回与传递给它的对象相同的对象。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">可通过其获取编辑服务的服务提供程序对象。</param>
      <param name="value">正在编辑的值的实例。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>检索 EditValue 方法的编辑样式。 如果不支持该方法，则返回 None。</summary>
      <returns>一个指示所提供的编辑样式的枚举值。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary>设计器基类，用于扩展支持嵌套控件并应接收滚动消息的 <see cref="T:System.Windows.Forms.Control" /> 的设计模式行为，并为其提供根级设计模式视图。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>检查是否存在菜单编辑器服务，如果尚未存在，则创建一个。</summary>
      <param name="c">
        <see cref="T:System.ComponentModel.IComponent" />，要确保具有上下文菜单服务。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>获取表示 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。</returns>
      <param name="selectionType">一个 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值，它指定选择状态。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>指示设计器是否支持指定的工具。</summary>
      <returns>如果应在工具箱上启用该工具，则为 true；如果文档设计器不知道如何使用该工具，则为 false。</returns>
      <param name="tool">要对其进行工具箱支持测试的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>用指定的组件初始化设计器。</summary>
      <param name="component">要与设计器关联的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="F:System.Windows.Forms.Design.DocumentDesigner.menuEditorService">
      <summary>将 menuEditorService 变量初始化为 null。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>在应显示上下文菜单时调用。</summary>
      <param name="x">上下文菜单显示位置的水平屏幕坐标。</param>
      <param name="y">上下文菜单显示位置的垂直屏幕坐标。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary>在创建设计器的句柄后立即进行调用。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整组件通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" />，包含组件的类的属性。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary>获取设计器的 <see cref="T:System.Windows.Forms.Design.SelectionRules" />。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.SelectionRules" /> 值的按位组合。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>有关此成员的说明，请参见 <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</summary>
      <returns>表示此设计器的视图的对象。</returns>
      <param name="technology">指示特定视图技术的 <see cref="T:System.ComponentModel.Design.ViewTechnology" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>有关此成员的说明，请参见 <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />。</summary>
      <returns>受支持的 <see cref="T:System.ComponentModel.Design.ViewTechnology" /> 值的数组。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />。</summary>
      <returns>如果工具箱支持该工具而且该工具可启用，则为 true；如果该文档设计器不知道如何使用该工具，则为 false。</returns>
      <param name="tool">要进行工具箱支持测试的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />。</summary>
      <param name="tool">要选择的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary>选择指定的工具。</summary>
      <param name="tool">要为其创建组件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary>为当前文档提供管理事件处理程序的系统方法。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.EventHandlerService" /> 类的新实例。</summary>
      <param name="focusWnd">正在设计的 <see cref="T:System.Windows.Forms.Control" />。</param>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary>激发一个 OnEventHandlerChanged 事件。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary>获取附加了事件处理程序的控件。</summary>
      <returns>通过构造函数附加的 <see cref="T:System.Windows.Forms.Control" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary>获取具有指定类型的当前活动事件处理程序。</summary>
      <returns>处理程序的实例，或者 null（如果没有请求类型的处理程序）。</returns>
      <param name="handlerType">要获取的处理程序的类型。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary>从堆栈中弹出给定处理程序。</summary>
      <param name="handler">要从堆栈移除的处理程序。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary>将一个新的事件处理程序推入堆栈。</summary>
      <param name="handler">要添加到堆栈的处理程序。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FileNameEditor">
      <summary>提供用于选择文件名的用户界面。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.FileNameEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用由 <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法提供的编辑器样式编辑指定的对象。</summary>
      <returns>新的对象值。 如果该对象的值尚未更改，则这应返回与传递给它的对象相同的对象。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">可通过其获取编辑服务的服务提供程序对象。</param>
      <param name="value">正在编辑的值的实例。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取 <see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法所使用的编辑样式。</summary>
      <returns>
        <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值之一，指示所提供的编辑样式。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
      <summary>在创建打开文件对话框时初始化此对话框。</summary>
      <param name="openFileDialog">用来选择文件名的 <see cref="T:System.Windows.Forms.OpenFileDialog" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor">
      <summary>提供从文件系统选择文件夹的用户界面。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.FolderNameEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 提供的编辑器样式编辑指定的对象。</summary>
      <returns>对象的新值，或者旧值（如果对象未能更新）。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">服务对象提供程序。</param>
      <param name="value">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取 <see cref="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法所使用的编辑样式。</summary>
      <returns>指示所提供的编辑样式的 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 枚举值。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser)">
      <summary>初始化文件夹浏览器对话框。</summary>
      <param name="folderBrowser">一个 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />，它用于选择文件夹。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser">
      <summary>表示一个对话框，用户可以通过该对话框选择文件夹。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Description">
      <summary>获取或设置文件夹上方显示的说明。</summary>
      <returns>文件夹上方显示的说明。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.DirectoryPath">
      <summary>获取用户选取的文件夹的目录路径。</summary>
      <returns>用户选取的文件夹的目录路径。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog">
      <summary>显示文件夹浏览器对话框。</summary>
      <returns>来自窗体的 <see cref="T:System.Windows.Forms.DialogResult" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary>显示具有指定所有者的文件夹浏览器对话框。</summary>
      <returns>来自窗体的 <see cref="T:System.Windows.Forms.DialogResult" />。</returns>
      <param name="owner">将拥有模式对话框的顶级窗口（例如：System.Windows.Forms.Form）。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.StartLocation">
      <summary>获取或设置根节点的起始位置。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder" />，它指示文件夹浏览器最初的浏览位置。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Style">
      <summary>浏览文件夹时文件夹浏览器将使用的样式。 应为 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> 枚举中的标志的组合。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> 枚举成员，它指示 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> 要使用的行为。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder">
      <summary>定义用于指示文件夹浏览器最初浏览到的根文件夹的标识符。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Desktop">
      <summary>用户的桌面。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Favorites">
      <summary>用户的收藏夹列表。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyComputer">
      <summary>“我的电脑”图标的内容。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyDocuments">
      <summary>用户的“我的文档”文件夹。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyPictures">
      <summary>用户存储图片的位置。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetAndDialUpConnections">
      <summary>网络和拨号连接。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetworkNeighborhood">
      <summary>网上邻居。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Printers">
      <summary>包含已安装打印机的文件夹。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Recent">
      <summary>包含指向最近打开过的文件的快捷方式的文件夹。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.SendTo">
      <summary>包含指向要将文档发送到其中的应用程序的快捷方式的文件夹。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.StartMenu">
      <summary>用户的开始菜单。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Templates">
      <summary>用户的文件模板。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles">
      <summary>定义用于指定 <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> 的行为的标识符。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForComputer">
      <summary>文件夹浏览器只能返回计算机相关信息。 如果用户选择计算机之外的任何内容，“确定”按钮就会变灰。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForEverything">
      <summary>文件夹浏览器可以返回它能够返回的任何对象。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForPrinter">
      <summary>文件夹浏览器只能返回打印机相关信息。 如果用户选择打印机之外的任何内容，“确定”按钮就会变灰。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToDomain">
      <summary>文件夹浏览器在对话框的树视图控件中将不会包括域级别下的网络文件夹，也不允许定位到域之外的网络位置。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToFilesystem">
      <summary>文件夹浏览器将只返回本地文件系统目录。 如果用户选择的文件夹不属于本地文件系统，“确定”按钮就会变灰。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToSubfolders">
      <summary>文件夹浏览器将只返回根文件夹或根文件夹的子文件夹中的本地文件系统的对象。 如果用户选择的根文件夹的子文件夹不属于本地文件系统，“确定”按钮就会变灰。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.ShowTextBox">
      <summary>文件夹浏览器在浏览对话框中包含一个 <see cref="T:System.Windows.Forms.TextBox" /> 控件，可供用户键入项名称。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.IContainsThemedScrollbarWindows">
      <summary>定义有关获得当窗口的滚动条在 Visual Studio 设计器中显示时需要如何主题化的信息的方法。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows">
      <summary>获取代表窗口以及当在 Visual Studio 设计器中显示时其滚动条如何主题化的对象的枚举。</summary>
      <returns>代表窗口以及当在 Visual Studio 设计器中显示时其滚动条如何主题化的对象的枚举。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary>序列化字符串字典。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将指定的已序列化代码文档对象模型 (CodeDOM) 对象反序列化为一个对象。</summary>
      <returns>反序列化的 CodeDOM 对象。</returns>
      <param name="manager">在反序列化进程中使用的序列化管理器接口。</param>
      <param name="codeObject">要进行反序列化的已序列化 CodeDOM 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> 或 <paramref name="codeObject" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>将指定对象序列化为一个代码文档对象模型 (CodeDOM) 对象。</summary>
      <returns>一个 CodeDOM 对象，它表示已序列化的对象。</returns>
      <param name="manager">要在序列化过程中使用的序列化管理器。</param>
      <param name="value">要序列化的对象。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListImageEditor">
      <summary>提供一个编辑器，它能执行位图 (.bmp) 文件的默认文件搜索。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ImageListImageEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用 <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法提供的编辑样式编辑指定的对象值。</summary>
      <returns>一个表示新值的 <see cref="T:System.Object" />。 如果对象的值尚未更改，则 <see cref="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> 方法返回传递给它的对象。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />，通过它可以获得编辑服务。</param>
      <param name="value">一个正在编辑的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetFileDialogDescription">
      <summary>获取该编辑器所提供的默认文件列表筛选器的说明。</summary>
      <returns>对默认文件列表筛选器的说明。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetImageExtenders">
      <summary>获取受支持图像类型的数组。</summary>
      <returns>一个表示受支持图像类型的 <see cref="T:System.Type" /> 数组。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个值，该值指示该编辑器是否支持绘制对象值表示形式。</summary>
      <returns>如果实现了 <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />，则为 true；否则为 false。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>绘制指定的 <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> 所指示的值。</summary>
      <param name="e">指示绘制内容和绘制位置的 <see cref="T:System.Drawing.Design.PaintValueEventArgs" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.IMenuEditorService">
      <summary>提供对菜单编辑服务的访问。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.GetMenu">
      <summary>获取当前菜单。</summary>
      <returns>当前 <see cref="T:System.Windows.Forms.Menu" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.IsActive">
      <summary>指示当前菜单是否处于活动状态。</summary>
      <returns>如果当前菜单当前处于活动状态，则为 true；否则，为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.MessageFilter(System.Windows.Forms.Message@)">
      <summary>允许编辑器服务截获 Win32 消息。</summary>
      <returns>如果消息是针对控件的，则为 true；否则，为 false。</returns>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetMenu(System.Windows.Forms.Menu)">
      <summary>设置指定菜单在窗体上是可见的。</summary>
      <param name="menu">要呈现的 <see cref="T:System.Windows.Forms.Menu" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.IMenuEditorService.SetSelection(System.Windows.Forms.MenuItem)">
      <summary>设置当前菜单的选定菜单项。</summary>
      <param name="item">要设置为当前选定菜单项的 <see cref="T:System.Windows.Forms.MenuItem" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.MaskDescriptor">
      <summary>定义一组派生类成员，以为掩码文本框 UI 类型编辑器提供选项。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Culture">
      <summary>获取表示为其创作掩码的区域设置的 <see cref="T:System.Globalization.CultureInfo" />。</summary>
      <returns>表示为其创作掩码的区域设置的 <see cref="T:System.Globalization.CultureInfo" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.Equals(System.Object)">
      <summary>确定指定的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> 是否等于当前的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />。</summary>
      <returns>如果指定的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> 等于当前的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />，则为 true；否则为 false。</returns>
      <param name="maskDescriptor">与当前的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> 进行比较的 <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.GetHashCode">
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor)">
      <summary>返回一个值，该值指示指定的掩码说明符是否有效以及是否可以添加到掩码列表中。</summary>
      <returns>如果 <paramref name="maskDescriptor" /> 有效，则为 true；否则为 false。</returns>
      <param name="maskDescriptor">要测试其有效性的掩码说明符。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor,System.String@)">
      <summary>返回一个指示指定的掩码说明符是否有效的值，并在掩码说明符无效时提供错误说明。</summary>
      <returns>如果 <paramref name="maskDescriptor" /> 有效，则为 true；否则为 false。</returns>
      <param name="maskDescriptor">要测试其有效性的掩码说明符。</param>
      <param name="validationErrorDescription">表示验证错误的字符串。 如果没有出现任何验证错误，则 <paramref name="validationErrorDescription" /> 为 <see cref="F:System.String.Empty" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Mask">
      <summary>获取正在定义的掩码。</summary>
      <returns>一个包含正在定义的掩码的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Name">
      <summary>获取掩码的用户友好名称。</summary>
      <returns>一个包含 <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" /> 的名称或简短说明的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Sample">
      <summary>获取掩码的格式化字符串示例。</summary>
      <returns>一个 <see cref="T:System.String" />，其中包含通过使用 <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" /> 格式化的文本。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.ToString">
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.ValidatingType">
      <summary>获取提供与掩码相关联的验证的类型。</summary>
      <returns>作为格式化字符串的验证依据的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary>定义一组 <see cref="T:System.ComponentModel.Design.CommandID" /> 字段，每个字段都与宿主环境提供的命令函数相对应。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.MenuCommands" /> 类的新实例。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary>可用于访问组件栏菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary>可用于访问容器菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary>可用于访问设计器的属性页的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary>可用于访问编辑标签处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary>可用于访问取消按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary>可用于访问默认按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary>可用于访问 End 按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary>可用于访问 Home 按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary>可用于访问智能标记调用处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary>可用于访问下移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary>可用于访问左移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary>可用于访问右移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary>可用于访问上移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary>可用于访问向下微移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary>可用于访问微移高度减小按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary>可用于访问微移高度增加按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary>可用于访问向左微移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary>可用于访问向右微移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary>可用于访问向上微移按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary>可用于访问微移宽度减小按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary>可用于访问微移宽度增加按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary>可用于访问反向取消按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary>可用于访问选择下一个按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary>可用于访问选择上一个按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary>可用于访问 Shift-End 按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary>可用于访问 Shift-Home 按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary>可用于访问尺寸高度减小按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary>可用于访问尺寸高度增加按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary>可用于访问尺寸宽度减小按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary>可用于访问尺寸宽度增加按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary>可用于访问 Tab 键顺序选择按键处理程序的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary>可用于访问选择菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary>可用于设置状态矩形的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary>可用于设置状态矩形文本的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary>可用于访问组件栏选择菜单的 <see cref="T:System.ComponentModel.Design.CommandID" />。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary>扩展支持嵌套控件的 <see cref="T:System.Windows.Forms.Control" /> 的设计模式行为。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary>添加填充对齐线。</summary>
      <param name="snapLines">包含 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 对象的 <see cref="T:System.Collections.ArrayList" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary>获取一个值，该值指示选择的控件是否重新设置为父级。</summary>
      <returns>如果要将设计器图面上以“套索”选择方式选择的控件重新设置为此设计器的控件的父级，则为 true。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary>获取一个值，指示拖动工具箱项悬停于设计器图面上时是否应绘制一般拖动框。</summary>
      <returns>如果拖动工具箱项悬停于设计器图面上时应绘制一般拖动框，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary>获取一个值，指示控件拖放到 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> 上时是否应保持其 z-顺序。</summary>
      <returns>如果控件放到 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> 上时应保持其 z-顺序，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary>向父容器添加组件时调用。</summary>
      <returns>如果可以添加 <paramref name="component" />，则为 true；否则为 false。</returns>
      <param name="component">要测试是否有错误的组件。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary>指示指定的控件是否可以是由此设计器管理的控件的子级。</summary>
      <returns>如果指定的控件可以是由此设计器管理的控件的子级，则为 true；否则为 false。</returns>
      <param name="control">要测试的 <see cref="T:System.Windows.Forms.Control" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary>指示由指定设计器管理的控件是否可以是由此设计器管理的控件的子级。</summary>
      <returns>如果由指定设计器管理的控件可以是由此设计器管理的控件的子级，则为 true；否则为 false。</returns>
      <param name="controlDesigner">待测控件的设计器。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary>从指定工具创建一个组件或控件并将其添加到当前的设计文档。</summary>
      <param name="tool">要从中创建组件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary>从指定工具创建组件或控件，并将其添至当前设计文档中的指定位置。</summary>
      <param name="tool">要从中创建组件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="location">设计时视图屏幕坐标中的 <see cref="T:System.Drawing.Point" />，此位置将作为组件的中心。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary>从指定工具创建组件或控件，并将其添至当前设计文档中所指定矩形的界限内。</summary>
      <param name="tool">要从中创建组件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="bounds">
        <see cref="T:System.Drawing.Rectangle" />，指示从工具中创建的组件的位置和大小。 <see cref="T:System.Drawing.Rectangle" /> 的 <see cref="P:System.Drawing.Rectangle.X" /> 和 <see cref="P:System.Drawing.Rectangle.Y" /> 值指示组件左上角的设计时视图屏幕坐标。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>为所有的 <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" /> 方法提供核心功能。</summary>
      <returns>从工具中创建的组件的数组。</returns>
      <param name="tool">要从中创建组件的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
      <param name="x">如果指定了大小，则为工具的左边缘位置在设计时视图坐标中的水平位置；如果没有指定大小，则为工具的中心在设计时视图坐标中的水平位置。</param>
      <param name="y">如果指定了大小，则为工具的上边缘位置在设计时视图坐标中的垂直位置；如果没有指定大小，则为工具的中心在设计时视图坐标中的垂直位置。</param>
      <param name="width">工具的宽度。 如果 <paramref name="hasSize" /> 参数被设置为 false，则忽略此参数。</param>
      <param name="height">工具的高度。 如果 <paramref name="hasSize" /> 参数被设置为 false，则忽略此参数。</param>
      <param name="hasLocation">如果为组件指定了位置，则为 true；如果组件将定位于当前所选控件的中心，则为 false。</param>
      <param name="hasSize">如果为组件指定了大小，则为 true；如果使用组件的默认高度值和宽度值，则为 false。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary>获取已添至设计器的控件的默认位置。</summary>
      <returns>
        <see cref="T:System.Drawing.Point" />，指示已添至设计器的控件的默认位置。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary>获取或设置一个值，该值指示是否应为此设计器在控件上绘制网格。</summary>
      <returns>如果应在此设计器中的控件上绘制网格，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary>获取一个值，该值指示设计器是否绘制拖动矩形。</summary>
      <returns>如果绘制拖动矩形，则为 true；否则为 false。 默认值为 true。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary>从所指定组件的设计器中获取控件。</summary>
      <returns>指定组件所属的 <see cref="T:System.Windows.Forms.Control" />。</returns>
      <param name="component">要为其检索控件的组件。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>获取表示控件的边界的主体标志符号。</summary>
      <returns>表示控件的边界的主体标志符号。</returns>
      <param name="selectionType">一个 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值，它指定选择状态。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary>获取一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合，其中的 Glyph 对象表示标准控件的选择边框和抓取手柄。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。</returns>
      <param name="selectionType">一个 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值，它指定选择状态。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary>由基类用来确定在向其添加组件时是否返回正在设计的控件或其他某个 <see cref="T:System.ComponentModel.Container" />。</summary>
      <returns>组件的父 <see cref="T:System.Windows.Forms.Control" />。</returns>
      <param name="component">为其检索父 <see cref="T:System.Windows.Forms.Control" /> 的组件。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary>更新所指定矩形的位置，如果启用了网格对齐模式，则对其进行调整以便对齐网格。</summary>
      <returns>指示设计时视图屏幕坐标中组件位置的矩形。 如果未做更改，此方法会返回原始矩形。</returns>
      <param name="originalRect">
        <see cref="T:System.Drawing.Rectangle" />，指示更新的组件的初始位置。</param>
      <param name="dragRect">
        <see cref="T:System.Drawing.Rectangle" />，指示组件的新位置。</param>
      <param name="updateSize">如果已做出更改，则为 true，以更新矩形的大小；否则为 false。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary>获取或设置网格的各个方格的大小，该网格在设计器处于网格绘制模式时绘制。</summary>
      <returns>
        <see cref="T:System.Drawing.Size" />，表示在窗体或用户控件上绘制的网格的各个方格的大小。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Size" /> 超出了 <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" /> 的允许范围。 默认的最小值是 2，而默认的最大值是 200。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>用指定的组件初始化设计器。</summary>
      <param name="component">要与设计器关联的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <param name="defaultValues">要应用于属性的默认值的名称/值字典。 如果未指定默认值，则可能为 null。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary>从指定的 <see cref="T:System.Drawing.Design.ToolboxItem" /> 创建工具。</summary>
      <param name="toInvoke">要与该工具一起使用的 <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />。</param>
      <param name="tool">要从其创建工具的 <see cref="T:System.Drawing.Design.ToolboxItem" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary>获取一个值，该值指示在拖动操作过程中设计器是否具有一个有效工具。</summary>
      <returns>如果创建组件，则为拖动的工具，如果没有任何工具，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary>按顺序调用以清理拖放操作。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>在将拖放对象放置到控件设计器视图上时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>在拖放操作进入控件设计器视图时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>在拖放操作离开控件设计器视图时调用。</summary>
      <param name="e">为事件提供数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>在控件设计器视图上拖动拖放对象时调用。</summary>
      <param name="de">为事件提供数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>调用以响应在组件上时按下鼠标左键并按住不放这一操作。</summary>
      <param name="x">屏幕坐标中鼠标的 x 坐标。</param>
      <param name="y">屏幕坐标中鼠标的 y 坐标。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>在拖放操作结束时调用，以完成或取消此次操作。</summary>
      <param name="cancel">要取消拖动操作，为 true；要提交操作，则为 false。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>为拖放操作期间鼠标的每一次移动而调用。</summary>
      <param name="x">屏幕坐标中鼠标的 x 坐标。</param>
      <param name="y">屏幕坐标中鼠标的 y 坐标。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>当设计器正在管理的控件绘制了它的表面时调用，这样设计器就可以在控件顶部绘制任意附加装饰。</summary>
      <param name="pe">为事件提供数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary>提供更改当前鼠标光标的机会。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>调整该组件将通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集。</summary>
      <param name="properties">
        <see cref="T:System.Collections.IDictionary" />，包含组件的类的属性。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary>获取表示此控件的重要对齐点的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 对象的列表。</summary>
      <returns>表示此控件的重要对齐点的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 对象的列表。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary>设计器基类，用于扩展应接收滚动消息的 <see cref="T:System.Windows.Forms.Control" /> 的设计模式行为。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>指示该控件是否应处理在指定点单击鼠标的操作。</summary>
      <returns>如果在指定点单击的操作将由该控件处理，则为 true；否则为 false。</returns>
      <param name="pt">
        <see cref="T:System.Drawing.Point" />，它指示屏幕坐标中单击鼠标的位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>处理 Windows 消息并将 WM_HSCROLL 和 WM_VSCROLL 消息传递给设计时的控件。</summary>
      <param name="m">要处理的 <see cref="T:System.Windows.Forms.Message" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary>定义用于指示组件的选择规则的标识符。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary>指示组件支持在各个方向调整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary>指示组件支持从底端调整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary>指示组件支持从左边调整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary>指示组件被锁定到其容器。 重写此枚举的 <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />、<see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" /> 和 <see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> 位标志。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary>指示组件支持允许将它移动到屏幕上的位置属性。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary>指示没有特殊选择特性。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary>指示组件支持从右边调整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary>指示组件支持从顶端调整大小。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary>指示组件具有某种形式的可视用户界面并且选择服务正围绕此用户界面绘制选择边框。 如果所选组件具有此规则集，可假定此组件实现 <see cref="T:System.ComponentModel.IComponent" />，并且它与对应的设计器实例关联。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ShortcutKeysEditor">
      <summary>提供用于选取快捷键的编辑器。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.ShortcutKeysEditor" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>使用由 <see cref="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> 方法提供的编辑器样式编辑指定的对象值。</summary>
      <returns>
        <see cref="T:System.Object" /> 的新值。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="provider">
        <see cref="T:System.IServiceProvider" />，此编辑器可用其来获取服务。</param>
      <param name="value">要编辑的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取由 <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> 方法使用的编辑器样式。</summary>
      <returns>一个 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 值，指示 <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" /> 方法使用的编辑器的样式。</returns>
      <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarMode">
      <summary>一个值，指示窗口及其子窗口的滚动条当在 Visual Studio 设计器中显示时是否主题化。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.All">
      <summary>窗口及其所有子窗口都具有主题化的滚动条。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.None">
      <summary>窗口及其所有子窗口都不主题化。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.OnlyTopLevel">
      <summary>窗口具有主题化的滚动条，但其所有子窗口都不主题化。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarWindow">
      <summary>表示一个窗口和一个值，指示窗口滚动条当在 Visual Studio 设计器中显示时如何主题化。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Handle">
      <summary>窗口句柄。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Mode">
      <summary>一个值，指示窗口滚动条当在 Visual Studio 设计器中显示时如何主题化。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary>提供对 Windows 窗体设计器的获取选项值和设置选项值的访问。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary>获取由 <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" /> 公开的 <see cref="T:System.Windows.Forms.Design.DesignerOptions" />。</summary>
      <returns>由 <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" /> 公开的 <see cref="T:System.Windows.Forms.Design.DesignerOptions" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary>填充 <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />。</summary>
      <param name="options">要填充的集合。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary>管理与用户界面相关的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary>获取或设置与 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</summary>
      <returns>与 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 是否能够启用。</summary>
      <returns>如果启用了 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 集合。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象的集合。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary>强制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 刷新其装饰器窗口。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary>强制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 在给定的 <see cref="T:System.Drawing.Rectangle" /> 内刷新其装饰器窗口。</summary>
      <param name="rectangle">要使之无效的区域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary>强制 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 在给定的 <see cref="T:System.Drawing.Region" /> 内刷新其装饰器窗口。</summary>
      <param name="region">要使之无效的 <see cref="T:System.Drawing.Region" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary>表示由 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 管理的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 对象。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>用给定的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 类的新实例。</summary>
      <param name="callParentBehavior">如果应该调用父行为（如果存在），则为 true；否则为 false。</param>
      <param name="behaviorService">要使用的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callParentBehavior" /> 为 true 且 <paramref name="behaviorService" /> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary>获取应为此行为显示的光标。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.Cursor" /> 表示应为此行为显示的光标。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary>获取一个值，该值指示是否应该禁用 <see cref="T:System.ComponentModel.Design.MenuCommand" /> 对象。</summary>
      <returns>如果在此 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 处于活动状态时，该设计器接收的所有 <see cref="T:System.ComponentModel.Design.MenuCommand" /> 对象的状态应设置为 Enabled = false，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>截获命令。</summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.MenuCommand" />。 默认情况下，<see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> 返回 null。</returns>
      <param name="commandId">
        <see cref="T:System.ComponentModel.Design.CommandID" /> 对象。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>允许自定义的拖放行为。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象，拖放行为对其调用。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>允许自定义的拖入行为。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，拖入行为对其调用。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>允许自定义的拖离行为。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，拖离行为对其调用。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary>允许自定义的拖过行为。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，拖过行为对其调用。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>允许自定义的拖放反馈行为。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，拖放行为对其调用。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary>在丢失鼠标捕获时由装饰器窗口调用。</summary>
      <param name="g">一个 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，拖放行为对其调用。</param>
      <param name="e">一个 <see cref="T:System.EventArgs" />，其中包含事件数据。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>在任何双击消息进入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口时调用。</summary>
      <returns>如果消息已得到处理，则为 true；否则为 false。</returns>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">一个 <see cref="T:System.Windows.Forms.MouseButtons" /> 值，指示单击了哪个按钮。</param>
      <param name="mouseLoc">发生单击的位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>在任何鼠标按下消息进入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口时调用。</summary>
      <returns>如果消息已得到处理，则为 true；否则为 false。</returns>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">一个 <see cref="T:System.Windows.Forms.MouseButtons" /> 值，指示单击了哪个按钮。</param>
      <param name="mouseLoc">发生单击的位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>在任何鼠标输入消息进入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口时调用。</summary>
      <returns>如果消息已得到处理，则为 true；否则为 false。</returns>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary>在任何鼠标悬停消息进入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口时调用。</summary>
      <returns>如果消息已得到处理，则为 true；否则为 false。</returns>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="mouseLoc">发生悬停的位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>在任何鼠标离开消息进入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口时调用。</summary>
      <returns>如果消息已得到处理，则为 true；否则为 false。</returns>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary>在任何鼠标移动消息进入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口时调用。</summary>
      <returns>如果消息已得到处理，则为 true；否则为 false。</returns>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">一个 <see cref="T:System.Windows.Forms.MouseButtons" /> 值，指示单击了哪个按钮。</param>
      <param name="mouseLoc">发生移动的位置。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary>在任何鼠标弹起消息进入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口时调用。</summary>
      <returns>如果消息已得到处理，则为 true；否则为 false。</returns>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="button">一个 <see cref="T:System.Windows.Forms.MouseButtons" /> 值，指示单击了哪个按钮。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>将此拖放事件从装饰器窗口发送到相应的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 或经过命中测试的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <param name="g">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary>为 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> 和 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> 类的新实例。</summary>
      <param name="dragComponents">当前正被拖动的 <see cref="T:System.ComponentModel.IComponent" /> 对象的 <see cref="T:System.Collections.ICollection" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary>获取当前正被拖动的 <see cref="T:System.ComponentModel.IComponent" /> 对象的列表。</summary>
      <returns>当前正被拖动的 <see cref="T:System.ComponentModel.IComponent" /> 对象的 <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary>表示将处理 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> 和 <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> 事件的方法。 此类不能被继承。</summary>
      <param name="sender">事件源。</param>
      <param name="e">包含事件数据的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary>在设计器中管理用户界面。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</summary>
      <returns>装饰器的集合。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary>获取修饰器窗口的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <returns>装饰器窗口的 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary>将装饰器窗口中的 <see cref="T:System.Drawing.Point" /> 转换为屏幕坐标。</summary>
      <returns>屏幕坐标中已转换的 <see cref="T:System.Drawing.Point" /> 值。</returns>
      <param name="p">要转换的 <see cref="T:System.Drawing.Point" /> 值。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary>获取装饰器窗口在屏幕坐标中的位置。</summary>
      <returns>在屏幕坐标中相对于装饰器窗口的左上角的位置。</returns>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary>当 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 启动拖放操作时发生。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary>返回 <see cref="T:System.Windows.Forms.Control" /> 的边界 <see cref="T:System.Drawing.Rectangle" />。</summary>
      <returns>已转换为装饰器窗口坐标的 <see cref="T:System.Windows.Forms.Control" /> 的边界 <see cref="T:System.Drawing.Rectangle" />。</returns>
      <param name="c">要平移的 <see cref="T:System.Windows.Forms.Control" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary>返回转换为装饰器窗口坐标的 <see cref="T:System.Windows.Forms.Control" /> 的位置。</summary>
      <returns>一个 <see cref="T:System.Drawing.Point" /> 值，该值指示 <paramref name="c" /> 在装饰器窗口坐标中的位置。</returns>
      <param name="c">要平移的 <see cref="T:System.Windows.Forms.Control" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary>获取位于行为堆栈顶部的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />，但不移除它。</summary>
      <returns>位于行为堆栈顶部的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary>释放由 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 使用的所有资源。</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary>当 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 完成拖动操作时发生。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>返回行为堆栈中紧接在给定 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 之后的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</summary>
      <returns>行为堆栈中紧接在 <paramref name="behavior" /> 之后的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />，或者，如果后面不存在行为，则为 null。</returns>
      <param name="behavior">位于要返回的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 之前的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary>使 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口无效。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary>在装饰器窗口中，使 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的指定区域无效。</summary>
      <param name="rect">要使之无效的矩形区域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary>在装饰器窗口中，使 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的指定区域无效。</summary>
      <param name="r">要使之无效的区域。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary>将调整柄的坐标系统中的点转换为装饰器窗口坐标。</summary>
      <returns>装饰器窗口坐标中的 <see cref="T:System.Drawing.Point" />。</returns>
      <param name="handle">装饰器窗口的调整柄。</param>
      <param name="pt">调整柄坐标系统中的 <see cref="T:System.Drawing.Point" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>移除并返回位于堆栈顶部的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</summary>
      <returns>从堆栈移除的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</returns>
      <param name="behavior">要从堆栈移除的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 堆栈为空。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 压到行为堆栈上。</summary>
      <param name="behavior">要压入的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> 压到该行为堆栈上，并为该行为分配鼠标捕获。</summary>
      <param name="behavior">要压入的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="behavior" /> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary>将屏幕坐标中的点转换为 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的装饰器窗口坐标。</summary>
      <returns>装饰器窗口坐标中已转换的 <see cref="T:System.Drawing.Point" /> 值。</returns>
      <param name="p">要转换的 <see cref="T:System.Drawing.Point" /> 值。</param>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary>在应刷新当前所选内容时发生。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary>同步所有选择标志符号。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary>在强类型集合中存储 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 对象。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>使用给定的数组初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 类的新实例。</summary>
      <param name="value">要填充集合的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 类型的数组。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary>使用给定的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 引用初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 类的新实例。</summary>
      <param name="behaviorService">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 引用。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>从现有的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 类的新实例。</summary>
      <param name="value">要用其填充该集合的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>向该 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 添加带有指定值的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</summary>
      <returns>新元素位置处插入的索引。</returns>
      <param name="value">要添加到集合末尾的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary>将数组的元素复制到 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 的末尾。</summary>
      <param name="value">要复制到集合末尾的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 类型的数组</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>将另一个 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 的内容添加到集合末尾。</summary>
      <param name="value">要添加到集合末尾的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 是否包含指定的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</summary>
      <returns>如果 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 包含在集合中，则为 true；否则为 false。</returns>
      <param name="value">要定位的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 值复制到一个一维 <see cref="T:System.Array" /> 中的指定索引位置。</summary>
      <param name="array">一维 <see cref="T:System.Array" />，是从 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 复制的值的目标。</param>
      <param name="index">
        <paramref name="array" /> 中复制开始处的索引。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary>返回可循环访问 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 实例的枚举数。</summary>
      <returns>用于 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 实例的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>返回 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 中的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 的索引。</summary>
      <returns>如果找到 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 中 <paramref name="value" /> 的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 的索引则返回该索引；否则返回 -1。</returns>
      <param name="value">要定位的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 插入 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 中的指定索引位置。</summary>
      <param name="index">应插入 <paramref name="value" /> 处的从零开始的索引。</param>
      <param name="value">要插入的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary>获取或设置位于指定索引处的元素。</summary>
      <returns>由 <paramref name="index" /> 指定的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</returns>
      <param name="index">元素的索引（索引从零开始）。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary>从 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 中移除特定的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</summary>
      <param name="value">要从 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 移除的 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary>支持在 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 上进行迭代。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" /> 类的新实例。</summary>
      <param name="mappings">要为其创建枚举数的 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 中的当前元素。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 中的当前元素。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary>使枚举数前进到 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> 的下一个元素。</summary>
      <returns>如果枚举数成功地推进到下一个元素，则为 true；如果枚举数越过集合的结尾，则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary>将枚举数设置为其初始位置，该位置位于集合中第一个元素之前。</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IEnumerator.Current" /> 属性。</summary>
      <returns>集合中的当前 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerator.MoveNext" /> 方法。</summary>
      <returns>如果枚举数成功地推进到下一个元素，则为 true；如果枚举数越过集合的结尾，则为 false。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Reset">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerator.Reset" /> 方法。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 与其组件关联。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> 类的新实例。</summary>
      <param name="relatedComponent">与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联的组件。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> 类的新实例。</summary>
      <param name="relatedComponent">与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联的组件。</param>
      <param name="behavior">与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary>指示对指定点的鼠标单击是否应由 <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> 处理。</summary>
      <returns>如果 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 与 <paramref name="p" /> 关联，则为 <see cref="T:System.Windows.Forms.Cursor" />；否则为 null。</returns>
      <param name="p">要进行命中测试的点。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>提供绘制逻辑。</summary>
      <param name="pe">一个 <see cref="T:System.Windows.Forms.PaintEventArgs" />，包含 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> 的 <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary>获取与该 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 关联的组件。</summary>
      <returns>与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 关联的 <see cref="T:System.ComponentModel.IComponent" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 与其控件关联。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> 类的新实例。</summary>
      <param name="bounds">表示 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的边界的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="cursor">
        <see cref="T:System.Windows.Forms.Cursor" />，它表示当鼠标指针悬停于 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 上时要显示的光标。</param>
      <param name="relatedComponent">与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联的组件。</param>
      <param name="behavior">与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> 类的新实例。</summary>
      <param name="bounds">表示 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的边界的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="cursor">
        <see cref="T:System.Windows.Forms.Cursor" />，它表示当鼠标指针悬停于 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 上时要显示的光标。</param>
      <param name="relatedComponent">与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联的组件。</param>
      <param name="designer">与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 相关联的 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的边界。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" />，表示 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的边界。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary>指示对指定点的鼠标单击是否应由 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> 处理。</summary>
      <returns>如果 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 与 <paramref name="p" /> 关联，则为 <see cref="T:System.Windows.Forms.Cursor" />；否则为 null。</returns>
      <param name="p">要进行命中测试的点。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary>表示一个由 <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> 管理的用户界面 (UI) 实体。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 类的新实例。</summary>
      <param name="behavior">与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。 可以为 null。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary>获取与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</summary>
      <returns>与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />，或者，如果不存在任何行为，则为 null。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary>获取 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的边界。</summary>
      <returns>一个 <see cref="T:System.Drawing.Rectangle" />，表示 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的边界。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary>提供命中测试逻辑。</summary>
      <returns>如果 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 与 <paramref name="p" /> 关联，则为 <see cref="T:System.Windows.Forms.Cursor" />；否则为 null。</returns>
      <param name="p">要进行命中测试的点。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary>提供绘制逻辑。</summary>
      <param name="pe">包含事件数据的 <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary>更改与 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</summary>
      <param name="behavior">要与该 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 关联的 <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary>在强类型集合中存储 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 对象。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary>初始化 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>使用给定的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 数组初始化 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 类的新实例。</summary>
      <param name="value">要用于填充集合的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 类型的数组。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>基于另一个 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 初始化 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 类的新实例。</summary>
      <param name="value">要用于填充集合的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>向该 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 添加带有指定值的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <returns>新元素位置处插入的索引。</returns>
      <param name="value">要添加到集合末尾的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary>将数组的元素复制到 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 的末尾。</summary>
      <param name="value">将复制到集合末尾的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 类型的数组。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary>将另一个 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 的内容添加到集合末尾。</summary>
      <param name="value">要添加到集合末尾的 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>获取一个值，该值指示 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 是否包含指定的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <returns>如果集合中包含 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />，则为 true；否则为 false。</returns>
      <param name="value">要定位的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 值复制到一个一维 <see cref="T:System.Array" /> 中的指定索引位置。</summary>
      <param name="array">一维 <see cref="T:System.Array" />，是从 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 复制的值的目标。</param>
      <param name="index">
        <paramref name="array" /> 中复制开始处的索引。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>返回 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 中的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的索引。</summary>
      <returns>如果找到 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 中 <paramref name="value" /> 的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的索引则返回该索引；否则返回 -1。</returns>
      <param name="value">要定位的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>将 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 插入 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 中的指定索引处。</summary>
      <param name="index">应插入 <paramref name="value" /> 处的从零开始的索引。</param>
      <param name="value">要插入的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary>获取或设置位于指定索引处的元素。</summary>
      <returns>指定索引处的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 元素。</returns>
      <param name="index">元素的索引（索引从零开始）。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary>从 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 中移除特定的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</summary>
      <param name="value">要从 <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> 移除的 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary>描述 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 的设计器选择状态。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 未选定。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 已选定。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary>
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 为主选择。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary>表示在用户界面 (UI) 中动态创建以便在容器中辅助控件的设计时布局的水平和垂直线段。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary>使用指定对齐线类型和偏移量初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 类的新实例。</summary>
      <param name="type">要创建的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述视图轮廓线的相对位置和方向。</param>
      <param name="offset">对齐线相对于所属控件左上角原点的位置，单位是像素。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary>使用指定的对齐线类型、偏移量和筛选器名称初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 类的新实例。</summary>
      <param name="type">要创建的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述视图轮廓线的相对位置和方向。</param>
      <param name="offset">对齐线相对于所属控件左上角原点的位置，单位是像素。</param>
      <param name="filter">一个 <see cref="T:System.String" /> 用于指定由程序员定义的对齐线类别。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>使用指定的对齐线类型、偏移量、筛选器名称和优先级初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 类的新实例。</summary>
      <param name="type">要创建的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述视图轮廓线的相对位置和方向。</param>
      <param name="offset">对齐线相对于所属控件左上角原点的位置，单位是像素。</param>
      <param name="filter">一个 <see cref="T:System.String" /> 用于指定由程序员定义的对齐线类别。</param>
      <param name="priority">对齐线的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary>使用指定的对齐线类型、偏移量和优先级初始化 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 类的新实例。</summary>
      <param name="type">要创建的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />。 描述视图轮廓线的相对位置和方向。</param>
      <param name="offset">对齐线相对于所属控件左上角原点的位置，单位是像素。</param>
      <param name="priority">对齐线的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary>调整对齐线的 <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> 属性。</summary>
      <param name="adjustment">对齐线偏移量更改的像素数。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary>获取与此对齐线关联的由程序员定义的筛选器类别。</summary>
      <returns>一个 <see cref="T:System.String" /> 定义筛选器类别。 默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary>获取一个值，该值指示对齐线是否有水平方向。</summary>
      <returns>如果对齐线是水平的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary>获取一个值，该值指示对齐线是否有垂直方向。</summary>
      <returns>如果对齐线是垂直的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary>获取对齐线偏离关联控件的原点的像素数。</summary>
      <returns>对齐线的偏移量（单位为像素）。</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary>获取指示对齐线的相对重要性的值。</summary>
      <returns>表示对齐线优先级类别的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary>返回一个值，该值指示指定的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 是否应与另一 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 对齐。</summary>
      <returns>如果 <paramref name="line1" /> 应与 <paramref name="line2" /> 对齐，则为 true；否则为 false。</returns>
      <param name="line1">指定的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</param>
      <param name="line2">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />，指定的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 应与其对齐。</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary>获取对齐线的类型，它指示一般位置和方向。</summary>
      <returns>一个 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" />，它表示对齐线相对于控件边缘的方向和一般位置。</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary>返回当前对齐线的字符串表示形式。</summary>
      <returns>
        <see cref="T:System.String" />，表示当前的 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary>指定对齐线的相对重要性。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary>等效于所有当前对齐线的最高优先级的优先级类别。 指示此类别的对齐线应始终是活动的。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary>最高优先级类别。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary>最低优先级类别。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary>中等优先级类别。</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary>指定对齐线的方向和相对位置。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary>通常与控件的主要内部功能关联的水平对齐线；例如，<see cref="T:System.Windows.Forms.Label" /> 控件中的文本字符串的基线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary>通常与控件的下边缘对齐的水平对齐线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary>通常不与控件的边缘关联的水平对齐线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary>通常与控件的左边缘对齐的垂直对齐线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary>通常与控件的右边缘对齐的垂直对齐线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary>通常与控件的上边缘对齐的水平对齐线。</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary>通常不与控件的边缘关联的垂直对齐线。</summary>
    </member>
  </members>
</doc>