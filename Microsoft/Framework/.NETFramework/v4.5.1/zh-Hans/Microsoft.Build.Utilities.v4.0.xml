<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Build.Utilities.v4.0</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Build.Utilities.AppDomainIsolatedTask">
      <summary>提供与 <see cref="T:Microsoft.Build.Utilities.Task" /> 相同的功能，但由于还派生于 <see cref="T:System.MarshalByRefObject" />，因此可以在其自己的应用程序域中进行实例化。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.AppDomainIsolatedTask" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.#ctor(System.Resources.ResourceManager)">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.AppDomainIsolatedTask" /> 类的新实例，并允许派生的 <see cref="T:Microsoft.Build.Utilities.Task" /> 类注册它们的资源。</summary>
      <param name="taskResources">任务资源。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.#ctor(System.Resources.ResourceManager,System.String)">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.AppDomainIsolatedTask" /> 类的新实例，并允许派生的 <see cref="T:Microsoft.Build.Utilities.Task" /> 类注册它们的资源，同时提供一个前缀，用于通过字符串资源名称组成“帮助”关键字。</summary>
      <param name="taskResources">任务资源。</param>
      <param name="helpKeywordPrefix">“帮助”关键字前缀。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.BuildEngine">
      <summary>获取或设置任务可用的生成引擎接口。</summary>
      <returns>任务可用的 <see cref="T:Microsoft.Build.Framework.IBuildEngine" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.Execute">
      <summary>运行此任务。</summary>
      <returns>如果成功，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.HelpKeywordPrefix">
      <summary>获取或设置前缀，此前缀用于通过字符串资源名称组成“帮助”关键字。</summary>
      <returns>用于组成“帮助”关键字的 <see cref="T:System.String" />。 此值可为 null。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.HostObject">
      <summary>获取或设置一个宿主对象实例，该实例与派生的 <see cref="T:Microsoft.Build.Utilities.Task" /> 关联。</summary>
      <returns>与派生的 <see cref="T:Microsoft.Build.Utilities.Task" /> 关联的 <see cref="T:Microsoft.Build.Framework.ITaskHost" /> 宿主对象实例。 此值可为 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.InitializeLifetimeService">
      <summary>当在派生类中被重写时，赋予任务无限期的租约时间。</summary>
      <returns>如果要指定无限期的生存期，则为 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.Log">
      <summary>获取包含任务记录方法的任务记录帮助器对象的实例。</summary>
      <returns>一个包含任务记录方法的 <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.TaskResources">
      <summary>获取或设置派生的 <see cref="T:Microsoft.Build.Utilities.Task" /> 的区域性特定资源。</summary>
      <returns>一个 <see cref="T:System.Resources.ResourceManager" />，它是派生的 <see cref="T:Microsoft.Build.Utilities.Task" /> 的区域性特定资源。 此值可为 null。</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.AssemblyFoldersExInfo">
      <summary>包含 AssemblyFoldersEx 注册表项中有关项的信息。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.AssemblyFoldersExInfo.#ctor(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView,System.String,System.String,System.Version)">
      <summary>创建 AssemblyFoldersExInfo 类的新实例。</summary>
      <param name="hive">要使用的注册表配置单元</param>
      <param name="view">要使用的注册表视图。</param>
      <param name="registryKey">组件的注册表项。</param>
      <param name="directoryPath">注册表项默认文件夹路径。</param>
      <param name="targetFrameworkVersion">目标框架版本对应的注册表项。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.AssemblyFoldersExInfo.DirectoryPath">
      <summary>获取或设置在注册表项默认值中找到的文件夹。</summary>
      <returns>返回注册表项默认文件夹的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AssemblyFoldersExInfo.Hive">
      <summary>获取或设置注册表配置单元。</summary>
      <returns>返回注册表配置单元。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AssemblyFoldersExInfo.Key">
      <summary>获取或设置组件的注册键。</summary>
      <returns>返回注册表项。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AssemblyFoldersExInfo.TargetFrameworkVersion">
      <summary>获取或设置注册表项的目标框架版本。</summary>
      <returns>返回目标框架版本。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.AssemblyFoldersExInfo.View">
      <summary>获取或设置注册视图。</summary>
      <returns>返回注册表视图。</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.CanonicalTrackedInputFiles">
      <summary>此类是采用规范格式的 .read. 跟踪日志或那些已经过根化处理 (^) 以变得规范的 .read. 跟踪日志的文件跟踪日志解释程序</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)">
      <summary>用于单个输入源文件的构造函数</summary>
      <param name="ownerTask">正在使用文件跟踪器的任务</param>
      <param name="tlogFiles">要解释的 .read. tlog 文件</param>
      <param name="sourceFile">要为其解释依赖项的主源文件</param>
      <param name="excludedInputPaths">包含在最新检查过程中将要忽略的文件的路径集</param>
      <param name="outputs">通过编译此源生成的输出文件</param>
      <param name="useMinimalRebuildOptimization">警告：最小重新生成优化需要指定完全正确的计算输出！</param>
      <param name="maintainCompositeRootingMarkers">若要保留复合根标记（多对一情形），则为 true；若要去除这些标记（一对一或一对多情形），则为 false</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.Boolean,System.Boolean)">
      <summary>用于多个输入源文件的构造函数</summary>
      <param name="ownerTask">正在使用文件跟踪器的任务</param>
      <param name="tlogFiles">要解释的 .read. tlog 文件</param>
      <param name="sourceFiles">要为其解释依赖项的主源文件</param>
      <param name="excludedInputPaths">包含在最新检查过程中将要忽略的文件的路径集</param>
      <param name="outputs">通过编译此源集生成的输出文件</param>
      <param name="useMinimalRebuildOptimization">警告：最小重新生成优化需要指定完全正确的计算输出！</param>
      <param name="maintainCompositeRootingMarkers">若要保留复合根标记（多对一情形），则为 true；若要去除这些标记（一对一或一对多情形），则为 false</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)">
      <summary>用于多个输入源文件的构造函数</summary>
      <param name="ownerTask">正在使用文件跟踪器的任务</param>
      <param name="tlogFiles">要解释的 .read. tlog 文件</param>
      <param name="sourceFiles">要为其解释依赖项的主源文件</param>
      <param name="excludedInputPaths">包含在最新检查过程中将要忽略的文件的路径集</param>
      <param name="outputs">通过编译此源集生成的输出文件</param>
      <param name="useMinimalRebuildOptimization">警告：最小重新生成优化需要指定完全正确的计算输出！</param>
      <param name="maintainCompositeRootingMarkers">若要保留复合根标记（多对一情形），则为 true；若要去除这些标记（一对一或一对多情形），则为 false</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)">
      <summary>用于多个输入源文件的构造函数</summary>
      <param name="tlogFiles">要解释的 .read. tlog 文件</param>
      <param name="sourceFiles">要为其解释依赖项的主源文件</param>
      <param name="excludedInputPaths">包含在最新检查过程中将要忽略的文件的路径集</param>
      <param name="outputs">通过编译此源集生成的输出文件</param>
      <param name="useMinimalRebuildOptimization">警告：最小重新生成优化需要指定完全正确的计算输出！</param>
      <param name="maintainCompositeRootingMarkers">若要保留复合根标记（多对一情形），则为 true；若要去除这些标记（一对一或一对多情形），则为 false</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Utilities.CanonicalTrackedOutputFiles,System.Boolean,System.Boolean)">
      <summary>用于多个输入源文件的构造函数</summary>
      <param name="tlogFiles">要解释的 .read. tlog 文件</param>
      <param name="sourceFiles">要为其解释依赖项的主源文件</param>
      <param name="outputs">通过编译此源集生成的输出文件</param>
      <param name="useMinimalRebuildOptimization">警告：最小重新生成优化需要指定完全正确的计算输出！</param>
      <param name="maintainCompositeRootingMarkers">若要保留复合根标记（多对一情形），则为 true；若要去除这些标记（一对一或一对多情形），则为 false</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.ComputeSourcesNeedingCompilation">
      <summary>此方法计算需要根据输出文件和输入的完全依赖项关系图来进行编译的源。</summary>
      <returns>需要编译的文件数组</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.ComputeSourcesNeedingCompilation(System.Boolean)">
      <summary>此方法计算需要根据输出文件和输入的完全依赖项关系图来进行编译的源，并可选择搜索可能包含输入文件的子根的复合根标记。</summary>
      <returns>需要编译的文件数组</returns>
      <param name="searchForSubRootsInCompositeRootingMarkers">如果为 true，则搜索子根的复合根标记。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.DependencyTable">
      <summary>获取依赖项表。</summary>
      <returns>返回依赖项表。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.FileIsExcludedFromDependencyCheck(System.String)">
      <summary>测试是否从跟踪依赖项检查中排除指定的文件</summary>
      <returns>如果该文件已排除，则返回 true。</returns>
      <param name="fileName">要测试的文件的完整路径</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem)">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
      <param name="correspondingOutput">与源相对应的输出（用于相同文件处理）</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[])">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
      <param name="correspondingOutputs">与源相对应的输出（用于相同文件处理）</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
      <param name="dependencyToRemove">要移除的依赖项。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem)">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="sources">应从关系图中移除的源</param>
      <param name="dependencyToRemove">要移除的依赖项。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem)">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem[])">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.RemoveEntryForSourceRoot(System.String)">
      <summary>移除输入依赖项关系图中与根对应的项。</summary>
      <param name="rootingMarker">要移除的根。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.SaveTlog">
      <summary>此方法将利用要跟踪的当前输出表的新项重新编写 tlog。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedInputFiles.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)">
      <summary>此方法将利用当前依赖项重新编写 tlog。 在编译源的过程中，将跟踪新项。</summary>
      <param name="includeInTLog">用于确定是否应将某个特定文件包括在已压缩的 tlog 中的委托。</param>
    </member>
    <member name="T:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles">
      <summary>此类是采用规范格式的 .write. 跟踪日志的文件跟踪日志解释程序。规范 .write. 日志需要进行根化，因为输出需要与输入关联。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[])">
      <summary>构造函数</summary>
      <param name="ownerTask">正在使用文件跟踪器的任务</param>
      <param name="tlogFiles">要解释的 .write. tlog 文件</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.Boolean)">
      <summary>构造函数</summary>
      <param name="ownerTask">正在使用文件跟踪器的任务</param>
      <param name="tlogFiles">要解释的 .write. tlog 文件</param>
      <param name="constructOutputsFromTLogs">如果为 true，则利用 tlog 文件构造输出。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.#ctor(Microsoft.Build.Framework.ITaskItem[])">
      <summary>构造函数</summary>
      <param name="tlogFiles">要解释的 .write. tlog 文件</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.AddComputedOutputForSourceRoot(System.String,System.String)">
      <summary>此方法将给定源键的计算输出添加到输出关系图</summary>
      <param name="sourceKey">要为其添加输出的源</param>
      <param name="computedOutput">此源键的计算输出。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.AddComputedOutputsForSourceRoot(System.String,Microsoft.Build.Framework.ITaskItem[])">
      <summary>此方法将给定源键的计算输出添加到输出关系图。</summary>
      <param name="sourceKey">要为其添加输出的源。</param>
      <param name="computedOutputs">此源键的计算输出。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.AddComputedOutputsForSourceRoot(System.String,System.String[])">
      <summary>此方法将给定源键的计算输出添加到输出关系图。</summary>
      <param name="sourceKey">要为其添加输出的源。</param>
      <param name="computedOutputs">此源键的计算输出。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.DependencyTable">
      <summary>获取依赖项表。</summary>
      <returns>返回依赖项表。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.OutputsForNonCompositeSource(Microsoft.Build.Framework.ITaskItem[])">
      <summary>此方法确定源根的输出（与在根标记的内容中一样）</summary>
      <returns>源的输出的数组</returns>
      <param name="sources">要查找其输出的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.OutputsForSource(Microsoft.Build.Framework.ITaskItem[])">
      <summary>此方法确定源根的输出（与在根标记的内容中一样）。</summary>
      <returns>源的输出的数组。</returns>
      <param name="sources">要查找其输出的源。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.OutputsForSource(Microsoft.Build.Framework.ITaskItem[],System.Boolean)">
      <summary>此方法将源根的输出（在一根的标记的内容），可以选择搜索复合根的标记中可能包含输出文件的 subroots。</summary>
      <returns>返回源的输出的数组。</returns>
      <param name="sources">要查找其输出的源。</param>
      <param name="searchForSubRootsInCompositeRootingMarkers">如果为 true，则搜索子根的复合根标记。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem)">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
      <param name="correspondingOutput">与源相对应的输出（用于相同文件处理）</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[])">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependenciesFromEntryIfMissing(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
      <param name="correspondingOutputs">与源相对应的输出（用于相同文件处理）</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
      <param name="dependencyToRemove">要移除的依赖项。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveDependencyFromEntry(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem)">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="sources">应从关系图中移除的源</param>
      <param name="dependencyToRemove">要移除的依赖项。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem)">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
      <param name="correspondingOutput">与源相对应的输出（用于相同文件处理）</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem[])">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveEntriesForSource(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>移除给定源和相应输出的输出关系图项。</summary>
      <param name="source">应从关系图中移除的源</param>
      <param name="correspondingOutputs">与源相对应的输出（用于相同文件处理）</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveOutputForSourceRoot(System.String,System.String)">
      <summary>从给定的源文件的依赖项关系图中移除指定的输出。</summary>
      <returns>如果该输出路径已移除，则返回 true。</returns>
      <param name="sourceRoot">源根。</param>
      <param name="outputPathToRemove">要移除的输出路径</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.RemoveRootsWithSharedOutputs(Microsoft.Build.Framework.ITaskItem[])">
      <summary>从依赖项关系图中移除具有相同输出的所有根。</summary>
      <returns>已删除的根标记的数组。</returns>
      <param name="sources">形成要移除的根标记的源集。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.SaveTlog">
      <summary>此方法将利用当前的输出表重新编写 tlog。 将跟踪新项。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CanonicalTrackedOutputFiles.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)">
      <summary>此方法将利用当前的输出表重新编写 tlog。 将跟踪新项。</summary>
      <param name="includeInTLog">依赖项筛选器。</param>
    </member>
    <member name="T:Microsoft.Build.Utilities.CommandLineBuilder">
      <summary>包含用于构造命令行的实用工具方法。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.CommandLineBuilder" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor(System.Boolean)">
      <summary>默认构造函数</summary>
      <param name="quoteHyphensOnCommandLine">如果为 true，则应用引号将连字符引起来。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem)">
      <summary>在命令行的后面追加指定的 <see cref="T:Microsoft.Build.Framework.ITaskItem" /> 对象的文件名。</summary>
      <param name="fileItem">要追加到命令行后面的任务项规范。 如果为 null，则该方法不起作用。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(System.String)">
      <summary>在命令行的后面追加参数表示的文件名，并在必要时插入引号。</summary>
      <param name="fileName">要追加的文件名。 如果为 null，则该方法不起作用。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[],System.String)">
      <summary>在命令行的后面追加指定的 <see cref="T:Microsoft.Build.Framework.ITaskItem" /> 数组中的文件名列表，并在各文件名之间用指定的分隔符分隔。</summary>
      <param name="fileItems">要追加的任务项规范。 如果数组为 null，则该方法不起作用。</param>
      <param name="delimiter">要放置在命令行中的任务项规范之间的分隔符。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(System.String[],System.String)">
      <summary>在命令行的后面追加指定的 string 数组中的文件名列表，并在各文件名之间用指定的分隔符分隔。</summary>
      <param name="fileNames">要追加的文件名。 如果数组为 null，则该方法不起作用。</param>
      <param name="delimiter">要放置在命令行中的文件名之间的分隔符。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(System.String)">
      <summary>在命令行的后面追加文件名，并在必要时在文件名的两侧加上引号。</summary>
      <param name="fileName">要追加的文件名。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer(System.Text.StringBuilder,System.String)">
      <summary>必要时在缓冲区的第一个用引号引起来的文本后面追加给定文本。</summary>
      <param name="buffer">要追加到的缓冲区。</param>
      <param name="unquotedTextToAppend">要用引号引起来的文本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty">
      <summary>向指定的字符串（在非空的情况下）添加一个空格。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(System.String)">
      <summary>在命令行的后面追加指定的开关。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)">
      <summary>在命令行的后面追加一个开关，该开关采用充当单个字符串参数的任务项规范。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameter">要追加到命令行后面的开关参数。 将在必要时添加引号。 如果该值为 null，则此方法不起作用。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)">
      <summary>在命令行的后面追加一个开关，该开关采用充当字符串参数的任务项规范数组。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameters">要追加到命令行后面的开关参数数组。 将在必要时添加引号。 如果数组为 null，则该方法不起作用。</param>
      <param name="delimiter">分隔各个参数的分隔符。 该值可以为空，但不能为 null。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String)">
      <summary>在命令行的后面追加一个采用单个字符串参数的开关。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameter">要追加到命令行后面的开关参数。 将在必要时添加引号。 如果该值为 null，则此方法不起作用。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String[],System.String)">
      <summary>在命令行的后面追加一个采用字符串参数数组的开关。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameters">要追加到命令行后面的开关参数数组。 将在必要时添加引号。 如果数组为 null，则该方法不起作用。</param>
      <param name="delimiter">分隔各个参数的分隔符。 该值可以为空，但不能为 null。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)">
      <summary>在命令行的后面追加一个采用充当单个字符串参数的任务项规范的开关，但不尝试在开关参数的两侧加上引号。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameter">要追加到命令行后面的开关参数。 将不会添加引号。 如果该值为 null，则此方法不起作用。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)">
      <summary>在命令行的后面追加一个采用充当字符串参数的任务项规范数组的开关，但不尝试在任务项规范的两侧加上引号。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameters">要追加到命令行后面的开关参数数组。 将不会添加引号。 如果数组为 null，则该方法不起作用。</param>
      <param name="delimiter">分隔各个参数的分隔符。 该值可以为空，但不能为 null。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String)">
      <summary>在命令行的后面追加一个采用单个字符串参数的开关，但不尝试在开关参数的两侧加上引号。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameter">要追加到命令行后面的开关参数。 将不会添加引号。 如果该值为 null，则此方法不起作用。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String[],System.String)">
      <summary>在命令行的后面追加一个采用字符串参数数组的开关，但不尝试在开关参数的两侧加上引号。</summary>
      <param name="switchName">要追加到命令行后面的开关的名称。 此值不能为 null。</param>
      <param name="parameters">要追加到命令行后面的开关参数数组。 将不会添加引号。 如果数组为 null，则该方法不起作用。</param>
      <param name="delimiter">分隔各个参数的分隔符。 该值可以为空，但不能为 null。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(System.String)">
      <summary>在命令行的后面追加字符串，但不尝试在字符串的两侧加上引号。</summary>
      <param name="textToAppend">要追加到命令行后面的字符串。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(System.String)">
      <summary>在命令行的后面追加字符串，并在必要时在字符串的两侧加上引号。</summary>
      <param name="textToAppend">要追加到命令行后面的字符串。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.CommandLineBuilder.CommandLine">
      <summary>获取表示用于继承类的命令行的 <see cref="T:System.Text.StringBuilder" /> 实例。</summary>
      <returns>一个用于继承类的 <see cref="T:System.Text.StringBuilder" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(System.String)">
      <summary>确定当指定的字符串参数包含空白时，是否应在该字符串参数的两侧加上引号。</summary>
      <returns>如果应在开关参数的两侧加上引号，则为 true；否则为 false。</returns>
      <param name="parameter">一个字符串，将检查其中是否有需要加上引号的字符。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.CommandLineBuilder.Length">
      <summary>表示命令行的长度。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.ToString">
      <summary>返回字符串形式的命令行。</summary>
      <returns>一个表示命令行的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(System.String,System.String)">
      <summary>如果命令行参数包含双引号 (") 字符，则会返回错误。 由于双引号在命令行参数中是非法字符，因而此方法有助于防止参数注入攻击。</summary>
      <param name="switchName">一个字符串，表示错误消息的开关名称。</param>
      <param name="parameter">一个字符串，表示用于扫描双引号的开关参数。</param>
    </member>
    <member name="T:Microsoft.Build.Utilities.DependencyFilter">
      <summary>依赖项筛选器委托。 在 TLog 保存的过程中使用，以便让任务有选择地从已编写的关系图中移除依赖项。</summary>
      <returns>文件是应实际写入到 TLog (true) 还是不应实际写入到 TLog (false)</returns>
      <param name="fullPath">将要写入到压缩的 TLog 的依赖项文件的完全路径</param>
    </member>
    <member name="T:Microsoft.Build.Utilities.DotNetFrameworkArchitecture">
      <summary>用于为 ToolLocationHelper 的一些方法指定 .NET Framework 的目标位数</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.DotNetFrameworkArchitecture.Bitness32">
      <summary>指示 32 位的 .NET Framework</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.DotNetFrameworkArchitecture.Bitness64">
      <summary>指示 64 位的 .NET Framework</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.DotNetFrameworkArchitecture.Current">
      <summary>指示当前正在运行的 .NET Framework。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.ExecutableType">
      <summary>表示由 Tracker.exe 包装的可执行文件的类型的枚举</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.Managed32Bit">
      <summary>特别标记为 32 位的托管可执行文件</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.Managed64Bit">
      <summary>特别标记为 64 位的托管可执行文件</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.ManagedIL">
      <summary>未指定位数的托管可执行文件</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.Native32Bit">
      <summary>32 位本机可执行文件</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.Native64Bit">
      <summary>64 位本机可执行文件</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ExecutableType.SameAsCurrentProcess">
      <summary>使用与当前运行的可执行文件相同的位数。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.FileTracker">
      <summary>此类包含一些用于封装跟踪器的启动和记录的实用工具函数</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(Microsoft.Build.Framework.ITaskItem[])">
      <summary>在以 ITaskItem 的形式给定一个源文件集的情况下，创建一个包含与这些源相对应的根标记的临时响应文件。</summary>
      <returns>响应文件的路径。</returns>
      <param name="sources">源文件集。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.CreateRootingMarkerResponseFile(System.String)">
      <summary>在给定一个根标记的情况下，创建一个临时响应文件并在其中包含该根标记。</summary>
      <returns>响应文件的路径。</returns>
      <param name="rootMarker">要放入响应文件中的根标记。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.EndTrackingContext">
      <summary>停止跟踪文件访问。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath">
      <summary>将适当的 FileTracker 程序集的路径预置在 PATH 环境变量中。 用于进程内跟踪。</summary>
      <returns>PATH 环境变量的旧名称。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.EnsureFileTrackerOnPath(System.String)">
      <summary>将适当的 FileTracker 程序集的路径预置在 PATH 环境变量中。 用于内跟踪的，或 .NET Framework 可能不在 PATH 上。</summary>
      <returns>PATH 的旧值。</returns>
      <param name="rootPath">FileTracker.dll 的根路径。 如果指定，则重写 toolType 。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FileIsExcludedFromDependencies(System.String)">
      <summary>测试是否从跟踪依赖项中排除指定的文件</summary>
      <returns>如果该文件已排除，则返回 true。</returns>
      <param name="fileName">要测试的文件的完整路径</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FileIsUnderPath(System.String,System.String)">
      <summary>测试指定的文件是否位于指定的路径下</summary>
      <returns>如果该文件在该路径下，则返回 true。</returns>
      <param name="fileName">要测试的文件的完整路径</param>
      <param name="path">可能包含要测试的文件的路径。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FindTrackerOnPath">
      <summary>在 %PATH% 中搜索 Tracker.exe 的位置，并返回匹配的第一个路径。匹配的 Tracker.exe 的完整路径，如果找不到匹配路径，则为 null。</summary>
      <returns>返回 Tracker.exe 的路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType)">
      <summary>确定我们是否必须进行进程外跟踪，或者进程内跟踪是否可以起作用。</summary>
      <returns>如果需要进行进程外跟踪，则为 true，如果可以进行进程内跟踪，则为 false</returns>
      <param name="toolType">所跟踪工具的可执行文件类型</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.ForceOutOfProcTracking(Microsoft.Build.Utilities.ExecutableType,System.String,System.String)">
      <summary>确定我们是否必须进行进程外跟踪，或者进程内跟踪是否可以起作用。</summary>
      <returns>如果需要进行进程外跟踪，则为 true，如果可以进行进程内跟踪，则为 false</returns>
      <param name="toolType">所跟踪工具的可执行文件类型</param>
      <param name="dllName">所跟踪的工具。</param>
      <param name="cancelEventName">跟踪器应侦听的取消事件的名称，如果没有取消事件，则为 null。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem)">
      <summary>从主要源的 ITaskItem 数组中构造一个根标记字符串。</summary>
      <returns>返回标记字符串。</returns>
      <param name="source">主要源。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem)">
      <summary>从主要源的 ITaskItem 数组中构造一个根标记字符串。</summary>
      <returns>返回标记字符串。</returns>
      <param name="source">主要源。</param>
      <param name="output">输出文件。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[])">
      <summary>从主要源的 ITaskItem 数组中构造一个根标记字符串。</summary>
      <returns>返回标记字符串。</returns>
      <param name="sources">主要源的 ITaskItem 数组。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.FormatRootingMarker(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>从主要源的 ITaskItem 数组中构造一个根标记字符串。</summary>
      <returns>返回标记字符串。</returns>
      <param name="sources">主要源的 ITaskItem 数组。</param>
      <param name="outputs">输出文件。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(Microsoft.Build.Utilities.ExecutableType)">
      <summary>在给定所包装的工具的 ExecutableType 以及我们所知的有关当前位数的信息的情况下，计算并返回正确的 FileTracker.dll 的路径。</summary>
      <returns>返回该工具的路径。</returns>
      <param name="toolType">所包装工具的 ExecutableType。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.GetFileTrackerPath(Microsoft.Build.Utilities.ExecutableType,System.String)">
      <summary>在给定所包装的工具的 ExecutableType 以及我们所知的有关当前位数的信息的情况下，计算并返回正确的 FileTracker.dll 的路径。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
      <param name="toolType">toolType。</param>
      <param name="rootPath">FileTracker.dll 的根路径。 如果指定，则重写 toolType 。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.GetTrackerPath(Microsoft.Build.Utilities.ExecutableType)">
      <summary>在给定所包装的工具的 ExecutableType 以及我们所知的有关当前位数的信息，计算并返回正确的 Tracker.exe 的路径。</summary>
      <returns>返回该跟踪器的路径。</returns>
      <param name="toolType">所包装工具的 ExecutableType。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.GetTrackerPath(Microsoft.Build.Utilities.ExecutableType,System.String)">
      <summary>在给定所包装的工具的 ExecutableType 以及我们所知的有关当前位数的信息，计算并返回正确的 Tracker.exe 的路径。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
      <param name="toolType">toolType。</param>
      <param name="rootPath">Tracker.exe 的根路径。 如果指定，则重写 toolType 。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.ResumeTracking">
      <summary>在当前的跟踪上下文中继续跟踪文件访问。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.SetThreadCount(System.Int32)">
      <summary>设置全局线程计数，并将该计数分配给当前的线程。</summary>
      <param name="threadCount">线程计数。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType)">
      <summary>启动进程；跟踪命令。</summary>
      <returns>返回进程实例。</returns>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">要跟踪的命令的参数</param>
      <param name="toolType">包装的工具所属的可执行文件类型</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String)">
      <summary>启动进程；跟踪命令。</summary>
      <returns>返回进程实例。</returns>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">命令的参数</param>
      <param name="toolType">包装的工具所属的可执行文件类型</param>
      <param name="rootFiles">根标记</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String)">
      <summary>启动进程；跟踪命令。</summary>
      <returns>返回进程实例</returns>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">要跟踪的命令的参数</param>
      <param name="toolType">包装的工具所属的可执行文件类型</param>
      <param name="intermediateDirectory">将跟踪日志写入到的中间目录</param>
      <param name="rootFiles">根标记</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String,System.String)">
      <summary>启动进程；跟踪命令。</summary>
      <returns>进程实例</returns>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">要跟踪的命令的参数</param>
      <param name="toolType">包装的工具所属的可执行文件类型</param>
      <param name="dllName">将执行跟踪的 dll 的名称</param>
      <param name="intermediateDirectory">将跟踪日志写入到的中间目录</param>
      <param name="rootFiles">根标记</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartProcess(System.String,System.String,Microsoft.Build.Utilities.ExecutableType,System.String,System.String,System.String,System.String)">
      <summary>启动进程；跟踪命令。</summary>
      <returns>进程实例</returns>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">要跟踪的命令的参数</param>
      <param name="toolType">包装的工具所属的可执行文件类型</param>
      <param name="dllName">将执行跟踪的 dll 的名称</param>
      <param name="intermediateDirectory">将跟踪日志写入到的中间目录</param>
      <param name="rootFiles">根标记</param>
      <param name="cancelEventName">如果跟踪器应侦听某个特定的取消事件，请在此处传递其名称</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartTrackingContext(System.String,System.String)">
      <summary>开始跟踪文件访问。</summary>
      <param name="intermediateDirectory">要将跟踪日志文件写入到的目录</param>
      <param name="taskName">调用此函数的任务的名称，用于确定跟踪日志文件的名称</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StartTrackingContextWithRoot(System.String,System.String,System.String)">
      <summary>使用提供的响应文件中的根标记，开始跟踪文件访问。 若要在给定根标记的情况下自动生成一个响应文件，请调用 FileTracker.CreateRootingMarkerResponseFile。</summary>
      <param name="intermediateDirectory">要将跟踪日志文件写入到的目录</param>
      <param name="taskName">调用此函数的任务的名称，用于确定跟踪日志文件的名称</param>
      <param name="rootMarkerResponseFile">响应文件中的根标记。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.StopTrackingAndCleanup">
      <summary>停止跟踪文件访问并消除当前的跟踪上下文。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.SuspendTracking">
      <summary>在当前的跟踪上下文中临时挂起文件访问的跟踪。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.TrackerArguments(System.String,System.String,System.String,System.String,System.String)">
      <summary>此方法利用其形参构造正确的 Tracker.exe 实参。</summary>
      <returns>作为字符串的参数</returns>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">要跟踪的命令的参数</param>
      <param name="dllName">将执行跟踪的 dll 的名称</param>
      <param name="intermediateDirectory">将跟踪日志写入到的中间目录</param>
      <param name="rootFiles">根标记</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.TrackerArguments(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>此方法利用其形参构造正确的 Tracker.exe 实参。</summary>
      <returns>作为字符串的参数</returns>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">要跟踪的命令的参数</param>
      <param name="dllName">将执行跟踪的 dll 的名称</param>
      <param name="intermediateDirectory">将跟踪日志写入到的中间目录</param>
      <param name="rootFiles">根标记</param>
      <param name="cancelEventName">如果已创建跟踪器应侦听的取消事件，请在此处传递其名称</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.TrackerCommandArguments(System.String,System.String)">
      <summary>此方法利用其形参构造正确的 Tracker.exe 命令实参</summary>
      <returns>作为字符串的参数</returns>
      <param name="command">要跟踪的命令</param>
      <param name="arguments">要跟踪的命令的参数</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(System.String,System.String,System.String)">
      <summary>此方法利用其形参构造正确的 Tracker.exe 响应文件实参。</summary>
      <returns>作为字符串的参数</returns>
      <param name="dllName">将执行跟踪的 dll 的名称</param>
      <param name="intermediateDirectory">将跟踪日志写入到的中间目录</param>
      <param name="rootFiles">根标记</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.TrackerResponseFileArguments(System.String,System.String,System.String,System.String)">
      <summary>此方法利用其形参构造正确的 Tracker.exe 响应文件实参。</summary>
      <returns>作为字符串的参数</returns>
      <param name="dllName">将执行跟踪的 dll 的名称</param>
      <param name="intermediateDirectory">将跟踪日志写入到的中间目录</param>
      <param name="rootFiles">根标记</param>
      <param name="cancelEventName">如果已创建跟踪器应侦听的取消事件，请在此处传递其名称</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.WriteAllTLogs(System.String,System.String)">
      <summary>针对所有上下文和线程编写跟踪日志。</summary>
      <param name="intermediateDirectory">要将跟踪日志文件写入到的目录</param>
      <param name="taskName">调用此函数的任务的名称，用于确定跟踪日志文件的名称</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FileTracker.WriteContextTLogs(System.String,System.String)">
      <summary>编写与当前的跟踪上下文相对应的跟踪日志。</summary>
      <param name="intermediateDirectory">要将跟踪日志文件写入到的目录</param>
      <param name="taskName">调用此函数的任务的名称，用于确定跟踪日志文件的名称</param>
    </member>
    <member name="T:Microsoft.Build.Utilities.FlatTrackingData">
      <summary>此类用于在生成期间跟踪文件依赖项。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.Boolean)">
      <summary>构造函数</summary>
      <param name="ownerTask">正在使用文件跟踪器的任务</param>
      <param name="tlogFiles">要解释的 tlog 文件</param>
      <param name="skipMissingFiles">忽略磁盘上不存在的文件</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.DateTime)">
      <summary>构造函数</summary>
      <param name="ownerTask">正在使用文件跟踪器的任务</param>
      <param name="tlogFiles">要解释的 tlog 文件</param>
      <param name="missingFileTimeUtc">应为缺失文件记录的 DateTime。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime)">
      <summary>构造函数</summary>
      <param name="tlogFiles">要解释的 .write. tlog 文件</param>
      <param name="tlogFilesToIgnore">要忽略的 TLog。</param>
      <param name="missingFileTimeUtc">应为缺失文件记录的 DateTime。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime,System.String[],System.Collections.Generic.IDictionary{System.String,System.DateTime})">
      <summary>构造函数</summary>
      <param name="tlogFiles">要解释的 .tlog 文件</param>
      <param name="tlogFilesToIgnore">要忽略的 .tlog 文件</param>
      <param name="missingFileTimeUtc">应为缺失文件记录的日期和时间。</param>
      <param name="excludedInputPaths">包含要忽略的文件的路径集，包括任何子目录。</param>
      <param name="sharedLastWriteTimeUtcCache">将要使用的可在多个 FlatTrackingData 实例之间共享的缓存。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.Boolean)">
      <summary>构造函数</summary>
      <param name="tlogFiles">要解释的 .write. tlog 文件</param>
      <param name="skipMissingFiles">忽略磁盘上不存在的文件</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.DateTime)">
      <summary>构造函数</summary>
      <param name="tlogFiles">要解释的 .write. tlog 文件</param>
      <param name="missingFileTimeUtc">应为缺失文件记录的 DateTime。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.DependencyTable">
      <summary>获取依赖项表。</summary>
      <returns>返回依赖项表。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.FileIsExcludedFromDependencyCheck(System.String)">
      <summary>如果指定的文件已从跟踪依赖项检查中排除，则返回 true。</summary>
      <returns>如果文件已排除，则为 true。</returns>
      <param name="fileName">要测试的文件的名称。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.FinalizeTLogs(System.Boolean,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>根据跟踪的执行是否成功来压缩和完成 Tlog。</summary>
      <param name="trackedOperationsSucceeded">True 指示跟踪的操作执行成功。</param>
      <param name="readTLogNames">要读取的 TLog。</param>
      <param name="writeTLogNames">要编写的 TLog。</param>
      <param name="trackedFilesToRemoveFromTLogs">要从 TLog 中移除的跟踪文件。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.GetLastWriteTimeUtc(System.String)">
      <summary>返回上次写入文件时缓存的值。 第一次检查文件时更新缓存。</summary>
      <returns>文件的上次写入时间。</returns>
      <param name="file">文件的名称</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.Task,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])">
      <summary>根据 UpToDateCheckType，检查跟踪数据是否指示所有内容都是最新的。</summary>
      <returns>如果所有内容均为最新的，则返回 true；否则返回 false。</returns>
      <param name="hostTask">宿主任务。</param>
      <param name="upToDateCheckType">UpToDateCheckType</param>
      <param name="readTLogNames">读取 tlog 的数组</param>
      <param name="writeTLogNames">编写 tlog 的数组</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.TaskLoggingHelper,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Utilities.FlatTrackingData,Microsoft.Build.Utilities.FlatTrackingData)">
      <summary>根据跟踪数据和 UpToDateCheckType，简单检查是否为最新状态。</summary>
      <returns>如果所有内容均为最新的，则返回 true；否则返回 false。</returns>
      <param name="Log">宿主任务的 TaskLoggingHelper</param>
      <param name="upToDateCheckType">要使用的 UpToDateCheckType</param>
      <param name="inputs">包含输入的 FlatTrackingData 结构</param>
      <param name="outputs">包含输出的 FlatTrackingData 结构</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.MissingFiles">
      <summary>获取或设置已在 TLog 中检测到的缺失文件</summary>
      <returns>返回已在 TLog 中检测到的缺失文件</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestFileName">
      <summary>获取或设置已找到的最新文件的路径。</summary>
      <returns>返回已找到的最新文件的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestFileTime">
      <summary>获取或设置已找到的最新文件的时间。</summary>
      <returns>返回已找到的最新文件的时间。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestFileTimeUtc">
      <summary>获取或设置已找到的最新文件的 UTC 时间。</summary>
      <returns>返回已找到的最新文件的 UTC 时间。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestTLogFileName">
      <summary>获取或设置最新 TLog 文件的路径。</summary>
      <returns>返回最新 TLog 文件的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTime">
      <summary>获取或设置最新 Tlog 的时间。</summary>
      <returns>返回最新 Tlog 的时间。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTimeUtc">
      <summary>获取或设置最新 Tlog 的 UTC 时间。</summary>
      <returns>返回最新 Tlog 的时间。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.OldestFileName">
      <summary>获取或设置已找到的最旧文件的路径。</summary>
      <returns>返回已找到的最旧文件的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.OldestFileTime">
      <summary>获取或设置已找到的最旧文件的时间。</summary>
      <returns>返回已找到的最旧文件的时间。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.OldestFileTimeUtc">
      <summary>获取或设置已找到的最旧文件的 UTC 时间。</summary>
      <returns>返回已找到的最旧文件的 UTC 时间。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.SaveTlog">
      <summary>此方法将利用输出表重新编写 tlog。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)">
      <summary>此方法将利用当前的表重新编写 tlog</summary>
      <param name="includeInTLog">依赖项筛选器。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.SkipMissingFiles">
      <summary>获取或设置一个开关，该开关指定是跳过还是记录存在于 TLog 中但实际已不存在的文件。</summary>
      <returns>返回一个开关，该开关指定是跳过还是记录存在于 TLog 中但实际已不存在的文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.TlogFiles">
      <summary>获取或设置支持此结构的 TLog 文件。</summary>
      <returns>返回支持此结构的 TLog 文件。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.TlogsAvailable">
      <summary>获取或设置一个开关，该开关指定传递给我们的所有 TLog 是否都在磁盘上。</summary>
      <returns>返回一个开关，该开关指定传递给我们的所有 TLog 是否都在磁盘上。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.FlatTrackingData.TreatRootMarkersAsEntries">
      <summary>获取或设置一个开关，该开关指定是将 TLog 中的根标记视为文件访问，还是仅视为标记。</summary>
      <returns>返回一个开关，该开关指定是将 TLog 中的根标记视为文件访问，还是仅视为标记。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.FlatTrackingData.UpdateFileEntryDetails">
      <summary>为依赖项表更新项详细信息的当前状态</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.HostObjectInitializationStatus">
      <summary>在尝试初始化宿主对象之后，为 <see cref="T:Microsoft.Build.Utilities.ToolTask" /> 定义下一个操作。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.NoActionReturnFailure">
      <summary>指示传递到该任务的某些参数无效，该任务即将失败。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.NoActionReturnSuccess">
      <summary>指示该宿主对象是最新的，没有必要执行进一步的操作。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.UseAlternateToolToExecute">
      <summary>指示某个宿主对象不可用，或者该宿主对象无法支持此生成所需的全部功能。 因此，<see cref="T:Microsoft.Build.Utilities.ToolTask" /> 应退而使用执行生成的替代方法，如调用命令行工具。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.UseHostObjectToExecute">
      <summary>指示存在适用于此任务的宿主对象，此宿主对象可以支持传入的所有参数，应当调用该宿主对象来执行任务的实际工作。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.Logger">
      <summary>当在派生窗体中重写时，为处理由 MSBuild 引擎引发的事件的记录器提供相应的功能。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.Logger" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.FormatErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs)">
      <summary>生成一条来自 <see cref="T:Microsoft.Build.Framework.BuildErrorEventArgs" /> 对象的默认格式的错误消息。</summary>
      <returns>一个 <see cref="T:System.String" />，表示一条规范格式的错误消息。</returns>
      <param name="args">错误事件的参数。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.FormatWarningEvent(Microsoft.Build.Framework.BuildWarningEventArgs)">
      <summary>生成一条来自 <see cref="T:Microsoft.Build.Framework.BuildWarningEventArgs" /> 对象的默认格式的警告消息。</summary>
      <returns>一个 <see cref="T:System.String" />，表示一条规范格式的警告消息。</returns>
      <param name="args">警告事件的参数。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>当在派生类中被重写时，为记录器订阅特定事件。</summary>
      <param name="eventSource">记录器可以订阅的可用事件。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.IsVerbosityAtLeast(Microsoft.Build.Framework.LoggerVerbosity)">
      <summary>确定当前的 <see cref="P:Microsoft.Build.Utilities.Logger.Verbosity" /> 设置是否至少是传入的值。</summary>
      <returns>如果当前的记录器详细级别设置至少是传入的值，则为 true；否则为 false。</returns>
      <param name="checkVerbosity">传入的记录器详细级别设置。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.Logger.Parameters">
      <summary>获取或设置记录器的用户定义参数。</summary>
      <returns>记录器参数。 此值可为 null。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.Logger.Shutdown">
      <summary>当在派生类中被重写时，释放在初始化时或在生成期间分配给记录器的资源。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.Logger.Verbosity">
      <summary>获取或设置要显示在事件日志中的详细信息的级别。</summary>
      <returns>枚举值之一。 默认值为 <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal" />。</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.MuxLogger">
      <summary>表示多路复用记录器。 在生成过程中，该记录器的用途是注册和注销多个记录器。 支持为每个项目系统的生成请求注册和注销的记录器的 Visual Studio 集成开发环境方案。 一个物理生成能拥有多个逻辑生成，每个都带有它自己的记录器集。 作为一般中心/l 样式记录器的具有生成管理的 MuxLogger注册。 根据消息来自的逻辑生成，它从生成管理器中接收消息并将它们发送到正确的记录器上。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.MuxLogger.#ctor">
      <summary>创建多路记录器的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>用指定的事件源初始化该 MuxLogger 实例。</summary>
      <param name="eventSource">事件源。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <summary>用指定事件源和指定节点的最大数目来初始化该 MuxLogger 实例。</summary>
      <param name="eventSource">事件源。</param>
      <param name="maxNodeCount">节点的最大数。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.MuxLogger.Parameters">
      <summary>获取和设置 ILogger 接口需要的参数属性。</summary>
      <returns>返回参数特性。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)">
      <summary>注册在 MuxLogger 的一个记录器和引发一个生成开始的事件，如果该生成开始的事件已记录了。</summary>
      <param name="submissionId">注册的记录器的提交 ID。</param>
      <param name="logger">要注册的记录器。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.MuxLogger.Shutdown">
      <summary>关闭 MuxLogger 并清除任何状态。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)">
      <summary>从 MuxLogger 中移除指定的记录器。</summary>
      <returns>如果方法成功移除记录器，则返回 true；否则，返回 false。</returns>
      <param name="submissionId">要移除的记录器的提交 ID。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.MuxLogger.Verbosity">
      <summary>获取和设置 ILogger 接口需要的详细级别属性。</summary>
      <returns>返回“详细程度”特性值。</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.ProcessorArchitecture">
      <summary>根据当前系统的处理器架构来确定 MSBuild 应该使用的工具集中的正确工具。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ProcessorArchitecture.AMD64">
      <summary>表示 AMD64 处理器。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ProcessorArchitecture.ARM">
      <summary>表示 ARM 处理器。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ProcessorArchitecture.CurrentProcessArchitecture">
      <summary>获取系统的当前处理器架构。</summary>
      <returns>一个包含处理器架构值的字符串。</returns>
    </member>
    <member name="F:Microsoft.Build.Utilities.ProcessorArchitecture.IA64">
      <summary>表示 IA64 处理器。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ProcessorArchitecture.MSIL">
      <summary>表示 MSIL。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.ProcessorArchitecture.X86">
      <summary>表示 x86 处理器。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion">
      <summary>指定与 <see cref="T:Microsoft.Build.Utilities.ToolLocationHelper" /> 中的方法一起使用的 .NET Framework 的版本。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version11">
      <summary>指定 .NET Framework 版本 1.1。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version20">
      <summary>指定 .NET Framework 版本 2.0。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version30">
      <summary>指定 .NET Framework 版本 3.0。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version35">
      <summary>指定 .NET Framework 版本 3.5。</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version40">
      <summary>版本 4</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version45">
      <summary>版 4.5</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.VersionLatest">
      <summary>指定 .NET Framework 的最新发行版本。</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.TargetPlatformSDK">
      <summary>表示目标平台 SDK。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.TargetPlatformSDK.#ctor(System.String,System.Version,System.String)">
      <summary>创建目标平台 SDK 类的新实例。</summary>
      <param name="targetPlatformIdentifier">目标平台的标识符。</param>
      <param name="targetPlatformVersion">目标平台的版本。</param>
      <param name="path">目标平台 SDK 的路径。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TargetPlatformSDK.Equals(Microsoft.Build.Utilities.TargetPlatformSDK)">
      <summary>确保目标平台 SDK 间相等。</summary>
      <returns>如果各项相等，则返回 true；否则返回 false。</returns>
      <param name="other">比较目标平台 SDK 与此要素。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TargetPlatformSDK.Equals(System.Object)">
      <summary>确保目标平台 SDK 和对象间相等。</summary>
      <returns>如果各项相等，则返回 true；否则返回 false。</returns>
      <param name="obj">与此元素进行比较的对象。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TargetPlatformSDK.GetHashCode">
      <summary>获取目标平台 SDK 的哈希代码。</summary>
      <returns>返回哈希代码。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TargetPlatformSDK.Path">
      <summary>获取或设置目标平台 SDK 的路径。</summary>
      <returns>返回目标平台 SDK 的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TargetPlatformSDK.TargetPlatformIdentifier">
      <summary>获取或设置目标平台 SDK 标识符。</summary>
      <returns>返回目标平台 SDK 标识符。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TargetPlatformSDK.TargetPlatformVersion">
      <summary>获取或设置目标平台的版本。</summary>
      <returns>返回目标平台版本。</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.Task">
      <summary>当在派生窗体中被重写时，为任务提供功能。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.Task.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.Task" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.Task.#ctor(System.Resources.ResourceManager)">
      <summary>用指定的 <see cref="P:Microsoft.Build.Utilities.Task.TaskResources" /> 初始化 <see cref="T:Microsoft.Build.Utilities.Task" /> 类的新实例。</summary>
      <param name="taskResources">任务资源。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.Task.#ctor(System.Resources.ResourceManager,System.String)">
      <summary>使用指定的 <see cref="P:Microsoft.Build.Utilities.Task.TaskResources" /> 和 <see cref="P:Microsoft.Build.Utilities.Task.HelpKeywordPrefix" /> 初始化 <see cref="T:Microsoft.Build.Utilities.Task" /> 类的新实例。</summary>
      <param name="taskResources">任务资源。</param>
      <param name="helpKeywordPrefix">为创建“帮助”关键字而附加到字符串资源的前缀。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.BuildEngine">
      <summary>获取或设置任务使用的 <see cref="T:Microsoft.Build.Framework.IBuildEngine" /> 对象的实例。</summary>
      <returns>任务可用的 <see cref="T:Microsoft.Build.Framework.IBuildEngine" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.BuildEngine2">
      <summary>获取任务使用的 <see cref="T:Microsoft.Build.Framework.IBuildEngine2" /> 对象的实例。</summary>
      <returns>任务可用的 <see cref="T:Microsoft.Build.Framework.IBuildEngine2" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.BuildEngine3">
      <summary>获取任务使用的 <see cref="T:Microsoft.Build.Framework.IBuildEngine3" /> 对象的实例。</summary>
      <returns>任务可用的 <see cref="T:Microsoft.Build.Framework.IBuildEngine3" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.BuildEngine4">
      <summary>获取任务使用的 <see cref="T:Microsoft.Build.Framework.IBuildEngine4" /> 对象的实例。</summary>
      <returns>返回可用于任务的 <see cref="T:Microsoft.Build.Framework.IBuildEngine4" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.Task.Execute">
      <summary>当在派生类中被重写时，执行此任务。</summary>
      <returns>如果已成功执行任务，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.HelpKeywordPrefix">
      <summary>获取或设置前缀，此前缀用于通过资源名称组成“帮助”关键字。</summary>
      <returns>用于通过资源名称组成“帮助”关键字的前缀。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.HostObject">
      <summary>获取或设置与该任务关联的宿主对象。</summary>
      <returns>与该任务关联的宿主对象。 此值可为 null。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.Log">
      <summary>获取包含任务记录方法的 <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper" /> 类的实例。</summary>
      <returns>记录帮助器对象。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.Task.TaskResources">
      <summary>获取或设置与此任务关联的区域性特定资源。</summary>
      <returns>与此任务关联的区域性特定资源。 此值可为 null。</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.TaskItem">
      <summary>定义项目中传递到任务的单个项。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.TaskItem" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.#ctor(Microsoft.Build.Framework.ITaskItem)">
      <summary>使用指定的源 <see cref="T:Microsoft.Build.Framework.ITaskItem" /> 初始化 <see cref="T:Microsoft.Build.Utilities.TaskItem" /> 类的新实例。</summary>
      <param name="sourceItem">要复制的项。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.#ctor(System.String)">
      <summary>使用指定的项规范字符串初始化 <see cref="T:Microsoft.Build.Utilities.TaskItem" /> 类的新实例。</summary>
      <param name="itemSpec">项规范。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.#ctor(System.String,System.Collections.IDictionary)">
      <summary>使用指定的项规范字符串及其元数据初始化 <see cref="T:Microsoft.Build.Utilities.TaskItem" /> 类的新实例。</summary>
      <param name="itemSpec">项规范。</param>
      <param name="itemMetadata">项规范的自定义元数据。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.CloneCustomMetadata">
      <summary>克隆项规范的自定义元数据的集合。</summary>
      <returns>一个 <see cref="T:System.Collections.IDictionary" />，表示自定义元数据的复本。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)">
      <summary>将项规范的元数据复制到指定的目标任务项。</summary>
      <param name="destinationItem">此方法要将元数据复制到的项。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.GetMetadata(System.String)">
      <summary>检索该项的指定元数据。</summary>
      <returns>一个 <see cref="T:System.String" />，表示元数据的值。</returns>
      <param name="metadataName">要检索的元数据的名称。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.InitializeLifetimeService">
      <summary>当在派生类中被重写时，赋予任务项无限期的租约时间。</summary>
      <returns>如果要指定无限期的生存期，则为 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskItem.ItemSpec">
      <summary>获取或设置项规范。</summary>
      <returns>一个 <see cref="T:System.String" />，表示项规范。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskItem.MetadataCount">
      <summary>获取在该项上设置的元数据的数目。</summary>
      <returns>一个 <see cref="T:System.Int32" />，表示在该项上设置的元数据的计数。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskItem.MetadataNames">
      <summary>获取该项的所有元数据的名称。</summary>
      <returns>元数据名称的 <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.Microsoft#Build#Framework#ITaskItem2#CloneCustomMetadataEscaped">
      <summary>可返回此对象的元数据克隆的 <see cref="T:Microsoft.Build.Framework.ITaskItem2" /> 实现。 返回的值采用其原始的转义格式。</summary>
      <returns>返回克隆的元数据，并保留值的转义。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskItem.Microsoft#Build#Framework#ITaskItem2#EvaluatedIncludeEscaped">
      <summary>用于获取或设置项包含值的 <see cref="T:Microsoft.Build.Framework.ITaskItem2" /> 实现。对于基于磁盘的项，这将是文件路径。</summary>
      <returns>返回项包含值。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.Microsoft#Build#Framework#ITaskItem2#GetMetadataValueEscaped(System.String)">
      <summary>允许查询此项的元数据值的 <see cref="T:Microsoft.Build.Framework.ITaskItem2" /> 实现。</summary>
      <returns>返回转义的元数据值。</returns>
      <param name="metadataName">要查询的元数据</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.Microsoft#Build#Framework#ITaskItem2#SetMetadataValueLiteral(System.String,System.String)">
      <summary>允许在此项上设置自定义元数据的 <see cref="T:Microsoft.Build.Framework.ITaskItem2" /> 实现。 假定传入的值未经转义，并根据需要将值进行转义以维护其值。</summary>
      <param name="metadataName">元数据名称。</param>
      <param name="metadataValue">元数据的值。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.op_Explicit(Microsoft.Build.Utilities.TaskItem)~System.String">
      <summary>允许将显式类型从 <see cref="T:Microsoft.Build.Utilities.TaskItem" /> 强制转换为 <see cref="T:System.String" />，并返回该项的 <see cref="P:Microsoft.Build.Utilities.TaskItem.ItemSpec" />。</summary>
      <returns>该项的 <see cref="P:Microsoft.Build.Utilities.TaskItem.ItemSpec" />。</returns>
      <param name="taskItemToCast">要操作的项。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.RemoveMetadata(System.String)">
      <summary>移除该项的指定元数据。</summary>
      <param name="metadataName">要移除的元数据的名称。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.SetMetadata(System.String,System.String)">
      <summary>设置或修改该项的指定元数据的值。</summary>
      <param name="metadataName">要设置或修改的元数据的名称。</param>
      <param name="metadataValue">元数据的新值。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskItem.ToString">
      <summary>获取项规范。</summary>
      <returns>一个 <see cref="T:System.String" />，表示项规范。</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.TaskLoggingHelper">
      <summary>提供任务使用的帮助器记录方法。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.#ctor(Microsoft.Build.Framework.IBuildEngine,System.String)">
      <summary>有助于任务工厂记录消息的公共构造函数。</summary>
      <param name="buildEngine">生成引擎。</param>
      <param name="taskName">任务名。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.#ctor(Microsoft.Build.Framework.ITask)">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper" /> 类的新实例，并将它与指定的任务实例关联。</summary>
      <param name="taskInstance">包含该任务的实例的任务。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.BuildEngine">
      <summary>获取与此任务关联的生成引擎。</summary>
      <returns>一个 <see cref="T:Microsoft.Build.Framework.IBuildEngine" />，表示与此任务关联的生成引擎的实例。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.ExtractMessageCode(System.String,System.String@)">
      <summary>从给定的完整消息字符串中提取消息代码前缀。</summary>
      <returns>从完整的消息字符串中提取的消息代码前缀；如果没有消息代码，则为 null。</returns>
      <param name="message">要进行分析且包括代码前缀的完整消息。</param>
      <param name="messageWithoutCodePrefix">已移除了代码前缀的消息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.FormatResourceString(System.String,System.Object[])">
      <summary>加载指定的资源字符串，并可以选择使用给定的参数设置该字符串的格式。</summary>
      <returns>格式化的字符串。</returns>
      <param name="resourceName">要加载的字符串资源的名称。</param>
      <param name="args">用于设置加载的字符串的格式的可选参数。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="resourceName" /> 所指示的字符串资源不存在。</exception>
      <exception cref="T:System.InvalidOperationException">未设置所有者任务的 <see cref="P:Microsoft.Build.Utilities.Task.TaskResources" /> 属性。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceName" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.FormatString(System.String,System.Object[])">
      <summary>使用给定的参数设置给定字符串的格式。</summary>
      <returns>格式化的字符串。</returns>
      <param name="unformatted">要进行格式设置的字符串。</param>
      <param name="args">用于设置格式的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unformatted" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.GetResourceMessage(System.String)">
      <summary>获取来自任务库中的资源的消息。</summary>
      <returns>返回来自任务库中的资源的消息。</returns>
      <param name="resourceName">资源名称。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.HasLoggedErrors">
      <summary>获取一个值，该值指示此任务是否已经通过该记录帮助器对象记录了任何错误。</summary>
      <returns>如果此任务已经通过该记录帮助器对象记录了任何错误，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.HelpKeywordPrefix">
      <summary>获取或设置前缀，此前缀用于通过资源名称组成“帮助”关键字。</summary>
      <returns>用于通过资源名称组成“帮助”关键字的前缀。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.InitializeLifetimeService">
      <summary>远程控制对象被激活时，调用 InitializeLifetimeService。  此方法将确定该对象的生存期。 线程安全。 但是，InitializeLifetimeService 和 MarkAsInactive 仅以此顺序，两者一起或不一起并且不超过一次进行调用。</summary>
      <returns>控制该对象生存期的租用对象。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(Microsoft.Build.Framework.MessageImportance,System.String)">
      <summary>使用指定的重要性级别记录任务的基础工具、可执行文件或 shell 命令的命令行。</summary>
      <param name="importance">指示命令行的重要性级别的 <see cref="T:Microsoft.Build.Framework.MessageImportance" /> 值之一。</param>
      <param name="commandLine">命令行字符串。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(System.String)">
      <summary>记录任务的基础工具、可执行文件或 shell 命令的命令行。</summary>
      <param name="commandLine">命令行字符串。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCriticalMessage(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>使用指定的字符串和其他消息详细信息记录一个重要消息。  线程安全。</summary>
      <param name="subcategory">警告类型的说明（可以为 null）。</param>
      <param name="code">信息代码（可能为 null）。</param>
      <param name="helpKeyword">宿主 IDE 的帮助关键字（可以为 null）。</param>
      <param name="file">到引起消息的文件的路径（可以为 null）。</param>
      <param name="lineNumber">引起消息的文件中的行（如果不可用，则设置为零）。</param>
      <param name="columnNumber">引起消息的文件中的列（如果不可用，则设置为零）。</param>
      <param name="endLineNumber">引起消息的文件中某一范围的行中的最后一行（如果不可用，则设置为零）。</param>
      <param name="endColumnNumber">引起消息的文件中某一范围的列中的最后一列（如果不可用，则设置为零）。</param>
      <param name="message">message 字符串。</param>
      <param name="messageArgs">用于设置消息字符串格式的可选参数。</param>
      <exception cref="T:System.ArgumentNullException">当 message 为 null 时引发。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogError(System.String,System.Object[])">
      <summary>使用指定的消息记录一个错误。</summary>
      <param name="message">消息。</param>
      <param name="messageArgs">用于设置消息字符串格式的可选参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogError(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>使用指定的消息和其他错误详细信息记录一个错误。</summary>
      <param name="subcategory">错误类型的说明。</param>
      <param name="errorCode">错误代码。</param>
      <param name="helpKeyword">与错误关联的“帮助”关键字。</param>
      <param name="file">包含错误的文件的路径。</param>
      <param name="lineNumber">文件中出错的那一行。</param>
      <param name="columnNumber">文件中出错的那一列。</param>
      <param name="endLineNumber">文件中出错的结束行。</param>
      <param name="endColumnNumber">文件中出错的结束列。</param>
      <param name="message">消息。</param>
      <param name="messageArgs">用于设置消息字符串格式的可选参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception)">
      <summary>使用来自给定异常的消息记录一个错误。</summary>
      <param name="exception">要记录的异常。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception,System.Boolean)">
      <summary>使用来自给定异常的消息和堆栈跟踪（可选）记录一个错误。</summary>
      <param name="exception">要记录的异常</param>
      <param name="showStackTrace">如果要在日志中包括堆栈跟踪，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception,System.Boolean,System.Boolean,System.String)">
      <summary>使用来自给定异常和任何内部异常的消息和堆栈跟踪（可选）记录一个错误。</summary>
      <param name="exception">要记录的异常。</param>
      <param name="showStackTrace">如果要在日志中包括堆栈跟踪，则为 true；否则为 false。</param>
      <param name="showDetail">如果要记录异常类型和任何内部异常，则为 true；否则为 false。</param>
      <param name="file">与异常有关的文件的名称；如果应记录项目文件，则为 null。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(System.String,System.Object[])">
      <summary>使用指定的资源字符串记录一个错误。</summary>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于设置加载的字符串的格式的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>使用指定的资源字符串和其他错误详细信息记录一个错误。</summary>
      <param name="subcategoryResourceName">描述错误类型的字符串资源的名称。</param>
      <param name="errorCode">错误代码。</param>
      <param name="helpKeyword">与错误关联的“帮助”关键字。</param>
      <param name="file">包含错误的文件的路径。</param>
      <param name="lineNumber">文件中出错的那一行。</param>
      <param name="columnNumber">文件中出错的那一列。</param>
      <param name="endLineNumber">文件中出错的结束行。</param>
      <param name="endColumnNumber">文件中出错的结束列。</param>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于设置加载的字符串的格式的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(System.String,System.Object[])">
      <summary>使用指定的资源字符串记录一个包含错误代码的错误。</summary>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于设置加载的字符串的格式的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>使用指定的资源字符串和其他错误详细信息记录一个错误。</summary>
      <param name="subcategoryResourceName">描述错误类型的字符串资源的名称。</param>
      <param name="file">包含错误的文件的路径。</param>
      <param name="lineNumber">文件中出错的那一行。</param>
      <param name="columnNumber">文件中出错的那一列。</param>
      <param name="endLineNumber">文件中出错的结束行。</param>
      <param name="endColumnNumber">文件中出错的结束列。</param>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于设置加载的字符串的格式的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectFinished(System.String,System.String,System.String,System.Boolean)">
      <summary>帮助记录自定义 <see cref="T:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs" /> 生成事件。</summary>
      <param name="message">文本消息。</param>
      <param name="helpKeyword">“帮助”关键字。</param>
      <param name="projectFile">项目的名称。</param>
      <param name="succeeded">如果已成功生成项目，为 true；否则为 false。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectStarted(System.String,System.String,System.String,System.String)">
      <summary>帮助记录自定义 <see cref="T:Microsoft.Build.Framework.ExternalProjectStartedEventArgs" /> 生成事件。</summary>
      <param name="message">文本消息。</param>
      <param name="helpKeyword">“帮助”关键字。</param>
      <param name="projectFile">项目的名称。</param>
      <param name="targetNames">要生成的目标。 空字符串指示默认目标。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
      <summary>使用指定的字符串和重要性记录一条消息。</summary>
      <param name="importance">指定消息重要性的枚举值之一。</param>
      <param name="message">消息。</param>
      <param name="messageArgs">用于设置消息格式的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(System.String,System.Object[])">
      <summary>使用指定的字符串记录一条消息。</summary>
      <param name="message">消息。</param>
      <param name="messageArgs">用于设置消息格式的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
      <summary>使用指定的字符串和其他消息详细信息记录一个消息。  线程安全。</summary>
      <param name="subcategory">警告类型的说明（可以为 null）。</param>
      <param name="code">信息代码（可能为 null）</param>
      <param name="helpKeyword">宿主 IDE 的帮助关键字（可以为 null）。</param>
      <param name="file">到引起消息的文件的路径（可以为 null）。</param>
      <param name="lineNumber">引起消息的文件中的行（如果不可用，则设置为零）。</param>
      <param name="columnNumber">引起消息的文件中的列（如果不可用，则设置为零）。</param>
      <param name="endLineNumber">引起消息的文件中某一范围的行中的最后一行（如果不可用，则设置为零）。</param>
      <param name="endColumnNumber">引起消息的文件中某一范围的列中的最后一列（如果不可用，则设置为零）。</param>
      <param name="importance">消息的重要性。</param>
      <param name="message">message 字符串。</param>
      <param name="messageArgs">用于设置消息字符串格式的可选参数。</param>
      <exception cref="T:System.ArgumentNullException">当 message 为 null 时引发。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
      <summary>使用指定的资源字符串和重要性记录一条消息。</summary>
      <param name="importance">指定消息重要性的枚举值之一。</param>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于设置加载的字符串的格式的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(System.String,System.Object[])">
      <summary>使用指定的资源字符串记录一条消息。</summary>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于设置加载的字符串的格式的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromText(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>记录来自给定文本行的错误消息或警告。</summary>
      <returns>如果已记录错误，则为 true；否则为 false。</returns>
      <param name="lineOfText">提供记录信息的文本行。</param>
      <param name="messageImportance">指示命令行的重要性级别的 <see cref="T:Microsoft.Build.Framework.MessageImportance" /> 值之一。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="lineOfText" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(System.String)">
      <summary>为给定文件中的每一行文本记录错误、警告和消息。</summary>
      <returns>如果要指示至少记录了一个错误，则为 true；否则为 false。</returns>
      <param name="fileName">提供记录消息的文件的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>为给定文件中的每一行文本记录错误、警告和消息。 同时记录消息的重要性。</summary>
      <returns>如果要指示至少记录了一个错误，则为 true；否则为 false。</returns>
      <param name="fileName">提供记录消息的文件的名称。</param>
      <param name="messageImportance">指定所记录消息的重要性的枚举值之一。</param>
      <exception cref="T:System.ArgumentNullException">当 filename 为 null 时引发。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromStream(System.IO.TextReader,Microsoft.Build.Framework.MessageImportance)">
      <summary>记录来自给定流的错误消息或警告。</summary>
      <returns>如果已记录错误，则为 true；否则为 false。</returns>
      <param name="stream">读取提供记录信息的流的 <see cref="T:System.IO.TextReader" />。</param>
      <param name="messageImportance">指示命令行的重要性级别的 <see cref="T:Microsoft.Build.Framework.MessageImportance" /> 值之一。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(System.String,System.Object[])">
      <summary>使用指定的消息记录一个警告。</summary>
      <param name="message">消息。</param>
      <param name="messageArgs">用于设置消息字符串格式的可选参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>使用指定的消息和其他警告详细信息记录一个警告。</summary>
      <param name="subcategory">警告类型的说明。</param>
      <param name="warningCode">警告代码。</param>
      <param name="helpKeyword">与警告关联的“帮助”关键字。</param>
      <param name="file">包含警告的文件的路径。</param>
      <param name="lineNumber">文件中发生警告的那一行。</param>
      <param name="columnNumber">文件中发生警告的那一列。</param>
      <param name="endLineNumber">文件中发生警告的结束行。</param>
      <param name="endColumnNumber">文件中发生警告的结束列。</param>
      <param name="message">消息。</param>
      <param name="messageArgs">用于设置消息字符串格式的可选参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> 为 null。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception)">
      <summary>使用来自指定异常的消息记录一个警告。</summary>
      <param name="exception">要记录的异常。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception,System.Boolean)">
      <summary>使用来自给定异常的消息和堆栈跟踪（可选）记录一个警告。</summary>
      <param name="exception">要记录的异常</param>
      <param name="showStackTrace">如果要在日志中包括堆栈跟踪，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(System.String,System.Object[])">
      <summary>使用指定的资源字符串记录一个警告。</summary>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于设置加载的字符串的格式的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>使用指定的资源字符串和其他警告详细信息记录一个警告。</summary>
      <param name="subcategoryResourceName">描述警告类型的字符串资源的名称。</param>
      <param name="warningCode">警告代码。</param>
      <param name="helpKeyword">与警告关联的“帮助”关键字。</param>
      <param name="file">包含警告的文件的路径。</param>
      <param name="lineNumber">文件中发生警告的那一行。</param>
      <param name="columnNumber">文件中发生警告的那一列。</param>
      <param name="endLineNumber">文件中发生警告的结束行。</param>
      <param name="endColumnNumber">文件中发生警告的结束列。</param>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于设置加载的字符串的格式的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(System.String,System.Object[])">
      <summary>使用指定的资源字符串记录一个包含警告代码的警告。</summary>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于设置加载的字符串的格式的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
      <summary>使用指定的资源字符串和其他警告详细信息记录一个包含警告代码的警告。</summary>
      <param name="subcategoryResourceName">描述警告类型的字符串资源的名称。</param>
      <param name="file">包含警告的文件的路径。</param>
      <param name="lineNumber">文件中发生警告的那一行。</param>
      <param name="columnNumber">文件中发生警告的那一列。</param>
      <param name="endLineNumber">文件中发生警告的结束行。</param>
      <param name="endColumnNumber">文件中发生警告的结束列。</param>
      <param name="messageResourceName">要加载的字符串资源的名称。</param>
      <param name="messageArgs">用于设置加载的字符串的格式的参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageResourceName" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.MarkAsInactive">
      <summary>通知此 TaskLoggingHelper 它不再被需要。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.TaskName">
      <summary>获取父任务的名称。</summary>
      <returns>父任务的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.TaskResources">
      <summary>获取或设置记录方法使用的区域性特定资源。</summary>
      <returns>一个 <see cref="T:System.Resources.ResourceManager" />，表示记录方法使用的区域性特定资源。 此值可为 null。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.Utilities.ToolLocationHelper">
      <summary>提供用于查找 .NET Framework 和 .NET Framework SDK 文件及目录的实用工具方法。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.ClearSDKStaticCache">
      <summary>清除平台和扩展 SDKs 的 appDomain 宽缓存。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetAssemblyFoldersExInfo(System.String,System.String,System.String,System.String,System.String,System.Reflection.ProcessorArchitecture)">
      <summary>获取 <see cref="T:Microsoft.Build.Utilities.AssemblyFoldersExInfo" /> 对象的已排序列表，这些对象包含第三方程序集注册所在目录的相关信息。 此信息在生成中使用和设计时使用。</summary>
      <returns>返回 AssemblyFoldersExInfo 的列表。</returns>
      <param name="registryRoot">目标框架的根注册表位置。 对于 .NET 这是 SOFTWARE\MICROSOFT\.NETFramework。</param>
      <param name="targetFrameworkVersion">目标框架版本 (2.0, 3.0, 3.5, 4.0, ….)。</param>
      <param name="registryKeySuffix">该文件夹的名称，(AssemblyFoldersEx) 也可能是 PocketPC 或 AssemblyFoldersEx 或其他。</param>
      <param name="osVersion">在注册表的目标最小和最大操作系统版本。 这些值仅用于返回声明的最小值和最大值之间的操作系统版本目录。 如果该值为空或为 NULL，则不进行筛选。</param>
      <param name="platform">目标的平台 GUID。 用于返回具有匹配的平台 GUID 仅的内容。 如果该值为空或为 NULL，则不进行筛选。</param>
      <param name="targetProcessorArchitecture">目标处理器层次结构。 这将确定注册表单元搜索和以何种顺序。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDisplayNameForTargetFrameworkDirectory(System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>在给定目标框架详细信息的情况下创建显示名称。</summary>
      <returns>在给定目标框架详细信息的情况下返回显示名称。</returns>
      <param name="targetFrameworkDirectory">目标框架目录。</param>
      <param name="frameworkName">框架名称。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>获取 .NET Framework 根注册表项的全名。</summary>
      <returns>包含 .NET Framework 根注册表项的全名的字符串。</returns>
      <param name="version">要针对的 .NET Framework 的版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkInstallKeyValue(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>获取包含 .NET Framework SDK 安装路径的 <see cref="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)" /> 下的值的名称。</summary>
      <returns>返回一个包含注册表项值的名称的字符串，该值位于包含 .NET Framework SDK 安装路径的 <see cref="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)" /> 下。</returns>
      <param name="version">要针对的 .NET Framework 的版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkInstallKeyValue(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion)">
      <summary>包含 SDK 安装根路径的 GetDotNetFrameworkRootRegistryKey 值名称。</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="visualStudioVersion">所需 SDK 的 Visual Studio 版本相关于</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>返回 .NET Framework SDK 根注册表项的全名。</summary>
      <returns>返回指示 .NET Framework SDK 的查找位置的注册表项根的字符串表示形式。</returns>
      <param name="version">目标 .NET Framework 的版本</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion)">
      <summary>返回 .NET Framework SDK 根注册表项的全名</summary>
      <returns>返回 <see cref="T:System.String" />。</returns>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="visualStudioVersion">所需 SDK 的 Visual Studio 版本相关于</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkVersionFolderPrefix(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>获取 .NET Framework 文件夹的前缀。</summary>
      <returns>返回 .NET Framework 文件夹的前缀。</returns>
      <param name="version">要针对的 .NET Framework 的版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFramework(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>获取 .NET Framework 根目录的完全限定路径。</summary>
      <returns>一个字符串，其中包含 .NET Framework 根目录的完全限定路径；如果未安装 .NET Framework 的目标版本，则为 null 引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="version">要针对的 .NET Framework 的版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFramework(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.DotNetFrameworkArchitecture)">
      <summary>获取框架根目录的完全限定路径。</summary>
      <returns>返回框架根目录的完全限定路径。</returns>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="architecture">所需的体系结构或当前运行此进程的体系结构的 DotNetFrameworkArchitecture.Current。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>获取 .NET Framework 目录中的文件的完全限定路径。</summary>
      <returns>一个字符串，其中包含指定文件的完全限定路径；如果未安装 .NET Framework 的目标版本，则为 null 引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="fileName">要在 .NET Framework 目录中查找的文件。</param>
      <param name="version">要针对的 .NET Framework 的版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.DotNetFrameworkArchitecture)">
      <summary>获取指定体系结构的框架根目录中文件的完全限定路径。</summary>
      <returns>返回框架根目录中文件的完全限定路径。</returns>
      <param name="fileName">要在 .NET Framework 目录中查找的文件名</param>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="architecture">所需的体系结构或当前运行此进程的体系结构的 DotNetFrameworkArchitecture.Current。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkReferenceAssemblies(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>返回给定框架版本的引用程序集位置的路径。</summary>
      <returns>返回一个字符串，其中包含引用程序集文件夹的完全限定路径；如果未安装 .NET Framework 的目标版本，则为 null 引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="version">目标 .NET Framework 的版本</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdk(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>获取 .NET Framework SDK 的 \bin 目录的完全限定路径。</summary>
      <returns>一个字符串，其中包含 .NET Framework SDK 的 \bin 目录的完全限定路径；如果未安装 .NET Framework SDK 的目标版本，则为 null 引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="version">要针对的 .NET Framework 的版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdk(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion)">
      <summary>返回路径到 .NET Framework SDK的“bin”目录。</summary>
      <returns>路径字符串。</returns>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="visualStudioVersion">所需 SDK 的 Visual Studio 版本相关于</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
      <summary>获取 .NET Framework SDK 中的文件的完全限定路径。</summary>
      <returns>一个字符串，其中包含 .NET Framework SDK 的 \bin 目录的完全限定路径；如果未安装 .NET Framework SDK 的目标版本，则为 null 引用（在 Visual Basic 中为 Nothing）。</returns>
      <param name="fileName">要在 .NET Framework SDK 中查找的文件。</param>
      <param name="version">要针对的 .NET Framework 的版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.DotNetFrameworkArchitecture)">
      <summary>获取 .NET Framework SDK 中文件的完全限定路径。</summary>
      <returns>返回 .NET Framework SDK 中文件的完全限定路径。 如果找不到 .NET Framework SDK，则将引发错误。</returns>
      <param name="fileName">要在 .NET Framework SDK 目录中查找的文件名</param>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="architecture">所请求文件的所需体系结构。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion)">
      <summary>获取 .NET Framework SDK 中文件的完全限定路径。 如果找不到 .NET Framework SDK，则将引发错误。</summary>
      <returns>路径字符串。</returns>
      <param name="fileName">要在 .NET Framework SDK 目录中查找的文件名</param>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="visualStudioVersion">与请求 SDK 关联的 Visual Studio 的版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion,Microsoft.Build.Utilities.DotNetFrameworkArchitecture)">
      <summary>获取 .NET Framework SDK 中文件的完全限定路径。 如果找不到 .NET Framework SDK，则将引发错误。</summary>
      <returns>路径字符串。</returns>
      <param name="fileName">要在 .NET Framework SDK 目录中查找的文件名</param>
      <param name="version">目标 .NET Framework 的版本</param>
      <param name="visualStudioVersion">与请求 SDK 关联的 Visual Studio 的版本。</param>
      <param name="architecture">所请求文件的所需体系结构。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(System.Runtime.Versioning.FrameworkName)">
      <summary>获取给定目标框架的引用程序集位置的路径。</summary>
      <returns>返回引用程序集位置的路径。</returns>
      <param name="frameworkName">框架名称。</param>
      <exception cref="T:System.ArgumentNullException">在 frameworkName 为 null 时。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>获取给定的框架版本的引用程序集位置相对于给定的 targetFrameworkRoot 的路径。</summary>
      <returns>返回引用程序集位置的路径。</returns>
      <param name="targetFrameworkRootPath">将用于计算引用程序集路径的根目录。 将按照 TargetFrameworkRootPath\TargetFrameworkIdentifier\TargetFrameworkVersion\SubType\TargetFrameworkSubType 的方式生成引用程序集。</param>
      <param name="frameworkName">表示 TargetFrameworkMoniker 的 frameworkName 类。 此值不能为 null。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToReferenceAssemblies(System.String,System.String,System.String)">
      <summary>返回给定目标框架的引用程序集位置的路径。 此方法将假设请求的 ReferenceAssemblyRoot 路径为 Environment.SpecialFolder.ProgramFiles 指定的 ProgramFiles 目录。另外，如果找到 .NET Framework 或 .NET Framework targetFrameworkIdentifiers 并且 targetFrameworkVersion 为 2.0、3.0、3.5 或 4.0，则返回早期 .NET Framework 版本的正确链接的引用程序集路径。 此链接将使用现有的 GetPathToDotNetFrameworkReferenceAssemblies 来生成引用程序集路径的列表。</summary>
      <returns>引用程序集位置的集合。</returns>
      <param name="targetFrameworkIdentifier">目标标识符</param>
      <param name="targetFrameworkVersion">目标版本</param>
      <param name="targetFrameworkProfile">目标配置文件</param>
      <exception cref="T:System.ArgumentNullException">在 frameworkName 为 null 时。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToStandardLibraries(System.String,System.String,System.String)">
      <summary>返回给定目标框架的标准库（即 mscorlib）的引用程序集位置的路径。 此方法将假设请求的 ReferenceAssemblyRoot 路径为 Environment.SpecialFolder.ProgramFiles 指定的 ProgramFiles 目录。另外，如果找到 .NET Framework 或 .NET Framework targetFrameworkIdentifiers 并且 targetFrameworkVersion 为 2.0、3.0、3.5 或 4.0，则返回早期 .NET Framework 版本的正确链接的引用程序集路径。 此链接将使用现有的 GetPathToDotNetFrameworkReferenceAssemblies 来生成引用程序集路径的列表。</summary>
      <returns>引用程序集位置的集合。</returns>
      <param name="targetFrameworkIdentifier">目标标识符</param>
      <param name="targetFrameworkVersion">目标版本</param>
      <param name="targetFrameworkProfile">目标配置文件</param>
      <exception cref="T:System.ArgumentNullException">在 frameworkName 为 null 时。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToStandardLibraries(System.String,System.String,System.String,System.String)">
      <summary>返回路径到 mscorlib 和 system.dll</summary>
      <returns>引用程序集位置的集合。</returns>
      <param name="targetFrameworkIdentifier">目标标识符</param>
      <param name="targetFrameworkVersion">目标版本</param>
      <param name="targetFrameworkProfile">目标配置文件</param>
      <param name="platformTarget">这用于确定我们应查找标准库。 请注意，此参数仅用于 .NET framework 3.5 或早期版本。</param>
      <exception cref="T:System.ArgumentNullException">在 frameworkName 为 null 时。</exception>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToSystemFile(System.String)">
      <summary>获取系统目录中的文件的完全限定路径。</summary>
      <returns>一个字符串，其中包含系统目录中的文件的完全限定路径。</returns>
      <param name="fileName">要在系统文件夹中查找的文件。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToWindowsSdk(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion)">
      <summary>返回路径到所需的 .NET Framework 和 Visual Studio 版本的 Windows SDK。 注意此仅提供给目标化的版本4.5及以上 .NET Framework。</summary>
      <returns>相应 Windows SDK 位置的路径。</returns>
      <param name="version">目标 .NET Framework 版本</param>
      <param name="visualStudioVersion">SDK 关联的 Visual Studio 版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToWindowsSdkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion)">
      <summary>返回路径到所需的 NET Framework 和 Visual Studio 版本的 Windows SDK 的文件。 注意此仅提供给目标化的版本4.5及以上 .NET Framework。</summary>
      <returns>相应 Windows SDK 文件的路径。</returns>
      <param name="fileName">所请求的文件的名称。</param>
      <param name="version">目标 .NET Framework 版本。</param>
      <param name="visualStudioVersion">SDK 关联的 Visual Studio 版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToWindowsSdkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion,Microsoft.Build.Utilities.VisualStudioVersion,Microsoft.Build.Utilities.DotNetFrameworkArchitecture)">
      <summary>返回路径到所需的 NET Framework 和 Visual Studio 版本的 Windows SDK 和所需的体系结构的文件。 注意此仅提供给目标化的版本4.5及以上 .NET Framework。</summary>
      <returns>相应 Windows SDK 文件的路径。</returns>
      <param name="fileName">所请求的文件的名称。</param>
      <param name="version">目标 .NET Framework 版本。</param>
      <param name="visualStudioVersion">与请求 SDK 关联的 Visual Studio 的版本。</param>
      <param name="architecture">结果文件所需的体系结构。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(System.String,System.String,System.String)">
      <summary>如果为 SDK 名字对象和针对的平台，则获取到 SDK 根的路径（如果存在）</summary>
      <returns>如果目标平台存在 SDK，则有 SDK 根的完整路径，如果不存在，则为空字符串。</returns>
      <param name="sdkMoniker">sdk 名字对象</param>
      <param name="targetPlatformIdentifier">平台的标识符</param>
      <param name="targetPlatformVersion">该平台的版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(System.String,System.String,System.String,System.String,System.String)">
      <summary>假设为 SDKName，则 targetPlatformIdentifier 和 TargetPlatformVersion 搜索 SDK 名称中传递的默认 SDK 位置。  SDK 名称对象的格式是 SDKName， Version=X.X</summary>
      <returns>如果找到，则为 SDK 位置，如果不能找到，则为空字符串。</returns>
      <param name="sdkMoniker">SDK 名称决定安装位置。</param>
      <param name="targetPlatformIdentifier">要为其查找 SDK 的目标平台。</param>
      <param name="targetPlatformVersion">要为其查找 SDK 的目标版本。</param>
      <param name="diskRoots">磁盘列表会跟踪 sdks 中</param>
      <param name="registryRoot">其中查找 sdks 的注册表根</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(System.String,System.String,System.Version)">
      <summary>假设为 SDKName，则 targetPlatformIdentifier 和 TargetPlatformVersion 搜索 SDK 名称中传递的默认 SDK 位置。  SDK 名称对象的格式是 SDKName， Version=X.X</summary>
      <returns>如果找到，则为 SDK 位置，如果不能找到，则为空字符串。</returns>
      <param name="sdkMoniker">SDK 名称决定安装位置。</param>
      <param name="targetPlatformIdentifier">要为其查找 SDK 的目标平台。</param>
      <param name="targetPlatformVersion">要为其查找 SDK 的目标版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocation(System.String,System.String,System.Version,System.String[],System.String)">
      <summary>假设为 SDKName，则 targetPlatformIdentifier 和 TargetPlatformVersion 搜索 SDK 名称中传递的默认 SDK 位置。  SDK 名称对象的格式是 SDKName， Version=X.X</summary>
      <returns>如果找到，则为 SDK 位置，如果不能找到，则为空字符串。</returns>
      <param name="sdkMoniker">SDK 名称决定安装位置。</param>
      <param name="targetPlatformIdentifier">要为其查找 SDK 的目标平台。</param>
      <param name="targetPlatformVersion">要为其查找 SDK 的目标版本。</param>
      <param name="diskRoots">磁盘列表会跟踪 sdks 中</param>
      <param name="registryRoot">其中查找 sdks 的注册表根</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocations(System.String,System.Version)">
      <summary>为给定的目标平台，获取已安装在机器上的 SDK 列表</summary>
      <returns>安装的 SDKS 及其位置的 IDictionary。 K:SDKName V:SDK 安装位置</returns>
      <param name="targetPlatformIdentifier">要为其查找 SDK 的目标平台。</param>
      <param name="targetPlatformVersion">要为其查找 SDK 的目标版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformExtensionSDKLocations(System.String[],System.String,System.String,System.Version)">
      <summary>为给定的目标平台，获取已安装在机器上的 SDK 列表</summary>
      <returns>安装的 SDKS 及其位置的 IDictionary。 K:SDKName V:SDK 安装位置</returns>
      <param name="diskRoots">搜索 sdks 磁盘位置的数组</param>
      <param name="registryRoot">要查找 sdks 的根注册表位置</param>
      <param name="targetPlatformIdentifier">要为其查找 SDK 的目标平台。</param>
      <param name="targetPlatformVersion">要为其查找 SDK 的目标版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(System.String,System.String)">
      <summary>给定目标平台标识符和目标平台版本，搜索平台 SDK 默认 SDK 位置的目标平台。</summary>
      <returns>如果找到，返回 SDK 的位置，否则，如果找不到 SDK，返回一个空字符串。</returns>
      <param name="targetPlatformIdentifier">查找 SDK 的目标平台。</param>
      <param name="targetPlatformVersion">查找 SDK 的目标平台版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(System.String,System.String,System.String,System.String)">
      <summary>给定目标平台标识符和目标平台版本，搜索平台 SDK 默认 SDK 位置的目标平台。</summary>
      <returns>如果找到，返回 SDK 的位置，否则，如果找不到 SDK，返回一个空字符串。</returns>
      <param name="targetPlatformIdentifier">查找 SDK 的目标平台。</param>
      <param name="targetPlatformVersion">查找 SDK 的目标平台版本。</param>
      <param name="diskRoots">跟踪 SDK 的磁盘数组会。</param>
      <param name="registryRoot">查找 SDK 的注册表根</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(System.String,System.Version)">
      <summary>给定目标平台标识符和目标平台版本，搜索平台 SDK 默认 SDK 位置的目标平台。</summary>
      <returns>如果找到，返回 SDK 的位置，否则，如果找不到 SDK，返回一个空字符串。</returns>
      <param name="targetPlatformIdentifier">查找 SDK 的目标平台。</param>
      <param name="targetPlatformVersion">查找 SDK 的目标平台版本。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPlatformSDKLocation(System.String,System.Version,System.String[],System.String)">
      <summary>给定目标平台标识符和目标平台版本，搜索平台 SDK 默认 SDK 位置的目标平台。</summary>
      <returns>如果找到，返回 SDK 的位置，否则，如果找不到 SDK，返回一个空字符串。</returns>
      <param name="targetPlatformIdentifier">查找 SDK 的目标平台。</param>
      <param name="targetPlatformVersion">查找 SDK 的目标平台版本。</param>
      <param name="diskRoots">跟踪 SDK 的磁盘数组会。</param>
      <param name="registryRoot">查找 SDK 的注册表根</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetProgramFilesReferenceAssemblyRoot">
      <summary>获取 Program Files 目录下引用程序集目录的根位置。</summary>
      <returns>返回引用程序集目录的根位置。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetSDKDesignTimeFolders(System.String)">
      <summary>获取的 SDK 文件夹列表包含指定 SDK 根时 SDK 的设计时文件)。 列表必须在搜索引用中使用的顺序中。</summary>
      <returns>返回在 SDK 中搜索设计时文件使用的文件夹列表，按必须用于搜索的顺序排序。</returns>
      <param name="sdkRoot">SDK 的根文件夹，必须包含设计时文件夹。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetSDKDesignTimeFolders(System.String,System.String,System.String)">
      <summary>获取的 SDK 文件夹列表包含指定 SDK 根时 SDK 的设计时文件)。 列表必须在搜索引用中使用的顺序中。</summary>
      <returns>返回在 SDK 中搜索设计时文件使用的文件夹列表，按必须用于搜索的顺序排序。</returns>
      <param name="sdkRoot">SDK 的根文件夹，必须包含设计时文件夹。</param>
      <param name="targetConfiguration">SDK 面向的配置。 这是“调试”或“发布”。</param>
      <param name="targetArchitecture">目标 SDK 体系结构。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetSDKRedistFolders(System.String)">
      <summary>获取的 SDK 文件夹列表包含指定 SDK 根时 SDK 重新分配文件)。 列表必须在搜索引用中使用的顺序中。</summary>
      <returns>返回在 SDK 中搜索 redist 文件使用的文件夹列表，按必须用于搜索的顺序排序。</returns>
      <param name="sdkRoot">SDK 的根文件夹，必须包含重新分配文件夹。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetSDKRedistFolders(System.String,System.String,System.String)">
      <summary>获取的 SDK 文件夹列表包含指定 SDK 根时 SDK 重新分配文件)。 列表必须在搜索引用中使用的顺序中。</summary>
      <returns>返回在 SDK 中搜索 redist 文件使用的文件夹列表，按必须用于搜索的顺序排序。</returns>
      <param name="sdkRoot">SDK 的根文件夹，必须包含重新分配文件夹。</param>
      <param name="targetConfiguration">SDK 面向的配置。 这是“调试”或“发布”。</param>
      <param name="targetArchitecture">目标 SDK 体系结构。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetSDKReferenceFolders(System.String)">
      <summary>获取的 SDK 文件夹列表包含指定 SDK 根时 SDK 引用)。 列表必须在搜索引用中使用的顺序中。</summary>
      <returns>返回在 SDK 中搜索引用使用的文件夹列表，按必须用于搜索的顺序排序。</returns>
      <param name="sdkRoot">SDK 的根文件夹。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetSDKReferenceFolders(System.String,System.String,System.String)">
      <summary>获取的 SDK 文件夹列表包含指定 SDK 根时 SDK 引用)。 列表必须在搜索引用中使用的顺序中。</summary>
      <returns>返回在 SDK 中搜索引用使用的文件夹列表，按必须用于搜索的顺序排序。</returns>
      <param name="sdkRoot">SDK 的根文件夹。</param>
      <param name="targetConfiguration">SDK 面向的配置。 这是“调试”或“发布”。</param>
      <param name="targetArchitecture">目标 SDK 体系结构。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetSupportedTargetFrameworks">
      <summary>获取所支持的目标框架名字对象的列表。</summary>
      <returns>所支持的目标框架名字对象的列表</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetTargetPlatformSdks">
      <summary>获取机器上目标平台 SDK 列表。</summary>
      <returns>目标平台 SDKs 列表， Item1: TargetPlatformName Item2: SDK 版本 Item3: sdk 根路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetTargetPlatformSdks(System.String[],System.String)">
      <summary>获取机器上目标平台 SDK 列表。</summary>
      <returns>返回目标平台 SDK 的列表。</returns>
      <param name="diskRoots">磁盘列表位置会跟踪平台 SDK。</param>
      <param name="registryRoot">要查找平台 SDK 的注册表根位置</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolLocationHelper.HighestVersionOfTargetFrameworkIdentifier(System.String,System.String)">
      <summary>获取基于标识符的目标框架名字对象的最高版本。</summary>
      <returns>返回基于标识符的目标框架名字对象的最高版本。 此方法将仅查找完全框架；不返回任何配置文件。</returns>
      <param name="targetFrameworkRootDirectory">目标框架根目录。</param>
      <param name="frameworkIdentifier">框架标识符。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolLocationHelper.PathToSystem">
      <summary>获取系统目录的完全限定路径。</summary>
      <returns>一个包含系统目录的目录路径的字符串。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:Microsoft.Build.Utilities.ToolTask">
      <summary>当在派生窗体中被重写时，为包装命令行工具的任务提供功能。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.#ctor">
      <summary>初始化 <see cref="T:Microsoft.Build.Utilities.ToolTask" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager)">
      <summary>用指定的 <see cref="T:System.Resources.ResourceManager" /> 初始化 <see cref="T:Microsoft.Build.Utilities.ToolTask" /> 类的新实例。</summary>
      <param name="taskResources">任务资源的 <see cref="T:System.Resources.ResourceManager" />。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager,System.String)">
      <summary>使用指定的 <see cref="T:System.Resources.ResourceManager" /> 和“帮助”关键字前缀初始化 <see cref="T:Microsoft.Build.Utilities.ToolTask" /> 类的新实例。</summary>
      <param name="taskResources">任务资源的 <see cref="T:System.Resources.ResourceManager" />。</param>
      <param name="helpKeywordPrefix">要用于该任务引发的消息的“帮助”关键字。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute">
      <summary>调用宿主对象以执行该任务的工作。</summary>
      <returns>如果此方法已成功，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.Cancel">
      <summary>通过以下方式取消正在执行任务的进程：请求该进程正常关闭，在经过短时间的等待之后，强制终止该进程。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.DeleteTempFile(System.String)">
      <summary>删除指定的临时文件。</summary>
      <param name="fileName">要删除的临时文件的名称。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.EchoOff">
      <summary>指示命令行回显已关闭。</summary>
      <returns>如果命令行回显已关闭，则为 true。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.EnvironmentOverride">
      <summary>获取一组环境变量名称-值对。 可在自定义任务类（从 ToolTask 派生）中重写以返回一组新的或更改的环境变量，从而创建关联工具的执行上下文。</summary>
      <returns>返回一组环境变量。 每个字典键均为要重写的环境变量的名称，并且字典值是要为相应的环境变量设置的值。 EnvironmentOverride 的默认实现返回 null。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.EnvironmentVariables">
      <summary>除了（或者有选择地重写）常规的环境块外，应传递到生成的可执行文件的用等号分隔的环境变量对的数组。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.Execute">
      <summary>用指定的任务参数运行可执行文件。</summary>
      <returns>如果任务成功运行，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.ExecuteTool(System.String,System.String,System.String)">
      <summary>创建一个临时的响应 (.rsp) 文件并运行可执行文件。</summary>
      <returns>可执行文件返回的退出代码。 如果该任务记录了错误，但是可执行文件返回的退出代码为 0，则此方法将返回 -1。</returns>
      <param name="pathToTool">可执行文件的路径。</param>
      <param name="responseFileCommands">要放入 .rsp 文件中的命令行参数。</param>
      <param name="commandLineCommands">要直接传递到可执行文件的命令行参数。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ExitCode">
      <summary>获取可执行文件返回的退出代码。</summary>
      <returns>可执行文件返回的退出代码。 如果该任务记录了错误，但是可执行文件返回的退出代码为 0，则此方法将返回 -1。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands">
      <summary>返回一个字符串值，该值包含要直接传递到可执行文件的命令行参数。</summary>
      <returns>一个字符串值，其中包含要直接传递到可执行文件的命令行参数。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool">
      <summary>返回可执行文件的完全限定路径。</summary>
      <returns>可执行文件的完全限定路径。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands">
      <summary>返回一个字符串值，该值包含在运行可执行文件之前要添加到响应 (.rsp) 文件中的命令行参数。</summary>
      <returns>一个字符串值，其中包含在运行可执行文件之前要添加到响应 (.rsp) 文件中的命令行参数。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(System.String,System.String,System.String)">
      <summary>初始化生成执行该工具的进程所需的信息。</summary>
      <returns>启动进程所需的信息。</returns>
      <param name="pathToTool">该工具的路径。</param>
      <param name="commandLineCommands">命令行命令。</param>
      <param name="responseFileSwitch">响应文件开关。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(System.String)">
      <summary>返回可执行文件用来指定响应 (.rsp) 文件的命令行开关。</summary>
      <returns>可执行文件用来指定响应 (.rsp) 文件的命令行开关。</returns>
      <param name="responseFilePath">临时 .rsp 文件的完整路径。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory">
      <summary>返回要在其中运行可执行文件的目录。</summary>
      <returns>要在其中运行可执行文件的目录；如果应在当前目录中运行可执行文件，则为空引用（在 Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors">
      <summary>处理由可执行文件引发的执行错误。</summary>
      <returns>如果该方法成功运行，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.HasLoggedErrors">
      <summary>此 ToolTask 是否记录了任何错误</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.InitializeHostObject">
      <summary>初始化该任务的宿主对象。</summary>
      <returns>宿主对象的 <see cref="T:Microsoft.Build.Utilities.HostObjectInitializationStatus" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)">
      <summary>分析一行文本以识别任何规范格式的错误或警告。</summary>
      <param name="singleLine">要分析的方法的一行文本。</param>
      <param name="messageImportance">指示用于记录消息的重要性级别的 <see cref="T:Microsoft.Build.Framework.MessageImportance" /> 值。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.LogPathToTool(System.String,System.String)">
      <summary>记录所有已注册的记录器的工具名和路径。</summary>
      <param name="toolName">可执行文件的名称。</param>
      <param name="pathToTool">可执行文件的路径。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError">
      <summary>应将标准错误流上接收的所有消息作为错误记录。</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.LogToolCommand(System.String)">
      <summary>将运行的起始点记录到所有已注册的记录器。</summary>
      <param name="message">用来提供记录器（通常为命令行和开关）的描述性消息。</param>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding">
      <summary>获取响应文件的 <see cref="T:System.Text.Encoding" />。</summary>
      <returns>响应文件的 <see cref="T:System.Text.Encoding" />。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(System.String)">
      <summary>用来转义响应文件的可重写方法。</summary>
      <returns>返回响应字符串。</returns>
      <param name="responseString">响应字符串。</param>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution">
      <summary>指示是否应当跳过任务执行。</summary>
      <returns>如果要跳过任务执行，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding">
      <summary>获取该任务的标准错误流的 <see cref="T:System.Text.Encoding" />。</summary>
      <returns>响应文件的 <see cref="T:System.Text.Encoding" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportance">
      <summary>任务参数：关于记录标准错误流的文本的重要性。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse">
      <summary>获取记录标准错误消息的实际重要性。</summary>
      <returns>返回记录标准错误消息的实际重要性。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance">
      <summary>获取记录错误时要使用的 <see cref="T:Microsoft.Build.Framework.MessageImportance" />。</summary>
      <returns>记录错误时要使用的 <see cref="T:Microsoft.Build.Framework.MessageImportance" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding">
      <summary>获取该任务的标准输出流的 <see cref="T:System.Text.Encoding" />。</summary>
      <returns>响应文件的 <see cref="T:System.Text.Encoding" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportance">
      <summary>任务参数：关于记录标准输出流的文本的重要性。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse">
      <summary>获取记录标准输出消息的实际重要性。</summary>
      <returns>返回记录标准输出消息的实际重要性。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance">
      <summary>获取记录错误时要使用的 <see cref="T:Microsoft.Build.Framework.MessageImportance" />。</summary>
      <returns>记录错误时要使用的 <see cref="T:Microsoft.Build.Framework.MessageImportance" />。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout">
      <summary>在取消任务之前等待该任务终止所需的超时。 以毫秒为单位。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.Timeout">
      <summary>获取或设置在经过多长时间后终止任务可执行文件。</summary>
      <returns>超时长度，以毫秒为单位。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ToolCanceled">
      <summary>用于在已取消某个工具时发出信号。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ToolExe">
      <summary>项目可以设置此值以重写任务的 ToolName。 任务可以重写此值以防止前面出现的情况。</summary>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ToolName">
      <summary>获取要运行的可执行文件的名称。</summary>
      <returns>要运行的可执行文件的名称。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.ToolPath">
      <summary>获取或设置要运行的可执行文件的路径。</summary>
      <returns>要运行的文件的路径。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.UseCommandProcessor">
      <summary>获取或设置一个开关，该开关指定工具任务是否将为命令行创建一个批处理文件并使用命令处理器执行该文件，而不是直接执行该命令。</summary>
      <returns>如果为 true，则该工具任务将为命令行创建一个批处理文件并使用命令处理器执行该文件。 如果为 false，则工具任务将直接执行该命令。</returns>
    </member>
    <member name="M:Microsoft.Build.Utilities.ToolTask.ValidateParameters">
      <summary>指示所有任务参数是否均有效。</summary>
      <returns>如果所有任务参数均有效，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution">
      <summary>指示该任务是否将在工具执行过程中产生该节点。</summary>
      <returns>如果该任务将在工具执行过程中产生该节点，则为 true。</returns>
    </member>
    <member name="T:Microsoft.Build.Utilities.TrackedDependencies">
      <summary>此类包含一些用于帮助跟踪依赖项的实用工具函数</summary>
    </member>
    <member name="M:Microsoft.Build.Utilities.TrackedDependencies.ExpandWildcards(Microsoft.Build.Framework.ITaskItem[])">
      <summary>展开项列表中的通配符。</summary>
      <returns>已展开的项数组</returns>
      <param name="expand">要展开的项数组。</param>
    </member>
    <member name="T:Microsoft.Build.Utilities.UpToDateCheckType">
      <summary>我们可以支持的最新检查的可能类型</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.UpToDateCheckType.InputNewerThanOutput">
      <summary>输入比输出更新</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.UpToDateCheckType.InputNewerThanTracking">
      <summary>输入比跟踪更新</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.UpToDateCheckType.InputOrOutputNewerThanTracking">
      <summary>输入或输出比跟踪更新</summary>
    </member>
    <member name="T:Microsoft.Build.Utilities.VisualStudioVersion">
      <summary>用于指定可视演播室版本的选项。 ToolLocationHelper 某些方法的伴生的工具</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.VisualStudioVersion.Version100">
      <summary>Visual Studio 2010 和 SP1</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.VisualStudioVersion.Version110">
      <summary>Visual Studio 2012</summary>
    </member>
    <member name="F:Microsoft.Build.Utilities.VisualStudioVersion.VersionLatest">
      <summary>在发布时可用的最新版本</summary>
    </member>
  </members>
</doc>