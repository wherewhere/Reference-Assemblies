<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObject">
      <summary>包含一个类型和与该类型相关联的值的集合。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)">
      <summary>使用指定的 <see cref="T:System.Security.Cryptography.Oid" /> 对象所表示的特性初始化 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 类的新实例。</summary>
      <param name="oid">要存储在此 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象中的特性。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)">
      <summary>使用指定的 <see cref="T:System.Security.Cryptography.Oid" /> 对象所表示的特性和与该特性相关联的一组值（由指定的 <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> 集合表示）来初始化 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 类的新实例。</summary>
      <param name="oid">要存储在此 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象中的特性。</param>
      <param name="values">与 <paramref name="oid" /> 参数表示的特性关联的一组值。</param>
      <exception cref="T:System.InvalidOperationException">集合中包含重复的项。</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Oid">
      <summary>获取指定特性的对象标识符的 <see cref="T:System.Security.Cryptography.Oid" /> 对象。</summary>
      <returns>特性的对象标识符。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Values">
      <summary>获取包含与该特性相关联的一组值的 <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> 集合。</summary>
      <returns>与该特性关联的一组值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectCollection">
      <summary>包含 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>初始化 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 类的新实例，将指定的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 添加到集合中。</summary>
      <param name="attribute">添加到集合中的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.AsnEncodedData)">
      <summary>将指定的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象添加到集合。</summary>
      <returns>如果方法返回添加项从零开始的索引，则为 true；否则，为 false。</returns>
      <param name="asnEncodedData">要添加到集合中的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> 为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>将指定的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象添加到集合。</summary>
      <returns>如果方法返回添加项从零开始的索引，则为 true；否则，为 false。</returns>
      <param name="attribute">要添加到集合中的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> 为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">集合中已存在指定的项。</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.CopyTo(System.Security.Cryptography.CryptographicAttributeObject[],System.Int32)">
      <summary>将 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合复制到 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象的数组。</summary>
      <param name="array">将集合复制到的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象的数组。</param>
      <param name="index">将集合复制到的 <paramref name="array" /> 中的从零开始的索引。</param>
      <exception cref="T:System.ArgumentException">为方法提供的某一参数无效。</exception>
      <exception cref="T:System.ArgumentNullException">向方法传递 null 而该方法不把它作为有效参数接受。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Count">
      <summary>获取集合中项的数目。</summary>
      <returns>集合中的项数。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.GetEnumerator">
      <summary>获取集合的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> 对象。</summary>
      <returns>如果方法返回可用于枚举集合的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> 对象，则为 true；否则，为 false。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.IsSynchronized">
      <summary>获取一个值，该值指示对集合的访问是否是同步的或线程安全的。</summary>
      <returns>如果对集合的访问是线程安全的，则为 true；否则，为 false。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Item(System.Int32)">
      <summary>获取集合中指定索引位置的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</summary>
      <returns>位于指定索引处的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</returns>
      <param name="index">一个 <see cref="T:System.Int32" /> 值，表示要检索的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象的从零开始的索引。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Remove(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>从集合中移除指定的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</summary>
      <param name="attribute">要从集合中移除的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attribute" /> 为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.SyncRoot">
      <summary>获取用于同步访问集合的 <see cref="T:System.Object" /> 对象。</summary>
      <returns>用于同步访问 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合的 <see cref="T:System.Object" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>将此 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合的元素复制到 <see cref="T:System.Array" /> 数组，从特定的索引开始。</summary>
      <param name="array">作为从此 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 复制的元素的目标位置的一维 <see cref="T:System.Array" /> 数组。 <see cref="T:System.Array" /> 数组必须具有从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回一个循环访问 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合的枚举数。</summary>
      <returns>可用于循环访问 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator">
      <summary>为 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合提供枚举功能。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Current">
      <summary>从 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合中获取当前的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象，表示 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合中的当前加密特性。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.MoveNext">
      <summary>将枚举前移到 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合中的下一个 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</summary>
      <returns>如果枚举已成功地移动到下一个 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象，则为 true；如果枚举数位于枚举的末尾，则为 false。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Reset">
      <summary>将枚举重置到 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合中的第一个 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</summary>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>从 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合中获取当前的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象，表示 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合中的当前加密特性。</returns>
    </member>
    <member name="T:System.Security.Cryptography.DataProtectionScope">
      <summary>指定 <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" /> 方法要应用的数据保护范围。</summary>
    </member>
    <member name="F:System.Security.Cryptography.DataProtectionScope.CurrentUser">
      <summary>受保护的数据与当前用户关联。 只有在当前用户上下文中运行的线程才可以取消数据保护。</summary>
    </member>
    <member name="F:System.Security.Cryptography.DataProtectionScope.LocalMachine">
      <summary>受保护的数据与计算机上下文关联。 计算机中运行的任何进程都可以取消数据保护。 此枚举值通常用于服务器（不受信任的用户无法访问服务器）上运行的服务器特定应用程序。</summary>
    </member>
    <member name="T:System.Security.Cryptography.DataProtector">
      <summary>提供数据保护程序的基类。</summary>
    </member>
    <member name="M:System.Security.Cryptography.DataProtector.#ctor(System.String,System.String,System.String[])">
      <summary>使用提供的应用程序名称、主要用途和具体目的，创建 <see cref="T:System.Security.Cryptography.DataProtector" /> 类的新实例。</summary>
      <param name="applicationName">应用程序的名称。</param>
      <param name="primaryPurpose">保护的数据的主要目的。 有关其他重要信息，请参见备注。</param>
      <param name="specificPurposes">数据保护器的指定目的。 有关其他重要信息，请参见备注。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="applicationName" /> 为空字符串或 null。 - 或 - <paramref name="primaryPurpose" /> 为空字符串或 null。 - 或 - <paramref name="specificPurposes" /> 包含空字符串或 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.DataProtector.ApplicationName">
      <summary>获取应用程序的名称。</summary>
      <returns>应用程序的名称。</returns>
    </member>
    <member name="M:System.Security.Cryptography.DataProtector.Create(System.String,System.String,System.String,System.String[])">
      <summary>使用数据保护器的指定类名、应用程序名称、主要用途和特定目的，创建数据保护器实现的实例。</summary>
      <returns>数据保护器实现对象。</returns>
      <param name="providerClass">数据保护器的类名称。</param>
      <param name="applicationName">应用程序的名称。</param>
      <param name="primaryPurpose">保护的数据的主要目的。</param>
      <param name="specificPurposes">数据保护器的指定目的。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerClass" /> 为 null。</exception>
    </member>
    <member name="M:System.Security.Cryptography.DataProtector.GetHashedPurpose">
      <summary>创建由构造函数指定的属性值的哈希。</summary>
      <returns>包含 <see cref="P:System.Security.Cryptography.DataProtector.ApplicationName" />、 <see cref="P:System.Security.Cryptography.DataProtector.PrimaryPurpose" />和 <see cref="P:System.Security.Cryptography.DataProtector.SpecificPurposes" /> 属性的哈希的字节数组。</returns>
    </member>
    <member name="M:System.Security.Cryptography.DataProtector.IsReprotectRequired(System.Byte[])">
      <summary>确定指定的加密数据是否需要重新加密。</summary>
      <returns>如果必须加再密数据，则为 true；否则为 false。</returns>
      <param name="encryptedData">需评估的加密数据。</param>
    </member>
    <member name="P:System.Security.Cryptography.DataProtector.PrependHashedPurposeToPlaintext">
      <summary>指定哈希是否已附加到加密前的文本数组。</summary>
      <returns>始终为 true。</returns>
    </member>
    <member name="P:System.Security.Cryptography.DataProtector.PrimaryPurpose">
      <summary>获取保护的数据的主要目的。</summary>
      <returns>保护的数据的主要目的。</returns>
    </member>
    <member name="M:System.Security.Cryptography.DataProtector.Protect(System.Byte[])">
      <summary>保护指定用户数据。</summary>
      <returns>一个包含加密数据的字节数组。</returns>
      <param name="userData">受保护的数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userData" /> 为 null。</exception>
    </member>
    <member name="M:System.Security.Cryptography.DataProtector.ProviderProtect(System.Byte[])">
      <summary>指定基类中回调的 <see cref="M:System.Security.Cryptography.DataProtector.Protect(System.Byte[])" /> 方法中派生类的委托方法。</summary>
      <returns>一个包含加密数据的字节数组。</returns>
      <param name="userData">要加密的数据。</param>
    </member>
    <member name="M:System.Security.Cryptography.DataProtector.ProviderUnprotect(System.Byte[])">
      <summary>指定基类中回调的 <see cref="M:System.Security.Cryptography.DataProtector.Unprotect(System.Byte[])" /> 方法中派生类的委托方法。</summary>
      <returns>未加密的数据。</returns>
      <param name="encryptedData">要解密的数据。</param>
    </member>
    <member name="P:System.Security.Cryptography.DataProtector.SpecificPurposes">
      <summary>获取保护数据的指定目的。</summary>
      <returns>保护数据的特定用途的集合。</returns>
    </member>
    <member name="M:System.Security.Cryptography.DataProtector.Unprotect(System.Byte[])">
      <summary>取消对指定保护数据保护。</summary>
      <returns>包含纯文本数据的字节数组。</returns>
      <param name="encryptedData">将被不受保护的加密数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptedData" /> 为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encryptedData" /> 包含了无效的用途。</exception>
    </member>
    <member name="T:System.Security.Cryptography.DpapiDataProtector">
      <summary>提供简单数据保护方法。</summary>
    </member>
    <member name="M:System.Security.Cryptography.DpapiDataProtector.#ctor(System.String,System.String,System.String[])">
      <summary>使用指定应用程序名称、主要用途和具体目的，创建 <see cref="T:System.Security.Cryptography.DpapiDataProtector" /> 类的新实例。</summary>
      <param name="appName">应用程序的名称。</param>
      <param name="primaryPurpose">数据保护器的主要目的。</param>
      <param name="specificPurpose">用于数据保护器的指定目的。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="appName" /> 为空字符串或 null。 - 或 - <paramref name="primaryPurpose" /> 为空字符串或 null。 - 或 - <paramref name="specificPurposes" /> 包含空字符串或 null。</exception>
    </member>
    <member name="M:System.Security.Cryptography.DpapiDataProtector.IsReprotectRequired(System.Byte[])">
      <summary>确定如果数据必须加再密数据。</summary>
      <returns>如果必须加再密数据，则为 true；否则为 false。</returns>
      <param name="encryptedData">需检查的加密数据。</param>
    </member>
    <member name="P:System.Security.Cryptography.DpapiDataProtector.Scope">
      <summary>获取或设置数据保护的范围。</summary>
      <returns>一个枚举值指定数据保护的范围（当前用户或本地计算机）。 默认值为 <see cref="F:System.Security.Cryptography.DataProtectionScope.CurrentUser" />。</returns>
    </member>
    <member name="T:System.Security.Cryptography.MemoryProtectionScope">
      <summary>指定将由 <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> 方法应用的内存保护范围。</summary>
    </member>
    <member name="F:System.Security.Cryptography.MemoryProtectionScope.CrossProcess">
      <summary>任何进程中的任何代码均可使用 <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> 方法取消对受保护内存的保护。</summary>
    </member>
    <member name="F:System.Security.Cryptography.MemoryProtectionScope.SameLogon">
      <summary>只有与调用 <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> 方法的代码在相同的用户上下文中运行的代码才能取消对内存的保护。</summary>
    </member>
    <member name="F:System.Security.Cryptography.MemoryProtectionScope.SameProcess">
      <summary>只有与调用 <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> 方法的代码在相同的进程中运行的代码才能取消对内存的保护。</summary>
    </member>
    <member name="T:System.Security.Cryptography.ProtectedData">
      <summary>提供用于加密和解密数据的方法。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)">
      <summary>在指定的字节数组中加密数据，并返回包含已加密数据的字节数组。</summary>
      <returns>表示已加密数据的字节数组。</returns>
      <param name="userData">包含要加密数据的字节数组。</param>
      <param name="optionalEntropy">一个用来增加加密复杂度的可选的附加字节数组，或者是 null 如果不要增加复杂度。</param>
      <param name="scope">用于指定加密范围的枚举值之一。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userData" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">加密失败。</exception>
      <exception cref="T:System.NotSupportedException">该操作系统不支持此方法。</exception>
      <exception cref="T:System.OutOfMemoryException">加密数据时系统内存不足。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.DataProtectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ProtectData" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)">
      <summary>在指定的字节数组中解密数据，并返回包含已解密数据的字节数组。</summary>
      <returns>表示已解密数据的字节数组。</returns>
      <param name="encryptedData">一个字节数组，包含用 <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" /> 方法加密的数据。</param>
      <param name="optionalEntropy">用于加密数据，或 null 的可选的额外的字节数组，如果不使用额外的字节数组。</param>
      <param name="scope">指定用来加密数据的数据保护的范围的枚举值之一。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptedData" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">解密失败。</exception>
      <exception cref="T:System.NotSupportedException">该操作系统不支持此方法。</exception>
      <exception cref="T:System.OutOfMemoryException">内存不足。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.DataProtectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnprotectData" />
      </PermissionSet>
    </member>
    <member name="T:System.Security.Cryptography.ProtectedMemory">
      <summary>提供保护内存和取消内存保护的方法。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)">
      <summary>保护指定数据。</summary>
      <param name="userData">一个字节数组，包含要保护的内存中的数据。 该数组必须是 16 字节的倍数。</param>
      <param name="scope">指定内存保护范围的枚举值之一。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="userData" /> 的长度必须是 16 字节或 16 字节的倍数。</exception>
      <exception cref="T:System.NotSupportedException">该操作系统不支持此方法。 此方法仅可用于 Windows 2000 或更高版本的操作系统。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userData " />为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.DataProtectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ProtectMemory" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)">
      <summary>取消对使用 <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> 方法保护的内存中的数据的保护。</summary>
      <param name="encryptedData">要解密的内存中的字节数组。</param>
      <param name="scope">指定内存保护范围的枚举值之一。</param>
      <exception cref="T:System.NotSupportedException">该操作系统不支持此方法。 此方法仅可用于 Windows 2000 或更高版本的操作系统。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptedData " />为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encryptedData " /> 为空。 - 或 - 未实现此调用。 - 或 - NTSTATUS 包含错误。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.DataProtectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnprotectMemory" />
      </PermissionSet>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 类定义用于加密操作的算法。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor" /> 构造函数通过使用一组默认参数来创建 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 类的实例。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)" /> 构造函数使用指定的算法标识符创建 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 类的实例。</summary>
      <param name="oid">算法的对象标识符。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)" /> 构造函数使用指定的算法标识符和密钥长度来创建 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 类的实例。</summary>
      <param name="oid">算法的对象标识符。</param>
      <param name="keyLength">密钥长度，以位为单位。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength" /> 属性设置或检索密钥长度（以位为单位）。 对于使用固定密钥长度的算法，不使用此属性。</summary>
      <returns>一个表示密钥长度（以位为单位）的整数值。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid" /> 属性设置或检索 <see cref="T:System.Security.Cryptography.Oid" /> 对象，该对象指定算法的对象标识符。</summary>
      <returns>一个表示该算法的 <see cref="T:System.Security.Cryptography.Oid" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters" /> 属性设置或检索算法所需的任何参数。</summary>
      <returns>一个字节值数组，指定算法所需的任何参数。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipient">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 类定义 CMS/PKCS #7 消息的收件人。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)" /> 构造函数使用指定的收件人标识符类型和收件人证书构造 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 类的实例。</summary>
      <param name="recipientIdentifierType">指定收件人标识符类型的 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 枚举的成员。</param>
      <param name="certificate">表示收件人证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" /> 构造函数使用指定的收件人证书构造 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 类的实例。</summary>
      <param name="certificate">表示收件人证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.Certificate">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipient.Certificate" /> 属性检索与收件人关联的证书。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象，此对象持有与收件人关联的证书。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType" /> 属性检索收件人标识符的类型。</summary>
      <returns>指定收件人标识符类型的 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 枚举的成员。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 类表示 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象的集合。 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 实现 <see cref="T:System.Collections.ICollection" /> 接口。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 类的实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 类的实例并添加指定的收件人。</summary>
      <param name="recipient">表示指定的 CMS/PKCS #7 收件人的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 类的一个实例。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 类的实例并根据指定的主题标识符和标识收件人的证书集添加收件人。</summary>
      <param name="recipientIdentifierType">指定主题标识符类型的 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 枚举的成员。</param>
      <param name="certificates">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 集合，其中包含标识收件人的证书。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 方法向 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中添加收件人。</summary>
      <returns>如果此方法成功，则返回一个 <see cref="T:System.Int32" /> 值，该值表示从零开始插入收件人的位置。 如果此方法失败，则会引发异常。</returns>
      <param name="recipient">一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象，表示要向 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中添加的收件人。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> 为 null。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)" /> 方法将 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合复制到一个数组中。</summary>
      <param name="array">一个 <see cref="T:System.Array" /> 对象，要将 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合复制到其中。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合将被复制到此位置。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 不够大，无法保存指定的元素。 - 或 - <paramref name="array" /> 未包含正确的维数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 超出了 <paramref name="array" /> 中的元素范围。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)" /> 方法将 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合复制到 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 数组中。</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象的数组，<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合将被复制到其中。</param>
      <param name="index">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象数组的从零开始的索引，<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合将被复制到该对象所在的 <paramref name="array" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 不够大，无法保存指定的元素。 - 或 - <paramref name="array" /> 未包含正确的维数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 超出了 <paramref name="array" /> 中的元素范围。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count" /> 属性检索 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中的项数。</summary>
      <returns>一个 <see cref="T:System.Int32" /> 值，该值表示集合中的项数。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator" /> 方法为 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合返回一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 对象。</summary>
      <returns>可用于对 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合进行枚举的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized" /> 属性检索对集合的访问是否为同步的，即线程安全的。 此属性始终返回 false，表示集合不是线程安全的。</summary>
      <returns>
        <see cref="T:System.Boolean" /> 值为 false，表示集合不是线程安全的。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)" /> 属性检索集合中指定索引处的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象。</summary>
      <returns>位于指定索引处的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象。</returns>
      <param name="index">一个表示集合中的索引的 <see cref="T:System.Int32" /> 值。 索引是从零开始的。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 方法将收件人从 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中移除。</summary>
      <param name="recipient">一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象，该对象表示要从集合中移除的收件人。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> 为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot" /> 属性检索用于同步访问 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合的 <see cref="T:System.Object" /> 对象。</summary>
      <returns>用于同步访问 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合的 <see cref="T:System.Object" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator" /> 方法为 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合返回一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 对象。</summary>
      <returns>可用于对 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合进行枚举的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 类为 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合提供枚举功能。 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 实现 <see cref="T:System.Collections.IEnumerator" /> 接口。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current" /> 属性从 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中检索当前的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象，表示 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中的当前收信方。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext" /> 方法将枚举前移到 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中的下一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象。</summary>
      <returns>如果枚举成功移到下一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象，则为 true；如果枚举移到枚举中的最后一项之后，则为 false。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset" /> 方法将枚举重置到 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中的第一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current" /> 属性从 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中检索当前的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象，表示 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中的当前收信方。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsSigner">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 类提供签名功能。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor" /> 构造函数使用默认的主题标识符类型创建 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 类的实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.CspParameters)" /> 构造函数使用指定的加密服务提供程序 (CSP) 参数创建 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 类的实例。 当知道用于签名的特定 CSP 和私钥时，<see cref="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.CspParameters)" /> 非常有用。</summary>
      <param name="parameters">一个 <see cref="T:System.Security.Cryptography.CspParameters" /> 对象，表示要使用的 CSP 参数集。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" /> 构造函数使用指定的主题标识符类型创建 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 类的实例。</summary>
      <param name="signerIdentifierType">指定签名者标识符类型的 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 枚举的成员。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)" /> 构造函数使用指定的签名者标识符类型和签名证书创建 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 类的实例。</summary>
      <param name="signerIdentifierType">指定签名者标识符类型的 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 枚举的成员。</param>
      <param name="certificate">表示签名证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" /> 构造函数使用指定的签名证书创建 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 类的实例。</summary>
      <param name="certificate">表示签名证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> 属性设置或检索表示签名证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</summary>
      <returns>表示签名证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificates">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificates" /> 属性检索 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 集合，该集合包含与要签名的消息关联的证书。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 集合，表示与要签名的消息关联的证书的集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.DigestAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.DigestAlgorithm" /> 属性设置或检索 <see cref="T:System.Security.Cryptography.Oid" />，它表示用于计算签名的哈希算法。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Oid" /> 对象，表示用于计算签名的哈希算法。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption" /> 属性设置或检索相关选项，该选项控制是否将与签名证书关联的根证书和整个证书链包含在创建的 CMS/PKCS #7 消息中。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509IncludeOption" /> 枚举的成员，指定应在 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 对象中包含 X509 证书链中的多少证书。 <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption" /> 属性可以为下列 <see cref="T:System.Security.Cryptography.X509Certificates.X509IncludeOption" /> 成员之一。 名称 值 含义 <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.None" />0不包含证书链。 <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" />1包含除根证书之外的证书链。 <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.EndCertOnly" />2仅包含最终证书。 <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" />3包含包括根证书的证书链。</returns>
      <exception cref="T:System.ArgumentException">为方法提供的某一参数无效。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes" /> 属性检索与得到的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 内容关联的签名特性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 已签名特性与指定内容一起进行签名。</summary>
      <returns>一个表示已签名特性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 如果没有已签名特性，则该属性为空集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignerIdentifierType">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.SignerIdentifierType" /> 属性设置或检索签名者标识符的类型。</summary>
      <returns>指定签名者标识符类型的 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 枚举的成员。</returns>
      <exception cref="T:System.ArgumentException">为方法提供的某一参数无效。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.UnsignedAttributes">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.UnsignedAttributes" /> 属性检索与得到的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 内容关联的未签名 PKCS #9 特性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 可对未签名特性进行修改，这不会导致签名无效。</summary>
      <returns>表示未签名特性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 如果没有未签名特性，则该属性为空集合。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.ContentInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 类表示 CMS/PKCS #7 标准文档中定义的 CMS/PKCS #7 ContentInfo 数据结构。 此数据结构是所有 CMS/PKCS #7 消息的基础。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])" /> 构造函数通过使用作为数据的字节值数组和表示内容类型的默认 <paramref name="object identifier" /> (OID) 来创建 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 类的实例。</summary>
      <param name="content">一个表示数据的字节值数组，要从这些数据创建 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])" /> 构造函数通过使用指定的内容类型和用作数据的字节值数组来创建 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 类的实例。</summary>
      <param name="contentType">一个 <see cref="T:System.Security.Cryptography.Oid" /> 对象，该对象包含指定内容的内容类型的 <paramref name="object identifier" /> (OID)。 可以是 data、digestedData、encryptedData、envelopedData、hashedData、signedAndEnvelopedData 或 signedData。有关更多信息，请参见“备注”。</param>
      <param name="content">一个表示数据的字节值数组，要从这些数据创建 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.Content">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.Content" /> 属性检索 CMS/PKCS #7 消息的内容。</summary>
      <returns>一个表示内容数据的字节值数组。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType" /> 属性检索 <see cref="T:System.Security.Cryptography.Oid" /> 对象，该对象包含 CMS/PKCS #7 消息内部内容的内容类型的 <paramref name="object identifier" /> (OID)。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Oid" /> 对象，该对象包含表示内容类型的 OID 值。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])" /> 静态方法检索编码的 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 消息的外部内容类型，该消息由字节值数组表示。</summary>
      <returns>如果此方法成功，则返回 <see cref="T:System.Security.Cryptography.Oid" /> 对象，该对象包含指定编码 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 消息的外部内容类型。 如果此方法失败，则会引发异常。</returns>
      <param name="encodedMessage">一个字节值数组，表示要从中检索外部内容类型的编码的 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 消息。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">在执行加密操作时出错。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.EnvelopedCms">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 类表示封装数据的 CMS/PKCS #7 结构。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 类的实例。</summary>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" /> 构造函数通过使用指定的内容信息作为内部内容类型来创建 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 类的实例。</summary>
      <param name="contentInfo">表示内容及其类型的 <see cref="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo" /> 类的实例。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)" /> 构造函数通过使用指定的内容信息和加密算法来创建 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 类的实例。 指定的内容信息要用作内部内容类型。</summary>
      <param name="contentInfo">一个表示内容及其类型的 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象。</param>
      <param name="encryptionAlgorithm">一个指定加密算法的 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" /> 构造函数通过使用指定的主题标识符类型和内容信息来创建 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 类的实例。 指定的内容信息要用作内部内容类型。</summary>
      <param name="recipientIdentifierType">指定标识收件人的方法的 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 枚举的成员。</param>
      <param name="contentInfo">一个表示内容及其类型的 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)" /> 构造函数通过使用指定的主题标识符类型、内容信息和加密算法来创建 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 类的实例。 指定的内容信息要用作内部内容类型。</summary>
      <param name="recipientIdentifierType">指定标识收件人的方法的 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 枚举的成员。</param>
      <param name="contentInfo">一个表示内容及其类型的 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象。</param>
      <param name="encryptionAlgorithm">一个指定加密算法的 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates" /> 属性检索与 CMS/PKCS #7 封装消息关联的证书集。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 集合，表示与 CMS/PKCS #7 封装消息一起使用的 X.509 证书。 如果不存在任何证书，则该属性值为空集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm" /> 属性检索用于加密内容的算法的标识符。</summary>
      <returns>一个表示算法标识符的 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo" /> 属性检索 CMS/PKCS #7 封装消息的内部内容信息。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象，表示 CMS/PKCS #7 封装消息的内部内容信息。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])" /> 方法对指定的 CMS/PKCS #7 封装消息进行解码并重置 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 对象中的所有成员变量。</summary>
      <param name="encodedMessage">一个表示要解码的信息的字节值数组。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt" /> 方法解密解码的 CMS/PKCS #7 封装消息的内容。 <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt" /> 方法在当前用户和计算机“我的存储”中搜索合适的证书和私钥。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.StorePermission, System.Security, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Flags="CreateStore, DeleteStore, OpenStore, EnumerateCertificates" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)" /> 方法通过使用与指定收件人信息标识的证书关联的私钥来解密解码的 CMS/PKCS #7 封装消息的内容。</summary>
      <param name="recipientInfo">一个表示收件人信息的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象，此信息标识与要用于解密的私钥关联的证书。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> 方法通过使用与指定的收件人信息标识的证书关联的私钥和指定的证书集合来解密解码的 CMS/PKCS #7 封装消息的内容。<see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> 方法在指定的证书集合和“我的证书存储”中搜索要用于解密的正确证书。</summary>
      <param name="recipientInfo">一个 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象，表示要用于解密的收件人信息。</param>
      <param name="extraStore">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 集合，表示要用于解密的其他证书。 <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> 方法在此证书集合和“我的证书存储”中搜索要用于解密的正确证书。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> 方法通过使用指定的证书集合来解密解码的 CMS/PKCS #7 封装消息的内容。 <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> 方法在指定的证书集合和“我的证书存储”中搜索要用于解密的正确证书。</summary>
      <param name="extraStore">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 集合，表示要用于解密的其他证书。 <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> 方法在此证书集合和“我的证书存储”中搜索要用于解密的正确证书。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode" /> 方法对封装的 CMS/PKCS #7 消息的内容进行编码并将其作为一个字节值数组返回。 必须在编码之前完成加密。</summary>
      <returns>如果此方法成功，则返回一个表示编码信息的字节值数组。 如果此方法失败，则会引发异常。</returns>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt" /> 方法加密 CMS/PKCS #7 消息的内容。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
        <IPermission class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.StorePermission, System.Security, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Flags="CreateStore, DeleteStore, OpenStore, EnumerateCertificates" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 方法通过使用指定的收件人信息来加密 CMS/PKCS #7 消息的内容。</summary>
      <param name="recipient">一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象，表示收件人信息。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)" /> 方法通过使用指定的收件人列表的信息来加密 CMS/PKCS #7 消息的内容。 使用通过对称加密算法（如三重 DES）生成的消息加密密钥来加密消息。 然后通过每个收件人的公钥对该消息加密密钥进行加密。</summary>
      <param name="recipients">一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合，表示收件人列表的信息。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos" /> 属性检索与 CMS/PKCS #7 封装消息关联的收件人信息。</summary>
      <returns>一个表示收件人信息的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合。 如果不存在任何收件人，则该属性值为空集合。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes" /> 属性检索与 CMS/PKCS #7 封装消息关联的未保护（未加密）特性。 未保护特性是未经加密的，因此 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 对象内没有数据保密性。</summary>
      <returns>一个表示未保护特性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 如果不存在任何未保护特性，则属性值为空集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Version" /> 属性检索 CMS/PKCS #7 封装消息的版本。</summary>
      <returns>一个表示 CMS/PKCS #7 封装消息的版本的整数值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyAgreeKeyChoice">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeKeyChoice" /> 枚举定义密钥协商协议中使用的密钥类型。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.KeyAgreeKeyChoice.EphemeralKey">
      <summary>密钥协商密钥是暂时的，仅在密钥协商协议持续期间存在。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.KeyAgreeKeyChoice.StaticKey">
      <summary>密钥协商密钥是静态的，在延长的时期内存在。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.KeyAgreeKeyChoice.Unknown">
      <summary>密钥协商密钥类型未知。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> 类定义密钥协议收信方信息。 “密钥协议”算法通常使用 Diffie-Hellman 密钥协议算法，在 Diffie-Hellman 密钥协议算法中，建立共享加密密钥的双方都要参与密钥的生成，当然，双方都认同生成的密钥。 这与密钥传输算法不同，在密钥传输算法中，将由一方单独生成密钥，然后将密钥发送或传输给另一方。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date" /> 属性检索发信方开始密钥协议的日期和时间。</summary>
      <returns>发信方开始密钥协议的日期和时间。</returns>
      <exception cref="T:System.InvalidOperationException">接收方标识符类型不是主题键标识符。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey" /> 属性检索加密的收信方密钥材料。</summary>
      <returns>一个字节值数组，其中包含加密的收信方密钥材料。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm" /> 属性检索用于执行密钥协议的算法。</summary>
      <returns>用于执行密钥协议的算法的值。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey" /> 属性检索关于密钥协议的发信方的信息，以获取保证协议的密钥协议算法。</summary>
      <returns>一个对象，其中包含关于密钥协议的发信方的信息。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute" /> 属性检索密钥材料的特性。</summary>
      <returns>密钥材料的特性。</returns>
      <exception cref="T:System.InvalidOperationException">接收方标识符类型不是主题键标识符。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier" /> 属性检索收信方的标识符。</summary>
      <returns>收件人的标识符。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version" /> 属性检索密钥协议收信方的版本。 对于此类中的对象，这是自动设置的，该值暗示收信方参与的是密钥协议算法。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> 对象的版本。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> 类定义密钥传输收信方信息。“密钥传输”算法通常使用 RSA 算法，在 RSA 算法中，发信方通过生成一个加密密钥然后将其传输给收信方来建立与收信方共享的加密密钥。 这与密钥协议算法不同，在密钥协议算法中，要使用一个加密密钥的双方都参与该密钥的生成过程，从而相互认同该密钥。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey" /> 属性检索该密钥传输收信方的加密密钥。</summary>
      <returns>表示加密密钥的字节值数组。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm" /> 属性检索用于加密内容加密密钥的密钥加密算法。</summary>
      <returns>存储密钥加密算法标识符的 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier" /> 属性检索与加密内容相关联的使用者标识符。</summary>
      <returns>存储参与密钥传输过程的收信方标识符的 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version" /> 属性检索密钥传输收信方的版本。 会自动为此类的对象设置密钥传输收信方的版本，其值表示收信方参与了一个密钥传输算法。</summary>
      <returns>一个整数值，表示密钥传输 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象的版本。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject">
      <summary>表示用于 CMS/PKCS #7 和 PKCS #9 操作的特性。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>通过将所指定 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象用作 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 类新实例的特性类型及值，对该实例进行初始化。</summary>
      <param name="asnEncodedData">包含要使用的 PKCS #9 特性类型及值的对象。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="asnEncodedData" /> 的 <paramref name="Oid" /> 成员的 <paramref name="Value" /> 成员长度为零。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Oid" /> 成员（属于 <paramref name="asnEncodedData" />）为 null。 - 或 - 该 <paramref name="Value" /> 成员的 <paramref name="Oid" /> 成员 <paramref name="asnEncodedData" /> 是 null.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>通过将指定的 <see cref="T:System.Security.Cryptography.Oid" /> 对象用作特性类型，并将指定的 ASN.1 编码数据用作特性值，对 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 类的新实例进行初始化。</summary>
      <param name="oid">表示 PKCS #9 特性类型的对象。</param>
      <param name="encodedData">表示 PKCS #9 特性值的字节值数组。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.String,System.Byte[])">
      <summary>通过将指定的对象标识符 (OID) 字符串表示形式用作特性类型，并将指定的 ASN.1 编码数据用作特性值，对 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 类的新实例进行初始化。</summary>
      <param name="oid">表示 PKCS #9 特性类型的 OID 字符串表示。</param>
      <param name="encodedData">包含 PKCS #9 特性值的字节值数组。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>从指定的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象中复制此 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 的 PKCS #9 特性类型及值。</summary>
      <param name="asnEncodedData">包含要使用的 PKCS #9 特性类型及值的对象。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="asnEncodeData" /> 不代表兼容特性类型。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> 为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.Oid">
      <summary>获取 <see cref="T:System.Security.Cryptography.Oid" /> 对象，该对象表示与此 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 对象相关联的特性类型。</summary>
      <returns>一个对象，表示与此 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 对象相关联的特性类型。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> 类定义 CMS/PKCS #7 消息的内容类型。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> 类的实例。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType" /> 属性获取一个包含内容类型的 <see cref="T:System.Security.Cryptography.Oid" /> 对象。</summary>
      <returns>包含内容类型的 <see cref="T:System.Security.Cryptography.Oid" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>从 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象复制信息。</summary>
      <param name="asnEncodedData">要从中复制信息的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象。</param>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 类定义 CMS/PKCS #7 消息内容的说明。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 类的一个实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])" /> 构造函数通过使用指定的字节值数组作为 CMS/PKCS #7 消息内容的已编码说明来创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 类的一个实例。</summary>
      <param name="encodedDocumentDescription">一个字节值数组，指定 CMS/PKCS #7 消息的已编码说明。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)" /> 构造函数使用指定的 CMS/PKCS #7 消息内容的说明创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 类的一个实例。</summary>
      <param name="documentDescription">
        <see cref="T:System.String" /> 类的一个实例，指定 CMS/PKCS #7 消息的说明。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>从 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象复制信息。</summary>
      <param name="asnEncodedData">要从中复制信息的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription" /> 属性检索文档说明。</summary>
      <returns>包含文档说明的 <see cref="T:System.String" /> 对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 类定义 CMS/PKCS #7 消息的名称。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 类的实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])" /> 构造函数使用指定的字节值数组作为 CMS/PKCS #7 消息内容的编码名称，从而创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 类的实例。</summary>
      <param name="encodedDocumentName">指定 CMS/PKCS #7 消息的编码名称的字节值数组。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)" /> 构造函数通过使用 CMS/PKCS #7 消息的指定名称创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 类的实例。</summary>
      <param name="documentName">指定 CMS/PKCS #7 消息的名称的 <see cref="T:System.String" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>从 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象复制信息。</summary>
      <param name="asnEncodedData">要从中复制信息的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName" /> 属性检索文档名。</summary>
      <returns>
        <see cref="T:System.String" /> 对象，包含文档名。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> 类定义 CMS/PKCS #7 消息的消息摘要。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> 类的一个实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>从 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象复制信息。</summary>
      <param name="asnEncodedData">要从中复制信息的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest" /> 属性检索消息摘要。</summary>
      <returns>包含消息摘要的字节值数组。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 类定义签名的签名日期和时间。 当要对数字签名附加经过身份验证的日期和时间时，可将 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 对象用作 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 对象的经过身份验证的特性。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 类的实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])" /> 构造函数通过使用指定的字节值数组作为 CMS/PKCS #7 消息内容的编码签名日期和时间来创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 类的实例。</summary>
      <param name="encodedSigningTime">一个字节值数组，指定 CMS/PKCS #7 消息的编码签名日期和时间。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)" /> 构造函数使用指定的签名日期和时间创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 类的实例。</summary>
      <param name="signingTime">一个 <see cref="T:System.DateTime" /> 结构，表示签名的签名日期和时间。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>从 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象复制信息。</summary>
      <param name="asnEncodedData">要从中复制信息的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime" /> 属性检索 <see cref="T:System.DateTime" /> 结构，该结构表示消息的签名日期和时间。</summary>
      <returns>一个 <see cref="T:System.DateTime" /> 结构，该结构包含文档的签名日期和时间。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.PublicKeyInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /> 类表示与公钥关联的信息。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm" /> 属性检索与公钥关联的算法标识符。</summary>
      <returns>一个表示该算法的 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue" /> 属性检索此公钥对的编码公共组件的值。</summary>
      <returns>一个字节值数组，表示此公钥对的编码公共组件。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 类表示有关 CMS/PKCS #7 消息收件人的信息。 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 类是 <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> 和 <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> 类继承而来的抽象类。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey" /> 抽象属性检索加密的收件人密钥材料。</summary>
      <returns>一个字节值数组，其中包含加密的收信方密钥材料。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm" /> 抽象属性检索用于建立密钥的算法。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 对象，包含用于在 CMS/PKCS #7 消息的发信方和收件人之间建立密钥的算法的值。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier" /> 抽象属性检索收件人的标识符。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 对象，其中包含收信方的标识符。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type" /> 属性检索收件人的类型。 收件人的类型决定使用两个主要协议中的哪个协议在 CMS/PKCS #7 消息的发信方和收件人之间建立密钥。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> 枚举的值，定义收件人的类型。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version" /> 抽象属性检索收件人信息的版本。 派生类自动为其对象设置此属性，此值指示正使用 PKCS #7 还是加密消息语法 (CMS) 来保护消息。 此版本还指示 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象是按密钥协议算法还是密钥传输算法建立加密密钥。</summary>
      <returns>一个 <see cref="T:System.Int32" /> 值，表示 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象的版本。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 类表示 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象的集合。 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 实现 <see cref="T:System.Collections.ICollection" /> 接口。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)" /> 方法将 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合复制到一个数组。</summary>
      <param name="array">要将 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合复制到其中的 <see cref="T:System.Array" /> 对象。</param>
      <param name="index">
        <paramref name="array" /> 中复制 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合的位置的索引（从零开始）。</param>
      <exception cref="T:System.ArgumentException">为方法提供的某一参数无效。</exception>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)" /> 方法将 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合复制到 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 数组。</summary>
      <param name="array">一个 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象的数组，<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合将被复制到该数组。</param>
      <param name="index">
        <paramref name="array" /> 中复制 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合的位置的索引（从零开始）。</param>
      <exception cref="T:System.ArgumentException">为方法提供的某一参数无效。</exception>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count" /> 属性检索 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合中的项数。</summary>
      <returns>一个整数值，表示集合中的项数。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator" /> 方法为 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合返回 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 对象，可用于枚举 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized" /> 属性检索是否同步访问集合，或者线程是否安全。 此属性始终返回 false，表示集合不是线程安全的。</summary>
      <returns>
        <see cref="T:System.Boolean" /> 值 false，表示集合不是线程安全的。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)" /> 属性检索位于集合中指定索引处的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象。</summary>
      <returns>位于指定索引处的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象。</returns>
      <param name="index">一个表示集合中的索引的整数值。 索引是从零开始的。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot" /> 属性检索用于同步访问 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合的 <see cref="T:System.Object" /> 对象。</summary>
      <returns>用于同步访问 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合的 <see cref="T:System.Object" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> 方法为 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合返回 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 对象，可用于枚举 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 类为 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合提供枚举功能。 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 实现 <see cref="T:System.Collections.IEnumerator" /> 接口。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current" /> 属性在 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合中检索当前的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象。</summary>
      <returns>表示 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合中当前收件人信息结构的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext" /> 方法将枚举前移到 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合中的下一个 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象。</summary>
      <returns>此方法返回一个布尔值，指定枚举的前移是否成功。 如果枚举成功移动到下一个 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象，该方法将返回 true。 如果枚举移过枚举中的最后一项，则返回 false。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset" /> 方法将枚举重置到 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合中的第一个 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current" /> 属性从 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合中检索当前的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象。</summary>
      <returns>表示 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合中当前收件人信息结构的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> 枚举定义收件人信息的类型。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyAgreement">
      <summary>密钥协议收件人信息。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyTransport">
      <summary>密钥传输收件人信息。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.Unknown">
      <summary>收件人信息类型未知。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignedCms">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 类启用 CMS/PKCS #7 消息的签名和验证。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 类的实例。</summary>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" /> 构造函数通过使用指定的内容信息作为内部内容来创建 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 类的一个实例。</summary>
      <param name="contentInfo">一个 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象，它将内容信息指定为 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 消息的内部内容。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> 构造函数通过使用指定的内容信息作为内部内容，同时使用 Detached 状态来创建 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 类的一个实例。</summary>
      <param name="contentInfo">一个 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象，它将内容信息指定为 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 消息的内部内容。</param>
      <param name="detached">一个 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 对象是否用于分离签名。 如果 <paramref name="detached" /> 为 true，则分离签名。 如果 <paramref name="detached" /> 为 false，则不分离签名。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" /> 构造函数通过使用指定的主题标识符类型作为签名者默认的主题标识符类型来创建 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 类的一个实例。</summary>
      <param name="signerIdentifierType">一个 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 成员，为签名者指定默认主题标识符类型。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 类的一个实例，创建时使用指定的主题标识符类型作为签名者默认的主题标识符类型，将内容信息作为内部内容。</summary>
      <param name="signerIdentifierType">一个 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 成员，为签名者指定默认主题标识符类型。</param>
      <param name="contentInfo">一个 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象，它将内容信息指定为 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 消息的内部内容。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 类的一个实例，创建时使用指定的主题标识符类型作为签名者默认的主题标识符类型，将内容信息作为内部内容，同时使用 Detached 状态。</summary>
      <param name="signerIdentifierType">一个 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 成员，为签名者指定默认主题标识符类型。</param>
      <param name="contentInfo">一个 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象，它将内容信息指定为 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 消息的内部内容。</param>
      <param name="detached">一个 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 对象是否用于分离签名。 如果 <paramref name="detached" /> 为 true，则分离签名。 如果 detached 为 false，则不分离签名。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" /> 属性检索与编码 CMS/PKCS #7 消息相关联的证书。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 集合，表示用于编码 CMS/PKCS #7 消息的证书集。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> 方法验证 CMS/PKCS #7 消息的数据完整性。 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> 是一个专用方法，用于特定的安全基础结构应用程序，这种应用程序只希望检查 CMS 消息的哈希值，而不执行整个数字签名验证。 由于 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> 方法并不涉及对数字签名的验证，因此它不对消息的作者和发送者进行身份验证。 要对 CMS/PKCS #7 消息的完整性和真实性进行通用检查，请使用 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> 或 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 方法。</summary>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> 方法验证签名 CMS/PKCS #7 消息上的数字签名，并验证签名者的证书（可选）。</summary>
      <param name="verifySignatureOnly">一个 <see cref="T:System.Boolean" /> 值，指定是否只验证数字签名而不验证签名者的证书。 如果 <paramref name="verifySignatureOnly" /> 为 true，则仅验证数字签名。 如果该值为 false，则验证数字签名、签名者的证书和证书的用途。 如果证书没有密钥用法或如果密钥用法支持数字签名或认可，则认为该证书的用途有效。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 方法通过使用指定的证书集合对签名 CMS/PKCS #7 消息的数字签名进行验证，并对签名者的证书进行验证（可选）。</summary>
      <param name="extraStore">可用于验证证书链的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 对象。 如果没有其他证书要用于验证证书链，则应使用 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> 而不是 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />。</param>
      <param name="verifySignatureOnly">一个 <see cref="T:System.Boolean" /> 值，指定是否只验证数字签名而不验证签名者的证书。 如果 <paramref name="verifySignatureOnly" /> 为 true，则仅验证数字签名。 如果该值为 false，则验证数字签名、签名者的证书和证书的用途。 如果证书没有密钥用法或如果密钥用法支持数字签名或认可，则认为该证书的用途有效。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature" /> 方法提示用户选择签名证书、创建签名并将该签名添加到 CMS/PKCS #7 消息中。</summary>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
        <IPermission class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.StorePermission, System.Security, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Flags="CreateStore, DeleteStore, OpenStore, EnumerateCertificates" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> 方法使用指定的签名者创建一个签名，并将该签名添加到 CMS/PKCS #7 消息中。</summary>
      <param name="signer">一个表示签名者的 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)">
      <summary>使用指定的签名者创建一个签名，并将该签名添加到 CMS/PKCS #7 消息中。 如果 silent 参数的值为 false，且由签名者参数指定的 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 对象的 <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> 属性未设置为一个有效的证书，此方法将提示用户选择一个签名证书。</summary>
      <param name="signer">一个表示签名者的 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 对象。</param>
      <param name="silent">false 将提示用户选择一个签名证书。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="silent" /> 参数的值为 true 且未指定签名证书。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" /> 属性检索编码 CMS/PKCS #7 消息的内部内容。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象，表示 CMS/PKCS #7 消息的内容。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> 方法对已编码的 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 消息进行解码。 解码成功后，可以从 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 对象的属性中检索到解码信息。</summary>
      <param name="encodedMessage">表示待解码的编码 CMS/PKCS #7 消息的字节值数组。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Detached">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" /> 属性检索 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 对象是否用于分离签名。</summary>
      <returns>一个 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 对象是否用于分离签名。 如果此属性为 true，则分离签名。 如果此属性为 false，则不分离签名。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Encode">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" /> 方法将对象中的信息编码到一个 CMS/PKCS #7 消息中。</summary>
      <returns>表示编码消息的字节值数组。 该编码消息可由 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> 方法解码。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)">
      <summary>移除 <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> 集合中指定索引处的签名。</summary>
      <param name="index">要移除的签名的从零开始的索引。</param>
      <exception cref="T:System.InvalidOperationException">CMS/PKCS # 7 消息未签名且 <paramref name="index" /> 无效。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。 - 或 - <paramref name="index" /> 比签名数减 1 要大。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">不可删除签名。 - 或 - 出现内部加密错误。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> 方法移除指定 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象的签名。</summary>
      <param name="signerInfo">表示被移除的副署的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> 属性检索与 CMS/PKCS #7 消息相关联的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 对象，表示 CMS/PKCS #7 消息的签名者信息。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" /> 属性检索 CMS/PKCS #7 消息的版本。</summary>
      <returns>一个 int 值，表示 CMS/PKCS #7 消息的版本。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 类表示一个签名者，该签名者与表示 CMS/PKCS #7 消息的 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 对象相关联。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" /> 属性检索与该签名者信息关联的签名证书。</summary>
      <returns>表示签名证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> 方法验证 CMS/PKCS #7 消息签名者信息的数据完整性。 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> 是一个专用方法，用于特定的安全基础结构应用程序。在这些应用程序中，在设置 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 对象时，主题使用 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 枚举的 HashOnly 成员。 由于 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> 方法并不涉及对数字签名进行验证，因此该方法不对签名者信息进行身份验证。 要对 CMS/PKCS #7 消息签名者信息和副署的完整性和可靠性进行通用检查，请使用 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 或 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 方法。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 方法对消息的数字签名进行验证，并对证书进行验证（可选）。</summary>
      <param name="verifySignatureOnly">一个指定是否仅验证数字签名的布尔值。 如果 <paramref name="verifySignatureOnly" /> 为 true，则仅验证签名。 如果 <paramref name="verifySignatureOnly" /> 为 false，则将对数字签名、证书链和证书的用途进行验证。 如果证书没有密钥用法或如果密钥用法支持数字签名或认可，则认为该证书的用途有效。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 方法通过使用指定的证书集合对消息的数字签名进行验证，并对证书进行验证（可选）。</summary>
      <param name="extraStore">可用于验证链的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 对象。 如果没有其他要用于验证链的证书，则应使用 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 而不应使用 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />。</param>
      <param name="verifySignatureOnly">一个指定是否仅验证数字签名的布尔值。 如果 <paramref name="verifySignatureOnly" /> 为 true，则仅验证签名。 如果 <paramref name="verifySignatureOnly" /> 为 false，则将对数字签名、证书链和证书的用途进行验证。 如果证书没有密钥用法或如果密钥用法支持数字签名或认可，则认为该证书的用途有效。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature" /> 方法提示用户选择签名证书、创建副署并向 CMS/PKCS #7 消息添加签名。 副署限制为一层。</summary>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
        <IPermission class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.StorePermission, System.Security, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" version="1" Flags="CreateStore, DeleteStore, OpenStore, EnumerateCertificates" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> 方法通过使用指定的签名者创建副署并将签名添加到 CMS/PKCS #7 消息。 副署限制为一层。</summary>
      <param name="signer">表示副署签名者的 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> 属性检索与该签名者信息关联的一组副署签名者。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合，表示该签名者信息的副署签名者。 如果没有副署签名者，则此属性为空集合。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" /> 属性检索表示用于计算签名的哈希算法的 <see cref="T:System.Security.Cryptography.Oid" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Oid" /> 对象，表示用于计算签名的哈希算法。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)" /> 方法移除 <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> 集合中指定索引处的副署。</summary>
      <param name="index">要移除的副署的索引（从零开始）。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> 方法移除指定 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象的副署。</summary>
      <param name="counterSignerInfo">表示被移除的副署的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" /> 属性检索与该签名者信息关联的已签名特性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 已签名特性与其余的消息内容一起进行签名。</summary>
      <returns>一个表示已签名特性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 如果没有已签名特性，则该属性为空集合。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" /> 属性检索与该签名者信息关联的签名者的证书标识符。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 对象，此对象唯一地标识与该签名者信息关联的证书。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" /> 属性检索与 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 内容关联的未签名特性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 可对未签名特性进行修改，这不会导致签名无效。</summary>
      <returns>表示未签名特性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 如果没有未签名特性，则该属性为空集合。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" /> 属性检索签名者信息版本。</summary>
      <returns>指定签名者信息版本的整数值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 类表示 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象的集合。 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 实现 <see cref="T:System.Collections.ICollection" /> 接口。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)" /> 方法将 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合复制到一个数组。</summary>
      <param name="array">要将 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合复制到其中的 <see cref="T:System.Array" /> 对象。</param>
      <param name="index">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合复制到的 <paramref name="array" /> 中从零开始的索引。</param>
      <exception cref="T:System.ArgumentException">为方法提供的某一参数无效。</exception>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)" /> 方法将 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合复制到 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 数组。</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合复制到的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象的数组。</param>
      <param name="index">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合复制到的 <paramref name="array" /> 中从零开始的索引。</param>
      <exception cref="T:System.ArgumentException">为方法提供的某一参数无效。</exception>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count" /> 属性检索 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合中的项数。</summary>
      <returns>一个整数值，表示集合中的项数。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator" /> 方法为 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合返回一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 对象。</summary>
      <returns>可用于枚举 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized" /> 属性检索对集合的访问是否为同步的（即线程安全的）。 此属性始终返回 false，表示集合不是线程安全的。</summary>
      <returns>
        <see cref="T:System.Boolean" /> 值 false，表示集合不是线程安全的。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)" /> 属性检索集合中指定索引处的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象。</summary>
      <returns>位于指定索引处的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象。</returns>
      <param name="index">一个表示集合中的索引的整数值。 索引是从零开始的。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot" /> 属性检索用于同步对 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合的访问的 <see cref="T:System.Object" /> 对象。</summary>
      <returns>用于同步对 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合的访问的 <see cref="T:System.Object" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> 方法返回 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 对象。</summary>
      <returns>可用于枚举 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 类为 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合提供枚举功能。 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 实现 <see cref="T:System.Collections.IEnumerator" /> 接口。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current" /> 属性从 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合中检索当前的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象，表示 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合中的当前签名人信息结构。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext" /> 方法将枚举向前移动到 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合中的下一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象。</summary>
      <returns>此方法返回一个布尔值，该值指定枚举是否成功前进。 如果枚举成功移动到下一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象，则该方法将返回 true。 如果枚举移过枚举中的最后一项，则返回 false。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset" /> 方法将枚举重置到 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合中的第一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current" /> 属性从 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合中检索当前的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象，表示 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合中的当前签名人信息结构。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifier">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 类定义主题的标识符类型，例如 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 或 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" />。可通过证书颁发者和序列号或主题密钥来标识主题。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 属性检索主题标识符的类型。 可通过证书颁发者和序列号或主题密钥来标识主题。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 枚举的成员，用于标识主题的类型。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> 属性检索主题标识符的值。 使用 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 属性可以确定主题标识符的类型，使用 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> 属性可以检索相应的值。</summary>
      <returns>一个 <see cref="T:System.Object" /> 对象，用于表示主题标识符的值。 此 <see cref="T:System.Object" /> 可以是下列对象之一，具体是哪个对象由 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 属性确定。 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 属性 对象 IssuerAndSerialNumber <see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" />SubjectKeyIdentifier <see cref="T:System.String" /></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey" /> 类定义主题标识符的类型，如 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 或 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" />。主题可以由证书颁发者和序列号、主题密钥哈希或主题密钥标识。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 属性检索主题标识符或主题密钥的类型。 主题可以由证书颁发者和序列号、主题密钥哈希或主题密钥标识。</summary>
      <returns>指定主题标识符类型的 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> 枚举的成员。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> 属性检索主题标识符或主题密钥的值。 使用 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 属性确定主题标识符或主题密钥的类型，使用 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> 属性检索相应的值。</summary>
      <returns>一个 <see cref="T:System.Object" /> 对象，表示主题标识符或主题密钥的值。 由 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 属性确定后，此 <see cref="T:System.Object" /> 可以是下列对象之一： <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 属性 对象 IssuerAndSerialNumber <see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" />SubjectKeyIdentifier <see cref="T:System.String" />PublicKeyInfo <see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> 枚举定义如何标识使用者。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.IssuerAndSerialNumber">
      <summary>通过证书颁发者和序列号标识使用者。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.PublicKeyInfo">
      <summary>通过公钥标识使用者。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.SubjectKeyIdentifier">
      <summary>通过使用者密钥的哈希值标识使用者。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.Unknown">
      <summary>类型未知。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 枚举定义使用者标识符的类型。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber">
      <summary>通过证书颁发者和序列号标识使用者。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.NoSignature">
      <summary>使用者是在参与只使用哈希算法的完整性检查操作过程中被标识的。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.SubjectKeyIdentifier">
      <summary>使用者是通过使用者公钥的哈希被标识的。 所使用的哈希算法由使用者的证书中的签名算法套件确定。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.Unknown">
      <summary>使用者标识符的类型未知。</summary>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Certificate2UI">
      <summary>显示的用户界面对话框使您可以选择和查看 X.509 证书。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>显示一个对话框，其中包含 X.509 证书及其关联证书链的属性。</summary>
      <param name="certificate">要显示的 X.509 证书。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> 参数无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IntPtr)">
      <summary>使用父窗口的句柄显示一个对话框，其中包含 X.509 证书及其关联证书链的属性。</summary>
      <param name="certificate">要显示的 X.509 证书。</param>
      <param name="hwndParent">用于显示对话框的父窗口的句柄。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> 参数无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag)">
      <summary>显示一个从证书集合中选择 X.509 证书的对话框。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 对象，包含选定的一个或多个证书。</returns>
      <param name="certificates">X.509 证书的集合，从中选择相应的证书。</param>
      <param name="title">对话框的标题。</param>
      <param name="message">指导用户的描述性消息。该消息显示在对话框中。</param>
      <param name="selectionFlag">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" /> 值之一，用于指定允许单项选择还是允许多项选择。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectionFlag" /> 参数不是有效的标志。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificates" /> 参数无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag,System.IntPtr)">
      <summary>使用父窗口的句柄显示一个从证书集合中选择 X.509 证书的对话框。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 对象，包含选定的一个或多个证书。</returns>
      <param name="certificates">X.509 证书的集合，从中选择相应的证书。</param>
      <param name="title">对话框的标题。</param>
      <param name="message">指导用户的描述性消息。该消息显示在对话框中。</param>
      <param name="selectionFlag">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" /> 值之一，用于指定允许单项选择还是允许多项选择。</param>
      <param name="hwndParent">用于显示对话框的父窗口的句柄。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectionFlag" /> 参数不是有效的标志。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificates" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificates" /> 参数无效。</exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag">
      <summary>指定使用 <see cref="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection" /> 方法请求的选择类型。</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.MultiSelection">
      <summary>多重选择。 用户可以使用 Shift 或 Ctrl 键选择多个 X.509 证书。</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.SingleSelection">
      <summary>单项选择。 该用户界面允许用户选择一个 X.509 证书。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.CipherData">
      <summary>表示 XML 加密中的 &lt;CipherData&gt; 元素。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherData.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherData.#ctor(System.Byte[])">
      <summary>通过使用一个字节数组作为 <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> 值来初始化 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 类的新实例。</summary>
      <param name="cipherValue">要用于 &lt;CipherValue&gt; 元素的加密数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cipherValue" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">已设置 <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> 属性。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherData.#ctor(System.Security.Cryptography.Xml.CipherReference)">
      <summary>使用 <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 对象初始化 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 类的新实例。</summary>
      <param name="cipherReference">要使用的 <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cipherValue" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">已设置 <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> 属性。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.CipherData.CipherReference">
      <summary>获取或设置 &lt;CipherReference&gt; 元素。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> 属性已设置为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> 属性设置了不止一次。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.CipherData.CipherValue">
      <summary>获取或设置 &lt;CipherValue&gt; 元素。</summary>
      <returns>一个表示 &lt;CipherValue&gt; 元素的字节数组。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> 属性已设置为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> 属性设置了不止一次。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherData.GetXml">
      <summary>获取 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 对象的 XML 值。</summary>
      <returns>一个 <see cref="T:System.Xml.XmlElement" /> 对象，表示 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 对象的 XML 信息。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> 属性和 <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> 属性为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherData.LoadXml(System.Xml.XmlElement)">
      <summary>将 <see cref="T:System.Xml.XmlElement" /> 中的 XML 数据加载到 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 对象中。</summary>
      <param name="value">一个 <see cref="T:System.Xml.XmlElement" />，表示要加载的 XML 数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> 属性和 <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> 属性为 null。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.CipherReference">
      <summary>表示 XML 加密中的 &lt;CipherReference&gt; 元素。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherReference.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)">
      <summary>使用指定的统一资源标识符 (URI) 来初始化 <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 类的新实例。</summary>
      <param name="uri">指向加密数据的统一资源标识符 (URI)。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)">
      <summary>使用指定的统一资源标识符 (URI) 和转换链信息初始化 <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 类的新实例。</summary>
      <param name="uri">指向加密数据的统一资源标识符 (URI)。</param>
      <param name="transformChain">一个 <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象，用于描述对加密数据进行的转换。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherReference.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 对象的 XML 表示形式。</summary>
      <returns>一个 <see cref="T:System.Xml.XmlElement" />，表示 XML 加密中的 &lt;CipherReference&gt; 元素。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 值为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)">
      <summary>将 XML 信息加载到 XML 加密的 &lt;CipherReference&gt; 元素中。</summary>
      <param name="value">一个 <see cref="T:System.Xml.XmlElement" /> 对象，表示要用作引用的一个 XML 元素。</param>
      <exception cref="T:System.ArgumentNullException">提供的 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.DataObject">
      <summary>表示保存要签名的数据的 XML 签名的对象元素。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataObject.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataObject.#ctor(System.String,System.String,System.String,System.Xml.XmlElement)">
      <summary>使用指定的标识、MIME 类型、编码和数据初始化 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 类的新实例。</summary>
      <param name="id">用于初始化 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 的新实例的标识。</param>
      <param name="mimeType">用于初始化 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 的新实例的数据的 MIME 类型。</param>
      <param name="encoding">用于初始化 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 的新实例的数据的编码。</param>
      <param name="data">用于初始化 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 的新实例的数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> 参数为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.DataObject.Data">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 对象的数据值。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 的数据。</returns>
      <exception cref="T:System.ArgumentNullException">用于设置此属性的值为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.DataObject.Encoding">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 对象的编码。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 对象的编码类型。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataObject.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 对象的 XML 表示形式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 对象的 XML 表示形式。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.DataObject.Id">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 对象的标识。</summary>
      <returns>包含要使用的数据的元素的名称。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataObject.LoadXml(System.Xml.XmlElement)">
      <summary>从 XML 元素加载 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 状态。</summary>
      <param name="value">要从其加载 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 状态的 XML 元素。</param>
      <exception cref="T:System.ArgumentNullException">来自该 XML 元素的值为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.DataObject.MimeType">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 对象的 MIME 类型。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 对象的 MIME 类型。 默认值为 null。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.DataReference">
      <summary>表示在 XML 加密中所使用的 &lt;DataReference&gt; 元素。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataReference.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataReference.#ctor(System.String)">
      <summary>使用指定的统一资源标识符 (URI) 来初始化 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 类的新实例。</summary>
      <param name="uri">指向加密数据的统一资源标识符 (URI)。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)">
      <summary>使用指定的统一资源标识符 (URI) 和 <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象初始化 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 类的新实例。</summary>
      <param name="uri">指向加密数据的统一资源标识符 (URI)。</param>
      <param name="transformChain">一个 <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象，用于描述对加密数据进行的转换。</param>
    </member>
    <member name="T:System.Security.Cryptography.Xml.DSAKeyValue">
      <summary>表示 &lt;KeyInfo&gt; 元素的 <see cref="T:System.Security.Cryptography.DSA" /> 私钥。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DSAKeyValue.#ctor">
      <summary>用新的、随机生成的 <see cref="T:System.Security.Cryptography.DSA" /> 公钥初始化 <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DSAKeyValue.#ctor(System.Security.Cryptography.DSA)">
      <summary>用指定的 <see cref="T:System.Security.Cryptography.DSA" /> 公钥初始化 <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> 类的新实例。</summary>
      <param name="key">包含公钥的 <see cref="T:System.Security.Cryptography.DSA" /> 类的实现的实例。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DSAKeyValue.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> 元素的 XML 表示形式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> 元素的 XML 表示形式。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.DSAKeyValue.Key">
      <summary>获取或设置由 <see cref="T:System.Security.Cryptography.DSA" /> 对象表示的密钥值。</summary>
      <returns>由 <see cref="T:System.Security.Cryptography.DSA" /> 对象表示的公钥。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DSAKeyValue.LoadXml(System.Xml.XmlElement)">
      <summary>从 XML 元素加载 <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> 状态。</summary>
      <param name="value">要从其加载 <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> 状态的 XML 元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="value" /> 参数不是有效的 <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" />XML 元素。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptedData">
      <summary>表示 XML 加密中的 &lt;EncryptedData&gt; 元素。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedData.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedData.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 对象的 XML 表示形式。</summary>
      <returns>一个 <see cref="T:System.Xml.XmlElement" />，表示 XML 加密中的 &lt;EncryptedData&gt; 元素。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 值为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedData.LoadXml(System.Xml.XmlElement)">
      <summary>将 XML 信息加载到 XML 加密的 &lt;EncryptedData&gt; 元素中。</summary>
      <param name="value">一个 <see cref="T:System.Xml.XmlElement" /> 对象，表示要对 &lt;EncryptedData&gt; 元素使用的 XML 元素。</param>
      <exception cref="T:System.ArgumentNullException">提供的 <paramref name="value" /> 为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="value" /> 参数不包含 &lt;CypherData&gt; 节点。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptedKey">
      <summary>表示 XML 加密中的 &lt;EncryptedKey&gt; 元素。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedKey.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)">
      <summary>将一个 &lt;DataReference&gt; 元素添加到 &lt;ReferenceList&gt; 元素中。</summary>
      <param name="dataReference">要添加到 <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" /> 属性中的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)">
      <summary>将一个 &lt;KeyReference&gt;  元素添加到 &lt;ReferenceList&gt; 元素中。</summary>
      <param name="keyReference">要添加到 <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" /> 属性中的 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName">
      <summary>获取或设置 XML 加密中的可选 &lt;CarriedKeyName&gt; 元素。</summary>
      <returns>一个表示密钥值名称的字符串。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedKey.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 对象的 XML 表示形式。</summary>
      <returns>一个 <see cref="T:System.Xml.XmlElement" />，表示 XML 加密中的 &lt;EncryptedKey&gt; 元素。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 值为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)">
      <summary>将指定的 XML 信息加载到 XML 加密的 &lt;EncryptedKey&gt; 元素中。</summary>
      <param name="value">一个 <see cref="T:System.Xml.XmlElement" />，表示要为 &lt;EncryptedKey&gt; 元素使用的 XML 元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="value" /> 参数不包含 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 元素。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedKey.Recipient">
      <summary>获取或设置 XML 加密中的可选 Recipient 特性。</summary>
      <returns>一个表示 Recipient 特性值的字符串。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList">
      <summary>获取或设置 XML 加密中的 &lt;ReferenceList&gt; 元素。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptedReference">
      <summary>表示 XML 加密中使用的抽象基类，<see cref="T:System.Security.Cryptography.Xml.CipherReference" />、<see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 和 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 类由此派生而来。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedReference.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedReference.#ctor(System.String)">
      <summary>使用指定的统一资源标识符 (URI) 来初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> 类的新实例。</summary>
      <param name="uri">指向待加密数据的统一资源标识符 (URI)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)">
      <summary>使用指定的统一资源标识符 (URI) 和传输链初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> 类的新实例。</summary>
      <param name="uri">指向待加密数据的统一资源标识符 (URI)。</param>
      <param name="transformChain">一个 <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象，用于描述即将对待加密数据执行的传输。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedReference.AddTransform(System.Security.Cryptography.Xml.Transform)">
      <summary>将 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象添加到 <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> 对象的当前传输链中。</summary>
      <param name="transform">要添加到传输链中的 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedReference.CacheValid">
      <summary>获取一个值，该值指示缓存是否有效。</summary>
      <returns>如果缓存有效，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedReference.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> 对象的 XML 表示形式。</summary>
      <returns>一个 <see cref="T:System.Xml.XmlElement" /> 对象，表示 XML 加密中 &lt;EncryptedReference&gt; 元素的值。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Xml.EncryptedReference.ReferenceType" /> 属性为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedReference.LoadXml(System.Xml.XmlElement)">
      <summary>将 XML 元素加载到 <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> 对象中。</summary>
      <param name="value">一个表示 XML 元素的 <see cref="T:System.Xml.XmlElement" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedReference.ReferenceType">
      <summary>获取或设置引用类型。</summary>
      <returns>加密数据的引用类型。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedReference.TransformChain">
      <summary>获取或设置 <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> 对象的传输链。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象，用于描述对加密数据使用的传输。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedReference.Uri">
      <summary>获取或设置 <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> 对象的统一资源标识符 (URI)。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.EncryptedReference" /> 对象的统一资源标识符 (URI)。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Cryptography.Xml.EncryptedReference.Uri" /> 属性已被设置为 null。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptedType">
      <summary>表示从中派生 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 和 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 类的抽象基类。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedType.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)">
      <summary>在 XML 加密的当前 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 对象中，向 &lt;EncryptedProperties&gt; 元素添加 &lt;EncryptionProperty&gt; 子元素。</summary>
      <param name="ep">
        <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.CipherData">
      <summary>对于 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 类的实例，获取或设置 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 值。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" /> 属性已设置为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.Encoding">
      <summary>获取或设置 XML 加密中某个 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 实例的 Encoding 特性。</summary>
      <returns>描述加密数据编码的字符串。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod">
      <summary>获取或设置 XML 加密的 &lt;EncryptionMethod&gt; 元素。</summary>
      <returns>一个表示 &lt;EncryptionMethod&gt; 元素的 <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties">
      <summary>获取或设置 XML 加密中的 &lt;EncryptionProperties&gt; 元素。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedType.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 对象的 XML 表示形式。</summary>
      <returns>一个表示 XML 加密中的 &lt;EncryptedType&gt; 元素的 <see cref="T:System.Xml.XmlElement" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.Id">
      <summary>获取或设置 XML 加密中某个 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 实例的 Id 特性。</summary>
      <returns>&lt;EncryptedType&gt; 元素的 Id 特性的字符串</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.KeyInfo">
      <summary>获取或设置 XML 加密中的 &lt;KeyInfo&gt; 元素。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)">
      <summary>将 XML 信息加载到 XML 加密的 &lt;EncryptedType&gt; 元素中。</summary>
      <param name="value">一个 <see cref="T:System.Xml.XmlElement" /> 对象，表示要在 &lt;EncryptedType&gt; 元素中使用的 XML 元素。</param>
      <exception cref="T:System.ArgumentNullException">提供的 <paramref name="value" /> 为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.MimeType">
      <summary>获取或设置 XML 加密中某个 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 实例的 MimeType 特性。</summary>
      <returns>描述加密数据介质类型的字符串。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedType.Type">
      <summary>获取或设置 XML 加密中某个 <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> 实例的 Type 特性。</summary>
      <returns>描述加密数据文本格式的字符串。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptedXml">
      <summary>表示用于实现 XML 加密的进程模型。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)">
      <summary>使用指定的 XML 文档初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 类的新实例。</summary>
      <param name="document">一个 <see cref="T:System.Xml.XmlDocument" /> 对象，用于初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)">
      <summary>使用指定的 XML 文档和证据初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 类的新实例。</summary>
      <param name="document">一个 <see cref="T:System.Xml.XmlDocument" /> 对象，用于初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 对象。</param>
      <param name="evidence">与 <see cref="T:System.Xml.XmlDocument" /> 对象关联的 <see cref="T:System.Security.Policy.Evidence" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)">
      <summary>定义密钥名称和对称密钥或非对称密钥之间的映射。</summary>
      <param name="keyName">要映射到 <paramref name="keyObject" /> 的名称。</param>
      <param name="keyObject">要映射到 <paramref name="keyName" /> 的对称密钥。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyName" /> 参数的值为 null。 - 或 - <paramref name="keyObject" /> 参数的值为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="keyObject" /> 参数的值不是 RSA 算法，也不是对称密钥。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings">
      <summary>重置所有密钥名称映射。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)">
      <summary>使用指定的对称算法解密 &lt;EncryptedData&gt; 元素。</summary>
      <returns>一个字节数组，包含已解密的原始明文。</returns>
      <param name="encryptedData">要解密的数据。</param>
      <param name="symmetricAlgorithm">用于解密 <paramref name="encryptedData" /> 的对称密钥。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptedData" /> 参数的值为 null。 - 或 - <paramref name="symmetricAlgorithm" /> 参数的值为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument">
      <summary>解密 XML 文档中所有在初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 类期间指定的 &lt;EncryptedData&gt; 元素。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未找到用于解密文档的加密密钥。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)">
      <summary>确定由 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 元素表示的密钥。</summary>
      <returns>一个包含密钥的字节数组。</returns>
      <param name="encryptedKey">包含要检索的密钥的 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptedKey" /> 参数的值为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encryptedKey" /> 参数的值不是三重 DES Key Wrap 算法或高级加密标准 (AES) Key Wrap 算法（也称 Rijndael）。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)">
      <summary>使用非对称算法解密 &lt;EncryptedKey&gt; 元素。</summary>
      <returns>包含纯文本密钥的字节数组。</returns>
      <param name="keyData">一个表示加密 &lt;EncryptedKey&gt; 元素的字节数组。</param>
      <param name="rsa">用于解密 <paramref name="keyData" /> 的非对称密钥。</param>
      <param name="useOAEP">一个指定是否使用优化非对称加密填充 (OAEP) 的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyData" /> 参数的值为 null。 - 或 - <paramref name="rsa" /> 参数的值为 null。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)">
      <summary>使用对称算法解密 &lt;EncryptedKey&gt; 元素。</summary>
      <returns>包含纯文本密钥的字节数组。</returns>
      <param name="keyData">一个表示加密 &lt;EncryptedKey&gt; 元素的字节数组。</param>
      <param name="symmetricAlgorithm">用于解密 <paramref name="keyData" /> 的对称密钥。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyData" /> 参数的值为 null。 - 或 - <paramref name="symmetricAlgorithm" /> 参数的值为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="symmetricAlgorithm" /> 元素的值不是三重 DES Key Wrap 算法或高级加密标准 (AES) Key Wrap 算法（也称 Rijndael）。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence">
      <summary>获取或设置 <see cref="T:System.Xml.XmlDocument" /> 对象的证据，<see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 对象从该对象构造。</summary>
      <returns>
        <see cref="T:System.Security.Policy.Evidence" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedXml.Encoding">
      <summary>获取或设置 XML 加密所用的编码。</summary>
      <returns>
        <see cref="T:System.Text.Encoding" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>使用指定的 X.509 证书对元素的外部 XML 进行加密。</summary>
      <returns>一个表示已加密 XML 数据的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 元素。</returns>
      <param name="inputElement">要加密的 XML 元素。</param>
      <param name="certificate">要用于加密的 X.509 证书。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> 参数的值为 null。 - 或 - <paramref name="certificate" /> 参数的值为 null。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="certificate" /> 参数的值不表示 RSA 密钥算法。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)">
      <summary>使用在密钥映射表中指定的密钥对元素的外部 XML 进行加密。</summary>
      <returns>一个表示已加密 XML 数据的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 对象。</returns>
      <param name="inputElement">要加密的 XML 元素。</param>
      <param name="keyName">可在密钥映射表中找到的密钥名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> 参数的值为 null。 - 或 - <paramref name="keyName" /> 参数的值为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="keyName" /> 参数的值与注册的密钥名称对不匹配。 - 或 - 不支持 <paramref name="keyName" /> 参数描述的加密密钥。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)">
      <summary>使用指定的对称算法对指定的字节数组中的数据进行加密。</summary>
      <returns>加密数据的字节数组。</returns>
      <param name="plaintext">要加密的数据。</param>
      <param name="symmetricAlgorithm">要用于加密的对称算法。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="plaintext" /> 参数的值为 null。 - 或 - <paramref name="symmetricAlgorithm" /> 参数的值为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能使用指定的参数加密此数据。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)">
      <summary>使用指定的对称算法加密指定的元素或其内容。</summary>
      <returns>一个包含加密数据的字节数组。</returns>
      <param name="inputElement">要加密的元素或其内容。</param>
      <param name="symmetricAlgorithm">要用于加密的对称算法。</param>
      <param name="content">如果仅加密元素的内容，则为 true；如果要加密整个元素，则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> 参数的值为 null。 - 或 - <paramref name="symmetricAlgorithm" /> 参数的值为 null。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)">
      <summary>对接收方用来解密 &lt;EncryptedData&gt; 元素的密钥进行加密。</summary>
      <returns>一个字节数组，表示 <paramref name="keyData" /> 参数的加密值。</returns>
      <param name="keyData">要加密的密钥。</param>
      <param name="rsa">用于加密 <paramref name="keyData" /> 的非对称密钥。</param>
      <param name="useOAEP">一个指定是否使用优化非对称加密填充 (OAEP) 的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyData" /> 参数的值为 null。 - 或 - <paramref name="rsa" /> 参数的值为 null。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)">
      <summary>使用对称算法加密密钥，收件人使用此算法解密 &lt;EncryptedData&gt; 元素。</summary>
      <returns>一个字节数组，表示 <paramref name="keyData" /> 参数的加密值。</returns>
      <param name="keyData">要加密的密钥。</param>
      <param name="symmetricAlgorithm">用于加密 <paramref name="keyData" /> 的对称密钥。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyData" /> 参数的值为 null。 - 或 - <paramref name="symmetricAlgorithm" /> 参数的值为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="symmetricAlgorithm" /> 参数的值不是三重 DES Key Wrap 算法或高级加密标准 (AES) Key Wrap 算法（也称 Rijndael）。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)">
      <summary>从 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 对象中检索解密初始化向量 (IV)。</summary>
      <returns>一个包含解密初始化向量 (IV) 的字节数组。</returns>
      <param name="encryptedData">包含要检索的初始化向量 (IV) 的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 对象。</param>
      <param name="symmetricAlgorithmUri">描述与 <paramref name="encryptedData" /> 值关联的加密算法的统一资源标识符 (URI)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptedData" /> 参数的值为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encryptedData" /> 参数的值有一个 null <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> 属性。 - 或 - <paramref name="symmetricAlgorithmUrisymAlgUri" /> 参数的值不是受支持的算法。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)">
      <summary>从指定的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 对象中检索解密密钥。</summary>
      <returns>一个与解密密钥关联的 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 对象。</returns>
      <param name="encryptedData">包含要检索的解密密钥的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 对象。</param>
      <param name="symmetricAlgorithmUri">要检索的解密密钥的大小。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encryptedData" /> 参数的值为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">encryptedData 参数有一个 null <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> 属性。 - 或 - 无法使用指定的参数检索加密密钥。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)">
      <summary>确定如何解析内部统一资源标识符 (URI) 引用。</summary>
      <returns>一个包含 ID 的 <see cref="T:System.Xml.XmlElement" /> 对象，此 ID 指示如何解析内部统一资源标识符 (URI)。</returns>
      <param name="document">一个 <see cref="T:System.Xml.XmlDocument" /> 对象，包含具有 ID 值的元素。</param>
      <param name="idValue">一个表示 ID 值的字符串。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedXml.Mode">
      <summary>获取或设置 XML 加密所用的密码模式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.CipherMode" /> 值之一。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedXml.Padding">
      <summary>获取或设置 XML 加密所用的填充模式。</summary>
      <returns>指定加密所用的填充类型的 <see cref="T:System.Security.Cryptography.PaddingMode" /> 值之一。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedXml.Recipient">
      <summary>获取或设置加密密钥信息的收件人。</summary>
      <returns>加密密钥信息的收件人。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])">
      <summary>将 &lt;EncryptedData&gt; 元素替换为指定的解密字节序列。</summary>
      <param name="inputElement">要替换的 &lt;EncryptedData&gt; 元素。</param>
      <param name="decryptedData">要替换 <paramref name="inputElement" /> 的解密数据。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> 参数的值为 null。 - 或 - <paramref name="decryptedData" /> 参数的值为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)">
      <summary>将指定的元素替换为指定的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 对象。</summary>
      <param name="inputElement">要替换为 &lt;EncryptedData&gt; 元素的元素。</param>
      <param name="encryptedData">要替换 <paramref name="inputElement" /> 参数的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 对象。</param>
      <param name="content">如果仅替换元素内容，则为 true；如果要替换整个元素，则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputElement" /> 参数的值为 null。 - 或 - <paramref name="encryptedData" /> 参数的值为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptedXml.Resolver">
      <summary>获取或设置文档对象模型 (DOM) 使用的 <see cref="T:System.Xml.XmlResolver" /> 对象以解析外部 XML 引用。</summary>
      <returns>
        <see cref="T:System.Xml.XmlResolver" /> 对象。</returns>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl">
      <summary>表示 128 位高级加密标准 (AES) 密钥包装算法（也称作“Rijndael 密钥包装算法”）的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url">
      <summary>表示 128 位高级加密标准 (AES) 密钥包装算法（也称作“Rijndael 密钥包装算法”）的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl">
      <summary>表示 192 位高级加密标准 (AES) 密钥包装算法（也称作“Rijndael 密钥包装算法”）的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url">
      <summary>表示 192 位高级加密标准 (AES) 密钥包装算法（也称作“Rijndael 密钥包装算法”）的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl">
      <summary>表示 256 位高级加密标准 (AES) 密钥包装算法（也称作“Rijndael 密钥包装算法”）的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url">
      <summary>表示 256 位高级加密标准 (AES) 密钥包装算法（也称作“Rijndael 密钥包装算法”）的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl">
      <summary>表示数字加密标准 (DES) 算法对应的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl">
      <summary>表示 XML 加密元素内容对应的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl">
      <summary>表示 XML 加密元素对应的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl">
      <summary>表示 XML 加密 &lt;EncryptedKey&gt; 元素对应的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl">
      <summary>表示“XML 加密语法和处理”对应的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url">
      <summary>表示 RSA 公钥加密标准 (PKCS) 1.5 版算法对应的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl">
      <summary>表示 RSA 优化非对称加密填充 (OAEP) 加密算法对应的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url">
      <summary>表示 SHA-256 算法对应的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url">
      <summary>表示 SHA-512 算法对应的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl">
      <summary>表示三重 DES Key Wrap 算法对应的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl">
      <summary>表示三重 DES 算法对应的命名空间统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptionMethod">
      <summary>封装用于 XML 加密的加密算法。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionMethod.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionMethod.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> 类的新实例并指定算法的统一资源标识符 (URI)。</summary>
      <param name="algorithm">描述 <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> 类的实例所表示的算法的统一资源标识符 (URI)。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionMethod.GetXml">
      <summary>返回一个 <see cref="T:System.Xml.XmlElement" /> 对象，该对象封装了 <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> 类的实例。</summary>
      <returns>一个 <see cref="T:System.Xml.XmlElement" /> 对象，该对象封装了 <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> 类的实例。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm">
      <summary>获取或设置一个统一资源标识符 (URI)，该统一资源标识符描述用于 XML 加密的算法。</summary>
      <returns>描述用于 XML 加密的算法的统一资源标识符 (URI)。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionMethod.KeySize">
      <summary>获取或设置用于 XML 加密的算法密钥大小。</summary>
      <returns>用于 XML 加密的算法密钥大小（以位为单位）。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Security.Cryptography.Xml.EncryptionMethod.KeySize" /> 属性被设置为一个小于 0 的值。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionMethod.LoadXml(System.Xml.XmlElement)">
      <summary>分析指定的 <see cref="T:System.Xml.XmlElement" /> 对象并配置 <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> 对象的内部状态，使其相匹配。</summary>
      <param name="value">要分析的 <see cref="T:System.Xml.XmlElement" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> 参数中表示的密钥大小小于 0。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptionProperty">
      <summary>表示在 XML 加密中所使用的 &lt;EncryptionProperty&gt; 元素。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionProperty.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionProperty.#ctor(System.Xml.XmlElement)">
      <summary>使用 <see cref="T:System.Xml.XmlElement" /> 对象初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 类的新实例。</summary>
      <param name="elementProperty">用于初始化的 <see cref="T:System.Xml.XmlElement" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elementProperty" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="elementProperty" /> 参数的 <see cref="P:System.Xml.XmlElement.LocalName" /> 属性不是“EncryptionProperty”。 - 或 - <paramref name="elementProperty" /> 参数的 <see cref="P:System.Xml.XmlElement.NamespaceURI" /> 属性不是“http://www.w3.org/2001/04/xmlenc#”。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionProperty.GetXml">
      <summary>返回一个 <see cref="T:System.Xml.XmlElement" /> 对象，该对象封装了 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 类的实例。</summary>
      <returns>一个 <see cref="T:System.Xml.XmlElement" /> 对象，该对象封装了 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 类的实例。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionProperty.Id">
      <summary>获取当前 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象的 ID。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象的 ID。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionProperty.LoadXml(System.Xml.XmlElement)">
      <summary>分析输入的 <see cref="T:System.Xml.XmlElement" /> 并配置要匹配的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象的内部状态。</summary>
      <param name="value">要分析的 <see cref="T:System.Xml.XmlElement" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="value" /> 参数的 <see cref="P:System.Xml.XmlElement.LocalName" /> 属性不是“EncryptionProperty”。 - 或 - <paramref name="value" /> 参数的 <see cref="P:System.Xml.XmlElement.NamespaceURI" /> 属性不是“http://www.w3.org/2001/04/xmlenc#”。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionProperty.PropertyElement">
      <summary>获取或设置表示 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象的 <see cref="T:System.Xml.XmlElement" /> 对象。</summary>
      <returns>一个表示 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象的 <see cref="T:System.Xml.XmlElement" /> 对象。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Cryptography.Xml.EncryptionProperty.PropertyElement" /> 属性已设置为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">值设置为 <see cref="P:System.Security.Cryptography.Xml.EncryptionProperty.PropertyElement" /> 属性的 <see cref="P:System.Xml.XmlElement.LocalName" /> 属性不是“EncryptionProperty”。 - 或 - 值设置为 <see cref="P:System.Security.Cryptography.Xml.EncryptionProperty.PropertyElement" /> 属性的 <see cref="P:System.Xml.XmlElement.NamespaceURI" /> 属性不是“http://www.w3.org/2001/04/xmlenc#”。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionProperty.Target">
      <summary>获取 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象的目标。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象的目标。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection">
      <summary>表示在 XML 加密中使用的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 类的集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.Add(System.Security.Cryptography.Xml.EncryptionProperty)">
      <summary>将 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象添加到 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象中。</summary>
      <returns>新元素的插入位置。</returns>
      <param name="value">一个要添加到 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象中的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.Clear">
      <summary>从 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象中移除所有项。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.Contains(System.Security.Cryptography.Xml.EncryptionProperty)">
      <summary>确定 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象是否包含特定的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象。</summary>
      <returns>如果在 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象中找到 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象，则为 true；否则为 false。</returns>
      <param name="value">要在 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象中定位的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo(System.Array,System.Int32)">
      <summary>将 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象的元素复制到一个数组中从特定的数组索引开始的位置。</summary>
      <param name="array">一维 <see cref="T:System.Array" /> 对象，它是从 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象复制的元素的目标位置。 该数组的索引必须从零开始。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo(System.Security.Cryptography.Xml.EncryptionProperty[],System.Int32)">
      <summary>从特定的数组索引开始，将 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象的元素复制到 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象的数组中。</summary>
      <param name="array">
        <see cref=" T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象的一维数组，它是从 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象复制的元素的目标位置。 该数组的索引必须从零开始。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionPropertyCollection.Count">
      <summary>获取 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象中包含的元素数。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象中包含的元素数。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.GetEnumerator">
      <summary>返回循环访问 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象的枚举数。</summary>
      <returns>可用于循环访问 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.IndexOf(System.Security.Cryptography.Xml.EncryptionProperty)">
      <summary>确定 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象中特定项的索引。</summary>
      <returns>如果在集合中找到该对象，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
      <param name="value">要在 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象中定位的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.Insert(System.Int32,System.Security.Cryptography.Xml.EncryptionProperty)">
      <summary>将 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象插入 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象中的指定位置。</summary>
      <param name="index">从零开始的索引，应在该位置插入 <paramref name="value" />。</param>
      <param name="value">要插入到 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象中的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsFixedSize">
      <summary>获取一个值，该值指示 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象是否具有固定大小。</summary>
      <returns>如果 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象具有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsReadOnly">
      <summary>获取一个值，该值指示 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象是否为只读。</summary>
      <returns>如果 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsSynchronized">
      <summary>获取一个值，该值指示对 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象的访问是否同步（线程安全）。</summary>
      <returns>如果对 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象的访问是同步的（线程安全），则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.Item(System.Int32)">
      <summary>返回位于指定索引处的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象。</summary>
      <returns>位于指定索引处的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象。</returns>
      <param name="index">要返回的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象的索引。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionPropertyCollection.ItemOf(System.Int32)">
      <summary>获取或设置位于指定索引位置的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象。</summary>
      <returns>位于指定索引处的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象。</returns>
      <param name="index">要返回的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象的索引。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.Remove(System.Security.Cryptography.Xml.EncryptionProperty)">
      <summary>从 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象中移除特定 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象的第一个匹配项。</summary>
      <param name="value">要从 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象中移除的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.RemoveAt(System.Int32)">
      <summary>移除位于指定索引处的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象。</summary>
      <param name="index">要移除的 <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" /> 对象的从零开始的索引。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionPropertyCollection.SyncRoot">
      <summary>获取一个对象，该对象可用于同步对 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象的访问。</summary>
      <returns>一个对象，该对象可用于同步对 <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" /> 对象的访问。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Add(System.Object)">
      <summary>将某项添加到 <see cref="T:System.Collections.IList" /> 中。</summary>
      <returns>新元素的插入位置。</returns>
      <param name="value">要添加到 <see cref="T:System.Collections.IList" /> 的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 使用了不正确的对象类型。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Contains(System.Object)">
      <summary>确定 <see cref="T:System.Collections.IList" /> 是否包含特定值。</summary>
      <returns>如果在 <see cref="T:System.Collections.IList" /> 中找到 <see cref="T:System.Object" />，则为 true；否则为 false。</returns>
      <param name="value">要在 <see cref="T:System.Collections.IList" /> 中查找的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 使用了不正确的对象类型。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>确定 <see cref="T:System.Collections.IList" /> 中特定项的索引。</summary>
      <returns>如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
      <param name="value">要在 <see cref="T:System.Collections.IList" /> 中查找的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 使用了不正确的对象类型。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>将一个项插入指定索引处的 <see cref="T:System.Collections.IList" />。</summary>
      <param name="index">从零开始的索引，应在该位置插入 <paramref name="value" />。</param>
      <param name="value">要插入 <see cref="T:System.Collections.IList" /> 中的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 使用了不正确的对象类型。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Item(System.Int32)">
      <summary>获取指定索引处的元素。</summary>
      <returns>位于指定索引处的元素。</returns>
      <param name="index">要从 <see cref="T:System.Collections.IList" /> 移除的 <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Remove(System.Object)">
      <summary>从 <see cref="T:System.Collections.IList" /> 中移除特定对象的第一个匹配项。</summary>
      <param name="value">要从 <see cref="T:System.Collections.IList" /> 移除的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 使用了不正确的对象类型。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.IRelDecryptor">
      <summary>定义解密 XrML &lt;encryptedGrant&gt; 元素的方法。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.IRelDecryptor.Decrypt(System.Security.Cryptography.Xml.EncryptionMethod,System.Security.Cryptography.Xml.KeyInfo,System.IO.Stream)">
      <summary>解密 <see cref="T:System.IO.Stream" /> 对象内包含的 XrML &lt;encryptedGrant&gt; 元素。</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> 对象，包含一个已解密的 &lt;encryptedGrant&gt; 元素。</returns>
      <param name="encryptionMethod">
        <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> 对象，封装用于 XML 加密的算法。</param>
      <param name="keyInfo">
        <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象，包含用于解密的非对称密钥。</param>
      <param name="toDecrypt">流对象，包含要解密的 &lt;encryptedGrant&gt; 元素。</param>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfo">
      <summary>表示 XML 数字签名或 XML 加密 &lt;KeyInfo&gt; 元素。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.AddClause(System.Security.Cryptography.Xml.KeyInfoClause)">
      <summary>将表示特定 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 信息类型的 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> 添加到 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象中。</summary>
      <param name="clause">要添加到 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象中的 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" />。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfo.Count">
      <summary>获取包含在 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象中的 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> 对象的数目。</summary>
      <returns>包含在 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象中的 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> 对象的数目。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.GetEnumerator">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象中 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> 对象的枚举数。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 的子元素的枚举数。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.GetEnumerator(System.Type)">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象中指定类型的 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> 对象的枚举数。</summary>
      <returns>可用于循环访问集合的 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 的子元素的枚举数。</returns>
      <param name="requestedObjectType">要枚举的对象的类型。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象的 XML 表示形式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象的 XML 表示形式。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfo.Id">
      <summary>获取或设置密钥信息标识符。</summary>
      <returns>密钥信息标识。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.LoadXml(System.Xml.XmlElement)">
      <summary>从 XML 元素加载 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 状态。</summary>
      <param name="value">从其加载 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 状态的 XML 元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoClause">
      <summary>表示 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 子元素的所有实现从中继承的抽象基类。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoClause.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> 的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoClause.GetXml">
      <summary>当在派生类中重写时，返回 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> 的 XML 表示形式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> 的 XML 表示形式。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoClause.LoadXml(System.Xml.XmlElement)">
      <summary>当在派生类中重写时，分析输入的 <see cref="T:System.Xml.XmlElement" />，并配置要匹配的 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> 的内部状态。</summary>
      <param name="element">指定 <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> 的状态的 <see cref="T:System.Xml.XmlElement" />。</param>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey">
      <summary>包装 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 类，将该类作为 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 类的子元素来放置。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.#ctor(System.Security.Cryptography.Xml.EncryptedKey)">
      <summary>使用 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 对象初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /> 类的新实例。</summary>
      <param name="encryptedKey">封装加密密钥的 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 对象。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey">
      <summary>获取或设置封装加密密钥的 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 对象。</summary>
      <returns>封装加密密钥的 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 对象。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.EncryptedKey" /> 属性为 null。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /> 对象的 XML 表示形式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /> 对象的 XML 表示形式。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">加密的密钥为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoEncryptedKey.LoadXml(System.Xml.XmlElement)">
      <summary>分析输入的 <see cref="T:System.Xml.XmlElement" /> 对象并配置要匹配的 <see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /> 对象的内部状态。</summary>
      <param name="value">
        <see cref="T:System.Xml.XmlElement" /> 对象，用于指定 <see cref="T:System.Security.Cryptography.Xml.KeyInfoEncryptedKey" /> 对象的状态。</param>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoName">
      <summary>表示 XMLDSIG 或 XML 加密 &lt;KeyInfo&gt; 元素的 &lt;KeyName&gt; 子元素。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoName.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoName.#ctor(System.String)">
      <summary>通过指定字符串标识符来初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> 类的新实例，此字符串标识符是 &lt;KeyName&gt; 元素的值。</summary>
      <param name="keyName">字符串标识符，它是 &lt;KeyName&gt; 元素的值。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoName.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> 对象的 XML 表示形式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> 对象的 XML 表示形式。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)">
      <summary>分析输入的 <see cref="T:System.Xml.XmlElement" /> 对象并配置要匹配的 <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> 对象的内部状态。</summary>
      <param name="value">
        <see cref="T:System.Xml.XmlElement" /> 对象，用于指定 <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> 对象的状态。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoName.Value">
      <summary>获取或设置包含在 &lt;KeyName&gt; 元素中的字符串标识符。</summary>
      <returns>字符串标识符，它是 &lt;KeyName&gt; 元素的值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoNode">
      <summary>处理没有在计算机上注册特定实现或处理程序的 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 子元素。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoNode.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoNode.#ctor(System.Xml.XmlElement)">
      <summary>使用从指定的 <see cref="T:System.Xml.XmlElement" /> 获取的内容初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" /> 类的新实例。</summary>
      <param name="node">XML 元素，要从中获取用于创建 <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" /> 的新实例的内容。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoNode.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" /> 的 XML 表示形式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" /> 的 XML 表示形式。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoNode.LoadXml(System.Xml.XmlElement)">
      <summary>分析输入的 <see cref="T:System.Xml.XmlElement" /> 并配置要匹配的 <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" /> 的内部状态。</summary>
      <param name="value">指定 <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" /> 的状态的 <see cref="T:System.Xml.XmlElement" />。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoNode.Value">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" /> 的 XML 内容。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" /> 的 XML 内容。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod">
      <summary>使用 XMLDSIG 或 XML 加密时，引用存储在不同位置的 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.#ctor(System.String)">
      <summary>使用指向所引用的 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象的指定统一资源标识符 (URI) 初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> 类的新实例。</summary>
      <param name="strUri">要由 <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> 的新实例引用的信息的统一资源标识符 (URI)。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.#ctor(System.String,System.String)">
      <summary>使用指向所引用 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象的指定统一资源标识符 (URI) 和描述要检索的数据类型的 URI 初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> 类的新实例。</summary>
      <param name="strUri">要由 <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> 的新实例引用的信息的统一资源标识符 (URI)。</param>
      <param name="typeName">描述要检索的数据类型的 URI。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> 对象的 XML 表示形式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> 对象的 XML 表示形式。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.LoadXml(System.Xml.XmlElement)">
      <summary>分析输入的 <see cref="T:System.Xml.XmlElement" /> 对象并配置要匹配的 <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> 对象的内部状态。</summary>
      <param name="value">指定 <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> 对象的状态的 XML 元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.Type">
      <summary>获取或设置一个统一资源标识符 (URI)，它描述要检索的数据的类型。</summary>
      <returns>一个统一资源标识符 (URI)，它描述要检索的数据的类型。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.Uri">
      <summary>获取或设置 <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> 对象的统一资源标识符 (URI)。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> 对象的统一资源标识符 (URI)。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoX509Data">
      <summary>表示 XMLDSIG 或 XML 加密 &lt;KeyInfo&gt; 元素的 &lt;X509Data&gt; 子元素。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.#ctor(System.Byte[])">
      <summary>从 X.509v3 证书的指定 ASN.1 DER 编码初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 类的新实例。</summary>
      <param name="rgbCert">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象的 ASN.1 DER 编码，要从该对象初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 的新实例。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>从指定的 X.509v3 证书初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 类的新实例。</summary>
      <param name="cert">要从其初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 的新实例的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cert" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509IncludeOption)">
      <summary>从指定的 X.509v3 证书初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 类的新实例。</summary>
      <param name="cert">要从其初始化 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 的新实例的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象。</param>
      <param name="includeOption">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509IncludeOption" /> 值之一，该值指定要包括的证书链的数量。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cert" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">证书仅有一个不完整的证书链。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>将指定的 X.509v3 证书添加到 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />。</summary>
      <param name="certificate">要添加到 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.AddIssuerSerial(System.String,System.String)">
      <summary>将指定的颁发者名称和序列号对添加到 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中。</summary>
      <param name="issuerName">要添加到 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中的值对的颁发者名称部分。</param>
      <param name="serialNumber">要添加到 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中的值对的序列号部分。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.AddSubjectKeyId(System.Byte[])">
      <summary>将指定的主题密钥标识符 (SKI) 字节数组添加到 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中。</summary>
      <param name="subjectKeyId">一个字节数组，表示要添加到 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中的主题密钥标识符 (SKI)。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.AddSubjectKeyId(System.String)">
      <summary>将指定的主题密钥标识符 (SKI) 字符串添加到 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中。</summary>
      <param name="subjectKeyId">一个字符串，表示要添加到 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中的主题密钥标识符 (SKI)。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.AddSubjectName(System.String)">
      <summary>将被颁发了 X.509v3 证书的实体的主题名称添加到 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中。</summary>
      <param name="subjectName">向其颁发了 X.509 证书以将其添加到 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中的实体的名称。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoX509Data.Certificates">
      <summary>获取包含在 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中的 X.509v3 证书的列表。</summary>
      <returns>包含在 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中的 X.509 证书的列表。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoX509Data.CRL">
      <summary>获取或设置包含在 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中的证书吊销列表 (CRL)。</summary>
      <returns>包含在 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中的证书吊销列表 (CRL)。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象的 XML 表示形式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象的 XML 表示形式。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoX509Data.IssuerSerials">
      <summary>获取表示颁发者名称和序列号对的 <see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /> 结构的列表。</summary>
      <returns>表示颁发者名称和序列号对的 <see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /> 结构的列表。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.LoadXml(System.Xml.XmlElement)">
      <summary>分析输入的 <see cref="T:System.Xml.XmlElement" /> 对象并配置要匹配的 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象的内部状态。</summary>
      <param name="element">
        <see cref="T:System.Xml.XmlElement" /> 对象，用于指定 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象的状态。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="element" /> 参数不包含 &lt;X509IssuerName&gt; 节点。 - 或 - <paramref name="element" /> 参数不包含 &lt;X509SerialNumber&gt; 节点。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.KeyContainerPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="Create" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoX509Data.SubjectKeyIds">
      <summary>获取包含在 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中的主题密钥标识符 (SKI) 的列表。</summary>
      <returns>包含在 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中的主题密钥标识符 (SKI) 的列表。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoX509Data.SubjectNames">
      <summary>获取包含在 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中的实体主题名称的列表。</summary>
      <returns>包含在 <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> 对象中的实体主题名称的列表。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyReference">
      <summary>表示在 XML 加密中使用的 &lt;KeyReference&gt; 元素。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyReference.#ctor">
      <summary>为 XML 加密初始化 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyReference.#ctor(System.String)">
      <summary>使用提供的统一资源标识符 (URI) 为 XML 加密初始化 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 类的新实例。</summary>
      <param name="uri">指向已加密密钥的统一资源标识符 (URI)。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)">
      <summary>使用指定的统一资源标识符 (URI) 和 <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象为 XML 加密初始化 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 类的新实例。</summary>
      <param name="uri">指向已加密密钥的统一资源标识符 (URI)。</param>
      <param name="transformChain">一个 <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象，描述要对已加密密钥执行的转换。</param>
    </member>
    <member name="T:System.Security.Cryptography.Xml.Reference">
      <summary>表示 XML 签名的 &lt;reference&gt; 元素。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.#ctor">
      <summary>使用默认属性初始化 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)">
      <summary>用指定 <see cref="T:System.IO.Stream" /> 的哈希值初始化 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 类的新实例。</summary>
      <param name="stream">用于初始化 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的新实例的 <see cref="T:System.IO.Stream" />。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.#ctor(System.String)">
      <summary>用指定的 <see cref="T:System.Uri" /> 初始化 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 类的新实例。</summary>
      <param name="uri">用于初始化 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的新实例的 <see cref="T:System.Uri" />。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)">
      <summary>将 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象添加到要在传递给摘要算法之前对数据执行的转换的列表中。</summary>
      <param name="transform">要添加到转换列表的转换。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="transform" /> 参数为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.DigestMethod">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的摘要方法统一资源标识符 (URI)。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的摘要方法 URI。 默认值为“http://www.w3.org/2000/09/xmldsig#sha1”。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.DigestValue">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的摘要值。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的摘要值。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的 XML 表示形式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的 XML 表示形式。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Xml.Reference.DigestMethod" /> 属性为 null。 - 或 - <see cref="P:System.Security.Cryptography.Xml.Reference.DigestValue" /> 属性为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.Id">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的 ID。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的 ID。 默认值为 null。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)">
      <summary>从 XML 元素加载 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 状态。</summary>
      <param name="value">从其加载 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 状态的 XML 元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="value" /> 参数不包含任何转换。 - 或 - <paramref name="value" /> 参数包含未知转换。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.TransformChain">
      <summary>获取当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的转换链。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的转换链。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.Type">
      <summary>获取或设置被签名的对象的类型。</summary>
      <returns>被签名的对象的类型。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.Uri">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的 <see cref="T:System.Uri" />。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的 <see cref="T:System.Uri" />。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.ReferenceList">
      <summary>表示在 XML 加密中所使用的 &lt;ReferenceList&gt; 元素。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.Add(System.Object)">
      <summary>将 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象添加到 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 集合中。</summary>
      <returns>新元素的插入位置。</returns>
      <param name="value">要添加到 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 集合中的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 参数不是 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 对象。 - 或 - <paramref name="value" /> 参数不是 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.Clear">
      <summary>从 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 集合中移除所有项。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.Contains(System.Object)">
      <summary>确定 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 集合中是否包含特定的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象。</summary>
      <returns>如果在 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 集合中找到 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象，则为 true；否则为 false。</returns>
      <param name="value">要在 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 集合中查找的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.CopyTo(System.Array,System.Int32)">
      <summary>从指定的数组索引处开始，将 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 对象的元素复制到数组中。</summary>
      <param name="array">一维 <see cref="T:System.Array" /> 对象，它是从 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 对象复制的元素的目标位置。 该数组的索引必须从零开始。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.ReferenceList.Count">
      <summary>获取 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 对象中包含的元素个数。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 对象中包含的元素数。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.GetEnumerator">
      <summary>返回一个循环访问 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 集合的枚举数。</summary>
      <returns>可用于循环访问 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.IndexOf(System.Object)">
      <summary>确定 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 集合中特定项的索引。</summary>
      <returns>如果在集合中找到该对象，则为 <paramref name="value" /> 的索引；否则为 -1。</returns>
      <param name="value">要在 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 集合中查找的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.Insert(System.Int32,System.Object)">
      <summary>将 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象插入到 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 集合中的指定位置。</summary>
      <param name="index">从零开始的索引，应在该位置插入 <paramref name="value" />。</param>
      <param name="value">要插入到 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 集合中的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 参数不是 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 对象。 - 或 - <paramref name="value" /> 参数不是 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.ReferenceList.IsSynchronized">
      <summary>获取一个值，该值指示对 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 对象的访问是否同步（线程安全）。</summary>
      <returns>如果对 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 对象的访问是同步的（线程安全），则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.Item(System.Int32)">
      <summary>返回位于指定索引处的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象。</summary>
      <returns>位于指定索引处的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象。</returns>
      <param name="index">要返回的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象的索引。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.ReferenceList.ItemOf(System.Int32)">
      <summary>获取或设置位于指定索引处的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象。</summary>
      <returns>位于指定索引处的 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 对象。</returns>
      <param name="index">要返回的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象的索引。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.Remove(System.Object)">
      <summary>从 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 集合中移除特定的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象的第一个匹配项。</summary>
      <param name="value">要从 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 集合中移除的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.ReferenceList.RemoveAt(System.Int32)">
      <summary>移除位于指定索引处的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象。</summary>
      <param name="index">要移除的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 或 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象的从零开始的索引。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.ReferenceList.SyncRoot">
      <summary>获取一个对象，该对象可用于同步对 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 对象的访问。</summary>
      <returns>一个对象，该对象可用于同步对 <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 对象的访问。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.ReferenceList.System#Collections#IList#IsFixedSize">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsFixedSize" />。</summary>
      <returns>如果 <see cref="T:System.Collections.IList" /> 具有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.ReferenceList.System#Collections#IList#IsReadOnly">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsReadOnly" />。</summary>
      <returns>如果 <see cref="T:System.Collections.IList" /> 为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.ReferenceList.System#Collections#IList#Item(System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</summary>
      <returns>位于指定索引处的元素。</returns>
      <param name="index">要获得或设置的元素从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 不是 <see cref="T:System.Collections.IList" /> 中的有效索引。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.RSAKeyValue">
      <summary>表示 XML 签名的 &lt;RSAKeyValue&gt; 元素。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.RSAKeyValue.#ctor">
      <summary>使用新的随机生成的 <see cref="T:System.Security.Cryptography.RSA" /> 公钥初始化 <see cref="T:System.Security.Cryptography.Xml.RSAKeyValue" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.RSAKeyValue.#ctor(System.Security.Cryptography.RSA)">
      <summary>用指定的 <see cref="T:System.Security.Cryptography.RSA" /> 公钥初始化 <see cref="T:System.Security.Cryptography.Xml.RSAKeyValue" /> 类的新实例。</summary>
      <param name="key">包含公钥的 <see cref="T:System.Security.Cryptography.RSA" /> 的实现实例。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.RSAKeyValue.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.RSA" /> 密钥子句的 XML 表示形式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.RSA" /> 密钥子句的 XML 表示形式。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.RSAKeyValue.Key">
      <summary>获取或设置包含公钥的 <see cref="T:System.Security.Cryptography.RSA" /> 的实例。</summary>
      <returns>包含公钥的 <see cref="T:System.Security.Cryptography.RSA" /> 的实例。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.RSAKeyValue.LoadXml(System.Xml.XmlElement)">
      <summary>从 XML 元素加载 <see cref="T:System.Security.Cryptography.RSA" /> 密钥子句。</summary>
      <param name="value">要从其加载 <see cref="T:System.Security.Cryptography.RSA" /> 密钥子句的 XML 元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="value" /> 参数不是有效的 <see cref="T:System.Security.Cryptography.RSA" /> 密钥子句 XML 元素。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.Signature">
      <summary>表示 XML 签名的 &lt;Signature&gt; 元素。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Signature.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Signature.AddObject(System.Security.Cryptography.Xml.DataObject)">
      <summary>将 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 添加到要签名的对象列表。</summary>
      <param name="dataObject">要添加到要签名的对象列表的 <see cref="T:System.Security.Cryptography.Xml.DataObject" />。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Signature.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 的 XML 表示形式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.Signature" /> 的 XML 表示形式。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Xml.Signature.SignedInfo" /> 属性为 null。 - 或 - <see cref="P:System.Security.Cryptography.Xml.Signature.SignatureValue" /> 属性为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Signature.Id">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 的 ID。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 的 ID。 默认值为 null。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Signature.KeyInfo">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 的 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" />。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 的 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Signature.LoadXml(System.Xml.XmlElement)">
      <summary>从 XML 元素加载 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 状态。</summary>
      <param name="value">从其加载 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 状态的 XML 元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="value" /> 参数不包含有效的 <see cref="P:System.Security.Cryptography.Xml.Signature.SignatureValue" />。 - 或 - <paramref name="value" /> 参数不包含有效的 <see cref="P:System.Security.Cryptography.Xml.Signature.SignedInfo" />。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Signature.ObjectList">
      <summary>获取或设置要签名的对象列表。</summary>
      <returns>要签名的对象列表。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Signature.SignatureValue">
      <summary>获取或设置数字签名的值。</summary>
      <returns>一个包含数字签名的值的字节数组。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Signature.SignedInfo">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 的 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" />。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 的 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" />。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.SignedInfo">
      <summary>包含有关用于 XML 签名的规范化算法和签名算法的信息。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.AddReference(System.Security.Cryptography.Xml.Reference)">
      <summary>将 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 对象添加到要摘录和签名的引用列表中。</summary>
      <param name="reference">要添加到引用列表中的引用。</param>
      <exception cref="T:System.ArgumentNullException">引用参数为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod">
      <summary>获取或设置对当前 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象进行签名之前使用的规范化算法。</summary>
      <returns>对当前 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象进行签名之前使用的规范化算法。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject">
      <summary>获取用于规范化的 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象。</summary>
      <returns>用于规范化的 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="T:System.Security.Cryptography.Xml.Transform" /> 为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.CopyTo(System.Array,System.Int32)">
      <summary>将此实例的元素复制到 <see cref="T:System.Array" /> 对象中（从数组中的特定索引处开始）。</summary>
      <param name="array">保存集合中元素的 <see cref="T:System.Array" /> 对象。</param>
      <param name="index">数组中复制元素处的起始索引。</param>
      <exception cref="T:System.NotSupportedException">此方法不受支持。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.Count">
      <summary>获取当前 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象中的引用数目。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象中的引用数目。</returns>
      <exception cref="T:System.NotSupportedException">不支持此属性。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.GetEnumerator">
      <summary>返回遍历引用集合的枚举数。</summary>
      <returns>遍历引用集合的枚举数。</returns>
      <exception cref="T:System.NotSupportedException">此方法不受支持。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象的 XML 表示形式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 实例的 XML 表示形式。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod" /> 属性为 null。 - 或 - <see cref="P:System.Security.Cryptography.Xml.SignedInfo.References" /> 属性为空。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.Id">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象的 ID。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象的 ID。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.IsReadOnly">
      <summary>获取一个值，该值指示该集合是否为只读集合。</summary>
      <returns>如果该集合为只读，则为 true；否则为 false。</returns>
      <exception cref="T:System.NotSupportedException">不支持此属性。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.IsSynchronized">
      <summary>获取一个值，该值指示该集合是否是同步的。</summary>
      <returns>如果集合是同步的，则为 true；否则为 false。</returns>
      <exception cref="T:System.NotSupportedException">不支持此属性。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.LoadXml(System.Xml.XmlElement)">
      <summary>从 XML 元素加载 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 状态。</summary>
      <param name="value">从其加载 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 状态的 XML 元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="value" /> 参数不是有效的 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 元素。 - 或 - <paramref name="value" /> 参数不包含有效的 <see cref="P:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod" /> 属性。 - 或 - <paramref name="value" /> 参数不包含有效的 <see cref="P:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod" /> 属性。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.References">
      <summary>获取当前 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 对象列表。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 元素列表。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.SignatureLength">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象的签名长度。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象的签名长度。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod">
      <summary>获取或设置用于当前 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象的签名生成和验证的算法的名称。</summary>
      <returns>用于当前 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象的签名生成和验证的算法的名称。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.SyncRoot">
      <summary>获取用于同步的对象。</summary>
      <returns>用于同步的对象。</returns>
      <exception cref="T:System.NotSupportedException">不支持此属性。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.SignedXml">
      <summary>向核心 XML 签名对象提供包装以便于创建 XML 签名。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)">
      <summary>从指定的 XML 文档初始化 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 类的新实例。</summary>
      <param name="document">用于初始化 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 的新实例的 <see cref="T:System.Xml.XmlDocument" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="document" /> 参数为 null。 - 或 - <paramref name="document" /> 参数含有 null <see cref="P:System.Xml.XmlDocument.DocumentElement" /> 属性。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)">
      <summary>从指定的 <see cref="T:System.Xml.XmlElement" /> 对象初始化 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 类的新实例。</summary>
      <param name="elem">用于初始化 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 的新实例的 <see cref="T:System.Xml.XmlElement" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> 参数为 null。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)">
      <summary>将 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 对象添加到要签名的对象的列表中。</summary>
      <param name="dataObject">要添加到要签名对象列表中的 <see cref="T:System.Security.Cryptography.Xml.DataObject" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)">
      <summary>将 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 对象添加到描述用于创建 XML 数字签名的摘要方法、摘要值和转换的 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象中。</summary>
      <param name="reference">描述用于创建 XML 数字签名的摘要方法、摘要值和转换的 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature">
      <summary>确定 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性是否使用签名中的公钥进行验证。</summary>
      <returns>如果 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性验证，则为 true；否则为 false。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">签名中的公钥的 <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> 属性与 <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> 属性不匹配。 - 或 - 未能创建签名说明。 - 或 - 未能创建哈希算法。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>确定 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性是否对指定密钥进行验证。</summary>
      <returns>如果 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性对指定密钥进行验证，则为 true；否则为 false。</returns>
      <param name="key">保存有将用于验证 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性的密钥的 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 属性实现。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="key" /> 参数的 <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> 属性与 <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> 属性不匹配。 - 或 - 未能创建签名说明。 - 或 - 未能创建哈希算法。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)">
      <summary>确定 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性是否对指定的消息身份验证代码 (MAC) 算法进行验证。</summary>
      <returns>如果 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性对指定的 MAC 进行验证，则为 true；否则为 false。</returns>
      <param name="macAlg">保存将用于验证 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性的 MAC 的 <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 的实现。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="macAlg" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">指定的 <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 对象的 <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> 属性无效。 - 或 - <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性为 null。 - 或 - 未能创建用于检查签名的加密转换。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)">
      <summary>确定 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性是否验证指定的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象，并确定该证书是否有效（可选）。</summary>
      <returns>如果签名有效，则为 true；否则为 false。 - 或 - 如果签名和证书都有效，则为 true；否则为 false。</returns>
      <param name="certificate">用于验证 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</param>
      <param name="verifySignatureOnly">true 表示仅验证签名；false 表示同时验证签名和证书。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能为 <paramref name="certificate" /> 参数创建签名说明。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)">
      <summary>确定 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性是否使用签名中的公钥进行验证。</summary>
      <returns>如果 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性使用签名中的公钥进行验证，则为 true；否则为 false。</returns>
      <param name="signingKey">当此方法返回时，将包含保存签名中的公钥的 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 的实现。 该参数未经初始化即被传递。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signingKey" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">签名中的公钥的 <see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" /> 属性与 <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod" /> 属性不匹配。 - 或 - 未能创建签名说明。 - 或 - 未能创建哈希算法。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature">
      <summary>计算 XML 数字签名。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> 属性为 null。 - 或 - <see cref="P:System.Security.Cryptography.Xml.SignedXml.SigningKey" /> 属性既不是 <see cref="T:System.Security.Cryptography.DSA" /> 对象，也不是 <see cref="T:System.Security.Cryptography.RSA" /> 对象。 - 或 - 未能加载密钥。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)">
      <summary>使用指定的消息身份验证代码 (MAC) 算法计算 XML 数字签名。</summary>
      <param name="macAlg">
        <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 对象，它保存将用于计算 <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> 属性值的 MAC。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="macAlg" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">由 <paramref name="macAlg" /> 参数指定的 <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 对象不是 <see cref="T:System.Security.Cryptography.HMACSHA1" /> 的实例。 - 或 - 指定的 <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> 对象的 <see cref="P:System.Security.Cryptography.HashAlgorithm.HashSize" /> 属性无效。 - 或 - 未能创建用于检查签名的加密转换。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.EncryptedXml">
      <summary>获取或设置定义 XML 加密处理规则的 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 对象。</summary>
      <returns>定义 XML 加密处理规则的 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)">
      <summary>从指定的 <see cref="T:System.Xml.XmlDocument" /> 对象返回具有指定 ID 的 <see cref="T:System.Xml.XmlElement" /> 对象。</summary>
      <returns>指定的 <see cref="T:System.Xml.XmlDocument" /> 对象中具有指定 ID 的 <see cref="T:System.Xml.XmlElement" /> 对象；或者，如果未能找到它，则为 null。</returns>
      <param name="document">要从中检索 <see cref="T:System.Xml.XmlElement" /> 对象的 <see cref="T:System.Xml.XmlDocument" /> 对象。</param>
      <param name="idValue">要从 <see cref="T:System.Xml.XmlDocument" /> 对象中检索的 <see cref="T:System.Xml.XmlElement" /> 对象的 ID。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.GetPublicKey">
      <summary>返回签名的公钥。</summary>
      <returns>包含签名公钥的 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 对象；如果未能找到该公钥，则为 null。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo" /> 属性为 null。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.GetXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的 XML 表示形式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.Signature" /> 对象的 XML 表示形式。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> 属性为 null。 - 或 - <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> 属性为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)">
      <summary>从 XML 元素加载 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 状态。</summary>
      <param name="value">要从其加载 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 状态的 XML 元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="value" /> 参数不包含有效的 <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue" /> 属性。 - 或 - <paramref name="value" /> 参数不包含有效的 <see cref="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo" /> 属性。</exception>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.m_signature">
      <summary>表示当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 对象。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName">
      <summary>表示将用于对 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象进行签名的已安装密钥的名称。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.Resolver">
      <summary>设置当前的 <see cref="T:System.Xml.XmlResolver" /> 对象。</summary>
      <returns>当前的 <see cref="T:System.Xml.XmlResolver" /> 对象。 默认为 <see cref="T:System.Xml.XmlSecureResolver" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods">
      <summary>[This topic is preliminary and is subject to change.]获取已显式允许其规范化算法的方法的名称。</summary>
      <returns>一个安全生成规范 XML 的方法的名称集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.Signature">
      <summary>获取当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 对象。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.Signature" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator">
      <summary>获取一个委托，将调用此委托以验证 XML 签名的格式（而非加密安全性）。</summary>
      <returns>如果此格式是可接受的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SignatureLength">
      <summary>获取当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的签名长度。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的签名长度。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod">
      <summary>获取当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的签名方法。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的签名方法。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue">
      <summary>获取当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的签名值。</summary>
      <returns>一个字节数组，其中包含当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的签名值。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo">
      <summary>获取当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SigningKey">
      <summary>获取或设置用于对 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象进行签名的不对称算法密钥。</summary>
      <returns>用于对  <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象进行签名的不对称算法密钥。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SigningKeyName">
      <summary>获取或设置将用于对 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象进行签名的已安装密钥的名称。</summary>
      <returns>将用于对 <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> 对象进行签名的已安装密钥的名称。</returns>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl">
      <summary>表示与 XML 模式解密转换对应的统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl">
      <summary>表示与 base 64 转换对应的统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl">
      <summary>表示与规范化 XML 转换对应的统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl">
      <summary>表示与规范化 XML 转换对应的统一资源标识符 (URI)（包含注释）。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl">
      <summary>表示与 XML 数字签名的标准规范化算法对应的统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl">
      <summary>表示与 XML 数字签名的标准规范化算法对应的统一资源标识符 (URI) 并且包括注释。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl">
      <summary>表示与 XML 数字签名的标准 <see cref="T:System.Security.Cryptography.DSA" /> 算法对应的统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl">
      <summary>表示与被包封签名转换对应的统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl">
      <summary>表示与专用 XML 规范化对应的统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl">
      <summary>表示与专用 XML 规范化对应的统一资源标识符 (URI)（包含注释）。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url">
      <summary>表示与 XML 数字签名的标准 <see cref="T:System.Security.Cryptography.HMACSHA1" /> 算法对应的统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl">
      <summary>表示与 XML 数字签名的标准最低规范化算法对应的统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl">
      <summary>表示与 XML 数字签名的标准命名空间对应的统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url">
      <summary>表示与 XML 数字签名的标准 <see cref="T:System.Security.Cryptography.RSA" /> 签名方法对应的统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url">
      <summary>表示与 XML 数字签名的标准 <see cref="T:System.Security.Cryptography.SHA1" /> 摘要方法对应的统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl">
      <summary>表示与 XML 路径语言 (XPath) 对应的统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl">
      <summary>表示与 XSLT 转换对应的统一资源标识符 (URI)。 此字段为常数。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl">
      <summary>表示与用于对签名的 XrML 许可证进行标准化的许可证转换算法对应的统一资源标识符 (URI)。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.Transform">
      <summary>表示可用在 XML 数字签名中的所有 &lt;Transform&gt; 元素从中派生的抽象基类。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Transform.Algorithm">
      <summary>获取或设置用于标识当前转换所执行的算法的统一资源标识符 (URI)。</summary>
      <returns>标识由当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象执行的算法的 URL。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Transform.Context">
      <summary>获取或设置一个 <see cref="T:System.Xml.XmlElement" /> 对象，该对象表示当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象运行的文档上下文。</summary>
      <returns>一个 <see cref="T:System.Xml.XmlElement" /> 对象，表示当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象运行的文档上下文。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)">
      <summary>当在派生类中重写时，返回与 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象关联的摘要。</summary>
      <returns>与 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象关联的摘要。</returns>
      <param name="hash">用于创建摘要的 <see cref="T:System.Security.Cryptography.HashAlgorithm" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.GetInnerXml">
      <summary>当在派生类中重写时，返回 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的参数的 XML 表示形式，适合以 XMLDSIG&lt;Transform&gt; 元素的子元素的形式包含这些参数。</summary>
      <returns>XML 节点的列表，这些节点表示描述 XMLDSIG &lt;Transform&gt; 元素中当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象所需的特定于转换的内容。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.GetOutput">
      <summary>当在派生类中重写时，返回当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的输出。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)">
      <summary>当在派生类中重写时，返回指定类型的当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象作为指定类型对象的输出。</returns>
      <param name="type">要返回的输出的类型。 此类型必须是 <see cref="P:System.Security.Cryptography.Xml.Transform.OutputTypes" /> 属性中的类型之一。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.GetXml">
      <summary>返回当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的 XML 表示形式。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的 XML 表示形式。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Transform.InputTypes">
      <summary>当在派生类中重写时，获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" /> 方法的有效输入。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的一个有效输入类型数组；只能将属于这些类型之一的对象传递给当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" /> 方法。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>当在派生类中重写时，将指定的 <see cref="T:System.Xml.XmlNodeList" /> 对象分析为 &lt;Transform&gt; 元素的特定于转换的内容，并配置当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的内部状态以匹配 &lt;Transform&gt; 元素。</summary>
      <param name="nodeList">
        <see cref="T:System.Xml.XmlNodeList" /> 对象，它指定当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的特定于转换的内容。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)">
      <summary>当在派生类中重写时，将指定的输入加载到当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象中。</summary>
      <param name="obj">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象中的输入。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Transform.OutputTypes">
      <summary>当在派生类中重写时，获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.Transform.GetOutput" /> 方法的可能输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的一个有效输出类型数组；从当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.Transform.GetOutput" /> 方法只返回属于这些类型之一的对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces">
      <summary>获取或设置一个 <see cref="T:System.Collections.Hashtable" /> 对象，该对象包含传播到签名中的命名空间。</summary>
      <returns>一个 <see cref="T:System.Collections.Hashtable" /> 对象，包含传播到签名中的命名空间。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces" /> 属性已设置为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Transform.Resolver">
      <summary>设置当前的 <see cref="T:System.Xml.XmlResolver" /> 对象。</summary>
      <returns>当前的 <see cref="T:System.Xml.XmlResolver" /> 对象。 此属性默认为 <see cref="T:System.Xml.XmlSecureResolver" /> 对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.TransformChain">
      <summary>定义在摘要计算之前应用于未签名内容的 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的顺序列表。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.TransformChain.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.TransformChain.Add(System.Security.Cryptography.Xml.Transform)">
      <summary>将转换添加到要在摘要计算之前应用于未签名内容的转换列表。</summary>
      <param name="transform">要添加到转换列表中的转换。</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.TransformChain.Count">
      <summary>获取 <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象中的转换数。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象中的转换数。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.TransformChain.GetEnumerator">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象中转换的枚举数。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象中转换的枚举数。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.TransformChain.Item(System.Int32)">
      <summary>获取位于 <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象中指定索引处的转换。</summary>
      <returns>位于 <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象中指定索引处的转换。</returns>
      <param name="index">
        <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象中的索引，指定要返回的转换。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> 参数大于转换数。</exception>
    </member>
    <member name="T:System.Security.Cryptography.Xml.X509IssuerSerial">
      <summary>表示 XML 数字签名的 &lt;X509IssuerSerial&gt; 元素。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.IssuerName">
      <summary>获取或设置 X.509 证书颁发者的识别名。</summary>
      <returns>一个 X.509 证书颁发者的识别名。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.SerialNumber">
      <summary>获取或设置 X.509 证书颁发者的序列号。</summary>
      <returns>一个 X.509 证书颁发者的序列号。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDecryptionTransform">
      <summary>指定对同一文档执行 XML 数字签名和 XML 加密操作时这两项操作的顺序。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.AddExceptUri(System.String)">
      <summary>添加要从处理中排除的统一资源标识符 (URI)。</summary>
      <param name="uri">要从处理中排除的统一资源标识符 (URI)</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 参数为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDecryptionTransform.EncryptedXml">
      <summary>获取或设置一个 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 对象，该对象包含有关解密 XML 文档所必需的密钥的信息。</summary>
      <returns>包含有关解密 XML 文档所必需的密钥信息的 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetInnerXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> 对象的参数的 XML 表示形式，适合以 XMLDSIG &lt;Transform&gt; 元素的子元素的形成来包含这些参数。</summary>
      <returns>XML 节点的列表，这些节点表示描述 XMLDSIG &lt;Transform&gt; 元素中当前 <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> 对象所需的特定于转换的内容。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput">
      <summary>返回当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的输出。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能找到解密密钥。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPolicy" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="SafeTopLevelWindows" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput(System.Type)">
      <summary>返回当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的输出。</returns>
      <param name="type">要返回的输出的类型。 <see cref="T:System.Xml.XmlNodeList" /> 是此参数的唯一有效类型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> 参数不是一个 <see cref="T:System.Xml.XmlNodeList" /> 对象。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDecryptionTransform.InputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)" /> 方法的有效输入。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> 对象的一个有效输入类型数组；只能将属于这些类型之一的对象传递给当前 <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)" /> 方法。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.IsTargetElement(System.Xml.XmlElement,System.String)">
      <summary>确定 <see cref="T:System.Xml.XmlElement" /> 对象的 ID 特性是否与指定值匹配。</summary>
      <returns>如果 <paramref name="inputElement" /> 参数的 ID 特性与 <paramref name="idValue" /> 参数匹配，则为 true；否则为 false。</returns>
      <param name="inputElement">
        <see cref="T:System.Xml.XmlElement" /> 对象，它具有与 <paramref name="idValue" /> 进行比较的 ID 特性。</param>
      <param name="idValue">要与 <paramref name="inputElement" /> 的 ID 特性进行比较的值。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>将指定的 <see cref="T:System.Xml.XmlNodeList" /> 对象分析为 &lt;Transform&gt; 元素的特定于转换的内容，并配置当前 <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> 对象的内部状态以匹配 &lt;Transform&gt; 元素。</summary>
      <param name="nodeList">
        <see cref="T:System.Xml.XmlNodeList" /> 对象，它指定当前 <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> 对象的特定于转换的内容。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="nodeList" /> 参数为 null。 - 或 - 未在 <paramref name="nodeList" /> 中找到 <see cref="T:System.Xml.XmlNode" /> 对象的统一资源标识符 (URI) 值。 - 或 - <paramref name="nodeList" /> 中 <see cref="T:System.Xml.XmlNode" /> 对象的 URI 值的长度为 0。  - 或 - <paramref name="nodeList" /> 中 <see cref="T:System.Xml.XmlNode" /> 对象的 URI 值的第一个字符不是“#”。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.LoadInput(System.Object)">
      <summary>当在派生类中重写时，将指定的输入加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> 对象中。</summary>
      <param name="obj">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> 对象中的输入。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 参数为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDecryptionTransform.OutputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput" /> 方法的可能输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> 对象的一个有效输出类型数组；从当前 <see cref="T:System.Security.Cryptography.Xml.XmlDecryptionTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDecryptionTransform.GetOutput" /> 方法只返回属于这些类型之一的对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform">
      <summary>表示在 XMLDSIG 规范的 6.6.2 节中定义的 Base64 解码转换。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetInnerXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象的参数的 XML 表示形式，适合以 XMLDSIG &lt;Transform&gt; 元素的子元素的形式来包含这些参数。</summary>
      <returns>XML 节点的列表，这些节点表示描述 XMLDSIG &lt;Transform&gt; 元素中当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象所需的特定于转换的内容。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput">
      <summary>返回当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象的输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象的输出。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput(System.Type)">
      <summary>返回 <see cref="T:System.IO.Stream" /> 类型的当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象的输出。</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> 类型的当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象的输出。</returns>
      <param name="type">要返回的输出的类型。 <see cref="T:System.IO.Stream" /> 是此参数的唯一有效类型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> 参数不是 <see cref="T:System.IO.Stream" /> 对象。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigBase64Transform.InputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInput(System.Object)" /> 方法的有效输入。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象的一个有效输入类型数组；只能将属于这些类型之一的对象传递给当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInput(System.Object)" /> 方法。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>将指定的 <see cref="T:System.Xml.XmlNodeList" /> 对象作为 &lt;Transform&gt; 元素特定于转换的内容进行分析；由于 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象没有内部 XML 元素，因此不支持此方法。</summary>
      <param name="nodeList">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象中的 <see cref="T:System.Xml.XmlNodeList" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInput(System.Object)">
      <summary>将指定的输入加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象中。</summary>
      <param name="obj">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象中的输入。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> 参数是 <see cref="T:System.IO.Stream" /> 并且为 null。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigBase64Transform.OutputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput" /> 方法的可能输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象的一个有效输出类型数组；只有属于这些类型之一的对象才能从当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput" /> 方法返回。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform">
      <summary>表示由 WWW 联合会 (W3C) 定义的数字签名的 C14N XML 规范化转换（不带注释）。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.#ctor(System.Boolean)">
      <summary>用注释（如果指定了的话）初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 类的新实例。</summary>
      <param name="includeComments">如果包含注释，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)">
      <summary>返回与 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象关联的摘要。</summary>
      <returns>与 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象关联的摘要。</returns>
      <param name="hash">用于创建摘要的 <see cref="T:System.Security.Cryptography.HashAlgorithm" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetInnerXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象的参数的 XML 表示形式，适合以 XMLDSIG &lt;Transform&gt; 元素的子元素的形式来包含这些参数。</summary>
      <returns>XML 节点的列表，这些节点表示描述 XMLDSIG &lt;Transform&gt; 元素中当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象所需的特定于转换的内容。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput">
      <summary>返回当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象的输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象的输出。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput(System.Type)">
      <summary>返回 <see cref="T:System.IO.Stream" /> 类型的当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象的输出。</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> 类型的当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象的输出。</returns>
      <param name="type">要返回的输出的类型。 <see cref="T:System.IO.Stream" /> 是此参数的唯一有效类型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> 参数不是 <see cref="T:System.IO.Stream" /> 对象。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigC14NTransform.InputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput(System.Object)" /> 方法的有效输入。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象的一个有效输入类型数组；只能将这些类型之一的对象传递给当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput(System.Object)" /> 方法。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>将指定的 <see cref="T:System.Xml.XmlNodeList" /> 对象分析为 &lt;Transform&gt; 元素特定于转换的内容；此方法不受支持，因为此元素没有内部 XML 元素。</summary>
      <param name="nodeList">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象中的 <see cref="T:System.Xml.XmlNodeList" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput(System.Object)">
      <summary>将指定的输入加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象中。</summary>
      <param name="obj">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象中的输入。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> 参数是一个 <see cref="T:System.IO.Stream" /> 对象，并且为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigC14NTransform.OutputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput" /> 方法的可能输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象的一个有效输出类型数组；当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput" /> 方法只返回这些类型之一的对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform">
      <summary>表示由 World Wide Web Consortium (W3C) 定义的数字签名的 C14N XML 规范化转换（带注释）。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform">
      <summary>表示由 W3C 定义的 XML 数字签名封装签名转换。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor(System.Boolean)">
      <summary>用注释（如果指定了的话）初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 类的新实例。</summary>
      <param name="includeComments">如果包含注释，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetInnerXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的参数的 XML 表示形式，适合以 XMLDSIG &lt;Transform&gt; 元素的子元素的形成来包含这些参数。</summary>
      <returns>XML 节点的列表，这些节点表示描述 XMLDSIG &lt;Transform&gt; 元素中当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象所需的特定于转换的内容。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput">
      <summary>返回当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的输出。</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException">包含的 XML 文档为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput(System.Type)">
      <summary>返回类型为 <see cref="T:System.Xml.XmlNodeList" /> 的当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的输出。</summary>
      <returns>类型为 <see cref="T:System.Xml.XmlNodeList" /> 的当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的输出。</returns>
      <param name="type">要返回的输出的类型。 <see cref="T:System.Xml.XmlNodeList" /> 是此参数的唯一有效类型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> 参数不是一个 <see cref="T:System.Xml.XmlNodeList" /> 对象。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)" /> 方法的有效输入。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的一个有效输入类型数组；只能将属于这些类型之一的对象传递给当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)" /> 方法。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>将指定的 <see cref="T:System.Xml.XmlNodeList" /> 分析为 &lt;Transform&gt; 元素的特定于转换的内容，并配置当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的内部状态以匹配 &lt;Transform&gt; 元素。</summary>
      <param name="nodeList">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象中的 <see cref="T:System.Xml.XmlNodeList" />。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)">
      <summary>将指定的输入加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象中。</summary>
      <param name="obj">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象中的输入。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> 参数为 null。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">包含的 XML 文档为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput" /> 方法的可能输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的一个有效输出类型数组；从当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput" /> 方法只返回属于这些类型之一的对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
      <summary>表示由万维网联合会 (W3C) 定义的数字签名的专用 C14N XML 规范化转换（不带注释）。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean)">
      <summary>通过指定一个确定是否包含注释的值来初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 类的新实例。</summary>
      <param name="includeComments">如果包含注释，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean,System.String)">
      <summary>通过指定是否包含注释并指定命名空间前缀的列表来初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 类的新实例。</summary>
      <param name="includeComments">如果包含注释，则为 true；否则为 false。</param>
      <param name="inclusiveNamespacesPrefixList">要使用标准规范化算法来规范化的命名空间前缀。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 类的一个新实例，并指定要使用标准规范化算法来规范化的命名空间前缀列表。</summary>
      <param name="inclusiveNamespacesPrefixList">要使用标准规范化算法来规范化的命名空间前缀。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)">
      <summary>返回与 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象关联的摘要。</summary>
      <returns>与 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象关联的摘要。</returns>
      <param name="hash">用于创建摘要的 <see cref="T:System.Security.Cryptography.HashAlgorithm" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的参数的 XML 表示形式，适合以 XMLDSIG &lt;Transform&gt; 元素的子元素的形式来包含这些参数。</summary>
      <returns>XML 节点的列表，这些节点表示描述 XMLDSIG &lt;Transform&gt; 元素中当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象所需的特定于转换的内容。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput">
      <summary>返回当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的输出</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的输出。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)">
      <summary>返回当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象作为指定类型对象的输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象作为指定类型对象的输出。</returns>
      <param name="type">要返回的输出的类型。 它必须是 <see cref="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes" /> 属性中的类型之一。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> 参数不是 <see cref="T:System.IO.Stream" /> 对象。 - 或 - <paramref name="type" /> 参数不从 <see cref="T:System.IO.Stream" /> 对象派生。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList">
      <summary>获取或设置一个字符串，此字符串包含要使用标准规范化算法来规范化的命名空间前缀。</summary>
      <returns>一个字符串，包含要使用标准规范化算法来规范化的命名空间前缀。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /> 方法的有效输入。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的一个有效输入类型数组；只能将属于这些类型之一的对象传递给当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /> 方法。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>将指定的 <see cref="T:System.Xml.XmlNodeList" /> 对象分析为 &lt;Transform&gt; 元素的特定于转换的内容，并配置当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的内部状态以匹配 &lt;Transform&gt; 元素。</summary>
      <param name="nodeList">
        <see cref="T:System.Xml.XmlNodeList" /> 对象，它指定当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的特定于转换的内容。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)">
      <summary>当在派生类中被重写时，将指定的输入加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象中。</summary>
      <param name="obj">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象中的输入。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> 参数不是 <see cref="T:System.IO.Stream" /> 对象。 - 或 - <paramref name="obj" /> 参数不是一个 <see cref="T:System.Xml.XmlDocument" /> 对象。 - 或 - <paramref name="obj" /> 参数不是一个 <see cref="T:System.Xml.XmlNodeList" /> 对象。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /> 方法的可能输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的一个有效输出类型数组；当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的 <see cref="Overload:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /> 方法只返回属于这些类型之一的对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform">
      <summary>表示由 WWW 联合会 (W3C) 定义的数字签名专用 C14N XML 规范化转换（带注释）。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform" /> 类的一个新实例，并指定要使用标准规范化算法来规范化的命名空间前缀列表。</summary>
      <param name="inclusiveNamespacesPrefixList">要使用标准规范化算法来规范化的命名空间前缀。</param>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform">
      <summary>表示由 W3C 定义的数字签名 XPath 转换。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetInnerXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象的参数的 XML 表示形式，适合以 XMLDSIG &lt;Transform&gt; 元素的子元素的形式来包含这些参数。</summary>
      <returns>XML 节点的列表，这些节点表示描述 XMLDSIG &lt;Transform&gt; 元素中当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象所需的特定于转换的内容。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput">
      <summary>返回当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象的输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象的输出。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput(System.Type)">
      <summary>返回 <see cref="T:System.Xml.XmlNodeList" /> 类型的当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象的输出。</summary>
      <returns>
        <see cref="T:System.Xml.XmlNodeList" /> 类型的当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象的输出。</returns>
      <param name="type">要返回的输出的类型。 <see cref="T:System.Xml.XmlNodeList" /> 是此参数的唯一有效类型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> 参数不是一个 <see cref="T:System.Xml.XmlNodeList" /> 对象。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigXPathTransform.InputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput(System.Object)" /> 方法的有效输入。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象的一个有效输入类型数组；只能将属于这些类型之一的对象传递给当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput(System.Object)" /> 方法。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>将指定的 <see cref="T:System.Xml.XmlNodeList" /> 对象分析为 &lt;Transform&gt; 元素的特定于转换的内容，并配置当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象的内部状态以匹配 &lt;Transform&gt; 元素。</summary>
      <param name="nodeList">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象中的 <see cref="T:System.Xml.XmlNodeList" /> 对象。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="nodeList" /> 参数为 null。 - 或 - <paramref name="nodeList" /> 参数不包含 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 元素。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput(System.Object)">
      <summary>将指定的输入加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象中。</summary>
      <param name="obj">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象中的输入。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigXPathTransform.OutputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput" /> 方法的可能输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象的一个有效输出类型数组；当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput" /> 方法只返回属于这些类型之一的对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
      <summary>表示由 W3C 定义的数字签名 XSLT 转换。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.#ctor(System.Boolean)">
      <summary>用注释（如果指定了的话）初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 类的新实例。</summary>
      <param name="includeComments">如果包含注释，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetInnerXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象的参数的 XML 表示形式，适合以 XMLDSIG &lt;Transform&gt; 元素的子元素的形式来包含这些参数。</summary>
      <returns>XML 节点的列表，表示描述 XMLDSIG &lt;Transform&gt; 元素中当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象所需的特定于转换的内容。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput">
      <summary>返回当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象的输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象的输出。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput(System.Type)">
      <summary>返回 <see cref="T:System.IO.Stream" /> 类型的当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象的输出。</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> 类型的当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象的输出。</returns>
      <param name="type">要返回的输出的类型。 <see cref="T:System.IO.Stream" /> 是此参数的唯一有效类型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> 参数不是 <see cref="T:System.IO.Stream" /> 对象。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /> 方法的有效输入。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象的一个有效输入类型数组；只能将这些类型之一的对象传递给当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /> 方法。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>将指定的 <see cref="T:System.Xml.XmlNodeList" /> 对象分析为 &lt;Transform&gt; 元素的特定于转换的内容，并配置当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象的内部状态以匹配 &lt;Transform&gt; 元素。</summary>
      <param name="nodeList">一个 <see cref="T:System.Xml.XmlNodeList" /> 对象，它封装 XSLT 样式表以加载到当前的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象中。 此样式表可应用于由 <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /> 方法加载的文档。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="nodeList" /> 参数为 null。 - 或 - <paramref name="nodeList" /> 参数不包含 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)">
      <summary>将指定的输入加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象中。</summary>
      <param name="obj">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象中的输入。</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput" /> 方法的可能输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象的一个有效输出类型数组；从当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput" /> 方法只返回属于这些类型之一的对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlLicenseTransform">
      <summary>表示用于对签名的 XrML 许可证进行标准化的许可证转换算法。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor">
      <summary>获取或设置当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的解密码。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的解密码。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的参数的 XML 表示形式，适合以 XMLDSIG &lt;Transform&gt; 元素的子元素的形成来包含这些参数。</summary>
      <returns>XML 节点的列表，这些节点表示描述 XMLDSIG &lt;Transform&gt; 元素中当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象所需的特定于转换的内容。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的输出。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的输出。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)">
      <summary>返回 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的输出。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的输出。</returns>
      <param name="type">要返回的输出的类型。 <see cref="T:System.Xml.XmlDocument" /> 是此参数的唯一有效类型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> 参数不是一个 <see cref="T:System.Xml.XmlDocument" /> 对象。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的 <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> 方法的有效输入。</summary>
      <returns>一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的 <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> 方法的有效输入；只能将属于这些类型之一的对象传递给当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的 <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> 方法。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>将指定的 <see cref="T:System.Xml.XmlNodeList" /> 对象分析为 &lt;Transform&gt; 元素的特定于转换的内容；此方法不受支持，因为 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象没有内部 XML 元素。</summary>
      <param name="nodeList">一个 <see cref="T:System.Xml.XmlNodeList" /> 对象，该对象封装要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象中的转换。</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)">
      <summary>将指定的输入加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象中。</summary>
      <param name="obj">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象中的输入。 输入对象的类型必须为 <see cref="T:System.Xml.XmlDocument" />。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">调用此转换之前未设置上下文。 - 或 - 调用此转换之前未设置 &lt;issuer&gt; 元素。 - 或 - 调用此转换之前未设置 &lt;license&gt; 元素。 - 或 - 调用此转换之前未设置 <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor" /> 属性。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes">
      <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的 <see cref="P:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes" /> 方法的有效输出。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的一个有效输出类型数组；从当前 <see cref="T:System.Security.Cryptography.Xml.XmlLicenseTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput" /> 方法只返回属于这些类型之一的对象。</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermission">
      <summary>控制访问加密数据和内存的能力。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)">
      <summary>使用指定的权限标志初始化 <see cref="T:System.Security.Permissions.DataProtectionPermission" /> 类的新实例。</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 值的按位组合。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flags" /> 不是 <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 值的有效组合。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的权限状态初始化 <see cref="T:System.Security.Permissions.DataProtectionPermission" /> 类的新实例。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值之一。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Copy">
      <summary>创建并返回当前权限的相同副本。</summary>
      <returns>当前权限的副本。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermission.Flags">
      <summary>获取或设置数据和内存保护标志。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 值的按位组合。</returns>
      <exception cref="T:System.ArgumentException">指定的值不是 <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 值的有效组合。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)">
      <summary>从 XML 编码重新构造具有指定状态的权限。</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" />，包含用于重新构造权限的 XML 编码。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 不是一个有效的权限元素。 - 或 - 不支持 <paramref name="securityElement" /> 的版本号。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)">
      <summary>创建并返回一个权限，该权限是当前权限和指定权限的交集。</summary>
      <returns>一个新权限，它表示当前权限与指定权限的交集。 如果交集为空，则此新权限为 null。</returns>
      <param name="target">要与当前权限相交的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 null，并且未指定与当前权限属于同一类型的权限。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>确定当前权限是否为指定权限的子集。</summary>
      <returns>如果当前权限是指定权限的子集，则为 true；否则为 false。</returns>
      <param name="target">要测试子集关系的权限。 此权限必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 null，并且未指定与当前权限属于同一类型的权限。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsUnrestricted">
      <summary>返回一个值，该值指示当前权限是否为无限制的。</summary>
      <returns>如果当前权限是无限制的，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.ToXml">
      <summary>创建权限及其当前状态的 XML 编码。</summary>
      <returns>权限的 XML 编码，包括状态信息。</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)">
      <summary>创建一个权限，该权限是当前权限与指定权限的并集。</summary>
      <returns>一个新权限，它表示当前权限与指定权限的并集。</returns>
      <param name="target">将与当前权限合并的权限。 它必须与当前权限属于同一类型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 null，并且未指定与当前权限属于同一类型的权限。</exception>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionAttribute">
      <summary>允许对使用声明安全性应用到代码中的 <see cref="T:System.Security.Permissions.DataProtectionPermission" /> 进行安全操作。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>用指定的 <see cref="T:System.Security.Permissions.SecurityAction" /> 初始化 <see cref="T:System.Security.Permissions.DataProtectionPermissionAttribute" /> 类的新实例。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值之一。</param>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission">
      <summary>创建并返回一个新的 <see cref="T:System.Security.Permissions.DataProtectionPermission" />。</summary>
      <returns>与此特性对应的 <see cref="T:System.Security.Permissions.DataProtectionPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.Flags">
      <summary>获取或设置数据保护权限。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 值的按位组合。 默认值为 <see cref="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData">
      <summary>获取或设置一个值，该值指示是否可使用 <see cref="T:System.Security.Cryptography.ProtectedData" /> 类来加密数据。</summary>
      <returns>如果可以加密数据，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory">
      <summary>获取或设置一个值，该值指示是否可使用 <see cref="T:System.Security.Cryptography.ProtectedMemory" /> 类来加密内存。</summary>
      <returns>如果可以加密内存，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData">
      <summary>获取或设置一个值，该值指示是否可使用 <see cref="T:System.Security.Cryptography.ProtectedData" /> 类解密数据。</summary>
      <returns>如果数据可以解密，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory">
      <summary>获取或设置一个值，该值指示是否可使用 <see cref="T:System.Security.Cryptography.ProtectedMemory" /> 类解密内存。</summary>
      <returns>如果内存可以解密，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionFlags">
      <summary>指定加密数据和内存的访问权限。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.AllFlags">
      <summary>加密数据，加密内存，解密数据，解密内存的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags">
      <summary>没有保护能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectData">
      <summary>加密数据的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectMemory">
      <summary>加密内存的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectData">
      <summary>解密数据的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectMemory">
      <summary>解密内存的能力。</summary>
    </member>
  </members>
</doc>