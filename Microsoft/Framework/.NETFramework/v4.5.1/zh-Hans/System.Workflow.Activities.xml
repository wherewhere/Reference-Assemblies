<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Workflow.Activities</name>
  </assembly>
  <members>
    <member name="T:System.Workflow.Activities.ActiveDirectoryRole">
      <summary>在 Windows Workflow Foundation 宿主环境中表示 Active Directory 角色。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports">
      <summary>返回的 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 包含所有直接或间接向当前角色报告的角色。</summary>
      <returns>一个 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />，包含所有直接或间接向当前角色报告的角色。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports">
      <summary>返回的 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 包含所有直接向当前角色报告的角色。</summary>
      <returns>一个 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />，包含所有直接向当前角色报告的角色。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetEntries">
      <summary>返回泛型集合，该集合包含与当前 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 相关联的所有 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象。</summary>
      <returns>与当前的 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 相关联的泛型 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 集合。</returns>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetIdentities">
      <summary>获取一个与 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 相关联的 Windows NT 帐户泛型列表。</summary>
      <returns>一个值的泛型列表，这些值表示与 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 关联的 Windows NT 帐户。</returns>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetManager">
      <summary>返回一个 Active Directory 角色，该角色包含有关当前 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 管理者的信息。</summary>
      <returns>包含有关当前角色的管理者信息的 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />。</returns>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain">
      <summary>返回 Active Directory 角色，该角色包含有关与当前 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 相关联的管理链的信息。</summary>
      <returns>包含有关与当前角色相关联的管理链信息的 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetPeers">
      <summary>返回一个 Active Directory 角色，该角色包含有关由当前 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 管理者监督的所有目录操作的信息。</summary>
      <returns>一个 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" />，包含有关由当前 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 管理者监督的所有目录操作的信息。</returns>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers">
      <summary>返回与当前 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 相关联的 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 对象的泛型列表。</summary>
      <returns>一个与当前 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 相关联的 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 对象的泛型列表。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)">
      <summary>返回一个值，该值指示 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 是否包含指定的标识。</summary>
      <returns>如果 <paramref name="identity" /> 包含在 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 中，则为 true；否则为 false。</returns>
      <param name="identity">要搜索的标识。</param>
    </member>
    <member name="P:System.Workflow.Activities.ActiveDirectoryRole.Name">
      <summary>获取或设置 Active Directory 角色名称。</summary>
      <returns>Active Directory 角色名称。</returns>
    </member>
    <member name="P:System.Workflow.Activities.ActiveDirectoryRole.RootEntry">
      <summary>获取与 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 关联的根 Active Directory 节点。</summary>
      <returns>一个 <see cref="T:System.DirectoryServices.DirectoryEntry" />，表示与 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 相关联的根 Active Directory 节点。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose">
      <summary>释放由 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化目标对象所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 目标。</param>
    </member>
    <member name="T:System.Workflow.Activities.ActiveDirectoryRoleFactory">
      <summary>一个工厂类，用于从 Windows NT 别名、电子邮件地址和安全标识符 (SID) 创建 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 对象。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.ActiveDirectoryRoleFactory.Configuration">
      <summary>获取与 <see cref="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" /> 关联的 <see cref="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" /> 对象。</summary>
      <returns>与 <see cref="T:System.Workflow.Activities.ActiveDirectoryRoleFactory" /> 关联的 <see cref="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" /> 对象。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromAlias(System.String)">
      <summary>使用指定的 Windows NT 别名创建 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 的实例。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 的实例，它描述指定的 Windows NT 别名。</returns>
      <param name="alias">用于创建 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 的别名字符串。</param>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromEmailAddress(System.String)">
      <summary>使用电子邮件地址创建 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 的实例。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 的实例，它描述指定的电子邮件地址。</returns>
      <param name="emailAddress">用于创建 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 的电子邮件地址字符串。</param>
    </member>
    <member name="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromSecurityIdentifier(System.Security.Principal.SecurityIdentifier)">
      <summary>使用 Windows NT <see cref="T:System.Security.Principal.SecurityIdentifier" /> 创建 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 的实例。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 的实例，它描述指定的 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</returns>
      <param name="sid">用于创建 <see cref="T:System.Workflow.Activities.ActiveDirectoryRole" /> 的 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</param>
    </member>
    <member name="T:System.Workflow.Activities.CallExternalMethodActivity">
      <summary>定义用于对本地服务调用方法的工作流通信活动。 此活动用于将数据通过本地服务从工作流发送到宿主中。</summary>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> 类的新实例。</summary>
      <param name="name">用户定义的活动名，用于初始化活动名称属性。</param>
    </member>
    <member name="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken">
      <summary>获取或设置外部方法的 <see cref="T:System.Workflow.Runtime.CorrelationToken" />。</summary>
      <returns>外部方法的相关令牌。</returns>
    </member>
    <member name="F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>试图使用指定的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 运行 <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> 值之一。</returns>
      <param name="executionContext">包含运行 <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> 的执行环境的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <exception cref="T:System.ArgumentException">此 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="executionContext" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="executionContext" /> 的服务对象为空引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties">
      <summary>对依赖项属性执行初始化。</summary>
    </member>
    <member name="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType">
      <summary>获取或设置外部方法的具有 <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> 的声明接口。</summary>
      <returns>外部方法的具有 <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> 的声明接口。</returns>
    </member>
    <member name="F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking">
      <summary>在调用方法前发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent">
      <summary>表示针对 <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName">
      <summary>获取或设置要对向 <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> 注册的本地服务调用的方法的名称。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> 接口的方法名。</returns>
    </member>
    <member name="F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)">
      <summary>为派生类提供挂钩以从 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" /> 提取或返回值。 在运行外部方法之后立即调用此方法。</summary>
      <param name="e">包含 <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> 事件的数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)">
      <summary>为派生类提供挂钩以设置 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />。 在即将运行外部方法之前调用此方法。</summary>
      <param name="e">包含 <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" /> 事件的数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings">
      <summary>获取外部方法的形参表中可绑定参数的集合。</summary>
      <returns>要绑定到的参数的 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />。</returns>
    </member>
    <member name="F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的访问类型。</summary>
      <returns>一个表示属性访问级别的 <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> 枚举值。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的 <see cref="T:System.Type" />。</summary>
      <returns>其名称作为 <paramref name="propertyName " />参数进行传递的属性的 <see cref="T:System.Type" />。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="T:System.Workflow.Activities.CallExternalMethodActivityValidator">
      <summary>验证是否已正确配置 <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> 类。</summary>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivityValidator.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.CallExternalMethodActivityValidator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.CallExternalMethodActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>在工作流编译期间验证 <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> 类。</summary>
      <returns>包含此操作产生的错误的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</returns>
      <param name="manager">用于进行此验证的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />。</param>
      <param name="obj">要验证的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="T:System.Workflow.Activities.CodeActivity">
      <summary>运行与活动关联的代码旁置方法。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.CodeActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.CodeActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.CodeActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.CodeActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="E:System.Workflow.Activities.CodeActivity.ExecuteCode">
      <summary>在 <see cref="T:System.Workflow.Activities.CodeActivity" /> 启动时发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.CodeActivity.ExecuteCodeEvent">
      <summary>表示针对 <see cref="E:System.Workflow.Activities.CodeActivity.ExecuteCode" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.CodeCondition">
      <summary>定义一种可保证/促使在工作流定义中执行某一特定活动的条件。 它具有类型为 <see cref="T:System.Workflow.Activities.ConditionalEventArgs" /> 的事件，可以返回该条件的结果。</summary>
    </member>
    <member name="M:System.Workflow.Activities.CodeCondition.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.CodeCondition" /> 类的新实例。</summary>
    </member>
    <member name="E:System.Workflow.Activities.CodeCondition.Condition">
      <summary>在计算条件时发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.CodeCondition.ConditionEvent">
      <summary>表示针对 <see cref="E:System.Workflow.Activities.CodeCondition.Condition" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.CodeCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
      <summary>计算基础条件。</summary>
      <returns>如果条件的计算结果为 true，则为 true；否则为 false。 默认值为 false。</returns>
      <param name="ownerActivity">与此条件关联的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <param name="provider">用于此条件计算的 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.CodeCondition.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)">
      <summary>检索作为 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的主题的 <see cref="T:System.Object" />。</summary>
      <returns>
        <see cref="T:System.Object" /> 由 <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 绑定到该活动。</returns>
      <param name="bind">有关的 <see cref="T:System.Workflow.ComponentModel.ActivityBind" />。</param>
      <param name="targetType">
        <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> 的目标的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bind" /> 或 <paramref name="targetType" /> 为 null。</exception>
    </member>
    <member name="T:System.Workflow.Activities.CompensatableSequenceActivity">
      <summary>定义 <see cref="T:System.Workflow.Activities.SequenceActivity" /> 活动的可补偿版本。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.CompensatableSequenceActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.CompensatableSequenceActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.CompensatableSequenceActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>使用 <see cref="M:System.Workflow.ComponentModel.ICompensatableActivity.Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)" /> 接口执行活动。</summary>
      <returns>尝试操作之后的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。</returns>
      <param name="executionContext">活动的执行上下文。</param>
    </member>
    <member name="T:System.Workflow.Activities.ConditionalEventArgs">
      <summary>返回 <see cref="T:System.Workflow.Activities.CodeCondition" /> 类的结果信息。此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ConditionalEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.ConditionalEventArgs" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ConditionalEventArgs.#ctor(System.Boolean)">
      <summary>使用条件的结果初始化 <see cref="T:System.Workflow.Activities.ConditionalEventArgs" /> 类的新实例。</summary>
      <param name="result">条件的结果。</param>
    </member>
    <member name="P:System.Workflow.Activities.ConditionalEventArgs.Result">
      <summary>获取或设置 <see cref="T:System.Workflow.Activities.CodeCondition" /> 计算的结果。</summary>
      <returns>如果条件的结果为 true，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Workflow.Activities.ConditionedActivityGroup">
      <summary>为一组子活动提供基于限制的执行上下文定义。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.ConditionedActivityGroup" /> 类的新实例。</summary>
      <exception cref="T:System.InvalidOperationException">未执行任何子级且 <see cref="P:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition" /> 计算结果为 false。</exception>
    </member>
    <member name="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.ConditionedActivityGroup" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)">
      <summary>获取指定子活动已被执行的次数。</summary>
      <returns>已执行指定子活动的次数。</returns>
      <param name="child">子活动。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> 参数为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException">有条件的活动组状态为 null。</exception>
      <exception cref="T:System.ArgumentException">无法确定该子活动已被运行的次数。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)">
      <summary>获取子活动的当前正在执行的实例。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> 的当前正在执行的实例。</returns>
      <param name="childActivityName">子 <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> 的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="childactivity" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">可执行活动不包含 <paramref name="childactivity" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)">
      <summary>获取与指定依赖项对象的 <see cref="F:System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty" /> 相关联的条件。</summary>
      <returns>when 条件。</returns>
      <param name="dependencyObject">活动的基础数据存储对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">可执行活动不包含 <paramref name="dependencyObject" />。</exception>
    </member>
    <member name="M:System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)">
      <summary>设置与指定依赖项对象的 <see cref="F:System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty" /> 相关联的条件。</summary>
      <param name="dependencyObject">活动的基础数据存储对象。</param>
      <param name="value">when 条件的值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dependencyObject" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">可执行活动不包含 <paramref name="dependencyObject" />。</exception>
    </member>
    <member name="M:System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="P:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition">
      <summary>获取或设置指示 <see cref="T:System.Workflow.Activities.ConditionedActivityGroup" /> 何时应完成的值。</summary>
      <returns>一个确定 <see cref="T:System.Workflow.Activities.ConditionedActivityGroup" /> 是否应完成的条件。</returns>
    </member>
    <member name="F:System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty">
      <summary>表示针对 <see cref="F:System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.CorrelationAliasAttribute">
      <summary>当必须从由 <see cref="T:System.Workflow.Activities.CorrelationParameterAttribute" /> 指示的参数以外的参数获取相关值时，重写相关参数值。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.CorrelationAliasAttribute.#ctor(System.String,System.String)">
      <summary>使用作为别名的相关名和可以找到值的路径初始化 <see cref="T:System.Workflow.Activities.CorrelationAliasAttribute" /> 的新实例。</summary>
      <param name="name">将作为别名的相关参数名称。</param>
      <param name="path">指示方法或事件中哪个变量包含 <paramref name="name" /> 指定的相关参数的值。 此参数可以使用点表示法，例如 Parameter.Location。</param>
    </member>
    <member name="P:System.Workflow.Activities.CorrelationAliasAttribute.Name">
      <summary>获取将作为别名的相关参数名称。</summary>
      <returns>将作为别名的相关参数名称。</returns>
    </member>
    <member name="P:System.Workflow.Activities.CorrelationAliasAttribute.Path">
      <summary>获取参数中指定相关值位置的路径。</summary>
      <returns>参数中指定相关值位置的路径。</returns>
    </member>
    <member name="T:System.Workflow.Activities.CorrelationInitializerAttribute">
      <summary>指示 ExternalDataExchange 接口上初始化相关值的方法或事件。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.CorrelationInitializerAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.CorrelationInitializerAttribute" /> 属性的新实例。</summary>
    </member>
    <member name="T:System.Workflow.Activities.CorrelationParameterAttribute">
      <summary>指示在 ExternalDataExchange 接口上定义的方法和事件中相关性使用的参数的名称。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.CorrelationParameterAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.CorrelationParameterAttribute" /> 的新实例，其中参数名用于相关。</summary>
      <param name="name">用于相关的参数的名称。</param>
    </member>
    <member name="P:System.Workflow.Activities.CorrelationParameterAttribute.Name">
      <summary>获取用于相关的参数的名称。</summary>
      <returns>用于相关的参数的名称。 默认值为空字符串。</returns>
    </member>
    <member name="T:System.Workflow.Activities.DelayActivity">
      <summary>提供逻辑以建立计时器并异步等待计时器过期。此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.DelayActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.DelayActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.DelayActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.DelayActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="E:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration">
      <summary>在超时持续时间开始之前发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.DelayActivity.InitializeTimeoutDurationEvent">
      <summary>表示针对 <see cref="E:System.Workflow.Activities.DelayActivity.InitializeTimeoutDuration" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#QueueName">
      <summary>获取将在计时器过期时传递的工作流队列的名称。</summary>
      <returns>工作流队列的名称。</returns>
    </member>
    <member name="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>创建 <see cref="T:System.Workflow.Activities.DelayActivity" /> 对事件的订阅。</summary>
      <param name="parentContext">表示 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的执行环境的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <param name="parentEventHandler">父事件的 <see cref="T:System.EventHandler" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentContext" /> 或 <paramref name="parentEventHandler" /> 为 null。</exception>
    </member>
    <member name="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>取消 <see cref="T:System.Workflow.Activities.DelayActivity" /> 对事件的订阅。</summary>
      <param name="parentContext">表示 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的执行环境的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <param name="parentEventHandler">父事件的 <see cref="T:System.EventHandler" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentContext" /> 或 <paramref name="parentEventHandler" /> 为 null。</exception>
    </member>
    <member name="M:System.Workflow.Activities.DelayActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="P:System.Workflow.Activities.DelayActivity.TimeoutDuration">
      <summary>获取和设置工作流中延迟的持续时间。</summary>
      <returns>指示工作流中延迟时间长度的 <see cref="T:System.TimeSpan" />。</returns>
    </member>
    <member name="F:System.Workflow.Activities.DelayActivity.TimeoutDurationProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.DelayActivity.TimeoutDuration" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.EventDeliveryFailedException">
      <summary>当宿主中引发的事件无法传递到工作流实例时引发的异常。 该事件通常从工作流实例上的 <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> 中引发。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.EventDeliveryFailedException" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String)">
      <summary>使用解释异常原因的错误消息初始化 <see cref="T:System.Workflow.Activities.EventDeliveryFailedException" /> 类的新实例。</summary>
      <param name="message">解释异常原因的错误消息。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.String,System.Exception)">
      <summary>使用解释异常原因的错误消息和导致此异常的 <see cref="T:System.Exception" /> 初始化 <see cref="T:System.Workflow.Activities.EventDeliveryFailedException" /> 类的新实例。</summary>
      <param name="message">解释异常原因的错误消息。</param>
      <param name="innerException">导致此异常的 <see cref="T:System.Exception" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.EventDrivenActivity">
      <summary>包装其执行由某一事件初始化的 <see cref="T:System.Workflow.ComponentModel.Activity" />。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.EventDrivenActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户标识名称。</param>
    </member>
    <member name="P:System.Workflow.Activities.EventDrivenActivity.EventActivity">
      <summary>获取驱动更改的事件活动。</summary>
      <returns>驱动更改的事件活动。</returns>
    </member>
    <member name="T:System.Workflow.Activities.EventHandlersActivity">
      <summary>包含事件处理程序集合的一项复合活动。 它通常用于必须处理事件集合的情况。 每个事件由一个作为 <see cref="T:System.Workflow.Activities.EventHandlersActivity" /> 一部分的 <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> 进行处理。</summary>
    </member>
    <member name="M:System.Workflow.Activities.EventHandlersActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.EventHandlersActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.EventHandlersActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.EventHandlersActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.String)">
      <summary>获取 <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> 的当前正在执行的实例。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> 的当前正在执行的实例。</returns>
      <param name="childActivityName">子 <see cref="T:System.Workflow.Activities.EventDrivenActivity" /> 的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="childactivity" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">可执行活动不包含 <paramref name="childactivity" />。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="T:System.Workflow.Activities.EventHandlingScopeActivity">
      <summary>允许通过执行子活动来进行事件处理。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.EventHandlingScopeActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.EventHandlingScopeActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.EventHandlingScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="T:System.Workflow.Activities.EventQueueName">
      <summary>表示与 <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> 上的事件关联的队列的名称。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String)">
      <summary>使用指定的 <see cref="T:System.Type" /> 和操作名称初始化 <see cref="T:System.Workflow.Activities.EventQueueName" /> 类的新实例。</summary>
      <param name="interfaceType">要与 <see cref="T:System.Workflow.Activities.EventQueueName" /> 关联的接口的 <see cref="T:System.Type" />。</param>
      <param name="operation">一个字符串，其中包含要与 <see cref="T:System.Workflow.Activities.EventQueueName" /> 关联的操作名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String,System.Collections.Generic.ICollection{System.Workflow.Runtime.CorrelationProperty})">
      <summary>初始化 <see cref="T:System.Workflow.Activities.EventQueueName" /> 类的新实例。</summary>
      <param name="interfaceType">接口的 <see cref="T:System.Type" /></param>
      <param name="operation">一个字符串，其中包含要与 <see cref="T:System.Workflow.Activities.EventQueueName" /> 关联的操作名称。</param>
      <param name="propertyValues">一个 <see cref="T:System.Workflow.Runtime.CorrelationProperty" /> 集合，该集合定义要与 <see cref="T:System.Workflow.Activities.EventQueueName" /> 关联的属性值。</param>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Object)">
      <summary>将当前的 <see cref="T:System.Workflow.Activities.EventQueueName" /> 与指定的 <see cref="T:System.Workflow.Activities.EventQueueName" /> 进行比较。</summary>
      <returns>一个 32 位有符号整数，指示比较对象是否匹配。-1 表示当前的 <see cref="T:System.Workflow.Activities.EventQueueName" /> 与指定的对象不匹配；0 表示 <see cref="T:System.Workflow.Activities.EventQueueName" /> 与指定的对象匹配。</returns>
      <param name="toCompare">与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Workflow.Activities.EventQueueName" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Workflow.Activities.EventQueueName)">
      <summary>将当前的 <see cref="T:System.Workflow.Activities.EventQueueName" /> 与指定的 <see cref="T:System.Workflow.Activities.EventQueueName" /> 进行比较。</summary>
      <returns>一个 32 位有符号整数，指示比较对象是否匹配。-1 表示两个 <see cref="T:System.Workflow.Activities.EventQueueName" /> 对象不匹配；0 表示两个 <see cref="T:System.Workflow.Activities.EventQueueName" /> 对象匹配。</returns>
      <param name="eventQueueName">与当前的 <see cref="T:System.Workflow.Activities.EventQueueName" /> 进行比较的 <see cref="T:System.Workflow.Activities.EventQueueName" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.Equals(System.Object)">
      <summary>确定指定的对象是否等于当前的 <see cref="T:System.Workflow.Activities.EventQueueName" />。</summary>
      <returns>如果指定的 <see cref="T:System.Object" /> 等于当前的 <see cref="T:System.Workflow.Activities.EventQueueName" />，则为 true；否则为 false。</returns>
      <param name="obj">与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Workflow.Activities.EventQueueName" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.GetCorrelationValues">
      <summary>返回 <see cref="T:System.Workflow.Runtime.CorrelationProperty" /> 数组，该数组包含与 <see cref="T:System.Workflow.Activities.EventQueueName" /> 关联的所有相关属性。</summary>
      <returns>
        <see cref="T:System.Workflow.Runtime.CorrelationProperty" /> 数组，该数组包含与 <see cref="T:System.Workflow.Activities.EventQueueName" /> 关联的所有相关属性。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.GetHashCode">
      <summary>返回当前 <see cref="T:System.Workflow.Activities.EventQueueName" /> 的哈希代码。</summary>
      <returns>一个整数，表示为当前 <see cref="T:System.Workflow.Activities.EventQueueName" /> 生成的哈希代码。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.EventQueueName.InterfaceType">
      <summary>获取与 <see cref="T:System.Workflow.Activities.EventQueueName" /> 关联的 <see cref="T:System.Type" />。</summary>
      <returns>与 <see cref="T:System.Workflow.Activities.EventQueueName" /> 关联的 <see cref="T:System.Type" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.EventQueueName.MethodName">
      <summary>获取与 <see cref="T:System.Workflow.Activities.EventQueueName" /> 关联的方法名。</summary>
      <returns>一个字符串，其中包含与 <see cref="T:System.Workflow.Activities.EventQueueName" /> 关联的方法名。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.op_Equality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <summary>返回一个值，该值指示两个指定的 <see cref="T:System.Workflow.Activities.EventQueueName" /> 对象是否相等。</summary>
      <returns>如果 <paramref name="queueKey1" /> 和 <paramref name="queueKey2" /> 相等，则为 true；否则为 false。</returns>
      <param name="queueKey1">要比较的第一个 <see cref="T:System.Workflow.Activities.EventQueueName" />。</param>
      <param name="queueKey2">要比较的第二个 <see cref="T:System.Workflow.Activities.EventQueueName" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.op_GreaterThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <summary>返回一个值，该值指示两个指定 <see cref="T:System.Workflow.Activities.EventQueueName" /> 对象中的第一个是否大于第二个。</summary>
      <returns>如果 <paramref name="queueKey1" /> 大于 <paramref name="queueKey2" />，则为 true；否则为 false。</returns>
      <param name="queueKey1">要比较的第一个 <see cref="T:System.Workflow.Activities.EventQueueName" />。</param>
      <param name="queueKey2">要比较的第二个 <see cref="T:System.Workflow.Activities.EventQueueName" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="queueKey1" /> 或 <paramref name="queueKey2" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.op_Inequality(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <summary>返回一个值，该值指示两个指定的 <see cref="T:System.Workflow.Activities.EventQueueName" /> 对象是否不相等。</summary>
      <returns>如果 <paramref name="queueKey1" /> 与 <paramref name="queueKey2" /> 不相等，则为 true；否则为 false。</returns>
      <param name="queueKey1">要比较的第一个 <see cref="T:System.Workflow.Activities.EventQueueName" />。</param>
      <param name="queueKey2">要比较的第二个 <see cref="T:System.Workflow.Activities.EventQueueName" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.op_LessThan(System.Workflow.Activities.EventQueueName,System.Workflow.Activities.EventQueueName)">
      <summary>返回一个值，该值指示两个指定 <see cref="T:System.Workflow.Activities.EventQueueName" /> 对象中的第一个是否小于第二个。</summary>
      <returns>如果 <paramref name="queueKey1" /> 大于 <paramref name="queueKey2" />，则为 true；否则为 false。</returns>
      <param name="queueKey1">要比较的第一个 <see cref="T:System.Workflow.Activities.EventQueueName" />。</param>
      <param name="queueKey2">要比较的第二个 <see cref="T:System.Workflow.Activities.EventQueueName" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="queueKey1" /> 或 <paramref name="queueKey2" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.EventQueueName.ToString">
      <summary>返回当前 <see cref="T:System.Workflow.Activities.EventQueueName" /> 的 <see cref="T:System.String" /> 表示形式。</summary>
      <returns>当前 <see cref="T:System.Workflow.Activities.EventQueueName" /> 的 <see cref="T:System.String" /> 表示形式。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.ExecutionType">
      <summary>指定活动的执行模式。</summary>
    </member>
    <member name="F:System.Workflow.Activities.ExecutionType.Parallel">
      <summary>并行执行活动。</summary>
    </member>
    <member name="F:System.Workflow.Activities.ExecutionType.Sequence">
      <summary>依次执行活动。 每个活动按顺序在前一个活动执行完成后执行。</summary>
    </member>
    <member name="T:System.Workflow.Activities.ExternalDataEventArgs">
      <summary>表示在使用 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 活动引发事件时发送的数据。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid)">
      <summary>使用工作流的实例标识符初始化 <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" /> 类的新实例。</summary>
      <param name="instanceId">包含应处理该事件的 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 的工作流实例的工作流实例标识符。</param>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" /> 类的新实例。</summary>
      <param name="instanceId">包含应处理该事件的 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 的工作流实例的工作流实例标识符。</param>
      <param name="workHandler">允许引发事件的外部代码参与批处理的 <see cref="T:System.Workflow.Runtime.IPendingWork" />。</param>
      <param name="workItem">包含引发事件的外部代码的对象。</param>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object,System.Boolean)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" /> 类的新实例。</summary>
      <param name="instanceId">包含应处理该事件的 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 的工作流实例的工作流实例标识符。</param>
      <param name="workHandler">允许引发事件的外部代码参与批处理的 <see cref="T:System.Workflow.Runtime.IPendingWork" />。</param>
      <param name="workItem">包含引发事件的外部代码的对象。</param>
      <param name="waitForIdle">一个值，指示工作流是否在引发事件前应处于空闲状态；否则为 false。</param>
    </member>
    <member name="P:System.Workflow.Activities.ExternalDataEventArgs.Identity">
      <summary>获取或设置引发事件的用户的标识。</summary>
      <returns>引发事件的用户的标识。</returns>
    </member>
    <member name="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId">
      <summary>获取或设置包含应处理该事件的 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 的工作流实例的工作流实例标识符。</summary>
      <returns>包含应处理该事件的 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 的工作流实例的工作流实例标识符。</returns>
    </member>
    <member name="P:System.Workflow.Activities.ExternalDataEventArgs.WaitForIdle">
      <summary>获取或设置值，该值指示是应立即引发事件，还是工作流在引发事件前应处于空闲状态。</summary>
      <returns>如果工作流在引发事件前应处于空闲状态，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Workflow.Activities.ExternalDataEventArgs.WorkHandler">
      <summary>获取或设置允许引发事件的外部代码参与批处理的 <see cref="T:System.Workflow.Runtime.IPendingWork" />。</summary>
      <returns>允许引发事件的外部代码参与批处理的 <see cref="T:System.Workflow.Runtime.IPendingWork" />。</returns>
    </member>
    <member name="P:System.Workflow.Activities.ExternalDataEventArgs.WorkItem">
      <summary>获取或设置包含引发事件的外部代码的对象。</summary>
      <returns>包含引发事件的外部代码的对象。</returns>
    </member>
    <member name="T:System.Workflow.Activities.ExternalDataExchangeAttribute">
      <summary>将接口标记为本地服务接口。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> 的新实例。</summary>
    </member>
    <member name="T:System.Workflow.Activities.ExternalDataExchangeService">
      <summary>表示一个必须添加到工作流运行时引擎才能启用本地服务通信的服务。 若要正确地初始化和注册这些服务，必需将本地服务实现添加到 <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> 类的新实例。</summary>
      <param name="parameters">用于配置服务的参数的集合。 允许的值为空集合或只包含 ConfigurationSection 键的集合。</param>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> 类的新实例。</summary>
      <param name="configSectionName">包含此服务的所需配置的配置部分的名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Workflow.Activities.ExternalDataExchangeServiceSection)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> 类的新实例。</summary>
      <param name="settings">包含此服务的设置的配置部分。</param>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.AddService(System.Object)">
      <summary>将指定的服务添加到 <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />。</summary>
      <param name="service">一个对象，表示要添加服务。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException">未找到外部运行时容器。</exception>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.GetService(System.Type)">
      <summary>获取指定接口类型的服务实现（如果服务可用）。</summary>
      <returns>实现所请求服务的对象，或者在无法解析服务的情况下为 null（在 Visual Basic 中为 Nothing）。</returns>
      <param name="serviceType">由要检索的服务实现的接口的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> 为空引用 (Nothing)。</exception>
      <exception cref="T:System.InvalidOperationException">此服务未向运行时注册。</exception>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.RemoveService(System.Object)">
      <summary>从 <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> 中移除指定的服务。</summary>
      <param name="service">一个对象，表示要移除的服务。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="service" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException">此服务未向运行时注册。</exception>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeService.Start">
      <summary>如果在对象的构造期间指定配置节，则添加本地服务。</summary>
    </member>
    <member name="T:System.Workflow.Activities.ExternalDataExchangeServiceSection">
      <summary>表示允许您在配置文件中指定要添加到 <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> 的实例的一组服务的配置节。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ExternalDataExchangeServiceSection.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" /> 类的实例。</summary>
    </member>
    <member name="P:System.Workflow.Activities.ExternalDataExchangeServiceSection.Services">
      <summary>获取要添加到 <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" /> 的实例的服务集合。</summary>
      <returns>服务元素的集合。</returns>
    </member>
    <member name="T:System.Workflow.Activities.HandleExternalEventActivity">
      <summary>定义用于处理由本地服务引发的事件的工作流通信活动。</summary>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>取消事件的处理。</summary>
      <returns>请求的操作结束时 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</returns>
      <param name="executionContext">表示 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的执行环境的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
    </member>
    <member name="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken">
      <summary>获取或设置到 <see cref="T:System.Workflow.Runtime.CorrelationToken" /> 的绑定。</summary>
      <returns>此属性用于基于事件的负载将事件与继承 <see cref="T:System.Workflow.Activities.IEventActivity" /> 的正确活动建立关联。 例如，当单个工作流实例同时侦听同一事件的多个实例时，可以使用 CorrelationToken 属性将事件路由到该工作流实例中正确的活动。 不要将此关联与将事件与正确的工作流实例建立关联相混淆。 与正确的工作流实例建立关联是通过将事件发送到显式工作流实例并使用 <see cref="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" /> 属性正确地标识正确的工作流实例来完成的。 crexample相关性的示例，请参见相关 Local Service 示例。</returns>
    </member>
    <member name="F:System.Workflow.Activities.HandleExternalEventActivity.CorrelationTokenProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.CorrelationToken" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.HandleExternalEventActivity.EventName">
      <summary>获取引发的事件的名称。 只有先设置此属性，本地通信才能发生。</summary>
      <returns>引发的事件的名称。</returns>
    </member>
    <member name="F:System.Workflow.Activities.HandleExternalEventActivity.EventNameProperty">
      <summary>对应于在使用 <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> 进行标记的接口中定义的事件的名称。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>试图运行与 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 关联的 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />。</summary>
      <returns>请求的操作结束时 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</returns>
      <param name="executionContext">与 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 关联的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
      <summary>此实例的执行上下文中引发了异常时调用。</summary>
      <returns>试图取消此实例时产生的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。</returns>
      <param name="executionContext">此实例的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <param name="exception">导致此错误的 <see cref="T:System.Exception" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="executionContext" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="executionContext" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.Initialize(System.IServiceProvider)">
      <summary>使用服务提供程序初始化事件。</summary>
      <param name="provider">为类提供自定义支持的 <see cref="T:System.IServiceProvider" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> 为空引用（在 Visual Basic 中为 Nothing）、服务提供程序的类型为空引用 (Nothing) 或服务提供程序的代理为空引用 (Nothing)。</exception>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.InitializeProperties">
      <summary>对依赖项属性执行初始化。</summary>
    </member>
    <member name="P:System.Workflow.Activities.HandleExternalEventActivity.InterfaceType">
      <summary>获取或设置处理其事件的本地服务的 <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> 属性化接口类型。 只有先设置此属性，本地通信才能发生。</summary>
      <returns>将处理其事件的本地服务的接口类型。</returns>
    </member>
    <member name="F:System.Workflow.Activities.HandleExternalEventActivity.InterfaceTypeProperty">
      <summary>对应于使用 <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" /> 进行标记的接口的名称。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.HandleExternalEventActivity.Invoked">
      <summary>在接收到外部事件时发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.HandleExternalEventActivity.InvokedEvent">
      <summary>定义一个在活动接收到来自本地服务的预期事件之后执行的事件委托。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.OnClosed(System.IServiceProvider)">
      <summary>作为活动向 Closed 状态转换的一部分，由工作流运行时调用。</summary>
      <param name="provider">提供服务的 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.OnInvoked(System.EventArgs)">
      <summary>在接收到外部事件后立即调用，以在活动关闭之前使派生类可以处理入站 <see cref="T:System.EventArgs" />。</summary>
      <param name="e">从刚刚接收的外部事件中接收的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings">
      <summary>获取参数绑定的集合。</summary>
      <returns>参数绑定的集合。</returns>
    </member>
    <member name="F:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindingsProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.HandleExternalEventActivity.Roles">
      <summary>获取或设置对工作流角色集合的引用。</summary>
      <returns>工作流角色的集合。</returns>
    </member>
    <member name="F:System.Workflow.Activities.HandleExternalEventActivity.RolesProperty">
      <summary>标识允许将消息从宿主发送到此活动的有效用户角色。 两种支持的角色是 Active Directory 和 ASP.NET。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName">
      <summary>获取该活动正在等待其数据到达的 <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 的名称。</summary>
      <returns>该活动正在等待其数据到达的 <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 的名称。</returns>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>Creates the subscription of the <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> activity to an event.</summary>
      <param name="parentContext">表示 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的执行环境的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <param name="parentEventHandler">父事件的 <see cref="T:System.EventHandler" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>取消 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 活动对事件的订阅。</summary>
      <param name="parentContext">表示活动的执行环境的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <param name="parentEventHandler">父事件的 <see cref="T:System.EventHandler" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的访问类型。</summary>
      <returns>一个表示属性访问级别的 <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> 枚举值。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的 <see cref="T:System.Type" />。</summary>
      <returns>其名称作为 <paramref name="propertyName " />参数进行传递的属性的 <see cref="T:System.Type" />。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="T:System.Workflow.Activities.HandleExternalEventActivityValidator">
      <summary>验证是否已正确配置 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 类。</summary>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivityValidator.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.HandleExternalEventActivityValidator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.HandleExternalEventActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>在工作流编译期间验证 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 类。</summary>
      <returns>包含此操作产生的错误的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</returns>
      <param name="manager">用于进行此验证的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />。</param>
      <param name="obj">要验证的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="T:System.Workflow.Activities.IEventActivity">
      <summary>提供必须从中派生事件驱动活动的方法和属性，以便可以订阅事件。</summary>
    </member>
    <member name="P:System.Workflow.Activities.IEventActivity.QueueName">
      <summary>获取该活动正在等待其数据到达的 <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 的名称。</summary>
      <returns>该活动正在等待其数据到达的 <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 的名称。</returns>
    </member>
    <member name="M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>创建 <see cref="T:System.Workflow.ComponentModel.Activity" /> 对事件的订阅。</summary>
      <param name="parentContext">表示 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的执行环境的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <param name="parentEventHandler">父事件的 <see cref="T:System.EventHandler" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>取消 <see cref="T:System.Workflow.ComponentModel.Activity" /> 对事件的订阅。</summary>
      <param name="parentContext">表示 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的执行环境的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <param name="parentEventHandler">父事件的 <see cref="T:System.EventHandler" />。</param>
    </member>
    <member name="T:System.Workflow.Activities.IfElseActivity">
      <summary>有条件地运行类型为 <see cref="T:System.Workflow.Activities.IfElseBranchActivity" /> 的两个或多个活动之一。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.IfElseActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.IfElseActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.IfElseActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.IfElseActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity})">
      <summary>使用要添加到新分支的新活动的集合向 <see cref="T:System.Workflow.Activities.IfElseActivity" /> 中添加新分支。</summary>
      <returns>更新后具有新分支的 <see cref="T:System.Workflow.Activities.IfElseBranchActivity" />。</returns>
      <param name="activities">要添加到新分支的活动的集合。</param>
    </member>
    <member name="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Workflow.ComponentModel.ActivityCondition)">
      <summary>使用要添加到新分支的新活动的集合向 <see cref="T:System.Workflow.Activities.IfElseActivity" /> 中添加新分支。</summary>
      <returns>更新后具有新分支的 <see cref="T:System.Workflow.Activities.IfElseBranchActivity" />。</returns>
      <param name="activities">要添加到新分支的活动的集合。</param>
      <param name="branchCondition">确定是否应该运行此分支的 <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.IfElseActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义活动执行状态发生更改时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="T:System.Workflow.Activities.IfElseBranchActivity">
      <summary>表示 <see cref="T:System.Workflow.Activities.IfElseActivity" /> 的分支。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.IfElseBranchActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.IfElseBranchActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.IfElseBranchActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.IfElseBranchActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="P:System.Workflow.Activities.IfElseBranchActivity.Condition">
      <summary>为当前分支活动获取或设置 <see cref="T:System.Workflow.ComponentModel.ActivityCondition" /> 对象引用。 此条件的计算结果返回一个值，该值指示是否应运行此分支。</summary>
      <returns>一个 <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />，它返回一个指示是否应运行此分支的值。</returns>
    </member>
    <member name="F:System.Workflow.Activities.IfElseBranchActivity.ConditionProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.IfElseBranchActivity.Condition" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.InvokeWebServiceActivity">
      <summary>通过代理类调用 Web 服务，按指定方式传递和接收参数。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.InvokeWebServiceActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.InvokeWebServiceActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoked">
      <summary>在调用 Web 服务时发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokedEvent">
      <summary>表示针对 <see cref="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoked" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoking">
      <summary>正在调用 Web 服务时发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWebServiceActivity.InvokingEvent">
      <summary>表示针对 <see cref="E:System.Workflow.Activities.InvokeWebServiceActivity.Invoking" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWebServiceActivity.MethodName">
      <summary>获取或设置将对 Web 服务调用的代理类的方法名。</summary>
      <returns>代理类的方法名。默认值为空 <see cref="T:System.String" />。</returns>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWebServiceActivity.MethodNameProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.InvokeWebServiceActivity.MethodName" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings">
      <summary>获取由 <see cref="P:System.Workflow.Activities.InvokeWebServiceActivity.MethodName" /> 属性指定的方法的参数绑定集合。</summary>
      <returns>方法的 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />，由 <see cref="P:System.Workflow.Activities.InvokeWebServiceActivity.MethodName" /> 属性指定。 默认值为类型为 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> 的空集合。</returns>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindingsProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass">
      <summary>获取或设置用于与 Web 服务通信的代理类的类型。</summary>
      <returns>用于启动 Web 服务的代理的 <see cref="T:System.Type" />。 默认值为空 <see cref="T:System.String" />。</returns>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClassProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.InvokeWebServiceActivity.ProxyClass" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWebServiceActivity.SessionId">
      <summary>获取或设置一个会话标识符，它指示是在整个活动过程中共享会话还是使用新会话。</summary>
      <returns>一个会话标识符，它包含上一会话的 <see cref="P:System.Workflow.Activities.InvokeWebServiceActivity.SessionID" />，或为一个空的 <see cref="T:System.String" />（指示将使用新会话）。 默认值为空 <see cref="T:System.String" />。</returns>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWebServiceActivity.SessionIdProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.InvokeWebServiceActivity.SessionId" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的访问类型。</summary>
      <returns>一个表示属性访问级别的 <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> 枚举值。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的 <see cref="T:System.Type" />。</summary>
      <returns>其名称作为 <paramref name="propertyName " />参数进行传递的属性的 <see cref="T:System.Type" />。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="T:System.Workflow.Activities.InvokeWebServiceEventArgs">
      <summary>包含用于调用 Web 服务的事件数据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWebServiceEventArgs.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.InvokeWebServiceEventArgs" /> 类的新实例。</summary>
      <param name="proxyInstance">要对传出的 Web 服务调用使用的 Web 服务代理 <see cref="T:System.Object" />。</param>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWebServiceEventArgs.WebServiceProxy">
      <summary>获取与 Web 服务通信的代理类。</summary>
      <returns>与 Web 服务通信的代理类 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.Workflow.Activities.InvokeWorkflowActivity">
      <summary>从一个工作流中异步运行另一个工作流。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.InvokeWorkflowActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.InvokeWorkflowActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWorkflowActivity.InstanceId">
      <summary>获取指示新创建工作流实例的 <see cref="T:System.Guid" />。</summary>
      <returns>指示新创建工作流实例的 <see cref="T:System.Guid" />。</returns>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWorkflowActivity.InstanceIdProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.InvokeWorkflowActivity.InstanceId" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.InvokeWorkflowActivity.Invoking">
      <summary>在调用工作流之前发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWorkflowActivity.InvokingEvent">
      <summary>表示针对 <see cref="E:System.Workflow.Activities.InvokeWorkflowActivity.Invoking" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindings">
      <summary>获取要绑定到的参数的集合。</summary>
      <returns>包含正在调用的工作流的参数绑定的 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />。 默认值为空 <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />。</returns>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindingsProperty">
      <summary>表示针对 <see cref="F:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindingsProperty" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)">
      <summary>确定 <see cref="T:System.Type" /> 是否可以由工作流筛选。</summary>
      <returns>如果可以筛选指定的 <see cref="T:System.Type" />，则为 true；否则为 false。</returns>
      <param name="type">工作流必须筛选的类型。</param>
      <param name="throwOnError">如果无法筛选指定的类型，则为 true 以引发错误；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 为 null。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="throwonError" /> 为 true。 这指示 <paramref name="type" /> 是一种设计时类型。</exception>
      <exception cref="T:System.Exception">
        <paramref name="type" /> 不是根活动。</exception>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription">
      <summary>获取正在由工作流使用的筛选器的说明。</summary>
      <returns>正在由工作流使用的筛选器的说明。</returns>
    </member>
    <member name="P:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflow">
      <summary>获取或设置要调用的工作流的 <see cref="T:System.Type" />。</summary>
      <returns>要调用的工作流的完全限定名称。 默认值为 null。</returns>
    </member>
    <member name="F:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflowProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.InvokeWorkflowActivity.TargetWorkflow" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.ListenActivity">
      <summary>在活动继续前使工作流等待多个可能事件中的任何一个事件发生。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ListenActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.ListenActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ListenActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.ListenActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.ListenActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="T:System.Workflow.Activities.MessageEventSubscription">
      <summary>创建消息事件订阅以将消息路由到相应的工作流实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.MessageEventSubscription.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.MessageEventSubscription" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid)">
      <summary>使用指定的队列名称和实例 ID 初始化 <see cref="T:System.Workflow.Activities.MessageEventSubscription" /> 类的新实例。</summary>
      <param name="queueName">标识队列的友好名称。</param>
      <param name="instanceId">指示工作流实例的 <see cref="T:System.Guid" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Guid)">
      <summary>使用指定的队列名称、实例 ID 和订阅 ID 初始化 <see cref="T:System.Workflow.Activities.MessageEventSubscription" /> 类的新实例。</summary>
      <param name="queueName">标识队列的友好名称。</param>
      <param name="instanceId">指示工作流实例的 <see cref="T:System.Guid" />。</param>
      <param name="subscriptionId">指示订阅标识符的 <see cref="T:System.Guid" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String)">
      <summary>使用指定的队列名称、订阅 ID、接口类型和操作名称初始化 <see cref="T:System.Workflow.Activities.MessageEventSubscription" /> 类的新实例。</summary>
      <param name="queueName">标识队列的友好名称。</param>
      <param name="subscriptionId">指示订阅标识符的 <see cref="T:System.Guid" />。</param>
      <param name="interfaceType">接口的 <see cref="T:System.Type" />。</param>
      <param name="operation">接口上表示要为其创建订阅的消息处理操作的事件名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.MessageEventSubscription.#ctor(System.IComparable,System.Guid,System.Type,System.String,System.Guid)">
      <summary>使用指定的队列名称、实例 ID、接口类型、操作和订阅 ID 初始化 <see cref="T:System.Workflow.Activities.MessageEventSubscription" /> 类的新实例。</summary>
      <param name="queueName">标识队列的友好名称。</param>
      <param name="instanceId">指示工作流实例的 <see cref="T:System.Guid" />。</param>
      <param name="interfaceType">接口的 <see cref="T:System.Type" />。</param>
      <param name="operation">接口上表示要为其创建订阅的消息处理操作的事件名称。</param>
      <param name="subscriptionId">指示订阅标识符的 <see cref="T:System.Guid" />。</param>
    </member>
    <member name="P:System.Workflow.Activities.MessageEventSubscription.CorrelationProperties">
      <summary>获取消息的相关属性集合，这些属性会将传入消息与 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 映射在一起。</summary>
      <returns>消息的相关属性列表，这些属性会将传入消息与 <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" /> 映射在一起。</returns>
    </member>
    <member name="P:System.Workflow.Activities.MessageEventSubscription.InterfaceType">
      <summary>获取或设置接口类型。</summary>
      <returns>接口的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Workflow.Activities.MessageEventSubscription.MethodName">
      <summary>获取或设置方法的名称。</summary>
      <returns>方法的名称。</returns>
    </member>
    <member name="P:System.Workflow.Activities.MessageEventSubscription.QueueName">
      <summary>获取或设置此订阅所属的队列的名称。</summary>
      <returns>标识此订阅所属的队列的名称。</returns>
    </member>
    <member name="P:System.Workflow.Activities.MessageEventSubscription.SubscriptionId">
      <summary>获取或设置此订阅的唯一标识符。</summary>
      <returns>指示订阅标识符的 <see cref="T:System.Guid" />。</returns>
    </member>
    <member name="P:System.Workflow.Activities.MessageEventSubscription.WorkflowInstanceId">
      <summary>获取或设置为其创建此订阅的工作流的 InstanceId。</summary>
      <returns>指示工作流实例的 <see cref="T:System.Guid" />。</returns>
    </member>
    <member name="T:System.Workflow.Activities.ParallelActivity">
      <summary>同时运行一组子活动。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ParallelActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.ParallelActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ParallelActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.ParallelActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="T:System.Workflow.Activities.PolicyActivity">
      <summary>表示将作为工作流执行过程的一部分以单一步骤或活动的形式运行的 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 类实例的集合。</summary>
    </member>
    <member name="M:System.Workflow.Activities.PolicyActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.PolicyActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.PolicyActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.PolicyActivity" /> 的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="P:System.Workflow.Activities.PolicyActivity.RuleSetReference">
      <summary>获取或设置对 .rules 文件中 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的引用。</summary>
      <returns>对 .rules 文件中 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的 <see cref="T:System.Workflow.Activities.Rules.RuleSetReference" />。</returns>
    </member>
    <member name="F:System.Workflow.Activities.PolicyActivity.RuleSetReferenceProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.PolicyActivity.RuleSetReference" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.ReplicatorActivity">
      <summary>运行子活动的多个实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ReplicatorActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorActivity.AllChildrenComplete">
      <summary>获取一个值，该值指示是否所有的子实例都已完成。</summary>
      <returns>如果所有的子实例都已完成，则为 true；否则为 false。</returns>
    </member>
    <member name="E:System.Workflow.Activities.ReplicatorActivity.ChildCompleted">
      <summary>紧接在 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 完成运行子活动实例后发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.ReplicatorActivity.ChildCompletedEvent">
      <summary>在 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 的子活动实例完成时发生。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.ReplicatorActivity.ChildInitialized">
      <summary>紧接在初始化子活动实例后发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.ReplicatorActivity.ChildInitializedEvent">
      <summary>在 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 的子活动实例已初始化后发生。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.ReplicatorActivity.Completed">
      <summary>当 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 完成时发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.ReplicatorActivity.CompletedEvent">
      <summary>在 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 完成时发生。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorActivity.CurrentChildData">
      <summary>返回所有子活动的列表。</summary>
      <returns>所有子活动的列表。</returns>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorActivity.CurrentIndex">
      <summary>获取当前子活动的索引位置。</summary>
      <returns>当前子活动的索引位置。</returns>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorActivity.DynamicActivities">
      <summary>获取正在运行的子活动实例的数组。</summary>
      <returns>当前正在运行的子活动实例的数组。</returns>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorActivity.ExecutionType">
      <summary>获取或设置 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 的 <see cref="T:System.Workflow.Activities.ExecutionType" />。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 的 <see cref="T:System.Workflow.Activities.ExecutionType" />。</returns>
    </member>
    <member name="F:System.Workflow.Activities.ReplicatorActivity.ExecutionTypeProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.ReplicatorActivity.ExecutionType" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorActivity.InitialChildData">
      <summary>获取或设置子活动数据的列表。</summary>
      <returns>子活动数据的列表。</returns>
    </member>
    <member name="F:System.Workflow.Activities.ReplicatorActivity.InitialChildDataProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.ReplicatorActivity.InitialChildData" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.ReplicatorActivity.Initialized">
      <summary>当 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 开始执行时发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.ReplicatorActivity.InitializedEvent">
      <summary>表示针对 <see cref="E:System.Workflow.Activities.ReplicatorActivity.Initialized" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.ReplicatorActivity.IsExecuting(System.Int32)">
      <summary>指示指定的子活动是否当前正在执行。</summary>
      <returns>如果子活动正在执行，则为 true；否则为 false。</returns>
      <param name="index">子活动的索引位置。</param>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorActivity.UntilCondition">
      <summary>获取或设置指示 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 何时应完成的完成条件。</summary>
      <returns>确定 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 是否完成的 <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />。</returns>
    </member>
    <member name="F:System.Workflow.Activities.ReplicatorActivity.UntilConditionProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.ReplicatorActivity.UntilCondition" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.ReplicatorChildEventArgs">
      <summary>除了子 <see cref="T:System.Workflow.ComponentModel.Activity" /> 实例完成的时间外，还包含子 <see cref="T:System.Workflow.ComponentModel.Activity" /> 实例初始化时调用的 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 活动处理程序的事件参数。</summary>
    </member>
    <member name="M:System.Workflow.Activities.ReplicatorChildEventArgs.#ctor(System.Object,System.Workflow.ComponentModel.Activity)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.ReplicatorChildEventArgs" /> 类的新实例。</summary>
      <param name="instanceData">表示与通过 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 执行的当前子 <see cref="T:System.Workflow.ComponentModel.Activity" /> 实例相关联的数据/执行上下文的对象实例。</param>
      <param name="activity">引发事件的当前 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 实例的子 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorChildEventArgs.Activity">
      <summary>获取引发事件的 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 实例的子/模板 <see cref="T:System.Workflow.ComponentModel.Activity" />。</summary>
      <returns>表示引发事件的 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 的子活动的一个 <see cref="T:System.Workflow.ComponentModel.Activity" /> 类实例。</returns>
    </member>
    <member name="P:System.Workflow.Activities.ReplicatorChildEventArgs.InstanceData">
      <summary>获取 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 可枚举集合中的当前项。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 可枚举集合中的当前项。</returns>
    </member>
    <member name="T:System.Workflow.Activities.SequenceActivity">
      <summary>根据一种已定义的排序方式，运行一组子活动。</summary>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.SequenceActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.SequenceActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>取消活动的执行。</summary>
      <returns>在取消执行后活动的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。</returns>
      <param name="executionContext">活动的执行上下文。</param>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>执行活动。</summary>
      <returns>在执行活动后活动的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。</returns>
      <param name="executionContext">活动的执行上下文。</param>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
      <summary>此实例的执行上下文中引发了异常时调用。</summary>
      <returns>活动的执行状态。</returns>
      <param name="executionContext">此实例的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <param name="exception">导致此错误的 <see cref="T:System.Exception" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
      <summary>移除活动时调用。</summary>
      <param name="executionContext">此实例的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <param name="removedActivity">指定的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>在派生类中重写时，确定活动执行完毕后 <see cref="T:System.Workflow.Activities.SequenceActivity" /> 需要执行的操作。</summary>
      <param name="executionContext">此实例的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="executionContext" /> 是 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>对此实例的集合 <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> 进行更改之后调用。</summary>
      <param name="executionContext">此实例的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="T:System.Workflow.Activities.SequentialWorkflowActivity">
      <summary>表示按顺序执行活动的工作流。</summary>
    </member>
    <member name="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> class by using the name of the activity.</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="E:System.Workflow.Activities.SequentialWorkflowActivity.Completed">
      <summary>当工作流完成时发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent">
      <summary>表示针对 <see cref="E:System.Workflow.Activities.SequentialWorkflowActivity.Completed" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition">
      <summary>在派生类中重写时，获取或设置在工作流中进行动态更新所依据的 <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />。</summary>
      <returns>标识何时可以进行动态更新的 <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />。</returns>
    </member>
    <member name="M:System.Workflow.Activities.SequentialWorkflowActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>运行工作流。</summary>
      <returns>请求的操作结束时 <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> 的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />。</returns>
      <param name="executionContext">与 <see cref="T:System.Workflow.ComponentModel.Activity" /> 关联的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
    </member>
    <member name="E:System.Workflow.Activities.SequentialWorkflowActivity.Initialized">
      <summary>初始化工作流时发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.SequentialWorkflowActivity.InitializedEvent">
      <summary>表示针对 <see cref="E:System.Workflow.Activities.SequentialWorkflowActivity.Initialized" /> 事件的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.SequentialWorkflowActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>为 <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> 引发 <see cref="F:System.Workflow.Activities.SequentialWorkflowActivity.CompletedEvent" />。</summary>
      <param name="executionContext">与 <see cref="T:System.Workflow.ComponentModel.Activity" /> 关联的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="executionContext" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="T:System.Workflow.Activities.SetStateActivity">
      <summary>提供向状态机工作流中 <see cref="T:System.Workflow.Activities.StateActivity" /> 的转换。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.SetStateActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.SetStateActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.SetStateActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.SetStateActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="P:System.Workflow.Activities.SetStateActivity.TargetStateName">
      <summary>获取或设置目标状态的名称。</summary>
      <returns>目标流的名称。</returns>
    </member>
    <member name="F:System.Workflow.Activities.SetStateActivity.TargetStateNameProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.SetStateActivity.TargetStateName" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.SetStateEventArgs">
      <summary>表示一个类，该类用作设置 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 状态的一个参数。</summary>
    </member>
    <member name="M:System.Workflow.Activities.SetStateEventArgs.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.SetStateEventArgs" /> 类的新实例。</summary>
      <param name="targetStateName">要将 <see cref="T:System.Workflow.Activities.StateActivity" /> 设置到的状态。</param>
    </member>
    <member name="P:System.Workflow.Activities.SetStateEventArgs.TargetStateName">
      <summary>获取要将 <see cref="T:System.Workflow.Activities.StateActivity" /> 设置到的状态。</summary>
      <returns>要将 <see cref="T:System.Workflow.Activities.StateActivity" /> 设置到的状态。</returns>
    </member>
    <member name="T:System.Workflow.Activities.StateActivity">
      <summary>表示 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 中的状态。</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.StateActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.StateActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>取消执行 <see cref="T:System.Workflow.Activities.StateActivity" />。</summary>
      <returns>正在运行的工作流实例中的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的当前状态。</returns>
      <param name="executionContext">活动的执行上下文。</param>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>执行 <see cref="T:System.Workflow.Activities.StateActivity" />。</summary>
      <returns>正在运行的工作流实例中的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的当前状态。</returns>
      <param name="executionContext">活动的执行上下文。</param>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)">
      <summary>获取 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的与指定子活动名称相对应的正在执行的实例。</summary>
      <returns>动态子活动。</returns>
      <param name="childActivityName">子活动。</param>
      <exception cref="T:System.ArgumentException">The executable activities do not contain the <paramref name="childActivityName" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)">
      <summary>使用服务提供程序初始化 <see cref="T:System.Workflow.Activities.StateActivity" />。</summary>
      <param name="provider">从中获取服务的服务提供程序。</param>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
      <summary>确定正在添加的活动是否为 <see cref="T:System.Workflow.Activities.EventDrivenActivity" />，如果是，则验证是否需要订阅新添加的事件驱动。</summary>
      <param name="executionContext">活动的执行上下文。</param>
      <param name="addedActivity">添加到 <see cref="T:System.Workflow.Activities.StateActivity" /> 的活动。</param>
    </member>
    <member name="M:System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)">
      <summary>作为活动向 <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed" /> 状态转换的一部分，由工作流运行时引擎调用。</summary>
      <param name="provider">从中获取服务的服务提供程序。</param>
    </member>
    <member name="F:System.Workflow.Activities.StateActivity.StateChangeTrackingDataKey">
      <summary>包含更改跟踪数据键的字符串值：“StateActivity.StateChange”。 此字段为常数。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.StateActivityValidator">
      <summary>表示一个类，该类验证 <see cref="T:System.Workflow.Activities.StateActivity" /> 类是否已正确配置。</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateActivityValidator.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.StateActivityValidator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
      <summary>在工作流编译期间验证 <see cref="T:System.Workflow.Activities.StateActivity" /> 类。</summary>
      <returns>包含此操作产生的错误的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</returns>
      <param name="manager">用于进行此验证的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />。</param>
      <param name="obj">要验证的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.Activities.StateActivityValidator.ValidateActivityChange(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityChangeAction)">
      <summary>验证对 <see cref="T:System.Workflow.Activities.StateActivity" /> 所做的更改。</summary>
      <returns>包含此操作产生的错误的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</returns>
      <param name="activity">要验证的 <see cref="T:System.Workflow.Activities.StateActivity" /> 的名称。</param>
      <param name="action">对 <see cref="T:System.Workflow.Activities.StateActivity" /> 执行的操作。</param>
    </member>
    <member name="T:System.Workflow.Activities.StateFinalizationActivity">
      <summary>表示在状态机工作流中转换为其他状态之前执行所包含活动的活动。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateFinalizationActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.StateFinalizationActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateFinalizationActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.StateFinalizationActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="T:System.Workflow.Activities.StateInitializationActivity">
      <summary>作为将在 <see cref="T:System.Workflow.Activities.StateActivity" /> 开始运行时执行的一组活动的容器。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateInitializationActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.StateInitializationActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateInitializationActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.StateInitializationActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="T:System.Workflow.Activities.StateMachineWorkflowActivity">
      <summary>用作状态机工作流的根容器。 包含事件驱动的活动和状态。</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName">
      <summary>获取或设置工作流的最终 <see cref="T:System.Workflow.Activities.StateActivity" />。</summary>
      <returns>工作流的最终 <see cref="T:System.Workflow.Activities.StateActivity" />。</returns>
    </member>
    <member name="F:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyObject" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName">
      <summary>获取当前正在执行的 <see cref="T:System.Workflow.Activities.StateActivity" /> 的名称。</summary>
      <returns>当前的 <see cref="T:System.Workflow.Activities.StateActivity" /> 的名称。</returns>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition">
      <summary>在派生类中被重写时，获取或设置确定是否可以在工作流中进行动态更新的 <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />。</summary>
      <returns>标识何时可以进行动态更新的 <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />。</returns>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName">
      <summary>获取或设置创建状态机的实例时 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 所处的 <see cref="T:System.Workflow.Activities.StateActivity" />。</summary>
      <returns>在创建状态机的实例时，<see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 所处的 <see cref="T:System.Workflow.Activities.StateActivity" />。</returns>
    </member>
    <member name="F:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyObject" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName">
      <summary>获取上次执行的 <see cref="T:System.Workflow.Activities.StateActivity" /> 的名称。</summary>
      <returns>上一个 <see cref="T:System.Workflow.Activities.StateActivity" /> 的名称。</returns>
    </member>
    <member name="F:System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName">
      <summary>用于更改 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 状态的 <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 的名称。 此字段为常数。</summary>
    </member>
    <member name="T:System.Workflow.Activities.StateMachineWorkflowInstance">
      <summary>表示一个类，该类管理 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 的当前实例。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.#ctor(System.Workflow.Runtime.WorkflowRuntime,System.Guid)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.StateMachineWorkflowInstance" /> 类的新实例。</summary>
      <param name="runtime">当前的工作流运行时。</param>
      <param name="instanceId">指示 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 的实例的 <see cref="T:System.Guid" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="runtime" /> 为 null 引用（在 Visual Basic 中为 Nothing）。 或 <paramref name="instanceId" /> 是一个空的 <see cref="T:System.Guid" />。</exception>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentState">
      <summary>获取当前正在执行的 <see cref="T:System.Workflow.Activities.StateActivity" />。</summary>
      <returns>当前 <see cref="T:System.Workflow.Activities.StateActivity" />。</returns>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentStateName">
      <summary>获取当前 <see cref="T:System.Workflow.Activities.StateActivity" /> 的名称。</summary>
      <returns>当前的 <see cref="T:System.Workflow.Activities.StateActivity" /> 的名称。</returns>
    </member>
    <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object)">
      <summary>将消息发送到 <see cref="T:System.Workflow.Activities.StateMachineWorkflowInstance" />。</summary>
      <param name="queueName">工作流队列的名称。</param>
      <param name="item">要进行排队的对象。</param>
    </member>
    <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
      <summary>将消息发送到 <see cref="T:System.Workflow.Activities.StateMachineWorkflowInstance" />。</summary>
      <param name="queueName">工作流队列的名称。</param>
      <param name="item">要进行排队的对象。</param>
      <param name="pendingWork">允许在传递项时通知发送方的 <see cref="T:System.Workflow.Runtime.IPendingWork" />。</param>
      <param name="workItem">要传递给 <see cref="T:System.Workflow.Runtime.IPendingWork" /> 方法的对象。</param>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.InstanceId">
      <summary>获取指示 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 的当前实例的 <see cref="T:System.Guid" />。</summary>
      <returns>指示 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 的当前实例的 <see cref="T:System.Guid" />。</returns>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.PossibleStateTransitions">
      <summary>获取当前 <see cref="T:System.Workflow.Activities.StateActivity" /> 可进行的状态转换的集合。</summary>
      <returns>当前 <see cref="T:System.Workflow.Activities.StateActivity" /> 可进行的状态转换的集合。</returns>
    </member>
    <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.String)">
      <summary>使用 <see cref="T:System.Workflow.Activities.StateActivity" /> 的名称提供到指定的 <see cref="T:System.Workflow.Activities.StateActivity" /> 的转换。</summary>
      <param name="targetStateName">要过渡到的 <see cref="T:System.Workflow.Activities.StateActivity" /> 的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetStateName" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">由 <paramref name="targetStateName" /> 指定的 <see cref="T:System.Workflow.Activities.StateActivity" /> 为空引用 (Nothing)。</exception>
    </member>
    <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.Workflow.Activities.StateActivity)">
      <summary>提供到指定的 <see cref="T:System.Workflow.Activities.StateActivity" /> 的转换。</summary>
      <param name="targetState">要转换到的 <see cref="T:System.Workflow.Activities.StateActivity" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetState" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory">
      <summary>获取状态机工作流实例已转换过的状态活动的集合。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.StateActivity" /> 已进行过转换的集合。</returns>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateMachineWorkflow">
      <summary>获取 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 的最新定义。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 的最新定义。</returns>
      <exception cref="T:System.InvalidOperationException">如果工作流已完成，则无法检索当前的 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" />，因此检索到上一个定义。</exception>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.States">
      <summary>获取 <see cref="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateMachineWorkflow" /> 中 <see cref="T:System.Workflow.Activities.StateActivity" /> 类的列表。</summary>
      <returns>
        <see cref="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateMachineWorkflow" /> 中 <see cref="T:System.Workflow.Activities.StateActivity" /> 类的列表。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateMachineWorkflow" /> 为 null 引用（Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.WorkflowInstance">
      <summary>获取当前 <see cref="T:System.Workflow.Runtime.WorkflowInstance" />。</summary>
      <returns>当前 <see cref="T:System.Workflow.Runtime.WorkflowInstance" />。</returns>
    </member>
    <member name="T:System.Workflow.Activities.WebServiceFaultActivity">
      <summary>允许从工作流向 Web 服务客户端发送错误。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.WebServiceFaultActivity" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.WebServiceFaultActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceFaultActivity.Fault">
      <summary>获取或设置导致 Web 服务停止的异常。</summary>
      <returns>导致 Web 服务停止的异常。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceFaultActivity.FaultProperty">
      <summary>包含 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 活动的执行中出现错误时引发的异常值。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceFaultActivity.InputActivityName">
      <summary>获取或设置上一个 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 的名称。</summary>
      <returns>上一个 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceFaultActivity.InputActivityNameProperty">
      <summary>表示与此错误相关联的 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 的名称。 该错误在与 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 相关联的方法上引发。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.WebServiceFaultActivity.SendingFault">
      <summary>在将错误发送到客户端之前发生，这对于向错误中追加消息很有用。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceFaultActivity.SendingFaultEvent">
      <summary>定义在将错误传递给方法调用方之前执行的事件委托。 此处理程序提供用于设置错误属性值的位置。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.WebServiceInputActivity">
      <summary>允许在工作流中从 Web 服务接收数据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceInputActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceInputActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceInputActivity.ActivitySubscribedProperty">
      <summary>表示针对 <see cref="F:System.Workflow.Activities.WebServiceInputActivity.ActivitySubscribedProperty" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.WebServiceInputActivity.InputReceived">
      <summary>在 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 接收到输入时发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceInputActivity.InputReceivedEvent">
      <summary>定义一个在活动接收到来自 Web 服务预期调用之后执行的事件委托。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceInputActivity.InterfaceType">
      <summary>获取或设置定义此活动将侦听的方法的接口类型。</summary>
      <returns>接口类型。</returns>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceInputActivity.InterfaceTypeProperty">
      <summary>对应于将用作 Web 服务协定的接口的名称。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceInputActivity.IsActivating">
      <summary>获取或设置一个值，该值指示正在接收的数据是否应启动工作流。</summary>
      <returns>如果正在接收的数据应启动工作流，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceInputActivity.IsActivatingProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.WebServiceInputActivity.IsActivating" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceInputActivity.MethodName">
      <summary>获取或设置由此 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 代表的 <see cref="P:System.Workflow.Activities.WebServiceInputActivity.InterfaceType" /> 属性指定的接口上的方法的名称。</summary>
      <returns>由此 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 代表的 <see cref="P:System.Workflow.Activities.WebServiceInputActivity.InterfaceType" /> 属性指定的接口上的方法的名称。</returns>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceInputActivity.MethodNameProperty">
      <summary>对应于用作 Web 服务协定的接口中包含的方法之一的名称。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceInputActivity.ParameterBindings">
      <summary>获取与 <see cref="P:System.Workflow.Activities.WebServiceInputActivity.MethodName" /> 属性中指定方法的输入参数关联的绑定的集合。</summary>
      <returns>属性的集合用作由 <see cref="P:System.Workflow.Activities.WebServiceInputActivity.MethodName" /> 属性指定的方法的入站参数。</returns>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceInputActivity.ParameterBindingsProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.WebServiceInputActivity.ParameterBindings" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceInputActivity.Roles">
      <summary>获取或设置可以有效地将数据发送到 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 的角色的集合。</summary>
      <returns>包含可以有效地将数据发送到 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 的 Web 服务角色的 <see cref="T:System.Workflow.Activities.WorkflowRoleCollection" />。</returns>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceInputActivity.RolesProperty">
      <summary>标识允许将消息从 Web 服务客户端发送到 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 的有效的用户角色。 两种支持的角色是 Active Directory 和 ASP.NET。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#QueueName">
      <summary>获取该活动正在等待其数据到达的 <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 的名称。</summary>
      <returns>该活动正在等待其数据到达的 <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> 的名称。</returns>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>Creates the subscription of the <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> activity to an event.</summary>
      <param name="parentContext">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> activity.</param>
      <param name="parentEventHandler">父事件的 <see cref="T:System.EventHandler" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
      <summary>取消 <see cref="T:System.Workflow.ComponentModel.Activity" /> 对事件的订阅。</summary>
      <param name="parentContext">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> activity.</param>
      <param name="parentEventHandler">父事件的 <see cref="T:System.EventHandler" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的访问类型。</summary>
      <returns>一个表示属性访问级别的 <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> 枚举值。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的 <see cref="T:System.Type" />。</summary>
      <returns>其名称作为 <paramref name="propertyName " />参数进行传递的属性的 <see cref="T:System.Type" />。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="T:System.Workflow.Activities.WebServiceOutputActivity">
      <summary>允许从工作流中向 Web 服务发送数据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.WebServiceOutputActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.WebServiceOutputActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceOutputActivity.InputActivityName">
      <summary>获取或设置前面的 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 类的名称。</summary>
      <returns>前面的 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 类的名称。</returns>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceOutputActivity.InputActivityNameProperty">
      <summary>定义与此 <see cref="T:System.Workflow.Activities.WebServiceOutputActivity" /> 匹配的 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 的名称。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindings">
      <summary>获取与 out/ref 关联的绑定的集合和相应的 <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> 方法的返回值。</summary>
      <returns>此集合用于将出站参数绑定到工作流中的位置。 当 <see cref="T:System.Workflow.Activities.WebServiceOutputActivity" /> 执行时，它从绑定位置提取值并将这些值传送回被阻止的 Web 服务方法。</returns>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindingsProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindings" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyObject" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="E:System.Workflow.Activities.WebServiceOutputActivity.SendingOutput">
      <summary>在 <see cref="T:System.Workflow.Activities.WebServiceOutputActivity" /> 将输出发送到客户端之前发生。</summary>
    </member>
    <member name="F:System.Workflow.Activities.WebServiceOutputActivity.SendingOutputEvent">
      <summary>定义在活动发送 Web 服务调用输出之前执行的事件委托。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的访问类型。</summary>
      <returns>一个表示属性访问级别的 <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> 枚举值。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <summary>返回指定属性的 <see cref="T:System.Type" />。</summary>
      <returns>其名称作为 <paramref name="propertyName " />参数进行传递的属性的 <see cref="T:System.Type" />。</returns>
      <param name="serviceProvider">一个对象，它实现 <see cref="T:System.IServiceProvider" />，以便在需要设计时服务时提供对这些服务的访问。</param>
      <param name="propertyName">属性的名称。</param>
    </member>
    <member name="T:System.Workflow.Activities.WebWorkflowRole">
      <summary>表示 <see cref="T:System.Web.Security.RoleProvider" /> 支持的工作流角色。</summary>
    </member>
    <member name="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String)">
      <summary>使用指定的角色名称初始化 <see cref="T:System.Workflow.Activities.WebWorkflowRole" /> 类的新实例。</summary>
      <param name="roleName">一个定义角色名称的字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String,System.String)">
      <summary>使用指定的角色名称和角色提供程序初始化 <see cref="T:System.Workflow.Activities.WebWorkflowRole" /> 类的新实例。</summary>
      <param name="roleName">一个定义角色名称的字符串。</param>
      <param name="provider">一个定义角色提供程序的字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="roleName" /> 包含 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.Activities.WebWorkflowRole.GetIdentities">
      <summary>返回与 <see cref="T:System.Workflow.Activities.WebWorkflowRole" /> 相关联的 ASP.NET 帐户的泛型列表。</summary>
      <returns>表示与 <see cref="T:System.Workflow.Activities.WebWorkflowRole" /> 相关联的 ASP.NET 帐户的字符串值泛型列表。</returns>
    </member>
    <member name="M:System.Workflow.Activities.WebWorkflowRole.IncludesIdentity(System.String)">
      <summary>返回一个值，该值指示 <see cref="T:System.Workflow.Activities.WebWorkflowRole" /> 是否包含指定标识</summary>
      <returns>如果 <see cref="T:System.Workflow.Activities.WebWorkflowRole" /> 包含指定标识则为 true；否则为 false。</returns>
      <param name="identity">要测试的标识的名称。</param>
    </member>
    <member name="P:System.Workflow.Activities.WebWorkflowRole.Name">
      <summary>获取或设置 <see cref="T:System.Workflow.Activities.WebWorkflowRole" /> 的名称。</summary>
      <returns>包含 <see cref="T:System.Workflow.Activities.WebWorkflowRole" /> 的名称的字符串。</returns>
      <exception cref="T:System.ArgumentNullException">将 <see cref="P:System.Workflow.Activities.WebWorkflowRole.Name" /> 设置为空引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.Activities.WebWorkflowRole.RoleProvider">
      <summary>获取或设置 <see cref="T:System.Workflow.Activities.WebWorkflowRole" /> 的角色提供程序。</summary>
      <returns>包含 <see cref="T:System.Workflow.Activities.WebWorkflowRole" /> 的角色提供程序的字符串。</returns>
    </member>
    <member name="T:System.Workflow.Activities.WhileActivity">
      <summary>只要特定的条件为 true，就以迭代方式运行子活动。</summary>
    </member>
    <member name="M:System.Workflow.Activities.WhileActivity.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.WhileActivity" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.WhileActivity.#ctor(System.String)">
      <summary>使用活动名初始化 <see cref="T:System.Workflow.Activities.WhileActivity" /> 类的新实例。</summary>
      <param name="name">活动的用户定义名称。</param>
    </member>
    <member name="P:System.Workflow.Activities.WhileActivity.Condition">
      <summary>获取或设置确定 <see cref="T:System.Workflow.Activities.WhileActivity" /> 是应运行还是应完成的条件。</summary>
      <returns>当 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 属性计算结果为 true 时，<see cref="T:System.Workflow.Activities.WhileActivity" /> 会继续运行。 当 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 计算结果为 false 时，<see cref="T:System.Workflow.Activities.WhileActivity" /> 完成。</returns>
    </member>
    <member name="F:System.Workflow.Activities.WhileActivity.ConditionProperty">
      <summary>表示针对 <see cref="P:System.Workflow.Activities.WhileActivity.Condition" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.WhileActivity.DynamicActivity">
      <summary>获取 <see cref="T:System.Workflow.Activities.WhileActivity" /> 中的动态子活动。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.WhileActivity" /> 中的动态子活动。</returns>
    </member>
    <member name="M:System.Workflow.Activities.WhileActivity.System#Workflow#ComponentModel#IActivityEventListener{T}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <summary>定义发生订阅事件时的处理过程。</summary>
      <param name="sender">引发事件的对象。</param>
      <param name="e">先前键入的事件参数。</param>
    </member>
    <member name="T:System.Workflow.Activities.WorkflowAuthorizationException">
      <summary>由于 <see cref="T:System.Workflow.Activities.WorkflowRoleCollection" /> 中不包含指定的标识而导致角色验证失败时引发的异常。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.WorkflowAuthorizationException" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化数据初始化 <see cref="T:System.Workflow.Activities.WorkflowAuthorizationException" /> 类的新实例。</summary>
      <param name="info">保存有关引发的异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含有关源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String)">
      <summary>使用指定的消息初始化 <see cref="T:System.Workflow.Activities.WorkflowAuthorizationException" /> 类的新实例。</summary>
      <param name="message">解释异常原因的错误信息。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.Exception)">
      <summary>使用指定的消息和 <see cref="T:System.Exception" /> 初始化 <see cref="T:System.Workflow.Activities.WorkflowAuthorizationException" /> 类的新实例。</summary>
      <param name="message">解释异常原因的错误信息。</param>
      <param name="innerException">导致 <see cref="T:System.Workflow.Activities.WorkflowAuthorizationException" /> 的 <see cref="T:System.Exception" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.String,System.String)">
      <summary>使用活动和主体的名称初始化 <see cref="T:System.Workflow.Activities.WorkflowAuthorizationException" /> 类的新实例。</summary>
      <param name="activityName">发生异常的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的名称。</param>
      <param name="principalName">代表用户或实体引发工作流授权异常的用户或实体的名称。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.WorkflowRole">
      <summary>从中派生工作流角色的抽象基类。</summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowRole.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.Activities.WorkflowRole" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowRole.GetIdentities">
      <summary>在派生类中实现时，获取此 <see cref="T:System.Workflow.Activities.WorkflowRole" /> 包含的标识。</summary>
      <returns>此 <see cref="T:System.Workflow.Activities.WorkflowRole" /> 包含的标识名称的列表。</returns>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)">
      <summary>在派生类中实现时，返回一个指示此角色是否包含指定标识的值。</summary>
      <returns>如果此 <see cref="T:System.Workflow.Activities.WorkflowRole" /> 中包括 <paramref name="identity" />，则为 true；否则为 false。</returns>
      <param name="identity">要测试的标识的名称。</param>
    </member>
    <member name="P:System.Workflow.Activities.WorkflowRole.Name">
      <summary>在派生类中实现时，获取或设置此 <see cref="T:System.Workflow.Activities.WorkflowRole" /> 的名称。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.WorkflowRole" /> 的名称。</returns>
    </member>
    <member name="T:System.Workflow.Activities.WorkflowRoleCollection">
      <summary>表示 <see cref="T:System.Workflow.Activities.WorkflowRole" /> 对象的集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowRoleCollection.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.WorkflowRoleCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowRoleCollection.IncludesIdentity(System.String)">
      <summary>返回一个值，该值指示 <see cref="T:System.Workflow.Activities.WorkflowRoleCollection" /> 是否包含指定标识。</summary>
      <returns>如果 <see cref="T:System.Workflow.Activities.WorkflowRoleCollection" /> 包含此标识，则为 true；否则为 false。</returns>
      <param name="identity">一个包含要搜索的标识的字符串。</param>
    </member>
    <member name="T:System.Workflow.Activities.WorkflowSubscriptionService">
      <summary>为订阅服务提供用于管理工作流运行时订阅的方法。</summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowSubscriptionService.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.Activities.WorkflowSubscriptionService" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowSubscriptionService.CreateSubscription(System.Workflow.Activities.MessageEventSubscription)">
      <summary>在派生类中重写时，通知 <see cref="T:System.Workflow.Activities.WorkflowSubscriptionService" /> 工作流运行时已经创建了指定的 <see cref="T:System.Workflow.Activities.MessageEventSubscription" />。</summary>
      <param name="subscription">工作流运行时创建的 <see cref="T:System.Workflow.Activities.MessageEventSubscription" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowSubscriptionService.DeleteSubscription(System.Guid)">
      <summary>在派生类中重写时，通知 <see cref="T:System.Workflow.Activities.WorkflowSubscriptionService" /> 工作流运行时已经删除了与指定 GUID 相关联的订阅。</summary>
      <param name="subscriptionId">工作流运行时删除的订阅的 GUID。</param>
    </member>
    <member name="T:System.Workflow.Activities.WorkflowWebService">
      <summary>表示所有工作流 Web 服务的基类。</summary>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowWebService.#ctor(System.Type)">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.Activities.WorkflowWebService" /> 类的新实例。</summary>
      <param name="workflowType">工作流的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.WorkflowWebService.Invoke(System.Type,System.String,System.Boolean,System.Object[])">
      <summary>调用关联的工作流并检索响应。</summary>
      <returns>由 Web 服务返回的对象。</returns>
      <param name="interfaceType">接口的类型。</param>
      <param name="methodName">方法的名称。</param>
      <param name="isActivation">指示 Web 服务是否激活工作流。</param>
      <param name="parameters">由 <paramref name="methodName" /> 指定的方法的参数。</param>
    </member>
    <member name="P:System.Workflow.Activities.WorkflowWebService.WorkflowRuntime">
      <summary>提供对当前执行工作流的 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> 的访问。</summary>
      <returns>当前 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />。</returns>
    </member>
    <member name="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration">
      <summary>表示配置文件中介绍角色类的节。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.DirectReports">
      <summary>获取或设置直接下属的名称。</summary>
      <returns>直接下属的名称。</returns>
    </member>
    <member name="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.DistinguishedName">
      <summary>获取或设置此实例的识别名。</summary>
      <returns>此实例的识别名。</returns>
    </member>
    <member name="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Group">
      <summary>获取或设置此实例的组名。</summary>
      <returns>此实例的组名。</returns>
    </member>
    <member name="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Manager">
      <summary>获取或设置与此实例关联的管理器的名称。</summary>
      <returns>与此实例关联的管理器的名称。</returns>
    </member>
    <member name="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.Member">
      <summary>获取或设置此实例的成员。</summary>
      <returns>此实例的成员。</returns>
    </member>
    <member name="P:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration.RootPath">
      <summary>获取或设置此实例的根路径。</summary>
      <returns>此实例的根路径。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.AddedConditionAction">
      <summary>表示动态更新过程中向工作流中添加 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.AddedConditionAction.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.AddedConditionAction" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.AddedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition)">
      <summary>使用添加的条件的定义初始化 <see cref="T:System.Workflow.Activities.Rules.AddedConditionAction" /> 类的新实例。</summary>
      <param name="addedConditionDefinition">添加到工作流的条件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addedConditionDefinition" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.AddedConditionAction.ConditionDefinition">
      <summary>获取或设置要添加到工作流的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。</summary>
      <returns>要添加到工作流的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Workflow.Activities.Rules.AddedConditionAction.ConditionDefinition" /> 为 null 引用（Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.AddedConditionAction.ConditionName">
      <summary>获取包含添加到工作流的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 的名称的字符串。</summary>
      <returns>添加到工作流的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.AddedRuleSetAction">
      <summary>表示在动态更新过程中添加 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.AddedRuleSetAction.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.AddedRuleSetAction" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.AddedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet)">
      <summary>使用新的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 初始化 <see cref="T:System.Workflow.Activities.Rules.AddedRuleSetAction" /> 类的新实例。</summary>
      <param name="addedRuleSetDefinition">新的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.AddedRuleSetAction.RuleSetDefinition">
      <summary>获取或设置新的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</summary>
      <returns>新的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 为 null 引用（Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.AddedRuleSetAction.RuleSetName">
      <summary>获取新 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。</summary>
      <returns>新 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.IRuleExpression">
      <summary>表示必须从中派生自定义表达式编写器以编写自定义表达式的基类。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.IRuleExpression.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
      <summary>当在派生类中重写时，报告对象如何在上下文类型中使用字段和属性。</summary>
      <param name="analysis">要存储由条件或操作读取的字段和属性的 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> 方法。</param>
      <param name="isRead">如果要从表达式中读取数据，则为 true；如果不从表达式中读取数据，则为 false。</param>
      <param name="isWritten">如果写入表达式，则为 true；如果不写入表达式，则为 false。</param>
      <param name="qualifier">字段或属性的路径。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.IRuleExpression.Clone">
      <summary>在派生类中重写时，创建当前 <see cref="T:System.CodeDom.CodeExpression" /> 的深层副本。</summary>
      <returns>当前 <see cref="T:System.CodeDom.CodeExpression" /> 的深层副本。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.IRuleExpression.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression)">
      <summary>在派生类中重写时，将自定义表达式反编译为字符串格式。</summary>
      <param name="stringBuilder">反编译的表达式的可变字符串。 此方法应该追加此子表达式的反编译的语法。</param>
      <param name="parentExpression">父代码表达式。 可用于确定运算符优先级和此子表达式是否需要加括号。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.IRuleExpression.Evaluate(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>在派生类中重写时，计算自定义表达式。</summary>
      <returns>指示规则执行结果的 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionResult" />。</returns>
      <param name="execution">要执行表达式的 <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.IRuleExpression.Match(System.CodeDom.CodeExpression)">
      <summary>将当前表达式与另一个表达式相比较，以确定它们是否相等。</summary>
      <returns>如果显示表达式相等，则为 true；否则为 false。</returns>
      <param name="expression">要与当前表达式进行比较的表达式。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.IRuleExpression.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)">
      <summary>在派生类中重写时，验证表达式是否配置正确且没有错误。</summary>
      <returns>表达式的 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" />。</returns>
      <param name="validation">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> to manage the validation process.</param>
      <param name="isWritten">如果写入表达式，则为 true；如果不写入表达式，则为 false。</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RemovedConditionAction">
      <summary>表示动态更新过程中从工作流中移除 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RemovedConditionAction.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RemovedConditionAction" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RemovedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition)">
      <summary>使用移除的条件的定义初始化 <see cref="T:System.Workflow.Activities.Rules.RemovedConditionAction" /> 类的新实例。</summary>
      <param name="removedConditionDefinition">从工作流中移除的条件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addedConditionDefinition" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RemovedConditionAction.ConditionDefinition">
      <summary>获取或设置要从工作流中移除的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。</summary>
      <returns>要从工作流中移除的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Workflow.Activities.Rules.RemovedConditionAction.ConditionDefinition" /> 为 null 引用（Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RemovedConditionAction.ConditionName">
      <summary>获取一个字符串，该字符串包含要从工作流中移除的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 的名称。</summary>
      <returns>要从工作流中移除的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RemovedRuleSetAction">
      <summary>表示在动态更新过程中 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的移除。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RemovedRuleSetAction.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RemovedRuleSetAction" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RemovedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet)">
      <summary>使用从工作流中移除的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 初始化 <see cref="T:System.Workflow.Activities.Rules.RemovedRuleSetAction" /> 类的新实例。</summary>
      <param name="removedRuleSetDefinition">从工作流中移除的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="removedRuleSetDefinition" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RemovedRuleSetAction.RuleSetDefinition">
      <summary>获取或设置从工作流中移除的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</summary>
      <returns>从工作流中移除的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</returns>
      <exception cref="T:System.ArgumentNullException">要从工作流中移除的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RemovedRuleSetAction.RuleSetName">
      <summary>获取从工作流中移除的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。</summary>
      <returns>从工作流中移除的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.Rule">
      <summary>定义具有要执行的一组相关操作的条件。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Rule.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String)">
      <summary>使用 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的名称初始化 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 类的新实例。</summary>
      <param name="name">
        <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})">
      <summary>使用 Rule 的名称、规则条件和 THEN 操作的列表初始化 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 类的新实例。</summary>
      <param name="name">
        <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的名称。</param>
      <param name="condition">
        <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。</param>
      <param name="thenActions">计算条件是否为 true 的 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 对象的集合。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Rule.#ctor(System.String,System.Workflow.Activities.Rules.RuleCondition,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})">
      <summary>使用 Rule 的名称、规则条件、THEN 操作的列表和 ELSE 操作的列表初始化 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 类的新实例。</summary>
      <param name="name">
        <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的名称。</param>
      <param name="condition">
        <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。</param>
      <param name="thenActions">条件为 true 时要计算的 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 对象的集合。</param>
      <param name="elseActions">计算条件是否为 false 的 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 对象的集合。</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.Active">
      <summary>获取或设置一个值，该值指示是否应计算 <see cref="T:System.Workflow.Activities.Rules.Rule" />。</summary>
      <returns>如果应计算规则，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Rule.Clone">
      <summary>创建当前 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的深层副本。</summary>
      <returns>与此实例完全相同的 <see cref="T:System.Workflow.Activities.Rules.Rule" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.Condition">
      <summary>为要计算的 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 获取或设置 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。</summary>
      <returns>要计算的 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.Description">
      <summary>Gets or sets a description of the <see cref="T:System.Workflow.Activities.Rules.Rule" />.</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的说明。</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.ElseActions">
      <summary>获取要在 ELSE case 中执行的 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 类的集合。</summary>
      <returns>要在 ELSE case 中执行的 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 的集合。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Rule.Equals(System.Object)">
      <summary>确定 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的此实例和作为参数传递的对象是否具有相同的值。</summary>
      <returns>如果当前对象和 <paramref name="obj" /> 相同，则为 true；否则为 false。</returns>
      <param name="obj">要与当前对象进行比较的对象。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Rule.GetHashCode">
      <summary>返回此实例的哈希代码。</summary>
      <returns>此实例的哈希代码。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.Name">
      <summary>获取或设置 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的名称。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的名称。</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.Priority">
      <summary>获取或设置一个指示应该运行 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的顺序的值。</summary>
      <returns>指示应该运行 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的顺序的值。</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.ReevaluationBehavior">
      <summary>获取或设置一个值，该值指示是否可以重新计算 <see cref="T:System.Workflow.Activities.Rules.Rule" />。</summary>
      <returns>指示是否可以重新计算 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的 <see cref="T:System.Workflow.Activities.Rules.RuleReevaluationBehavior" />。</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Rule.ThenActions">
      <summary>获取要在 THEN case 中执行的 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 类的集合。</summary>
      <returns>要在 THEN case 中执行的 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 类的集合。</returns>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleAction">
      <summary>表示一个抽象类，该抽象类定义关联的 <see cref="P:System.Workflow.Activities.Rules.Rule.Condition" /> 的计算结果为 true（对于 <see cref="P:System.Workflow.Activities.Rules.Rule.ThenActions" />）或 false（对于 <see cref="P:System.Workflow.Activities.Rules.Rule.ElseActions" />）时要执行的操作。 必须继承此类。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAction.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAction.Clone">
      <summary>创建当前 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 的深层副本。</summary>
      <returns>与此实例完全相同的 <see cref="T:System.Workflow.Activities.Rules.RuleAction" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>使用指定的 <see cref="T:System.Workflow.Activities.Rules.RuleExecution" /> 实例执行 <see cref="T:System.Workflow.Activities.Rules.RuleAction" />。</summary>
      <param name="context">执行 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 的运行时状态。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>返回由 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 更新的字段和属性。</summary>
      <returns>一个字符串集合，表示由 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 更改的字段和属性的名称。</returns>
      <param name="validation">在对 <see cref="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" /> 的调用中先前使用的 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>验证 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 是否已正确配置且没有错误。</summary>
      <returns>如果显示 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 已正确验证且没有错误；则为 true；否则为 false。</returns>
      <param name="validator">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> to manage the validation process.</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleActionTrackingEvent">
      <summary>包含已计算的规则的名称、实例 ID 和条件结果。</summary>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleActionTrackingEvent.ConditionResult">
      <summary>获取条件计算的结果。</summary>
      <returns>规则条件的结果：true 或 false。</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleActionTrackingEvent.RuleName">
      <summary>获取导致引发 <see cref="T:System.Workflow.Activities.Rules.RuleActionTrackingEvent" /> 的 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的名称。</summary>
      <returns>引发要执行的一个或多个操作的 <see cref="T:System.Workflow.Activities.Rules.Rule" />。</returns>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleAnalysis">
      <summary>存储由条件读取的或由操作写入的字段和属性。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAnalysis.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> 类的新实例。</summary>
      <param name="validation">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> to manage the validation process.</param>
      <param name="forWrites">一个指示是否对写入（对于 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 对象）或读取（对于 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 对象）执行分析的 Boolean 值。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAnalysis.AddSymbol(System.String)">
      <summary>将由表达式使用的字段和属性作为符号添加到 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> 实例。</summary>
      <param name="symbol">一个表示到字段或属性的路径的字符串。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleAnalysis.ForWrites">
      <summary>获取一个指示是否对写入或读取执行分析的值。</summary>
      <returns>如果对写入（对于 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 对象）执行分析，则为 true；否则，如果对读取（对于 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 对象）执行分析，则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAnalysis.GetSymbols">
      <summary>返回 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> 实例中的符号列表。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> 实例的符号列表。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleAttribute">
      <summary>表示自定义 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 属性的基类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleAttribute.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.Activities.Rules.RuleAttribute" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleAttributeTarget">
      <summary>指定 <see cref="T:System.Workflow.Activities.Rules.RuleReadAttribute" /> 或 <see cref="T:System.Workflow.Activities.Rules.RuleWriteAttribute" /> 中的路径是否适用于方法参数或 this。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleAttributeTarget.Parameter">
      <summary>指定路径是以参数名称开始的绝对路径，后面可以跟随到内部成员的路径。</summary>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleAttributeTarget.This">
      <summary>指定路径是以标记 this 开始的相对路径或绝对路径。</summary>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleChainingBehavior">
      <summary>指定 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的正向链接行为。</summary>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleChainingBehavior.Full">
      <summary>指示由操作修改字段或属性、为由操作调用的方法指定 <see cref="T:System.Workflow.Activities.Rules.RuleWriteAttribute" /> 或执行 <see cref="T:System.Workflow.Activities.Rules.RuleUpdateAction" /> 时执行该链接。</summary>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleChainingBehavior.None">
      <summary>指示不执行链接。 每个规则只执行一次。</summary>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleChainingBehavior.UpdateOnly">
      <summary>指示如果已执行的操作使用 <see cref="T:System.Workflow.Activities.Rules.RuleUpdateAction" /> 明确指定链接，则执行该链接。</summary>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleCondition">
      <summary>
        <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" /> 和用户创建的任何自定义条件的基类型。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleCondition.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleCondition.Clone">
      <summary>在派生类中重写时，创建当前 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 的深层副本。</summary>
      <returns>与此实例完全相同的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /></returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>当在派生类中重写时，计算 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。</summary>
      <returns>如果显示 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 的计算结果为 true，则为 true；否则为 false。</returns>
      <param name="execution">在其中运行规则的运行时上下文。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>在派生类中重写时，获取 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 的依赖项。</summary>
      <returns>表示由条件读取的实体的符号列表。</returns>
      <param name="validation">在对 <see cref="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)" /> 的调用中先前使用的 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleCondition.Name">
      <summary>获取或设置 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 的名称。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 的名称。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleCondition.OnRuntimeInitialized">
      <summary>已为所有属性指定值时调用。 执行此调用后，不能修改任何属性。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>在派生类中重写时，验证 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 是否配置正确且没有错误。</summary>
      <returns>如果显示 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 没有错误，则为 true；否则为 false。</returns>
      <param name="validation">用于管理规则和规则条件的验证的 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleConditionChangeAction">
      <summary>表示必须从其派生对 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 所进行更改的所有动态更新通知的抽象基类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionChangeAction.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleConditionChangeAction.ConditionName">
      <summary>当在派生类中重写时，获取要更改的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 的名称。</summary>
      <returns>要更改的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
      <summary>在派生类中重写时，验证 <see cref="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" /> 是否配置正确且没有错误。</summary>
      <returns>验证错误的集合。</returns>
      <param name="activity">在其中发生 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 更改的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleConditionCollection">
      <summary>包含在工作流上定义的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 类的集合。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionCollection.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleConditionCollection" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionCollection.Add(System.Workflow.Activities.Rules.RuleCondition)">
      <summary>向 <see cref="T:System.Workflow.Activities.Rules.RuleConditionCollection" /> 添加 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。</summary>
      <param name="item">要添加到 <see cref="T:System.Workflow.Activities.Rules.RuleConditionCollection" /> 的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。</param>
      <exception cref="T:System.Data.ReadOnlyException">
        <see cref="T:System.Workflow.Activities.Rules.Rule" /> 在运行时初始化。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> 为 null。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionCollection.Diff(System.Object,System.Object)">
      <summary>确定两个 <see cref="T:System.Workflow.Activities.Rules.RuleConditionCollection" /> 类之间的差异。</summary>
      <returns>引起 <paramref name="originalDefinition" /> 和 <paramref name="changedDefinition" /> 之间差异的 <see cref="T:System.Workflow.ComponentModel.WorkflowChangeAction" /> 类的列表。</returns>
      <param name="originalDefinition">原始的 <see cref="T:System.Workflow.Activities.Rules.RuleConditionCollection" />。</param>
      <param name="changedDefinition">具有建议更改的 <see cref="T:System.Workflow.Activities.Rules.RuleConditionCollection" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleConditionReference">
      <summary>表示条件集合中的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />，并且使您能够以编程方式计算条件。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionReference.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleConditionReference" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleConditionReference.ConditionName">
      <summary>获取或设置要计算的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 的名称。</summary>
      <returns>要计算的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionReference.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
      <summary>计算基础 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。</summary>
      <returns>如果条件的计算结果为 true，则为 true；否则为 false。</returns>
      <param name="activity">与此条件关联的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
      <param name="provider">用于此条件计算的 <see cref="T:System.IServiceProvider" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleConditionReference.InitializeProperties">
      <summary>基于 <see cref="T:System.Workflow.Activities.Rules.RuleConditionReference" /> 指向的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 设置成员属性。</summary>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleDefinitions">
      <summary>表示 .rules 文件的根并包含与工作流相关联的所有 <see cref="P:System.Workflow.Activities.Rules.RuleDefinitions.RuleSets" /> 和 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" />。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleDefinitions.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleDefinitions" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleDefinitions.Conditions">
      <summary>获取工作流中规则条件的集合。</summary>
      <returns>包含工作流中所有 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 的 <see cref="T:System.Workflow.Activities.Rules.RuleConditionCollection" />。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleDefinitions.Diff(System.Object,System.Object)">
      <summary>确定原始定义和已更改定义中 <see cref="P:System.Workflow.Activities.Rules.RuleDefinitions.Conditions" /> 和 <see cref="P:System.Workflow.Activities.Rules.RuleDefinitions.RuleSets" /> 之间的差异。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.WorkflowChangeAction" /> 类的列表，用于区分 <paramref name="originalDefinition" /> 和 <paramref name="changedDefinition" />。</returns>
      <param name="originalDefinition">原始规则定义。</param>
      <param name="changedDefinition">新规则定义。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleDefinitions.RuleDefinitionsProperty">
      <summary>表示针对 <see cref="T:System.Workflow.Activities.Rules.RuleDefinitions" /> 属性的 <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleDefinitions.RuleSets">
      <summary>获取工作流中 <see cref="P:System.Workflow.Activities.Rules.RuleDefinitions.RuleSets" /> 的集合。</summary>
      <returns>包含工作流中所有 <see cref="P:System.Workflow.Activities.Rules.RuleDefinitions.RuleSets" /> 的 <see cref="T:System.Workflow.Activities.Rules.RuleSetCollection" />。</returns>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleEngine">
      <summary>用于执行 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 计算。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEngine.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Type)">
      <summary>用要计算的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 和要创建 <see cref="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider)" /> 的新实例（用于规则表达式验证）的规则类型，初始化 <see cref="T:System.Workflow.Activities.Rules.RuleEngine" /> 类的新实例。</summary>
      <param name="ruleSet">指定要计算的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</param>
      <param name="objectType">指定用于创建 <see cref="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider)" /> 的新实例的 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEngine.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Workflow.Activities.Rules.RuleValidation)">
      <summary>用要使用 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> 进行计算的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 初始化 <see cref="T:System.Workflow.Activities.Rules.RuleEngine" /> 类的新实例。</summary>
      <param name="ruleSet">指定要计算的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</param>
      <param name="validation">指定用于验证规则表达式的 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEngine.Execute(System.Object)">
      <summary>使用 <see cref="M:System.Workflow.Activities.Rules.RuleExecution.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Object)" /> 执行当前对象。</summary>
      <param name="thisObject">要执行的当前对象。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEngine.Execute(System.Object,System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>对对象实例（在本例中可能为 <see cref="T:System.Workflow.ComponentModel.Activity" />）执行当前 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</summary>
      <param name="thisObject">要执行的当前对象。</param>
      <param name="executionContext">当前活动的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleEvaluationException">
      <summary>表示由规则计算问题引发的所有异常的基类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationException" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationException" /> 类的新实例。</summary>
      <param name="serializeInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，它存有有关所引发的异常的序列化对象数据。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含有关源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.String)">
      <summary>使用指定的错误消息初始化 <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationException" /> 类的新实例。</summary>
      <param name="message">描述错误的消息。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.String,System.Exception)">
      <summary>使用指定错误消息和对导致此 <see cref="T:System.Exception" /> 的内部 <see cref="T:System.Exception" /> 的引用初始化 <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationException" /> 类的新实例。</summary>
      <param name="message">描述错误的消息。</param>
      <param name="ex">导致当前 <see cref="T:System.Exception" /> 的 <see cref="T:System.Exception" />。 如果 <paramref name="innerException" /> 参数不是空引用（在 Visual Basic 中为 Nothing），则在处理内部 <see cref="T:System.Exception" /> 的 catch 块中引发当前 <see cref="T:System.Exception" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException">
      <summary>计算规则时试图对不兼容的操作数应用某一运算符时引发的异常。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> 类的新实例。</summary>
      <param name="serializeInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，它存有有关所引发的异常的序列化对象数据。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含有关源或目标的上下文信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializeInfo" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">类名为空引用（在 Visual Basic 中为 Nothing）或者 <see cref="P:System.Exception.HResult" /> 为零。</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String)">
      <summary>用指定的错误消息初始化 <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> 的新实例。</summary>
      <param name="message">包含要与此实例关联的错误消息的 string。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Exception)">
      <summary>使用指定的错误消息和对导致此 <see cref="T:System.Exception" /> 的内部 <see cref="T:System.Exception" /> 的引用初始化 <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> 类的新实例。</summary>
      <param name="message">描述当前异常的消息。</param>
      <param name="ex">导致当前异常的 <see cref="T:System.Exception" /> 实例。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Type,System.CodeDom.CodeBinaryOperatorType,System.Type)">
      <summary>用兼容性冲突的详细信息初始化 <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> 类的新实例。</summary>
      <param name="message">描述当前 <see cref="T:System.Exception" /> 的消息。</param>
      <param name="left">出现在运算符左边的 <see cref="T:System.Type" />。</param>
      <param name="op">表示兼容性发生冲突的运算符的 <see cref="T:System.CodeDom.CodeBinaryOperatorType" />。</param>
      <param name="right">出现在运算符右边的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.String,System.Type,System.CodeDom.CodeBinaryOperatorType,System.Type,System.Exception)">
      <summary>用兼容性冲突的详细信息初始化 <see cref="T:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException" /> 类的新实例。 其中包括 <see cref="P:System.Exception.InnerException" />。</summary>
      <param name="message">描述当前 <see cref="T:System.Exception" /> 的消息。</param>
      <param name="left">出现在运算符左边的 <see cref="T:System.Type" />。</param>
      <param name="op">表示兼容性发生冲突的运算符的 <see cref="T:System.CodeDom.CodeBinaryOperatorType" />。</param>
      <param name="right">出现在运算符右边的 <see cref="T:System.Type" />。</param>
      <param name="ex">导致当前异常的 <see cref="T:System.Exception" /> 实例。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用有关异常的信息设置 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，它存有有关所引发的异常的序列化对象数据。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含有关源或目标的上下文信息。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Left">
      <summary>获取或设置引发异常的表达式左边参数的 <see cref="T:System.Type" />。</summary>
      <returns>引发异常的表达式左边参数的 <see cref="T:System.Type" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Operator">
      <summary>获取或设置表示引发异常的运算符的 <see cref="T:System.CodeDom.CodeBinaryOperatorType" />。</summary>
      <returns>表示引发异常的运算符的 <see cref="T:System.CodeDom.CodeBinaryOperatorType" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.Right">
      <summary>获取或设置引发异常的表达式右边参数的 <see cref="T:System.Type" />。</summary>
      <returns>引发异常的表达式右边参数的 <see cref="T:System.Type" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleException">
      <summary>表示由于计算或验证规则而引发的所有异常的基类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleException.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleException" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:System.Workflow.Activities.Rules.RuleException" /> 类的新实例。</summary>
      <param name="serializeInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，它存有有关所引发的异常的序列化对象数据。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含有关源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.String)">
      <summary>使用指定的错误消息初始化 <see cref="T:System.Workflow.Activities.Rules.RuleException" /> 类的新实例。</summary>
      <param name="message">描述错误的消息。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.String,System.Exception)">
      <summary>使用指定的错误消息和对导致此 <see cref="T:System.Exception" /> 的内部 <see cref="T:System.Exception" /> 的引用创建 <see cref="T:System.Workflow.Activities.Rules.RuleException" /> 类的新实例。</summary>
      <param name="message">描述错误的消息。</param>
      <param name="ex">导致当前 <see cref="T:System.Exception" /> 的 <see cref="T:System.Exception" />。 如果 <paramref name="innerException" /> 参数不是空引用（在 Visual Basic 中为 Nothing），则在处理内部 <see cref="T:System.Exception" /> 的 catch 块中引发当前 <see cref="T:System.Exception" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleExecution">
      <summary>执行 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 或 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 类时存储状态信息。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExecution.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Object)">
      <summary>使用 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> 和要执行的对象初始化 <see cref="T:System.Workflow.Activities.Rules.RuleExecution" /> 类的新实例。</summary>
      <param name="validation">保证正确配置表达式的 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />。</param>
      <param name="thisObject">要执行的当前对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validation" /> 或 <paramref name="thisObject" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExecution.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Object,System.Workflow.ComponentModel.ActivityExecutionContext)">
      <summary>使用 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />、要执行的对象和当前活动的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> 初始化 <see cref="T:System.Workflow.Activities.Rules.RuleExecution" /> 类的新实例。</summary>
      <param name="validation">保证正确配置表达式的 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />。</param>
      <param name="thisObject">要执行的当前对象。</param>
      <param name="activityExecutionContext">当前活动的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExecution.Activity">
      <summary>获取在其中执行规则的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</summary>
      <returns>在其中执行规则的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExecution.ActivityExecutionContext">
      <summary>获取当前活动的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</summary>
      <returns>当前活动的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExecution.Halted">
      <summary>获取或设置一个值，该值指示是否已停止执行该规则。</summary>
      <returns>如果已停止执行规则，则为 true；否则为 false。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExecution.ThisObject">
      <summary>获取要执行的当前对象。</summary>
      <returns>要执行的对象。</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExecution.Validation">
      <summary>获取或设置要执行的表达式的验证实例。</summary>
      <returns>要执行的表达式的 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" />。</returns>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleExpressionCondition">
      <summary>定义 <see cref="T:System.Workflow.Activities.Rules.RuleConditionReference" /> 后面的条件定义。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.CodeDom.CodeExpression)">
      <summary>使用指定的代码表达式初始化 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" /> 类的新实例。</summary>
      <param name="expression">要用于初始化 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" /> 的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)">
      <summary>使用指定的名称初始化 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" /> 类的新实例。</summary>
      <param name="conditionName">要计算的条件的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="conditionName" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)">
      <summary>使用指定的名称和代码表达式初始化 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" /> 类的新实例。</summary>
      <param name="conditionName">要计算的条件的名称。</param>
      <param name="expression">要用于初始化 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" /> 的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Clone">
      <summary>创建当前 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" /> 的深层副本。</summary>
      <returns>A <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" /> that is identical to this instance.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)">
      <summary>确定两个对象实例是否相等。</summary>
      <returns>如果对象实例相等，则为 true；否则为 false。</returns>
      <param name="obj">将与当前对象进行比较的 <see cref="T:System.Object" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>计算表达式。</summary>
      <returns>如果表达式计算结果为 true，则为 true；否则为 false。</returns>
      <param name="execution">在其中运行 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" /> 的运行时上下文的实例。</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExpressionCondition.Expression">
      <summary>获取或设置要计算的表达式条件。</summary>
      <returns>要计算的表达式条件。</returns>
      <exception cref="T:System.Data.ReadOnlyException">运行 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的活动在运行时初始化。</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>获取 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionCondition" /> 的依赖项。</summary>
      <returns>依赖项列表。</returns>
      <param name="validation">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> to manage the validation process.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.GetHashCode">
      <summary>返回此实例的哈希代码。</summary>
      <returns>此实例的哈希代码。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExpressionCondition.Name">
      <summary>获取或设置要计算的条件的名称。</summary>
      <returns>要计算的条件的名称。</returns>
      <exception cref="T:System.Data.ReadOnlyException">运行 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的活动在运行时初始化。</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.OnRuntimeInitialized">
      <summary>已为所有属性指定值时调用。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.ToString">
      <summary>返回表达式条件的字符串值。</summary>
      <returns>表达式条件的字符串值。 如果表达式条件为 null，则为空字符串。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>验证表达式是否已正确配置且没有错误。</summary>
      <returns>如果表达式没有错误，则为 true；否则为 false。</returns>
      <param name="validation">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> to manage the validation process.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleExpressionInfo">
      <summary>由 <see cref="T:System.Workflow.Activities.Rules.IRuleExpression" /> 表达式的 <see cref="M:System.Workflow.Activities.Rules.IRuleExpression.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Boolean)" /> 方法返回的此类的实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionInfo.#ctor(System.Type)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" /> 类的新实例。</summary>
      <param name="expressionType">该表达式的 <see cref="T:System.Type" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExpressionInfo.ExpressionType">
      <summary>获取表达式的类型。</summary>
      <returns>该表达式的 <see cref="T:System.Type" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleExpressionResult">
      <summary>作为表示基于 <see cref="T:System.Workflow.Activities.Rules.IRuleExpression" /> 接口的自定义表达式结果的类的基础的抽象类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionResult.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionResult" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleExpressionResult.Value">
      <summary>在派生类中重写时，获取或设置表达式的结果。</summary>
      <returns>表达式的结果。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleExpressionWalker">
      <summary>将表达式中的当前行为传播到子节点。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
      <summary>标识由表达式使用的字段和属性并将它们作为符号添加到 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> 实例。</summary>
      <param name="analysis">存储表示由规则条件和操作使用的属性和字段的符号的 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> 实例。</param>
      <param name="expression">正在执行的表达式。</param>
      <param name="isRead">如果要将 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 读取的字段和属性添加到 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />，则为 true；否则为 false。</param>
      <param name="isWritten">如果要将 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 写入的字段和属性添加到 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" />，则为 true；否则为 false。</param>
      <param name="qualifier">到目前为止确定的字段或属性的路径。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="analysis" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Clone(System.CodeDom.CodeExpression)">
      <summary>创建当前 <see cref="T:System.CodeDom.CodeExpression" /> 的子节点的深层副本。</summary>
      <returns>与此实例完全相同的 <see cref="T:System.CodeDom.CodeExpression" />。</returns>
      <param name="originalExpression">作为克隆基础的表达式。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
      <summary>将表达式的子节点反编译为字符串格式。</summary>
      <param name="stringBuilder">包含字符的可变字符串的 <see cref="T:System.Text.StringBuilder" />。</param>
      <param name="expression">当前 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <param name="parentExpression">父 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)">
      <summary>计算表达式和所有子表达式。</summary>
      <returns>指示表达式计算结果的 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionResult" />。</returns>
      <param name="execution">要执行表达式的 <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />。</param>
      <param name="expression">要计算的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="execution" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
      <summary>将当前表达式和子节点与另一个表达式相比较，以确定它们是否相等。</summary>
      <returns>如果表达式相等，则为 true；否则为 false。</returns>
      <param name="firstExpression">进行比较的第一个 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <param name="secondExpression">进行比较的第二个 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)">
      <summary>验证表达式和子节点是否配置正确且没有错误。</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> 的 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" />。</returns>
      <param name="validation">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> to manage the validation process.</param>
      <param name="expression">要计算的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <param name="isWritten">如果由 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 写入的字段和属性存储在 <see cref="T:System.Workflow.Activities.Rules.RuleAnalysis" /> 中，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validation" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="expression" /> 为空且 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> 对象上的错误集合为空引用 (Nothing)。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleHaltAction">
      <summary>导致 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 停止执行并使控制重新返回到调用方法。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleHaltAction" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.Clone">
      <summary>创建当前 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 的深层副本。</summary>
      <returns>与此实例完全相同的 <see cref="T:System.Workflow.Activities.Rules.RuleAction" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.Equals(System.Object)">
      <summary>确定两个对象实例是否相等。</summary>
      <returns>如果对象相等，则为 true；否则为 false。</returns>
      <param name="obj">与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Object" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>使用指定的 <see cref="T:System.Workflow.Activities.Rules.RuleExecution" /> 执行 <see cref="T:System.Workflow.Activities.Rules.RuleAction" />。</summary>
      <param name="context">用于执行 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 的 <see cref="T:System.Workflow.Activities.Rules.RuleExecution" /> 上下文。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.GetHashCode">
      <summary>返回此实例的哈希代码。</summary>
      <returns>此实例的哈希代码。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>返回由 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 更新的字段和属性。</summary>
      <returns>由 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 更改的字段和属性的列表。 由于 <see cref="T:System.Workflow.Activities.Rules.RuleHaltAction" /> 没有参数，因此返回值将始终为空列表。</returns>
      <param name="validation">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> to manage the validation process.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.ToString">
      <summary>返回字符串“Halt”。</summary>
      <returns>字符串“Halt”。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>返回 true，不执行任何验证。</summary>
      <returns>始终返回 true。</returns>
      <param name="validator">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> to manage the validation process.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleInvokeAttribute">
      <summary>指示由条件调用方法。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleInvokeAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleInvokeAttribute" /> 类的新实例。</summary>
      <param name="methodInvoked">规则调用的方法。</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleInvokeAttribute.MethodInvoked">
      <summary>获取由条件调用的方法。</summary>
      <returns>由条件调用的方法。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleLiteralResult">
      <summary>表示使用 <see cref="T:System.Workflow.Activities.Rules.IRuleExpression" /> 写入的自定义表达式的文本结果。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleLiteralResult.#ctor(System.Object)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleLiteralResult" /> 类的新实例。</summary>
      <param name="literal">表达式的文本结果。</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleLiteralResult.Value">
      <summary>获取表达式的结果。</summary>
      <returns>表达式的结果。</returns>
      <exception cref="T:System.InvalidOperationException">已设置 <see cref="P:System.Workflow.Activities.Rules.RuleLiteralResult.Value" />。</exception>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RulePathQualifier">
      <summary>生成字段或属性的路径。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RulePathQualifier.#ctor(System.String,System.Workflow.Activities.Rules.RulePathQualifier)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RulePathQualifier" /> 类的新实例。</summary>
      <param name="name">路径中当前实体的名称。</param>
      <param name="next">路径的下一个实体，即字段或属性。 如果 <paramref name="name" /> 是路径的根的属性或字段的名称，则为 null。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RulePathQualifier.Name">
      <summary>获取当前字段或属性的名称。</summary>
      <returns>路径中当前实体的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RulePathQualifier.Next">
      <summary>获取路径的下一个字段或属性。</summary>
      <returns>路径的下一个实体，即字段或属性。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleReadAttribute">
      <summary>指示由 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 读取属性。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleReadAttribute" /> 类的新实例。</summary>
      <param name="path">由条件读取的成员的逻辑路径。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleReadAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleReadAttribute" /> 类的新实例。</summary>
      <param name="path">由条件读取的成员的逻辑路径。</param>
      <param name="target">
        <see cref="T:System.Workflow.Activities.Rules.RuleAttributeTarget" /> 枚举；指定路径是相对于 this，还是相对于方法参数。</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleReadWriteAttribute">
      <summary>表示 <see cref="T:System.Workflow.Activities.Rules.RuleReadAttribute" /> 和 <see cref="T:System.Workflow.Activities.Rules.RuleWriteAttribute" /> 类的基类。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleReadWriteAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.Activities.Rules.RuleReadWriteAttribute" /> 类的新实例。</summary>
      <param name="path">到属性目标的路径。</param>
      <param name="target">确定如何使用路径查找目标的 <see cref="T:System.Workflow.Activities.Rules.RuleAttributeTarget" /> 枚举值。</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleReadWriteAttribute.Path">
      <summary>获取到属性的目标的路径。</summary>
      <returns>包含路径的 <see cref="T:System.String" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleReadWriteAttribute.Target">
      <summary>获取确定如何使用路径查找目标的 <see cref="T:System.Workflow.Activities.Rules.RuleAttributeTarget" /> 枚举值。</summary>
      <returns>确定如何使用指定路径查找目标的 <see cref="T:System.Workflow.Activities.Rules.RuleAttributeTarget" /> 枚举值。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleReevaluationBehavior">
      <summary>指定是否可以重新计算 <see cref="T:System.Workflow.Activities.Rules.Rule" />。</summary>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleReevaluationBehavior.Always">
      <summary>指示可以重新计算 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 多次。 <see cref="F:System.Workflow.Activities.Rules.RuleReevaluationBehavior.Always" /> 为默认值。</summary>
    </member>
    <member name="F:System.Workflow.Activities.Rules.RuleReevaluationBehavior.Never">
      <summary>指示执行 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 一次。在规则执行操作之前可以计算条件多次，但是规则永远不会重新计算。</summary>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleSet">
      <summary>包含 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 类和这些规则的正向链接执行语义的集合。 可以直接用代码或使用 <see cref="T:System.Workflow.Activities.PolicyActivity" /> 活动执行 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.#ctor(System.String)">
      <summary>使用 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称初始化 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 类的新实例。</summary>
      <param name="name">
        <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.#ctor(System.String,System.String)">
      <summary>使用 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称和说明初始化 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 类的新实例。</summary>
      <param name="name">
        <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。</param>
      <param name="description">
        <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的说明。</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleSet.ChainingBehavior">
      <summary>获取或设置 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 中 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 类的正向链接行为。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 中 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 类的 <see cref="T:System.Workflow.Activities.Rules.RuleChainingBehavior" />。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.Clone">
      <summary>创建当前 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的深层副本。</summary>
      <returns>与此实例完全相同的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleSet.Description">
      <summary>Gets or sets a description of the <see cref="T:System.Workflow.Activities.Rules.RuleSet" />.</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的说明。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.Equals(System.Object)">
      <summary>确定两个对象实例是否相等。</summary>
      <returns>如果对象相等，则为 true；否则为 false。</returns>
      <param name="obj">与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Object" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.Execute(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>计算 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 中的 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 实例。</summary>
      <param name="ruleExecution">与调用 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 相关联的 <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ruleExecution" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.InvalidOperationException">无法验证缓存的 <see cref="T:System.Workflow.Activities.Rules.RuleExecution" />。</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.GetHashCode">
      <summary>返回此实例的哈希代码。</summary>
      <returns>此实例的哈希代码。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleSet.Name">
      <summary>获取和设置 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。</returns>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleSet.Rules">
      <summary>获取 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 中 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 类的列表。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 中 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 类的列表。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSet.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>验证 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 属性和 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 中的 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 类。</summary>
      <returns>在验证过程中发现的错误的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</returns>
      <param name="validation">要管理验证过程的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationManager" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validation" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleSetChangeAction">
      <summary>表示必须从其派生对 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 所做更改的所有动态更新通知的抽象基类。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetChangeAction.#ctor">
      <summary>在派生类中实现时，初始化 <see cref="T:System.Workflow.Activities.Rules.RuleSetChangeAction" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleSetChangeAction.RuleSetName">
      <summary>当在派生类中重写时，获取要更改的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。</summary>
      <returns>要更改的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
      <summary>在派生类中重写时，验证 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 是否配置正确且没有错误。</summary>
      <returns>验证错误的集合。</returns>
      <param name="activity">在其中发生 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 更改的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleSetCollection">
      <summary>包含在工作流中定义的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 类的集合。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetCollection.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleSetCollection" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetCollection.Add(System.Workflow.Activities.Rules.RuleSet)">
      <summary>已重载。 向集合中添加一个 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /></summary>
      <param name="item">要添加到 <see cref="T:System.Workflow.Activities.Rules.RuleSetCollection" /> 的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetCollection.Diff(System.Object,System.Object)">
      <summary>确定两个 <see cref="T:System.Workflow.Activities.Rules.RuleSetCollection" /> 之间的差异。</summary>
      <returns>
        <see cref="T:System.Workflow.ComponentModel.WorkflowChangeAction" /> 类的列表，用于区分 <paramref name="originalDefinition" /> 和 <paramref name="changedDefinition" />。</returns>
      <param name="originalDefinition">
        <see cref="T:System.Workflow.Activities.Rules.RuleSetCollection" /> 的原始定义。</param>
      <param name="changedDefinition">
        <see cref="T:System.Workflow.Activities.Rules.RuleSetCollection" /> 的已更改定义。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleSetReference">
      <summary>保存工作流上 <see cref="T:System.Workflow.Activities.Rules.RuleSetCollection" /> 中的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetReference.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleSetReference" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetReference.#ctor(System.String)">
      <summary>使用 <see cref="T:System.Workflow.Activities.Rules.RuleSetReference" /> 的名称初始化 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 类的一个新实例。</summary>
      <param name="ruleSetName">活动将计算的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleSetReference.RuleSetName">
      <summary>获取或设置活动将计算的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。</summary>
      <returns>活动将计算的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。</returns>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleSetValidationException">
      <summary>表示由于无法验证规则集而无法继续处理时引发的异常。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleSetValidationException" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化数据初始化 <see cref="T:System.Workflow.Activities.Rules.RuleSetValidationException" /> 类的新实例。</summary>
      <param name="serializeInfo">对象的引用，该对象保存对异常进行反序列化所需的数据。</param>
      <param name="context">提供对异常数据进行反序列化的手段。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleSetValidationException" /> 类的新实例。</summary>
      <param name="message">解释异常原因的错误信息。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.String,System.Exception)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleSetValidationException" /> 类的新实例。</summary>
      <param name="message">解释异常原因的错误信息。</param>
      <param name="ex">内部异常。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.String,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleSetValidationException" /> 类的新实例。</summary>
      <param name="message">解释异常原因的错误信息。</param>
      <param name="errors">验证规则集时发生的验证错误的集合。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleSetValidationException.Errors">
      <summary>获取验证规则集时发生的验证错误的集合。</summary>
      <returns>包含验证错误的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleSetValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口。</summary>
      <param name="info">对象的引用，该对象保存对异常进行序列化和反序列化所需的数据。</param>
      <param name="context">提供对异常数据进行序列化的手段。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleStatementAction">
      <summary>指定要更新的属性或字段或要使用 CodeDom 类型运行的方法。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleStatementAction" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.#ctor(System.CodeDom.CodeExpression)">
      <summary>使用 <see cref="T:System.CodeDom.CodeExpression" /> 初始化 <see cref="T:System.Workflow.Activities.Rules.RuleStatementAction" /> 类的新实例。</summary>
      <param name="codeDomExpression">指定要执行的操作的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.#ctor(System.CodeDom.CodeStatement)">
      <summary>使用 <see cref="T:System.CodeDom.CodeStatement" /> 初始化 <see cref="T:System.Workflow.Activities.Rules.RuleStatementAction" /> 类的新实例。</summary>
      <param name="codeDomStatement">指定要执行的操作的 <see cref="T:System.CodeDom.CodeStatement" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.Clone">
      <summary>创建当前 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 的深层副本。</summary>
      <returns>与此实例完全相同的 <see cref="T:System.Workflow.Activities.Rules.RuleAction" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleStatementAction.CodeDomStatement">
      <summary>获取或设置指定要执行的操作的代码语句。</summary>
      <returns>指定要执行的操作的 <see cref="T:System.CodeDom.CodeStatement" />。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.Equals(System.Object)">
      <summary>确定两个对象实例是否相等。</summary>
      <returns>如果对象相等，则为 true；否则为 false。</returns>
      <param name="obj">与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Object" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>使用指定的 <see cref="T:System.Workflow.Activities.Rules.RuleExecution" /> 执行 <see cref="T:System.Workflow.Activities.Rules.RuleAction" />。</summary>
      <param name="context">用于执行 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 的 <see cref="T:System.Workflow.Activities.Rules.RuleExecution" /> 上下文。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.GetHashCode">
      <summary>返回此实例的哈希代码。</summary>
      <returns>此实例的哈希代码。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>返回由 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 更新的字段和属性。</summary>
      <returns>由 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 更改的字段和属性的列表。</returns>
      <param name="validation">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> to manage the validation process.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.ToString">
      <summary>返回操作的字符串值。</summary>
      <returns>操作的字符串值。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>验证 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 是否已正确配置且没有错误。</summary>
      <returns>如果 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 没有错误，则为 true；否则为 false。</returns>
      <param name="validator">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> to manage the validation process.</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleUpdateAction">
      <summary>指示规则正在更新变量，以便重新计算受影响的规则。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleUpdateAction" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleUpdateAction" /> 类的新实例。</summary>
      <param name="path">表示更改的字段或属性的名称的字符串。 “/”字符用作分隔符。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.Clone">
      <summary>创建当前 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 的深层副本。</summary>
      <returns>与此实例完全相同的 <see cref="T:System.Workflow.Activities.Rules.RuleAction" />。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.Equals(System.Object)">
      <summary>确定两个对象实例是否相等。</summary>
      <returns>如果对象相等，则为 true；否则为 false。</returns>
      <param name="obj">与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Object" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
      <summary>使用指定的 <see cref="T:System.Workflow.Activities.Rules.RuleExecution" /> 执行 <see cref="T:System.Workflow.Activities.Rules.RuleAction" />。</summary>
      <param name="context">用于执行 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 的 <see cref="T:System.Workflow.Activities.Rules.RuleExecution" /> 上下文。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.GetHashCode">
      <summary>返回此实例的哈希代码。</summary>
      <returns>此实例的哈希代码。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>返回由 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 更新的字段和属性。</summary>
      <returns>由 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 更改的字段和属性的列表。</returns>
      <param name="validation">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> to manage the validation process.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleUpdateAction.Path">
      <summary>获取或设置 <see cref="T:System.Workflow.Activities.Rules.RuleUpdateAction" /> 的路径。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.Rules.RuleUpdateAction" /> 的路径。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.ToString">
      <summary>返回一个字符串，指示 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 正在更新的字段或属性。</summary>
      <returns>字符串“更新 <see cref="P:System.Workflow.Activities.Rules.RuleUpdateAction.Path" />”。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
      <summary>验证 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 是否已正确配置且没有错误。</summary>
      <returns>如果 <see cref="T:System.Workflow.Activities.Rules.RuleAction" /> 没有错误，则为 true；否则为 false。</returns>
      <param name="validator">The <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> to manage the validation process.</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleValidation">
      <summary>验证表达式条件。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider)">
      <summary>使用 <see cref="T:System.Workflow.Activities.Rules.Rule" /> 的 <see cref="T:System.Type" /> 初始化 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> 类的新实例。</summary>
      <param name="thisType">将对其执行此 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 或 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的对象的类型。 它通常为工作流，但也可以是任何有效的类型。</param>
      <param name="typeProvider">用于确定在条件中可以使用哪些 <see cref="T:System.Type" /> 的可选 <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" /> 实现。 如果未指定类型，则只能使用由活动指定的程序集和该程序集引用的任何程序集中的类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="thisType" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Boolean)">
      <summary>使用指定的 <see cref="T:System.Workflow.ComponentModel.Activity" /> 和类型提供程序初始化 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> 类的新实例。</summary>
      <param name="activity">在其上下文中运行 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 或 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的 <see cref="T:System.Workflow.ComponentModel.Activity" />。 在大多数情况下，它将是工作流对象。</param>
      <param name="typeProvider">用于确定在条件中可以使用哪些 <see cref="T:System.Type" /> 的可选 <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" /> 实现。 如果未指定类型，则只能使用由活动指定的程序集和该程序集引用的任何程序集中的类型。</param>
      <param name="checkStaticType">如果为 true，则用此对象验证的 <see cref="T:System.Workflow.Activities.Rules.RuleCondition" /> 或 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 所使用的类型必须位于允许类型的限制列表中。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="activity" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleValidation.Errors">
      <summary>获取与 <see cref="T:System.Workflow.Activities.Rules.RuleValidation" /> 相关联的错误。</summary>
      <returns>包含在规则验证过程创建的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationError" /> 对象的 <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" />。</returns>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleValidation.ExpressionInfo(System.CodeDom.CodeExpression)">
      <summary>确定代码表达式的类型。</summary>
      <returns>对象的 <see cref="T:System.Workflow.Activities.Rules.RuleExpressionInfo" />。 它标识对象的类型。</returns>
      <param name="expression">要计算的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleValidation.PopParentExpression">
      <summary>移除并返回位于 <see cref="T:System.Collections.Stack" /> 顶部的父表达式。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleValidation.PushParentExpression(System.CodeDom.CodeExpression)">
      <summary>将对象插入 <see cref="T:System.Collections.Stack" /> 的顶部。</summary>
      <returns>如果 <paramref name="newParent" /> 已添加到堆栈，则为 true；否则为 false。</returns>
      <param name="newParent">要添加到 <see cref="T:System.Collections.Stack" /> 的 <see cref="T:System.CodeDom.CodeExpression" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="newParent" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.RuleValidation.ThisType">
      <summary>获取对象的类型。</summary>
      <returns>对象的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Workflow.Activities.Rules.RuleWriteAttribute">
      <summary>指示由应用此属性 (attribute) 的方法或属性 (property) 写入属性 (property) 或字段。 规则引擎使用此信息确定规则之间的依赖性。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleWriteAttribute" /> 类的新实例。</summary>
      <param name="path">与应用此属性 (attribute) 的方法或属性 (property) 位于同一类上的字段或属性 (property)。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.RuleWriteAttribute.#ctor(System.String,System.Workflow.Activities.Rules.RuleAttributeTarget)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.RuleWriteAttribute" /> 类的新实例。</summary>
      <param name="path">与应用此属性 (attribute) 的方法或属性 (property) 位于同一类上的字段或属性 (property)。</param>
      <param name="target">确定如何使用路径查找目标的 <see cref="T:System.Workflow.Activities.Rules.RuleAttributeTarget" /> 枚举值。</param>
    </member>
    <member name="T:System.Workflow.Activities.Rules.UpdatedConditionAction">
      <summary>表示对用于动态更新的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 进行的更改。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.UpdatedConditionAction.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.UpdatedConditionAction" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.UpdatedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition,System.Workflow.Activities.Rules.RuleCondition)">
      <summary>用更改的现有条件和新条件初始化 <see cref="T:System.Workflow.Activities.Rules.UpdatedConditionAction" /> 类的新实例。</summary>
      <param name="conditionDefinition">要被替换的条件。</param>
      <param name="newConditionDefinition">替换条件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="conditionDefinition" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="conditionDefinition" /> 为 null 引用（在 Visual Basic 中为 Nothing）。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="conditionDefinition" /> 的名称不等于 <paramref name="newConditionDefinition." /> 的名称</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.UpdatedConditionAction.ConditionDefinition">
      <summary>获取或设置要由此操作替换的条件。</summary>
      <returns>要由此操作替换的条件。</returns>
      <exception cref="T:System.ArgumentNullException">尝试将此属性设置为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.UpdatedConditionAction.ConditionName">
      <summary>获取要被替换的条件的名称。</summary>
      <returns>要被替换的条件的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.UpdatedConditionAction.NewConditionDefinition">
      <summary>获取或设置将替换现有条件的条件。</summary>
      <returns>将替换现有条件的条件。</returns>
      <exception cref="T:System.ArgumentNullException">尝试将此属性设置为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction">
      <summary>表示对用于动态更新的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 进行的更改。 此类不能被继承。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.UpdatedRuleSetAction.#ctor">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction" /> 类的新实例。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Workflow.Activities.Rules.UpdatedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Workflow.Activities.Rules.RuleSet)">
      <summary>使用原始和已更新的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 类初始化 <see cref="T:System.Workflow.Activities.Rules.UpdatedRuleSetAction" /> 类的新实例。</summary>
      <param name="originalRuleSetDefinition">原始 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</param>
      <param name="updatedRuleSetDefinition">已更新的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</param>
      <exception cref="T:System.ArgumentNullException">RuleSetDefinition 或 updatedRuleSetDefinition 为 null</exception>
      <exception cref="T:System.ArgumentException">两个 RuleSet 的名称不相同</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.UpdatedRuleSetAction.OriginalRuleSetDefinition">
      <summary>获取或设置原始的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</summary>
      <returns>原始 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</returns>
      <exception cref="T:System.ArgumentNullException">原始的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.UpdatedRuleSetAction.RuleSetName">
      <summary>获取 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。</summary>
      <returns>
        <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 的名称。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Workflow.Activities.Rules.UpdatedRuleSetAction.UpdatedRuleSetDefinition">
      <summary>获取或设置已更新的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</summary>
      <returns>已更新的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" />。</returns>
      <exception cref="T:System.ArgumentNullException">已更新的 <see cref="T:System.Workflow.Activities.Rules.RuleSet" /> 为空引用（在 Visual Basic 中为 Nothing）。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog">
      <summary>此对话框通常由 <see cref="T:System.Workflow.Activities.IfElseBranchActivity" />、<see cref="T:System.Workflow.Activities.WhileActivity" />、<see cref="T:System.Workflow.Activities.ConditionedActivityGroup" /> 和 <see cref="T:System.Workflow.Activities.ReplicatorActivity" /> 活动用于编辑声明性条件。 但是，如果想在这些活动以外使用条件（例如，编辑完全在工作流以外使用的条件），则可以使用此对话框对该条件执行编辑操作。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.CodeDom.CodeExpression)">
      <summary>使用指定的活动类型、类型提供程序和表达式初始化 <see cref="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" /> 类的新实例。</summary>
      <param name="activityType">将要对其执行此条件的对象的类型。 它通常为工作流，但也可以是任何有效的类型。</param>
      <param name="typeProvider">用于确定在条件中可以使用哪些类型的可选 <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" /> 实现。 如果未指定类型，则只能使用由 <paramref name="activityType" /> 指定的程序集和该程序集引用的任何程序集中的类型。</param>
      <param name="expression">要显示的初始 <see cref="T:System.CodeDom.CodeExpression" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor(System.Workflow.ComponentModel.Activity,System.CodeDom.CodeExpression)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" /> 类的新实例。</summary>
      <param name="activity">对其执行此条件的 <see cref="T:System.Workflow.ComponentModel.Activity" />。 它通常为工作流，但也可以是任何有效的活动。</param>
      <param name="expression">要显示的初始 <see cref="T:System.CodeDom.CodeExpression" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Workflow.Activities.Rules.Design.RuleConditionDialog" /> 使用的所有资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Design.RuleConditionDialog.Expression">
      <summary>获取由对话框用户修改的 <see cref="T:System.CodeDom.CodeExpression" />。</summary>
      <returns>由对话框用户修改的 <see cref="T:System.CodeDom.CodeExpression" />。</returns>
    </member>
    <member name="T:System.Workflow.Activities.Rules.Design.RuleSetDialog">
      <summary>此对话框通常由 <see cref="T:System.Workflow.Activities.PolicyActivity" /> 用于编辑规则集。 但是，如果想在此活动以外使用规则集（例如，编辑要在工作流以外使用的规则集），则可以使用此对话框对该规则集执行编辑操作。</summary>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Workflow.Activities.Rules.RuleSet)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" /> 类的新实例。</summary>
      <param name="activityType">将要对其执行此条件的对象的类型。 它通常为工作流，但也可以是任何有效的类型。</param>
      <param name="typeProvider">用于确定在条件中可以使用哪些 Types 的可选 <see cref="T:System.Workflow.ComponentModel.Compiler.ITypeProvider" /> 实现。 如果未指定类型，则只能使用由 <paramref name="activityType" /> 指定的程序集和该程序集引用的任何程序集中的类型。</param>
      <param name="ruleSet">要显示的初始 <see cref="T:System.Workflow.Activies.Rules.RuleSet" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.Rules.RuleSet)">
      <summary>初始化 <see cref="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" /> 类的新实例。</summary>
      <param name="activity">对其执行此 <see cref="T:System.Workflow.Activies.Rules.RuleSet" /> 的 <see cref="T:System.Workflow.ComponentModel.Activity" />。 它通常是工作流（由 <see cref="T:System.Workflow.Activities.PolicyActivity" /> 使用），但也可以是任何有效的活动。</param>
      <param name="ruleSet">要显示的初始 <see cref="T:System.Workflow.Activies.Rules.RuleSet" />。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.Workflow.Activities.Rules.Design.RuleSetDialog" /> 使用的所有资源。</summary>
      <param name="disposing">true 表示释放托管资源和非托管资源；false 表示仅释放非托管资源。</param>
    </member>
    <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
      <summary>处理命令键。</summary>
      <returns>如果控件处理并访问击键，则为 true；否则为 false，以允许进一步处理。</returns>
      <param name="msg">通过引用传递的 <see cref="T:System.Windows.Forms.Message" />，它表示要处理的 Win32 消息。</param>
      <param name="keyData">
        <see cref="T:System.Windows.Forms.Keys" /> 值之一，它表示要处理的键。</param>
    </member>
    <member name="P:System.Workflow.Activities.Rules.Design.RuleSetDialog.RuleSet">
      <summary>获取由对话框用户确认的 <see cref="T:System.Workflow.Activies.Rules.RuleSet" />。</summary>
      <returns>由对话框用户确认的 <see cref="T:System.Workflow.Activies.Rules.RuleSet" />。</returns>
    </member>
  </members>
</doc>