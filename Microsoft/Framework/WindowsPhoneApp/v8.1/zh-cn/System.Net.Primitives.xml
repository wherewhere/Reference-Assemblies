<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationSchemes">
      <summary>指定用于身份验证的协议。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Anonymous">
      <summary>指定匿名身份验证。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Basic">
      <summary>指定基本身份验证。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Digest">
      <summary>指定摘要式身份验证。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.IntegratedWindowsAuthentication">
      <summary>指定 Windows 身份验证。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Negotiate">
      <summary>和客户端协商以确定身份验证方案。 如果客户端和服务器均支持 Kerberos，则使用 Kerberos；否则使用 NTLM。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.None">
      <summary>不允许进行任何身份验证。 设置了此标志并请求 <see cref="T:System.Net.HttpListener" /> 对象的客户端将始终会接收 403 Forbidden 状态。 当资源决不应该用于客户端时，请使用此标志。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Ntlm">
      <summary>指定 NTLM 身份验证。</summary>
    </member>
    <member name="T:System.Net.Cookie">
      <summary>提供一组用于管理 Cookie 的属性和方法。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor">
      <summary>初始化 <see cref="T:System.Net.Cookie" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String)">
      <summary>使用指定的 <see cref="P:System.Net.Cookie.Name" /> 和 <see cref="P:System.Net.Cookie.Value" /> 初始化 <see cref="T:System.Net.Cookie" /> 类的新实例。</summary>
      <param name="name">
        <see cref="T:System.Net.Cookie" /> 的名称。 不能在 <paramref name="name" /> 中使用下列字符：等号、分号、逗号、换行符 (\n)、回车符 (\r)、制表符 (\t) 和空格字符。 美元符号 ("$") 不能作为第一个字符。</param>
      <param name="value">
        <see cref="T:System.Net.Cookie" /> 的值。 下列字符不得用在 <paramref name="value" /> 中：分号、逗号。</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> 参数为 null。 - 或 - <paramref name="name" /> 参数的长度为零。 - 或 - <paramref name="name" /> 参数包含无效字符。 - 或 - <paramref name="value" /> 参数为 null。 - 或 - <paramref name="value" /> 参数包含一个未使用引号引起来的字符串，且该字符串中包含无效字符。</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)">
      <summary>使用指定的 <see cref="P:System.Net.Cookie.Name" />、<see cref="P:System.Net.Cookie.Value" /> 和 <see cref="P:System.Net.Cookie.Path" /> 初始化 <see cref="T:System.Net.Cookie" /> 类的新实例。</summary>
      <param name="name">
        <see cref="T:System.Net.Cookie" /> 的名称。 不能在 <paramref name="name" /> 中使用下列字符：等号、分号、逗号、换行符 (\n)、回车符 (\r)、制表符 (\t) 和空格字符。 美元符号 ("$") 不能作为第一个字符。</param>
      <param name="value">
        <see cref="T:System.Net.Cookie" /> 的值。 下列字符不得用在 <paramref name="value" /> 中：分号、逗号。</param>
      <param name="path">此 <see cref="T:System.Net.Cookie" /> 适用于的源服务器上的 URI 的子集。 默认值为 "/"。</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> 参数为 null。 - 或 - <paramref name="name" /> 参数的长度为零。 - 或 - <paramref name="name" /> 参数包含无效字符。 - 或 - <paramref name="value" /> 参数为 null。 - 或 - <paramref name="value" /> 参数包含一个未使用引号引起来的字符串，且该字符串中包含无效字符。</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary>使用指定的 <see cref="P:System.Net.Cookie.Name" />、<see cref="P:System.Net.Cookie.Value" />、<see cref="P:System.Net.Cookie.Path" /> 和 <see cref="P:System.Net.Cookie.Domain" /> 初始化 <see cref="T:System.Net.Cookie" /> 类的新实例。</summary>
      <param name="name">
        <see cref="T:System.Net.Cookie" /> 的名称。 不能在 <paramref name="name" /> 中使用下列字符：等号、分号、逗号、换行符 (\n)、回车符 (\r)、制表符 (\t) 和空格字符。 美元符号 ("$") 不能作为第一个字符。</param>
      <param name="value">
        <see cref="T:System.Net.Cookie" /> 对象的值。 下列字符不得用在 <paramref name="value" /> 中：分号、逗号。</param>
      <param name="path">此 <see cref="T:System.Net.Cookie" /> 适用于的源服务器上的 URI 的子集。 默认值为 "/"。</param>
      <param name="domain">此 <see cref="T:System.Net.Cookie" /> 对其有效的可选 Internet 域。 默认值为已从其中接收到此 <see cref="T:System.Net.Cookie" /> 的主机。</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> 参数为 null。 - 或 - <paramref name="name" /> 参数的长度为零。 - 或 - <paramref name="name" /> 参数包含无效字符。 - 或 - <paramref name="value" /> 参数为 null。 - 或 - <paramref name="value" /> 参数包含一个未使用引号引起来的字符串，且该字符串中包含无效字符。</exception>
    </member>
    <member name="P:System.Net.Cookie.Comment">
      <summary>获取或设置服务器可添加到 <see cref="T:System.Net.Cookie" /> 中的注释。</summary>
      <returns>用于记录此 <see cref="T:System.Net.Cookie" /> 预定用途的可选注释。</returns>
    </member>
    <member name="P:System.Net.Cookie.CommentUri">
      <summary>获取或设置服务器可通过 <see cref="T:System.Net.Cookie" /> 来提供的 URI 注释。</summary>
      <returns>一个可选注释，它表示此 <see cref="T:System.Net.Cookie" /> 的 URI 引用的预定用途。 该值必须符合 URI 格式。</returns>
    </member>
    <member name="P:System.Net.Cookie.Discard">
      <summary>获取或设置由服务器设置的丢弃标志。</summary>
      <returns>如果客户端将在当前会话结束时丢弃 <see cref="T:System.Net.Cookie" />，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Net.Cookie.Domain">
      <summary>获取或设置 <see cref="T:System.Net.Cookie" /> 对其有效的 URI。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> 对其有效的 URI。</returns>
    </member>
    <member name="M:System.Net.Cookie.Equals(System.Object)">
      <summary>重写 <see cref="M:System.Object.Equals(System.Object)" /> 方法。</summary>
      <returns>如果 <see cref="T:System.Net.Cookie" /> 等于 <paramref name="comparand" />，则返回 true。 两个 <see cref="T:System.Net.Cookie" /> 实例相等的条件是它们的 <see cref="P:System.Net.Cookie.Name" />、<see cref="P:System.Net.Cookie.Value" />、<see cref="P:System.Net.Cookie.Path" />、<see cref="P:System.Net.Cookie.Domain" /> 和 <see cref="P:System.Net.Cookie.Version" /> 属性相等。 <see cref="P:System.Net.Cookie.Name" /> 和 <see cref="P:System.Net.Cookie.Domain" /> 字符串比较不区分大小写。</returns>
      <param name="comparand">对 <see cref="T:System.Net.Cookie" /> 的引用。</param>
    </member>
    <member name="P:System.Net.Cookie.Expired">
      <summary>获取或设置 <see cref="T:System.Net.Cookie" /> 的当前状态。</summary>
      <returns>如果 <see cref="T:System.Net.Cookie" /> 已过期，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Net.Cookie.Expires">
      <summary>获取或设置作为 <see cref="T:System.DateTime" /> 的 <see cref="T:System.Net.Cookie" /> 过期日期和时间。</summary>
      <returns>作为 <see cref="T:System.DateTime" /> 实例的 <see cref="T:System.Net.Cookie" /> 过期日期和时间。</returns>
    </member>
    <member name="M:System.Net.Cookie.GetHashCode">
      <summary>重写 <see cref="M:System.Object.GetHashCode" /> 方法。</summary>
      <returns>此实例的 32 位带符号整数哈希代码。</returns>
    </member>
    <member name="P:System.Net.Cookie.HttpOnly">
      <summary>确定页脚本或其他活动内容是否可访问此 Cookie。</summary>
      <returns>确定页脚本或其他活动内容是否可访问此 Cookie 的布尔值。</returns>
    </member>
    <member name="P:System.Net.Cookie.Name">
      <summary>获取或设置 <see cref="T:System.Net.Cookie" /> 的名称。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> 的名称。</returns>
      <exception cref="T:System.Net.CookieException">为 Set 操作指定的值为 null 或是空字符串 - 或 - 为 Set 操作指定的值包含非法字符。 不能在 <see cref="P:System.Net.Cookie.Name" /> 属性中使用下列字符：等号、分号、逗号、换行符 (\n)、回车符 (\r)、制表符 (\t) 和空格字符。 美元符号 ("$") 不能作为第一个字符。</exception>
    </member>
    <member name="P:System.Net.Cookie.Path">
      <summary>获取或设置此 <see cref="T:System.Net.Cookie" /> 适用于的 URI。</summary>
      <returns>此 <see cref="T:System.Net.Cookie" /> 适用于的 URI。</returns>
    </member>
    <member name="P:System.Net.Cookie.Port">
      <summary>获取或设置此 <see cref="T:System.Net.Cookie" /> 适用于的 TCP 端口的列表。</summary>
      <returns>此 <see cref="T:System.Net.Cookie" /> 适用于的 TCP 端口的列表。</returns>
      <exception cref="T:System.Net.CookieException">未能分析为 Set 操作指定的值或者该值没有用双引号括起来。</exception>
    </member>
    <member name="P:System.Net.Cookie.Secure">
      <summary>获取或设置 <see cref="T:System.Net.Cookie" /> 的安全级别。</summary>
      <returns>如果客户端仅在使用安全超文本传输协议 (HTTPS) 的后继请求中返回 Cookie，则为 true；否则为 false。 默认值为 false。</returns>
    </member>
    <member name="P:System.Net.Cookie.TimeStamp">
      <summary>获取此 Cookie 作为 <see cref="T:System.DateTime" /> 发出的时间。</summary>
      <returns>此 Cookie 作为 <see cref="T:System.DateTime" /> 发出的时间。</returns>
    </member>
    <member name="M:System.Net.Cookie.ToString">
      <summary>重写 <see cref="M:System.Object.ToString" /> 方法。</summary>
      <returns>返回此 <see cref="T:System.Net.Cookie" /> 对象的一个字符串表示形式，该表示形式适合包含在 HTTP Cookie: 请求标头中。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Cookie.Value">
      <summary>获取或设置 <see cref="T:System.Net.Cookie" /> 的 <see cref="P:System.Net.Cookie.Value" />。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> 的 <see cref="P:System.Net.Cookie.Value" />。</returns>
    </member>
    <member name="P:System.Net.Cookie.Version">
      <summary>获取或设置此 Cookie 符合的 HTTP 状态维护版本。</summary>
      <returns>此 Cookie 符合的 HTTP 状态维护版本。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">不允许使用为版本指定的值。</exception>
    </member>
    <member name="T:System.Net.CookieCollection">
      <summary>为 <see cref="T:System.Net.Cookie" /> 类的实例提供集合容器。</summary>
    </member>
    <member name="M:System.Net.CookieCollection.#ctor">
      <summary>初始化 <see cref="T:System.Net.CookieCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
      <summary>将 <see cref="T:System.Net.Cookie" /> 添加到 <see cref="T:System.Net.CookieCollection" />。</summary>
      <param name="cookie">要添加到 <see cref="T:System.Net.CookieCollection" /> 中的 <see cref="T:System.Net.Cookie" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> 为 null。</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
      <summary>将 <see cref="T:System.Net.CookieCollection" /> 的内容添加到当前实例中。</summary>
      <param name="cookies">要添加的 <see cref="T:System.Net.CookieCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookies" /> 为 null。</exception>
    </member>
    <member name="P:System.Net.CookieCollection.Count">
      <summary>获取 <see cref="T:System.Net.CookieCollection" /> 中包含的 Cookie 的数目。</summary>
      <returns>
        <see cref="T:System.Net.CookieCollection" /> 中包含的 Cookie 的数目。</returns>
    </member>
    <member name="M:System.Net.CookieCollection.GetEnumerator">
      <summary>获取一个枚举数，该枚举数可以循环访问 <see cref="T:System.Net.CookieCollection" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 接口实现的实例，该接口可以循环访问 <see cref="T:System.Net.CookieCollection" />。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.String)">
      <summary>从 <see cref="T:System.Net.CookieCollection" /> 中获取具有特定名称的 <see cref="T:System.Net.Cookie" />。</summary>
      <returns>
        <see cref="T:System.Net.CookieCollection" /> 中具有特定名称的 <see cref="T:System.Net.Cookie" />。</returns>
      <param name="name">要查找的 <see cref="T:System.Net.Cookie" /> 的名称。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 为 null。</exception>
    </member>
    <member name="M:System.Net.CookieCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">作为集合中元素的复制目标位置的一维数组。 该数组的索引必须从零开始。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此索引处开始进行复制。</param>
    </member>
    <member name="P:System.Net.CookieCollection.System#Collections#ICollection#IsSynchronized">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>如果对该集合的访问是同步的（线程安全），则为 true；否则，为 false。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.System#Collections#ICollection#SyncRoot">
      <summary>有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>可用于同步集合访问的对象。</returns>
    </member>
    <member name="T:System.Net.CookieContainer">
      <summary>为 <see cref="T:System.Net.CookieCollection" /> 对象的集合提供容器。</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor">
      <summary>初始化 <see cref="T:System.Net.CookieContainer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
      <summary>将 <see cref="T:System.Net.Cookie" /> 添加到特定 URI 的 <see cref="T:System.Net.CookieContainer" /> 中。</summary>
      <param name="uri">要添加到 <see cref="T:System.Net.CookieContainer" /> 的 <see cref="T:System.Net.Cookie" /> 的 URI。</param>
      <param name="cookie">要添加到 <see cref="T:System.Net.CookieContainer" /> 的 <see cref="T:System.Net.Cookie" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null 或 <paramref name="cookie" /> 为 null。</exception>
      <exception cref="T:System.Net.CookieException">
        <paramref name="cookie" /> 大于 <paramref name="maxCookieSize" />。 - 或 - <paramref name="cookie" /> 的域不是有效的 URI。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
      <summary>将 <see cref="T:System.Net.CookieCollection" /> 的内容添加到特定 URI 的 <see cref="T:System.Net.CookieContainer" /> 中。</summary>
      <param name="uri">要添加到 <see cref="T:System.Net.CookieContainer" /> 的 <see cref="T:System.Net.CookieCollection" /> 的 URI。</param>
      <param name="cookies">要添加到 <see cref="T:System.Net.CookieContainer" /> 的 <see cref="T:System.Net.CookieCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookies" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cookies" /> 中的某一个 Cookie 的域是 null。</exception>
      <exception cref="T:System.Net.CookieException">
        <paramref name="cookies" /> 中的某一个 Cookie 包含无效的域。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.CookieContainer.Capacity">
      <summary>获取和设置 <see cref="T:System.Net.CookieContainer" /> 可以包含的 <see cref="T:System.Net.Cookie" /> 实例数。</summary>
      <returns>
        <see cref="T:System.Net.CookieContainer" /> 可以包含的 <see cref="T:System.Net.Cookie" /> 实例数。 这是硬性限制，不能通过添加 <see cref="T:System.Net.Cookie" /> 超过此限制。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="Capacity" /> 小于或等于零，或者（值小于 <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> 且 <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> 不等于 <see cref="F:System.Int32.MaxValue" />）。</exception>
    </member>
    <member name="P:System.Net.CookieContainer.Count">
      <summary>获取 <see cref="T:System.Net.CookieContainer" /> 当前包含的 <see cref="T:System.Net.Cookie" /> 实例数。</summary>
      <returns>
        <see cref="T:System.Net.CookieContainer" /> 当前包含的 <see cref="T:System.Net.Cookie" /> 实例数。 这是所有域中 <see cref="T:System.Net.Cookie" /> 实例的总数。</returns>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLengthLimit">
      <summary>表示 <see cref="T:System.Net.CookieContainer" /> 可以包含的 <see cref="T:System.Net.Cookie" /> 实例的默认最大大小（以字节为单位）。 此字段为常数。</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLimit">
      <summary>表示 <see cref="T:System.Net.CookieContainer" /> 可以包含的 <see cref="T:System.Net.Cookie" /> 实例的默认最大数目。 此字段为常数。</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit">
      <summary>表示 <see cref="T:System.Net.CookieContainer" /> 可以在每个域引用的 <see cref="T:System.Net.Cookie" /> 实例的默认最大数目。 此字段为常数。</summary>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
      <summary>获取 HTTP Cookie 标头，该标头包含表示与特定 URI 关联的 <see cref="T:System.Net.Cookie" /> 实例的 HTTP Cookie。</summary>
      <returns>一个 HTTP Cookie 标头，其中包含表示由分号分隔的 <see cref="T:System.Net.Cookie" /> 实例的字符串。</returns>
      <param name="uri">所需的 <see cref="T:System.Net.Cookie" /> 实例的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookies(System.Uri)">
      <summary>获取包含与特定 URI 关联的 <see cref="T:System.Net.Cookie" /> 实例的 <see cref="T:System.Net.CookieCollection" />。</summary>
      <returns>包含与特定 URI 关联的 <see cref="T:System.Net.Cookie" /> 实例的 <see cref="T:System.Net.CookieCollection" />。</returns>
      <param name="uri">所需的 <see cref="T:System.Net.Cookie" /> 实例的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.CookieContainer.MaxCookieSize">
      <summary>表示 <see cref="T:System.Net.Cookie" /> 的最大允许长度。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> 的最大允许长度（以字节为单位）。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="MaxCookieSize" /> 小于或等于零。</exception>
    </member>
    <member name="P:System.Net.CookieContainer.PerDomainCapacity">
      <summary>获取和设置 <see cref="T:System.Net.CookieContainer" /> 可以在每个域包含的 <see cref="T:System.Net.Cookie" /> 实例数。</summary>
      <returns>每个域允许的 <see cref="T:System.Net.Cookie" /> 实例数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="PerDomainCapacity" /> 小于或等于零。 - 或 - （<paramref name="PerDomainCapacity" /> 大于允许的最大 Cookie 实例数 300 且不等于 <see cref="F:System.Int32.MaxValue" />）。</exception>
    </member>
    <member name="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
      <summary>将 HTTP Cookie 标头中的一个或多个 Cookie 的 <see cref="T:System.Net.Cookie" /> 实例添加到特定 URI 的 <see cref="T:System.Net.CookieContainer" /> 中。</summary>
      <param name="uri">
        <see cref="T:System.Net.CookieCollection" /> 的 URI。</param>
      <param name="cookieHeader">HTTP 服务器所返回的 HTTP Set-Cookie 标头的内容，其中的 <see cref="T:System.Net.Cookie" /> 实例用逗号分隔。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> 为 null。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookieHeader" /> 为 null。</exception>
      <exception cref="T:System.Net.CookieException">某一个 Cookie 是无效的。 - 或 - 当将某一个 Cookie 添加到容器中时发生错误。</exception>
    </member>
    <member name="T:System.Net.CookieException">
      <summary>向 <see cref="T:System.Net.CookieContainer" /> 添加 <see cref="T:System.Net.Cookie" /> 出错时引发的异常。</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor">
      <summary>初始化 <see cref="T:System.Net.CookieException" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Net.CredentialCache">
      <summary>为多个凭据提供存储。</summary>
    </member>
    <member name="M:System.Net.CredentialCache.#ctor">
      <summary>创建 <see cref="T:System.Net.CredentialCache" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)">
      <summary>向凭据缓存添加要与 SMTP 一起使用的 <see cref="T:System.Net.NetworkCredential" /> 实例，并将其与主机、端口和身份验证协议关联。 使用此方法添加的凭据仅对 SMTP 有效。 此方法对 HTTP 或 FTP 请求无效。</summary>
      <param name="host">标识主机的 <see cref="T:System.String" />。</param>
      <param name="port">指定要连接到 <paramref name="host" /> 的端口的 <see cref="T:System.Int32" />。</param>
      <param name="authenticationType">
        <see cref="T:System.String" />，它标识使用 <paramref name="cred" /> 连接到 <paramref name="host" /> 时使用的身份验证方案。 请参见“备注”。</param>
      <param name="credential">要添加到凭据缓存中的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> 为 null。 - 或 - <paramref name="authType" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="authType" /> 不是一个接受的值。 请参见“备注”。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 小于零。</exception>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)">
      <summary>向凭据缓存添加一个要与 SMTP 以外的协议一起使用的 <see cref="T:System.Net.NetworkCredential" /> 实例，并将其与统一资源标识符 (URI) 前缀和身份验证协议关联。</summary>
      <param name="uriPrefix">一个 <see cref="T:System.Uri" />，它指定资源的 URI 前缀，该资源由凭据授予访问权。</param>
      <param name="authType">在 <paramref name="uriPrefix" /> 中命名的资源所使用的身份验证方案。</param>
      <param name="cred">要添加到凭据缓存中的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> 为 null。 - 或 - <paramref name="authType" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">相同的凭据被添加多次。</exception>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultCredentials">
      <summary>获取应用程序的系统凭据。</summary>
      <returns>表示应用程序的系统凭据的 <see cref="T:System.Net.ICredentials" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="USERNAME" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultNetworkCredentials">
      <summary>获取当前安全上下文的网络凭据。</summary>
      <returns>表示当前用户或应用程序的网络凭据的 <see cref="T:System.Net.NetworkCredential" />。</returns>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)">
      <summary>返回与指定的主机、端口和身份验证协议关联的 <see cref="T:System.Net.NetworkCredential" /> 实例。</summary>
      <returns>
        <see cref="T:System.Net.NetworkCredential" />；如果缓存中没有匹配的凭据，则为 null。</returns>
      <param name="host">标识主机的 <see cref="T:System.String" />。</param>
      <param name="port">指定要连接到 <paramref name="host" /> 的端口的 <see cref="T:System.Int32" />。</param>
      <param name="authenticationType">
        <see cref="T:System.String" />，它标识连接到 <paramref name="host" /> 时使用的身份验证方案。 请参见“备注”。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> 为 null。 - 或 - <paramref name="authType" /> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="authType" /> 不是一个接受的值。 请参见“备注”。 - 或 - <paramref name="host" /> 是空字符串 ("")。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> 小于零。</exception>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)">
      <summary>返回与指定的统一资源标识符 (URI) 和身份验证类型相关联的 <see cref="T:System.Net.NetworkCredential" /> 实例。</summary>
      <returns>
        <see cref="T:System.Net.NetworkCredential" />；如果缓存中没有匹配的凭据，则为 null。</returns>
      <param name="uriPrefix">一个 <see cref="T:System.Uri" />，它指定资源的 URI 前缀，该资源由凭据授予访问权。</param>
      <param name="authType">在 <paramref name="uriPrefix" /> 中命名的资源所使用的身份验证方案。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> 或 <paramref name="authType" /> 为 null。</exception>
    </member>
    <member name="M:System.Net.CredentialCache.GetEnumerator">
      <summary>返回可循环访问 <see cref="T:System.Net.CredentialCache" /> 实例的枚举数。</summary>
      <returns>用于 <see cref="T:System.Net.CredentialCache" /> 的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)">
      <summary>如果 <see cref="T:System.Net.NetworkCredential" /> 实例与指定的主机、端口和身份验证协议相关联，则将其从缓存中删除。</summary>
      <param name="host">标识主机的 <see cref="T:System.String" />。</param>
      <param name="port">指定要连接到 <paramref name="host" /> 的端口的 <see cref="T:System.Int32" />。</param>
      <param name="authenticationType">
        <see cref="T:System.String" />，它标识连接到 <paramref name="host" /> 时使用的身份验证方案。 请参见“备注”。</param>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.Uri,System.String)">
      <summary>如果 <see cref="T:System.Net.NetworkCredential" /> 实例与指定的统一资源标识符 (URI) 前缀和身份验证协议相关联，则将其从缓存中删除。</summary>
      <param name="uriPrefix">
        <see cref="T:System.Uri" />，它指定该凭据所用于的资源的 URI 前缀。</param>
      <param name="authType">
        <paramref name="uriPrefix" /> 中命名的主机所使用的身份验证方案。</param>
    </member>
    <member name="T:System.Net.DecompressionMethods">
      <summary>表示文件压缩和解压缩编码格式，该格式将用来压缩在 <see cref="T:System.Net.HttpWebRequest" /> 的响应中收到的数据。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Deflate">
      <summary>使用 Deflate 压缩/解压缩算法。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.GZip">
      <summary>使用 gZip 压缩/解压缩算法。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.None">
      <summary>不使用压缩。</summary>
    </member>
    <member name="T:System.Net.HttpStatusCode">
      <summary>包含为 HTTP 定义的状态代码的值。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Accepted">
      <summary>等效于 HTTP 状态 202。 <see cref="F:System.Net.HttpStatusCode.Accepted" /> 指示请求已被接受做进一步处理。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Ambiguous">
      <summary>等效于 HTTP 状态 300。 <see cref="F:System.Net.HttpStatusCode.Ambiguous" /> 指示请求的信息有多种表示形式。 默认操作是将此状态视为重定向，并遵循与此响应关联的 Location 标头的内容。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadGateway">
      <summary>等效于 HTTP 状态 502。 <see cref="F:System.Net.HttpStatusCode.BadGateway" /> 指示中间代理服务器从另一代理或原始服务器接收到错误响应。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadRequest">
      <summary>等效于 HTTP 状态 400。 <see cref="F:System.Net.HttpStatusCode.BadRequest" /> 指示服务器未能识别请求。 如果没有其他适用的错误，或者不知道准确的错误或错误没有自己的错误代码，则发送 <see cref="F:System.Net.HttpStatusCode.BadRequest" />。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Conflict">
      <summary>等效于 HTTP 状态 409。 <see cref="F:System.Net.HttpStatusCode.Conflict" /> 指示由于服务器上的冲突而未能执行请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Continue">
      <summary>等效于 HTTP 状态 100。 <see cref="F:System.Net.HttpStatusCode.Continue" /> 指示客户端可能继续其请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Created">
      <summary>等效于 HTTP 状态 201。 <see cref="F:System.Net.HttpStatusCode.Created" /> 指示请求导致在响应被发送前创建新资源。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ExpectationFailed">
      <summary>等效于 HTTP 状态 417。 <see cref="F:System.Net.HttpStatusCode.ExpectationFailed" /> 指示服务器未能符合 Expect 头中给定的预期值。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Forbidden">
      <summary>等效于 HTTP 状态 403。 <see cref="F:System.Net.HttpStatusCode.Forbidden" /> 指示服务器拒绝满足请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Found">
      <summary>等效于 HTTP 状态 302。 <see cref="F:System.Net.HttpStatusCode.Found" /> 指示请求的信息位于 Location 头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 头。 原始请求方法为 POST 时，重定向的请求将使用 GET 方法。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.GatewayTimeout">
      <summary>等效于 HTTP 状态 504。 <see cref="F:System.Net.HttpStatusCode.GatewayTimeout" /> 指示中间代理服务器在等待来自另一个代理或原始服务器的响应时已超时。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Gone">
      <summary>等效于 HTTP 状态 410。 <see cref="F:System.Net.HttpStatusCode.Gone" /> 指示请求的资源不再可用。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.HttpVersionNotSupported">
      <summary>等效于 HTTP 状态 505。 <see cref="F:System.Net.HttpStatusCode.HttpVersionNotSupported" /> 指示服务器不支持请求的 HTTP 版本。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InternalServerError">
      <summary>等效于 HTTP 状态 500。 <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> 指示服务器上发生了一般错误。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LengthRequired">
      <summary>等效于 HTTP 状态 411。 <see cref="F:System.Net.HttpStatusCode.LengthRequired" /> 指示缺少必需的 Content-length 头。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MethodNotAllowed">
      <summary>等效于 HTTP 状态 405。 <see cref="F:System.Net.HttpStatusCode.MethodNotAllowed" /> 指示请求的资源上不允许请求方法（POST 或 GET）。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Moved">
      <summary>等效于 HTTP 状态 301。 <see cref="F:System.Net.HttpStatusCode.Moved" /> 指示请求的信息已移到 Location 头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 头。 原始请求方法为 POST 时，重定向的请求将使用 GET 方法。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MovedPermanently">
      <summary>等效于 HTTP 状态 301。 <see cref="F:System.Net.HttpStatusCode.MovedPermanently" /> 指示请求的信息已移到 Location 头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 头。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultipleChoices">
      <summary>等效于 HTTP 状态 300。 <see cref="F:System.Net.HttpStatusCode.MultipleChoices" /> 指示请求的信息有多种表示形式。 默认操作是将此状态视为重定向，并遵循与此响应关联的 Location 标头的内容。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NoContent">
      <summary>等效于 HTTP 状态 204。 <see cref="F:System.Net.HttpStatusCode.NoContent" /> 指示已成功处理请求并且响应已被设定为无内容。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NonAuthoritativeInformation">
      <summary>等效于 HTTP 状态 203。 <see cref="F:System.Net.HttpStatusCode.NonAuthoritativeInformation" /> 指示返回的元信息来自缓存副本而不是原始服务器，因此可能不正确。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotAcceptable">
      <summary>等效于 HTTP 状态 406。 <see cref="F:System.Net.HttpStatusCode.NotAcceptable" /> 指示客户端已用 Accept 头指示将不接受资源的任何可用表示形式。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotFound">
      <summary>等效于 HTTP 状态 404。 <see cref="F:System.Net.HttpStatusCode.NotFound" /> 指示请求的资源不在服务器上。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotImplemented">
      <summary>等效于 HTTP 状态 501。 <see cref="F:System.Net.HttpStatusCode.NotImplemented" /> 指示服务器不支持请求的函数。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotModified">
      <summary>等效于 HTTP 状态 304。 <see cref="F:System.Net.HttpStatusCode.NotModified" /> 指示客户端的缓存副本是最新的。 未传输此资源的内容。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.OK">
      <summary>等效于 HTTP 状态 200。 <see cref="F:System.Net.HttpStatusCode.OK" /> 指示请求成功，且请求的信息包含在响应中。 这是最常接收的状态代码。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PartialContent">
      <summary>等效于 HTTP 状态 206。 <see cref="F:System.Net.HttpStatusCode.PartialContent" /> 指示响应是包括字节范围的 GET 请求所请求的部分响应。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PaymentRequired">
      <summary>等效于 HTTP 状态 402。 保留 <see cref="F:System.Net.HttpStatusCode.PaymentRequired" /> 以供将来使用。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionFailed">
      <summary>等效于 HTTP 状态 412。 <see cref="F:System.Net.HttpStatusCode.PreconditionFailed" /> 指示为此请求设置的条件失败，且无法执行此请求。 条件是用条件请求标头（如 If-Match、If-None-Match 或 If-Unmodified-Since）设置的。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired">
      <summary>等效于 HTTP 状态 407。 <see cref="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired" /> 指示请求的代理要求身份验证。 Proxy-authenticate 头包含如何执行身份验证的详细信息。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Redirect">
      <summary>等效于 HTTP 状态 302。 <see cref="F:System.Net.HttpStatusCode.Redirect" /> 指示请求的信息位于 Location 头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 头。 原始请求方法为 POST 时，重定向的请求将使用 GET 方法。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectKeepVerb">
      <summary>等效于 HTTP 状态 307。 <see cref="F:System.Net.HttpStatusCode.RedirectKeepVerb" /> 指示请求信息位于 Location 头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 头。 原始请求方法为 POST 时，重定向的请求还将使用 POST 方法。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectMethod">
      <summary>等效于 HTTP 状态 303。 作为 POST 的结果，<see cref="F:System.Net.HttpStatusCode.RedirectMethod" /> 将客户端自动重定向到 Location 头中指定的 URI。 用 GET 生成对 Location 标头所指定的资源的请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
      <summary>等效于 HTTP 状态 416。 <see cref="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable" /> 指示无法返回从资源请求的数据范围，因为范围的开头在资源的开头之前，或因为范围的结尾在资源的结尾之后。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestEntityTooLarge">
      <summary>等效于 HTTP 状态 413。 <see cref="F:System.Net.HttpStatusCode.RequestEntityTooLarge" /> 指示请求太大，服务器无法处理。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestTimeout">
      <summary>等效于 HTTP 状态 408。 <see cref="F:System.Net.HttpStatusCode.RequestTimeout" /> 指示客户端没有在服务器期望请求的时间内发送请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestUriTooLong">
      <summary>等效于 HTTP 状态 414。 <see cref="F:System.Net.HttpStatusCode.RequestUriTooLong" /> 指示 URI 太长。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ResetContent">
      <summary>等效于 HTTP 状态 205。 <see cref="F:System.Net.HttpStatusCode.ResetContent" /> 指示客户端应重置（或重新加载）当前资源。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SeeOther">
      <summary>等效于 HTTP 状态 303。 作为 POST 的结果，<see cref="F:System.Net.HttpStatusCode.SeeOther" /> 将客户端自动重定向到 Location 头中指定的 URI。 用 GET 生成对 Location 标头所指定的资源的请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ServiceUnavailable">
      <summary>等效于 HTTP 状态 503。 <see cref="F:System.Net.HttpStatusCode.ServiceUnavailable" /> 指示服务器暂时不可用，通常是由于过多加载或维护。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SwitchingProtocols">
      <summary>等效于 HTTP 状态 101。 <see cref="F:System.Net.HttpStatusCode.SwitchingProtocols" /> 指示正在更改协议版本或协议。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TemporaryRedirect">
      <summary>等效于 HTTP 状态 307。 <see cref="F:System.Net.HttpStatusCode.TemporaryRedirect" /> 指示请求信息位于 Location 头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 头。 原始请求方法为 POST 时，重定向的请求还将使用 POST 方法。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unauthorized">
      <summary>等效于 HTTP 状态 401。 <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> 指示请求的资源要求身份验证。 WWW-Authenticate 头包含如何执行身份验证的详细信息。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnsupportedMediaType">
      <summary>等效于 HTTP 状态 415。 <see cref="F:System.Net.HttpStatusCode.UnsupportedMediaType" /> 指示请求是不支持的类型。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unused">
      <summary>等效于 HTTP 状态 306。 <see cref="F:System.Net.HttpStatusCode.Unused" /> 是未完全指定的 HTTP/1.1 规范的建议扩展。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UpgradeRequired">
      <summary>等效于 HTTP 状态 426。 <see cref="F:System.Net.HttpStatusCode.UpgradeRequired" /> 指示客户端应切换为诸如 TLS/1.0 之类的其他协议。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UseProxy">
      <summary>等效于 HTTP 状态 305。 <see cref="F:System.Net.HttpStatusCode.UseProxy" /> 指示请求应使用位于 Location 头中指定的 URI 的代理服务器。</summary>
    </member>
    <member name="T:System.Net.ICredentials">
      <summary>提供用于为 Web 客户端身份验证检索凭据的基身份验证接口。</summary>
    </member>
    <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <summary>返回与指定的 URI 关联的 <see cref="T:System.Net.NetworkCredential" /> 对象，以及身份验证类型。</summary>
      <returns>与指定的 URI 和身份验证类型关联的 <see cref="T:System.Net.NetworkCredential" />；如果没有可用的凭据，则为 null。</returns>
      <param name="uri">客户端为其提供身份验证的 <see cref="T:System.Uri" />。</param>
      <param name="authType">
        <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> 属性中定义的身份验证类型。</param>
    </member>
    <member name="T:System.Net.ICredentialsByHost">
      <summary>提供用于检索主机、端口或身份验证类型的凭据的接口。</summary>
    </member>
    <member name="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)">
      <summary>返回指定的主机、端口和身份验证协议的凭据。</summary>
      <returns>指定的主机、端口和身份验证协议的 <see cref="T:System.Net.NetworkCredential" />；如果指定的主机、端口和身份验证协议没有可用的凭据，则为 null。</returns>
      <param name="host">对客户端进行身份验证的主机。</param>
      <param name="port">客户端与之通信的 <paramref name="host " /> 上的端口。</param>
      <param name="authenticationType">身份验证协议。</param>
    </member>
    <member name="T:System.Net.IWebProxy">
      <summary>提供基接口以实现对 <see cref="T:System.Net.WebRequest" /> 类的代理访问。</summary>
    </member>
    <member name="P:System.Net.IWebProxy.Credentials">
      <summary>要提交给代理服务器进行身份验证的凭据。</summary>
      <returns>
        <see cref="T:System.Net.ICredentials" /> 实例，它包含对代理服务器请求进行身份验证所需的凭据。</returns>
    </member>
    <member name="M:System.Net.IWebProxy.GetProxy(System.Uri)">
      <summary>返回代理的 URI。</summary>
      <returns>
        <see cref="T:System.Uri" /> 实例，它包含用于与 <paramref name="destination" /> 联系的代理的 URI。</returns>
      <param name="destination">
        <see cref="T:System.Uri" />，指定请求的 Internet 资源。</param>
    </member>
    <member name="M:System.Net.IWebProxy.IsBypassed(System.Uri)">
      <summary>指示代理不应用于指定的主机。</summary>
      <returns>如果代理服务器不应用于 <paramref name="host" />，则为 true；否则，为 false。</returns>
      <param name="host">要检查代理使用情况的主机的 <see cref="T:System.Uri" />。</param>
    </member>
    <member name="T:System.Net.NetworkCredential">
      <summary>为基于密码的身份验证方案（如基本、简要、NTLM 和 Kerberos 身份验证）提供凭据。</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor">
      <summary>初始化 <see cref="T:System.Net.NetworkCredential" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <summary>用指定的用户名和密码初始化 <see cref="T:System.Net.NetworkCredential" /> 类的新实例。</summary>
      <param name="userName">与凭据关联的用户名。</param>
      <param name="password">与凭据关联的用户名的密码。</param>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <summary>用指定的用户名、密码和域初始化 <see cref="T:System.Net.NetworkCredential" /> 类的新实例。</summary>
      <param name="userName">与凭据关联的用户名。</param>
      <param name="password">与凭据关联的用户名的密码。</param>
      <param name="domain">与这些凭据关联的域。</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Domain">
      <summary>获取或设置验证凭据的域名或计算机名。</summary>
      <returns>与凭据关联的域名。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)">
      <summary>针对指定的主机、端口和身份验证类型返回 <see cref="T:System.Net.NetworkCredential" /> 类的实例。</summary>
      <returns>指定的主机、端口和身份验证协议的 <see cref="T:System.Net.NetworkCredential" />；如果指定的主机、端口和身份验证协议没有可用的凭据，则为 null。</returns>
      <param name="host">对该客户端进行身份验证的主机。</param>
      <param name="port">与客户端通信的 <paramref name="host" /> 上的端口。</param>
      <param name="authenticationType">
        <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> 属性中定义的所请求的身份验证类型。</param>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <summary>针对指定的统一资源标识符 (URI) 和身份验证类型返回 <see cref="T:System.Net.NetworkCredential" /> 类的实例。</summary>
      <returns>
        <see cref="T:System.Net.NetworkCredential" /> 对象。</returns>
      <param name="uri">客户端为其提供身份验证的 URI。</param>
      <param name="authType">
        <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> 属性中定义的所请求的身份验证类型。</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Password">
      <summary>获取或设置与凭据关联的用户名的密码。</summary>
      <returns>与该凭据关联的密码。 如果已通过设置为 null 的 <paramref name="password" /> 参数初始化此 <see cref="T:System.Net.NetworkCredential" /> 实例，则 <see cref="P:System.Net.NetworkCredential.Password" /> 属性将返回空字符串。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.NetworkCredential.UserName">
      <summary>获取或设置与凭据关联的用户名。</summary>
      <returns>与凭据关联的用户名。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.TransportContext">
      <summary>
        <see cref="T:System.Net.TransportContext" /> 类提供有关基础传输层的附加上下文。</summary>
    </member>
  </members>
</doc>