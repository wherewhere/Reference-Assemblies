<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationSchemes">
      <summary>Указывает протоколы для проверки подлинности.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Anonymous">
      <summary>Указывает анонимную проверку подлинности.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Basic">
      <summary>Определяет обычную проверку подлинности.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Digest">
      <summary>Определяет дайджест-проверку подлинности.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.IntegratedWindowsAuthentication">
      <summary>Указывает проверку подлинности Windows.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Negotiate">
      <summary>Проводит согласование с клиентом для определения схемы проверки подлинности. Если и клиент, и сервер поддерживают Kerberos, используется именно этот протокол; в противном случае используется NTLM.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.None">
      <summary>Проверка подлинности не разрешена. Клиент, запрашивающий объект <see cref="T:System.Net.HttpListener" /> с установленным приведенным флагом, всегда будет получать состояние 403 Запрещено. Используйте этот флаг, если ресурс не должен предоставляться клиенту.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Ntlm">
      <summary>Указывает проверку подлинности NTLM.</summary>
    </member>
    <member name="T:System.Net.Cookie">
      <summary>Предоставляет набор методов и свойств, используемых для управления файлами cookie. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.Cookie" />.</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.Cookie" /> с заданными объектами <see cref="P:System.Net.Cookie.Name" /> и <see cref="P:System.Net.Cookie.Value" />.</summary>
      <param name="name">Имя <see cref="T:System.Net.Cookie" />. Внутри <paramref name="name" /> не должны использоваться следующие символы: знак равенства, точка с запятой, запятая, символ перехода на новую строку (\n), символ возврата каретки (\r), символ табуляции (\t) и пробел. Знак доллара ("$") не может быть первым знаком.</param>
      <param name="value">Значение <see cref="T:System.Net.Cookie" />. Внутри <paramref name="value" /> не должны использоваться следующие знаки: точка с запятой, запятая.</param>
      <exception cref="T:System.Net.CookieException">Значение параметра <paramref name="name" /> — null.  -или-  Длина параметра <paramref name="name" /> равна нулю.  -или-  Параметр <paramref name="name" /> содержит недопустимый знак. -или-  Параметр <paramref name="value" /> имеет значение null. –или–  Параметр <paramref name="value" /> содержит строку, не заключенную в кавычки и содержащую недопустимый символ.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.Cookie" /> с заданными объектами <see cref="P:System.Net.Cookie.Name" />, <see cref="P:System.Net.Cookie.Value" /> и <see cref="P:System.Net.Cookie.Path" />.</summary>
      <param name="name">Имя <see cref="T:System.Net.Cookie" />. Внутри <paramref name="name" /> не должны использоваться следующие символы: знак равенства, точка с запятой, запятая, символ перехода на новую строку (\n), символ возврата каретки (\r), символ табуляции (\t) и пробел. Знак доллара ("$") не может быть первым знаком.</param>
      <param name="value">Значение <see cref="T:System.Net.Cookie" />. Внутри <paramref name="value" /> не должны использоваться следующие знаки: точка с запятой, запятая.</param>
      <param name="path">Подмножество URI на исходном сервере, к которому применяется <see cref="T:System.Net.Cookie" />. Значение по умолчанию — "/".</param>
      <exception cref="T:System.Net.CookieException">Значение параметра <paramref name="name" /> — null.  -или-  Длина параметра <paramref name="name" /> равна нулю.  -или-  Параметр <paramref name="name" /> содержит недопустимый знак. -или-  Параметр <paramref name="value" /> имеет значение null. –или–  Параметр <paramref name="value" /> содержит строку, не заключенную в кавычки и содержащую недопустимый символ.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.Cookie" /> с заданными объектами <see cref="P:System.Net.Cookie.Name" />, <see cref="P:System.Net.Cookie.Value" />, <see cref="P:System.Net.Cookie.Path" /> и <see cref="P:System.Net.Cookie.Domain" />.</summary>
      <param name="name">Имя <see cref="T:System.Net.Cookie" />. Внутри <paramref name="name" /> не должны использоваться следующие символы: знак равенства, точка с запятой, запятая, символ перехода на новую строку (\n), символ возврата каретки (\r), символ табуляции (\t) и пробел. Знак доллара ("$") не может быть первым знаком.</param>
      <param name="value">Значение объекта <see cref="T:System.Net.Cookie" />. Внутри <paramref name="value" /> не должны использоваться следующие знаки: точка с запятой, запятая.</param>
      <param name="path">Подмножество URI на исходном сервере, к которому применяется <see cref="T:System.Net.Cookie" />. Значение по умолчанию — "/".</param>
      <param name="domain">Дополнительный Интернет-домен, для которого действует этот класс <see cref="T:System.Net.Cookie" />. Значением по умолчанию является узел, с которого получен этот объект <see cref="T:System.Net.Cookie" />.</param>
      <exception cref="T:System.Net.CookieException">Значение параметра <paramref name="name" /> — null.  -или-  Длина параметра <paramref name="name" /> равна нулю.  -или-  Параметр <paramref name="name" /> содержит недопустимый знак. -или-  Параметр <paramref name="value" /> имеет значение null. –или–  Параметр <paramref name="value" /> содержит строку, не заключенную в кавычки и содержащую недопустимый символ.</exception>
    </member>
    <member name="P:System.Net.Cookie.Comment">
      <summary>Возвращает или задает комментарий, который сервер может добавлять к <see cref="T:System.Net.Cookie" />.</summary>
      <returns>Дополнительный комментарий к предполагаемому использованию документа для этого класса <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.CommentUri">
      <summary>Возвращает или задает комментарий URI, который сервер может предоставлять с <see cref="T:System.Net.Cookie" />.</summary>
      <returns>Дополнительный комментарий, описывающий использование по назначению ссылки URI для этого объекта <see cref="T:System.Net.Cookie" />. Значение должно соответствовать формату URI.</returns>
    </member>
    <member name="P:System.Net.Cookie.Discard">
      <summary>Возвращает или задает флаг сброса, задаваемый сервером.</summary>
      <returns>Значение true, если клиент должен сбросить <see cref="T:System.Net.Cookie" /> в конце текущего сеанса; в противном случае — false. Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Net.Cookie.Domain">
      <summary>Возвращает или задает URI, для которого действует <see cref="T:System.Net.Cookie" />.</summary>
      <returns>URI, для которого действует <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="M:System.Net.Cookie.Equals(System.Object)">
      <summary>Переопределяет метод <see cref="M:System.Object.Equals(System.Object)" />.</summary>
      <returns>Возвращает значение true, если класс <see cref="T:System.Net.Cookie" /> равен <paramref name="comparand" />. Два экземпляра <see cref="T:System.Net.Cookie" /> равны, если их свойства <see cref="P:System.Net.Cookie.Name" />, <see cref="P:System.Net.Cookie.Value" />, <see cref="P:System.Net.Cookie.Path" />, <see cref="P:System.Net.Cookie.Domain" /> и <see cref="P:System.Net.Cookie.Version" /> равны. При сравнении строк <see cref="P:System.Net.Cookie.Name" /> и <see cref="P:System.Net.Cookie.Domain" /> не учитывается регистр.</returns>
      <param name="comparand">Ссылка на класс <see cref="T:System.Net.Cookie" />.</param>
    </member>
    <member name="P:System.Net.Cookie.Expired">
      <summary>Возвращает или задает текущее состояние <see cref="T:System.Net.Cookie" />.</summary>
      <returns>Значение true, если класс <see cref="T:System.Net.Cookie" /> прекратил действие, в противном случае — false. Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Net.Cookie.Expires">
      <summary>Возвращает или задает для <see cref="T:System.Net.Cookie" /> дату и время окончания действия в виде <see cref="T:System.DateTime" />.</summary>
      <returns>Дата и время окончания действия <see cref="T:System.Net.Cookie" /> в виде экземпляра <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Net.Cookie.GetHashCode">
      <summary>Переопределяет метод <see cref="M:System.Object.GetHashCode" />.</summary>
      <returns>Хэш-код 32-разрядного целого числа со знаком для этого экземпляра класса.</returns>
    </member>
    <member name="P:System.Net.Cookie.HttpOnly">
      <summary>Определяет, может ли получить доступ к файлу cookie скрипт страницы или другое активное содержимое.</summary>
      <returns>Логическое значение, с помощью которого определяется, может ли получить доступ к файлу cookie скрипт страницы или другое активное содержимое.</returns>
    </member>
    <member name="P:System.Net.Cookie.Name">
      <summary>Возвращает или задает имя для <see cref="T:System.Net.Cookie" />.</summary>
      <returns>Имя для <see cref="T:System.Net.Cookie" />.</returns>
      <exception cref="T:System.Net.CookieException">Значение, указанное для операции задания, является null или пустой строкой (""). - или - Значение, указанное для операции задания, содержит недопустимый символ. Внутри свойства <see cref="P:System.Net.Cookie.Name" /> не должны использоваться следующие символы: знак равенства, точка с запятой, запятая, символ перехода на новую строку (\n), символ возврата каретки (\r), символ табуляции (\t) и пробел. Знак доллара ("$") не может быть первым знаком.</exception>
    </member>
    <member name="P:System.Net.Cookie.Path">
      <summary>Возвращает или задает идентификаторы URI, к которым применяется <see cref="T:System.Net.Cookie" />.</summary>
      <returns>URI, к которым применяется <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Port">
      <summary>Возвращает или задает список TCP-портов, к которым применяется класс <see cref="T:System.Net.Cookie" />.</summary>
      <returns>Список TCP-портов, к которым применяется класс <see cref="T:System.Net.Cookie" />.</returns>
      <exception cref="T:System.Net.CookieException">Значение, указанное для операции задания, может быть проанализировано или заключено в двойные кавычки.</exception>
    </member>
    <member name="P:System.Net.Cookie.Secure">
      <summary>Возвращает или задает уровень защиты класса <see cref="T:System.Net.Cookie" />.</summary>
      <returns>Значение true, если клиент должен только вернуть файл cookie в последующих запросах, при условии что запросы используют HTTPS; в противном случае — значение false. Значение по умолчанию — false.</returns>
    </member>
    <member name="P:System.Net.Cookie.TimeStamp">
      <summary>Возвращает время выпуска файла cookie в виде <see cref="T:System.DateTime" />.</summary>
      <returns>Время выпуска файла cookie в виде <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Net.Cookie.ToString">
      <summary>Переопределяет метод <see cref="M:System.Object.ToString" />.</summary>
      <returns>Возвращает строковое представление объекта этого класса <see cref="T:System.Net.Cookie" />, пригодное для включения в заголовок запроса HTTP Cookie:.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Cookie.Value">
      <summary>Возвращает или задает свойство <see cref="P:System.Net.Cookie.Value" /> объекта <see cref="T:System.Net.Cookie" />.</summary>
      <returns>Тип <see cref="P:System.Net.Cookie.Value" /> буфера <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Version">
      <summary>Возвращает или задает версию сопровождения HTTP-состояния, которому соответствует файл cookie.</summary>
      <returns>Версия сопровождения HTTP-состояния, которому соответствует файл cookie.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Указано неразрешенное значение версии.</exception>
    </member>
    <member name="T:System.Net.CookieCollection">
      <summary>Предоставляет контейнер коллекции для экземпляров класса <see cref="T:System.Net.Cookie" />.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.CookieCollection" />.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
      <summary>Добавляет <see cref="T:System.Net.Cookie" /> в <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="cookie">Класс <see cref="T:System.Net.Cookie" />, который требуется добавить в класс <see cref="T:System.Net.CookieCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="cookie" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
      <summary>Добавляет данные <see cref="T:System.Net.CookieCollection" /> в текущий экземпляр.</summary>
      <param name="cookies">Добавляемый объект <see cref="T:System.Net.CookieCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="cookies" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Net.CookieCollection.Count">
      <summary>Возвращает число файлов cookie, содержащихся в коллекции <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns>Число файлов cookie, содержащихся в классе <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.GetEnumerator">
      <summary>Возвращает перечислитель, который может перебирать элементы <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns>Экземпляр реализации интерфейса <see cref="T:System.Collections.IEnumerator" />, который может перебирать элементы в коллекции <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.String)">
      <summary>Возвращает класс <see cref="T:System.Net.Cookie" /> с указанным именем из класса <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns>Класс <see cref="T:System.Net.Cookie" /> с указанным именем из класса <see cref="T:System.Net.CookieCollection" />.</returns>
      <param name="name">Имя искомого класса <see cref="T:System.Net.Cookie" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">Одномерный массив, куда копируются элементы из данной коллекции. Индексация в массиве должна вестись с нуля.</param>
      <param name="index">Индекс (с нуля) в массиве <paramref name="array" />, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Net.CookieCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>Значение true, если доступ к коллекции синхронизирован (потокобезопасен); в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.System#Collections#ICollection#SyncRoot">
      <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>Объект, который можно использовать для синхронизации доступа к коллекции.</returns>
    </member>
    <member name="T:System.Net.CookieContainer">
      <summary>Предоставляет контейнер для коллекции объектов <see cref="T:System.Net.CookieCollection" />.</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.CookieContainer" />.</summary>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
      <summary>Добавляет экземпляр <see cref="T:System.Net.Cookie" /> в <see cref="T:System.Net.CookieContainer" /> для определенного URI.</summary>
      <param name="uri">Универсальный код ресурса (URI) объекта <see cref="T:System.Net.Cookie" />, добавляемого в <see cref="T:System.Net.CookieContainer" />.</param>
      <param name="cookie">Объект <see cref="T:System.Net.Cookie" />, добавляемый в <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение <paramref name="uri" /> равно null или <paramref name="cookie" /> равно null.</exception>
      <exception cref="T:System.Net.CookieException">Значение <paramref name="cookie" /> больше, чем значение <paramref name="maxCookieSize" /> -или-  Домен для <paramref name="cookie" /> не является допустимым URI.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
      <summary>Добавляет данные <see cref="T:System.Net.CookieCollection" /> в <see cref="T:System.Net.CookieContainer" /> для определенного URI.</summary>
      <param name="uri">URI объекта <see cref="T:System.Net.CookieCollection" />, который должен добавляться в <see cref="T:System.Net.CookieContainer" />.</param>
      <param name="cookies">Объект <see cref="T:System.Net.CookieCollection" />, добавляемый в <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="cookies" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Домен для одного из файлов cookie в <paramref name="cookies" /> указан как null.</exception>
      <exception cref="T:System.Net.CookieException">Один из файлов cookie в <paramref name="cookies" /> содержит недопустимый домен.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.CookieContainer.Capacity">
      <summary>Возвращает и задает количество экземпляров <see cref="T:System.Net.Cookie" />, которое может храниться в <see cref="T:System.Net.CookieContainer" />.</summary>
      <returns>Количество экземпляров <see cref="T:System.Net.Cookie" />, которое может храниться в <see cref="T:System.Net.CookieContainer" />. Это строгое ограничение и не может превышаться путем добавления <see cref="T:System.Net.Cookie" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="Capacity" /> меньше или равно нулю или (значение меньше <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> и <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> не равно <see cref="F:System.Int32.MaxValue" />).</exception>
    </member>
    <member name="P:System.Net.CookieContainer.Count">
      <summary>Возвращает количество экземпляров <see cref="T:System.Net.Cookie" />, хранящихся в текущий момент в <see cref="T:System.Net.CookieContainer" />.</summary>
      <returns>Количество экземпляров <see cref="T:System.Net.Cookie" />, хранящихся в текущий момент в <see cref="T:System.Net.CookieContainer" />. Это общее число экземпляров <see cref="T:System.Net.Cookie" /> во всех доменах.</returns>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLengthLimit">
      <summary>Представляет используемый по умолчанию максимальный размер в байтах экземпляров <see cref="T:System.Net.Cookie" />, которые могут храниться в <see cref="T:System.Net.CookieContainer" />. Это поле является константой.</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLimit">
      <summary>Представляет используемое по умолчанию максимальное число экземпляров <see cref="T:System.Net.Cookie" />, которые могут храниться в <see cref="T:System.Net.CookieContainer" />. Это поле является константой.</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit">
      <summary>Представляет используемое по умолчанию максимальное число экземпляров <see cref="T:System.Net.Cookie" />, которые могут храниться в <see cref="T:System.Net.CookieContainer" /> для каждого домена. Это поле является константой.</summary>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
      <summary>Возвращает заголовок HTTP-cookie, содержащий файлы cookie HTTP, которые представляют экземпляры <see cref="T:System.Net.Cookie" />, связанные с определенным URI.</summary>
      <returns>Заголовок HTTP cookie со строками, представляющими экземпляры <see cref="T:System.Net.Cookie" />, разделяется точками с запятыми.</returns>
      <param name="uri">URI требуемых экземпляров <see cref="T:System.Net.Cookie" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="uri" /> имеет значение null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookies(System.Uri)">
      <summary>Возвращает коллекцию <see cref="T:System.Net.CookieCollection" />, содержащую экземпляры <see cref="T:System.Net.Cookie" />, связанные с указанным URI.</summary>
      <returns>Коллекция <see cref="T:System.Net.CookieCollection" />, содержащая экземпляры <see cref="T:System.Net.Cookie" />, связанные с указанным URI.</returns>
      <param name="uri">URI требуемых экземпляров <see cref="T:System.Net.Cookie" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="uri" /> имеет значение null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.CookieContainer.MaxCookieSize">
      <summary>Представляет наибольшую допустимую длину <see cref="T:System.Net.Cookie" />.</summary>
      <returns>Наибольшая допустимая длина <see cref="T:System.Net.Cookie" />, выраженная в байтах.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="MaxCookieSize" /> меньше или равно нулю.</exception>
    </member>
    <member name="P:System.Net.CookieContainer.PerDomainCapacity">
      <summary>Возвращает и задает количество экземпляров <see cref="T:System.Net.Cookie" />, которое может храниться в <see cref="T:System.Net.CookieContainer" /> для каждого домена.</summary>
      <returns>Допустимое количество экземпляров <see cref="T:System.Net.Cookie" />, приходящихся на каждый домен.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="PerDomainCapacity" /> меньше или равно нулю.  -или-  (Параметр <paramref name="(PerDomainCapacity" /> больше максимально допустимого числа экземпляров cookie, равного 300, и не равен <see cref="F:System.Int32.MaxValue" />).</exception>
    </member>
    <member name="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
      <summary>Добавляет экземпляры <see cref="T:System.Net.Cookie" /> для одного или нескольких файлов cookie из заголовка HTTP-cookie в класс <see cref="T:System.Net.CookieContainer" /> для определенного URI.</summary>
      <param name="uri">URI объекта <see cref="T:System.Net.CookieCollection" />.</param>
      <param name="cookieHeader">Данные возвращаемого HTTP-сервером заголовка HTTP set-cookie, содержащего экземпляры <see cref="T:System.Net.Cookie" />, разделенные запятыми.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="uri" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="cookieHeader" /> имеет значение null.</exception>
      <exception cref="T:System.Net.CookieException">Один из файлов cookie является недопустимым.  -или-  При добавлении одного из файлов cookie в контейнер произошла ошибка.</exception>
    </member>
    <member name="T:System.Net.CookieException">
      <summary>Исключение, которое создается, когда появляется ошибка при добавлении <see cref="T:System.Net.Cookie" /> в <see cref="T:System.Net.CookieContainer" />.</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.CookieException" />.</summary>
    </member>
    <member name="T:System.Net.CredentialCache">
      <summary>Предоставляет хранилище для множества учетных данных.</summary>
    </member>
    <member name="M:System.Net.CredentialCache.#ctor">
      <summary>Создание нового экземпляра класса <see cref="T:System.Net.CredentialCache" />.</summary>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)">
      <summary>Добавляет экземпляр <see cref="T:System.Net.NetworkCredential" /> для использования вместе с SMTP в кэш учетных данных и связывает этот экземпляр с узелом, портом и протоколом проверки подлинности. Учетные данные, добавленные с помощью этого метода, допустимы только для SMTP. Этот метод не работает с запросами HTTP или FTP.</summary>
      <param name="host">Строка <see cref="T:System.String" />, которая указывает компьютер.</param>
      <param name="port">Значение <see cref="T:System.Int32" />, которое обозначает порт, через который следует подключаться к <paramref name="host" />.</param>
      <param name="authenticationType">Строка <see cref="T:System.String" />, указывающая схему проверку подлинности, используемую при подключении к <paramref name="host" /> с использованием <paramref name="cred" />. См. примечания.</param>
      <param name="credential">Класс <see cref="T:System.Net.NetworkCredential" />, который должен добавляться в кэш учетных данных.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="host" /> имеет значение null.  -или- Параметр <paramref name="authType" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="authType" /> не является приемлемым значением. См. примечания.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="port" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)">
      <summary>Добавляет экземпляр <see cref="T:System.Net.NetworkCredential" /> в кэш учетных данных для использования с протоколами, отличными от SMTP, и связывает его с префиксом URI и протоколом проверки подлинности.</summary>
      <param name="uriPrefix">Параметр <see cref="T:System.Uri" />, определяющий префикс URI ресурсов, к которым предоставляется доступ посредством учетных данных.</param>
      <param name="authType">Схема проверки подлинности, которая используется ресурсом, названным в <paramref name="uriPrefix" />.</param>
      <param name="cred">Класс <see cref="T:System.Net.NetworkCredential" />, который должен добавляться в кэш учетных данных.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="uriPrefix" /> имеет значение null.  -или-  Параметр <paramref name="authType" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Такие же учетные данные добавляются несколько раз.</exception>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultCredentials">
      <summary>Получает системные учетные данные приложения.</summary>
      <returns>Значение <see cref="T:System.Net.ICredentials" />, которое представляет системные учетные данные приложения.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="USERNAME" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultNetworkCredentials">
      <summary>Возвращает сетевые учетные данные текущего контекста безопасности.</summary>
      <returns>Объект <see cref="T:System.Net.NetworkCredential" />, представляющий сетевые учетные данные текущего пользователя или приложения.</returns>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)">
      <summary>Возвращает экземпляр <see cref="T:System.Net.NetworkCredential" />, связанный с заданными узелом, портом и протоколом проверки подлинности.</summary>
      <returns>Экземпляр <see cref="T:System.Net.NetworkCredential" /> или, если в кэше нет соответствующих учетных данных, — null.</returns>
      <param name="host">Строка <see cref="T:System.String" />, которая указывает компьютер.</param>
      <param name="port">Значение <see cref="T:System.Int32" />, которое обозначает порт, через который следует подключаться к <paramref name="host" />.</param>
      <param name="authenticationType">Строка <see cref="T:System.String" />, указывающая схему проверку подлинности, используемую при подключении к <paramref name="host" />. См. примечания.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="host" /> имеет значение null.  -или-  Параметр <paramref name="authType" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="authType" /> не является приемлемым значением. См. примечания. -или- Параметр <paramref name="host" /> равен пустой строке ("").</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="port" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)">
      <summary>Возвращает экземпляр <see cref="T:System.Net.NetworkCredential" />, связанный с указанным URI или узелом, а также с типом проверки подлинности.</summary>
      <returns>Экземпляр <see cref="T:System.Net.NetworkCredential" /> или, если в кэше нет соответствующих учетных данных, — null.</returns>
      <param name="uriPrefix">Параметр <see cref="T:System.Uri" />, определяющий префикс URI ресурсов, к которым предоставляется доступ посредством учетных данных.</param>
      <param name="authType">Схема проверки подлинности, которая используется ресурсом, названным в <paramref name="uriPrefix" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="uriPrefix" /> или <paramref name="authType" /> — null.</exception>
    </member>
    <member name="M:System.Net.CredentialCache.GetEnumerator">
      <summary>Возвращает перечислитель, с помощью которого можно перебирать все элементы экземпляра коллекции <see cref="T:System.Net.CredentialCache" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Net.CredentialCache" />.</returns>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)">
      <summary>Удаляет экземпляр <see cref="T:System.Net.NetworkCredential" /> из кэша, если он связан с указанным узелом, портом и протоколом проверки подлинности.</summary>
      <param name="host">Строка <see cref="T:System.String" />, которая указывает компьютер.</param>
      <param name="port">Значение <see cref="T:System.Int32" />, которое обозначает порт, через который следует подключаться к <paramref name="host" />.</param>
      <param name="authenticationType">Строка <see cref="T:System.String" />, указывающая схему проверку подлинности, используемую при подключении к <paramref name="host" />. См. примечания.</param>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.Uri,System.String)">
      <summary>Удаляет экземпляр <see cref="T:System.Net.NetworkCredential" /> из кэша, если он связан с указанным префиксом URI и протоколом проверки подлинности.</summary>
      <param name="uriPrefix">Параметр <see cref="T:System.Uri" />, определяющий префикс URI ресурсов, для доступа к которым используются учетные данные.</param>
      <param name="authType">Схема проверки подлинности, которая используется узелом, названным в <paramref name="uriPrefix" />.</param>
    </member>
    <member name="T:System.Net.DecompressionMethods">
      <summary>Представляет формат кодирования сжатия и распаковки файлов, который будет использоваться для сжатия данных, полученных в ответ на <see cref="T:System.Net.HttpWebRequest" />.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Deflate">
      <summary>Используйте алгоритм сжатия и распаковки Deflate.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.GZip">
      <summary>Используйте алгоритм сжатия и распаковки gZip.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.None">
      <summary>Этот метод не использует сжатия.</summary>
    </member>
    <member name="T:System.Net.HttpStatusCode">
      <summary>Содержит значения кодов состояний, определенных для протокола HTTP.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Accepted">
      <summary>Эквивалент HTTP-состояния 202. Значение <see cref="F:System.Net.HttpStatusCode.Accepted" /> указывает, что запрос принят для дальнейшей обработки.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Ambiguous">
      <summary>Эквивалентен HTTP-состоянию 300. <see cref="F:System.Net.HttpStatusCode.Ambiguous" /> указывает, что запрашиваемые данные имеют несколько представлений. Действие, выполняемое по умолчанию, состоит в перенаправлении и отслеживании данных заголовка Location, связанного с этим ответом.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadGateway">
      <summary>Эквивалент HTTP-состояния 502. Значение <see cref="F:System.Net.HttpStatusCode.BadGateway" /> указывает, что промежуточный прокси-сервер получил неправильный ответ от другого прокси или исходного сервера.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadRequest">
      <summary>Эквивалентен HTTP-состоянию 400. <see cref="F:System.Net.HttpStatusCode.BadRequest" /> указывает, что запрос не может быть воспринят сервером. <see cref="F:System.Net.HttpStatusCode.BadRequest" /> посылается, когда не применима любая другая ошибка или ошибка является неизвестной либо не имеет собственного кода ошибки.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Conflict">
      <summary>Эквивалентен HTTP-состоянию 409. <see cref="F:System.Net.HttpStatusCode.Conflict" /> указывает, что запрос не может быть выполнен из-за конфликта на сервере.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Continue">
      <summary>Эквивалентен HTTP-состоянию 100. <see cref="F:System.Net.HttpStatusCode.Continue" /> указывает, что клиент может продолжать выполнять свой запрос.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Created">
      <summary>Эквивалентен HTTP-состоянию 201. <see cref="F:System.Net.HttpStatusCode.Created" /> указывает, что запрос привел к созданию нового ресурса до того, как был послан ответ.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ExpectationFailed">
      <summary>Эквивалентен HTTP-состоянию 417. <see cref="F:System.Net.HttpStatusCode.ExpectationFailed" /> указывает, что ожидание, заданное в заголовке Expect, не может быть выполнено сервером.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Forbidden">
      <summary>Эквивалентен HTTP-состоянию 403. <see cref="F:System.Net.HttpStatusCode.Forbidden" /> указывает, что сервер отказывается выполнять запрос.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Found">
      <summary>Эквивалентен HTTP-состоянию 302. <see cref="F:System.Net.HttpStatusCode.Found" /> указывает, что запрашиваемые данные расположены по универсальному коду ресурса (URI), заданному в заголовке Location. Действие, выполняемое по умолчанию при получении этого состояния, состоит в отслеживании заголовка Location, связанного с ответом. Если для исходного запроса использовался метод POST, перенаправляемый запрос будет использовать метод GET.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.GatewayTimeout">
      <summary>Эквивалент HTTP-состояния 504. Значение <see cref="F:System.Net.HttpStatusCode.GatewayTimeout" /> указывает, что промежуточный прокси-сервер простаивает, ожидая ответа от другого прокси или исходного сервера.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Gone">
      <summary>Эквивалентен HTTP-состоянию 410. <see cref="F:System.Net.HttpStatusCode.Gone" /> указывает, что запрашиваемый ресурс больше недоступен.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.HttpVersionNotSupported">
      <summary>Эквивалентен HTTP-состоянию 505. <see cref="F:System.Net.HttpStatusCode.HttpVersionNotSupported" /> указывает, что запрашиваемая версия HTTP не поддерживается сервером.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InternalServerError">
      <summary>Эквивалентен HTTP-состоянию 500. <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> указывает, что на сервере произошла общая ошибка.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LengthRequired">
      <summary>Эквивалентен HTTP-состоянию 411. <see cref="F:System.Net.HttpStatusCode.LengthRequired" /> указывает, что требуемый заголовок Content-Length отсутствует.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MethodNotAllowed">
      <summary>Эквивалентен HTTP-состоянию 405. <see cref="F:System.Net.HttpStatusCode.MethodNotAllowed" /> указывает, что метод запроса (POST или GET) не разрешен для запрашиваемого ресурса.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Moved">
      <summary>Эквивалентен HTTP-состоянию 301. <see cref="F:System.Net.HttpStatusCode.Moved" /> указывает, что запрашиваемые данные перемещены по универсальному коду ресурса (URI), заданному в заголовке Location. Действие, выполняемое по умолчанию при получении этого состояния, состоит в отслеживании заголовка Location, связанного с ответом. Если для исходного запроса использовался метод POST, перенаправляемый запрос будет использовать метод GET.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MovedPermanently">
      <summary>Эквивалентен HTTP-состоянию 301. <see cref="F:System.Net.HttpStatusCode.MovedPermanently" /> указывает, что запрашиваемые данные перемещены по универсальному коду ресурса (URI), заданному в заголовке Location. Действие, выполняемое по умолчанию при получении этого состояния, состоит в отслеживании заголовка Location, связанного с ответом.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultipleChoices">
      <summary>Эквивалентен HTTP-состоянию 300. <see cref="F:System.Net.HttpStatusCode.MultipleChoices" /> указывает, что запрашиваемые данные имеют несколько представлений. Действие, выполняемое по умолчанию, состоит в перенаправлении и отслеживании данных заголовка Location, связанного с этим ответом.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NoContent">
      <summary>Эквивалент HTTP-состояния 204. <see cref="F:System.Net.HttpStatusCode.NoContent" /> указывает, что запрос успешно обработан и ответ является преднамеренно пустым.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NonAuthoritativeInformation">
      <summary>Эквивалент HTTP-состояния 203. <see cref="F:System.Net.HttpStatusCode.NonAuthoritativeInformation" /> указывает, что возвращенные метаданные взяты из кэшированной копии вместо исходного сервера и поэтому могут быть неверными.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotAcceptable">
      <summary>Эквивалентен HTTP-состоянию 406. <see cref="F:System.Net.HttpStatusCode.NotAcceptable" /> указывает, что клиент показывает с помощью заголовков Accept, что он не принимает любые из доступных представлений ресурса.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotFound">
      <summary>Эквивалентен HTTP-состоянию 404. <see cref="F:System.Net.HttpStatusCode.NotFound" /> указывает, что запрашиваемый ресурс отсутствует на сервере.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotImplemented">
      <summary>Эквивалентен HTTP-состоянию 501. <see cref="F:System.Net.HttpStatusCode.NotImplemented" /> указывает, что сервер не поддерживает запрашиваемую функцию.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotModified">
      <summary>Эквивалентен HTTP-состоянию 304. <see cref="F:System.Net.HttpStatusCode.NotModified" /> указывает, что клиентская кэшированная копия является самой новой. Данные ресурса не пересылаются.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.OK">
      <summary>Эквивалентен HTTP-состоянию 200. <see cref="F:System.Net.HttpStatusCode.OK" /> указывает, что запрос завершился успешно и запрашиваемые данные находятся в ответе. Это наиболее часто получаемый код состояния.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PartialContent">
      <summary>Эквивалентен HTTP-состоянию 206. Значение <see cref="F:System.Net.HttpStatusCode.PartialContent" /> указывает, что ответ является частичным ответом на запрос GET, содержащий диапазон байтов.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PaymentRequired">
      <summary>Эквивалентен HTTP-состоянию 402. <see cref="F:System.Net.HttpStatusCode.PaymentRequired" /> зарезервирован для дальнейшего использования.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionFailed">
      <summary>Эквивалент HTTP-состояния 412. <see cref="F:System.Net.HttpStatusCode.PreconditionFailed" /> указывает, что условие, установленное для этого запроса, не соблюдено и запрос не может быть выполнен. Условия задаются с помощью заголовков условного запроса, таких как If-Match, If-None-Match или If-Unmodified-Since.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired">
      <summary>Эквивалентен HTTP-состоянию 407. <see cref="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired" /> указывает, что запрашиваемый прокси требует прохождения проверки подлинности. В заголовке Proxy-authenticate подробно излагается порядок выполнения проверки подлинности.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Redirect">
      <summary>Эквивалентен HTTP-состоянию 302. <see cref="F:System.Net.HttpStatusCode.Redirect" /> указывает, что запрашиваемые данные расположены по универсальному коду ресурса (URI), заданному в заголовке Location. Действие, выполняемое по умолчанию при получении этого состояния, состоит в отслеживании заголовка Location, связанного с ответом. Если для исходного запроса использовался метод POST, перенаправляемый запрос будет использовать метод GET.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectKeepVerb">
      <summary>Эквивалентен HTTP-состоянию 307. Значение <see cref="F:System.Net.HttpStatusCode.RedirectKeepVerb" /> указывает, что данные запроса расположены по универсальному коду ресурса (URI), заданному в заголовке Location. Действие, выполняемое по умолчанию при получении этого состояния, состоит в отслеживании заголовка Location, связанного с ответом. Если для исходного запроса использовался метод POST, перенаправляемый запрос будет также использовать метод POST.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectMethod">
      <summary>Эквивалентен HTTP-состоянию 303. Значение <see cref="F:System.Net.HttpStatusCode.RedirectMethod" /> приводит к автоматическому перенаправлению клиента на универсальный код ресурса (URI), заданный в заголовке Location, в результате выполнения запроса POST. Запрос ресурса, задаваемого заголовком Location, выполняется с помощью метода GET.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
      <summary>Эквивалент HTTP-состояния 416. Значение <see cref="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable" /> указывает, что диапазон данных, запрашиваемых из ресурса, не может быть возвращен из-за расположения начала диапазона до начала ресурса или конца диапазона после конца ресурса.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestEntityTooLarge">
      <summary>Эквивалентен HTTP-состоянию 413. <see cref="F:System.Net.HttpStatusCode.RequestEntityTooLarge" /> указывает, что запрос слишком велик для сервера, чтобы быть обработанным.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestTimeout">
      <summary>Эквивалентен HTTP-состоянию 408. <see cref="F:System.Net.HttpStatusCode.RequestTimeout" /> указывает, что клиент не послал запрос в пределах времени, когда запрос ожидался сервером.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestUriTooLong">
      <summary>Эквивалентен HTTP-состоянию 414. <see cref="F:System.Net.HttpStatusCode.RequestUriTooLong" /> указывает, что универсальный код ресурса (URI) слишком длинный.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ResetContent">
      <summary>Эквивалентен HTTP-состоянию 205. <see cref="F:System.Net.HttpStatusCode.ResetContent" /> указывает, что клиент должен сбросить (не перезагрузить) текущий ресурс.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SeeOther">
      <summary>Эквивалентен HTTP-состоянию 303. <see cref="F:System.Net.HttpStatusCode.SeeOther" /> в результате выполнения метода POST автоматически перенаправляет клиента на универсальный код ресурса (URI), заданный в заголовке Location. Запрос ресурса, задаваемого заголовком Location, выполняется с помощью метода GET.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ServiceUnavailable">
      <summary>Эквивалент HTTP-состояния 503. Значение <see cref="F:System.Net.HttpStatusCode.ServiceUnavailable" /> указывает, что сервер временно недоступен, обычно из-за высокой нагрузки или выполняемого обслуживания.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SwitchingProtocols">
      <summary>Эквивалентен HTTP-состоянию 101. <see cref="F:System.Net.HttpStatusCode.SwitchingProtocols" /> указывает, что изменяется протокол или версия протокола.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TemporaryRedirect">
      <summary>Эквивалентен HTTP-состоянию 307. <see cref="F:System.Net.HttpStatusCode.TemporaryRedirect" /> указывает, что данные запроса расположены по универсальному коду ресурса (URI), заданному в заголовке Location. Действие, выполняемое по умолчанию при получении этого состояния, состоит в отслеживании заголовка Location, связанного с ответом. Если для исходного запроса использовался метод POST, перенаправляемый запрос будет также использовать метод POST.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unauthorized">
      <summary>Эквивалент HTTP-состояния 401. Значение <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> указывает, что для запрашиваемого ресурса требуется аутентификация. В заголовке WWW-Authenticate подробно излагается порядок выполнения проверки подлинности.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnsupportedMediaType">
      <summary>Эквивалентен HTTP-состоянию 415. <see cref="F:System.Net.HttpStatusCode.UnsupportedMediaType" /> указывает, что запрос этого типа не поддерживается.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unused">
      <summary>Эквивалентен HTTP-состоянию 306. <see cref="F:System.Net.HttpStatusCode.Unused" /> является предлагаемым расширением спецификации HTTP/1.1, которая полностью не определена.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UpgradeRequired">
      <summary>Эквивалент HTTP-состояния 426. <see cref="F:System.Net.HttpStatusCode.UpgradeRequired" /> указывает, что клиент должен переключиться на другой протокол, например на TLS/1.0.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UseProxy">
      <summary>Эквивалентен HTTP-состоянию 305. <see cref="F:System.Net.HttpStatusCode.UseProxy" /> указывает, что запрос должен использовать прокси-сервер по универсальному коду ресурса (URI), заданному в заголовке Location.</summary>
    </member>
    <member name="T:System.Net.ICredentials">
      <summary>Предоставляет основной интерфейс проверки подлинности для извлечения учетных данных, необходимых при проверке подлинности веб-клиента.</summary>
    </member>
    <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <summary>Возвращает объект <see cref="T:System.Net.NetworkCredential" />, связанный с заданными URI и типом проверки подлинности.</summary>
      <returns>Объект <see cref="T:System.Net.NetworkCredential" />, связанный с заданными URI и типом проверки подлинности, или null, если учетные данные отсутствуют.</returns>
      <param name="uri">Параметр <see cref="T:System.Uri" />, для которого клиент предоставляет проверку подлинности.</param>
      <param name="authType">Тип проверки подлинности согласно его определению в свойстве <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" />.</param>
    </member>
    <member name="T:System.Net.ICredentialsByHost">
      <summary>Предоставляет основной интерфейс для извлечения учетных данных, относящихся к узлу, порту и типу проверки подлинности.</summary>
    </member>
    <member name="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)">
      <summary>Возвращает учетные данные для указанного узла, порта и протокола проверки подлинности.</summary>
      <returns>Учетные данные <see cref="T:System.Net.NetworkCredential" /> для указанного узла, порта и протокола проверки подлинности или значение null, если для указанных узла, порта и протокола проверки подлинности не определены учетные данные.</returns>
      <param name="host">узел, проверяющий подлинность клиента.</param>
      <param name="port">Порт на <paramref name="host " />, с которым клиент будет устанавливать связь.</param>
      <param name="authenticationType">Протокол проверки подлинности.</param>
    </member>
    <member name="T:System.Net.IWebProxy">
      <summary>Предоставляет базовый интерфейс, помогающий реализовать доступ к прокси-серверу для класса <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="P:System.Net.IWebProxy.Credentials">
      <summary>Учетные данные, передаваемые прокси-серверу для выполнения проверки подлинности.</summary>
      <returns>Экземпляр <see cref="T:System.Net.ICredentials" />, содержащий учетные данные, необходимые для проверки подлинности запроса к прокси-серверу.</returns>
    </member>
    <member name="M:System.Net.IWebProxy.GetProxy(System.Uri)">
      <summary>Возвращает URI, принадлежащий прокси-серверу.</summary>
      <returns>Экземпляр <see cref="T:System.Uri" />, который содержит URI прокси-сервера, используемого для связи с <paramref name="destination" />.</returns>
      <param name="destination">Перечисление <see cref="T:System.Uri" />, указывающее тип требуемого интернет-ресурса.</param>
    </member>
    <member name="M:System.Net.IWebProxy.IsBypassed(System.Uri)">
      <summary>Указывает, что прокси-сервер не должен использоваться для заданного узла.</summary>
      <returns>Значение true, если прокси-сервер не должен использоваться для <paramref name="host" />; в противном случае — false.</returns>
      <param name="host">Принадлежащий узлу идентификатор <see cref="T:System.Uri" /> для проверки использования прокси-сервера.</param>
    </member>
    <member name="T:System.Net.NetworkCredential">
      <summary>Предоставляет учетные данные для схем проверки подлинности на основе пароля, таких как "Обычная", "Дайджест", "NTLM" и "Kerberos".</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.NetworkCredential" />.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.NetworkCredential" /> с заданными значениями пароля и имени пользователя.</summary>
      <param name="userName">Имя пользователя, связанное с учетными данными.</param>
      <param name="password">Пароль для имени пользователя, связанный с учетными данными.</param>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.NetworkCredential" /> с заданными значениями имени пользователя, пароля и домена.</summary>
      <param name="userName">Имя пользователя, связанное с учетными данными.</param>
      <param name="password">Пароль для имени пользователя, связанный с учетными данными.</param>
      <param name="domain">Домен, связанный с этими учетными данными.</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Domain">
      <summary>Возвращает или устанавливает имя домена или компьютера, проверяющего учетные данные.</summary>
      <returns>Имя домена, связанное с учетными данными.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Net.NetworkCredential" /> для заданных узла, порта и типа проверки подлинности.</summary>
      <returns>Учетные данные <see cref="T:System.Net.NetworkCredential" /> для указанного узла, порта и протокола проверки подлинности или значение null, если для указанных узла, порта и протокола проверки подлинности не определены учетные данные.</returns>
      <param name="host">узел, проверяющий подлинность клиента.</param>
      <param name="port">Порт на <paramref name="host" />, с которым клиент будет устанавливать связь.</param>
      <param name="authenticationType">Тип запрашиваемой проверки подлинности согласно его определению в свойстве <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" />.</param>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <summary>Возвращает экземпляр класса <see cref="T:System.Net.NetworkCredential" />, связанный с указанным URI и типом проверки подлинности.</summary>
      <returns>Объект <see cref="T:System.Net.NetworkCredential" />.</returns>
      <param name="uri">URI, для получения доступа к которому клиент проходит проверку подлинности.</param>
      <param name="authType">Тип запрашиваемой проверки подлинности согласно его определению в свойстве <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" />.</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Password">
      <summary>Возвращает или задает пароль для имени пользователя, связанного с учетными данными.</summary>
      <returns>Пароль пользователя, связанный с учетными данными. Если данный экземпляр <see cref="T:System.Net.NetworkCredential" /> инициализируется с параметром <paramref name="password" />, имеющим значение null, свойство <see cref="P:System.Net.NetworkCredential.Password" /> вернет пустую строку.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.NetworkCredential.UserName">
      <summary>Возвращает или задает имя пользователя, связанное с учетными данными.</summary>
      <returns>Имя пользователя, связанное с учетными данными.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.TransportContext">
      <summary>Класс <see cref="T:System.Net.TransportContext" /> предоставляет дополнительный контекст о подлежащем транспортном слое.</summary>
    </member>
  </members>
</doc>