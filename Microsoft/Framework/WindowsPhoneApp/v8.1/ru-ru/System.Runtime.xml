<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime</name>
  </assembly>
  <members>
    <member name="T:System.Action">
      <summary>Инкапсулирует метод, который не принимает ни одного параметра и не возвращает значений.</summary>
    </member>
    <member name="M:System.Action.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action.BeginInvoke(System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action.Invoke">
    </member>
    <member name="T:System.Action`1">
      <summary>Инкапсулирует метод, который принимает один параметр и не возвращает значений.</summary>
      <typeparam name="T">Тип параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Action`1.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`1.BeginInvoke(`0,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`1.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`1.Invoke(`0)">
    </member>
    <member name="T:System.Action`10">
      <summary>Инкапсулирует метод, который принимает 10 параметров и не возвращает значений.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T10">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`10.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`10.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`10.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`10.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
    </member>
    <member name="T:System.Action`11">
      <summary>Инкапсулирует метод, который принимает 11 параметров и не возвращает значений.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T10">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T11">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`11.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`11.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`11.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`11.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
    </member>
    <member name="T:System.Action`12">
      <summary>Инкапсулирует метод, который принимает 12 параметров и не возвращает значений.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T10">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T11">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T12">Тип двенадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`12.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`12.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`12.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`12.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
    </member>
    <member name="T:System.Action`13">
      <summary>Инкапсулирует метод, который принимает 13 параметров и не возвращает значений.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T10">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T11">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T12">Тип двенадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T13">Тип тринадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`13.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`13.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`13.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`13.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
    </member>
    <member name="T:System.Action`14">
      <summary>Инкапсулирует метод, который принимает 14 параметров и не возвращает значений.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T10">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T11">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T12">Тип двенадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T13">Тип тринадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T14">Тип четырнадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`14.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`14.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`14.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`14.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
    </member>
    <member name="T:System.Action`15">
      <summary>Инкапсулирует метод, который принимает 15 параметров и не возвращает значений.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T10">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T11">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T12">Тип двенадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T13">Тип тринадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T14">Тип четырнадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T15">Тип пятнадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`15.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`15.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`15.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`15.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
    </member>
    <member name="T:System.Action`16">
      <summary>Инкапсулирует метод, который принимает 16 параметров и не возвращает значений.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T10">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T11">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T12">Тип двенадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T13">Тип тринадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T14">Тип четырнадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T15">Тип пятнадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T16">Тип шестнадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`16.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`16.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`16.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`16.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
    </member>
    <member name="T:System.Action`2">
      <summary>Инкапсулирует метод, который принимает два параметра и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`2.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`2.BeginInvoke(`0,`1,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`2.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`2.Invoke(`0,`1)">
    </member>
    <member name="T:System.Action`3">
      <summary>Инкапсулирует метод, который принимает три параметра и не возвращает значений.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`3.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`3.BeginInvoke(`0,`1,`2,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`3.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`3.Invoke(`0,`1,`2)">
    </member>
    <member name="T:System.Action`4">
      <summary>Инкапсулирует метод, который принимает четыре параметра и не возвращает значение.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`4.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`4.BeginInvoke(`0,`1,`2,`3,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`4.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`4.Invoke(`0,`1,`2,`3)">
    </member>
    <member name="T:System.Action`5">
      <summary>Инкапсулирует метод, который принимает пять параметров и не возвращает значений.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`5.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`5.BeginInvoke(`0,`1,`2,`3,`4,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`5.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`5.Invoke(`0,`1,`2,`3,`4)">
    </member>
    <member name="T:System.Action`6">
      <summary>Инкапсулирует метод, который принимает шесть параметров и не возвращает значений.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`6.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`6.BeginInvoke(`0,`1,`2,`3,`4,`5,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`6.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`6.Invoke(`0,`1,`2,`3,`4,`5)">
    </member>
    <member name="T:System.Action`7">
      <summary>Инкапсулирует метод, который принимает семь параметров и не возвращает значений.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`7.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`7.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`7.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`7.Invoke(`0,`1,`2,`3,`4,`5,`6)">
    </member>
    <member name="T:System.Action`8">
      <summary>Инкапсулирует метод, который принимает восемь параметров и не возвращает значений.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`8.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`8.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`8.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`8.Invoke(`0,`1,`2,`3,`4,`5,`6,`7)">
    </member>
    <member name="T:System.Action`9">
      <summary>Инкапсулирует метод, который принимает девять параметров и не возвращает значений.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Action`9.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Action`9.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Action`9.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Action`9.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
    </member>
    <member name="T:System.Activator">
      <summary>Содержит методы, позволяющие локально или удаленно создавать типы объектов или получать ссылки на существующие удаленные объекты. Этот класс не наследуется.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Activator.CreateInstance``1">
      <summary>Создает экземпляр типа, объявленного в указанном параметре универсального типа, с помощью конструктора без параметров.</summary>
      <returns>Ссылка на вновь созданный объект.</returns>
      <typeparam name="T">Создаваемый тип данных.</typeparam>
      <exception cref="T:System.MissingMethodException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.MissingMemberException" />. У типа, заданного для параметра <paramref name="T" />, нет конструктора без параметров.</exception>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type)">
      <summary>Создает экземпляр указанного типа, используя конструктор, заданный для этого типа по умолчанию.</summary>
      <returns>Ссылка на вновь созданный объект.</returns>
      <param name="type">Тип создаваемого объекта.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="type" /> не является объектом типа RuntimeType.  -или- Значение параметра <paramref name="type" /> является открытым универсальным типом (иными словами, свойство <see cref="P:System.Type.ContainsGenericParameters" /> возвращает значение true).</exception>
      <exception cref="T:System.NotSupportedException">Тип, заданный параметром <paramref name="type" />, не может быть <see cref="T:System.Reflection.Emit.TypeBuilder" />. -или-  Создание типов <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> и <see cref="T:System.RuntimeArgumentHandle" /> или массивов этих типов не поддерживается. -или- Сборка, содержащая тип <paramref name="type" />, является динамической сборкой, созданной с помощью <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">Вызываемый конструктор создает исключение.</exception>
      <exception cref="T:System.MethodAccessException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.MemberAccessException" />. Вызывающий код не имеет разрешения на вызов этого конструктора.</exception>
      <exception cref="T:System.MemberAccessException">Не удается создать экземпляр абстрактного класса, или этот член был вызван при помощи механизма поздней привязки.</exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">COM-тип не был получен посредством <see cref="Overload:System.Type.GetTypeFromCLSID" /> или <see cref="Overload:System.Type.GetTypeFromProgID" />.</exception>
      <exception cref="T:System.MissingMethodException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.MissingMemberException" />. Соответствующий открытый конструктор не найден.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">Параметр <paramref name="type" /> представляет COM-объект, но идентификатор класса, используемый для получения типа, является недопустимым, или идентифицируемый класс не зарегистрирован.</exception>
      <exception cref="T:System.TypeLoadException">Параметр <paramref name="type" /> — недопустимый тип.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
      </PermissionSet>
    </member>
    <member name="M:System.Activator.CreateInstance(System.Type,System.Object[])">
      <summary>Создает экземпляр указанного типа, используя конструктор, соответствующий заданным параметрам.</summary>
      <returns>Ссылка на вновь созданный объект.</returns>
      <param name="type">Тип создаваемого объекта.</param>
      <param name="args">Массив аргументов, число, порядок и тип которых соответствуют параметрам вызываемого конструктора. Если параметр <paramref name="args" /> предоставляет пустой массив или имеет значение null, то вызывается конструктор, который не принимает никаких параметров (конструктор, вызываемый по умолчанию).</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="type" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="type" /> не является объектом типа RuntimeType.  -или- Значение параметра <paramref name="type" /> является открытым универсальным типом (иными словами, свойство <see cref="P:System.Type.ContainsGenericParameters" /> возвращает значение true).</exception>
      <exception cref="T:System.NotSupportedException">Тип, заданный параметром <paramref name="type" />, не может быть <see cref="T:System.Reflection.Emit.TypeBuilder" />. -или-  Создание типов <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" /> и <see cref="T:System.RuntimeArgumentHandle" /> или массивов этих типов не поддерживается.  -или- Сборка, содержащая тип <paramref name="type" />, является динамической сборкой, созданной с помощью <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />. -или- Для конструктора, который наилучшим образом соответствует параметру <paramref name="args" />, заданы аргументы varargs.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">Вызываемый конструктор создает исключение.</exception>
      <exception cref="T:System.MethodAccessException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.MemberAccessException" />. Вызывающий код не имеет разрешения на вызов этого конструктора.</exception>
      <exception cref="T:System.MemberAccessException">Не удается создать экземпляр абстрактного класса, или этот член был вызван при помощи механизма поздней привязки.</exception>
      <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">COM-тип не был получен посредством <see cref="Overload:System.Type.GetTypeFromCLSID" /> или <see cref="Overload:System.Type.GetTypeFromProgID" />.</exception>
      <exception cref="T:System.MissingMethodException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.MissingMemberException" />. Соответствующий открытый конструктор не найден.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">Параметр <paramref name="type" /> представляет COM-объект, но идентификатор класса, используемый для получения типа, является недопустимым, или идентифицируемый класс не зарегистрирован.</exception>
      <exception cref="T:System.TypeLoadException">Параметр <paramref name="type" /> — недопустимый тип.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, RemotingConfiguration" />
      </PermissionSet>
    </member>
    <member name="T:System.ArgumentException">
      <summary>Это исключение выбрасывается, если один из передаваемых методу аргументов является недопустимым.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArgumentException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArgumentException" />.</summary>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArgumentException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.ArgumentException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="innerException" /> не является указателем null, текущее исключение выброшено в блоке catch, обрабатывающем внутренние исключения.</param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArgumentException" /> с указанным сообщением об ошибке и именем параметра, ставшего причиной этого исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="paramName">Имя параметра, вызвавшего текущее исключение.</param>
    </member>
    <member name="M:System.ArgumentException.#ctor(System.String,System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArgumentException" /> с указанным сообщением об ошибке, именем параметра и ссылкой на внутреннее исключение, которое является причиной возникновения данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="paramName">Имя параметра, вызвавшего текущее исключение.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="innerException" /> не является указателем null, текущее исключение выброшено в блоке catch, обрабатывающем внутренние исключения.</param>
    </member>
    <member name="P:System.ArgumentException.Message">
      <summary>Возвращает сообщение об ошибке и имя параметра или только сообщение об ошибке, если не задан ни один параметр.</summary>
      <returns>Текстовая строка с подробным описанием исключения. Значение этого свойства может принимать одну из следующих форм: 
Атрибут Condition  	Значение  	
Параметр <paramref name="paramName" /> является указателем NULL (Nothing в Visual Basic) или имеет нулевую длину.  	Строка <paramref name="message" />, переданная конструктору.  	
Параметр <paramref name="paramName" /> не является указателем NULL (Nothing в Visual Basic), а его длина большее нуля.  	Строка <paramref name="message" />, дополненная именем недопустимого параметра.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ArgumentException.ParamName">
      <summary>Возвращает имя параметра, ставшего причиной этого исключения.</summary>
      <returns>Имя параметра.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.ArgumentNullException">
      <summary>Исключение, которое выбрасывается, при передаче указателя NULL (Nothing в Visual Basic) методу, который не принимает его как недопустимый аргумент.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgumentNullException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArgumentNullException" />.</summary>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArgumentNullException" /> именем параметра, вызвавшего исключение.</summary>
      <param name="paramName">Имя параметра, вызвавшего данное исключение.</param>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArgumentNullException" /> с заданным сообщением об ошибке и исключением, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null (Nothing в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="M:System.ArgumentNullException.#ctor(System.String,System.String)">
      <summary>Инициализирует экземпляр класса <see cref="T:System.ArgumentNullException" /> с указанным сообщением об ошибке и именем параметра, который является причиной возникновения данного исключения.</summary>
      <param name="paramName">Имя параметра, вызвавшего данное исключение.</param>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="T:System.ArgumentOutOfRangeException">
      <summary>Исключение, которое выбрасывается, когда значение аргумента находится вне допустимого диапазона значений, как определено вызываемым методом.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArgumentOutOfRangeException" />.</summary>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArgumentOutOfRangeException" /> именем параметра, вызвавшего исключение.</summary>
      <param name="paramName">Имя параметра, ставшего причиной этого исключения.</param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArgumentOutOfRangeException" /> с заданным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null (Nothing в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArgumentOutOfRangeException" /> с именем параметра, значением аргумента и указанным сообщением об ошибке.</summary>
      <param name="paramName">Имя параметра, вызвавшего данное исключение.</param>
      <param name="actualValue">Значение аргумента, вызвавшего данное исключение.</param>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArgumentOutOfRangeException" /> с именем параметра, ставшего причиной этого исключения, и указанным сообщением об ошибке.</summary>
      <param name="paramName">Имя параметра, вызвавшего данное исключение.</param>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="P:System.ArgumentOutOfRangeException.ActualValue">
      <summary>Возвращает значение аргумента, вызвавшего это исключение.</summary>
      <returns>Объект Object, содержащий значение параметра, вызвавшего текущее исключение <see cref="T:System.Exception" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ArgumentOutOfRangeException.Message">
      <summary>Возвращает сообщение об ошибке и строковое представление недопустимого значения аргумента или только сообщение об ошибке, если значение аргумента равно null.</summary>
      <returns>Текстовое сообщение для этого исключения. Значение этого свойства принимает одну из двух следующих форм: 
Атрибут Condition  	Значение  	
Свойство <paramref name="actualValue" /> имеет значение null.  	Строка <paramref name="message" />, переданная конструктору.  	
Значением параметра <paramref name="actualValue" /> не является null.  	Строка <paramref name="message" />, дополненная строковым представлением недопустимого значения аргумента.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ArithmeticException">
      <summary>Исключение, которое выбрасывается для ошибок арифметических действий, а также операций приведения к типу и преобразования.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArithmeticException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArithmeticException" />.</summary>
    </member>
    <member name="M:System.ArithmeticException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArithmeticException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Строка <see cref="T:System.String" />, описывающая ошибку.</param>
    </member>
    <member name="M:System.ArithmeticException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArithmeticException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="innerException" /> не является указателем null, текущее исключение выброшено в блоке catch, обрабатывающем внутренние исключения.</param>
    </member>
    <member name="T:System.Array">
      <summary>Предоставляет методы для создания, изменения, поиска и сортировки массивов, то есть выступает в роли базового класса для всех массивов в среде CLR.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)">
      <summary>Выполняет поиск значения в диапазоне элементов отсортированного одномерного массива <see cref="T:System.Array" />, используя для этого интерфейс <see cref="T:System.IComparable" />, реализуемый каждым элементом массива <see cref="T:System.Array" /> и заданным значением.</summary>
      <returns>Индекс заданного параметра <paramref name="value" /> в указанном массиве <paramref name="array" />, если параметр <paramref name="value" /> найден. Если параметр <paramref name="value" /> не найден и значение параметра <paramref name="value" /> меньше одного или нескольких элементов массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением индекса первого элемента, превышающего по значению параметр <paramref name="value" />. Если параметр <paramref name="value" /> не найден, а значение <paramref name="value" /> больше любого элемента массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением увеличенного на 1 индекса последнего элемента.</returns>
      <param name="array">Отсортированный одномерный массив <see cref="T:System.Array" />, в котором выполняется поиск.</param>
      <param name="index">Начальный индекс диапазона поиска.</param>
      <param name="length">Длина диапазона поиска.</param>
      <param name="value">Объект, который нужно найти.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше значения нижней границы массива <paramref name="array" />. -или- Значение параметра <paramref name="length" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="index" /> и <paramref name="length" /> не определяют допустимый диапазон в массиве <paramref name="array" />. -или- Параметр <paramref name="value" /> относится к типу, несовместимому с элементами массива <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="value" /> не реализует интерфейс <see cref="T:System.IComparable" /> и при поиске был обнаружен элемент, не реализующий интерфейс <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
      <summary>Выполняет поиск значения в диапазоне элементов отсортированного одномерного массива <see cref="T:System.Array" />, используя заданный интерфейс <see cref="T:System.Collections.IComparer" />.</summary>
      <returns>Индекс заданного параметра <paramref name="value" /> в указанном массиве <paramref name="array" />, если параметр <paramref name="value" /> найден. Если параметр <paramref name="value" /> не найден и значение параметра <paramref name="value" /> меньше одного или нескольких элементов массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением индекса первого элемента, превышающего по значению параметр <paramref name="value" />. Если параметр <paramref name="value" /> не найден, а значение <paramref name="value" /> больше любого элемента массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением увеличенного на 1 индекса последнего элемента.</returns>
      <param name="array">Отсортированный одномерный массив <see cref="T:System.Array" />, в котором выполняется поиск.</param>
      <param name="index">Начальный индекс диапазона поиска.</param>
      <param name="length">Длина диапазона поиска.</param>
      <param name="value">Объект, который нужно найти.</param>
      <param name="comparer">Реализация интерфейса <see cref="T:System.Collections.IComparer" />, которая используется при сравнении элементов. -или-  Значение null, которое требуется использовать в реализации интерфейса <see cref="T:System.IComparable" /> каждого элемента.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше значения нижней границы массива <paramref name="array" />. -или- Значение параметра <paramref name="length" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="index" /> и <paramref name="length" /> не определяют допустимый диапазон в массиве <paramref name="array" />. -или- Значение параметра <paramref name="comparer" /> равно null, а тип параметра <paramref name="value" /> несовместим с элементами массива <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="comparer" /> равно null, параметр <paramref name="value" /> не реализует интерфейс <see cref="T:System.IComparable" /> и при поиске был обнаружен элемент, не реализующий интерфейс <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Object)">
      <summary>Выполняет поиск заданного элемента во всем отсортированном одномерном массиве <see cref="T:System.Array" />, используя для этого интерфейс <see cref="T:System.IComparable" />, реализуемый каждым элементом массива <see cref="T:System.Array" /> и заданным объектом.</summary>
      <returns>Индекс заданного параметра <paramref name="value" /> в указанном массиве <paramref name="array" />, если параметр <paramref name="value" /> найден. Если параметр <paramref name="value" /> не найден и значение параметра <paramref name="value" /> меньше одного или нескольких элементов массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением индекса первого элемента, превышающего по значению параметр <paramref name="value" />. Если параметр <paramref name="value" /> не найден, а значение <paramref name="value" /> больше любого элемента массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением увеличенного на 1 индекса последнего элемента.</returns>
      <param name="array">Отсортированный одномерный массив <see cref="T:System.Array" />, в котором выполняется поиск.</param>
      <param name="value">Объект, который нужно найти.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="value" /> относится к типу, несовместимому с элементами массива <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="value" /> не реализует интерфейс <see cref="T:System.IComparable" /> и при поиске был обнаружен элемент, не реализующий интерфейс <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch(System.Array,System.Object,System.Collections.IComparer)">
      <summary>Выполняет поиск значения во всем отсортированном одномерном массиве <see cref="T:System.Array" />, используя заданный интерфейс <see cref="T:System.Collections.IComparer" />.</summary>
      <returns>Индекс заданного параметра <paramref name="value" /> в указанном массиве <paramref name="array" />, если параметр <paramref name="value" /> найден. Если параметр <paramref name="value" /> не найден и значение параметра <paramref name="value" /> меньше одного или нескольких элементов массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением индекса первого элемента, превышающего по значению параметр <paramref name="value" />. Если параметр <paramref name="value" /> не найден, а значение <paramref name="value" /> больше любого элемента массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением увеличенного на 1 индекса последнего элемента.</returns>
      <param name="array">Отсортированный одномерный массив <see cref="T:System.Array" />, в котором выполняется поиск.</param>
      <param name="value">Объект, который нужно найти.</param>
      <param name="comparer">Реализация интерфейса <see cref="T:System.Collections.IComparer" />, которая используется при сравнении элементов. -или-  Значение null, которое требуется использовать в реализации интерфейса <see cref="T:System.IComparable" /> каждого элемента.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="comparer" /> равно null, а тип параметра <paramref name="value" /> несовместим с элементами массива <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="comparer" /> равно null, параметр <paramref name="value" /> не реализует интерфейс <see cref="T:System.IComparable" /> и при поиске был обнаружен элемент, не реализующий интерфейс <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0)">
      <summary>Выполняет поиск значения в диапазоне элементов отсортированного одномерного массива <see cref="T:System.Array" />, используя для этого универсальный интерфейс <see cref="T:System.IComparable`1" />, реализуемый каждым элементом массива <see cref="T:System.Array" /> и заданным значением.</summary>
      <returns>Индекс заданного параметра <paramref name="value" /> в указанном массиве <paramref name="array" />, если параметр <paramref name="value" /> найден. Если параметр <paramref name="value" /> не найден и значение параметра <paramref name="value" /> меньше одного или нескольких элементов массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением индекса первого элемента, превышающего по значению параметр <paramref name="value" />. Если параметр <paramref name="value" /> не найден, а значение <paramref name="value" /> больше любого элемента массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением увеличенного на 1 индекса последнего элемента.</returns>
      <param name="array">Отсортированный одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="index">Начальный индекс диапазона поиска.</param>
      <param name="length">Длина диапазона поиска.</param>
      <param name="value">Объект, который нужно найти.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше значения нижней границы массива <paramref name="array" />. -или- Значение параметра <paramref name="length" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="index" /> и <paramref name="length" /> не определяют допустимый диапазон в массиве <paramref name="array" />. -или- Параметр <paramref name="value" /> относится к типу, несовместимому с элементами массива <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="value" /> не реализует универсальный интерфейс <see cref="T:System.IComparable`1" /> и при поиске был обнаружен элемент, не реализующий универсальный интерфейс <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
      <summary>Выполняет поиск значения в диапазоне элементов отсортированного одномерного массива <see cref="T:System.Array" />, используя заданный универсальный интерфейс <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
      <returns>Индекс заданного параметра <paramref name="value" /> в указанном массиве <paramref name="array" />, если параметр <paramref name="value" /> найден. Если параметр <paramref name="value" /> не найден и значение параметра <paramref name="value" /> меньше одного или нескольких элементов массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением индекса первого элемента, превышающего по значению параметр <paramref name="value" />. Если параметр <paramref name="value" /> не найден, а значение <paramref name="value" /> больше любого элемента массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением увеличенного на 1 индекса последнего элемента.</returns>
      <param name="array">Отсортированный одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="index">Начальный индекс диапазона поиска.</param>
      <param name="length">Длина диапазона поиска.</param>
      <param name="value">Объект, который нужно найти.</param>
      <param name="comparer">Реализация интерфейса <see cref="T:System.Collections.Generic.IComparer`1" />, которая используется при сравнении элементов. -или-  Значение null, которое требуется использовать в реализации интерфейса <see cref="T:System.IComparable`1" /> каждого элемента.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше значения нижней границы массива <paramref name="array" />. -или- Значение параметра <paramref name="length" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="index" /> и <paramref name="length" /> не определяют допустимый диапазон в массиве <paramref name="array" />. -или- Значение параметра <paramref name="comparer" /> равно null, а тип параметра <paramref name="value" /> несовместим с элементами массива <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="comparer" /> равно null, параметр <paramref name="value" /> не реализует универсальный интерфейс <see cref="T:System.IComparable`1" /> и при поиске был обнаружен элемент, не реализующий универсальный интерфейс <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],``0)">
      <summary>Выполняет поиск заданного элемента во всем отсортированном одномерном массиве <see cref="T:System.Array" />, используя для этого универсальный интерфейс <see cref="T:System.IComparable`1" />, реализуемый каждым элементом массива <see cref="T:System.Array" /> и заданным объектом.</summary>
      <returns>Индекс заданного параметра <paramref name="value" /> в указанном массиве <paramref name="array" />, если параметр <paramref name="value" /> найден. Если параметр <paramref name="value" /> не найден и значение параметра <paramref name="value" /> меньше одного или нескольких элементов массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением индекса первого элемента, превышающего по значению параметр <paramref name="value" />. Если параметр <paramref name="value" /> не найден, а значение <paramref name="value" /> больше любого элемента массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением увеличенного на 1 индекса последнего элемента.</returns>
      <param name="array">Отсортированный одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="value">Объект, который нужно найти.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="value" /> не реализует универсальный интерфейс <see cref="T:System.IComparable`1" /> и при поиске был обнаружен элемент, не реализующий универсальный интерфейс <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer{``0})">
      <summary>Выполняет поиск значения во всем отсортированном одномерном массиве <see cref="T:System.Array" />, используя заданный универсальный интерфейс <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
      <returns>Индекс заданного параметра <paramref name="value" /> в указанном массиве <paramref name="array" />, если параметр <paramref name="value" /> найден. Если параметр <paramref name="value" /> не найден и значение параметра <paramref name="value" /> меньше одного или нескольких элементов массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением индекса первого элемента, превышающего по значению параметр <paramref name="value" />. Если параметр <paramref name="value" /> не найден, а значение <paramref name="value" /> больше любого элемента массива <paramref name="array" />, отрицательное число, которое является побитовым дополнением увеличенного на 1 индекса последнего элемента.</returns>
      <param name="array">Отсортированный одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="value">Объект, который нужно найти.</param>
      <param name="comparer">Реализация интерфейса <see cref="T:System.Collections.Generic.IComparer`1" />, которая используется при сравнении элементов. -или-  Значение null, которое требуется использовать в реализации интерфейса <see cref="T:System.IComparable`1" /> каждого элемента.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="comparer" /> равно null, а тип параметра <paramref name="value" /> несовместим с элементами массива <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="comparer" /> равно null, параметр <paramref name="value" /> не реализует универсальный интерфейс <see cref="T:System.IComparable`1" /> и при поиске был обнаружен элемент, не реализующий универсальный интерфейс <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.Clear(System.Array,System.Int32,System.Int32)">
      <summary>Задает диапазон элементов массива <see cref="T:System.Array" /> равным нулю, false или null в зависимости от типа элемента.</summary>
      <param name="array">Массив <see cref="T:System.Array" />, элементы которого необходимо очистить.</param>
      <param name="index">Начальный индекс диапазона элементов, которые необходимо очистить.</param>
      <param name="length">Число элементов, подлежащих очистке.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Значение параметра <paramref name="index" /> меньше значения нижней границы массива <paramref name="array" />. -или- Значение параметра <paramref name="length" /> меньше нуля. -или- Сумма значений <paramref name="index" /> и <paramref name="length" /> больше чем размер массива <see cref="T:System.Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Clone">
      <summary>Создает неполную копию массива <see cref="T:System.Array" />.</summary>
      <returns>Неполная копия массива <see cref="T:System.Array" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Копирует диапазон элементов из массива <see cref="T:System.Array" />, начиная с заданного индекса источника, и вставляет его в другой массив <see cref="T:System.Array" />, начиная с заданного индекса назначения.  Гарантирует, что в случае невозможности успешно скопировать весь диапазон, все изменения будут отменены.</summary>
      <param name="sourceArray">Массив <see cref="T:System.Array" />, содержащий данные, которые требуется скопировать.</param>
      <param name="sourceIndex">32-разрядное целое число, представляющее индекс в массиве <paramref name="sourceArray" />, с которого начинается копирование.</param>
      <param name="destinationArray">Массив <see cref="T:System.Array" />, принимающий данные.</param>
      <param name="destinationIndex">32-разрядное целое число, представляющее индекс в массиве <paramref name="destinationArray" />, с которого начинается сохранение.</param>
      <param name="length">32-битовое целое число, представляющее число копируемых элементов.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="sourceArray" /> имеет значение null. -или- Параметр <paramref name="destinationArray" /> имеет значение null.</exception>
      <exception cref="T:System.RankException">Ранги массивов <paramref name="sourceArray" /> и <paramref name="destinationArray" /> различны.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">Тип <paramref name="sourceArray" /> не совпадает с типом <paramref name="destinationArray" /> и не является производным этот этого типа.</exception>
      <exception cref="T:System.InvalidCastException">По крайней мере, один элемент массива <paramref name="sourceArray" /> не удается привести к типу массива <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="sourceIndex" /> меньше, чем нижняя граница первого измерения массива <paramref name="sourceArray" />. -или- Значение параметра <paramref name="destinationIndex" /> меньше, чем нижняя граница первого измерения массива <paramref name="destinationArray" />. -или- Значение параметра <paramref name="length" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Значение <paramref name="length" /> превышает число элементов в диапазоне от индекса <paramref name="sourceIndex" /> до конца массива <paramref name="sourceArray" />. -или- Значение <paramref name="length" /> превышает число элементов в диапазоне от индекса <paramref name="destinationIndex" /> до конца массива <paramref name="destinationArray" />.</exception>
    </member>
    <member name="M:System.Array.Copy(System.Array,System.Array,System.Int32)">
      <summary>Копирует диапазон элементов из массива <see cref="T:System.Array" />, начиная с первого элемента, и вставляет его в другой массив <see cref="T:System.Array" />, также начиная с первого элемента. Длина задается как 32-разрядное целое число.</summary>
      <param name="sourceArray">Массив <see cref="T:System.Array" />, содержащий данные, которые требуется скопировать.</param>
      <param name="destinationArray">Массив <see cref="T:System.Array" />, принимающий данные.</param>
      <param name="length">32-битовое целое число, представляющее число копируемых элементов.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="sourceArray" /> имеет значение null. -или- Параметр <paramref name="destinationArray" /> имеет значение null.</exception>
      <exception cref="T:System.RankException">Ранги массивов <paramref name="sourceArray" /> и <paramref name="destinationArray" /> различны.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">Типы массивов <paramref name="sourceArray" /> и <paramref name="destinationArray" /> несовместимы.</exception>
      <exception cref="T:System.InvalidCastException">По крайней мере, один элемент массива <paramref name="sourceArray" /> не удается привести к типу массива <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="length" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="length" /> больше числа элементов в массиве <paramref name="sourceArray" />. -или- Значение параметра <paramref name="length" /> больше числа элементов в массиве <paramref name="destinationArray" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Копирует диапазон элементов из массива <see cref="T:System.Array" />, начиная с заданного индекса источника, и вставляет его в другой массив <see cref="T:System.Array" />, начиная с заданного индекса назначения. Длина и индексы задаются как 32-разрядные целые числа.</summary>
      <param name="sourceArray">Массив <see cref="T:System.Array" />, содержащий данные, которые требуется скопировать.</param>
      <param name="sourceIndex">32-разрядное целое число, представляющее индекс в массиве <paramref name="sourceArray" />, с которого начинается копирование.</param>
      <param name="destinationArray">Массив <see cref="T:System.Array" />, принимающий данные.</param>
      <param name="destinationIndex">32-разрядное целое число, представляющее индекс в массиве <paramref name="destinationArray" />, с которого начинается сохранение.</param>
      <param name="length">32-битовое целое число, представляющее число копируемых элементов.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="sourceArray" /> имеет значение null. -или- Параметр <paramref name="destinationArray" /> имеет значение null.</exception>
      <exception cref="T:System.RankException">Ранги массивов <paramref name="sourceArray" /> и <paramref name="destinationArray" /> различны.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">Типы массивов <paramref name="sourceArray" /> и <paramref name="destinationArray" /> несовместимы.</exception>
      <exception cref="T:System.InvalidCastException">По крайней мере, один элемент массива <paramref name="sourceArray" /> не удается привести к типу массива <paramref name="destinationArray" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="sourceIndex" /> меньше, чем нижняя граница первого измерения массива <paramref name="sourceArray" />. -или- Значение параметра <paramref name="destinationIndex" /> меньше, чем нижняя граница первого измерения массива <paramref name="destinationArray" />. -или- Значение параметра <paramref name="length" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Значение <paramref name="length" /> превышает число элементов в диапазоне от индекса <paramref name="sourceIndex" /> до конца массива <paramref name="sourceArray" />. -или- Значение <paramref name="length" /> превышает число элементов в диапазоне от индекса <paramref name="destinationIndex" /> до конца массива <paramref name="destinationArray" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CopyTo(System.Array,System.Int32)">
      <summary>Копирует все элементы текущего одномерного массива <see cref="T:System.Array" /> в заданный одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса в массиве назначения <see cref="T:System.Array" />. Индекс задается как 32-разрядное целое число.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, который является массивом назначения для элементов, копируемых из текущего массива <see cref="T:System.Array" />.</param>
      <param name="index">32-разрядное целое число, представляющее индекс в массиве <paramref name="array" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше значения нижней границы массива <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentException">Массив <paramref name="array" /> является многомерным. -или- Количество элементов в исходной коллекции <see cref="T:System.Array" /> превышает доступное место, начиная с индекса <paramref name="index" /> до конца массива назначения <paramref name="array" />.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">Тип исходной коллекции <see cref="T:System.Array" /> нельзя автоматически привести к типу массива назначения <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">Исходный массив <see cref="T:System.Array" /> является многомерным.</exception>
      <exception cref="T:System.InvalidCastException">По меньшей мере, один элемент исходного массива <see cref="T:System.Array" /> не удается привести к типу массива назначения <paramref name="array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32[])">
      <summary>Создает многомерный массив <see cref="T:System.Array" /> заданного типа <see cref="T:System.Type" /> с заданными длинами по измерениям и индексацией, начинающейся с нуля. Длины по измерениям задаются в массиве 32-разрядных целых чисел.</summary>
      <returns>Новый многомерный массив <see cref="T:System.Array" /> заданного типа <see cref="T:System.Type" /> с заданной для каждого измерения длиной и индексацией, начинающейся с нуля.</returns>
      <param name="elementType">Тип <see cref="T:System.Type" /> массива <see cref="T:System.Array" />, который требуется создать.</param>
      <param name="lengths">Массив 32-разрядных целых чисел, представляющих размер каждого измерения массива <see cref="T:System.Array" />, который нужно создать.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="elementType" /> имеет значение null. -или- Параметр <paramref name="lengths" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="elementType" /> не является допустимым типом <see cref="T:System.Type" />. -или- Массив <paramref name="lengths" /> содержит менее одного элемента.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> не поддерживается. Например, не поддерживается объект <see cref="T:System.Void" />. -или- Параметр <paramref name="elementType" /> является открытым универсальным типом.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="lengths" /> меньше нуля.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.CreateInstance(System.Type,System.Int32[],System.Int32[])">
      <summary>Создает многомерный массив <see cref="T:System.Array" /> заданного типа <see cref="T:System.Type" /> с заданными длинами по измерениям и нижними границами.</summary>
      <returns>Новый многомерный массив <see cref="T:System.Array" /> заданного типа <see cref="T:System.Type" /> с заданной длиной и нижней границей каждого измерения.</returns>
      <param name="elementType">Тип <see cref="T:System.Type" /> массива <see cref="T:System.Array" />, который требуется создать.</param>
      <param name="lengths">Одномерный массив, содержащий размер всех измерений массива <see cref="T:System.Array" />, который необходимо создать.</param>
      <param name="lowerBounds">Одномерный массив, содержащий нижние границы (начальные индексы) всех измерений массива <see cref="T:System.Array" />, который необходимо создать.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="elementType" /> имеет значение null. -или- Параметр <paramref name="lengths" /> имеет значение null. -или- Параметр <paramref name="lowerBounds" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="elementType" /> не является допустимым типом <see cref="T:System.Type" />. -или- Массив <paramref name="lengths" /> содержит менее одного элемента. -или- Количество элементов массивов <paramref name="lengths" /> и <paramref name="lowerBounds" /> не совпадает.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="elementType" /> не поддерживается. Например, не поддерживается объект <see cref="T:System.Void" />. -или- Параметр <paramref name="elementType" /> является открытым универсальным типом.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="lengths" /> меньше нуля. -или- Какое-либо значение параметра <paramref name="lowerBounds" />, слишком велико, вследствие чего сумма нижней границы измерения и длины превышает значение <see cref="F:System.Int32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Exists``1(``0[],System.Predicate{``0})">
      <summary>Определяет, содержит ли заданный массив элементы, удовлетворяющие условиям указанного предиката.</summary>
      <returns>Значение true, если массив <paramref name="array" /> содержит один или несколько элементов, удовлетворяющих условиям указанного предиката; в противном случае — значение false.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="match">Объект <see cref="T:System.Predicate`1" />, определяющий условия поиска элементов.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null. -или- Параметр <paramref name="match" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Array.Find``1(``0[],System.Predicate{``0})">
      <summary>Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает первое найденное вхождение в пределах всего списка <see cref="T:System.Array" />.</summary>
      <returns>Первый элемент, удовлетворяющий условиям указанного предиката, если такой элемент найден; в противном случае — значение по умолчанию для типа <paramref name="T" />.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="match">Объект <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null. -или- Параметр <paramref name="match" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Array.FindAll``1(``0[],System.Predicate{``0})">
      <summary>Извлекает все элементы, удовлетворяющие условиям указанного предиката.</summary>
      <returns>Массив <see cref="T:System.Array" />, содержащий все элементы, удовлетворяющие условиям указанного предиката, если такие элементы найдены; в противном случае — пустой массив <see cref="T:System.Array" />.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="match">Объект <see cref="T:System.Predicate`1" />, определяющий условия поиска элементов.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null. -или- Параметр <paramref name="match" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})">
      <summary>Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс первого вхождения в диапазоне элементов списка <see cref="T:System.Array" />, начинающемся с заданного индекса и содержащем указанное число элементов.</summary>
      <returns>Отсчитываемый от нуля индекс первого вхождения элемента, удовлетворяющего условиям предиката <paramref name="match" />, если такой элемент найден; в противном случае — значение –1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
      <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
      <param name="match">Объект <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null. -или- Параметр <paramref name="match" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> находится вне диапазона допустимых индексов параметра <paramref name="array" />. -или- Значение параметра <paramref name="count" /> меньше нуля. -или- Параметры <paramref name="startIndex" /> и <paramref name="count" /> не определяют допустимую часть массива <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Int32,System.Predicate{``0})">
      <summary>Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс первого вхождения в диапазоне элементов списка <see cref="T:System.Array" />, начиная с заданного индекса и заканчивая последним элементом.</summary>
      <returns>Отсчитываемый от нуля индекс первого вхождения элемента, удовлетворяющего условиям предиката <paramref name="match" />, если такой элемент найден; в противном случае — значение –1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="startIndex">Индекс (с нуля) начальной позиции поиска.</param>
      <param name="match">Объект <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null. -или- Параметр <paramref name="match" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> находится вне диапазона допустимых индексов параметра <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindIndex``1(``0[],System.Predicate{``0})">
      <summary>Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс первого найденного вхождения в пределах всего списка <see cref="T:System.Array" />.</summary>
      <returns>Отсчитываемый от нуля индекс первого вхождения элемента, удовлетворяющего условиям предиката <paramref name="match" />, если такой элемент найден; в противном случае — значение –1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="match">Объект <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null. -или- Параметр <paramref name="match" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Array.FindLast``1(``0[],System.Predicate{``0})">
      <summary>Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает последнее найденное вхождение в пределах всего списка <see cref="T:System.Array" />.</summary>
      <returns>Последний элемент, удовлетворяющий условиям указанного предиката, если такой элемент найден; в противном случае — значение по умолчанию для типа <paramref name="T" />.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="match">Объект <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null. -или- Параметр <paramref name="match" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})">
      <summary>Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс последнего вхождения в диапазоне элементов списка <see cref="T:System.Array" />, содержащем указанное число элементов и заканчивающемся элементом с заданным индексом.</summary>
      <returns>Отсчитываемый от нуля индекс последнего вхождения элемента, удовлетворяющего условиям предиката <paramref name="match" />, если такой элемент найден; в противном случае — значение –1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
      <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
      <param name="match">Объект <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null. -или- Параметр <paramref name="match" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> находится вне диапазона допустимых индексов параметра <paramref name="array" />. -или- Значение параметра <paramref name="count" /> меньше нуля. -или- Параметры <paramref name="startIndex" /> и <paramref name="count" /> не определяют допустимую часть массива <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Predicate{``0})">
      <summary>Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс последнего вхождения в диапазоне элементов списка <see cref="T:System.Array" />, начиная с первого элемента и заканчивая элементом с заданным индексом.</summary>
      <returns>Отсчитываемый от нуля индекс последнего вхождения элемента, удовлетворяющего условиям предиката <paramref name="match" />, если такой элемент найден; в противном случае — значение –1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
      <param name="match">Объект <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null. -или- Параметр <paramref name="match" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> находится вне диапазона допустимых индексов параметра <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.FindLastIndex``1(``0[],System.Predicate{``0})">
      <summary>Выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс последнего найденного вхождения в пределах всего списка <see cref="T:System.Array" />.</summary>
      <returns>Отсчитываемый от нуля индекс последнего вхождения элемента, удовлетворяющего условиям предиката <paramref name="match" />, если такой элемент найден; в противном случае — значение –1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="match">Объект <see cref="T:System.Predicate`1" />, определяющий условия поиска элемента.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null. -или- Параметр <paramref name="match" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Array.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" /> для массива <see cref="T:System.Array" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" /> для массива <see cref="T:System.Array" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.GetLength(System.Int32)">
      <summary>Получает 32-разрядное целое число, представляющее количество элементов в заданном измерении массива <see cref="T:System.Array" />.</summary>
      <returns>32-разрядное целое число, представляющее количество элементов в заданном измерении.</returns>
      <param name="dimension">Измерение массива <see cref="T:System.Array" />, индексация которого начинается с нуля, и для которого необходимо определить длину.</param>
      <exception cref="T:System.IndexOutOfRangeException">Значение параметра <paramref name="dimension" /> меньше нуля. -или- Значение параметра <paramref name="dimension" /> больше или равно значению свойства <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetLowerBound(System.Int32)">
      <summary>Получает Индекс первого элемента заданного измерения в массиве.</summary>
      <returns>Индекс первого элемента заданного измерения в массиве.</returns>
      <param name="dimension">Измерение массива основанное на нуле, для которого необходимо определить индекс начала.</param>
      <exception cref="T:System.IndexOutOfRangeException">Значение параметра <paramref name="dimension" /> меньше нуля. -или- Значение параметра <paramref name="dimension" /> больше или равно значению свойства <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetUpperBound(System.Int32)">
      <summary>Получает Индекс последнего элемента заданного измерения в массиве.</summary>
      <returns>Индекс последнего элемента указанного измерения в массиве, или -1, если определенное измерение пусто.</returns>
      <param name="dimension">Измерение массива, индексация которого начинается с нуля, и для которого необходимо определить верхнюю границу.</param>
      <exception cref="T:System.IndexOutOfRangeException">Значение параметра <paramref name="dimension" /> меньше нуля. -или- Значение параметра <paramref name="dimension" /> больше или равно значению свойства <see cref="P:System.Array.Rank" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.GetValue(System.Int32[])">
      <summary>Получает значение, хранящееся в указанной позиции многомерного массива <see cref="T:System.Array" />. Индексы задаются как массив 32-разрядных целых чисел.</summary>
      <returns>Значение, хранящееся в указанной позиции многомерного массива <see cref="T:System.Array" />.</returns>
      <param name="indices">Одномерный массив 32-разрядных целых чисел, представляющий индексы, которые задают позицию получаемого элемента в массиве <see cref="T:System.Array" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="indices" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Размерность текущего массива <see cref="T:System.Array" /> не равна числу элементов в параметре <paramref name="indices" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Какой-либо элемент в параметре <paramref name="indices" /> находится вне диапазона допустимых индексов для соответствующего измерения текущего массива <see cref="T:System.Array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object)">
      <summary>Выполняет поиск заданного объекта внутри всего одномерного массива <see cref="T:System.Array" /> и возвращает индекс его первого вхождения.</summary>
      <returns>Индекс первого вхождения значения <paramref name="value" />, в массиве <paramref name="array" />, если значение найдено; в противном случае — нижняя граница массива минус 1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" /> для поиска.</param>
      <param name="value">Объект, который требуется найти в <paramref name="array" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object,System.Int32)">
      <summary>Выполняет поиск указанного объекта и возвращает индекс первого вхождения в диапазоне элементов одномерного массива <see cref="T:System.Array" />, начинающемся с элемента с заданным индексом и заканчивающемся последним элементом.</summary>
      <returns>Индекс первого вхождения значения <paramref name="value" /> в диапазоне элементов массива <paramref name="array" />, начинающемся с элемента с индексом <paramref name="startIndex" /> и заканчивающемся последним элементом, если объект найден; в противном случае — нижняя граница массива минус 1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" /> для поиска.</param>
      <param name="value">Объект, который требуется найти в <paramref name="array" />.</param>
      <param name="startIndex">Начальный индекс поиска. Значение 0 (ноль) действительно в пустом массиве.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> находится вне диапазона допустимых индексов параметра <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf(System.Array,System.Object,System.Int32,System.Int32)">
      <summary>Выполняет поиск указанного объекта и возвращает индекс первого вхождения в диапазоне элементов одномерного массива <see cref="T:System.Array" />, начинающемся с элемента с заданным индексом и содержащем указанное число элементов.</summary>
      <returns>Индекс первого вхождения значения <paramref name="value" /> в диапазоне элементов массива <paramref name="array" />, начинающемся с элемента с индексом <paramref name="startIndex" /> и содержащем число элементов, заданных в параметре <paramref name="count" />, если объект найден; в противном случае — нижняя граница массива минус 1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" /> для поиска.</param>
      <param name="value">Объект, который требуется найти в <paramref name="array" />.</param>
      <param name="startIndex">Начальный индекс поиска. Значение 0 (ноль) действительно в пустом массиве.</param>
      <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> находится вне диапазона допустимых индексов параметра <paramref name="array" />. -или- Значение параметра <paramref name="count" /> меньше нуля. -или- Параметры <paramref name="startIndex" /> и <paramref name="count" /> не определяют допустимую часть массива <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0)">
      <summary>Выполняет поиск указанного объекта и возвращает индекс первого вхождения во всем массиве <see cref="T:System.Array" />.</summary>
      <returns>Отсчитываемый от нуля индекс первого вхождения элемента <paramref name="value" /> в пределах всей коллекции <paramref name="array" />, если элемент найден; в противном случае — значение –1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="value">Объект, который требуется найти в <paramref name="array" />.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0,System.Int32)">
      <summary>Выполняет поиск указанного объекта и возвращает индекс первого вхождения в диапазоне элементов массива <see cref="T:System.Array" />, начиная с элемента с заданным индексом и заканчивая последним элементом.</summary>
      <returns>Отсчитываемый от нуля индекс первого вхождения элемента <paramref name="value" /> в диапазоне элементов списка <paramref name="array" />, начиная с элемента с индексом <paramref name="startIndex" /> и заканчивая последним элементом, если объект найден; в противном случае — значение –1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="value">Объект, который требуется найти в <paramref name="array" />.</param>
      <param name="startIndex">Индекс (с нуля) начальной позиции поиска. Значение 0 (ноль) действительно в пустом массиве.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> находится вне диапазона допустимых индексов параметра <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.IndexOf``1(``0[],``0,System.Int32,System.Int32)">
      <summary>Выполняет поиск указанного объекта и возвращает индекс первого вхождения в диапазоне элементов массива <see cref="T:System.Array" />, начинающемся с элемента с заданным индексом и содержащем указанное число элементов.</summary>
      <returns>Отсчитываемый от нуля индекс первого вхождения значения <paramref name="value" /> в диапазоне элементов массива <paramref name="array" />, начинающемся с элемента с индексом <paramref name="startIndex" /> и содержащем число элементов, заданное в параметре <paramref name="count" />, если объект найден; в противном случае — значение –1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="value">Объект, который требуется найти в <paramref name="array" />.</param>
      <param name="startIndex">Индекс (с нуля) начальной позиции поиска. Значение 0 (ноль) действительно в пустом массиве.</param>
      <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> находится вне диапазона допустимых индексов параметра <paramref name="array" />. -или- Значение параметра <paramref name="count" /> меньше нуля. -или- Параметры <paramref name="startIndex" /> и <paramref name="count" /> не определяют допустимую часть массива <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.Initialize">
      <summary>Инициализирует каждый элемент массива <see cref="T:System.Array" /> типа значения путем вызова конструктора по умолчанию для типа значений.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object)">
      <summary>Выполняет поиск заданного объекта и возвращает индекс его последнего вхождения внутри всего одномерного массива <see cref="T:System.Array" />.</summary>
      <returns>Индекс последнего вхождения значения <paramref name="value" /> во всем массиве <paramref name="array" />, если значение найдено; в противном случае — нижняя граница массива минус 1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" /> для поиска.</param>
      <param name="value">Объект, который требуется найти в <paramref name="array" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32)">
      <summary>Выполняет поиск указанного объекта и возвращает индекс его последнего вхождения в диапазоне элементов одномерного массива <see cref="T:System.Array" />, начинающемся с первого элемента и заканчивающемся элементом с заданным индексом.</summary>
      <returns>Индекс последнего вхождения значения <paramref name="value" /> в диапазоне элементов массива <paramref name="array" />, начинающемся с первого элемента и заканчивающемся элементом с индексом <paramref name="startIndex" />, если объект найден; в противном случае — нижняя граница массива минус 1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" /> для поиска.</param>
      <param name="value">Объект, который требуется найти в <paramref name="array" />.</param>
      <param name="startIndex">Начальный индекс обратного поиска.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> находится вне диапазона допустимых индексов параметра <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)">
      <summary>Выполняет поиск указанного объекта и возвращает индекс последнего вхождения в диапазоне элементов одномерного массива <see cref="T:System.Array" />, содержащем указанное число элементов и заканчивающемся элементом с заданным индексом.</summary>
      <returns>Индекс последнего вхождения значения <paramref name="value" /> в диапазоне элементов массива <paramref name="array" />, содержащем число элементов, заданных в параметре <paramref name="count" />, и заканчивающемся элементом с индексом <paramref name="startIndex" />, если объект найден; в противном случае — нижняя граница массива минус 1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" /> для поиска.</param>
      <param name="value">Объект, который требуется найти в <paramref name="array" />.</param>
      <param name="startIndex">Начальный индекс обратного поиска.</param>
      <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> находится вне диапазона допустимых индексов параметра <paramref name="array" />. -или- Значение параметра <paramref name="count" /> меньше нуля. -или- Параметры <paramref name="startIndex" /> и <paramref name="count" /> не определяют допустимую часть массива <paramref name="array" />.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0)">
      <summary>Выполняет поиск указанного объекта и возвращает индекс последнего вхождения во всем массиве <see cref="T:System.Array" />.</summary>
      <returns>Отсчитываемый от нуля индекс последнего вхождения значения <paramref name="value" /> во всем массиве <paramref name="array" />, если объект найден; в противном случае — значение –1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="value">Объект, который требуется найти в <paramref name="array" />.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32)">
      <summary>Выполняет поиск указанного объекта и возвращает индекс последнего вхождения в диапазоне элементов массива <see cref="T:System.Array" />, начиная с первого элемента и заканчивая элементом с заданным индексом.</summary>
      <returns>Отсчитываемый от нуля индекс последнего вхождения элемента <paramref name="value" /> в диапазоне элементов массива <paramref name="array" />, начиная с первого элемента и заканчивая элементом с индексом <paramref name="startIndex" />, если объект найден; в противном случае — значение –1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="value">Объект, который требуется найти в <paramref name="array" />.</param>
      <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> находится вне диапазона допустимых индексов параметра <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32,System.Int32)">
      <summary>Выполняет поиск указанного объекта и возвращает индекс последнего вхождения в диапазоне элементов массива <see cref="T:System.Array" />, содержащем указанное число элементов и заканчивающемся в позиции с указанным индексом.</summary>
      <returns>Отсчитываемый от нуля индекс последнего вхождения значения <paramref name="value" /> в диапазоне элементов массива <paramref name="array" />, содержащем число элементов, заданное в параметре <paramref name="count" />, и заканчивающемся элементом с индексом <paramref name="startIndex" />, если объект найден; в противном случае — значение –1.</returns>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля, и в котором выполняется поиск.</param>
      <param name="value">Объект, который требуется найти в <paramref name="array" />.</param>
      <param name="startIndex">Индекс (с нуля) начала диапазона поиска в обратном направлении.</param>
      <param name="count">Число элементов в диапазоне, в котором выполняется поиск.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> находится вне диапазона допустимых индексов параметра <paramref name="array" />. -или- Значение параметра <paramref name="count" /> меньше нуля. -или- Параметры <paramref name="startIndex" /> и <paramref name="count" /> не определяют допустимую часть массива <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Array.Length">
      <summary>Получает 32-разрядное целое число, представляющее общее число элементов во всех измерениях массива <see cref="T:System.Array" />.</summary>
      <returns>32-битовое целое число, представляющее общее число элементов во всех измерениях массива <see cref="T:System.Array" />; ноль, если в массиве нет элементов.</returns>
      <exception cref="T:System.OverflowException">Массив является многомерным и содержит более <see cref="F:System.Int32.MaxValue" /> элементов.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Array.Rank">
      <summary>Получает ранг (размерность) объекта <see cref="T:System.Array" />. Например, одномерный массив возвращает 1, двухмерный массив возвращает 2 и т д</summary>
      <returns>Ранг (размерность) объекта <see cref="T:System.Array" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Resize``1(``0[]@,System.Int32)">
      <summary>Изменяет количество элементов в одномерном массиве до указанной величины.</summary>
      <param name="array">Подлежащий изменению размера одномерный массив, индексация которого начинается с нуля, или значение null для создания нового массива заданного размера.</param>
      <param name="newSize">Размер нового массива.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="newSize" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Array.Reverse(System.Array)">
      <summary>Изменяет порядок элементов во всем одномерном массиве <see cref="T:System.Array" /> на обратный.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, порядок элементов которого нужно изменить на обратный.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Reverse(System.Array,System.Int32,System.Int32)">
      <summary>Изменяет последовательность элементов в диапазоне элементов одномерного массива <see cref="T:System.Array" /> на обратную.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, порядок элементов которого нужно изменить на обратный.</param>
      <param name="index">Начальный индекс той части массива, порядок элементов которой необходимо изменить на обратный.</param>
      <param name="length">Число элементов в части массива, порядок которых нужно изменить на обратный.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше значения нижней границы массива <paramref name="array" />. -или- Значение параметра <paramref name="length" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="index" /> и <paramref name="length" /> не определяют допустимый диапазон в массиве <paramref name="array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.SetValue(System.Object,System.Int32[])">
      <summary>Присваивает значение элементу, находящемуся в указанной позиции многомерного массива <see cref="T:System.Array" />. Индексы задаются как массив 32-разрядных целых чисел.</summary>
      <param name="value">Новое значение указанного элемента.</param>
      <param name="indices">Одномерный массив 32-разрядных целых чисел, представляющий индексы, которые задают позицию задаваемого элемента в массиве.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="indices" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Размерность текущего массива <see cref="T:System.Array" /> не равна числу элементов в параметре <paramref name="indices" />.</exception>
      <exception cref="T:System.InvalidCastException">Значение <paramref name="value" /> не удается привести к типу элемента текущего массива <see cref="T:System.Array" />.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Какой-либо элемент в параметре <paramref name="indices" /> находится вне диапазона допустимых индексов для соответствующего измерения текущего массива <see cref="T:System.Array" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array)">
      <summary>Сортирует элементы во всем одномерном массиве <see cref="T:System.Array" />, используя реализацию интерфейса <see cref="T:System.IComparable" /> каждого элемента массива <see cref="T:System.Array" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" /> для сортировки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <exception cref="T:System.InvalidOperationException">Один или несколько элементов в массиве <paramref name="array" /> не реализуют интерфейс <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Collections.IComparer)">
      <summary>Сортирует элементы в одномерном массиве <see cref="T:System.Array" />, используя заданный интерфейс <see cref="T:System.Collections.IComparer" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" /> для сортировки.</param>
      <param name="comparer">Реализация интерфейса <see cref="T:System.Collections.IComparer" />, которая используется при сравнении элементов. -или- Значение null, которое требуется использовать в реализации интерфейса <see cref="T:System.IComparable" /> каждого элемента.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="comparer" /> — null, а один или несколько элементов в параметре <paramref name="array" /> не реализуют интерфейс <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.ArgumentException">Реализация <paramref name="comparer" /> вызвала ошибку при сортировке. Например, компаратор <paramref name="comparer" /> мог не возвратить 0 при сравнении элемента с самим собой.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Int32,System.Int32)">
      <summary>Сортирует элементы в диапазоне элементов одномерного массива <see cref="T:System.Array" /> с помощью реализации интерфейса <see cref="T:System.IComparable" /> каждого элемента массива <see cref="T:System.Array" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" /> для сортировки.</param>
      <param name="index">Начальный индекс диапазона сортировки.</param>
      <param name="length">Число элементов в диапазоне сортировки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше значения нижней границы массива <paramref name="array" />. -или- Значение параметра <paramref name="length" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="index" /> и <paramref name="length" /> не определяют допустимый диапазон в массиве <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Один или несколько элементов в массиве <paramref name="array" /> не реализуют интерфейс <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>Сортирует элементы в диапазоне элементов одномерного массива <see cref="T:System.Array" />, используя заданный интерфейс <see cref="T:System.Collections.IComparer" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" /> для сортировки.</param>
      <param name="index">Начальный индекс диапазона сортировки.</param>
      <param name="length">Число элементов в диапазоне сортировки.</param>
      <param name="comparer">Реализация интерфейса <see cref="T:System.Collections.IComparer" />, которая используется при сравнении элементов. -или- Значение null, которое требуется использовать в реализации интерфейса <see cref="T:System.IComparable" /> каждого элемента.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.RankException">Массив <paramref name="array" /> является многомерным.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше значения нижней границы массива <paramref name="array" />. -или- Значение параметра <paramref name="length" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="index" /> и <paramref name="length" /> не определяют допустимый диапазон в массиве <paramref name="array" />.  -или- Реализация <paramref name="comparer" /> вызвала ошибку при сортировке. Например, компаратор <paramref name="comparer" /> мог не возвратить 0 при сравнении элемента с самим собой.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="comparer" /> — null, а один или несколько элементов в параметре <paramref name="array" /> не реализуют интерфейс <see cref="T:System.IComparable" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Array.Sort``1(``0[])">
      <summary>Сортирует элементы во всем массиве <see cref="T:System.Array" />, используя реализацию универсального интерфейса <see cref="T:System.IComparable`1" /> каждого элемента массива <see cref="T:System.Array" />.</summary>
      <param name="array">Сортируемый одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Один или несколько элементов в массиве <paramref name="array" /> не реализуют универсальный интерфейс <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Collections.Generic.IComparer{``0})">
      <summary>Сортирует элементы в одномерном массиве <see cref="T:System.Array" />, используя заданный универсальный интерфейс <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
      <param name="array">Сортируемый одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля.</param>
      <param name="comparer">Реализация универсального интерфейса <see cref="T:System.Collections.Generic.IComparer`1" />, используемая при сравнении элементов, или значение null для использования реализации универсального интерфейса <see cref="T:System.IComparable`1" /> каждого элемента.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="comparer" /> — null, а один или несколько элементов в параметре <paramref name="array" /> не реализуют универсальный интерфейс <see cref="T:System.IComparable`1" />.</exception>
      <exception cref="T:System.ArgumentException">Реализация <paramref name="comparer" /> вызвала ошибку при сортировке. Например, компаратор <paramref name="comparer" /> мог не возвратить 0 при сравнении элемента с самим собой.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Comparison{``0})">
      <summary>Сортирует элементы массива <see cref="T:System.Array" /> с использованием указанного объекта <see cref="T:System.Comparison`1" />.</summary>
      <param name="array">Сортируемый одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля.</param>
      <param name="comparison">Делегат <see cref="T:System.Comparison`1" />, используемый при сравнении элементов.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null. -или- Параметр <paramref name="comparison" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Реализация <paramref name="comparison" /> вызвала ошибку при сортировке. Например, компаратор <paramref name="comparison" /> мог не возвратить 0 при сравнении элемента с самим собой.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Int32,System.Int32)">
      <summary>Сортирует элементы в диапазоне элементов массива <see cref="T:System.Array" />, используя реализацию универсального интерфейса <see cref="T:System.IComparable`1" /> каждого элемента массива <see cref="T:System.Array" />.</summary>
      <param name="array">Сортируемый одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля.</param>
      <param name="index">Начальный индекс диапазона сортировки.</param>
      <param name="length">Число элементов в диапазоне сортировки.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше значения нижней границы массива <paramref name="array" />. -или- Значение параметра <paramref name="length" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="index" /> и <paramref name="length" /> не определяют допустимый диапазон в массиве <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidOperationException">Один или несколько элементов в массиве <paramref name="array" /> не реализуют универсальный интерфейс <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="M:System.Array.Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})">
      <summary>Сортирует элементы в диапазоне элементов массива <see cref="T:System.Array" />, используя заданный универсальный интерфейс <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
      <param name="array">Сортируемый одномерный массив <see cref="T:System.Array" />, индексация которого начинается с нуля.</param>
      <param name="index">Начальный индекс диапазона сортировки.</param>
      <param name="length">Число элементов в диапазоне сортировки.</param>
      <param name="comparer">Реализация универсального интерфейса <see cref="T:System.Collections.Generic.IComparer`1" />, используемая при сравнении элементов, или значение null для использования реализации универсального интерфейса <see cref="T:System.IComparable`1" /> каждого элемента.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше значения нижней границы массива <paramref name="array" />. -или- Значение параметра <paramref name="length" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="index" /> и <paramref name="length" /> не определяют допустимый диапазон в массиве <paramref name="array" />.  -или- Реализация <paramref name="comparer" /> вызвала ошибку при сортировке. Например, компаратор <paramref name="comparer" /> мог не возвратить 0 при сравнении элемента с самим собой.</exception>
      <exception cref="T:System.InvalidOperationException">Значение параметра <paramref name="comparer" /> — null, а один или несколько элементов в параметре <paramref name="array" /> не реализуют универсальный интерфейс <see cref="T:System.IComparable`1" />.</exception>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#Count">
      <summary>Получает число элементов, содержащихся в объекте <see cref="T:System.Array" />.</summary>
      <returns>Число элементов, содержащихся в интерфейсе T:System.Collections.ICollection.</returns>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#IsSynchronized">
      <summary>Получает значение, определяющее, является ли доступ к коллекции <see cref="T:System.Array" /> синхронизированным (потокобезопасным).</summary>
      <returns>Значение true, если доступ к коллекции <see cref="T:System.Array" /> является синхронизированным (потокобезопасным); в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Array.System#Collections#ICollection#SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Array" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к коллекции <see cref="T:System.Array" />.</returns>
    </member>
    <member name="M:System.Array.System#Collections#IList#Add(System.Object)">
      <summary>Добавляет элемент в объект <see cref="T:System.Collections.IList" />.</summary>
      <returns>Позиция, в которую вставлен новый элемент, или -1 для обозначения, что элемент не был помещен в коллекцию.</returns>
      <param name="value">Объект, который должен быть добавлен в коллекцию <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">Список <see cref="T:System.Collections.IList" /> доступен только для чтения. -или-  Коллекция <see cref="T:System.Collections.IList" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Clear">
      <summary>Удаляет все элементы из интерфейса <see cref="T:System.Collections.IList" />.</summary>
      <exception cref="T:System.NotSupportedException">Список <see cref="T:System.Collections.IList" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Contains(System.Object)">
      <summary>Определяет, входит ли элемент в состав <see cref="T:System.Collections.IList" />.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> найден в коллекции <see cref="T:System.Collections.IList" />; в противном случае — значение false.</returns>
      <param name="value">Объект, который требуется найти в текущем списке. Элемент, который требуется найти, для ссылочных типов может быть равен null.</param>
    </member>
    <member name="M:System.Array.System#Collections#IList#IndexOf(System.Object)">
      <summary>Определяет индекс заданного элемента коллекции <see cref="T:System.Collections.IList" />.</summary>
      <returns>Индекс значения, если оно найдено в списке; в противном случае — значение, равное -1.</returns>
      <param name="value">Объект, который требуется найти в текущем списке.</param>
    </member>
    <member name="M:System.Array.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Вставляет элемент в список <see cref="T:System.Collections.IList" /> по указанному индексу.</summary>
      <param name="index">Индекс, по которому требуется вставить <paramref name="value" />.</param>
      <param name="value">Объект, который нужно вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> не является допустимым индексом в списке <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.NotSupportedException">Список <see cref="T:System.Collections.IList" /> доступен только для чтения. -или-  Коллекция <see cref="T:System.Collections.IList" /> имеет фиксированный размер.</exception>
      <exception cref="T:System.NullReferenceException">Параметр <paramref name="value" /> является ссылкой со значением null в списке <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="P:System.Array.System#Collections#IList#IsFixedSize">
      <summary>Получает значение, показывающее, имеет ли объект <see cref="T:System.Array" /> фиксированный размер.</summary>
      <returns>Значение true, если список <see cref="T:System.Array" /> имеет фиксированный размер, в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Array.System#Collections#IList#IsReadOnly">
      <summary>Получает значение, указывающее, доступен ли объект <see cref="T:System.Array" /> только для чтения.</summary>
      <returns>Значение true, если <see cref="T:System.Array" /> доступна только для чтения; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Array.System#Collections#IList#Item(System.Int32)">
      <summary>Получает или задает элемент с указанным индексом.</summary>
      <returns>Элемент с заданным индексом.</returns>
      <param name="index">Индекс элемента, который необходимо получить или задать.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля. -или- Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.Collections.ICollection.Count" />.</exception>
      <exception cref="T:System.ArgumentException">Размерность текущего массива <see cref="T:System.Array" /> не равна единице.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#Remove(System.Object)">
      <summary>Удаляет первый экземпляр указанного объекта из коллекции <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Объект, который необходимо удалить из коллекции <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">Список <see cref="T:System.Collections.IList" /> доступен только для чтения. -или-  Коллекция <see cref="T:System.Collections.IList" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Удаляет элемент <see cref="T:System.Collections.IList" /> по указанному индексу.</summary>
      <param name="index">Индекс элемента, который должен быть удален.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">индекс не является допустимым в <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.NotSupportedException">Список <see cref="T:System.Collections.IList" /> доступен только для чтения. -или-  Коллекция <see cref="T:System.Collections.IList" /> имеет фиксированный размер.</exception>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Определяет позицию текущего объекта коллекции относительно другого объекта в порядке сортировки (находится перед другим объектов, на одной позиции с ним или после другого объекта).</summary>
      <returns>Целое число, определяющее, как соотносятся между собой текущий объект коллекции и другой объект. Возможные соотношения показаны в следующей таблице. 
Возвращаемое значение 	Описание 	
-1 	Текущий экземпляр стоит перед объектом <paramref name="other" />. 	
0	Текущий экземпляр и объект <paramref name="other" /> равны. 	
1	Текущий экземпляр стоит после объекта <paramref name="other" />.</returns>
      <param name="other">Объект для сравнения с текущим экземпляром.</param>
      <param name="comparer">Объект, сравнивающий текущий объект и объект <paramref name="other" />.</param>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Определяет, равен ли объект текущему экземпляру.</summary>
      <returns>true, если два объекта равны; в противном случае false.</returns>
      <param name="other">Объект для сравнения с текущим экземпляром.</param>
      <param name="comparer">Объект, определяющий, равны ли текущий экземпляр и объект <paramref name="other" />.</param>
    </member>
    <member name="M:System.Array.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Возвращает хэш-код текущего экземпляра.</summary>
      <returns>Хэш-код для текущего экземпляра.</returns>
      <param name="comparer">Объект, вычисляющий хэш-код текущего объекта.</param>
    </member>
    <member name="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})">
      <summary>Определяет, все ли элементы массива удовлетворяют условиям указанного предиката.</summary>
      <returns>Значение true, если каждый элемент массива <paramref name="array" /> удовлетворяет условиям заданного предиката; в противном случае — значение false. Если элементы в массиве отсутствуют, возвращается значение true.</returns>
      <param name="array">Индексируемый от нуля одномерный массив <see cref="T:System.Array" />, который необходимо проверить на соответствие условиям.</param>
      <param name="match">Объект <see cref="T:System.Predicate`1" />, определяющий условия, на соответствие которым проверяются элементы.</param>
      <typeparam name="T">Тип элементов массива.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null. -или- Параметр <paramref name="match" /> имеет значение null.</exception>
    </member>
    <member name="T:System.ArraySegment`1">
      <summary>Определяет границы фрагмента одномерного массива.</summary>
      <typeparam name="T">Тип элементов во фрагменте массива.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.#ctor(`0[])">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.ArraySegment`1" />, который задает границы для всех элементов в заданном массиве.</summary>
      <param name="array">Массив, для которого создается программа-оболочка.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
    </member>
    <member name="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.ArraySegment`1" />, который задает границы указанного диапазона элементов в заданном массиве.</summary>
      <param name="array">Массив, содержащий диапазон элементов, границы которого необходимо задать.</param>
      <param name="offset">Индекс первого элемента диапазона при индексации массива с нуля.</param>
      <param name="count">Число элементов в диапазоне.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="offset" /> или <paramref name="count" /> меньше 0.</exception>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="offset" /> и <paramref name="count" /> не определяют допустимый диапазон в массиве <paramref name="array" />.</exception>
    </member>
    <member name="P:System.ArraySegment`1.Array">
      <summary>Возвращает исходный массив, содержащий диапазон элементов, находящийся в пределах установленных границ фрагмента массива.</summary>
      <returns>Исходный массив, который был передан в конструктор и содержит диапазон, границы которого устанавливаются с помощью оболочки <see cref="T:System.ArraySegment`1" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ArraySegment`1.Count">
      <summary>Возвращает количество элементов в диапазоне, ограниченном фрагментом массива.</summary>
      <returns>Количество элементов в диапазоне, ограниченном оболочкой <see cref="T:System.ArraySegment`1" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.Equals(System.ArraySegment{`0})">
      <summary>Определяет, равна ли указанная структура <see cref="T:System.ArraySegment`1" /> текущему экземпляру.</summary>
      <returns>Значение true, если указанная структура <see cref="T:System.ArraySegment`1" /> равна текущему экземпляру; в противном случае — значение false.</returns>
      <param name="obj">Структура <see cref="T:System.ArraySegment`1" />, которую необходимо сравнить с текущим экземпляром.</param>
    </member>
    <member name="M:System.ArraySegment`1.Equals(System.Object)">
      <summary>Определяет, равен ли указанный объект текущему экземпляру.</summary>
      <returns>Значение true, если указанный объект является структурой <see cref="T:System.ArraySegment`1" /> и равен текущему экземпляру; в противном случае — значение false.</returns>
      <param name="obj">Объект для сравнения с текущим экземпляром.</param>
    </member>
    <member name="M:System.ArraySegment`1.GetHashCode">
      <summary>Возвращает хэш-код текущего экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
    </member>
    <member name="P:System.ArraySegment`1.Offset">
      <summary>Возвращает положение первого элемента в диапазоне, ограниченном фрагментом массива, относительно начала исходного массива.</summary>
      <returns>Положение первого элемента в диапазоне, ограниченном оболочкой <see cref="T:System.ArraySegment`1" />, относительно начала исходного массива.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})">
      <summary>Определяет равенство двух структур <see cref="T:System.ArraySegment`1" />.</summary>
      <returns>Значение true, если параметр <paramref name="a" /> равен <paramref name="b" />; в противном случае — значение false.</returns>
      <param name="a">Структура <see cref="T:System.ArraySegment`1" />, которая находится слева от оператора равенства.</param>
      <param name="b">Структура <see cref="T:System.ArraySegment`1" />, которая находится справа от оператора равенства.</param>
    </member>
    <member name="M:System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})">
      <summary>Определяет неравенство двух структур <see cref="T:System.ArraySegment`1" />.</summary>
      <returns>true, если значения <paramref name="a" /> и <paramref name="b" /> не равны; в противном случае — false.</returns>
      <param name="a">Структура <see cref="T:System.ArraySegment`1" />, которая находится слева от оператора неравенства.</param>
      <param name="b">Структура <see cref="T:System.ArraySegment`1" />, которая находится справа от оператора неравенства.</param>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Добавляет элемент во фрагмент массива.</summary>
      <param name="item">Объект, добавляемый во фрагмент массива.</param>
      <exception cref="T:System.NotSupportedException">Фрагмент массива доступен только для чтения.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Удаляет все элементы из фрагмента массива.</summary>
      <exception cref="T:System.NotSupportedException">Фрагмент массива доступен только для чтения.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Contains(`0)">
      <summary>Определяет, содержит ли фрагмент массива указанное значение.</summary>
      <returns>Значение true, если элемент <paramref name="item" /> найден во фрагменте массива; в противном случае — значение false.</returns>
      <param name="item">Объект, который необходимо найти во фрагменте массива.</param>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
      <summary>Копирует элементы сегмента массива в массив, начиная с указанного индекса массива.</summary>
      <param name="array">Одномерный массив, в который копируются элементы фрагмента массива. Индексация в массиве должна вестись с нуля.</param>
      <param name="arrayIndex">Индекс (с нуля) в массиве <paramref name="array" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="arrayIndex" /> меньше 0.</exception>
      <exception cref="T:System.ArgumentException">Массив <paramref name="array" /> является многомерным. -или- Число элементов в исходном фрагменте массива превышает размер доступного места от индекса <paramref name="arrayIndex" /> до конца целевого массива <paramref name="array" />. -или- Тип <paramref name="T" /> не может быть автоматически приведен к типу массива назначения <paramref name="array" />.</exception>
    </member>
    <member name="P:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Получает значение, указывающее, доступен ли сегмент массива только для чтения.</summary>
      <returns>Значение true, если сегмент массива доступен только для чтения; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Удаляет первое вхождение определенного объекта из фрагмента массива.</summary>
      <returns>Значение true, если элемент <paramref name="item" /> был успешно удален из фрагмента массива; в противном случае — значение false. Этот метод также возвращает значение false, если параметр <paramref name="item" /> не найден в сегменте массива.</returns>
      <param name="item">Объект, удаляемый из фрагмента массива.</param>
      <exception cref="T:System.NotSupportedException">Фрагмент массива доступен только для чтения.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий перебор элементов фрагмента массива.</summary>
      <returns>Перечислитель, который можно использовать для перебора элементов фрагмента массива.</returns>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IList{T}#IndexOf(`0)">
      <summary>Определяет индекс конкретного элемента в фрагменте массива.</summary>
      <returns>Индекс <paramref name="item" /> если он найден в списке; в противном случае его значение равно -1.</returns>
      <param name="item">Объект, который необходимо найти во фрагменте массива.</param>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>Вставляет элемент во фрагмент массива по указанному индексу.</summary>
      <param name="index">Индекс (с нуля), по которому вставляется <paramref name="item" />.</param>
      <param name="item">Объект, вставляемый во фрагмент массива.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> не является допустимым индексом во фрагменте массива.</exception>
      <exception cref="T:System.NotSupportedException">Фрагмент массива доступен только для чтения.</exception>
    </member>
    <member name="P:System.ArraySegment`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>Получает или задает элемент с указанным индексом.</summary>
      <returns>Элемент с заданным индексом.</returns>
      <param name="index">Отсчитываемый с нуля индекс получаемого или задаваемого элемента.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> не является допустимым индексом во фрагменте массива <see cref="T:System.ArraySegment`1" />.</exception>
      <exception cref="T:System.NotSupportedException">Свойство задано, и сегмент массива доступен только для чтения.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Удаляет элемент с заданным индексом из фрагмента массива.</summary>
      <param name="index">Отсчитываемый от нуля индекс удаляемого элемента.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> не является допустимым индексом во фрагменте массива.</exception>
      <exception cref="T:System.NotSupportedException">Фрагмент массива доступен только для чтения.</exception>
    </member>
    <member name="P:System.ArraySegment`1.System#Collections#Generic#IReadOnlyList{T}#Item(System.Int32)">
      <summary>Получает элемент по указанному индексу сегмента массива.</summary>
      <returns>Элемент с заданным индексом.</returns>
      <param name="index">Индекс элемента (с нуля), который требуется получить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> не является допустимым индексом во фрагменте массива <see cref="T:System.ArraySegment`1" />.</exception>
      <exception cref="T:System.NotSupportedException">Свойство установлено.</exception>
    </member>
    <member name="M:System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий перебор элементов фрагмента массива.</summary>
      <returns>Перечислитель, который можно использовать для перебора элементов фрагмента массива.</returns>
    </member>
    <member name="T:System.ArrayTypeMismatchException">
      <summary>Исключение, которое выбрасывается при попытке сохранить в массиве элемент неправильного типа.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArrayTypeMismatchException" />.</summary>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArrayTypeMismatchException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Строка <see cref="T:System.String" />, описывающая ошибку.</param>
    </member>
    <member name="M:System.ArrayTypeMismatchException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ArrayTypeMismatchException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="innerException" /> не является указателем null, текущее исключение выброшено в блоке catch, обрабатывающем внутренние исключения.</param>
    </member>
    <member name="T:System.AsyncCallback">
      <summary>Ссылается на метод, который должен вызываться при завершении соответствующей асинхронной операции.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AsyncCallback.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.AsyncCallback.BeginInvoke(System.IAsyncResult,System.AsyncCallback,System.Object)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AsyncCallback.EndInvoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.AsyncCallback.Invoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Attribute">
      <summary>Представляет базовый класс для настраиваемых атрибутов.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Attribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Attribute" />.</summary>
    </member>
    <member name="M:System.Attribute.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, равен ли этот экземпляр указанному объекту.</summary>
      <returns>true, если объект <paramref name="obj" /> типу и значению данного экземпляра; в противном случае — false.</returns>
      <param name="obj">Объект <see cref="T:System.Object" />, который необходимо сравнить с этим экземпляром, или значение null.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Attribute.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.AttributeTargets">
      <summary>Задает элементы приложения, по отношению к которым допускается применение атрибута.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.AttributeTargets.All">
      <summary>Атрибут может быть применен к любому элементу приложения.</summary>
    </member>
    <member name="F:System.AttributeTargets.Assembly">
      <summary>Атрибут может быть применен к сборке.</summary>
    </member>
    <member name="F:System.AttributeTargets.Class">
      <summary>Атрибут может быть применен к классу.</summary>
    </member>
    <member name="F:System.AttributeTargets.Constructor">
      <summary>Атрибут может быть применен к конструктору.</summary>
    </member>
    <member name="F:System.AttributeTargets.Delegate">
      <summary>Атрибут может быть применен к делегату.</summary>
    </member>
    <member name="F:System.AttributeTargets.Enum">
      <summary>Атрибут может быть применен к перечислению.</summary>
    </member>
    <member name="F:System.AttributeTargets.Event">
      <summary>Атрибут может быть применен к событию.</summary>
    </member>
    <member name="F:System.AttributeTargets.Field">
      <summary>Атрибут может быть применен к полю.</summary>
    </member>
    <member name="F:System.AttributeTargets.GenericParameter">
      <summary>Атрибут может быть применен к универсальному параметру.</summary>
    </member>
    <member name="F:System.AttributeTargets.Interface">
      <summary>Атрибут может быть применен к интерфейсу.</summary>
    </member>
    <member name="F:System.AttributeTargets.Method">
      <summary>Атрибут может быть применен к методу.</summary>
    </member>
    <member name="F:System.AttributeTargets.Module">
      <summary>Атрибут может быть применен к модулю.</summary>
    </member>
    <member name="F:System.AttributeTargets.Parameter">
      <summary>Атрибут может быть применен к параметру.</summary>
    </member>
    <member name="F:System.AttributeTargets.Property">
      <summary>Атрибут может быть применен к свойству.</summary>
    </member>
    <member name="F:System.AttributeTargets.ReturnValue">
      <summary>Атрибут может быть применен к возвращаемому значению.</summary>
    </member>
    <member name="F:System.AttributeTargets.Struct">
      <summary>Атрибут может быть применен к структуре, т.е. может являться типом значения.</summary>
    </member>
    <member name="T:System.AttributeUsageAttribute">
      <summary>Определяет использование другого класса атрибутов. Этот класс не наследуется.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.AttributeUsageAttribute" /> указанным списком <see cref="T:System.AttributeTargets" />, значением свойства <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> и значением свойства <see cref="P:System.AttributeUsageAttribute.Inherited" />.</summary>
      <param name="validOn">Набор значений, определенный при помощи побитовой операции ИЛИ, для определения того, какие элементы программы являются допустимыми.</param>
    </member>
    <member name="P:System.AttributeUsageAttribute.AllowMultiple">
      <summary>Возвращает или задает логическое значение, указывающее, возможно ли для одного элемента программы задать более одного экземпляра указанного атрибута.</summary>
      <returns>true, если задание более одного экземпляра является допустимым; в противном случае — false. Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AttributeUsageAttribute.Inherited">
      <summary>Возвращает или устанавливает логическое значение типа, указывающее, может ли указанный атрибут наследоваться производными классами и переопределенными членами.</summary>
      <returns>true, если атрибут может наследоваться производными классами и переопределенными членами, в противном случае — false. Значение по умолчанию — true.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.AttributeUsageAttribute.ValidOn">
      <summary>Возвращает или задает набор значений, определяющих, к каким элементам программы может применяться указанный атрибут.</summary>
      <returns>Одно или несколько значений <see cref="T:System.AttributeTargets" />. Значение по умолчанию: All.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.BadImageFormatException">
      <summary>Исключение, которое создается при недопустимом образе файла библиотеки динамической компоновки (DLL) или выполняемой программы.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.BadImageFormatException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.BadImageFormatException" />.</summary>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.BadImageFormatException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.BadImageFormatException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="inner">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="inner" /> не является указателем null, текущее исключение выброшено в блоке catch, обрабатывающем внутренние исключения.</param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.BadImageFormatException" /> указанным сообщением об ошибке и именем файла.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
      <param name="fileName">Полное имя файла с недопустимым образом.</param>
    </member>
    <member name="M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.BadImageFormatException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="fileName">Полное имя файла с недопустимым образом.</param>
      <param name="inner">Исключение, которое вызвало текущее исключение. Если значение параметра <paramref name="inner" /> не равно null, текущее исключение вызывается в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="P:System.BadImageFormatException.FileName">
      <summary>Возвращает имя файла, вызвавшего данное исключение.</summary>
      <returns>Имя файла с недопустимым образом или пустая ссылка, если имя файла не было передано конструктору для текущего экземпляра.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.BadImageFormatException.Message">
      <summary>Получает сообщение об ошибке и имя файла, вызвавшего данное исключение.</summary>
      <returns>Строка, содержащая сообщение об ошибке и имя файла, вызвавшего данное исключение.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.BadImageFormatException.ToString">
      <summary>Возвращает полное имя данного исключения и, возможно, сообщение об ошибке, имя внутреннего исключения и трассировку стека.</summary>
      <returns>Строка, содержащая полное имя данного исключения и, возможно, сообщение об ошибке, имя внутреннего исключения и трассировку стека.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.Boolean">
      <summary>Представляет логическое значение.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.CompareTo(System.Boolean)">
      <summary>Сравнивает данный экземпляр с заданным объектом <see cref="T:System.Boolean" /> и возвращает целое число, которое показывает их связь друг с другом.</summary>
      <returns>Целое число со знаком, представляющее результат сравнения значений этого экземпляра и параметра <paramref name="value" />. 
Возвращаемое значение  	Атрибут Condition  	
Меньше нуля  	Данный экземпляр содержит значение false, а параметр <paramref name="value" /> — значение true.  	
Ноль  	Данный экземпляр и параметр <paramref name="value" /> равны (оба равны значению true или false).  	
Больше нуля.  	Данный экземпляр содержит значение true, а параметр <paramref name="value" /> содержит значение false.</returns>
      <param name="value">Объект <see cref="T:System.Boolean" />, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Equals(System.Boolean)">
      <summary>Возвращает значение, указывающее, равен ли данный экземпляр заданному объекту типа <see cref="T:System.Boolean" />.</summary>
      <returns>true, если значение параметра <paramref name="obj" /> совпадает со значением данного экземпляра; в противном случае — false.</returns>
      <param name="obj">Значение типа <see cref="T:System.Boolean" /> для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>true, если параметр <paramref name="obj" /> имеет тип <see cref="T:System.Boolean" /> и содержит то же значение, что и данный экземпляр; в противном случае — false.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Boolean.FalseString">
      <summary>Представляет логическое значение false в виде строки. Это поле доступно только для чтения.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код для текущего объекта типа <see cref="T:System.Boolean" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Boolean.Parse(System.String)">
      <summary>Преобразует заданное строковое представление логического значения в эквивалентное значение типа <see cref="T:System.Boolean" /> или вызывает исключение, если строка не равна значению <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</summary>
      <returns>Значение true, если значение параметра <paramref name="value" /> равно значению поля <see cref="F:System.Boolean.TrueString" />; значение false, если значение параметра <paramref name="value" /> равно значению поля <see cref="F:System.Boolean.FalseString" />.</returns>
      <param name="value">Строка, содержащая преобразуемое значение.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Значение параметра <paramref name="value" /> не равно значению поля <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="obj" />. 
Возвращаемое значение  	Атрибут Condition  	
Меньше нуля  	Данный экземпляр содержит значение false, а параметр <paramref name="obj" /> — значение true.  	
Ноль  	Данный экземпляр и параметр <paramref name="obj" /> равны (оба равны значению true или false).  	
Больше нуля.  	Данный экземпляр содержит значение true, а параметр <paramref name="obj" /> — значение false. -или-  Параметр <paramref name="obj" /> имеет значение null.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром, или значение null.</param>
    </member>
    <member name="M:System.Boolean.ToString">
      <summary>Преобразовывает числовое значение этого экземпляра в эквивалентное ему строковое представление (“True” или ”False”).</summary>
      <returns>
        <see cref="F:System.Boolean.TrueString" />, если значением данного экземпляра является true, или <see cref="F:System.Boolean.FalseString" />, если его значением является false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Boolean.TrueString">
      <summary>Представляет логическое значение true в виде строки. Это поле доступно только для чтения.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Boolean.TryParse(System.String,System.Boolean@)">
      <summary>Пытается преобразовать заданное строковое представление логического значения в его эквивалент типа <see cref="T:System.Boolean" />. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="value">Строка, содержащая преобразуемое значение.</param>
      <param name="result">После возврата из этого метода в случае, если преобразование выполнено успешно, содержит true, если значение параметра <paramref name="value" /> равно <see cref="F:System.Boolean.TrueString" /> или false, если значение параметра <paramref name="value" /> равно <see cref="F:System.Boolean.FalseString" />. Если преобразование завершилось неудачей, содержит false. Преобразование завершается неудачей, если значение параметра <paramref name="value" /> равно null или не равно значению в поле <see cref="F:System.Boolean.TrueString" /> или <see cref="F:System.Boolean.FalseString" />.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Buffer">
      <summary>Манипулирует массивами простых типов.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Buffer.BlockCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Копирует указанное число байтов из исходного массива, начиная с определенного смещения, в конечный массив, начиная с определенного смещения.</summary>
      <param name="src">Исходный буфер.</param>
      <param name="srcOffset">Отсчитываемое от нуля смещение в буфере <paramref name="src" />.</param>
      <param name="dst">Конечный буфер.</param>
      <param name="dstOffset">Отсчитываемое от нуля смещение в буфере <paramref name="dst" />.</param>
      <param name="count">Число байтов, предназначенных для копирования.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="src" /> или <paramref name="dst" /> — null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="src" /> или <paramref name="dst" /> не является массивом примитивов. -или-  Число байтов в <paramref name="src" /> меньше <paramref name="srcOffset" /> + <paramref name="count" />. -или-  Число байтов в <paramref name="dst" /> меньше <paramref name="dstOffset" /> + <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="srcOffset" />, <paramref name="dstOffset" /> или <paramref name="count" /> меньше 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.ByteLength(System.Array)">
      <summary>Возвращает число байтов в указанном массиве.</summary>
      <returns>Число байтов в массиве.</returns>
      <param name="array">Массив.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> не является простым.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="array" /> больше 2 гигабайт (ГБ).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.GetByte(System.Array,System.Int32)">
      <summary>Извлекает байт из указанного места в указанном массиве.</summary>
      <returns>Возвращает байт <paramref name="index" /> в массиве.</returns>
      <param name="array">Массив.</param>
      <param name="index">Расположение в массиве.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> не является простым.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> отрицательно или больше длины массива <paramref name="array" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="array" /> больше 2 гигабайт (ГБ).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Buffer.SetByte(System.Array,System.Int32,System.Byte)">
      <summary>Присваивает указанное значение байту в определенном месте в указанном массиве.</summary>
      <param name="array">Массив.</param>
      <param name="index">Расположение в массиве.</param>
      <param name="value">Присваиваемое значение.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> не является простым.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> отрицательно или больше длины массива <paramref name="array" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="array" /> больше 2 гигабайт (ГБ).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Byte">
      <summary>Представляет 8-битовое целое число без знака.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.CompareTo(System.Byte)">
      <summary>Сравнивает данный экземпляр с заданным 8-битовым целым числом без знака и возвращает значение, указывающее, как соотносятся их значения.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Описание  	
Меньше нуля  	Данный экземпляр меньше <paramref name="value" />.  	
Zero  	Этот экземпляр и параметр <paramref name="value" /> равны.  	
Больше нуля.  	Этот экземпляр больше параметра <paramref name="value" />.</returns>
      <param name="value">8-битовое целое число без знака для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.Equals(System.Byte)">
      <summary>Возвращает значение, позволяющее определить, представляют ли этот экземпляр и заданный объект <see cref="T:System.Byte" /> одно и то же значение.</summary>
      <returns>Значение true, если значение параметра <paramref name="obj" /> равно данному экземпляру; в противном случае — значение false.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>Значение true, если параметр <paramref name="obj" /> является экземпляром типа <see cref="T:System.Byte" /> и равен значению данного экземпляра; в противном случае — значение false.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Byte.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код текущего экземпляра типа <see cref="T:System.Byte" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Byte.MaxValue">
      <summary>Представляет наибольшее возможное значение типа <see cref="T:System.Byte" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Byte.MinValue">
      <summary>Представляет наименьшее возможное значение типа <see cref="T:System.Byte" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String)">
      <summary>Преобразует строковое представление числа в его эквивалент типа <see cref="T:System.Byte" />.</summary>
      <returns>Байтовое значение, эквивалентное числу, которое содержится в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число. Данная строка интерпретируется с использованием стиля <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> неправильный.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Byte.MinValue" /> или больше значения <see cref="F:System.Byte.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Преобразует строковое представление числа с указанным стилем в его эквивалент в формате <see cref="T:System.Byte" />.</summary>
      <returns>Байтовое значение, эквивалентное числу, которое содержится в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число. Строка интерпретируется с использованием стиля, указанного в <paramref name="style" />.</param>
      <param name="style">Побитовая комбинация значений перечисления, обозначающая элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> неправильный.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Byte.MinValue" /> или больше значения <see cref="F:System.Byte.MaxValue" />.  -или- Параметр <paramref name="s" /> включает дробные разряды, не равные нулю.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в указанном стиле и формате, связанном с определенным языком и региональными параметрами, в его эквивалент типа <see cref="T:System.Byte" />.</summary>
      <returns>Байтовое значение, эквивалентное числу, которое содержится в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число. Строка интерпретируется с использованием стиля, указанного в <paramref name="style" />.</param>
      <param name="style">Побитовая комбинация значений перечисления, обозначающая элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения о формате параметра <paramref name="s" /> для определенного языка и региональных параметров. Если значение параметра <paramref name="provider" /> равно null, используются текущий язык и региональные параметры потока.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> неправильный.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Byte.MinValue" /> или больше значения <see cref="F:System.Byte.MaxValue" />.  -или- Параметр <paramref name="s" /> включает дробные разряды, не равные нулю.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.Parse(System.String,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в указанном формате, связанном с определенным языком и региональными параметрами, в его эквивалент типа <see cref="T:System.Byte" />.</summary>
      <returns>Байтовое значение, эквивалентное числу, которое содержится в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число. Данная строка интерпретируется с использованием стиля <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения об анализе параметра <paramref name="s" /> для определенного языка и региональных параметров. Если значение параметра <paramref name="provider" /> равно null, используются текущий язык и региональные параметры потока.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> неправильный.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Byte.MinValue" /> или больше значения <see cref="F:System.Byte.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Описание  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки.  	
Zero  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и объект <paramref name="value" />.  	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="value" /> в порядке сортировки. -или-  Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="value" /> не относится к типу <see cref="T:System.Byte" />.</exception>
    </member>
    <member name="M:System.Byte.ToString">
      <summary>Преобразует значение текущего объекта <see cref="T:System.Byte" /> в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения данного объекта, состоящее из последовательности цифр в диапазоне от 0 до 9 без начальных нулей.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.IFormatProvider)">
      <summary>Преобразует числовое значение текущего объекта <see cref="T:System.Byte" /> в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного объекта в формате, заданном в параметре <paramref name="provider" />.</returns>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.String)">
      <summary>Преобразует значение текущего объекта <see cref="T:System.Byte" /> в эквивалентное ему строковое представление с использованием заданного формата.</summary>
      <returns>Строковое представление текущего объекта <see cref="T:System.Byte" />, отформатированное, как указано в параметре <paramref name="format" />.</returns>
      <param name="format">Строка числового формата.</param>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> содержит неподдерживаемый описатель. Поддерживаемые описатели формата перечислены в разделе "Примечания".</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.ToString(System.String,System.IFormatProvider)">
      <summary>Преобразует числовое значение текущего объекта <see cref="T:System.Byte" /> в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление текущего объекта <see cref="T:System.Byte" />, отформатированное, как указано в параметрах <paramref name="format" /> и <paramref name="provider" />.</returns>
      <param name="format">Стандартная или пользовательская строка числового формата.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> содержит неподдерживаемый описатель. Поддерживаемые описатели формата перечислены в разделе "Примечания".</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.TryParse(System.String,System.Byte@)">
      <summary>Предпринимает попытку преобразования строкового представления числа в его эквивалент типа <see cref="T:System.Byte" /> и возвращает значение, позволяющее определить, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, содержащая преобразуемое число. Данная строка интерпретируется с использованием стиля <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="result">При возвращении этим методом содержит значение типа <see cref="T:System.Byte" />, эквивалентное числу, содержащемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось неудачей. Этот параметр передается без инициализации.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
      <summary>Преобразует строковое представление числа в указанном стиле и формате, связанном с определенным языком и региональными параметрами, в его эквивалент типа <see cref="T:System.Byte" />. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, содержащая преобразуемое число. Строка интерпретируется с использованием стиля, указанного в <paramref name="style" />.</param>
      <param name="style">Побитовая комбинация значений перечисления, обозначающая элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров. Если значение параметра <paramref name="provider" /> равно null, используются текущий язык и региональные параметры потока.</param>
      <param name="result">По возвращении из этого метода содержит 8-битовое целочисленное значение без знака, эквивалентное числу, содержащемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось неудачей. Преобразование завершается сбоем, если параметр <paramref name="s" /> равен null или <see cref="F:System.String.Empty" />, не находится в правильном формате или представляет число меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Char">
      <summary>Представляет символ как элемент кода UTF-16.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.CompareTo(System.Char)">
      <summary>Сравнивает данный экземпляр с заданным объектом <see cref="T:System.Char" /> и показывает, расположен ли данный экземпляр перед, после или на той же позиции в порядке сортировки, что и заданный объект <see cref="T:System.Char" />.</summary>
      <returns>Знаковое число, которое показывает позицию данного экземпляра в порядке сортировки по отношению к параметру <paramref name="value" />. 
Возвращаемое значение  	Описание  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" />.  	
Ноль  	Данный экземпляр имеет ту же позицию в порядке сортировки, что и <paramref name="value" />.  	
Больше нуля.  	Данный экземпляр стоит после параметра <paramref name="value" />.</returns>
      <param name="value">Объект <see cref="T:System.Char" /> для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.ConvertFromUtf32(System.Int32)">
      <summary>Преобразует заданную кодовую точку Юникода в строку в кодировке UTF-16.</summary>
      <returns>Строка, состоящая из одного объекта <see cref="T:System.Char" /> или суррогатной пары объектов <see cref="T:System.Char" />, эквивалентной кодовой точке, заданной в параметре <paramref name="utf32" />.</returns>
      <param name="utf32">21-битовая кодовая точка Юникода.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="utf32" /> не является допустимой 21-битовой кодовой точкой Юникода в диапазоне от U+0 до U+10FFFF, за исключением суррогатной пары в диапазоне от U+D800 до U+DFFF.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ConvertToUtf32(System.Char,System.Char)">
      <summary>Преобразует значение суррогатной пары в кодировке UTF-16 в кодовую точку Юникода.</summary>
      <returns>21-битовая кодовая точка Юникода, представленная параметрами <paramref name="highSurrogate" /> и <paramref name="lowSurrogate" />.</returns>
      <param name="highSurrogate">Старшая замещающая единица кода (то есть, единица кода в диапазоне от U+D800 до U+DBFF).</param>
      <param name="lowSurrogate">Младшая замещающая единица кода (то есть, единица кода в диапазоне от U+DC00 до U+DFFF).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="highSurrogate" /> не лежит в диапазоне от U+D800 до U+DBFF, или<paramref name="lowSurrogate" /> не лежит в диапазоне от U+DC00 до U+DFFF.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
      <summary>Преобразует значение символа в кодировке UTF-16 или суррогатную пару в заданной позиции в строке в кодовую точку Юникода.</summary>
      <returns>21-битовая кодовая точка Юникода, представленная символом или суррогатной парой в позиции в строке <paramref name="s" />, заданной параметром <paramref name="index" />.</returns>
      <param name="s">Строка, содержащая символ или суррогатную пару.</param>
      <param name="index">Позиция индекса символа или суррогатной пары в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> не является позицией в <paramref name="s" />.</exception>
      <exception cref="T:System.ArgumentException">Заданная позиция индекса содержит суррогатную пару, и либо первый символ этой пары не является допустимым старшим символом-заместителем, либо второй символ в этой паре не является допустимым младшим символом-заместителем.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.Equals(System.Char)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр указанному объекту <see cref="T:System.Char" />.</summary>
      <returns>Значение true, если параметр <paramref name="obj" /> равен значению данного экземпляра; в противном случае — значение false.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, равен ли этот экземпляр указанному объекту.</summary>
      <returns>Значение true, если параметр <paramref name="obj" /> является экземпляром типа <see cref="T:System.Char" /> и равен значению данного экземпляра; в противном случае — значение false.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром или null.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Char.GetNumericValue(System.Char)">
      <summary>Преобразует указанный числовой символ Юникода в число двойной точности с плавающей запятой.</summary>
      <returns>Числовое значение параметра <paramref name="c" />, если данный символ предоставляет число; в противном случае — значение -1,0.</returns>
      <param name="c">Знак Юникода, который необходимо преобразовать.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.GetNumericValue(System.String,System.Int32)">
      <summary>Преобразует числовой символ Юникода в указанной позиции в указанной строке в число двойной точности с плавающей запятой.</summary>
      <returns>Числовое значение символа в позиции <paramref name="index" /> в <paramref name="s" />, если данный символ предоставляет число; в противном случае — значение -1.</returns>
      <param name="s">Объект <see cref="T:System.String" />.</param>
      <param name="index">Позиция символа в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше последней позиции в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsControl(System.Char)">
      <summary>Показывает, относится ли указанный символ Юникода к категории управляющих символов.</summary>
      <returns>true, если <paramref name="c" /> является управляющим символом; в противном случае — false.</returns>
      <param name="c">Знак Юникода, который необходимо вычислить.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsControl(System.String,System.Int32)">
      <summary>Показывает, относится ли символ в указанной позиции в указанной строке к категории управляющих символов.</summary>
      <returns>true, если символ позиции <paramref name="index" /> в <paramref name="s" /> является управляющим; в противном случае — false.</returns>
      <param name="s">Строка.</param>
      <param name="index">Позиция знака, который необходимо вычислить в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше последней позиции в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsDigit(System.Char)">
      <summary>Показывает, относится ли указанный символ Юникода к категории десятичных цифр.</summary>
      <returns>true, если <paramref name="c" /> является десятичной цифрой; в противном случае — false.</returns>
      <param name="c">Знак Юникода, который необходимо вычислить.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsDigit(System.String,System.Int32)">
      <summary>Показывает, относится ли указанный символ Юникода в указанной позиции в указанной строке к категории десятичных цифр.</summary>
      <returns>true, если символ в позиции <paramref name="index" /> в <paramref name="s" /> является десятичной цифрой; в противном случае — false.</returns>
      <param name="s">Строка.</param>
      <param name="index">Позиция знака, который необходимо вычислить в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше последней позиции в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsHighSurrogate(System.Char)">
      <summary>Определяет, является ли заданный объект <see cref="T:System.Char" /> старшим символом-заместителем.</summary>
      <returns>true,  если числовое значение параметра <paramref name="c" /> лежит в диапазоне от U+D800 до U+DBFF; в противном случае — false.</returns>
      <param name="c">Знак Юникода, который необходимо вычислить.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
      <summary>Определяет, является ли заданный объект <see cref="T:System.Char" /> в заданной позиции в строке старшим символом-заместителем.</summary>
      <returns>true,  если числовое значение заданного символа в параметре <paramref name="s" /> лежит в диапазоне от U+D800 до U+DBFF; в противном случае — false.</returns>
      <param name="s">Строка.</param>
      <param name="index">Позиция знака, который необходимо вычислить в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> не является позицией в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetter(System.Char)">
      <summary>Показывает, относится ли указанный знак Юникода к категории букв Юникода.</summary>
      <returns>Значение true, если <paramref name="c" /> является буквой; в противном случае — значение false.</returns>
      <param name="c">Знак Юникода, который необходимо вычислить.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetter(System.String,System.Int32)">
      <summary>Показывает, относится ли указанный знак в указанной позиции в указанной строке к категории букв Юникода.</summary>
      <returns>Значение true, если знак в позиции <paramref name="index" /> в <paramref name="s" /> является буквой; в противном случае — значение false.</returns>
      <param name="s">Строка.</param>
      <param name="index">Позиция знака, который необходимо вычислить в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше последней позиции в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetterOrDigit(System.Char)">
      <summary>Показывает, относится ли указанный знак Юникода к категории букв или десятичных цифр.</summary>
      <returns>Значение true, если <paramref name="c" /> является буквой или десятичной цифрой; в противном случае — значение false.</returns>
      <param name="c">Знак Юникода, который необходимо вычислить.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
      <summary>Показывает, относится ли знак в указанной позиции в указанной строке к категории букв или десятичных цифр.</summary>
      <returns>Значение true, если знак в позиции <paramref name="index" /> в <paramref name="s" /> является буквой или десятичной цифрой; в противном случае — значение false.</returns>
      <param name="s">Строка.</param>
      <param name="index">Позиция знака, который необходимо вычислить в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше последней позиции в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLower(System.Char)">
      <summary>Показывает, относится ли указанный символ Юникода к категории букв нижнего регистра.</summary>
      <returns>true, если <paramref name="c" /> является буквой нижнего регистра; в противном случае — false.</returns>
      <param name="c">Знак Юникода, который необходимо вычислить.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLower(System.String,System.Int32)">
      <summary>Показывает, относится ли указанный символ в указанной позиции в указанной строке к категории букв нижнего регистра.</summary>
      <returns>true, если символ в позиции <paramref name="index" /> в <paramref name="s" /> является буквой нижнего регистра; в противном случае — false.</returns>
      <param name="s">Строка.</param>
      <param name="index">Позиция знака, который необходимо вычислить в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше последней позиции в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLowSurrogate(System.Char)">
      <summary>Определяет, является ли заданный объект <see cref="T:System.Char" /> младшим символом-заместителем.</summary>
      <returns>true,  если числовое значение параметра <paramref name="c" /> лежит в диапазоне от U+DC00 до U+DFFF; в противном случае — false.</returns>
      <param name="c">Знак, который необходимо вычислить.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
      <summary>Определяет, является ли заданный объект <see cref="T:System.Char" /> в заданной позиции в строке младшим символом-заместителем.</summary>
      <returns>true,  если числовое значение заданного символа в параметре <paramref name="s" /> лежит в диапазоне от U+DC00 до U+DFFF; в противном случае — false.</returns>
      <param name="s">Строка.</param>
      <param name="index">Позиция знака, который необходимо вычислить в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> не является позицией в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsNumber(System.Char)">
      <summary>Показывает, относится ли указанный символ Юникода к категории цифр.</summary>
      <returns>true, если <paramref name="c" /> является цифрой; в противном случае — false.</returns>
      <param name="c">Знак Юникода, который необходимо вычислить.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsNumber(System.String,System.Int32)">
      <summary>Показывает, относится ли указанный символ в указанной позиции в указанной строке к категории цифр.</summary>
      <returns>true, если символ в позиции <paramref name="index" /> в <paramref name="s" /> является цифрой; в противном случае — false.</returns>
      <param name="s">Строка.</param>
      <param name="index">Позиция знака, который необходимо вычислить в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше последней позиции в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsPunctuation(System.Char)">
      <summary>Показывает, относится ли указанный символ Юникода к категории знаков препинания.</summary>
      <returns>true, если <paramref name="c" /> является знаком препинания; в противном случае — false.</returns>
      <param name="c">Знак Юникода, который необходимо вычислить.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsPunctuation(System.String,System.Int32)">
      <summary>Показывает, относится ли указанный символ в указанной позиции в указанной строке к категории знаков препинания.</summary>
      <returns>true, если знак в позиции <paramref name="index" /> в <paramref name="s" /> является знаком препинания; в противном случае — false.</returns>
      <param name="s">Строка.</param>
      <param name="index">Позиция знака, который необходимо вычислить в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше последней позиции в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSeparator(System.Char)">
      <summary>Показывает, относится ли указанный символ Юникода к категории знаков-разделителей.</summary>
      <returns>Значение true, если <paramref name="c" /> является знаком-разделителем; в противном случае — значение false.</returns>
      <param name="c">Знак Юникода, который необходимо вычислить.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSeparator(System.String,System.Int32)">
      <summary>Показывает, относится ли указанный символ в указанной позиции в указанной строке к категории знаков-разделителей.</summary>
      <returns>true, если символ в позиции <paramref name="index" /> в <paramref name="s" /> является знаком-разделителем; в противном случае — false.</returns>
      <param name="s">Строка.</param>
      <param name="index">Позиция знака, который необходимо вычислить в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше последней позиции в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogate(System.Char)">
      <summary>Указывает, имеет ли заданный символ заменяющую кодовую единицу.</summary>
      <returns>Значение true, если параметр <paramref name="c" /> имеет большее или меньшее заменяющее значение; в противном случае — значение false.</returns>
      <param name="c">Знак Юникода, который необходимо вычислить.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogate(System.String,System.Int32)">
      <summary>Указывает, имеет ли указанный символ в указанной позиции в указанной строке заменяющую кодовую единицу.</summary>
      <returns>Значение true, если символ в позиции <paramref name="index" /> в <paramref name="s" /> является большим или меньшим заменяющим значением; в противном случае — значение false.</returns>
      <param name="s">Строка.</param>
      <param name="index">Позиция знака, который необходимо вычислить в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше последней позиции в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogatePair(System.Char,System.Char)">
      <summary>Определяет, образуют ли два заданных объекта <see cref="T:System.Char" /> суррогатную пару.</summary>
      <returns>true, если числовое значение параметра <paramref name="highSurrogate" /> лежит в диапазоне от U+D800 до U+DBFF, а числовое значение параметра <paramref name="lowSurrogate" /> лежит в диапазоне от U+DC00 до U+DFFF; в противном случае — false.</returns>
      <param name="highSurrogate">Знак, который необходимо вычислить в качестве старшего знака-заменителя в паре.</param>
      <param name="lowSurrogate">Знак, который необходимо вычислить в качестве младшего знака-заменителя в паре.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
      <summary>Определяет, образуют ли два смежных объекта <see cref="T:System.Char" /> в заданной позиции в строке суррогатную пару.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> включает соседние знаки в позициях <paramref name="index" /> и <paramref name="index" /> + 1, числовое значение знака в позиции <paramref name="index" /> лежит в диапазоне от U+D800 до U+DBFF и числовое значение знака в позиции <paramref name="index" /> +1 лежит в диапазоне от U+DC00 до U+DFFF; в противном случае — значение false.</returns>
      <param name="s">Строка.</param>
      <param name="index">Начальная позиция пары знаков для вычисления в строке <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> не является позицией в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSymbol(System.Char)">
      <summary>Показывает, относится ли указанный символ Юникода к категории символьных знаков.</summary>
      <returns>true, если <paramref name="c" /> является символьным знаком; в противном случае — false.</returns>
      <param name="c">Знак Юникода, который необходимо вычислить.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsSymbol(System.String,System.Int32)">
      <summary>Показывает, относится ли указанный символ в указанной позиции в указанной строке к категории символьных знаков.</summary>
      <returns>true, если символ в позиции <paramref name="index" /> в <paramref name="s" /> является символьным знаком; в противном случае — false.</returns>
      <param name="s">Строка.</param>
      <param name="index">Позиция знака, который необходимо вычислить в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше последней позиции в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsUpper(System.Char)">
      <summary>Показывает, относится ли указанный символ Юникода к категории букв верхнего регистра.</summary>
      <returns>true, если <paramref name="c" /> является буквой верхнего регистра; в противном случае — false.</returns>
      <param name="c">Знак Юникода, который необходимо вычислить.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsUpper(System.String,System.Int32)">
      <summary>Показывает, относится ли указанный символ в указанной позиции в указанной строке к категории букв верхнего регистра.</summary>
      <returns>true, если сивел в позиции <paramref name="index" /> в <paramref name="s" /> является буквой верхнего регистра; в противном случае — false.</returns>
      <param name="s">Строка.</param>
      <param name="index">Позиция знака, который необходимо вычислить в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше последней позиции в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsWhiteSpace(System.Char)">
      <summary>Показывает, относится ли указанный символ Юникода к категории пробелов.</summary>
      <returns>true, если <paramref name="c" /> является пробелом; в противном случае — false.</returns>
      <param name="c">Знак Юникода, который необходимо вычислить.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
      <summary>Показывает, относится ли указанный символ в указанной позиции в указанной строке к категории пробелов.</summary>
      <returns>true, если символ в позиции <paramref name="index" /> в <paramref name="s" /> является пробелом; в противном случае — false.</returns>
      <param name="s">Строка.</param>
      <param name="index">Позиция знака, который необходимо вычислить в <paramref name="s" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше последней позиции в <paramref name="s" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Char.MaxValue">
      <summary>Представляет наибольшее возможное значение типа <see cref="T:System.Char" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Char.MinValue">
      <summary>Представляет наименьшее возможное значение типа <see cref="T:System.Char" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, которое показывает позицию данного экземпляра в порядке сортировки по отношению к параметру <paramref name="value" />. 
Возвращаемое значение  	Описание  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки.  	
Ноль  	Данный экземпляр имеет ту же позицию в порядке сортировки, что и <paramref name="value" />.  	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="value" /> в порядке сортировки. -или-  Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром, или null.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="value" /> не является объектом <see cref="T:System.Char" />.</exception>
    </member>
    <member name="M:System.Char.ToLower(System.Char)">
      <summary>Преобразует значение символа Юникода в его эквивалент в нижнем регистре.</summary>
      <returns>Эквивалент <paramref name="c" /> в нижнем регистре или значение <paramref name="c" /> без изменений, если <paramref name="c" /> уже является буквой нижнего регистра или не является буквой алфавита.</returns>
      <param name="c">Знак Юникода, который необходимо преобразовать.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToLowerInvariant(System.Char)">
      <summary>Преобразует значение символа Юникода в его эквивалент в нижнем регистре, используя правила изменения регистра, связанные с инвариантным языком и региональными параметрами.</summary>
      <returns>Эквивалент параметра <paramref name="c" /> в нижнем регистре или значение <paramref name="c" /> без изменений, если <paramref name="c" /> уже является буквой нижнего регистра или не является буквой алфавита.</returns>
      <param name="c">Знак Юникода, который необходимо преобразовать.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToString">
      <summary>Преобразует значение этого экземпляра в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения этого экземпляра.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToString(System.Char)">
      <summary>Преобразует указанный символ Юникода в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения <paramref name="c" />.</returns>
      <param name="c">Знак Юникода, который необходимо преобразовать.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToUpper(System.Char)">
      <summary>Преобразует значение символа Юникода в эквивалентный символ верхнего регистра.</summary>
      <returns>Эквивалент параметра <paramref name="c" /> в верхнем регистре или значение <paramref name="c" /> без изменений, если <paramref name="c" /> уже является буквой верхнего регистра, не имеет эквивалента в верхнем регистре или не является буквой алфавита.</returns>
      <param name="c">Знак Юникода, который необходимо преобразовать.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.ToUpperInvariant(System.Char)">
      <summary>Преобразует значение символа Юникода в его эквивалент в верхнем регистре, используя правила изменения регистра, связанные с инвариантным языком и региональными параметрами.</summary>
      <returns>Эквивалент параметра <paramref name="c" /> в верхнем регистре или значение <paramref name="c" /> без изменений, если <paramref name="c" /> уже является буквой верхнего регистра или не является буквой алфавита.</returns>
      <param name="c">Знак Юникода, который необходимо преобразовать.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Char.TryParse(System.String,System.Char@)">
      <summary>Преобразует значение указанной строки в эквивалентный символ Юникода. Возвращает код, позволяющий определить, успешно ли выполнено преобразование.</summary>
      <returns>true, если параметр <paramref name="s" /> успешно преобразован, в противном случае — false.</returns>
      <param name="s">Строка, содержащая один знак, или null.</param>
      <param name="result">По возвращении из этого метода содержит символ Юникода. эквивалентный единственному символу в <paramref name="s" />, если преобразование выполнено успешно, или значение без изменений, если преобразование завершилось неудачей. Преобразование не удается выполнить, если параметр <paramref name="s" /> принимает значение null или длина параметра <paramref name="s" /> равна 1. Этот параметр передается без инициализации.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.CLSCompliantAttribute">
      <summary>Указывает, соответствует ли элемент программы спецификации CLS. Этот класс не наследуется.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.CLSCompliantAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует экземпляр класса <see cref="T:System.CLSCompliantAttribute" /> логическим значением, указывающим, является ли заданный программный элемент CLS-совместимым.</summary>
      <param name="isCompliant">true, если он CLS-совместим; в противном случае — false.</param>
    </member>
    <member name="P:System.CLSCompliantAttribute.IsCompliant">
      <summary>Возвращает логическое значение, указывающее, является ли заданный программный элемент CLS-совместимым.</summary>
      <returns>true, если программный элемент CLS-совместим; в противном случае — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Comparison`1">
      <summary>Представляет метод, сравнивающий два объекта одного типа.</summary>
      <typeparam name="T">Тип сравниваемых объектов.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Comparison`1.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Comparison`1.BeginInvoke(`0,`0,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Comparison`1.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Comparison`1.Invoke(`0,`0)">
    </member>
    <member name="T:System.DateTime">
      <summary>Представляет текущее время, обычно выраженное как дата и время суток.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTime" /> заданным числом тактов.</summary>
      <param name="year">Год (от 1 до 9999).</param>
      <param name="month">Месяц (от 1 до 12).</param>
      <param name="day">День (от 1 до количества дней в <paramref name="month" />).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> меньше 1 или больше 9999. -или-  <paramref name="month" /> меньше 1 или больше 12. -или-  <paramref name="day" /> меньше 1 или больше числа дней в <paramref name="month" />.</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTime" /> заданным годом, месяцем, днем, часом, минутой и секундой.</summary>
      <param name="year">Год (от 1 до 9999).</param>
      <param name="month">Месяц (от 1 до 12).</param>
      <param name="day">День (от 1 до количества дней в <paramref name="month" />).</param>
      <param name="hour">Часы (от 0 до 23).</param>
      <param name="minute">Минуты (от 0 до 59).</param>
      <param name="second">Секунды (от 0 до 59).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> меньше 1 или больше 9999.  -или-  <paramref name="month" /> меньше 1 или больше 12.  -или-  <paramref name="day" /> меньше 1 или больше числа дней в <paramref name="month" />. -или-  <paramref name="hour" /> меньше 0 или больше 23.  -или-  <paramref name="minute" /> меньше 0 или больше 59.  -или-  <paramref name="second" /> меньше 0 или больше 59.</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTime" /> заданными значениями года, месяца, дня, часа, минуты и секунды, а также временем UTC или местным временем.</summary>
      <param name="year">Год (от 1 до 9999).</param>
      <param name="month">Месяц (от 1 до 12).</param>
      <param name="day">День (от 1 до количества дней в <paramref name="month" />).</param>
      <param name="hour">Часы (от 0 до 23).</param>
      <param name="minute">Минуты (от 0 до 59).</param>
      <param name="second">Секунды (от 0 до 59).</param>
      <param name="kind">Одно из значений перечисления, указывающее, что задают параметры <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" /> и <paramref name="second" />: локальное время, универсальное глобальное время (UTC), или ни то, ни другое.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> меньше 1 или больше 9999.  -или-  <paramref name="month" /> меньше 1 или больше 12.  -или-  <paramref name="day" /> меньше 1 или больше числа дней в <paramref name="month" />. -или-  <paramref name="hour" /> меньше 0 или больше 23.  -или-  <paramref name="minute" /> меньше 0 или больше 59.  -или-  <paramref name="second" /> меньше 0 или больше 59.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" /> не является одним из значений <see cref="T:System.DateTimeKind" />.</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTime" /> заданным годом, месяцем, днем, часом, минутой, секундой и миллисекундой.</summary>
      <param name="year">Год (от 1 до 9999).</param>
      <param name="month">Месяц (от 1 до 12).</param>
      <param name="day">День (от 1 до количества дней в <paramref name="month" />).</param>
      <param name="hour">Часы (от 0 до 23).</param>
      <param name="minute">Минуты (от 0 до 59).</param>
      <param name="second">Секунды (от 0 до 59).</param>
      <param name="millisecond">Миллисекунды (от 0 до 999).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> меньше 1 или больше 9999. -или-  <paramref name="month" /> меньше 1 или больше 12. -или-  <paramref name="day" /> меньше 1 или больше числа дней в <paramref name="month" />. -или-  <paramref name="hour" /> меньше 0 или больше 23. -или-  <paramref name="minute" /> меньше 0 или больше 59. -или-  <paramref name="second" /> меньше 0 или больше 59. -или-  <paramref name="millisecond" /> меньше 0 или больше 999.</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTime" /> заданными значениями года, месяца, дня, часа, минуты, секунды и миллисекунды, а также временем UTC или местным временем.</summary>
      <param name="year">Год (от 1 до 9999).</param>
      <param name="month">Месяц (от 1 до 12).</param>
      <param name="day">День (от 1 до количества дней в <paramref name="month" />).</param>
      <param name="hour">Часы (от 0 до 23).</param>
      <param name="minute">Минуты (от 0 до 59).</param>
      <param name="second">Секунды (от 0 до 59).</param>
      <param name="millisecond">Миллисекунды (от 0 до 999).</param>
      <param name="kind">Одно из значений перечисления, указывающее, что задают параметры <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" /> и <paramref name="millisecond" />: локальное время, универсальное глобальное время (UTC), или ни то, ни другое.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> меньше 1 или больше 9999. -или-  <paramref name="month" /> меньше 1 или больше 12. -или-  <paramref name="day" /> меньше 1 или больше числа дней в <paramref name="month" />. -или-  <paramref name="hour" /> меньше 0 или больше 23. -или-  <paramref name="minute" /> меньше 0 или больше 59. -или-  <paramref name="second" /> меньше 0 или больше 59. -или-  <paramref name="millisecond" /> меньше 0 или больше 999.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" /> не является одним из значений <see cref="T:System.DateTimeKind" />.</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int64)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTime" /> заданным числом тактов.</summary>
      <param name="ticks">Дата и время, представленные в виде нескольких 100-наносекундных интервалов, завершившихся с момента 00:00:00.000 1 января 0001 г. по григорианскому календарю.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="ticks" /> меньше <see cref="F:System.DateTime.MinValue" /> или больше <see cref="F:System.DateTime.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTime.#ctor(System.Int64,System.DateTimeKind)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTime" /> заданным числом тактов и временем UTC или местным временем.</summary>
      <param name="ticks">Дата и время, представленные в виде нескольких 100-наносекундных интервалов, завершившихся с момента 00:00:00.000 1 января 0001 г. по григорианскому календарю.</param>
      <param name="kind">Одно из значений перечисления, указывающее, какое время задает параметр <paramref name="ticks" />: локальное, универсальное глобальное (UTC), или ни то, ни другое.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="ticks" /> меньше <see cref="F:System.DateTime.MinValue" /> или больше <see cref="F:System.DateTime.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="kind" /> не является одним из значений <see cref="T:System.DateTimeKind" />.</exception>
    </member>
    <member name="M:System.DateTime.Add(System.TimeSpan)">
      <summary>Возвращает новый объект <see cref="T:System.DateTime" />, добавляющий значение заданного объекта <see cref="T:System.TimeSpan" /> к значению данного экземпляра.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим экземпляром, и интервала времени, представленного параметром <paramref name="value" />.</returns>
      <param name="value">Положительный или отрицательный интервал времени.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующий объект <see cref="T:System.DateTime" /> меньше, чем <see cref="F:System.DateTime.MinValue" /> или больше, чем <see cref="F:System.DateTime.MaxValue" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddDays(System.Double)">
      <summary>Возвращает новый объект <see cref="T:System.DateTime" />, добавляющий заданное число дней к значению данного экземпляра.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим экземпляром, и количества дней, представленного параметром <paramref name="value" />.</returns>
      <param name="value">Число полных и неполных дней. Параметр <paramref name="value" /> может быть положительным или отрицательным.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующий объект <see cref="T:System.DateTime" /> меньше, чем <see cref="F:System.DateTime.MinValue" /> или больше, чем <see cref="F:System.DateTime.MaxValue" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddHours(System.Double)">
      <summary>Возвращает новый объект <see cref="T:System.DateTime" />, добавляющий заданное число часов к значению данного экземпляра.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим экземпляром, и количества часов, представленного параметром <paramref name="value" />.</returns>
      <param name="value">Число полных и неполных часов. Параметр <paramref name="value" /> может быть положительным или отрицательным.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующий объект <see cref="T:System.DateTime" /> меньше, чем <see cref="F:System.DateTime.MinValue" /> или больше, чем <see cref="F:System.DateTime.MaxValue" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMilliseconds(System.Double)">
      <summary>Возвращает новый объект <see cref="T:System.DateTime" />, добавляющий заданное число миллисекунд к значению данного экземпляра.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим экземпляром, и количества миллисекунд, представленного параметром <paramref name="value" />.</returns>
      <param name="value">Число полных и неполных миллисекунд. Параметр <paramref name="value" /> может быть положительным или отрицательным. Заметьте, что это значение округляется до ближайшего целого числа.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующий объект <see cref="T:System.DateTime" /> меньше, чем <see cref="F:System.DateTime.MinValue" /> или больше, чем <see cref="F:System.DateTime.MaxValue" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMinutes(System.Double)">
      <summary>Возвращает новый объект <see cref="T:System.DateTime" />, добавляющий заданное число минут к значению данного экземпляра.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим экземпляром, и количества минут, представленного параметром <paramref name="value" />.</returns>
      <param name="value">Число полных и неполных минут. Параметр <paramref name="value" /> может быть положительным или отрицательным.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующий объект <see cref="T:System.DateTime" /> меньше, чем <see cref="F:System.DateTime.MinValue" /> или больше, чем <see cref="F:System.DateTime.MaxValue" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddMonths(System.Int32)">
      <summary>Возвращает новый объект <see cref="T:System.DateTime" />, добавляющий заданное число месяцев к значению данного экземпляра.</summary>
      <returns>Объект, значением которого является сумма даты и времени, представленных этим экземпляром, и значения, представленного параметром <paramref name="months" />.</returns>
      <param name="months">Число месяцев. Параметр <paramref name="months" /> может быть положительным или отрицательным.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующий объект <see cref="T:System.DateTime" /> меньше, чем <see cref="F:System.DateTime.MinValue" /> или больше, чем <see cref="F:System.DateTime.MaxValue" />. -или-  Значение параметра <paramref name="months" /> меньше -120 000 или больше 120 000.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddSeconds(System.Double)">
      <summary>Возвращает новый объект <see cref="T:System.DateTime" />, добавляющий заданное число секунд к значению данного экземпляра.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим экземпляром, и количества секунд, представленного параметром <paramref name="value" />.</returns>
      <param name="value">Число полных и неполных секунд. Параметр <paramref name="value" /> может быть положительным или отрицательным.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующий объект <see cref="T:System.DateTime" /> меньше, чем <see cref="F:System.DateTime.MinValue" /> или больше, чем <see cref="F:System.DateTime.MaxValue" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddTicks(System.Int64)">
      <summary>Возвращает новый объект <see cref="T:System.DateTime" />, добавляющий заданное число тактов к значению данного экземпляра.</summary>
      <returns>Объект, значением которого является сумма даты и времени, представленных этим экземпляром, и значения времени, представленного параметром <paramref name="value" />.</returns>
      <param name="value">Число 100-наносекундных тактов. Параметр <paramref name="value" /> может быть положительным или отрицательным.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующий объект <see cref="T:System.DateTime" /> меньше, чем <see cref="F:System.DateTime.MinValue" /> или больше, чем <see cref="F:System.DateTime.MaxValue" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.AddYears(System.Int32)">
      <summary>Возвращает новый объект <see cref="T:System.DateTime" />, добавляющий заданное число лет к значению данного экземпляра.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим экземпляром, и количества лет, представленного параметром <paramref name="value" />.</returns>
      <param name="value">Число лет. Параметр <paramref name="value" /> может быть положительным или отрицательным.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> или результирующий объект <see cref="T:System.DateTime" /> меньше, чем <see cref="F:System.DateTime.MinValue" /> или больше, чем <see cref="F:System.DateTime.MaxValue" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Compare(System.DateTime,System.DateTime)">
      <summary>Сравнивает два экземпляра объекта <see cref="T:System.DateTime" /> и возвращает целое число, которое показывает, предшествует ли первый экземпляр второму, совпадает или расположен позже.</summary>
      <returns>Число со знаком, обозначающее относительные значения параметров <paramref name="t1" /> и <paramref name="t2" />. 
Тип значения  	Атрибут Condition  	
Меньше нуля  	Момент, указанный в параметре <paramref name="t1" /> наступает раньше, чем момент, указанный в параметре <paramref name="t2" />.  	
Zero  	Параметр <paramref name="t1" /> совпадает с параметром <paramref name="t2" />.  	
Больше нуля.  	Момент, указанный в параметре <paramref name="t1" />, наступает позже, чем момент, указанный в параметре <paramref name="t2" />.</returns>
      <param name="t1">Первый сравниваемый объект.</param>
      <param name="t2">Второй сравниваемый объект.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.CompareTo(System.DateTime)">
      <summary>Сравнивает значение данного экземпляра с заданным значением <see cref="T:System.DateTime" /> и возвращает целочисленное значение, указывающее, когда наступает момент, заданный в данном экземпляре: раньше, позже или одновременно с моментом, заданным значением <see cref="T:System.DateTime" />.</summary>
      <returns>Число со знаком, представляющее результат сравнения значений этого экземпляра и параметра <paramref name="value" />. 
Значение  	Описание  	
Меньше нуля  	Данный экземпляр раньше <paramref name="value" />.  	
Zero  	Данный экземпляр равен <paramref name="value" />.  	
Больше нуля.  	Этот экземпляр позже <paramref name="value" />.</returns>
      <param name="value">Объект, сравниваемый с текущим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Date">
      <summary>Возвращает компоненту даты этого экземпляра.</summary>
      <returns>Новый объект с такой же датой, как этот экземпляр и значением времени, равным полуночи (00:00:00).</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Day">
      <summary>Возвращает день месяца, представленный этим экземпляром.</summary>
      <returns>Компонент, представляющий день, выраженный как значение от 1 до 31.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.DayOfWeek">
      <summary>Возвращает день недели, представленный этим экземпляром.</summary>
      <returns>Перечислимая константа, которая указывает на день недели для этого значения <see cref="T:System.DateTime" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.DayOfYear">
      <summary>Возвращает день года, представленный этим экземпляром.</summary>
      <returns>Компонент, представляющий год, выраженный как значение от 1 до 366.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.DaysInMonth(System.Int32,System.Int32)">
      <summary>Возвращает число дней в указанном месяце указанного года.</summary>
      <returns>Число дней в <paramref name="month" /> для заданного <paramref name="year" />. Например, если параметр <paramref name="month" /> равен 2 февраля, возвращаемым значением является 8 или 29 в зависимости от того, является ли <paramref name="year" /> високосным годом.</returns>
      <param name="year">Год.</param>
      <param name="month">Месяц (число в диапазоне от 1 до 12).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="month" /> меньше 1 или больше 12. -или- <paramref name="year" /> меньше 1 или больше 9999.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.DateTime)">
      <summary>Возвращает значение, указывающее, равно ли значение данного экземпляра значению заданного экземпляра <see cref="T:System.DateTime" />.</summary>
      <returns>true, если параметр <paramref name="value" /> равен значению данного экземпляра; в противном случае — false.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.DateTime,System.DateTime)">
      <summary>Возвращает значение, указывающее, содержат ли два экземпляра <see cref="T:System.DateTime" /> одно и то же значение даты и времени.</summary>
      <returns>Значение true, если два значения равны; в противном случае — значение false.</returns>
      <param name="t1">Первый сравниваемый объект.</param>
      <param name="t2">Второй сравниваемый объект.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> является экземпляром типа <see cref="T:System.DateTime" /> и равен значению данного экземпляра; в противном случае — значение false.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.FromBinary(System.Int64)">
      <summary>Десериализует 64-битовое значение и воссоздает исходный сериализованный объект <see cref="T:System.DateTime" />.</summary>
      <returns>Объект, который эквивалентен объекту <see cref="T:System.DateTime" />, сериализованному методом <see cref="M:System.DateTime.ToBinary" />.</returns>
      <param name="dateData">64-битовое целое число со знаком, кодирующее свойство <see cref="P:System.DateTime.Kind" /> в 2-битовое поле и свойство <see cref="P:System.DateTime.Ticks" /> в 62-битовое поле.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="dateData" /> меньше <see cref="F:System.DateTime.MinValue" /> или больше <see cref="F:System.DateTime.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.FromFileTime(System.Int64)">
      <summary>Преобразует заданную временную характеристику файла Windows в ее эквивалент по местному времени.</summary>
      <returns>Объект, представляющий местное время, эквивалентное дате и времени, которые определяются параметром <paramref name="fileTime" />.</returns>
      <param name="fileTime">Временная характеристика файла Windows, выраженная в тактах.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="fileTime" /> меньше 0 или представляет время, большее <see cref="F:System.DateTime.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.FromFileTimeUtc(System.Int64)">
      <summary>Преобразует заданную временную характеристику файла Windows в ее UTC-эквивалент.</summary>
      <returns>Объект, представляющий время в формате UTC, эквивалентное дате и времени, которые определяются параметром <paramref name="fileTime" />.</returns>
      <param name="fileTime">Временная характеристика файла Windows, выраженная в тактах.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="fileTime" /> меньше 0 или представляет время, большее <see cref="F:System.DateTime.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats">
      <summary>Преобразует значение этого экземпляра во все строковые представления, поддерживаемые стандартным форматом даты и времени.</summary>
      <returns>Массив строк, каждый элемент которого является представлением значения этого экземпляра, отформатированным с использованием одного из стандартных спецификаторов формата даты и времени.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.Char)">
      <summary>Преобразует значение этого экземпляра во все строковые представления, поддерживаемые указанным стандартным спецификатором формата даты и времени.</summary>
      <returns>Массив строк, каждый элемент которого является представлением значения этого экземпляра, отформатированным с использованием стандартного спецификатора формата даты и времени <paramref name="format" />.</returns>
      <param name="format">Стандартная строка формата даты и времени (см. примечания).</param>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> не является допустимым символом описателя стандартного формата даты и времени.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)">
      <summary>Преобразует значение этого экземпляра во все строковые представления, поддерживаемые указанным стандартным спецификатором формата даты и времени и сведениями о форматировании, связанными с языком и региональными параметрами.</summary>
      <returns>Массив строк, каждый элемент которого является представлением значения этого экземпляра, отформатированным с использованием одного из стандартных спецификаторов формата даты и времени.</returns>
      <param name="format">Строка формата даты и времени (см. примечания).</param>
      <param name="provider">Объект, который представляет связанную с языком и региональными параметрами информацию о форматировании этого экземпляра.</param>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> не является допустимым символом описателя стандартного формата даты и времени.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)">
      <summary>Преобразует значение этого экземпляра во все строковые представления, поддерживаемые стандартными спецификаторами формата даты и времени и указанными сведениями о форматировании, связанными с языком и региональными параметрами.</summary>
      <returns>Массив строк, каждый элемент которого является представлением значения этого экземпляра, отформатированным с использованием одного из стандартных спецификаторов формата даты и времени.</returns>
      <param name="provider">Объект, который представляет связанную с языком и региональными параметрами информацию о форматировании этого экземпляра.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Hour">
      <summary>Возвращает компонент часа даты, представленной этим экземпляром.</summary>
      <returns>Компонент, представляющий час, выраженный как значение от 0 до 23.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.IsDaylightSavingTime">
      <summary>Указывает, попадает ли данный экземпляр объекта <see cref="T:System.DateTime" /> в диапазон летнего времени для текущего часового пояса.</summary>
      <returns>Значение true если значение свойства <see cref="P:System.DateTime.Kind" /> — <see cref="F:System.DateTimeKind.Local" /> или <see cref="F:System.DateTimeKind.Unspecified" /> и значение этого экземпляра <see cref="T:System.DateTime" /> находится в диапазоне летнего времени для локального часового пояса; false если <see cref="P:System.DateTime.Kind" /> —<see cref="F:System.DateTimeKind.Utc" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.IsLeapYear(System.Int32)">
      <summary>Возвращает сведения о том, является ли указанный год високосным.</summary>
      <returns>true, если <paramref name="year" /> является високосным годом; в противном случае — false.</returns>
      <param name="year">4-значный номер года.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="year" /> меньше 1 или больше 9999.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Kind">
      <summary>Возвращает значение, указывающее, на каком времени основано время, представленное этим экземпляром: местном, UTC или ни на том, ни на другом.</summary>
      <returns>Одно из значений перечисления, определяющее значение текущего времени. Значение по умолчанию: <see cref="F:System.DateTimeKind.Unspecified" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.DateTime.MaxValue">
      <summary>Представляет наибольшее возможное значение типа <see cref="T:System.DateTime" />. Это поле доступно только для чтения.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Millisecond">
      <summary>Возвращает компонент миллисекунд для даты, представленной в данном экземпляре.</summary>
      <returns>Компонент, представляющий миллисекунды, выраженный как значение от 0 до 999.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Minute">
      <summary>Возвращает компонент минуты даты, представленной этим экземпляром.</summary>
      <returns>Компонент, представляющий минуту, выраженный как значение от 0 до 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.DateTime.MinValue">
      <summary>Представляет минимально допустимое значение типа <see cref="T:System.DateTime" />. Это поле доступно только для чтения.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Month">
      <summary>Возвращает компонент месяца даты, представленной этим экземпляром.</summary>
      <returns>Компонент, представляющий месяц, выраженный как значение от 1 до 12.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Now">
      <summary>Получает объект <see cref="T:System.DateTime" />, которому присвоены текущие дата и время данного компьютера, выраженные как местное время.</summary>
      <returns>Объект, значение которого является текущим местным значением даты и времени.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Addition(System.DateTime,System.TimeSpan)">
      <summary>Прибавляет указанный временной интервал к заданной дате и времени, возвращая новую дату и время.</summary>
      <returns>Объект, значение которого является суммой значений <paramref name="d" /> и <paramref name="t" />.</returns>
      <param name="d">Добавляемое значение даты и времени.</param>
      <param name="t">Добавляемый интервал времени.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующий объект <see cref="T:System.DateTime" /> меньше, чем <see cref="F:System.DateTime.MinValue" /> или больше, чем <see cref="F:System.DateTime.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Equality(System.DateTime,System.DateTime)">
      <summary>Определяет, равны ли два заданных экземпляра класса <see cref="T:System.DateTime" />.</summary>
      <returns>Значение true, если параметры <paramref name="d1" /> и <paramref name="d2" /> представляют одинаковую дату и время; в противном случае — значение false.</returns>
      <param name="d1">Первый сравниваемый объект.</param>
      <param name="d2">Второй сравниваемый объект.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)">
      <summary>Определяет, является ли значение одного заданного объекта <see cref="T:System.DateTime" /> позже другого заданного объекта <see cref="T:System.DateTime" />.</summary>
      <returns>Значение true, если значение <paramref name="t1" /> позже значения <paramref name="t2" />; в противном случае — значение false.</returns>
      <param name="t1">Первый сравниваемый объект.</param>
      <param name="t2">Второй сравниваемый объект.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)">
      <summary>Определяет, представляет ли один заданный <see cref="T:System.DateTime" /> дату и время, которое такое же или позже, чем другое заданное <see cref="T:System.DateTime" />.</summary>
      <returns>Значение true, если <paramref name="t1" /> происходит одновременно или позже <paramref name="t2" />; в противном случае — значение false.</returns>
      <param name="t1">Первый сравниваемый объект.</param>
      <param name="t2">Второй сравниваемый объект.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Inequality(System.DateTime,System.DateTime)">
      <summary>Определяет, являются ли два заданных экземпляра класса <see cref="T:System.DateTime" /> неравными.</summary>
      <returns>Значение true, если параметры <paramref name="d1" /> и <paramref name="d2" /> не представляют одинаковую дату и время; в противном случае — значение false.</returns>
      <param name="d1">Первый сравниваемый объект.</param>
      <param name="d2">Второй сравниваемый объект.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_LessThan(System.DateTime,System.DateTime)">
      <summary>Определяет, является ли значение одного заданного объекта <see cref="T:System.DateTime" /> раньшим, чем значение другого заданного объекта <see cref="T:System.DateTime" />.</summary>
      <returns>Значение true, если значение <paramref name="t1" /> раньше значения <paramref name="t2" />; в противном случае — значение false.</returns>
      <param name="t1">Первый сравниваемый объект.</param>
      <param name="t2">Второй сравниваемый объект.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)">
      <summary>Определяет, представляет ли один заданный <see cref="T:System.DateTime" /> дату и время, которое такое же или раньше, чем другое заданное <see cref="T:System.DateTime" />.</summary>
      <returns>Значение true, если <paramref name="t1" /> происходит одновременно или позже <paramref name="t2" />; в противном случае — значение false.</returns>
      <param name="t1">Первый сравниваемый объект.</param>
      <param name="t2">Второй сравниваемый объект.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Subtraction(System.DateTime,System.DateTime)">
      <summary>Вычитает указанную дату и время из другой указанной даты и времени и возвращает временной интервал.</summary>
      <returns>Временной интервал между значениями <paramref name="d1" /> и <paramref name="d2" />, то есть <paramref name="d1" /> минус <paramref name="d2" />.</returns>
      <param name="d1">Значение даты и времени, из которого вычитается интервал (уменьшаемое).</param>
      <param name="d2">Значение даты и времени, которое вычитается (вычитаемое).</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)">
      <summary>Вычитает заданный временной интервал из указанной даты и времени и возвращает новую дату и время.</summary>
      <returns>Объект, значение которого является разностью значений <paramref name="d" /> и <paramref name="t" />.</returns>
      <param name="d">Значение даты и времени, из которого производится вычитание.</param>
      <param name="t">Вычитаемый интервал времени.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующий объект <see cref="T:System.DateTime" /> меньше, чем <see cref="F:System.DateTime.MinValue" /> или больше, чем <see cref="F:System.DateTime.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String)">
      <summary>Преобразует строковое представление даты и времени в его эквивалент <see cref="T:System.DateTime" />.</summary>
      <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> не содержит допустимое строковое представление даты и времени.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTime" />, используя сведения о форматировании, связанные с языком и региональными параметрами.</summary>
      <returns>Объект, эквивалентный дате и времени, которые содержатся в параметре <paramref name="s" />, определяемом параметром <paramref name="provider" />.</returns>
      <param name="s">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="provider">Объект, предоставляющий сведения о формате параметра <paramref name="s" /> для определенного языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> не содержит допустимое строковое представление даты и времени.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTime" />, используя указанные сведения о форматировании, связанные с языком и региональными параметрами, а также стиль.</summary>
      <returns>Объект, эквивалентный дате и времени, которые содержатся в параметре <paramref name="s" />, определяемом параметрами <paramref name="provider" /> и <paramref name="styles" />.</returns>
      <param name="s">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <param name="styles">Побитовая комбинация значений перечисления, показывающая элементы стиля, которые могут присутствовать в параметре <paramref name="s" />, чтобы операция анализа прошла успешно. Данная комбинация определяет способ интерпретации анализируемых данных с учетом текущего часового пояса или текущей даты. Обычно указывается значение <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> не содержит допустимое строковое представление даты и времени.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="styles" /> содержит недопустимое сочетание значений <see cref="T:System.Globalization.DateTimeStyles" />. Например, и <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />, и <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTime" />, используя указанные сведения о форматировании, связанные с языком и региональными параметрами. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
      <returns>Объект, эквивалентный дате и времени, которые содержатся в параметре <paramref name="s" />, определяемом параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
      <param name="s">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="format">Описатель формата, задающий требуемый формат <paramref name="s" />. Дополнительные сведения см. в разделе "Замечания".</param>
      <param name="provider">Объект, предоставляющий сведения о формате параметра <paramref name="s" /> для определенного языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="s" /> или <paramref name="format" /> — null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> или <paramref name="format" /> является пустой строкой.  -или-  Строка <paramref name="s" /> не содержит дату и время, соответствующие формату, заданному в параметре <paramref name="format" />.  -или- Компонент часов и обозначение AM/PM в <paramref name="s" /> не совпадают.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTime" />, используя заданный формат, указанные сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат строкового представления должен полностью соответствовать заданному формату. В противном случае возникает исключение.</summary>
      <returns>Объект, эквивалентный дате и времени, которые содержатся в параметре <paramref name="s" />, определяемом параметрами <paramref name="format" />, <paramref name="provider" /> и <paramref name="style" />.</returns>
      <param name="s">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="format">Описатель формата, задающий требуемый формат <paramref name="s" />. Дополнительные сведения см. в разделе "Замечания".</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <param name="style">Побитовая комбинация значений перечисления, которая предоставляет дополнительную информацию о параметре <paramref name="s" />, об элементах стиля, которые могут присутствовать в параметре <paramref name="s" />, или о преобразовании из параметра <paramref name="s" /> в значение <see cref="T:System.DateTime" />. Обычно указывается значение <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="s" /> или <paramref name="format" /> — null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> или <paramref name="format" /> является пустой строкой.  -или-  Строка <paramref name="s" /> не содержит дату и время, соответствующие формату, заданному в параметре <paramref name="format" />.  -или- Компонент часов и обозначение AM/PM в <paramref name="s" /> не совпадают.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="style" /> содержит недопустимое сочетание значений <see cref="T:System.Globalization.DateTimeStyles" />. Например, и <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />, и <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTime" />, используя заданный массив форматов, указанные сведения о форматировании, связанные с языком и региональными параметрами, и стиль форматирования. Формат строкового представления должен полностью соответствовать по крайней мере одному из заданных форматов. В противном случае возникает исключение.</summary>
      <returns>Объект, эквивалентный дате и времени, которые содержатся в параметре <paramref name="s" />, определяемом параметрами <paramref name="formats" />, <paramref name="provider" /> и <paramref name="style" />.</returns>
      <param name="s">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="formats">Массив разрешенных форматов <paramref name="s" />. Дополнительные сведения см. в разделе "Замечания".</param>
      <param name="provider">Объект, предоставляющий сведения о формате параметра <paramref name="s" /> для определенного языка и региональных параметров.</param>
      <param name="style">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="s" /> или <paramref name="formats" /> — null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> содержит пустую строку.  -или-  Элемент параметра <paramref name="formats" /> является пустой строкой.  -или-  Строка <paramref name="s" /> не содержит дату и время, соответствующие какому-либо элементу параметра <paramref name="formats" />.  -или- Компонент часов и обозначение AM/PM в <paramref name="s" /> не совпадают.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="style" /> содержит недопустимое сочетание значений <see cref="T:System.Globalization.DateTimeStyles" />. Например, и <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />, и <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Second">
      <summary>Возвращает компонент секунды даты, представленной этим экземпляром.</summary>
      <returns>Компонент, представляющий секунды, выраженный как значение от 0 до 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)">
      <summary>Создает новый объект <see cref="T:System.DateTime" />, имеющий то же количество тактов, что и заданный объект <see cref="T:System.DateTime" />, но предназначенный для использования либо с местным временем, стандартом UTC, либо ни тем, ни другим, как задано значением <see cref="T:System.DateTimeKind" />.</summary>
      <returns>Новый объект, имеющий то же количество тактов, что и объект, представленный параметром <paramref name="value" />, и значение <see cref="T:System.DateTimeKind" />, заданное параметром <paramref name="kind" />.</returns>
      <param name="value">Дата и время.</param>
      <param name="kind">Одно из значений перечисления, указывающее, что представляет новый объект: локальное время, универсальное глобальное время (UTC), или ни то, ни другое.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Subtract(System.DateTime)">
      <summary>Вычитает из этого экземпляра указанную дату и время.</summary>
      <returns>Интервал времени, равный разнице между датой и временем, представленными этим экземпляром, и датой и временем, представленными параметром <paramref name="value" />.</returns>
      <param name="value">Вычитаемые дата и время.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результат меньше <see cref="F:System.DateTime.MinValue" /> или больше <see cref="F:System.DateTime.MaxValue" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.Subtract(System.TimeSpan)">
      <summary>Вычитает из этого экземпляра указанную длительность.</summary>
      <returns>Объект, равный разнице между датой и временем, представленными этим экземпляром, и интервалом времени, представленным параметром <paramref name="value" />.</returns>
      <param name="value">Вычитаемый интервал времени.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результат меньше <see cref="F:System.DateTime.MinValue" /> или больше <see cref="F:System.DateTime.MaxValue" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли данный экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, представляющее относительный порядок этого экземпляра и параметра <paramref name="value" />. 
Значение  	Описание  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки.  	
Zero  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и объект <paramref name="value" />.  	
Больше нуля.  	Этот экземпляр следует за <paramref name="value" /> в порядке сортировки, или значению <paramref name="value" /> соответствует null.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="value" /> не относится к типу <see cref="T:System.DateTime" />.</exception>
    </member>
    <member name="P:System.DateTime.Ticks">
      <summary>Возвращает число тактов, которое представляет дату и время этого экземпляра.</summary>
      <returns>Число тактов, которое представляет дату и время этого экземпляра. Это значение лежит в диапазоне от DateTime.MinValue.Ticks до DateTime.MaxValue.Ticks.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.TimeOfDay">
      <summary>Возвращает время дня для этого экземпляра.</summary>
      <returns>Интервал времени, представляющий часть дня, прошедшую с полуночи.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToBinary">
      <summary>Сериализует текущий объект <see cref="T:System.DateTime" /> в 64-битовое двоичное значение, которое может использоваться в дальнейшем для воссоздания объекта <see cref="T:System.DateTime" />.</summary>
      <returns>64-битовое целое число со знаком, кодирующее свойства <see cref="P:System.DateTime.Kind" /> и <see cref="P:System.DateTime.Ticks" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.DateTime.Today">
      <summary>Возвращает текущую дату.</summary>
      <returns>Объект, которому присвоена сегодняшняя дата, с компонентом времени, равным 00:00:00.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToFileTime">
      <summary>Преобразует значение текущего объекта <see cref="T:System.DateTime" /> во временную характеристику файла Windows.</summary>
      <returns>Значение текущего объекта <see cref="T:System.DateTime" /> представленное в виде временной характеристики файла Windows.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующая временная характеристика будет представлять дату и время до полуночи 1 января 1601 г. от Р. Х., UTC.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToFileTimeUtc">
      <summary>Преобразует значение текущего объекта <see cref="T:System.DateTime" /> во временную характеристику файла Windows.</summary>
      <returns>Значение текущего объекта <see cref="T:System.DateTime" /> представленное в виде временной характеристики файла Windows.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующая временная характеристика будет представлять дату и время до полуночи 1 января 1601 г. от Р. Х., UTC.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToLocalTime">
      <summary>Преобразует значение текущего объекта <see cref="T:System.DateTime" /> в местное время.</summary>
      <returns>Объект, свойство <see cref="P:System.DateTime.Kind" /> которого имеет значение <see cref="F:System.DateTimeKind.Local" />, а значение является местным временем, эквивалентным значению текущего объекта <see cref="T:System.DateTime" />, либо значением <see cref="F:System.DateTime.MaxValue" />, если преобразованное значение слишком велико для представления объектом <see cref="T:System.DateTime" />, либо значением <see cref="F:System.DateTime.MinValue" />, если преобразованное значение слишком мало для представления объектом <see cref="T:System.DateTime" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString">
      <summary>Преобразует значение текущего объекта <see cref="T:System.DateTime" /> в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемого календарем, используемым для текущих языка и региональных параметров.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.IFormatProvider)">
      <summary>Преобразует значение текущего объекта <see cref="T:System.DateTime" /> в эквивалентное ему строковое представление с использованием указанных сведений о форматировании, связанных с языком и региональными параметрами.</summary>
      <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTime" />, заданное параметром <paramref name="provider" />.</returns>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемых календарем, который используется <paramref name="provider" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.String)">
      <summary>Преобразует значение текущего объекта <see cref="T:System.DateTime" /> в эквивалентное ему строковое представление с использованием заданного формата.</summary>
      <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTime" />, заданное параметром <paramref name="format" />.</returns>
      <param name="format">Строка стандартного или пользовательского формата даты и времени (см. примечания).</param>
      <exception cref="T:System.FormatException">Длина параметра <paramref name="format" /> равна 1, но он не является одним из символов описания формата, определенных для объекта <see cref="T:System.Globalization.DateTimeFormatInfo" />. -или-  Параметр <paramref name="format" /> не содержит допустимый пользовательский шаблон формата.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемого календарем, используемым для текущих языка и региональных параметров.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToString(System.String,System.IFormatProvider)">
      <summary>Преобразует значение текущего объекта <see cref="T:System.DateTime" /> в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях формата для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTime" />, заданное параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
      <param name="format">Строка стандартного или пользовательского формата даты и времени.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <exception cref="T:System.FormatException">Длина параметра <paramref name="format" /> равна 1, но он не является одним из символов описания формата, определенных для объекта <see cref="T:System.Globalization.DateTimeFormatInfo" />. -или-  Параметр <paramref name="format" /> не содержит допустимый пользовательский шаблон формата.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемых календарем, который используется <paramref name="provider" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.ToUniversalTime">
      <summary>Преобразует значение текущего объекта <see cref="T:System.DateTime" /> во время UTC.</summary>
      <returns>Объект, свойство <see cref="P:System.DateTime.Kind" /> которого имеет значение <see cref="F:System.DateTimeKind.Utc" />, а значение является временем в формате UTC, эквивалентным значению текущего объекта <see cref="T:System.DateTime" />, либо значением <see cref="F:System.DateTime.MaxValue" />, если преобразованное значение слишком велико для представления объектом <see cref="T:System.DateTime" />, либо значением <see cref="F:System.DateTime.MinValue" />, если преобразованное значение слишком мало для представления объектом <see cref="T:System.DateTime" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParse(System.String,System.DateTime@)">
      <summary>Преобразовывает указанное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTime" /> и возвращает значение, позволяющее определить успешность преобразования.</summary>
      <returns>true, если параметр <paramref name="s" /> успешно преобразован, в противном случае — false.</returns>
      <param name="s">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="result">После возврата из этого метода, содержит значение <see cref="T:System.DateTime" />, эквивалентное дате и времени, заданным в параметре <paramref name="s" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTime.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачей, если значение параметра <paramref name="s" /> равно null или пустой строке ("") или не содержит допустимого строкового представления даты и времени. Этот параметр передается без инициализации.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTime" />, используя указанную информацию о форматировании, связанную с языком и региональными параметрами, и возвращает значение, которое показывает успешность преобразования.</summary>
      <returns>true, если параметр <paramref name="s" /> успешно преобразован, в противном случае — false.</returns>
      <param name="s">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <param name="styles">Побитовая комбинация значений перечисления, которая определяет, как интерпретировать проанализированную дату по отношению к текущему часовому поясу или текущей дате. Обычно указывается значение <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <param name="result">После возврата из этого метода, содержит значение <see cref="T:System.DateTime" />, эквивалентное дате и времени, заданным в параметре <paramref name="s" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTime.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачей, если значение параметра <paramref name="s" /> равно null или пустой строке ("") или не содержит допустимого строкового представления даты и времени. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> не является допустимым значением <see cref="T:System.Globalization.DateTimeStyles" />. -или- Параметр <paramref name="styles" /> содержит недопустимое сочетание значений <see cref="T:System.Globalization.DateTimeStyles" /> (например, и <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />, и <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="provider" /> имеет нейтральные региональные параметры и не может использоваться в операции анализа.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTime" />, используя заданный формат, указанные сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат строкового представления должен полностью соответствовать заданному формату. Метод возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="format">Необходимый формат <paramref name="s" />. Дополнительные сведения см. в разделе "Примечания".</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <param name="style">Побитовая комбинация одного или нескольких значений перечисления, которые указывают на разрешенный формат параметра <paramref name="s" />.</param>
      <param name="result">После возврата из этого метода, содержит значение <see cref="T:System.DateTime" />, эквивалентное дате и времени, заданным в параметре <paramref name="s" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTime.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачей, если в значением параметра <paramref name="s" /> или <paramref name="format" /> является null либо пустая строка, или не является дата и время, соответствующие шаблону, заданному в параметре <paramref name="format" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> не является допустимым значением <see cref="T:System.Globalization.DateTimeStyles" />. -или- Параметр <paramref name="styles" /> содержит недопустимое сочетание значений <see cref="T:System.Globalization.DateTimeStyles" /> (например, и <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />, и <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTime" />, используя заданный массив форматов, указанные сведения о форматировании, связанные с языком и региональными параметрами, и стиль форматирования. Формат представления строки должен полностью соответствовать хотя бы одному заданному формату. Метод возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>true, если параметр <paramref name="s" /> успешно преобразован, в противном случае — false.</returns>
      <param name="s">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="formats">Массив разрешенных форматов <paramref name="s" />. Дополнительные сведения см. в разделе "Примечания".</param>
      <param name="provider">Объект, предоставляющий сведения о формате параметра <paramref name="s" /> для определенного языка и региональных параметров.</param>
      <param name="style">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <param name="result">После возврата из этого метода, содержит значение <see cref="T:System.DateTime" />, эквивалентное дате и времени, заданным в параметре <paramref name="s" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTime.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачей, если <paramref name="s" /> или <paramref name="formats" /> имеет значение null, либо <paramref name="s" /> или элемент <paramref name="formats" /> является пустой строкой, либо формат <paramref name="s" /> не в точности соответствует заданному хотя бы одним из шаблонов формата в <paramref name="formats" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> не является допустимым значением <see cref="T:System.Globalization.DateTimeStyles" />. -или- Параметр <paramref name="styles" /> содержит недопустимое сочетание значений <see cref="T:System.Globalization.DateTimeStyles" /> (например, и <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />, и <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.UtcNow">
      <summary>Получает объект <see cref="T:System.DateTime" />, которому присвоены текущие дата и время данного компьютера, выраженные как время UTC.</summary>
      <returns>Объект, значение которого является текущим значением даты и времени в формате UTC.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.DateTime.Year">
      <summary>Возвращает компонент года даты, представленной этим экземпляром.</summary>
      <returns>Значение года в диапазоне от 1 до 9999.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.DateTimeKind">
      <summary>Указывает, какое время представляет объект <see cref="T:System.DateTime" />: местное, UTC или не определенное как местное или UTC.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.DateTimeKind.Local">
      <summary>Представленное время является местным.</summary>
    </member>
    <member name="F:System.DateTimeKind.Unspecified">
      <summary>Представленное время не определено ни как местное, ни как время UTC.</summary>
    </member>
    <member name="F:System.DateTimeKind.Utc">
      <summary>Представленное время является временем UTC.</summary>
    </member>
    <member name="T:System.DateTimeOffset">
      <summary>Представляет момент времени, который обычно выражается в виде даты и времени суток, относительно времени в формате UTC.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.DateTime)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" /> с использованием заданного значения <see cref="T:System.DateTime" />.</summary>
      <param name="dateTime">Дата и время.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Дата и время в формате UTC, полученные в результате применения смещения, наступают раньше, чем <see cref="F:System.DateTimeOffset.MinValue" />. -или- Дата и время в формате UTC, полученные в результате применения смещения, наступают позже, чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" /> с использованием заданного значения <see cref="T:System.DateTime" /> и смещения.</summary>
      <param name="dateTime">Дата и время.</param>
      <param name="offset">Смещение по времени от времени в формате UTC.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="dateTime.Kind" /> равно <see cref="F:System.DateTimeKind.Utc" />, а значение параметра <paramref name="offset" /> не равно нулю. -или- Значение параметра <paramref name="dateTime.Kind" /> равно <see cref="F:System.DateTimeKind.Local" />, а значение параметра <paramref name="offset" /> не равно смещению местного часового пояса системы. -или- Значение параметра <paramref name="offset" /> не равно целому количеству минут.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> меньше -14 часов или больше 14 часов. -или- Параметр <see cref="P:System.DateTimeOffset.UtcDateTime" /> меньше <see cref="F:System.DateTimeOffset.MinValue" /> или больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" />, используя год, месяц, день, час, минуту, секунду, миллисекунду и смещение.</summary>
      <param name="year">Год (от 1 до 9999).</param>
      <param name="month">Месяц (от 1 до 12).</param>
      <param name="day">День (от 1 до количества дней в <paramref name="month" />).</param>
      <param name="hour">Часы (от 0 до 23).</param>
      <param name="minute">Минуты (от 0 до 59).</param>
      <param name="second">Секунды (от 0 до 59).</param>
      <param name="millisecond">Миллисекунды (от 0 до 999).</param>
      <param name="offset">Смещение по времени от времени в формате UTC.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="offset" /> не представляет целое количество минут.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="year" /> меньше единицы или больше 9999. -или- Значение параметра <paramref name="month" /> меньше единицы или больше 12. -или- Значение параметра <paramref name="day" /> меньше единицы, или больше, чем число дней в параметре <paramref name="month" />. -или- Значение параметра <paramref name="hour" /> меньше нуля или больше 23. -или- <paramref name="minute" /> меньше 0 или больше 59. -или- <paramref name="second" /> меньше 0 или больше 59. -или- <paramref name="millisecond" /> меньше 0 или больше 999. -или- Параметр <paramref name="offset" /> меньше -14 или больше 14. -или- Момент времени, заданный в свойстве <see cref="P:System.DateTimeOffset.UtcDateTime" />, наступает раньше <see cref="F:System.DateTimeOffset.MinValue" /> или позже <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" />, используя год, месяц, день, час, минуту, секунду и смещение.</summary>
      <param name="year">Год (от 1 до 9999).</param>
      <param name="month">Месяц (от 1 до 12).</param>
      <param name="day">День (от 1 до количества дней в <paramref name="month" />).</param>
      <param name="hour">Часы (от 0 до 23).</param>
      <param name="minute">Минуты (от 0 до 59).</param>
      <param name="second">Секунды (от 0 до 59).</param>
      <param name="offset">Смещение по времени от времени в формате UTC.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="offset" /> не представляет целое количество минут.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="year" /> меньше единицы или больше 9999. -или- Значение параметра <paramref name="month" /> меньше единицы или больше 12. -или- Значение параметра <paramref name="day" /> меньше единицы, или больше, чем число дней в параметре <paramref name="month" />. -или- Значение параметра <paramref name="hour" /> меньше нуля или больше 23. -или- <paramref name="minute" /> меньше 0 или больше 59. -или- <paramref name="second" /> меньше 0 или больше 59. -или- Значение параметра <paramref name="offset" /> меньше -14 часов или больше 14 часов. -или- Момент времени, заданный в свойстве <see cref="P:System.DateTimeOffset.UtcDateTime" />, наступает раньше <see cref="F:System.DateTimeOffset.MinValue" /> или позже <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.DateTimeOffset" /> с использованием заданного количества тактов и смещения.</summary>
      <param name="ticks">Дата и время, представленные в виде нескольких 100-наносекундных интервалов, закончившихся в 00:00 1 января 0001 г.</param>
      <param name="offset">Смещение по времени от времени в формате UTC.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="offset" /> не равно целому количеству минут.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Момент времени, заданный в свойстве <see cref="P:System.DateTimeOffset.UtcDateTime" />, наступает раньше <see cref="F:System.DateTimeOffset.MinValue" /> или позже <see cref="F:System.DateTimeOffset.MaxValue" />. -или- Параметр <paramref name="ticks" /> меньше DateTimeOffset.MinValue.Ticks или больше DateTimeOffset.MaxValue.Ticks. -или- Значение параметра <paramref name="Offset" /> меньше -14 часов или больше 14 часов.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Add(System.TimeSpan)">
      <summary>Добавляет указанный интервал времени к объекту <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и интервала времени, представленного параметром <paramref name="timeSpan" />.</returns>
      <param name="timeSpan">Объект <see cref="T:System.TimeSpan" />, представляющий положительный или отрицательный интервал времени.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующее значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />. -или-  Результирующее значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddDays(System.Double)">
      <summary>Добавляет указанное количество полных и неполных дней к текущему объекту <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества дней, представленного параметром <paramref name="days" />.</returns>
      <param name="days">Число полных и неполных дней. Это число может быть положительным или отрицательным.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующее значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />. -или-  Результирующее значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddHours(System.Double)">
      <summary>Добавляет указанное количество полных и неполных часов к текущему объекту <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества часов, представленного параметром <paramref name="hours" />.</returns>
      <param name="hours">Число полных и неполных часов. Это число может быть положительным или отрицательным.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующее значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />. -или-  Результирующее значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMilliseconds(System.Double)">
      <summary>Добавляет указанное количество миллисекунд к текущему объекту <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества полных миллисекунд, представленных параметром <paramref name="milliseconds" />.</returns>
      <param name="milliseconds">Число полных и неполных миллисекунд. Это число может быть положительным или отрицательным.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующее значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />. -или-  Результирующее значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMinutes(System.Double)">
      <summary>Добавляет указанное количество полных и неполных минут к текущему объекту <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества минут, представленных параметром <paramref name="minutes" />.</returns>
      <param name="minutes">Число полных и неполных минут. Это число может быть положительным или отрицательным.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующее значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />. -или-  Результирующее значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddMonths(System.Int32)">
      <summary>Добавляет указанное количество месяцев к текущему объекту <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества месяцев, представленных параметром <paramref name="months" />.</returns>
      <param name="months">Число полных месяцев. Это число может быть положительным или отрицательным.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующее значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />. -или-  Результирующее значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddSeconds(System.Double)">
      <summary>Добавляет указанное количество полных и неполных секунд к текущему объекту <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества секунд, представленных параметром <paramref name="seconds" />.</returns>
      <param name="seconds">Число полных и неполных секунд. Это число может быть положительным или отрицательным.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующее значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />. -или-  Результирующее значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddTicks(System.Int64)">
      <summary>Добавляет указанное количество тактов к текущему объекту <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества тактов, представленных параметром <paramref name="ticks" />.</returns>
      <param name="ticks">Число 100-наносекундных тактов. Это число может быть положительным или отрицательным.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующее значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />. -или-  Результирующее значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.AddYears(System.Int32)">
      <summary>Добавляет указанное количество лет к объекту <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Объект, значение которого равно сумме даты и времени, представленных текущим объектом <see cref="T:System.DateTimeOffset" />, и количества лет, представленного параметром <paramref name="years" />.</returns>
      <param name="years">Число лет. Это число может быть положительным или отрицательным.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующее значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />. -или-  Результирующее значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Сравнивает два объекта <see cref="T:System.DateTimeOffset" />, и указывает, как соотносятся между собой указанные в них моменты времени: первый раньше второго, первый и второй равны, или же первый позже второго.</summary>
      <returns>Знаковое целое число, позволяющее определить, наступает ли момент, указанный в параметре <paramref name="first" />, раньше или одновременно с моментом, указанным в параметре <paramref name="second" />, как показано в следующей таблице. 
Возвращаемое значение 	Значение 	
Меньше нуля 	Момент, указанный в параметре <paramref name="first" />, наступает раньше, чем момент, указанный в параметре <paramref name="second" />. 	
Ноль 	Значение параметра <paramref name="first" /> равно значению параметра <paramref name="second" />. 	
Больше нуля. 	Момент, указанный в параметре <paramref name="first" />, наступает позже, чем момент, указанный в параметре <paramref name="second" />.</returns>
      <param name="first">Первый сравниваемый объект.</param>
      <param name="second">Второй сравниваемый объект.</param>
    </member>
    <member name="M:System.DateTimeOffset.CompareTo(System.DateTimeOffset)">
      <summary>Сравнивает текущий объект <see cref="T:System.DateTimeOffset" /> с заданным объектом <see cref="T:System.DateTimeOffset" /> и указывает, когда наступает момент, заданный в первом объекте: раньше, позже или одновременно с моментом, указанным во втором объекте <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Целое число со знаком, позволяющее определить, как соотносятся между собой текущий объект <see cref="T:System.DateTimeOffset" /> и параметр <paramref name="other" />. Возможные соотношения показаны в следующей таблице. 
Возвращаемое значение 	Описание 	
Меньше нуля 	Момент времени в объекте <see cref="T:System.DateTimeOffset" /> наступает раньше момента времени в параметре <paramref name="other" />. 	
Ноль 	Моменты времени в текущем объекте <see cref="T:System.DateTimeOffset" /> и параметре <paramref name="other" /> совпадают. 	
Больше нуля. 	Момент времени в текущем объекте <see cref="T:System.DateTimeOffset" /> наступает позже момента времени в параметре <paramref name="other" />.</returns>
      <param name="other">Объект, который требуется сравнить с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
    </member>
    <member name="P:System.DateTimeOffset.Date">
      <summary>Получает значение <see cref="T:System.DateTime" />, представляющее компонент даты в текущем объекте <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Значение <see cref="T:System.DateTime" />, представляющее компонент даты в текущем объекте <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DateTime">
      <summary>Получает значение <see cref="T:System.DateTime" />, представляющее дату и время в текущем объекте <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Дата и время текущего объекта <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Day">
      <summary>Возвращает день месяца, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Компонент дня текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде значения в диапазоне от 1 до 31.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DayOfWeek">
      <summary>Возвращает день недели, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Одно из значений перечисления, определяющее день недели текущего объекта <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="P:System.DateTimeOffset.DayOfYear">
      <summary>Возвращает день года, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Компонент года текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде значения в диапазоне от 1 до 366.</returns>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.DateTimeOffset)">
      <summary>Определяет, представляет ли текущий объект <see cref="T:System.DateTimeOffset" /> тот же момент времени, что и заданный объект <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Значение true, если объекты <see cref="T:System.DateTimeOffset" /> имеют одинаковые значения <see cref="P:System.DateTimeOffset.UtcDateTime" />; в противном случае — значение false.</returns>
      <param name="other">Объект, который требуется сравнить с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Определяет, представляют ли два заданных объекта <see cref="T:System.DateTimeOffset" /> один и тот же момент времени.</summary>
      <returns>Значение true, если два объекта <see cref="T:System.DateTimeOffset" /> имеют одинаковые значения <see cref="P:System.DateTimeOffset.UtcDateTime" />; в противном случае — значение false.</returns>
      <param name="first">Первый сравниваемый объект.</param>
      <param name="second">Второй сравниваемый объект.</param>
    </member>
    <member name="M:System.DateTimeOffset.Equals(System.Object)">
      <summary>Определяет, представляет ли объект <see cref="T:System.DateTimeOffset" /> тот же момент времени, что и заданный объект.</summary>
      <returns>Значение true, если параметр <paramref name="obj" /> является объектом <see cref="T:System.DateTimeOffset" /> и представляет тот же момент времени, что и текущий объект <see cref="T:System.DateTimeOffset" />; в противном случае — значение false.</returns>
      <param name="obj">Объект, который требуется сравнить с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
    </member>
    <member name="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)">
      <summary>Определяет, представляет ли текущий объект <see cref="T:System.DateTimeOffset" /> тот же момент времени, что и заданный объект <see cref="T:System.DateTimeOffset" /> и совпадают ли их смещения.</summary>
      <returns>Значение true, если текущий объект <see cref="T:System.DateTimeOffset" /> и параметр <paramref name="other" /> имеет одинаковые дату, время и значения <see cref="P:System.DateTimeOffset.Offset" />; в противном случае — значение false.</returns>
      <param name="other">Объект, который требуется сравнить с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
    </member>
    <member name="M:System.DateTimeOffset.FromFileTime(System.Int64)">
      <summary>Преобразует заданную временную характеристику файла Windows в ее эквивалент по местному времени.</summary>
      <returns>Объект, представляющий дату и время <paramref name="fileTime" /> со смещением, равным смещению местного времени.</returns>
      <param name="fileTime">Временная характеристика файла Windows, выраженная в тактах.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="filetime" /> меньше нуля. -или- Значение <paramref name="filetime" /> больше значения DateTimeOffset.MaxValue.Ticks.</exception>
    </member>
    <member name="M:System.DateTimeOffset.GetHashCode">
      <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Hour">
      <summary>Возвращает часовой компонент, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Часовой компонент текущего объекта <see cref="T:System.DateTimeOffset" />. В этом свойстве используются 24-часовые часы; значение может меняться в диапазоне от 0 до 23.</returns>
    </member>
    <member name="P:System.DateTimeOffset.LocalDateTime">
      <summary>Получает значение <see cref="T:System.DateTime" />, представляющее местную дату и время в текущем объекте <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Локальные дата и время текущего объекта <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="F:System.DateTimeOffset.MaxValue">
      <summary>Представляет максимально допустимое значение типа <see cref="T:System.DateTimeOffset" />. Это поле доступно только для чтения.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="F:System.DateTime.MaxValue" /> находится вне диапазона текущего или заданного по умолчанию календаря культуры.</exception>
    </member>
    <member name="P:System.DateTimeOffset.Millisecond">
      <summary>Возвращает временной компонент миллисекунд, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Компонент миллисекунд текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде целого числа в диапазоне от 0 до 999.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Minute">
      <summary>Возвращает компонент минут, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Компонент минут текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде целого числа в диапазоне от 0 до 59.</returns>
    </member>
    <member name="F:System.DateTimeOffset.MinValue">
      <summary>Представляет наиболее раннее из возможных значений <see cref="T:System.DateTimeOffset" />. Это поле доступно только для чтения.</summary>
    </member>
    <member name="P:System.DateTimeOffset.Month">
      <summary>Возвращает компонент месяца даты, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Компонент месяца текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде целого числа в диапазоне от 1 до 12.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Now">
      <summary>Получает объект <see cref="T:System.DateTimeOffset" />, для которого в качестве значения установлена текущая дата и время на текущем компьютере, а в качестве смещения — смещение местного времени от времени в формате UTC.</summary>
      <returns>Объект <see cref="T:System.DateTimeOffset" />, у которого дата и время соответствуют текущему местному времени, а смещение равно смещению местного часового пояса от времени в формате UTC.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Offset">
      <summary>Возвращает смещение по времени от времени в формате UTC.</summary>
      <returns>Разность между значением времени текущего объекта <see cref="T:System.DateTimeOffset" /> и временем в формате UTC.</returns>
    </member>
    <member name="M:System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)">
      <summary>Добавляет указанный интервал времени к объекту <see cref="T:System.DateTimeOffset" /> с заданной датой и временем и образует объект <see cref="T:System.DateTimeOffset" /> с новыми значениями даты и времени.</summary>
      <returns>Объект, значение которого является суммой значений <paramref name="dateTimeTz" /> и <paramref name="timeSpan" />.</returns>
      <param name="dateTimeOffset">Объект, к которому необходимо добавить интервал времени.</param>
      <param name="timeSpan">Добавляемый интервал времени.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующее значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />. -или-  Результирующее значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Определяет, представляют ли два заданных объекта <see cref="T:System.DateTimeOffset" /> один и тот же момент времени.</summary>
      <returns>Значение true, если объекты <see cref="T:System.DateTimeOffset" /> имеют одинаковые значения <see cref="P:System.DateTimeOffset.UtcDateTime" />; в противном случае — значение false.</returns>
      <param name="left">Первый сравниваемый объект.</param>
      <param name="right">Второй сравниваемый объект.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Определяет, больше ли (или меньше) значение одного указанного объекта <see cref="T:System.DateTimeOffset" /> значения другого указанного объекта <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Значение true если момент времени в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="left" /> наступает позже, чем момент в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="right" />; в противном случае — значение false.</returns>
      <param name="left">Первый сравниваемый объект.</param>
      <param name="right">Второй сравниваемый объект.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Определяет, действительно ли значение одного указанного объекта <see cref="T:System.DateTimeOffset" /> больше или равно значению другого указанного объекта <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>true если значение <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="left" /> соответствует тому же или более позднему моменту времени, чем момент, заданный значением <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="right" />; в противном случае — значение false.</returns>
      <param name="left">Первый сравниваемый объект.</param>
      <param name="right">Второй сравниваемый объект.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Implicit(System.DateTime)~System.DateTimeOffset">
      <summary>Определяется неявное преобразование объекта <see cref="T:System.DateTime" /> в объект <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Преобразованный объект.</returns>
      <param name="dateTime">Преобразуемый объект.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Дата и время в формате UTC, полученные в результате применения смещения, наступают раньше, чем <see cref="F:System.DateTimeOffset.MinValue" />. -или- Дата и время в формате UTC, полученные в результате применения смещения, наступают позже, чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Определяет, указывают ли два заданных объекта <see cref="T:System.DateTimeOffset" /> на разные моменты времени.</summary>
      <returns>Значение true если параметры <paramref name="left" /> и <paramref name="right" /> обладают разными значениями свойства <see cref="P:System.DateTimeOffset.UtcDateTime" />; в противном случае — значение false.</returns>
      <param name="left">Первый сравниваемый объект.</param>
      <param name="right">Второй сравниваемый объект.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Определяет, меньше ли значение одного указанного объекта <see cref="T:System.DateTimeOffset" />, чем значение другого указанного объекта <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Значение true если момент времени в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="left" /> наступает раньше, чем момент в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="right" />; в противном случае — значение false.</returns>
      <param name="left">Первый сравниваемый объект.</param>
      <param name="right">Второй сравниваемый объект.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Определяет, меньше ли значение одного указанного объекта <see cref="T:System.DateTimeOffset" />, чем значение другого указанного объекта <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Значение true если момент времени в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="left" /> наступает раньше, чем момент в значении <see cref="P:System.DateTimeOffset.UtcDateTime" /> параметра <paramref name="right" />; в противном случае — значение false.</returns>
      <param name="left">Первый сравниваемый объект.</param>
      <param name="right">Второй сравниваемый объект.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)">
      <summary>Вычитает объект <see cref="T:System.DateTimeOffset" /> из другого объекта и выдает интервал времени.</summary>
      <returns>Объект, представляющий разность значений <paramref name="left" /> и <paramref name="right" />.</returns>
      <param name="left">Уменьшаемое.</param>
      <param name="right">Вычитаемое.</param>
    </member>
    <member name="M:System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)">
      <summary>Вычитает заданный временной интервал из указанной даты и времени и выдает новую дату и время.</summary>
      <returns>Объект, равный значению <paramref name="dateTimeOffset" /> за вычетом значения <paramref name="timeSpan" />.</returns>
      <param name="dateTimeOffset">Объект даты и времени, из которого вычитается интервал.</param>
      <param name="timeSpan">Вычитаемый интервал времени.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующее значение <see cref="T:System.DateTimeOffset" /> меньше, чем значение <see cref="F:System.DateTimeOffset.MinValue" /> или больше, чем значение <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String)">
      <summary>Преобразует заданное строковое представление даты, времени и смещения в их эквивалент <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />.</returns>
      <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени. -или- Параметр <paramref name="input" /> содержит строковое представление значения смещения без даты или времени.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя указанные сведения о форматировании, связанные с языком и региональными параметрами.</summary>
      <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии с форматом, заданном параметром <paramref name="formatProvider" />.</returns>
      <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании значения <paramref name="input" />, связанные с языком и региональными параметрами.</param>
      <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени. -или- Параметр <paramref name="input" /> содержит строковое представление значения смещения без даты или времени.</exception>
    </member>
    <member name="M:System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя указанную информацию о форматировании, связанную с языком и региональными параметрами, а также заданный стиль форматирования.</summary>
      <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="formatProvider" /> и <paramref name="styles" />.</returns>
      <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании значения <paramref name="input" />, связанные с языком и региональными параметрами.</param>
      <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />. Обычно указывается значение <see cref="F:System.Globalization.DateTimeStyles.None" />.</param>
      <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов. -или- <paramref name="styles" /> не является допустимым значением <see cref="T:System.Globalization.DateTimeStyles" />. -или- Параметр <paramref name="styles" /> содержит недопустимое значение <see cref="T:System.Globalization.DateTimeStyles" />. -или- Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, совместное использование которых недопустимо.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени. -или- Параметр <paramref name="input" /> содержит строковое представление значения смещения без даты или времени.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя указанные сведения о форматировании, связанные с языком и региональными параметрами. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
      <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="format" /> и <paramref name="formatProvider" />.</returns>
      <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="format">Описатель формата, задающий ожидаемый формат <paramref name="input" />.</param>
      <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> имеет значение null. -или- Параметр <paramref name="format" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Значение параметра <paramref name="input" /> является пустой строкой (""). -или- Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени. -или- Параметр <paramref name="format" /> содержит пустую строку. -или- Компонент часов и обозначение AM/PM в <paramref name="input" /> не совпадают.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданный формат, указанные сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
      <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="format" />, <paramref name="formatProvider" /> и <paramref name="styles" /> parameters.</returns>
      <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="format">Описатель формата, задающий ожидаемый формат <paramref name="input" />.</param>
      <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
      <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов. -или- В параметре <paramref name="styles" /> содержится неподдерживаемое значение. -или- Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, совместное использование которых недопустимо.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> имеет значение null. -или- Параметр <paramref name="format" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Значение параметра <paramref name="input" /> является пустой строкой (""). -или- Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени. -или- Параметр <paramref name="format" /> содержит пустую строку. -или- Компонент часов и обозначение AM/PM в <paramref name="input" /> не совпадают.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданные форматы, указанные сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат строкового представления должен полностью соответствовать одному из заданных форматов.</summary>
      <returns>Объект, эквивалентный дате и времени, содержащимся в параметре <paramref name="input" />, в соответствии со значениями параметров <paramref name="formats" />, <paramref name="formatProvider" /> и <paramref name="styles" /> parameters.</returns>
      <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="formats">Массив описателей формата, в котором заданы в требуемые форматы <paramref name="input" />.</param>
      <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
      <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">Смещение больше 14 часов или меньше -14 часов. -или- Параметр <paramref name="styles" /> содержит недопустимое значение. -или- Параметр <paramref name="styles" /> содержит значения <see cref="T:System.Globalization.DateTimeStyles" />, совместное использование которых недопустимо.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Значение параметра <paramref name="input" /> является пустой строкой (""). -или- Параметр <paramref name="input" /> не содержит допустимое строковое представление даты и времени. -или- Ни один из элементов <paramref name="formats" /> не содержит допустимый описатель формата. -или- Компонент часов и обозначение AM/PM в <paramref name="input" /> не совпадают.</exception>
    </member>
    <member name="P:System.DateTimeOffset.Second">
      <summary>Возвращает компонент секунд по показаниям часов, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Компонент секунд текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде целочисленного значения в диапазоне от 0 до 59.</returns>
    </member>
    <member name="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)">
      <summary>Вычитает значение <see cref="T:System.DateTimeOffset" />, представляющее определенную дату и время в текущем объекте <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Объект, задающий интервал между двумя объектами <see cref="T:System.DateTimeOffset" />.</returns>
      <param name="value">Объект, который представляет вычитаемое значение.</param>
    </member>
    <member name="M:System.DateTimeOffset.Subtract(System.TimeSpan)">
      <summary>Вычитает указанный интервал времени из текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Объект, значение которого равно дате и времени, представленным текущим объектом <see cref="T:System.DateTimeOffset" />, за вычетом интервала времени, представленного параметром <paramref name="value" />.</returns>
      <param name="value">Вычитаемый интервал времени.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующее значение <see cref="T:System.DateTimeOffset" /> меньше <see cref="F:System.DateTimeOffset.MinValue" />. -или-  Результирующее значение <see cref="T:System.DateTimeOffset" /> больше <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает значение текущего объекта <see cref="T:System.DateTimeOffset" /> с другим объектом того же типа.</summary>
      <returns>32-разрядное целое число со знаком, позволяющее определить, больше, меньше или равно значение текущего объекта <see cref="T:System.DateTimeOffset" /> значению параметра <paramref name="obj" />. Возвращаемые значения метода интерпретируются следующим образом. 
Возвращаемое значение 	Описание 	
Меньше нуля 	Текущий объект <see cref="T:System.DateTimeOffset" /> меньше параметра <paramref name="obj" /> (заданный в нем момент времени наступает раньше). 	
Ноль 	Текущий объект <see cref="T:System.DateTimeOffset" /> равен параметру <paramref name="obj" /> (соответствует тому же моменту времени). 	
Больше нуля. 	Текущий объект <see cref="T:System.DateTimeOffset" /> больше параметра <paramref name="obj" /> (заданный в нем момент времени наступает позже).</returns>
      <param name="obj">Объект для сравнения с текущим объектом <see cref="T:System.DateTimeOffset" />.</param>
    </member>
    <member name="P:System.DateTimeOffset.Ticks">
      <summary>Возвращает количество тактов, представляющее местную дату и время в текущем объекте <see cref="T:System.DateTimeOffset" /> по показаниям часов.</summary>
      <returns>Число тактов во времени объекта <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="P:System.DateTimeOffset.TimeOfDay">
      <summary>Получает время суток текущего объекта <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Время, истекшее с полуночи на текущую дату.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToFileTime">
      <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> во временную характеристику файла Windows.</summary>
      <returns>Значение текущего объекта <see cref="T:System.DateTimeOffset" /> представленное в виде временной характеристики файла Windows.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Результирующая временная характеристика будет представлять дату и время до полуночи 1 января, 1601 от Р. Х. в формате UTC.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToLocalTime">
      <summary>Преобразует текущий объект <see cref="T:System.DateTimeOffset" /> в объект <see cref="T:System.DateTimeOffset" />, представляющий местное время.</summary>
      <returns>Объект, который представляет дату и время текущего объекта <see cref="T:System.DateTimeOffset" />, преобразованные в местное время.</returns>
    </member>
    <member name="M:System.DateTimeOffset.ToOffset(System.TimeSpan)">
      <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в дату и время, указанные в значении смещения.</summary>
      <returns>Объект, равный исходному объекту <see cref="T:System.DateTimeOffset" /> (то есть, методы <see cref="M:System.DateTimeOffset.ToUniversalTime" /> этих объектов возвращают один и тот же момент времени), свойству <see cref="P:System.DateTimeOffset.Offset" /> которого, однако, присвоено значение <paramref name="offset" />.</returns>
      <param name="offset">Смещение, в которое необходимо преобразовать значение <see cref="T:System.DateTimeOffset" />.</param>
      <exception cref="T:System.ArgumentException">Результирующий объект <see cref="T:System.DateTimeOffset" /> имеет значение <see cref="P:System.DateTimeOffset.DateTime" />, соответствующее более раннему моменту времени, чем <see cref="F:System.DateTimeOffset.MinValue" />. -или- Результирующий объект <see cref="T:System.DateTimeOffset" /> имеет значение <see cref="P:System.DateTimeOffset.DateTime" />, соответствующее более позднему моменту времени, чем <see cref="F:System.DateTimeOffset.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="offset" /> меньше -14 часов. -или- Значение параметра <paramref name="offset" /> больше 14 часов.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString">
      <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление объекта <see cref="T:System.DateTimeOffset" />, которое включает смещение, добавленное в конце строки.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемого календарем, используемым для текущих языка и региональных параметров.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.IFormatProvider)">
      <summary>Преобразует числовое значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTimeOffset" />, заданное параметром <paramref name="formatProvider" />.</returns>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемых календарем, который используется <paramref name="formatProvider" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.String)">
      <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление с использованием заданного формата.</summary>
      <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTimeOffset" />, заданное параметром <paramref name="format" />.</returns>
      <param name="format">Строка формата.</param>
      <exception cref="T:System.FormatException">Длина параметра <paramref name="format" /> равна единице, но он не является одним из знаков стандартного описателя формата, определенных для объекта <see cref="T:System.Globalization.DateTimeFormatInfo" />.  -или- Параметр <paramref name="format" /> не содержит допустимый пользовательский шаблон формата.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемого календарем, используемым для текущих языка и региональных параметров.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToString(System.String,System.IFormatProvider)">
      <summary>Преобразует значение текущего объекта <see cref="T:System.DateTimeOffset" /> в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях формата для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения текущего объекта <see cref="T:System.DateTimeOffset" />, заданное параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
      <param name="format">Строка формата.</param>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <exception cref="T:System.FormatException">Длина параметра <paramref name="format" /> равна единице, но он не является одним из знаков стандартного описателя формата, определенных для объекта <see cref="T:System.Globalization.DateTimeFormatInfo" />. -или- Параметр <paramref name="format" /> не содержит допустимый пользовательский шаблон формата.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Дата и время находятся за пределами диапазона дат, поддерживаемых календарем, который используется <paramref name="formatProvider" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.ToUniversalTime">
      <summary>Преобразует текущий объект <see cref="T:System.DateTimeOffset" /> в значение <see cref="T:System.DateTimeOffset" />, представляющее время в формате UTC.</summary>
      <returns>Объект, представляющий дату и время текущего объекта <see cref="T:System.DateTimeOffset" />, преобразованную во время в формате UTC.</returns>
    </member>
    <member name="M:System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)">
      <summary>Предпринимает попытку преобразования указанного строкового представления даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, и возвращает значение, позволяющее определить успешность преобразования.</summary>
      <returns>Значение true, если параметр <paramref name="input" /> успешно преобразован, в противном случае — значение false.</returns>
      <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="result">После возврата из этого метода, содержит эквивалент <see cref="T:System.DateTimeOffset" /> для даты и времени, заданных в параметре <paramref name="input" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачей, если значение параметра <paramref name="input" /> равно null или в нем не содержится допустимое строковое представление даты и времени. Этот параметр передается без инициализации.</param>
    </member>
    <member name="M:System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>Предпринимает попытку преобразования указанного строкового представления даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, и возвращает значение, позволяющее определить успешность преобразования.</summary>
      <returns>Значение true, если параметр <paramref name="input" /> успешно преобразован, в противном случае — значение false.</returns>
      <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
      <param name="styles">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="input" />.</param>
      <param name="result">После возврата из этого метода, содержит значение <see cref="T:System.DateTimeOffset" />, эквивалентное дате и времени, заданным в параметре <paramref name="input" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачей, если значение параметра <paramref name="input" /> равно null или в нем не содержится допустимое строковое представление даты и времени. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="styles" /> содержит неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />. -или- Параметр <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается. -или- Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданный формат, указанные сведения о форматировании, связанные с языком и региональными параметрами, а также стиль. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
      <returns>Значение true, если параметр <paramref name="input" /> успешно преобразован, в противном случае — значение false.</returns>
      <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="format">Описатель формата, задающий требуемый формат <paramref name="input" />.</param>
      <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
      <param name="styles">Побитовое сочетание значений перечисления, которое показывает разрешенный формат ввода. Обычно указывается значение None.</param>
      <param name="result">После возврата из этого метода, содержит эквивалент <see cref="T:System.DateTimeOffset" /> для даты и времени, заданных в параметре <paramref name="input" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачей, если значение параметра <paramref name="input" /> равно null, или не содержит допустимое строчное представление даты и времени в требуемом формате, заданном параметрами <paramref name="format" /> и <paramref name="provider" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="styles" /> содержит неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />. -или- Параметр <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается. -или- Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
    </member>
    <member name="M:System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)">
      <summary>Преобразует заданное строковое представление даты и времени в его эквивалент <see cref="T:System.DateTimeOffset" />, используя заданный массив форматов, указанные сведения о форматировании, связанные с языком и региональными параметрами, и стиль форматирования. Формат строкового представления должен полностью соответствовать одному из заданных форматов.</summary>
      <returns>Значение true, если параметр <paramref name="input" /> успешно преобразован, в противном случае — значение false.</returns>
      <param name="input">Строка, содержащая дату и время, которые нужно преобразовать.</param>
      <param name="formats">Массив, в котором задаются требуемые форматы <paramref name="input" />.</param>
      <param name="formatProvider">Объект, который предоставляет сведения о форматировании параметра <paramref name="input" /> в зависимости от языка и региональных параметров.</param>
      <param name="styles">Побитовое сочетание значений перечисления, которое показывает разрешенный формат ввода. Обычно указывается значение None.</param>
      <param name="result">После возврата из этого метода, содержит эквивалент <see cref="T:System.DateTimeOffset" /> для даты и времени, заданных в параметре <paramref name="input" />, если преобразование прошло успешно, или значение <see cref="F:System.DateTimeOffset.MinValue" />, если преобразование завершилось неудачей. Преобразование завершается неудачей, если в значении параметра <paramref name="input" /> не содержится допустимое строчное представление даты и времени или же дата и время в требуемом формате, заданном параметром <paramref name="format" />, либо значение параметра <paramref name="formats" /> равно null. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="styles" /> содержит неопределенное значение <see cref="T:System.Globalization.DateTimeStyles" />. -или- Параметр <see cref="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault" /> не поддерживается. -или- Параметр <paramref name="styles" /> содержит взаимоисключающие значения <see cref="T:System.Globalization.DateTimeStyles" />.</exception>
    </member>
    <member name="P:System.DateTimeOffset.UtcDateTime">
      <summary>Получает значение <see cref="T:System.DateTime" />, представляющее дату и время текущего объекта <see cref="T:System.DateTimeOffset" /> в формате UTC.</summary>
      <returns>Дата и время текущего объекта <see cref="T:System.DateTimeOffset" /> в формате UTC.</returns>
    </member>
    <member name="P:System.DateTimeOffset.UtcNow">
      <summary>Возвращает объект <see cref="T:System.DateTimeOffset" />, в качестве даты и времени которого установлены текущие дата и время в формате UTC, а в качестве смещения — значение <see cref="F:System.TimeSpan.Zero" />.</summary>
      <returns>Объект, дата и время которого совпадают с текущим временем в формате UTC, а смещение которого равно <see cref="F:System.TimeSpan.Zero" />.</returns>
    </member>
    <member name="P:System.DateTimeOffset.UtcTicks">
      <summary>Возвращает количество тактов, которое представляет дату и время текущего объекта <see cref="T:System.DateTimeOffset" /> в формате UTC.</summary>
      <returns>Число тактов во времени объекта <see cref="T:System.DateTimeOffset" /> в формате UTC.</returns>
    </member>
    <member name="P:System.DateTimeOffset.Year">
      <summary>Возвращает компонент года даты, представленный текущим объектом <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Компонент года текущего объекта <see cref="T:System.DateTimeOffset" />, выраженный в виде целочисленного значения в диапазоне от 0 до 9999.</returns>
    </member>
    <member name="T:System.DayOfWeek">
      <summary>Определяет день недели.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.DayOfWeek.Friday">
      <summary>Обозначает пятницу.</summary>
    </member>
    <member name="F:System.DayOfWeek.Monday">
      <summary>Обозначает понедельник.</summary>
    </member>
    <member name="F:System.DayOfWeek.Saturday">
      <summary>Обозначает субботу.</summary>
    </member>
    <member name="F:System.DayOfWeek.Sunday">
      <summary>Обозначает воскресенье.</summary>
    </member>
    <member name="F:System.DayOfWeek.Thursday">
      <summary>Обозначает четверг.</summary>
    </member>
    <member name="F:System.DayOfWeek.Tuesday">
      <summary>Обозначает вторник.</summary>
    </member>
    <member name="F:System.DayOfWeek.Wednesday">
      <summary>Обозначает среду.</summary>
    </member>
    <member name="T:System.Decimal">
      <summary>Представляет десятичное число.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.#ctor(System.Double)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Decimal" />, используя значение заданного числа двойной точности с плавающей запятой.</summary>
      <param name="value">Значение, которое необходимо представить в формате <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> больше, чем <see cref="F:System.Decimal.MaxValue" /> или меньше, чем <see cref="F:System.Decimal.MinValue" />. -или-  Значение параметра <paramref name="value" /> равно <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> или <see cref="F:System.Double.NegativeInfinity" />.</exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Decimal" />, используя значение заданного 32-разрядного целого числа со знаком.</summary>
      <param name="value">Значение, которое необходимо представить в формате <see cref="T:System.Decimal" />.</param>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Decimal" /> на основе параметров, задающих составные части экземпляра.</summary>
      <param name="lo">Младшие 32 разряда 96-разрядного целого числа.</param>
      <param name="mid">Средние 32 разряда 96-разрядного целого числа.</param>
      <param name="hi">Старшие 32 разряда 96-разрядного целого числа.</param>
      <param name="isNegative">true для обозначения отрицательного числа; false, чтобы указать положительное число.</param>
      <param name="scale">Степень числа 10 в диапазоне от 0 до 28.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scale" /> больше 28.</exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int32[])">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Decimal" /> с представленным в двоичном виде десятичным значением, содержащемся в указанном массиве.</summary>
      <param name="bits">Массив 32-разрядных целых чисел со знаком, содержащий представление десятичного значения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="bits" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Длина параметра <paramref name="bits" /> не равна 4. -или-  Представление десятичного числа в формате <paramref name="bits" /> недопустимо.</exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.Int64)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Decimal" />, используя значение заданного 64-разрядного целого числа со знаком.</summary>
      <param name="value">Значение, которое необходимо представить в формате <see cref="T:System.Decimal" />.</param>
    </member>
    <member name="M:System.Decimal.#ctor(System.Single)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Decimal" />, используя значение заданного числа одиночной точности с плавающей запятой.</summary>
      <param name="value">Значение, которое необходимо представить в формате <see cref="T:System.Decimal" />.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> больше, чем <see cref="F:System.Decimal.MaxValue" /> или меньше, чем <see cref="F:System.Decimal.MinValue" />. -или-  Значение параметра <paramref name="value" /> равно <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" /> или <see cref="F:System.Single.NegativeInfinity" />.</exception>
    </member>
    <member name="M:System.Decimal.#ctor(System.UInt32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Decimal" />, используя значение заданного 32-разрядного целого числа без знака.</summary>
      <param name="value">Значение, которое необходимо представить в формате <see cref="T:System.Decimal" />.</param>
    </member>
    <member name="M:System.Decimal.#ctor(System.UInt64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Decimal" />, используя значение заданного 64-разрядного целого числа без знака.</summary>
      <param name="value">Значение, которое необходимо представить в формате <see cref="T:System.Decimal" />.</param>
    </member>
    <member name="M:System.Decimal.Add(System.Decimal,System.Decimal)">
      <summary>Суммирует два заданных значения типа <see cref="T:System.Decimal" />.</summary>
      <returns>Сумма <paramref name="d1" /> и <paramref name="d2" />.</returns>
      <param name="d1">Первое из складываемых значений.</param>
      <param name="d2">Второе из складываемых значений.</param>
      <exception cref="T:System.OverflowException">Сумма параметров <paramref name="d1" /> и <paramref name="d2" /> меньше, чем <see cref="F:System.Decimal.MinValue" /> или больше, чем <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Ceiling(System.Decimal)">
      <summary>Возвращает наименьшее целое число, которое больше или равно заданному десятичному числу.</summary>
      <returns>Наименьшее целое число, которое больше или равно значению параметра <paramref name="d" />. Обратите внимание, что данный метод возвращает не целочисленное значение, а значение типа <see cref="T:System.Decimal" />.</returns>
      <param name="d">Десятичное число.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
      <summary>Сравнивает два заданных значения <see cref="T:System.Decimal" />.</summary>
      <returns>Знаковое число, обозначающее относительные значения параметров <paramref name="d1" /> и <paramref name="d2" />. 
Возвращаемое значение  	Значение  	
Меньше нуля  	Значение параметра <paramref name="d1" /> меньше значения <paramref name="d2" />.  	
Zero  	Значения параметров <paramref name="d1" /> и <paramref name="d2" /> равны.  	
Больше нуля.  	Значение <paramref name="d1" /> больше значения <paramref name="d2" />.</returns>
      <param name="d1">Первое сравниваемое значение.</param>
      <param name="d2">Второе сравниваемое значение.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.CompareTo(System.Decimal)">
      <summary>Сравнивает этот экземпляр с заданным объектом <see cref="T:System.Decimal" /> и возвращает сравнение значений этих объектов.</summary>
      <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />. 
Возвращаемое значение  	Значение  	
Меньше нуля  	Данный экземпляр меньше <paramref name="value" />.  	
Zero  	Этот экземпляр и параметр <paramref name="value" /> равны.  	
Больше нуля.  	Этот экземпляр больше параметра <paramref name="value" />.</returns>
      <param name="value">Объект, сравниваемый с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
      <summary>Выполняет деление двух заданных значений типа <see cref="T:System.Decimal" />.</summary>
      <returns>Результат деления <paramref name="d1" /> на <paramref name="d2" />.</returns>
      <param name="d1">Делимое.</param>
      <param name="d2">Делитель.</param>
      <exception cref="T:System.DivideByZeroException">Значение параметра <paramref name="d2" /> равно нулю.</exception>
      <exception cref="T:System.OverflowException">Возвращаемое значение (частное) меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Decimal)">
      <summary>Возвращает значение, позволяющее определить, представляют ли этот экземпляр и заданный объект <see cref="T:System.Decimal" /> одно и то же значение.</summary>
      <returns>Значение true, если <paramref name="value" /> и данный экземпляр равны; в противном случае — значение false.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
      <summary>Возвращает значение, позволяющее определить, представляют ли два заданных экземпляра <see cref="T:System.Decimal" /> равные значения.</summary>
      <returns>Значение true, если значения параметров <paramref name="d1" /> и <paramref name="d2" /> равны; в противном случае — false.</returns>
      <param name="d1">Первое сравниваемое значение.</param>
      <param name="d2">Второе сравниваемое значение.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Equals(System.Object)">
      <summary>Возвращает значение, позволяющее определить, представляют ли этот экземпляр и заданный объект <see cref="T:System.Object" /> равные значения и типы.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> принадлежит к типу <see cref="T:System.Decimal" /> и эквивалентен данному экземпляру; в противном случае — false.</returns>
      <param name="value">Объект, сравниваемый с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Decimal.Floor(System.Decimal)">
      <summary>Округляет заданное число типа <see cref="T:System.Decimal" /> до ближайшего целого в направлении минус бесконечности.</summary>
      <returns>Если параметр <paramref name="d" /> имеет дробную часть — следующее целое число <see cref="T:System.Decimal" /> в направлении минус бесконечности меньше <paramref name="d" />. -или-  Если у параметра <paramref name="d" /> нет дробной части, значение параметра <paramref name="d" /> возвращается без изменений. Обратите внимание, что этот метод возвращает целочисленное значение типа <see cref="T:System.Decimal" />.</returns>
      <param name="d">Значение для округления.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.GetBits(System.Decimal)">
      <summary>Преобразует значение заданного экземпляра <see cref="T:System.Decimal" /> в эквивалентное ему двоичное представление.</summary>
      <returns>Массив 32-разрядных целых чисел со знаком, состоящий из четырех элементов, в которых содержится двоичное представление параметра <paramref name="d" />.</returns>
      <param name="d">Преобразуемое значение.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Decimal.MaxValue">
      <summary>Представляет наибольшее возможное значение типа <see cref="T:System.Decimal" />. В этом поле содержится константа и оно доступно только для чтения.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.MinusOne">
      <summary>Представляет число минус один (-1).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.MinValue">
      <summary>Представляет минимальное допустимое значение типа <see cref="T:System.Decimal" />. В этом поле содержится константа и оно доступно только для чтения.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
      <summary>Перемножает два заданных значения типа <see cref="T:System.Decimal" />.</summary>
      <returns>Результат умножения <paramref name="d1" /> на <paramref name="d2" />.</returns>
      <param name="d1">Множимое.</param>
      <param name="d2">Множитель.</param>
      <exception cref="T:System.OverflowException">Возвращаемое значение меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Negate(System.Decimal)">
      <summary>Возвращает результат умножения заданного значения <see cref="T:System.Decimal" /> на минус единицу.</summary>
      <returns>Десятичное число со значением <paramref name="d" />, но с противоположным знаком. -или-  Ноль, если значение параметра <paramref name="d" /> равно нулю.</returns>
      <param name="d">Инвертируемое значение.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.One">
      <summary>Представляет число один (1).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
      <summary>Суммирует два заданных значения типа <see cref="T:System.Decimal" />.</summary>
      <returns>Результат сложения величин <paramref name="d1" /> и<paramref name="d2" />.</returns>
      <param name="d1">Первое из складываемых значений.</param>
      <param name="d2">Второе из складываемых значений.</param>
      <exception cref="T:System.OverflowException">Возвращаемое значение меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Decrement(System.Decimal)">
      <summary>Уменьшает операнд типа <see cref="T:System.Decimal" /> на единицу.</summary>
      <returns>Значение параметра <paramref name="d" />, уменьшенное на 1.</returns>
      <param name="d">Уменьшаемое значение.</param>
      <exception cref="T:System.OverflowException">Возвращаемое значение меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
      <summary>Выполняет деление двух заданных значений типа <see cref="T:System.Decimal" />.</summary>
      <returns>Результат деления <paramref name="d1" /> на <paramref name="d2" />.</returns>
      <param name="d1">Делимое.</param>
      <param name="d2">Делитель.</param>
      <exception cref="T:System.DivideByZeroException">Значение параметра <paramref name="d2" /> равно нулю.</exception>
      <exception cref="T:System.OverflowException">Возвращаемое значение меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
      <summary>Возвращает значение, определяющее, равны ли два значения <see cref="T:System.Decimal" />.</summary>
      <returns>Значение true, если значения параметров <paramref name="d1" /> и <paramref name="d2" /> равны; в противном случае — false.</returns>
      <param name="d1">Первое сравниваемое значение.</param>
      <param name="d2">Второе сравниваемое значение.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
      <summary>Определяет явное преобразование <see cref="T:System.Decimal" /> в число с плавающей запятой одинарной точности.</summary>
      <returns>Значение одиночной точности с плавающей запятой, которое представляет преобразованное значение <see cref="T:System.Decimal" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
      <summary>Определяет явное преобразование <see cref="T:System.Decimal" /> в 8-разрядное целое число со знаком.</summary>
      <returns>8-разрядное целое число со знаком, которое представляет преобразованное значение типа <see cref="T:System.Decimal" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
      <summary>Определяет явное преобразование <see cref="T:System.Decimal" /> в 64-разрядное целое число со знаком.</summary>
      <returns>64-разрядное целое число со знаком, которое представляет преобразованное значение типа <see cref="T:System.Decimal" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
      <summary>Определяет явное преобразование <see cref="T:System.Decimal" />в 64-разрядное целое число со знаком.</summary>
      <returns>64-разрядное целое число без знака, которое представляет преобразованное значение типа <see cref="T:System.Decimal" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> является отрицательным или его значение больше, чем значение <see cref="F:System.UInt64.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
      <summary>Определяет явное преобразование <see cref="T:System.Decimal" />в 32-разрядное целое число со знаком.</summary>
      <returns>32-разрядное целое число без знака, которое представляет преобразованное значение типа <see cref="T:System.Decimal" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> является отрицательным или его значение больше, чем значение <see cref="F:System.UInt32.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
      <summary>Определяет явное преобразование <see cref="T:System.Decimal" />в 16-разрядное целое число со знаком.</summary>
      <returns>16-разрядное целое число без знака, которое представляет преобразованное значение типа <see cref="T:System.Decimal" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> больше, чем <see cref="F:System.UInt16.MaxValue" /> или меньше, чем <see cref="F:System.UInt16.MinValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
      <summary>Определяет явное преобразование <see cref="T:System.Decimal" />в 8-разрядное целое число со знаком.</summary>
      <returns>8-разрядное целое число без знака, которое представляет преобразованное значение типа <see cref="T:System.Decimal" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
      <summary>Определяет явное преобразование объекта <see cref="T:System.Decimal" /> в символ Юникод.</summary>
      <returns>Символ Юникода, представляющий преобразованное значение типа <see cref="T:System.Decimal" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> меньше <see cref="F:System.Char.MinValue" /> или больше <see cref="F:System.Char.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
      <summary>Определяет явное преобразование <see cref="T:System.Decimal" /> в число с плавающей запятой двойной точности.</summary>
      <returns>Значение двойной точности с плавающей запятой, которое представляет преобразованное значение <see cref="T:System.Decimal" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
      <summary>Определяет явное преобразование <see cref="T:System.Decimal" /> в 32-разрядное целое число со знаком.</summary>
      <returns>32-разрядное целое число со знаком, которое представляет преобразованное значение типа <see cref="T:System.Decimal" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
      <summary>Определяет явное преобразование <see cref="T:System.Decimal" /> в 16-разрядное целое число со знаком.</summary>
      <returns>16-разрядное целое число со знаком, которое представляет преобразованное значение типа <see cref="T:System.Decimal" />.</returns>
      <param name="value">Преобразуемое значение.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
      <summary>Определяет явное преобразование числа с плавающей запятой двойной точности в <see cref="T:System.Decimal" />.</summary>
      <returns>Преобразованное число с плавающей запятой двойной точности.</returns>
      <param name="value">Число с плавающей запятой двойной точности, подлежащее преобразованию.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> меньше <see cref="F:System.Decimal.MinValue" /> или больше <see cref="F:System.Decimal.MaxValue" />. -или-  Значение параметра <paramref name="value" /> равно <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> или <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
      <summary>Определяет явное преобразование числа с плавающей запятой одинарной точности в <see cref="T:System.Decimal" />.</summary>
      <returns>Преобразованное число с плавающей запятой одиночной точности.</returns>
      <param name="value">Число с плавающей запятой одиночной точности, подлежащее преобразованию.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> меньше <see cref="F:System.Decimal.MinValue" /> или больше <see cref="F:System.Decimal.MaxValue" />. -или-  Значение параметра <paramref name="value" /> равно <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" /> или <see cref="F:System.Single.NegativeInfinity" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
      <summary>Возвращает значение, позволяющее определить, действительно ли заданное значение типа <see cref="T:System.Decimal" /> больше другого заданного значения типа <see cref="T:System.Decimal" />.</summary>
      <returns>true, если значение <paramref name="d1" /> больше значения <paramref name="d2" />; в противном случае — false.</returns>
      <param name="d1">Первое сравниваемое значение.</param>
      <param name="d2">Второе сравниваемое значение.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
      <summary>Возвращает значение, позволяющее определить, действительно ли заданное значение типа <see cref="T:System.Decimal" /> больше или равно другому заданному значению типа <see cref="T:System.Decimal" />.</summary>
      <returns>Значение true, если значение <paramref name="d1" /> больше или равно значению <paramref name="d2" />; в противном случае — значение false.</returns>
      <param name="d1">Первое сравниваемое значение.</param>
      <param name="d2">Второе сравниваемое значение.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
      <summary>Определяет явное преобразование 8-разрядного целого числа со знаком в <see cref="T:System.Decimal" />.</summary>
      <returns>Преобразованное 8-разрядное целое число без знака.</returns>
      <param name="value">8-разрядное целое число без знака для преобразования.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
      <summary>Определяет явное преобразование символа юникод в <see cref="T:System.Decimal" />.</summary>
      <returns>Преобразованный символ Юникода.</returns>
      <param name="value">Знак Юникода, который необходимо преобразовать.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
      <summary>Определяет явное преобразование 16-разрядного целого числа со знаком в значение <see cref="T:System.Decimal" />.</summary>
      <returns>Преобразованное 16-разрядное целое число со знаком.</returns>
      <param name="value">16-разрядное знаковое целое число для преобразования.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
      <summary>Определяет явное преобразование 32-разрядного целого числа со знаком в значение <see cref="T:System.Decimal" />.</summary>
      <returns>Преобразованное 32-разрядное целое число со знаком.</returns>
      <param name="value">32-разрядное знаковое целое число для преобразования.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
      <summary>Определяет явное преобразование 64-разрядного целого числа со знаком в значение <see cref="T:System.Decimal" />.</summary>
      <returns>Преобразованное 64-разрядное целое число со знаком.</returns>
      <param name="value">64-разрядное знаковое целое число для преобразования.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
      <summary>Определяет явное преобразование 8-разрядного целого числа со знаком в <see cref="T:System.Decimal" />.</summary>
      <returns>Преобразованное 8-разрядное целое число со знаком.</returns>
      <param name="value">8-разрядное знаковое целое число для преобразования.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
      <summary>Определяет явное преобразование 16-разрядного целого числа без знака в значение <see cref="T:System.Decimal" />.</summary>
      <returns>Преобразованное 16-разрядное целое число без знака.</returns>
      <param name="value">16-разрядное целое число без знака для преобразования.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
      <summary>Определяет явное преобразование 32-разрядного целого числа без знака в значение <see cref="T:System.Decimal" />.</summary>
      <returns>Преобразованное 32-разрядное целое число без знака.</returns>
      <param name="value">32-разрядное целое число без знака для преобразования.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
      <summary>Определяет явное преобразование 64-разрядного целого числа без знака в значение <see cref="T:System.Decimal" />.</summary>
      <returns>Преобразованное 64-разрядное целое число без знака.</returns>
      <param name="value">64-разрядное целое число без знака для преобразования.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Increment(System.Decimal)">
      <summary>Увеличивает операнд <see cref="T:System.Decimal" /> на 1.</summary>
      <returns>Значение параметра <paramref name="d" />, увеличенное на 1.</returns>
      <param name="d">Увеличиваемое значение.</param>
      <exception cref="T:System.OverflowException">Возвращаемое значение меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
      <summary>Возвращает значение, указывающее, имеют ли два объекта <see cref="T:System.Decimal" /> различные значения.</summary>
      <returns>Значение true если <paramref name="d1" /> и <paramref name="d2" /> не равны; в противном случае — false.</returns>
      <param name="d1">Первое сравниваемое значение.</param>
      <param name="d2">Второе сравниваемое значение.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
      <summary>Возвращает значение, позволяющее определить, действительно ли заданное значение типа <see cref="T:System.Decimal" /> меньше другого заданного значения типа <see cref="T:System.Decimal" />.</summary>
      <returns>Значение true, если значение <paramref name="d1" /> меньше значения <paramref name="d2" />; в противном случае — значение false.</returns>
      <param name="d1">Первое сравниваемое значение.</param>
      <param name="d2">Второе сравниваемое значение.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
      <summary>Возвращает значение, позволяющее определить, действительно ли заданное значение типа <see cref="T:System.Decimal" /> меньше или равно другому заданному значению типа <see cref="T:System.Decimal" />.</summary>
      <returns>Значение true, если значение <paramref name="d1" /> меньше или равно значению <paramref name="d2" />; в противном случае — значение false.</returns>
      <param name="d1">Первое сравниваемое значение.</param>
      <param name="d2">Второе сравниваемое значение.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
      <summary>Возвращает остаток от деления двух заданных значений <see cref="T:System.Decimal" />.</summary>
      <returns>Остаток от деления <paramref name="d1" /> на <paramref name="d2" />.</returns>
      <param name="d1">Делимое.</param>
      <param name="d2">Делитель.</param>
      <exception cref="T:System.DivideByZeroException">Параметр <paramref name="d2" /> имеет значение zero.</exception>
      <exception cref="T:System.OverflowException">Возвращаемое значение меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
      <summary>Перемножает два заданных значения типа <see cref="T:System.Decimal" />.</summary>
      <returns>Результат умножения <paramref name="d1" /> на <paramref name="d2" />.</returns>
      <param name="d1">Первое значение для перемножения.</param>
      <param name="d2">Второе значение для перемножения.</param>
      <exception cref="T:System.OverflowException">Возвращаемое значение меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
      <summary>Находит разность двух заданных значений типа <see cref="T:System.Decimal" />.</summary>
      <returns>Результат вычитания <paramref name="d2" /> из <paramref name="d1" />.</returns>
      <param name="d1">Уменьшаемое.</param>
      <param name="d2">Вычитаемое.</param>
      <exception cref="T:System.OverflowException">Возвращаемое значение меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_UnaryNegation(System.Decimal)">
      <summary>Делает отрицательным значение заданного операнда типа <see cref="T:System.Decimal" />.</summary>
      <returns>Результат умножения параметра <paramref name="d" /> на минус единицу (-1).</returns>
      <param name="d">Инвертируемое значение.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.op_UnaryPlus(System.Decimal)">
      <summary>Возвращает значение операнда <see cref="T:System.Decimal" /> (знак операнда при этом не меняется).</summary>
      <returns>Значение операнда, <paramref name="d" />.</returns>
      <param name="d">Возвращаемый операнд.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String)">
      <summary>Преобразует строковое представление числа в его <see cref="T:System.Decimal" /> эквивалент.</summary>
      <returns>Эквивалентно числу, содержащемуся в свойстве <paramref name="s" />.</returns>
      <param name="s">Преобразовываемое строковое представление числа.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Преобразует строковое представление числа с указанным стилем в его эквивалент в формате <see cref="T:System.Decimal" />.</summary>
      <returns>Число типа <see cref="T:System.Decimal" />, равное числу, содержащемуся в параметре <paramref name="s" />, который задается параметром <paramref name="style" />.</returns>
      <param name="s">Преобразовываемое строковое представление числа.</param>
      <param name="style">Побитовое сочетание значений <see cref="T:System.Globalization.NumberStyles" />, обозначающих элементы стиля, которые могут быть представлены в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Number" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Значение параметра <paramref name="style" /> равно значению <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в его эквивалент <see cref="T:System.Decimal" />, используя заданный стиль и формат для языка и региональных параметров.</summary>
      <returns>Число <see cref="T:System.Decimal" /> равное числу, содержащемуся в параметре <paramref name="s" /> в соответствии с параметрами <paramref name="style" /> и <paramref name="provider" />.</returns>
      <param name="s">Преобразовываемое строковое представление числа.</param>
      <param name="style">Побитовое сочетание значений <see cref="T:System.Globalization.NumberStyles" />, обозначающих элементы стиля, которые могут быть представлены в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Number" />.</param>
      <param name="provider">Объект <see cref="T:System.IFormatProvider" /> предоставляет сведения о формате параметра <paramref name="s" /> для определенного языка и региональных параметров.</param>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Значение параметра <paramref name="style" /> равно значению <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в его эквивалент <see cref="T:System.Decimal" />, используя заданные сведения о формате для языка и региональных параметров.</summary>
      <returns>Число <see cref="T:System.Decimal" /> равное числу, содержащемуся в параметре <paramref name="s" /> в соответствии со значением параметра <paramref name="provider" />.</returns>
      <param name="s">Преобразовываемое строковое представление числа.</param>
      <param name="provider">Интерфейс <see cref="T:System.IFormatProvider" /> предоставляет сведения об анализе параметра <paramref name="s" /> для соответствующего языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> неправильный.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
      <summary>Вычисляет остаток после деления двух значений типа <see cref="T:System.Decimal" />.</summary>
      <returns>Остаток от деления <paramref name="d1" /> на <paramref name="d2" />.</returns>
      <param name="d1">Делимое.</param>
      <param name="d2">Делитель.</param>
      <exception cref="T:System.DivideByZeroException">Значение параметра <paramref name="d2" /> равно нулю.</exception>
      <exception cref="T:System.OverflowException">Возвращаемое значение меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
      <summary>Вычитает одно указанное значение типа <see cref="T:System.Decimal" /> из другого.</summary>
      <returns>Результат вычитания <paramref name="d2" /> из <paramref name="d1" />.</returns>
      <param name="d1">Уменьшаемое.</param>
      <param name="d2">Вычитаемое.</param>
      <exception cref="T:System.OverflowException">Возвращаемое значение меньше значения <see cref="F:System.Decimal.MinValue" /> или больше значения <see cref="F:System.Decimal.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Значение  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки. 	
Zero  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и объект <paramref name="value" />. 	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="value" /> в порядке сортировки. -или-  Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="value">Объект, который следует сравнить с этим экземпляром, или значение null.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="value" /> не относится к типу <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Decimal.ToByte(System.Decimal)">
      <summary>Преобразует значение заданного объекта типа <see cref="T:System.Decimal" /> в эквивалентное 8-разрядное целое число без знака.</summary>
      <returns>8-разрядное целое число без знака, эквивалентное <paramref name="value" />.</returns>
      <param name="value">Десятичное число для преобразования.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToDouble(System.Decimal)">
      <summary>Преобразует значение заданного значения типа <see cref="T:System.Decimal" /> в эквивалентное число двойной точности с плавающей запятой.</summary>
      <returns>Число с плавающей запятой удвоенной точности эквивалентное значению <paramref name="d" />.</returns>
      <param name="d">Десятичное число для преобразования.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt16(System.Decimal)">
      <summary>Преобразует значение заданного объекта типа <see cref="T:System.Decimal" /> в эквивалентное 16-разрядное число со знаком.</summary>
      <returns>16-разрядное целое число со знаком, эквивалентное значению <paramref name="value" />.</returns>
      <param name="value">Десятичное число для преобразования.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt32(System.Decimal)">
      <summary>Преобразует значение заданного объекта типа <see cref="T:System.Decimal" /> в эквивалентное 32-разрядное число со знаком.</summary>
      <returns>32-разрядное целое число со знаком, эквивалентное значению <paramref name="d" />.</returns>
      <param name="d">Десятичное число для преобразования.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="d" /> меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToInt64(System.Decimal)">
      <summary>Преобразует значение заданного объекта типа <see cref="T:System.Decimal" /> в эквивалентное 64-разрядное число со знаком.</summary>
      <returns>64-разрядное целое число со знаком, эквивалентное значению <paramref name="d" />.</returns>
      <param name="d">Десятичное число для преобразования.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="d" /> меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToSByte(System.Decimal)">
      <summary>Преобразует значение заданного объекта типа <see cref="T:System.Decimal" /> в эквивалентное 8-разрядное знаковое целое число.</summary>
      <returns>8-разрядное целое число со знаком, эквивалентное значению <paramref name="value" />.</returns>
      <param name="value">Десятичное число для преобразования.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToSingle(System.Decimal)">
      <summary>Преобразует значение заданного объекта типа <see cref="T:System.Decimal" /> в эквивалентное число одиночной точности с плавающей запятой.</summary>
      <returns>Число одиночной точности с плавающей запятой, эквивалентное значению <paramref name="d" />.</returns>
      <param name="d">Десятичное число для преобразования.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString">
      <summary>Преобразовывает числовое значение данного экземпляра в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения данного экземпляра.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="provider" />.</returns>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.String)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное строковое представление с использованием указанного формата.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</returns>
      <param name="format">Стандартная или пользовательская строка числового формата (см. примечания).</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> не является допустимым.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToString(System.String,System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
      <param name="format">Строка числового формата (см. примечания).</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> не является допустимым.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt16(System.Decimal)">
      <summary>Преобразует значение заданного объекта типа <see cref="T:System.Decimal" /> в эквивалентное 16-разрядное целое число без знака.</summary>
      <returns>16-битовое целое число без знака, эквивалентное значению <paramref name="value" />.</returns>
      <param name="value">Десятичное число для преобразования.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="value" /> больше, чем <see cref="F:System.UInt16.MaxValue" /> или меньше, чем <see cref="F:System.UInt16.MinValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt32(System.Decimal)">
      <summary>Преобразует значение заданного объекта типа <see cref="T:System.Decimal" /> в эквивалентное 32-разрядное целое число без знака.</summary>
      <returns>32-разрядное целое число без знака, эквивалентное значению <paramref name="d" />.</returns>
      <param name="d">Десятичное число для преобразования.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="d" /> является отрицательным или его значение больше, чем значение <see cref="F:System.UInt32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.ToUInt64(System.Decimal)">
      <summary>Преобразует значение заданного объекта типа <see cref="T:System.Decimal" /> в эквивалентное 64-разрядное целое число без знака.</summary>
      <returns>64-разрядное целое число без знака, эквивалентное значению <paramref name="d" />.</returns>
      <param name="d">Десятичное число для преобразования.</param>
      <exception cref="T:System.OverflowException">Параметр <paramref name="d" /> является отрицательным или его значение больше, чем значение <see cref="F:System.UInt64.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.Truncate(System.Decimal)">
      <summary>Возвращает цифры целой части заданного значения типа <see cref="T:System.Decimal" />; все цифры дробной части удаляются.</summary>
      <returns>Результат округления <paramref name="d" /> в сторону нуля до ближайшего целого числа.</returns>
      <param name="d">Десятичное число для усечения.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.TryParse(System.String,System.Decimal@)">
      <summary>Преобразует строковое представление числа в его <see cref="T:System.Decimal" /> эквивалент. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Преобразовываемое строковое представление числа.</param>
      <param name="result">По возвращении из этого метода содержит число типа <see cref="T:System.Decimal" />, эквивалентное числовому значению, содержащемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось неудачей. Преобразование завершается сбоем, если значение параметра <paramref name="s" /> равно null или <see cref="F:System.String.Empty" />, не является числом допустимого формата или представляет число меньше <see cref="F:System.Decimal.MinValue" /> или больше <see cref="F:System.Decimal.MaxValue" />. Этот параметр передается без инициализации.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)">
      <summary>Преобразует строковое представление числа в его эквивалент <see cref="T:System.Decimal" />, используя заданный стиль и формат для языка и региональных параметров. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Преобразовываемое строковое представление числа.</param>
      <param name="style">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Number" />.</param>
      <param name="provider">Объект, который предоставляет сведения об анализе параметра <paramref name="s" /> для определенного языка и региональных параметров.</param>
      <param name="result">По возвращении из этого метода содержит число типа <see cref="T:System.Decimal" />, эквивалентное числовому значению, содержащемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось неудачей. Преобразование завершается сбоем, если параметр <paramref name="s" /> равен null или <see cref="F:System.String.Empty" />, не находится в формате, совместимом с <paramref name="style" /> или представляет собой число меньше <see cref="F:System.Decimal.MinValue" /> или больше <see cref="F:System.Decimal.MaxValue" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Значение параметра <paramref name="style" /> равно значению <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Decimal.Zero">
      <summary>Представляет число нуль (0).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Delegate">
      <summary>Представляет делегат — структуру данных, указывающую на статический метод или на экземпляр класса и метод экземпляра этого класса.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.Combine(System.Delegate,System.Delegate)">
      <summary>Сцепляет списки вызовов двух делегатов.</summary>
      <returns>Новый делегат со списком вызовов, представляющим собой сцепление списков вызовов, заданных в параметрах <paramref name="a" /> и <paramref name="b" /> в указанном порядке. Возвращает <paramref name="a" />, если <paramref name="b" /> имеет значение null; возвращает <paramref name="b" />, если <paramref name="a" /> является пустой ссылкой; возвращает пустую ссылку, если <paramref name="a" /> и <paramref name="b" /> являются пустыми ссылками.</returns>
      <param name="a">Делегат, список вызовов которого передан первым.</param>
      <param name="b">Делегат, список вызовов которого передан вторым.</param>
      <exception cref="T:System.ArgumentException">Значение обоих параметров, <paramref name="a" /> и <paramref name="b" />, не равно null, и эти параметры <paramref name="a" /> и <paramref name="b" /> не являются экземплярами одного и того же типа делегата.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.Combine(System.Delegate[])">
      <summary>Сцепляет списки вызовов массива делегатов.</summary>
      <returns>Новый делегат со списком вызовов, представляющим собой сцепление списков вызовов делегатов, заданных в массиве <paramref name="delegates" />. Возвращает null, если <paramref name="delegates" /> имеет значение null, либо <paramref name="delegates" /> содержит нуль элементов, либо каждый элемент в <paramref name="delegates" /> имеет значение null.</returns>
      <param name="delegates">Массив комбинируемых делегатов.</param>
      <exception cref="T:System.ArgumentException">Не все ненулевые элементы в <paramref name="delegates" /> являются экземплярами одного типа делегата.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.DynamicInvoke(System.Object[])">
      <summary>Динамически (с поздней привязкой) вызывает метод, представленный текущим делегатом.</summary>
      <returns>Объект, возвращаемый методом, представленным делегатом.</returns>
      <param name="args">Массив объектов, которые передаются в качестве аргументов методу, представленному текущим делегатом. -или-  Значение null, если метод, представленный текущим делегатом, не требует аргументов.</param>
      <exception cref="T:System.MemberAccessException">Вызывающий код не имеет доступа к методу, представленному делегатом (например, если это закрытый метод). -или-  Количество, порядок или тип параметров в списке <paramref name="args" /> является недопустимым.</exception>
      <exception cref="T:System.ArgumentException">Представленный делегатом метод вызывается для объекта или класса, которые его не поддерживают.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">Представленный делегатом метод является методом экземпляра, а целевой объект имеет значение null. -или-  Один из инкапсулированных методов выбрасывает исключение.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.Equals(System.Object)">
      <summary>Определяет, принадлежат ли заданный объект и текущий делегат к одному типу, и одинаковы ли их целевые объекты, методы и списки вызовов.</summary>
      <returns>true, если <paramref name="obj" /> и текущий делегат имеют одинаковые целевые объекты, методы и списки вызовов, в противном случае — false.</returns>
      <param name="obj">Объект, который требуется сравнить с текущим делегатом.</param>
      <exception cref="T:System.MemberAccessException">Вызывающий код не имеет доступа к методу, представленному делегатом (например, если это закрытый метод).</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.GetHashCode">
      <summary>Возвращает хэш-код делегата.</summary>
      <returns>Хэш-код делегата.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.GetInvocationList">
      <summary>Возвращает список вызовов делегата.</summary>
      <returns>Массив делегатов, представляющих список вызовов текущего делегата.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Delegate.op_Equality(System.Delegate,System.Delegate)">
      <summary>Определяет, равны ли два заданных делегата.</summary>
      <returns>Значение true, если значения <paramref name="d1" /> и <paramref name="d2" /> равны; в противном случае — значение false.</returns>
      <param name="d1">Первый делегат для операции сравнения.</param>
      <param name="d2">Второй делегат для операции сравнения.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Delegate.op_Inequality(System.Delegate,System.Delegate)">
      <summary>Определяет, являются ли заданные делегаты неравными.</summary>
      <returns>Значение true, если значения <paramref name="d1" /> и <paramref name="d2" /> не равны; в противном случае — значение false.</returns>
      <param name="d1">Первый делегат для операции сравнения.</param>
      <param name="d2">Второй делегат для операции сравнения.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Delegate.Remove(System.Delegate,System.Delegate)">
      <summary>Удаляет последнее вхождение списка вызовов делегата из списка вызовов другого делегата.</summary>
      <returns>Новый делегат со списком вызовов, сформированным путем удаления из <paramref name="source" /> последнего вхождения списка вызовов <paramref name="value" />, если список вызовов <paramref name="value" /> найден в списке вызовов <paramref name="source" />. Возвращает <paramref name="source" />, если <paramref name="value" /> имеет значение null либо список вызовов <paramref name="value" /> не найден в списке вызовов <paramref name="source" />. Возвращает пустую ссылку, если список вызовов <paramref name="value" /> равен списку вызовов <paramref name="source" /> либо <paramref name="source" /> является пустой ссылкой.</returns>
      <param name="source">Делегат, из списка вызовов которого необходимо удалить список вызовов <paramref name="value" />.</param>
      <param name="value">Делегат, представляющий список вызовов, который необходимо удалить из списка вызовов <paramref name="source" />.</param>
      <exception cref="T:System.MemberAccessException">Вызывающий код не имеет доступа к методу, представленному делегатом (например, если это закрытый метод).</exception>
      <exception cref="T:System.ArgumentException">Типы делегатов не совпадают.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Delegate.RemoveAll(System.Delegate,System.Delegate)">
      <summary>Удаляет все вхождения списка вызовов одного делегата из списка вызовов другого делегата.</summary>
      <returns>Новый делегат со списком вызовов, сформированным путем удаления из списка вызовов <paramref name="source" /> всех вхождений списка вызовов <paramref name="value" />, если список вызовов <paramref name="value" /> найден в списке вызовов <paramref name="source" />. Возвращает <paramref name="source" />, если <paramref name="value" /> имеет значение null либо список вызовов <paramref name="value" /> не найден в списке вызовов <paramref name="source" />. Возвращает пустую ссылку, если список вызовов <paramref name="value" /> равен списку вызовов <paramref name="source" />, либо список вызовов <paramref name="source" /> содержит только списки вызовов <paramref name="value" />, либо <paramref name="source" /> является пустой ссылкой.</returns>
      <param name="source">Делегат, из списка вызовов которого необходимо удалить список вызовов <paramref name="value" />.</param>
      <param name="value">Делегат, представляющий список вызовов, который необходимо удалить из списка вызовов <paramref name="source" />.</param>
      <exception cref="T:System.MemberAccessException">Вызывающий код не имеет доступа к методу, представленному делегатом (например, если это закрытый метод).</exception>
      <exception cref="T:System.ArgumentException">Типы делегатов не совпадают.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Delegate.Target">
      <summary>Возвращает экземпляр класса, метод которого вызывает текущий делегат.</summary>
      <returns>Объект, для которого текущий делегат вызывает метод экземпляра, если делегат представляет метод экземпляра, либо null если делегат представляет статический метод.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.DivideByZeroException">
      <summary>Исключение, выбрасываемое при попытке деления целого или дробного числа на нуль.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.DivideByZeroException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.DivideByZeroException" />.</summary>
    </member>
    <member name="M:System.DivideByZeroException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.DivideByZeroException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Строка <see cref="T:System.String" />, описывающая ошибку.</param>
    </member>
    <member name="M:System.DivideByZeroException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.DivideByZeroException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Double">
      <summary>Представляет число двойной точности с плавающей запятой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.CompareTo(System.Double)">
      <summary>Сравнивает данный экземпляр с заданным числом двойной точности с плавающей запятой и возвращает целое число, которое показывает, является ли значение данного экземпляра меньше, больше или равно значению заданного числа двойной точности с плавающей запятой.</summary>
      <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />. 
Возвращаемое значение  	Описание  	
Меньше нуля  	Данный экземпляр меньше <paramref name="value" />. -или-  Данный экземпляр не является числом (<see cref="F:System.Double.NaN" />), а параметр <paramref name="value" /> является.  	
Zero  	Этот экземпляр и параметр <paramref name="value" /> равны. -или-  И этот экземпляр, и параметр <paramref name="value" /> не являются числами (<see cref="F:System.Double.NaN" />), равны <see cref="F:System.Double.PositiveInfinity" /> или <see cref="F:System.Double.NegativeInfinity" />.  	
Больше нуля.  	Этот экземпляр больше параметра <paramref name="value" />. -или-  Данный экземпляр является числом, а параметр <paramref name="value" /> — нет (<see cref="F:System.Double.NaN" />).</returns>
      <param name="value">Число двойной точности с плавающей запятой для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Double.Epsilon">
      <summary>Представляет наименьшее положительное значение <see cref="T:System.Double" /> больше нуля. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Equals(System.Double)">
      <summary>Возвращает значение, позволяющее определить, представляют ли этот экземпляр и заданный объект <see cref="T:System.Double" /> одно и то же значение.</summary>
      <returns>Значение true, если значение параметра <paramref name="obj" /> равно данному экземпляру; в противном случае — значение false.</returns>
      <param name="obj">Объект типа <see cref="T:System.Double" />, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>true, если параметр <paramref name="obj" /> является экземпляром типа <see cref="T:System.Double" /> и равен значению данного экземпляра; в противном случае — false.</returns>
      <param name="obj">Объект для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Double.IsInfinity(System.Double)">
      <summary>Возвращает значение, позволяющее определить, равно ли данное число плюс или минус бесконечности.</summary>
      <returns>Значение true, если параметр <paramref name="d" /> равен значению <see cref="F:System.Double.PositiveInfinity" /> или <see cref="F:System.Double.NegativeInfinity" />; в противном случае — значение false.</returns>
      <param name="d">Число двойной точности с плавающей запятой.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsNaN(System.Double)">
      <summary>Возвращает значение, показывающее, что указанное значение не является числом (<see cref="F:System.Double.NaN" />).</summary>
      <returns>Значение true, если значение параметра <paramref name="d" /> равно значению <see cref="F:System.Double.NaN" />; в противном случае — значение false.</returns>
      <param name="d">Число двойной точности с плавающей запятой.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsNegativeInfinity(System.Double)">
      <summary>Возвращает значение, позволяющее определить, равно ли данное число минус бесконечности.</summary>
      <returns>Значение true, если значение параметра <paramref name="d" /> равно значению <see cref="F:System.Double.NegativeInfinity" />; в противном случае — значение false.</returns>
      <param name="d">Число двойной точности с плавающей запятой.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.IsPositiveInfinity(System.Double)">
      <summary>Возвращает значение, показывающее, равно ли данное число плюс бесконечности.</summary>
      <returns>Значение true, если значение параметра <paramref name="d" /> равно значению <see cref="F:System.Double.PositiveInfinity" />; в противном случае — значение false.</returns>
      <param name="d">Число двойной точности с плавающей запятой.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.MaxValue">
      <summary>Представляет наибольшее возможное значение типа <see cref="T:System.Double" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.MinValue">
      <summary>Представляет наименьшее возможное значение типа <see cref="T:System.Double" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.NaN">
      <summary>Представляет значение, не являющееся числом (NaN). Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.NegativeInfinity">
      <summary>Представляет минус бесконечность. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.op_Equality(System.Double,System.Double)">
      <summary>Возвращает значение, определяющее, равны ли два указанных значения <see cref="T:System.Double" />.</summary>
      <returns>true, если значения <paramref name="left" /> и <paramref name="right" /> равны; в противном случае — false.</returns>
      <param name="left">Первое сравниваемое значение.</param>
      <param name="right">Второе сравниваемое значение.</param>
    </member>
    <member name="M:System.Double.op_GreaterThan(System.Double,System.Double)">
      <summary>Возвращает значение, определяющее, действительно ли заданное значение типа <see cref="T:System.Double" /> больше другого заданного значения типа <see cref="T:System.Double" />.</summary>
      <returns>true, если значение <paramref name="left" /> больше значения <paramref name="right" />; в противном случае — false.</returns>
      <param name="left">Первое сравниваемое значение.</param>
      <param name="right">Второе сравниваемое значение.</param>
    </member>
    <member name="M:System.Double.op_GreaterThanOrEqual(System.Double,System.Double)">
      <summary>Возвращает значение, определяющее, действительно ли заданное значение типа <see cref="T:System.Double" /> больше или равно другому заданному значению типа <see cref="T:System.Double" />.</summary>
      <returns>true, если значение <paramref name="left" /> больше или равно значению <paramref name="right" />; в противном случае — false.</returns>
      <param name="left">Первое сравниваемое значение.</param>
      <param name="right">Второе сравниваемое значение.</param>
    </member>
    <member name="M:System.Double.op_Inequality(System.Double,System.Double)">
      <summary>Возвращает значение, определяющее, не равны ли два указанных значения <see cref="T:System.Double" />.</summary>
      <returns>Значение true, если значения параметров <paramref name="left" /> и <paramref name="right" /> не равны; в противном случае — значение false.</returns>
      <param name="left">Первое сравниваемое значение.</param>
      <param name="right">Второе сравниваемое значение.</param>
    </member>
    <member name="M:System.Double.op_LessThan(System.Double,System.Double)">
      <summary>Возвращает значение, определяющее, действительно ли заданное значение типа <see cref="T:System.Double" /> меньше другого заданного значения типа <see cref="T:System.Double" />.</summary>
      <returns>true, если значение <paramref name="left" /> меньше значения <paramref name="right" />; в противном случае — false.</returns>
      <param name="left">Первое сравниваемое значение.</param>
      <param name="right">Второе сравниваемое значение.</param>
    </member>
    <member name="M:System.Double.op_LessThanOrEqual(System.Double,System.Double)">
      <summary>Возвращает значение, определяющее, действительно ли заданное значение типа <see cref="T:System.Double" /> меньше или равно другому заданному значению типа <see cref="T:System.Double" />.</summary>
      <returns>true, если значение <paramref name="left" /> меньше или равно значению <paramref name="right" />; в противном случае — false.</returns>
      <param name="left">Первое сравниваемое значение.</param>
      <param name="right">Второе сравниваемое значение.</param>
    </member>
    <member name="M:System.Double.Parse(System.String)">
      <summary>Преобразует строковое представление числа в эквивалентное ему число двойной точности с плавающей запятой.</summary>
      <returns>Число с плавающей запятой двойной точности, которое эквивалентно числовому значению или символу, заданному параметром <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> не представляет число в допустимом формате.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Преобразует строковое представление числа указанного стиля в эквивалентное ему число двойной точности с плавающей запятой.</summary>
      <returns>Число с плавающей запятой двойной точности, которое эквивалентно числовому значению или символу, заданному параметром <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="style">Побитовое сочетание значений перечисления, обозначающих элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Типичным задаваемым значением является сочетание <see cref="F:System.Globalization.NumberStyles.Float" /> и <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> не представляет число в допустимом формате.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> включает значение <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа указанного стиля, выраженное в формате, соответствующем определенному языку и региональным параметрам, в эквивалентное ему число двойной точности с плавающей запятой.</summary>
      <returns>Число с плавающей запятой двойной точности, которое эквивалентно числовому значению или символу, заданному параметром <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="style">Побитовое сочетание значений перечисления, обозначающих элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Float" /> в сочетании со значением <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> не представляет числовое значение.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Значение параметра <paramref name="style" /> равно значению <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.Parse(System.String,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа, выраженное в заданном формате, связанном с языком и региональными параметрами, в эквивалентное ему число двойной точности с плавающей запятой.</summary>
      <returns>Число с плавающей запятой двойной точности, которое эквивалентно числовому значению или символу, заданному параметром <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> не представляет число в допустимом формате.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Double.PositiveInfinity">
      <summary>Представляет плюс бесконечность. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Значение  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки. 	
Zero  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и объект <paramref name="value" />. 	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="value" /> в порядке сортировки. -или-  Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не является объектом типа <see cref="T:System.Double" />.</exception>
    </member>
    <member name="M:System.Double.ToString">
      <summary>Преобразовывает числовое значение данного экземпляра в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения этого экземпляра.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="provider" />.</returns>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.String)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное строковое представление с использованием указанного формата.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</returns>
      <param name="format">Строка числового формата.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> не является допустимым.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.ToString(System.String,System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
      <param name="format">Строка числового формата.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.TryParse(System.String,System.Double@)">
      <summary>Преобразует строковое представление числа в эквивалентное ему число двойной точности с плавающей запятой. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="result">По возвращении из этого метода содержит число двойной точности с плавающей запятой, эквивалентное параметру <paramref name="s" />, если преобразование завершается успешно, или нуль, если оно завершается сбоем. Преобразование завершается сбоем, если значение параметра <paramref name="s" /> равно null или <see cref="F:System.String.Empty" />, не является числом допустимого формата или представляет число меньше <see cref="F:System.Double.MinValue" /> или больше <see cref="F:System.Double.MaxValue" />. Этот параметр передается без инициализации.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
      <summary>Преобразует строковое представление числа указанного стиля, выраженное в формате, соответствующем определенному языку и региональным параметрам, в эквивалентное ему число двойной точности с плавающей запятой. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="style">Побитовое сочетание значений <see cref="T:System.Globalization.NumberStyles" />, задающее разрешенный формат параметра <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Float" /> в сочетании со значением <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">Интерфейс <see cref="T:System.IFormatProvider" /> предоставляет сведения о форматировании параметра <paramref name="s" /> для соответствующего языка и региональных параметров.</param>
      <param name="result">По возвращении из этого метода содержит число двойной точности с плавающей запятой, эквивалентное числовому значению символа, содержащегося в параметре <paramref name="s" />, если преобразование завершается успешно, или нуль, если оно завершается сбоем. Преобразование завершается сбоем, если значением параметра <paramref name="s" /> равно null или <see cref="F:System.String.Empty" />, не является значением в формате, совместимом с <paramref name="style" />, представляет число меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" /> либо если <paramref name="style" /> не является допустимой комбинацией перечисленных констант <see cref="T:System.Globalization.NumberStyles" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> включает значение <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Enum">
      <summary>Предоставляет базовый класс для перечислений.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Enum" />.</summary>
    </member>
    <member name="M:System.Enum.CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр с заданным объектом и возвращает значение, указывающее, как соотносятся значения этих объектов.</summary>
      <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="target" />. 
Значение  	Значение  	
Меньше нуля  	Значение данного экземпляра меньше значения параметра <paramref name="target" />.  	
Zero  	Значение данного экземпляра равно значению параметра <paramref name="target" />.  	
Больше нуля.  	Значение данного экземпляра больше значения параметра <paramref name="target" />. -или-  Параметр <paramref name="target" /> имеет значение null.</returns>
      <param name="target">Объект для сравнения или значение null.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="target" /> и этот экземпляр не принадлежат к одному типу.</exception>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр не принадлежит к типу <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" /> или <see cref="T:System.UInt64" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>true если <paramref name="obj" /> является значением перечисления того же типа и базового значения как этот экземпляр, в противном случае false.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.Format(System.Type,System.Object,System.String)">
      <summary>Преобразует указанное значение заданного перечислимого типа в эквивалентное строковое представление в соответствии с заданным форматом.</summary>
      <returns>Строковое представление параметра <paramref name="value" />.</returns>
      <param name="enumType">Тип перечисления преобразуемого значения.</param>
      <param name="value">Преобразуемое значение.</param>
      <param name="format">Используемый формат вывода.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="enumType" />, <paramref name="value" /> или <paramref name="format" /> равно null.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="enumType" /> не принадлежит к типу <see cref="T:System.Enum" />. -или-  Параметр <paramref name="value" /> принадлежит к перечислению, тип которого отличается от типа <paramref name="enumType" />. -или-  Тип параметра <paramref name="value" /> не является базовым типом параметра <paramref name="enumType" />.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> содержит недопустимое значение.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> равняется "X", но тип перечисления неизвестен.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetHashCode">
      <summary>Возвращает хэш-код для значения данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.GetName(System.Type,System.Object)">
      <summary>Возвращает имя константы с заданным значением из указанного перечисления.</summary>
      <returns>Строка, содержащая имя константы перечислимого типа в <paramref name="enumType" />, значение которой равно <paramref name="value" />, или null, если такая константа не найдена.</returns>
      <param name="enumType">Перечислимый тип.</param>
      <param name="value">Значение данной перечислимой константы в терминах ее базового типа.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="enumType" /> или <paramref name="value" /> — null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="enumType" /> не является перечислением <see cref="T:System.Enum" />. -или-  Параметр <paramref name="value" /> не принадлежит к типу <paramref name="enumType" />, и его базовым типом также не является <paramref name="enumType" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetNames(System.Type)">
      <summary>Возвращает массив имен констант в указанном перечислении.</summary>
      <returns>Строковый массив имен констант в <paramref name="enumType" />.</returns>
      <param name="enumType">Перечислимый тип.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="enumType" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> не является <see cref="T:System.Enum" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetUnderlyingType(System.Type)">
      <summary>Возвращает базовый тип заданного перечисления.</summary>
      <returns>Базовый тип <paramref name="enumType" />.</returns>
      <param name="enumType">Перечисление, базовый тип которого требуется получить.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="enumType" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="enumType" /> не является перечислением <see cref="T:System.Enum" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.GetValues(System.Type)">
      <summary>Возвращает массив значений констант в указанном перечислении.</summary>
      <returns>Массив, который содержит значения констант в <paramref name="enumType" />.</returns>
      <param name="enumType">Перечислимый тип.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="enumType" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="enumType" /> не является перечислением <see cref="T:System.Enum" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод вызывается отражением в контексте, предназначенном только для отражения.  -или- <paramref name="enumType" /> — это тип из сборки, загруженной в контексте только для отражения.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.HasFlag(System.Enum)">
      <summary>Определяет, установлены ли в текущем экземпляре одно или несколько битовых полей.</summary>
      <returns>Значение true, если одно или несколько битовых полей, установленных в параметре <paramref name="flag" />, также установлены в текущем экземпляре; в противном случае — значение false.</returns>
      <param name="flag">Значение перечисления.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> является типом, отличным от текущего экземпляра.</exception>
    </member>
    <member name="M:System.Enum.IsDefined(System.Type,System.Object)">
      <summary>Возвращает признак наличия константы с указанным значением в заданном перечислении.</summary>
      <returns>true, если константа в <paramref name="enumType" /> имеет значение <paramref name="value" />; в противном случае — false.</returns>
      <param name="enumType">Перечислимый тип.</param>
      <param name="value">Значение или имя константы в <paramref name="enumType" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="enumType" /> или <paramref name="value" /> — null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="enumType" /> не является объектом Enum. -или-  Тип <paramref name="value" /> является перечислением, однако не является перечислением типа <paramref name="enumType" />. -или-  Тип параметра <paramref name="value" /> не является базовым типом параметра <paramref name="enumType" />.</exception>
      <exception cref="T:System.InvalidOperationException">Типом <paramref name="value" /> не является <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, <see cref="T:System.UInt64" /> или <see cref="T:System.String" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.Parse(System.Type,System.String)">
      <summary>Преобразует строковое представление имени или числового значения одной или нескольких перечислимых констант в эквивалентный перечислимый объект.</summary>
      <returns>Объект типа <paramref name="enumType" />, значение которого представлено параметром <paramref name="value" />.</returns>
      <param name="enumType">Перечислимый тип.</param>
      <param name="value">Строка, содержащая имя или значение для преобразования.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="enumType" /> или <paramref name="value" /> — null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="enumType" /> не является перечислением <see cref="T:System.Enum" />. -или-  <paramref name="value" /> является пустой строкой или содержит только пробелы. -или-  В параметре <paramref name="value" /> задано имя, не являющееся именем одной из именованных констант, определенных для данного перечисления.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> находится вне диапазона базового типа <paramref name="enumType" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
      <summary>Преобразует строковое представление имени или числового значения одной или нескольких перечислимых констант в эквивалентный перечислимый объект. Параметр указывает, учитывается ли в операции регистр.</summary>
      <returns>Объект типа <paramref name="enumType" />, значение которого представлено параметром <paramref name="value" />.</returns>
      <param name="enumType">Перечислимый тип.</param>
      <param name="value">Строка, содержащая имя или значение для преобразования.</param>
      <param name="ignoreCase">Значение true, чтобы игнорировать регистр; в противном случае — значение false.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="enumType" /> или <paramref name="value" /> — null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="enumType" /> не является перечислением <see cref="T:System.Enum" />. -или-  <paramref name="value" /> является пустой строкой ("") или содержит только пробелы. -или-  В параметре <paramref name="value" /> задано имя, не являющееся именем одной из именованных констант, определенных для данного перечисления.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> находится вне диапазона базового типа <paramref name="enumType" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Перегруженная версия метода является устаревшей, вместо нее следует использовать метод <see cref="M:System.Enum.ToString(System.String)" />.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</returns>
      <param name="format">Спецификация формата.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> не содержит допустимую спецификацию формата.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> равняется "X", но тип перечисления неизвестен.</exception>
    </member>
    <member name="M:System.Enum.ToObject(System.Type,System.Object)">
      <summary>Преобразует заданный объект с целочисленным значением в член перечисления.</summary>
      <returns>Объект перечисления, значение которого равно <paramref name="value" />.</returns>
      <param name="enumType">Тип перечисления, который необходимо вернуть.</param>
      <param name="value">Значение, которое необходимо преобразовать в член перечисления.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="enumType" /> или <paramref name="value" /> — null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="enumType" /> не является перечислением <see cref="T:System.Enum" />. -или-  Типом <paramref name="value" /> не является <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, или <see cref="T:System.UInt64" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Enum.ToString">
      <summary>Преобразует значение этого экземпляра в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения этого экземпляра.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.ToString(System.String)">
      <summary>Преобразует числовое значение этого экземпляра в эквивалентное ему строковое представление с использованием указанного формата.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</returns>
      <param name="format">Строка формата.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> содержит недопустимую спецификацию.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="format" /> равняется "X", но тип перечисления неизвестен.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
      <summary>Преобразует строковое представление имени или числового значения одной или нескольких перечислимых констант в эквивалентный перечислимый объект. Параметр указывает, учитывается ли в операции регистр. Возвращаемое значение указывает, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> успешно преобразован, в противном случае — значение false.</returns>
      <param name="value">Строковое представление имени перечисления или базового значения для преобразования.</param>
      <param name="ignoreCase">Значение true, чтобы игнорировать регистр; значение false, чтобы учитывать регистр.</param>
      <param name="result">При возвращении данного метода, содержит объект <paramref name="result" /> типа <paramref name="TEnum" />, значение которого представляет собой значение <paramref name="value" />, если операция анализа завершается успешно. Если операция анализа завершается сбоем, то свойство <paramref name="result" /> содержит значение по умолчанию для базового типа <paramref name="TEnum" />. Обратите внимание, что это значение не должно быть членом перечисления <paramref name="TEnum" />. Этот параметр передается без инициализации.</param>
      <typeparam name="TEnum">Тип перечисления, в который требуется преобразовать параметр <paramref name="value" />.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="TEnum" /> не является типом перечисления.</exception>
    </member>
    <member name="M:System.Enum.TryParse``1(System.String,``0@)">
      <summary>Преобразует строковое представление имени или числового значения одной или нескольких перечислимых констант в эквивалентный перечислимый объект. Возвращаемое значение указывает, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> успешно преобразован, в противном случае — значение false.</returns>
      <param name="value">Строковое представление имени перечисления или базового значения для преобразования.</param>
      <param name="result">При возвращении данного метода, содержит объект <paramref name="result" /> типа <paramref name="TEnum" />, значение которого представляет собой значение <paramref name="value" />, если операция анализа завершается успешно. Если операция анализа завершается сбоем, то свойство <paramref name="result" /> содержит значение по умолчанию для базового типа <paramref name="TEnum" />. Обратите внимание, что это значение не должно быть членом перечисления <paramref name="TEnum" />. Этот параметр передается без инициализации.</param>
      <typeparam name="TEnum">Тип перечисления, в который требуется преобразовать параметр <paramref name="value" />.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="TEnum" /> не является типом перечисления.</exception>
    </member>
    <member name="T:System.EventArgs">
      <summary>Представляет базовый класс для классов, которые содержат данные события, и предоставляет значение для использования для событий, которые не включают данные события.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventArgs.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.EventArgs" />.</summary>
    </member>
    <member name="F:System.EventArgs.Empty">
      <summary>Содержит значение, которое использовать с событиями, которые не содержат данные события.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.EventHandler">
      <summary>Представляет метод, который будет обрабатывать событие, не имеющее данных.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventHandler.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.EventHandler.BeginInvoke(System.Object,System.EventArgs,System.AsyncCallback,System.Object)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.EventHandler.EndInvoke(System.IAsyncResult)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.EventHandler.Invoke(System.Object,System.EventArgs)">
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.EventHandler`1">
      <summary>Представляет метод, который будет обрабатывать событие, когда событие предоставляет данные.</summary>
      <typeparam name="TEventArgs">Тип данных, создаваемых событием.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.EventHandler`1.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.EventHandler`1.BeginInvoke(System.Object,`0,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.EventHandler`1.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.EventHandler`1.Invoke(System.Object,`0)">
    </member>
    <member name="T:System.Exception">
      <summary>Представляет ошибки, происходящие во время выполнения приложения.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Exception.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Exception" />.</summary>
    </member>
    <member name="M:System.Exception.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Exception" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.Exception.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Exception" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, вызвавшее текущее исключение, или указатель null (Nothing в Visual Basic), если внутреннее исключение не задано.</param>
    </member>
    <member name="P:System.Exception.Data">
      <summary>Возвращает коллекцию пар "ключ-значение", предоставляющих дополнительную заданную пользователем информацию об исключении.</summary>
      <returns>Объект, который реализует интерфейс <see cref="T:System.Collections.IDictionary" /> и содержит в себе коллекцию пар "ключ-значение". По умолчанию является пустой коллекцией.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Exception.GetBaseException">
      <summary>При переопределении в производном классе возвращает исключение <see cref="T:System.Exception" />, которое является корневой причиной одного или нескольких последующих исключений.</summary>
      <returns>В цепочке исключений создается первое исключение. Если свойством <see cref="P:System.Exception.InnerException" /> текущего исключения является указатель NULL (Nothing в Visual Basic), это свойство возвращает текущее исключение.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.HelpLink">
      <summary>Возвращает или задает ссылку на файл справки, связанный с этим исключением.</summary>
      <returns>URN или URL-адрес.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.HResult">
      <summary>Возвращает или задает HRESULT — кодированное числовое значение, присвоенное определенному исключению.</summary>
      <returns>Значение HRESULT.</returns>
    </member>
    <member name="P:System.Exception.InnerException">
      <summary>Возвращает экземпляр объекта <see cref="T:System.Exception" />, который вызвал текущее исключение.</summary>
      <returns>Экземпляр Exception, описывающий ошибку, вызывающую текущее исключение. Свойство InnerException возвращает то же значение, что было передано в конструктор, или указатель NULL (Nothing в Visual Basic), если конструктору не было передано значение внутреннего исключения. Это свойство доступно только для чтения.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Exception.Message">
      <summary>Возвращает сообщение, описывающее текущее исключение.</summary>
      <returns>Сообщение об ошибке с объяснением причин исключения или пустая строка ("").</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Exception.Source">
      <summary>Возвращает или задает имя приложения или объекта, вызывавшего ошибку.</summary>
      <returns>Имя приложения или объекта, вызвавшего ошибку.</returns>
      <exception cref="T:System.ArgumentException">Объект должен быть объект среды выполнения <see cref="N:System.Reflection" /></exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Exception.StackTrace">
      <summary>Получает строковое представление непосредственных кадров в стеке вызова.</summary>
      <returns>Строка, описывающая непосредственные фреймы стека вызова.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="M:System.Exception.ToString">
      <summary>Создает и возвращает строковое представление текущего исключения.</summary>
      <returns>Строковое представление текущего исключения.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="T:System.FlagsAttribute">
      <summary>Указывает, что перечисление может обрабатываться как битовое поле, которое является набором флагов.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.FlagsAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.FlagsAttribute" />.</summary>
    </member>
    <member name="T:System.FormatException">
      <summary>Исключение, выбрасываемое, если формат аргумента не соответствует спецификациям параметра вызываемого метода.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.FormatException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.FormatException" />.</summary>
    </member>
    <member name="M:System.FormatException.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.FormatException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.FormatException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.FormatException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="innerException" /> не является указателем null (Nothing в Visual Basic), то текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Func`1">
      <summary>Инкапсулирует метод без параметров и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Func`1.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`1.BeginInvoke(System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`1.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`1.Invoke">
    </member>
    <member name="T:System.Func`10">
      <summary>Инкапсулирует метод, который принимает девять параметров и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`10.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`10.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`10.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`10.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
    </member>
    <member name="T:System.Func`11">
      <summary>Инкапсулирует метод, который принимает 10 параметров и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T10">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`11.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`11.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`11.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`11.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
    </member>
    <member name="T:System.Func`12">
      <summary>Инкапсулирует метод, который принимает 11 параметров и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T10">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T11">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`12.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`12.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`12.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`12.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
    </member>
    <member name="T:System.Func`13">
      <summary>Инкапсулирует метод, который принимает 12 параметров и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T10">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T11">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T12">Тип двенадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`13.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`13.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`13.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`13.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
    </member>
    <member name="T:System.Func`14">
      <summary>Инкапсулирует метод, который принимает 13 параметров и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T10">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T11">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T12">Тип двенадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T13">Тип тринадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`14.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`14.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`14.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`14.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
    </member>
    <member name="T:System.Func`15">
      <summary>Инкапсулирует метод, который принимает 14 параметров и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T10">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T11">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T12">Тип двенадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T13">Тип тринадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T14">Тип четырнадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`15.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`15.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`15.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`15.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
    </member>
    <member name="T:System.Func`16">
      <summary>Инкапсулирует метод, который принимает 15 параметров и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T10">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T11">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T12">Тип двенадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T13">Тип тринадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T14">Тип четырнадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T15">Тип пятнадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`16.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`16.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`16.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`16.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
    </member>
    <member name="T:System.Func`17">
      <summary>Инкапсулирует метод, который принимает 16 параметров и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T9">Тип девятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T10">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T11">Тип одиннадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T12">Тип двенадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T13">Тип тринадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T14">Тип четырнадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T15">Тип пятнадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T16">Тип шестнадцатого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`17.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`17.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`17.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`17.Invoke(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
    </member>
    <member name="T:System.Func`2">
      <summary>Инкапсулирует метод с одним параметром и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T">Тип параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`2.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`2.BeginInvoke(`0,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`2.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`2.Invoke(`0)">
    </member>
    <member name="T:System.Func`3">
      <summary>Инкапсулирует метод с двумя параметрами и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`3.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`3.BeginInvoke(`0,`1,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`3.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`3.Invoke(`0,`1)">
    </member>
    <member name="T:System.Func`4">
      <summary>Инкапсулирует метод с тремя параметрами и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`4.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`4.BeginInvoke(`0,`1,`2,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`4.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`4.Invoke(`0,`1,`2)">
    </member>
    <member name="T:System.Func`5">
      <summary>Инкапсулирует метод с четырьмя параметрами и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`5.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`5.BeginInvoke(`0,`1,`2,`3,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`5.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`5.Invoke(`0,`1,`2,`3)">
    </member>
    <member name="T:System.Func`6">
      <summary>Инкапсулирует метод, который принимает пять параметров и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`6.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`6.BeginInvoke(`0,`1,`2,`3,`4,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`6.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`6.Invoke(`0,`1,`2,`3,`4)">
    </member>
    <member name="T:System.Func`7">
      <summary>Инкапсулирует метод, который принимает шесть параметров и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`7.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`7.BeginInvoke(`0,`1,`2,`3,`4,`5,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`7.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`7.Invoke(`0,`1,`2,`3,`4,`5)">
    </member>
    <member name="T:System.Func`8">
      <summary>Инкапсулирует метод, который принимает семь параметров и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`8.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`8.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`8.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`8.Invoke(`0,`1,`2,`3,`4,`5,`6)">
    </member>
    <member name="T:System.Func`9">
      <summary>Инкапсулирует метод, который принимает восемь параметров и возвращает значение типа, указанного в параметре <paramref name="TResult" />.</summary>
      <typeparam name="T1">Тип первого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T2">Тип второго параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T3">Тип третьего параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T4">Тип четвертого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T5">Тип пятого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T6">Тип шестого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T7">Тип седьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="T8">Тип восьмого параметра метода, инкапсулируемого данным делегатом.</typeparam>
      <typeparam name="TResult">Тип возвращаемого значения метода, инкапсулируемого данным делегатом.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Func`9.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Func`9.BeginInvoke(`0,`1,`2,`3,`4,`5,`6,`7,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Func`9.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Func`9.Invoke(`0,`1,`2,`3,`4,`5,`6,`7)">
    </member>
    <member name="T:System.GC">
      <summary>Управляет системным сборщиком мусора — службой, которая автоматически высвобождает неиспользуемую память.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.GC.AddMemoryPressure(System.Int64)">
      <summary>Информирует среду CLR о выделении большого объема неуправляемой памяти, которую необходимо учесть при планировании сборки мусора.</summary>
      <param name="bytesAllocated">Объем, на который увеличен объем выделенной неуправляемой памяти.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="bytesAllocated" /> меньше или равно 0. -или- На 32-разрядном компьютере <paramref name="bytesAllocated" /> больше <see cref="F:System.Int32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.GC.Collect">
      <summary>Принудительно запускает немедленную сборку мусора для всех поколений.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.Collect(System.Int32)">
      <summary>Принудительно начинает немедленную сборку мусора, начиная с нулевого поколения и вплоть до указанного поколения.</summary>
      <param name="generation">Количество старших поколений, для которых может быть выполнена сборка мусора.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> недействителен.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.Collect(System.Int32,System.GCCollectionMode)">
      <summary>Принудительно начинает немедленную сборку мусора начиная с нулевого поколения и вплоть до указанного поколения в момент времени, заданный значением <see cref="T:System.GCCollectionMode" />.</summary>
      <param name="generation">Количество старших поколений, для которых может быть выполнена сборка мусора.</param>
      <param name="mode">Одно из значений перечисления, которое задает поведение сборки мусора.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> недействителен. -или- <paramref name="mode" /> не является одним из значений <see cref="T:System.GCCollectionMode" />.</exception>
    </member>
    <member name="M:System.GC.Collect(System.Int32,System.GCCollectionMode,System.Boolean)">
      <summary>Принудительная сборка мусора с поколения 0 до указанного поколения во время, указанное значением <see cref="T:System.GCCollectionMode" />, со значением, указывающим, должна ли коллекция быть блокирующей.</summary>
      <param name="generation">Количество старших поколений, для которых может быть выполнена сборка мусора.</param>
      <param name="mode">Одно из значений перечисления, которое указывает, вызвана сборка мусора или оптимизирована.</param>
      <param name="blocking">Значение true для выполнения сборки мусора с блокировкой; значение false для выполнения фоновой сборки мусора, где это возможно.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="generation" /> недействителен. -или- <paramref name="mode" /> не является одним из значений <see cref="T:System.GCCollectionMode" />.</exception>
    </member>
    <member name="M:System.GC.CollectionCount(System.Int32)">
      <summary>Возвращает количество операций сборки мусора, выполненных для заданного поколения объектов.</summary>
      <returns>Количество операций сборки мусора, выполненных для заданного поколения объектов с начала процесса.</returns>
      <param name="generation">Поколение объектов, для которого будет определено количество операций сборки мусора.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="generation" /> меньше 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.GetTotalMemory(System.Boolean)">
      <summary>Извлекает предполагаемое количество выделенных в данный момент байтов. Параметр указывает, может ли этот метод выдержать короткий интервал времени ожидания перед возвратом, пока система выполняет сборку мусора и завершает объекты.</summary>
      <returns>Наилучшая доступная аппроксимация числа байтов, распределенных в данный момент в управляемой памяти.</returns>
      <param name="forceFullCollection">true, чтобы указать, что перед возвратом этот метод может дождаться выполнения сборки мусора; в противном случае — false.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.KeepAlive(System.Object)">
      <summary>Ссылается на указанный объект, делая его недоступным для сборщика мусора с момента начала текущей процедуры до вызова этого метода.</summary>
      <param name="obj">Объект для ссылки.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.GC.MaxGeneration">
      <summary>Возвращает наибольшее число поколений, поддерживаемое системой в настоящее время.</summary>
      <returns>Значение от нуля до максимального числа поддерживаемых поколений.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.RemoveMemoryPressure(System.Int64)">
      <summary>Информирует среду CLR о том, что неуправляемая память освобождения и ее более не требуется учитывать при планировании сборки мусора.</summary>
      <param name="bytesAllocated">Объем, на который увеличен объем освобожденной неуправляемой памяти.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="bytesAllocated" /> меньше или равно 0.  -или-  На 32-разрядном компьютере <paramref name="bytesAllocated" /> больше <see cref="F:System.Int32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.GC.ReRegisterForFinalize(System.Object)">
      <summary>Требует, чтобы система вызвала метод завершения для указанного объекта, для которого ранее был вызван метод <see cref="M:System.GC.SuppressFinalize(System.Object)" />.</summary>
      <param name="obj">Объект, для которого должен быть вызван метод завершения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="obj" /> имеет значение null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.SuppressFinalize(System.Object)">
      <summary>Сообщает системе, что она не должна вызывать метод завершения для указанного объекта.</summary>
      <param name="obj">Объект, для которого не должен вызываться метод завершения.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="obj" /> имеет значение null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.GC.WaitForPendingFinalizers">
      <summary>Приостанавливает текущий поток до тех пор, пока поток, обрабатывающий очередь методов завершения, не обработает всю очередь.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.GCCollectionMode">
      <summary>Задает поведение для принудительной сборки мусора.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.GCCollectionMode.Default">
      <summary>Значение по умолчанию для данного перечисления, в настоящий момент — <see cref="F:System.GCCollectionMode.Forced" />.</summary>
    </member>
    <member name="F:System.GCCollectionMode.Forced">
      <summary>Вызывает немедленное выполнение принудительной сборки мусора.</summary>
    </member>
    <member name="F:System.GCCollectionMode.Optimized">
      <summary>Позволяет сборщику мусора определить, является ли текущий момент оптимальным для освобождения объектов.</summary>
    </member>
    <member name="T:System.Guid">
      <summary>Представляет глобальный уникальный идентификатор (GUID).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.#ctor(System.Byte[])">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Guid" /> с использованием указанного массива байтов.</summary>
      <param name="b">Массив из 16 байтов содержит значения для инициализации GUID.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="b" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Размер <paramref name="b" /> не равен 16 байтам.</exception>
    </member>
    <member name="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Guid" /> с использованием заданных целых чисел и байтов.</summary>
      <param name="a">Первые 4 байта GUID.</param>
      <param name="b">Следующие 2 байта GUID.</param>
      <param name="c">Следующие 2 байта GUID.</param>
      <param name="d">Следующий байт GUID.</param>
      <param name="e">Следующий байт GUID.</param>
      <param name="f">Следующий байт GUID.</param>
      <param name="g">Следующий байт GUID.</param>
      <param name="h">Следующий байт GUID.</param>
      <param name="i">Следующий байт GUID.</param>
      <param name="j">Следующий байт GUID.</param>
      <param name="k">Следующий байт GUID.</param>
    </member>
    <member name="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Guid" /> с использованием заданных целых чисел и массива байтов.</summary>
      <param name="a">Первые 4 байта GUID.</param>
      <param name="b">Следующие 2 байта GUID.</param>
      <param name="c">Следующие 2 байта GUID.</param>
      <param name="d">Оставшиеся 8 байтов GUID.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="d" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Размер <paramref name="d" /> не равен 8 байтам.</exception>
    </member>
    <member name="M:System.Guid.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Guid" /> с использованием значения, представленного заданной строкой.</summary>
      <param name="g">Строка, содержащая GUID в одном из указанных ниже форматов (здесь "d" обозначает шестнадцатеричную цифру, регистр которой игнорируется).  Непрерывная последовательность из 32 цифр:  dddddddddddddddddddddddddddddddd  -или-  Группы из 8, 4, 4, 4 и 12 цифр с дефисами между группами. GUID целиком может быть заключен в фигурные или круглые скобки: dddddddd-dddd-dddd-dddd-dddddddddddd  -или-  {dddddddd-dddd-dddd-dddd-dddddddddddd}  -или-  (dddddddd-dddd-dddd-dddd-dddddddddddd)  -или-  Группы из 8, 4 и 4 цифр и подмножество восьми групп по 2 цифры; все группы снабжены префиксом "0x" или "0X" и разделены запятыми. Весь GUID, так же как и подмножество, заключается в фигурные скобки: {0xdddddddd, 0xdddd, 0xdddd,{0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd}}  Все фигурные скобки, запятые и префиксы "0x" необходимы. Все внутренние пробелы игнорируются. Все нули в начале группы игнорируются. Цифры, указанные в группе, определяют наибольшее количество значащих цифр в данной группе. Можно задавать цифры от 1 до количества, указанного для группы. Предполагается, что задаваемые цифры являются младшими цифрами группы.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="g" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="g" /> недопустим.</exception>
      <exception cref="T:System.OverflowException">Формат параметра <paramref name="g" /> недопустим.</exception>
    </member>
    <member name="M:System.Guid.CompareTo(System.Guid)">
      <summary>Сравнивает этот экземпляр с заданным объектом типа <see cref="T:System.Guid" /> и возвращает значение, указывающее, как соотносятся этих объектов.</summary>
      <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />. 
Возвращаемое значение  	Описание  	
Отрицательное целое число  	Данный экземпляр меньше <paramref name="value" />.  	
Zero  	Этот экземпляр и параметр <paramref name="value" /> равны.  	
Положительное целое число  	Этот экземпляр больше параметра <paramref name="value" />.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Guid.Empty">
      <summary>Доступный только для чтения экземпляр структуры <see cref="T:System.Guid" />, значение которой состоит только из нулей.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.Equals(System.Guid)">
      <summary>Возвращает значение, позволяющее определить, представляют ли этот экземпляр и заданный объект <see cref="T:System.Guid" /> одно и то же значение.</summary>
      <returns>true, если значение параметра <paramref name="g" /> равно данному экземпляру; в противном случае — false.</returns>
      <param name="g">Объект, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, равен ли этот экземпляр указанному объекту.</summary>
      <returns>true, если параметр <paramref name="o" /> имеет тип <see cref="T:System.Guid" /> и содержит то же значение, что и данный экземпляр; в противном случае — false.</returns>
      <param name="o">Объект, сравниваемый с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код данного экземпляра.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.NewGuid">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Guid" />.</summary>
      <returns>Новый объект GUID.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.op_Equality(System.Guid,System.Guid)">
      <summary>Указывает, равны ли значения двух указанных объектов <see cref="T:System.Guid" />.</summary>
      <returns>Значение true, если значения параметров <paramref name="a" /> и <paramref name="b" /> равны; в противном случае — значение false.</returns>
      <param name="a">Первый сравниваемый объект.</param>
      <param name="b">Второй сравниваемый объект.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Guid.op_Inequality(System.Guid,System.Guid)">
      <summary>Указывает, верно ли, что значения двух указанных объектов <see cref="T:System.Guid" /> не равны.</summary>
      <returns>Значение true, если <paramref name="a" /> и <paramref name="b" /> не равны; в противном случае — значение false.</returns>
      <param name="a">Первый сравниваемый объект.</param>
      <param name="b">Второй сравниваемый объект.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Guid.Parse(System.String)">
      <summary>Преобразовывает строковое представление объекта GUID в эквивалентную структуру <see cref="T:System.Guid" />.</summary>
      <returns>Структура, содержащая анализируемое значение.</returns>
      <param name="input">Время в формате GUID, которое требуется преобразовать.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="input" /> имеет нераспознаваемый формат.</exception>
    </member>
    <member name="M:System.Guid.ParseExact(System.String,System.String)">
      <summary>Преобразует строковое представление GUID в эквивалентную структуру <see cref="T:System.Guid" />, при условии, что строка имеет указанный формат.</summary>
      <returns>Структура, содержащая анализируемое значение.</returns>
      <param name="input">Время в формате GUID, которое требуется преобразовать.</param>
      <param name="format">Один из следующих описателей, указывающих точный формат, используемый при интерпретации параметра <paramref name="input" />: "N", "D", "B", "P" или "X".</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="input" /> или <paramref name="format" /> — null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="input" /> имеет нераспознаваемый формат.</exception>
    </member>
    <member name="M:System.Guid.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает этот экземпляр с заданным объектом и возвращает значение, указывающее, как соотносятся значения этих объектов.</summary>
      <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />. 
Возвращаемое значение  	Описание  	
Отрицательное целое число  	Данный экземпляр меньше <paramref name="value" />.  	
Zero  	Этот экземпляр и параметр <paramref name="value" /> равны.  	
Положительное целое число  	Этот экземпляр больше параметра <paramref name="value" /> или параметр <paramref name="value" /> равен значению null.</returns>
      <param name="value">Объект для сравнения или значение null.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="value" /> не относится к типу <see cref="T:System.Guid" />.</exception>
    </member>
    <member name="M:System.Guid.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Возвращает строковое представление значения этого экземпляра в соответствии с заданным спецификатором формата.</summary>
      <returns>Значение данного объекта <see cref="T:System.Guid" />, представленное в виде последовательности шестнадцатеричных цифр в нижнем регистре в указанном формате.</returns>
      <param name="format">Единственный спецификатор формата, указывающий, как следует отформатировать значение объекта <see cref="T:System.Guid" />. Параметр <paramref name="format" /> может принимать значения "N", "D", "B", "P" и "X". Если параметр <paramref name="format" /> имеет значение null или равен пустой строке (""), используется значение "D".</param>
      <param name="provider">(Зарезервирован.) Объект, предоставляющий сведения о форматировании, связанные с определенным языком и региональными параметрами.</param>
      <exception cref="T:System.FormatException">Значение параметра <paramref name="format" /> не равно null, не является пустой строкой ("") или одним из следующих единичных описателей формата: "N", "D", "B", "P" или "X".</exception>
    </member>
    <member name="M:System.Guid.ToByteArray">
      <summary>Возвращает массив байтов из 16 элементов, содержащий значение данного экземпляра.</summary>
      <returns>Массив байтов из 16 элементов.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Guid.ToString">
      <summary>Возвращает строковое представление значения этого экземпляра в формате реестра.</summary>
      <returns>Значение этого <see cref="T:System.Guid" />, отформатированное с помощью описателя формата "D" следующим образом:  xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  где значение GUID представлено в виде последовательности шестнадцатеричных цифр в нижнем регистре, сгруппированных по 8, 4, 4, 4 и 12 цифр и разделенных дефисами. В данном случае возвращаемое значение таково: "382c74c3-721d-4f34-80e5-57657b6cbc27". Для преобразования шестнадцатеричных цифр из строчных f в прописные буквы вызовите метод <see cref="M:System.String.ToUpper" /> в возвращаемую строку.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.ToString(System.String)">
      <summary>Возвращает строковое представление значения этого экземпляра <see cref="T:System.Guid" /> в соответствии с заданным описателем формата.</summary>
      <returns>Значение данного объекта <see cref="T:System.Guid" />, представленное в виде последовательности шестнадцатеричных цифр в нижнем регистре в указанном формате.</returns>
      <param name="format">Единственный описатель формата, указывающий, как следует отформатировать данный <see cref="T:System.Guid" />. Параметр <paramref name="format" /> может принимать значения "N", "D", "B", "P" и "X". Если параметр <paramref name="format" /> имеет значение null или равен пустой строке (""), используется значение "D".</param>
      <exception cref="T:System.FormatException">Значением параметра <paramref name="format" /> не является null, пустая строка (""), "N", "D", "B", "P" или "X".</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Guid.TryParse(System.String,System.Guid@)">
      <summary>Преобразовывает строковое представление объекта GUID в эквивалентную структуру <see cref="T:System.Guid" />.</summary>
      <returns>Значение true, если синтаксический анализ выполнен успешно; в противном случае — значение false.</returns>
      <param name="input">Время в формате GUID, которое требуется преобразовать.</param>
      <param name="result">Структура, которая будет содержать значение после синтаксического анализа. Если метод возвращает значение true, то свойство <paramref name="result" /> содержит допустимое <see cref="T:System.Guid" />. Если метод возвращает false, <paramref name="result" /> равен <see cref="F:System.Guid.Empty" />.</param>
    </member>
    <member name="M:System.Guid.TryParseExact(System.String,System.String,System.Guid@)">
      <summary>Преобразует строковое представление GUID в эквивалентную структуру <see cref="T:System.Guid" />, при условии, что строка имеет указанный формат.</summary>
      <returns>Значение true, если синтаксический анализ выполнен успешно; в противном случае — значение false.</returns>
      <param name="input">Время в формате GUID, которое требуется преобразовать.</param>
      <param name="format">Один из следующих описателей, указывающих точный формат, используемый при интерпретации параметра <paramref name="input" />: "N", "D", "B", "P" или "X".</param>
      <param name="result">Структура, которая будет содержать значение после синтаксического анализа. Если метод возвращает значение true, то свойство <paramref name="result" /> содержит допустимое <see cref="T:System.Guid" />. Если метод возвращает false, <paramref name="result" /> равен <see cref="F:System.Guid.Empty" />.</param>
    </member>
    <member name="T:System.IAsyncResult">
      <summary>Представляет состояние асинхронной операции.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.AsyncState">
      <summary>Возвращает определенный пользователем объект, который определяет или содержит в себе сведения об асинхронной операции.</summary>
      <returns>Определенный пользователем объект, который определяет или содержит в себе сведения об асинхронной операции.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.AsyncWaitHandle">
      <summary>Возвращает дескриптор <see cref="T:System.Threading.WaitHandle" />, используемый для ожидания завершения асинхронной операции.</summary>
      <returns>Объект <see cref="T:System.Threading.WaitHandle" />, используемый для ожидания завершения асинхронной операции.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.CompletedSynchronously">
      <summary>Возвращает значение, показывающее, синхронно ли закончилась асинхронная операция.</summary>
      <returns>Значение true, если асинхронная операция завершилась синхронно, в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.IAsyncResult.IsCompleted">
      <summary>Возвращает значение, показывающее, выполнена ли асинхронная операция.</summary>
      <returns>Значение true, если операция завершена; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IComparable">
      <summary>Определяет обобщенный метод сравнения для типа, который реализуется типом или классом значения, чтобы упорядочить или сортировать его экземпляры.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IComparable.CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Значение, указывающее, каков относительный порядок сравниваемых объектов. Возвращаемые значения представляют следующие результаты сравнения. 
Значение  	Значение  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="obj" /> в порядке сортировки.  	
Ноль  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и параметр <paramref name="obj" />.  	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="obj" /> в порядке сортировки.</returns>
      <param name="obj">Объект для сравнения с данным экземпляром.</param>
      <exception cref="T:System.ArgumentException">Тип значения параметра <paramref name="obj" /> отличается от типа данного экземпляра.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IComparable`1">
      <summary>Определяет обобщенный метод сравнения, тип значения или класс которого используется для создания метода сравнения упорядоченных экземпляров.</summary>
      <typeparam name="T">Тип объектов для сравнения.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IComparable`1.CompareTo(`0)">
      <summary>Сравнивает текущий объект с другим объектом того же типа.</summary>
      <returns>Значение, указывающее, каков относительный порядок сравниваемых объектов. Расшифровка возвращенных значений приведена ниже. 
Значение  	Значение  	
Меньше нуля  	Значение этого объекта меньше значения параметра <paramref name="other" />. 	
Ноль  	Значение этого объекта равно значению параметра <paramref name="other" />.  	
Больше нуля.  	Значение этого объекта больше значения параметра <paramref name="other" />.</returns>
      <param name="other">Объект, который требуется сравнить с данным объектом.</param>
    </member>
    <member name="T:System.ICustomFormatter">
      <summary>Определяет метод, поддерживающий нестандартное форматирование значения объекта.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">
      <summary>Преобразует значение указанного объекта в эквивалентное ему строковое представление, используя указанный формат и сведений об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <returns>Строковое представление значения <paramref name="arg" />, отформатированное с использованием параметров <paramref name="format" /> и <paramref name="formatProvider" />.</returns>
      <param name="format">Строка формата, содержащая спецификации форматирования.</param>
      <param name="arg">Объект для форматирования.</param>
      <param name="formatProvider">Объект, который предоставляет связанную с форматированием информацию о текущем экземпляре.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IDisposable">
      <summary>Определяет методы высвобождения распределенных ресурсов.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IDisposable.Dispose">
      <summary>Выполняет определяемые приложением задачи, связанные с высвобождением или сбросом неуправляемых ресурсов.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IEquatable`1">
      <summary>Определяет обобщенный метод сравнения, тип значения или класс которого используется для определения равенства экземпляров.</summary>
      <typeparam name="T">Тип объектов для сравнения.</typeparam>
    </member>
    <member name="M:System.IEquatable`1.Equals(`0)">
      <summary>Указывает, равен ли текущий объект другому объекту того же типа.</summary>
      <returns>true, если текущий объект равен параметру <paramref name="other" />, в противном случае — false.</returns>
      <param name="other">Объект, который требуется сравнить с данным объектом.</param>
    </member>
    <member name="T:System.IFormatProvider">
      <summary>Предоставляет механизм извлечения объекта для управления форматированием.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IFormatProvider.GetFormat(System.Type)">
      <summary>Возвращает объекты, предоставляющие службы форматирования для заданного типа.</summary>
      <returns>Экземпляр объекта, заданного в параметре <paramref name="formatType" />, если реализация <see cref="T:System.IFormatProvider" /> может предоставить объект такого типа; в противном случае — null.</returns>
      <param name="formatType">Объект, определяющий тип возвращаемого объекта форматирования.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.IFormattable">
      <summary>Обеспечивает функциональные возможности форматирования значения объекта в строковое представление.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
      <summary>Форматирует значение текущего экземпляра с использованием заданного формата.</summary>
      <returns>Значение текущего экземпляра в указанном формате.</returns>
      <param name="format">Используемый формат. -или-  Пустая ссылка (Nothing в Visual Basic) для использования формата по умолчанию, определенного для типа реализации<see cref="T:System.IFormattable" />.</param>
      <param name="formatProvider">Поставщик, используемый для форматирования значения. -или-  Пустая ссылка (Nothing в Visual Basic) для получения сведений о формате чисел из текущего установленного в операционной системе языкового стандарта.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.IndexOutOfRangeException">
      <summary>Исключение, которое выбрасывается при попытке обращения к элементу массива с индексом, который находится вне границ массива. Этот класс не наследуется.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IndexOutOfRangeException" />.</summary>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.IndexOutOfRangeException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.IndexOutOfRangeException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IndexOutOfRangeException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="innerException" /> не является указателем null (Nothing в Visual Basic), то текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Int16">
      <summary>Представляет 16-разрядное целое число со знаком.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.CompareTo(System.Int16)">
      <summary>Сравнивает данный экземпляр с указанным 16-битовым знаковым целым числом и возвращает целое число, которое показывает, является ли значение данного экземпляра меньше, больше или равным значению заданного 16-битового знакового целого числа.</summary>
      <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />. 
Возвращаемое значение  	Описание  	
Меньше нуля  	Данный экземпляр меньше <paramref name="value" />.  	
Zero  	Этот экземпляр и параметр <paramref name="value" /> равны.  	
Больше нуля.  	Этот экземпляр больше параметра <paramref name="value" />.</returns>
      <param name="value">Целое число для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.Equals(System.Int16)">
      <summary>Возвращает значение, указывающее, равен ли данный экземпляр заданному значению типа <see cref="T:System.Int16" />.</summary>
      <returns>true, если значение параметра <paramref name="obj" /> совпадает со значением данного экземпляра; в противном случае — false.</returns>
      <param name="obj">Значение типа <see cref="T:System.Int16" /> для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>Значение true, если параметр <paramref name="obj" /> является экземпляром <see cref="T:System.Int16" /> и равен значению этого экземпляра; в противном случае — значение false.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int16.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int16.MaxValue">
      <summary>Представляет наибольшее возможное значение типа <see cref="T:System.Int16" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int16.MinValue">
      <summary>Представляет минимальное допустимое значение типа <see cref="T:System.Int16" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String)">
      <summary>Преобразовывает строковое представление числа в эквивалентное ему 16-битовое знаковое целое число.</summary>
      <returns>16-разрядное целое число со знаком, эквивалентное числу, содержащемуся в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int16.MinValue" /> или больше значения <see cref="F:System.Int16.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Преобразует строковое представление числа в указанном формате в эквивалентное ему 16-разрядное целое число со знаком.</summary>
      <returns>16-разрядное целое число со знаком, эквивалентное числу, заданному в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="style">Побитовое сочетание значений перечисления, обозначающих элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> не соответствует формату, заданному в параметре <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int16.MinValue" /> или больше значения <see cref="F:System.Int16.MaxValue" />.  -или- Параметр <paramref name="s" /> включает дробные разряды, не равные нулю.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в формате, соответствующем языку и региональным параметрам, в эквивалентное ему 16-разрядное целое число со знаком.</summary>
      <returns>16-разрядное целое число со знаком, эквивалентное числу, заданному в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="style">Побитовая комбинация значений перечисления, обозначающая элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Интерфейс <see cref="T:System.IFormatProvider" /> предоставляет сведения о форматировании параметра <paramref name="s" /> для соответствующего языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> не соответствует формату, заданному в параметре <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int16.MinValue" /> или больше значения <see cref="F:System.Int16.MaxValue" />.  -или- Параметр <paramref name="s" /> включает дробные разряды, не равные нулю.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.Parse(System.String,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в эквивалентное ему 16-разрядное знаковое целое число в указанном формате, соответствующем языку и региональным параметрам.</summary>
      <returns>16-разрядное целое число со знаком, эквивалентное числу, заданному в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Интерфейс <see cref="T:System.IFormatProvider" /> предоставляет сведения о форматировании параметра <paramref name="s" /> для соответствующего языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int16.MinValue" /> или больше значения <see cref="F:System.Int16.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Значение  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки. 	
Zero  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и объект <paramref name="value" />. 	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="value" /> в порядке сортировки. -или-  Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не является объектом типа <see cref="T:System.Int16" />.</exception>
    </member>
    <member name="M:System.Int16.ToString">
      <summary>Преобразовывает числовое значение данного экземпляра в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения этого экземпляра, содержащее знак минус, если значение отрицательное, и последовательность цифр в диапазоне от 0 до 9 без ведущих нулей.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="provider" />.</returns>
      <param name="provider">Объект <see cref="T:System.IFormatProvider" />, предоставляющий сведения о форматировании, связанные с определенным языком и региональными параметрами.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.String)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное строковое представление с использованием указанного формата.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</returns>
      <param name="format">Строка числового формата.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.ToString(System.String,System.IFormatProvider)">
      <summary>Преобразовывает числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
      <param name="format">Строка числового формата.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)">
      <summary>Преобразует строковое представление числа в формате, соответствующем языку и региональным параметрам, в эквивалентное ему 16-разрядное целое число со знаком. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, содержащая преобразуемое число. Строка интерпретируется с использованием стиля, указанного в <paramref name="style" />.</param>
      <param name="style">Побитовая комбинация значений перечисления, обозначающая элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <param name="result">При возвращении этим методом содержит 16-разрядное целочисленное значение со знаком, эквивалентное числу, содержащемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось неудачей. Преобразование завершается сбоем, если параметр <paramref name="s" /> равен null или <see cref="F:System.String.Empty" />, не находится в формате, совместимом с <paramref name="style" /> или представляет собой число меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int16.TryParse(System.String,System.Int16@)">
      <summary>Преобразовывает строковое представление числа в эквивалентное ему 16-битовое знаковое целое число. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="result">При возвращении этим методом содержит 16-разрядное целочисленное значение со знаком, эквивалентное числу, содержащемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось неудачей. Преобразование завершается сбоем, если параметр <paramref name="s" /> равен null или <see cref="F:System.String.Empty" />, не находится в правильном формате или представляет число меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />. Этот параметр передается без инициализации.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Int32">
      <summary>Представляет 32-разрядное целое число со знаком.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.CompareTo(System.Int32)">
      <summary>Сравнивает данный экземпляр с заданным 32-битовым целым числом со знаком и возвращает значение, указывающее, как соотносятся их значения.</summary>
      <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />. 
Возвращаемое значение  	Описание  	
Меньше нуля  	Данный экземпляр меньше <paramref name="value" />.  	
Zero  	Этот экземпляр и параметр <paramref name="value" /> равны.  	
Больше нуля.  	Этот экземпляр больше параметра <paramref name="value" />.</returns>
      <param name="value">Целое число для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.Equals(System.Int32)">
      <summary>Возвращает значение, указывающее, равен ли данный экземпляр заданному значению типа <see cref="T:System.Int32" />.</summary>
      <returns>true, если значение параметра <paramref name="obj" /> совпадает со значением данного экземпляра; в противном случае — false.</returns>
      <param name="obj">Значение типа <see cref="T:System.Int32" /> для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>true, если параметр <paramref name="obj" /> является экземпляром типа <see cref="T:System.Int32" /> и равен значению данного экземпляра; в противном случае — false.</returns>
      <param name="obj">Объект для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int32.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int32.MaxValue">
      <summary>Представляет наибольшее возможное значение типа <see cref="T:System.Int32" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int32.MinValue">
      <summary>Представляет минимальное допустимое значение типа <see cref="T:System.Int32" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String)">
      <summary>Преобразовывает строковое представление числа в эквивалентное ему 32-битовое знаковое целое число.</summary>
      <returns>32-разрядное целое число со знаком, эквивалентное числу, содержащемуся в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int32.MinValue" /> или больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Преобразует строковое представление числа в указанном формате в эквивалентное ему 32-битовое целое число со знаком.</summary>
      <returns>32-битовое знаковое целое число, эквивалентное числу, заданному в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="style">Побитовое сочетание значений перечисления, обозначающих элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> не соответствует формату, заданному в параметре <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int32.MinValue" /> или больше значения <see cref="F:System.Int32.MaxValue" />.  -или- Параметр <paramref name="s" /> включает дробные разряды, не равные нулю.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в формате, соответствующем языку и региональным параметрам, в эквивалентное ему 32-битовое целое число со знаком.</summary>
      <returns>32-битовое знаковое целое число, эквивалентное числу, заданному в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="style">Побитовая комбинация значений перечисления, обозначающая элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения о формате параметра <paramref name="s" /> для определенного языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> не соответствует формату, заданному в параметре <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int32.MinValue" /> или больше значения <see cref="F:System.Int32.MaxValue" />.  -или- Параметр <paramref name="s" /> включает дробные разряды, не равные нулю.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.Parse(System.String,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в эквивалентное ему 32-битовое знаковое целое число в указанном формате, соответствующем языку и региональным параметрам.</summary>
      <returns>32-битовое знаковое целое число, эквивалентное числу, заданному в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> неправильный.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int32.MinValue" /> или больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Значение  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки. 	
Zero  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и объект <paramref name="value" />. 	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="value" /> в порядке сортировки. -или-  Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="value" /> не является объектом <see cref="T:System.Int32" />.</exception>
    </member>
    <member name="M:System.Int32.ToString">
      <summary>Преобразовывает числовое значение данного экземпляра в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения данного экземпляра, состоящее из знака минус, если число отрицательное, и последовательности цифр в диапазоне от 0 до 9 с ненулевой первой цифрой.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="provider" />.</returns>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.String)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное строковое представление с использованием указанного формата.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</returns>
      <param name="format">Стандартная или пользовательская строка числового формата.</param>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> имеет недопустимое значение или не поддерживается.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.ToString(System.String,System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
      <param name="format">Стандартная или пользовательская строка числового формата.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> имеет недопустимое значение или не поддерживается.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)">
      <summary>Преобразует строковое представление числа в формате, соответствующем языку и региональным параметрам, в эквивалентное ему 32-битовое целое число со знаком. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, содержащая преобразуемое число. Строка интерпретируется с использованием стиля, указанного в <paramref name="style" />.</param>
      <param name="style">Побитовая комбинация значений перечисления, обозначающая элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <param name="result">При возвращении этим методом содержит 32-разрядное целочисленное значение со знаком, эквивалентное числу, содержащемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось сбоем. Преобразование завершается сбоем, если параметр <paramref name="s" /> равен null или <see cref="F:System.String.Empty" />, не находится в формате, совместимом с <paramref name="style" /> или представляет собой число меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int32.TryParse(System.String,System.Int32@)">
      <summary>Преобразовывает строковое представление числа в эквивалентное ему 32-битовое знаковое целое число. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="result">При возвращении этим методом содержит 32-разрядное целочисленное значение со знаком, эквивалентное числу, содержащемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось сбоем. Преобразование завершается сбоем, если параметр <paramref name="s" /> равен null или <see cref="F:System.String.Empty" />, не находится в правильном формате или представляет число меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />. Этот параметр передается без инициализации.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Int64">
      <summary>Представляет 64-разрядное целое число со знаком.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.CompareTo(System.Int64)">
      <summary>Сравнивает данный экземпляр с заданным 64-битовым целым числом со знаком и возвращает значение, указывающее, как соотносятся их значения.</summary>
      <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />. 
Возвращаемое значение  	Описание  	
Меньше нуля  	Данный экземпляр меньше <paramref name="value" />.  	
Zero  	Этот экземпляр и параметр <paramref name="value" /> равны.  	
Больше нуля.  	Этот экземпляр больше параметра <paramref name="value" />.</returns>
      <param name="value">Целое число для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.Equals(System.Int64)">
      <summary>Возвращает значение, указывающее, равен ли данный экземпляр заданному значению типа <see cref="T:System.Int64" />.</summary>
      <returns>true, если значение параметра <paramref name="obj" /> совпадает со значением данного экземпляра; в противном случае — false.</returns>
      <param name="obj">Значение типа <see cref="T:System.Int64" /> для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>Значение true, если параметр <paramref name="obj" /> является экземпляром типа <see cref="T:System.Int64" /> и равен значению данного экземпляра; в противном случае — значение false.</returns>
      <param name="obj">Объект для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Int64.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Int64.MaxValue">
      <summary>Представляет наибольшее возможное значение типа Int64. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Int64.MinValue">
      <summary>Представляет наименьшее возможное значение типа Int64. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String)">
      <summary>Преобразует строковое представление числа в эквивалентное ему 64-битовое знаковое целое число.</summary>
      <returns>64-разрядное целое число со знаком, эквивалентное числу, содержащемуся в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int64.MinValue" /> или больше значения <see cref="F:System.Int64.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Преобразует строковое представление числа в указанном формате в эквивалентное ему 64-битовое целое число со знаком.</summary>
      <returns>64-разрядное целое число со знаком, эквивалентное числу, заданному в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="style">Побитовое сочетание значений <see cref="T:System.Globalization.NumberStyles" />, задающее разрешенный формат параметра <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> не соответствует формату, заданному в параметре <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int64.MinValue" /> или больше значения <see cref="F:System.Int64.MaxValue" />. -или- Параметр <paramref name="style" /> поддерживает дробные разряды, но параметр <paramref name="s" /> включает ненулевые дробные разряды.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в формате, соответствующем языку и региональным параметрам, в эквивалентное ему 64-битовое знаковое целое число.</summary>
      <returns>64-разрядное целое число со знаком, эквивалентное числу, заданному в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="style">Побитовая комбинация значений перечисления, обозначающая элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Интерфейс <see cref="T:System.IFormatProvider" /> предоставляет сведения о форматировании параметра <paramref name="s" /> для соответствующего языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> не соответствует формату, заданному в параметре <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int64.MinValue" /> или больше значения <see cref="F:System.Int64.MaxValue" />.  -или- Параметр <paramref name="style" /> поддерживает дробные разряды, но параметр <paramref name="s" /> включает ненулевые дробные разряды.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.Parse(System.String,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в эквивалентное ему 64-битовое знаковое целое число в указанном формате, соответствующем языку и региональным параметрам.</summary>
      <returns>64-разрядное целое число со знаком, эквивалентное числу, заданному в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Int64.MinValue" /> или больше значения <see cref="F:System.Int64.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Значение  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки. 	
Zero  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и объект <paramref name="value" />. 	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="value" /> в порядке сортировки. -или-  Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="value" /> не является объектом <see cref="T:System.Int64" />.</exception>
    </member>
    <member name="M:System.Int64.ToString">
      <summary>Преобразовывает числовое значение данного экземпляра в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения этого экземпляра, содержащее знак минус, если значение отрицательное, и последовательность цифр в диапазоне от 0 до 9 без ведущих нулей.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="provider" />.</returns>
      <param name="provider">Объект <see cref="T:System.IFormatProvider" />, предоставляющий сведения о форматировании, связанные с определенным языком и региональными параметрами.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.String)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное строковое представление с использованием указанного формата.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</returns>
      <param name="format">Строка числового формата.</param>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> имеет недопустимое значение или не поддерживается.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.ToString(System.String,System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
      <param name="format">Строка числового формата.</param>
      <param name="provider">Объект, который представляет связанную с языком и региональными параметрами информацию о форматировании этого экземпляра.</param>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> имеет недопустимое значение или не поддерживается.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)">
      <summary>Преобразует строковое представление числа в формате, соответствующем языку и региональным параметрам, в эквивалентное ему 64-битовое знаковое целое число. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, содержащая преобразуемое число. Строка интерпретируется с использованием стиля, указанного в <paramref name="style" />.</param>
      <param name="style">Побитовая комбинация значений перечисления, обозначающая элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <param name="result">При возвращении этим методом содержит 64-разрядное целочисленное значение со знаком, эквивалентное числу, содержащемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось сбоем. Преобразование завершается сбоем, если параметр <paramref name="s" /> равен null или <see cref="F:System.String.Empty" />, не находится в формате, совместимом с <paramref name="style" /> или представляет собой число меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Int64.TryParse(System.String,System.Int64@)">
      <summary>Преобразует строковое представление числа в эквивалентное ему 64-битовое знаковое целое число. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="result">При возвращении этим методом содержит 64-разрядное целочисленное значение со знаком, эквивалентное числу, содержащемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось сбоем. Преобразование завершается сбоем, если параметр <paramref name="s" /> равен null или <see cref="F:System.String.Empty" />, не находится в правильном формате или представляет число меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />. Этот параметр передается без инициализации.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.IntPtr">
      <summary>Определяемый платформой тип, который используется для представления указателя или дескриптора.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр объекта <see cref="T:System.IntPtr" />, используя заданный 32-разрядный указатель или дескриптор.</summary>
      <param name="value">Указатель или дескриптор состоит из 32-разрядного целого числа со знаком.</param>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Int64)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.IntPtr" /> с использованием заданного 64-разрядного указателя.</summary>
      <param name="value">Указатель или дескриптор состоит из 64-разрядного целого числа со знаком.</param>
      <exception cref="T:System.OverflowException">На 32-разрядной платформе значение <paramref name="value" /> слишком велико, или слишком мало для представления структуры <see cref="T:System.IntPtr" />.</exception>
    </member>
    <member name="M:System.IntPtr.#ctor(System.Void*)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.IntPtr" /> с использованием заданного указателя на незаданный тип.</summary>
      <param name="value">Указатель незаданного типа.</param>
    </member>
    <member name="M:System.IntPtr.Add(System.IntPtr,System.Int32)">
      <summary>Добавляет смещение к значению указателя.</summary>
      <returns>Новый указатель, получающийся при добавлении смещения <paramref name="offset" /> к указателю <paramref name="pointer" />.</returns>
      <param name="pointer">Указатель, к которому требуется добавить смещение.</param>
      <param name="offset">Добавляемое смещение.</param>
    </member>
    <member name="M:System.IntPtr.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>Значение true, если параметр <paramref name="obj" /> является экземпляром типа <see cref="T:System.IntPtr" /> и равен значению данного экземпляра; в противном случае — значение false.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром или null.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IntPtr.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Addition(System.IntPtr,System.Int32)">
      <summary>Добавляет смещение к значению указателя.</summary>
      <returns>Новый указатель, получающийся при добавлении смещения <paramref name="offset" /> к указателю <paramref name="pointer" />.</returns>
      <param name="pointer">Указатель, к которому требуется добавить смещение.</param>
      <param name="offset">Добавляемое смещение.</param>
    </member>
    <member name="M:System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)">
      <summary>Определяет, действительно ли равны два указанных экземпляра типа <see cref="T:System.IntPtr" />.</summary>
      <returns>Если значение параметра <paramref name="value1" /> равно <paramref name="value2" />, значение true, если нет, значение false.</returns>
      <param name="value1">Первый из сравниваемых указателей или дескрипторов.</param>
      <param name="value2">Второй из сравниваемых указателей или дескрипторов.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Int32)~System.IntPtr">
      <summary>Преобразует 32-разрядное целочисленное значение со знаком в структуру <see cref="T:System.IntPtr" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.IntPtr" />, инициализированный значением параметра <paramref name="value" />.</returns>
      <param name="value">32-разрядное знаковое целое число.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Int64)~System.IntPtr">
      <summary>Преобразует 64-разрядное целочисленное значение со знаком в структуру <see cref="T:System.IntPtr" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.IntPtr" />, инициализированный значением параметра <paramref name="value" />.</returns>
      <param name="value">64-разрядное целое число со знаком.</param>
      <exception cref="T:System.OverflowException">На 32-разрядной платформе значение параметра <paramref name="value" /> слишком велико для представления параметра <see cref="T:System.IntPtr" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int64">
      <summary>Преобразует значение заданной структуры <see cref="T:System.IntPtr" /> в формат 64-разрядного целого числа со знаком.</summary>
      <returns>Содержимое <paramref name="value" />.</returns>
      <param name="value">Указатель или дескриптор, подлежащий преобразованию.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Void*">
      <summary>Преобразует значение заданной структуры <see cref="T:System.IntPtr" /> в указатель на неопределенный тип.</summary>
      <returns>Содержимое <paramref name="value" />.</returns>
      <param name="value">Указатель или дескриптор, подлежащий преобразованию.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int32">
      <summary>Преобразует значение заданной структуры <see cref="T:System.IntPtr" /> в формат 32-разрядного целого числа со знаком.</summary>
      <returns>Содержимое <paramref name="value" />.</returns>
      <param name="value">Указатель или дескриптор, подлежащий преобразованию.</param>
      <exception cref="T:System.OverflowException">На 64-разрядной платформе значение <paramref name="value" /> слишком велико для представления в качестве 32-разрядного целого числа со знаком.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr">
      <summary>Преобразует заданный указатель в неопределенный тип структуры <see cref="T:System.IntPtr" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.IntPtr" />, инициализированный значением параметра <paramref name="value" />.</returns>
      <param name="value">Указатель незаданного типа.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)">
      <summary>Определяет, действительно ли не равны два указанных экземпляра типа <see cref="T:System.IntPtr" /> неэквивалентными.</summary>
      <returns>Значение true, если значения параметров <paramref name="value1" /> и <paramref name="value2" /> не равны; в противном случае — значение false.</returns>
      <param name="value1">Первый из сравниваемых указателей или дескрипторов.</param>
      <param name="value2">Второй из сравниваемых указателей или дескрипторов.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.IntPtr.op_Subtraction(System.IntPtr,System.Int32)">
      <summary>Вычитает смещение из значения указателя.</summary>
      <returns>Новый указатель, получающийся при вычитании смещения <paramref name="offset" /> из указателя <paramref name="pointer" />.</returns>
      <param name="pointer">Указатель, из которого требуется вычесть смещение.</param>
      <param name="offset">Вычитаемое смещение.</param>
    </member>
    <member name="P:System.IntPtr.Size">
      <summary>Получает размер этого экземпляра.</summary>
      <returns>Размер указателя или дескриптора в данном процессе в байтах. Значение этого свойства равно 4 в 32-разрядном процессе, и 8 в 64-разрядном процессе. Можно указать тип процесса, задав параметр /platform при компилировании кода с помощью компиляторов C# и Visual Basic.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.Subtract(System.IntPtr,System.Int32)">
      <summary>Вычитает смещение из значения указателя.</summary>
      <returns>Новый указатель, получающийся при вычитании смещения <paramref name="offset" /> из указателя <paramref name="pointer" />.</returns>
      <param name="pointer">Указатель, из которого требуется вычесть смещение.</param>
      <param name="offset">Вычитаемое смещение.</param>
    </member>
    <member name="M:System.IntPtr.ToInt32">
      <summary>Преобразует значение этого экземпляра в формат 32-разрядного целого числа со знаком.</summary>
      <returns>32-и разрядное целое число со знаком равно значению данного экземпляра.</returns>
      <exception cref="T:System.OverflowException">На 64-разрядной платформе значение этого экземпляра слишком велико, или слишком мало для представления его в качестве 32-разрядного целого числа со знаком.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToInt64">
      <summary>Преобразует значение этого экземпляра в формат 64-разрядного целого числа со знаком.</summary>
      <returns>64-и разрядное целое число со знаком равно значению данного экземпляра.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToPointer">
      <summary>Преобразует значение этого экземпляра в указатель незаданного типа.</summary>
      <returns>Указатель на <see cref="T:System.Void" /> (указатель памяти содержащей данные неопределенного типа).</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToString">
      <summary>Преобразует числовое значение текущего объекта <see cref="T:System.IntPtr" /> в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения этого экземпляра.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.IntPtr.ToString(System.String)">
      <summary>Преобразует числовое значение текущего объекта <see cref="T:System.IntPtr" /> в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения текущего объекта <see cref="T:System.IntPtr" />.</returns>
      <param name="format">Спецификация формата, в которой определен порядок преобразования текущего объекта <see cref="T:System.IntPtr" />.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.IntPtr.Zero">
      <summary>Доступное только для чтения поле, которое предоставляет указатель или дескриптор, инициализированный с нулевым значением.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.InvalidCastException">
      <summary>Исключение, которое выбрасывается при недопустимом приведении или явном преобразовании типов.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.InvalidCastException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.InvalidCastException" />.</summary>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.InvalidCastException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.InvalidCastException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="innerException" /> не является указателем null (Nothing в Visual Basic), то текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.InvalidCastException" />, используя заданное сообщение и код ошибки.</summary>
      <param name="message">Сообщение, указывающее причину возникновения исключения.</param>
      <param name="errorCode">Код ошибки (HRESULT) — это значение, связанное с исключением.</param>
    </member>
    <member name="T:System.InvalidOperationException">
      <summary>Исключение, которое выдается при вызове метода, недопустимого для текущего состояния объекта.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.InvalidOperationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="M:System.InvalidOperationException.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.InvalidOperationException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.InvalidOperationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.InvalidOperationException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="innerException" /> не является указателем null (Nothing в Visual Basic), то текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.InvalidTimeZoneException">
      <summary>Исключение возникает при недопустимости сведений о часовом поясе.</summary>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.InvalidTimeZoneException" />, используя системное сообщение.</summary>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.InvalidTimeZoneException" /> указанной строкой сообщения.</summary>
      <param name="message">Строка, описывающая исключение.</param>
    </member>
    <member name="M:System.InvalidTimeZoneException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.InvalidTimeZoneException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Строка, описывающая исключение.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение.</param>
    </member>
    <member name="T:System.IObservable`1">
      <summary>Определяет поставщика принудительно отправляемых уведомлений.</summary>
      <typeparam name="T">Объект, предоставляющий сведения об уведомлениях.</typeparam>
    </member>
    <member name="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
      <summary>Уведомляет поставщика о том, что наблюдатель должен получать уведомления.</summary>
      <returns>Ссылка на интерфейс, которая позволяет наблюдателям прекратить получение уведомлений до того, как поставщик закончила отправлять их.</returns>
      <param name="observer">Объект, который должен получать уведомления.</param>
    </member>
    <member name="T:System.IObserver`1">
      <summary>Предоставляет механизм получения принудительно отправляемых уведомлений.</summary>
      <typeparam name="T">Объект, предоставляющий сведения об уведомлениях.</typeparam>
    </member>
    <member name="M:System.IObserver`1.OnCompleted">
      <summary>Уведомляет наблюдателя о том, что поставщик завершил передачу принудительно отправляемых уведомлений.</summary>
    </member>
    <member name="M:System.IObserver`1.OnError(System.Exception)">
      <summary>Уведомляет наблюдателя о том, что у поставщика возникли ошибки.</summary>
      <param name="error">Объект, предоставляющий дополнительные сведения об ошибке.</param>
    </member>
    <member name="M:System.IObserver`1.OnNext(`0)">
      <summary>Предоставляет наблюдателю новые данные.</summary>
      <param name="value">Текущие сведения об уведомлениях.</param>
    </member>
    <member name="T:System.IProgress`1">
      <summary>Определяет поставщика обновлений хода выполнения.</summary>
      <typeparam name="T">Тип значения обновления хода выполнения.</typeparam>
    </member>
    <member name="M:System.IProgress`1.Report(`0)">
      <summary>Сообщает об обновлении хода выполнения.</summary>
      <param name="value">Значение обновленного хода выполнения.</param>
    </member>
    <member name="T:System.Lazy`1">
      <summary>Обеспечивает поддержку неактивной инициализации.</summary>
      <typeparam name="T">тип объекта, который неактивно инициализируется.</typeparam>
    </member>
    <member name="M:System.Lazy`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`1" />. При неактивной инициализации используется конструктор целевого типа по умолчанию.</summary>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`1" />. При неактивной инициализации используются конструктор целевого типа по умолчанию и заданный режим инициализации.</summary>
      <param name="isThreadSafe">Значение true, если необходимо разрешить параллельное использование этого экземпляра несколькими потоками; значение false, если необходимо разрешить одновременное использование этого экземпляра только одним потоком.</param>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`1" />. При неактивной инициализации используется заданная функция инициализации.</summary>
      <param name="valueFactory">Делегат, вызываемый для получения неактивно инициализированного значения, когда оно требуется.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="valueFactory" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`1" />. При неактивной инициализации используются заданные функция и режим инициализации.</summary>
      <param name="valueFactory">Делегат, вызываемый для получения неактивно инициализированного значения, когда оно требуется.</param>
      <param name="isThreadSafe">Значение true, если необходимо разрешить параллельное использование этого экземпляра несколькими потоками; значение false, если необходимо разрешить одновременное использование этого экземпляра только одним потоком.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="valueFactory" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Threading.LazyThreadSafetyMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`1" />, который использует заданную функцию инициализации и потокобезопасный режим.</summary>
      <param name="valueFactory">Делегат, вызываемый для получения неактивно инициализированного значения, когда оно требуется.</param>
      <param name="mode">Одно из значений перечисления, задающее потокобезопасный режим.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="mode" /> содержит недопустимое значение.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="valueFactory" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Lazy`1.#ctor(System.Threading.LazyThreadSafetyMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`1" />, который использует конструктор <paramref name="T" /> по умолчанию и заданный потокобезопасный режим.</summary>
      <param name="mode">Одно из значений перечисления, задающее потокобезопасный режим.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="mode" /> содержит недопустимое значение.</exception>
    </member>
    <member name="P:System.Lazy`1.IsValueCreated">
      <summary>Получает значение, указывающее, было ли создано значение для данного экземпляра <see cref="T:System.Lazy`1" />.</summary>
      <returns>Значение true, если для данного экземпляра <see cref="T:System.Lazy`1" /> было создано значение; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Lazy`1.ToString">
      <summary>Создает и возвращает строковое представление свойства <see cref="P:System.Lazy`1.Value" /> данного экземпляра.</summary>
      <returns>Результат вызова метода <see cref="M:System.Object.ToString" /> для свойства <see cref="P:System.Lazy`1.Value" /> данного экземпляра, если это значение было создано (то есть если свойство <see cref="P:System.Lazy`1.IsValueCreated" /> возвращает значение true). В противном случае возвращается строка, указывающая, что значение не было создано.</returns>
      <exception cref="T:System.NullReferenceException">Значение свойства <see cref="P:System.Lazy`1.Value" /> — null.</exception>
    </member>
    <member name="P:System.Lazy`1.Value">
      <summary>Получает неактивно инициализированное значение текущего экземпляра <see cref="T:System.Lazy`1" />.</summary>
      <returns>Неактивно инициализированное значение текущего экземпляра <see cref="T:System.Lazy`1" />.</returns>
      <exception cref="T:System.MemberAccessException">Экземпляр <see cref="T:System.Lazy`1" /> инициализируется для использования конструктора по умолчанию, имеющего тип с отложенной инициализацией, а разрешения для доступа к конструктору отсутствуют.</exception>
      <exception cref="T:System.MissingMemberException">Экземпляр <see cref="T:System.Lazy`1" /> инициализируется для использования конструктора по умолчанию, имеющего тип с отложенной инициализацией, и данный тип не имеет открытого конструктора, не принимающего параметров.</exception>
      <exception cref="T:System.InvalidOperationException">Функция инициализации в данном экземпляре пытается получить доступ к <see cref="P:System.Lazy`1.Value" />.</exception>
    </member>
    <member name="T:System.Lazy`2">
      <summary>Предоставляет неактивную косвенную ссылку на объект и связанные с ним метаданные для использования на платформе Managed Extensibility Framework.</summary>
      <typeparam name="T">Тип объекта, на который указывает ссылка.</typeparam>
      <typeparam name="TMetadata">Тип метаданных.</typeparam>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`2" /> с заданными метаданными, который использует заданную функцию для получения объекта, на который существует ссылка.</summary>
      <param name="valueFactory">Функция, возвращающая объект, на который существует ссылка.</param>
      <param name="metadata">Метаданные, связанные с объектом, на который существует ссылка.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`2" /> с заданными метаданными и потокобезопасным значением, который использует заданную функцию для получения объекта, на который существует ссылка.</summary>
      <param name="valueFactory">Функция, возвращающая объект, на который существует ссылка.</param>
      <param name="metadata">Метаданные, связанные с объектом, на который существует ссылка.</param>
      <param name="isThreadSafe">Указывает, будет ли создаваемый объект <see cref="T:System.Lazy`2" /> потокобезопасным.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(System.Func{`0},`1,System.Threading.LazyThreadSafetyMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`2" /> с заданными метаданными и режимом синхронизации потоков, который использует заданную функцию для получения объекта, на который существует ссылка.</summary>
      <param name="valueFactory">Функция, возвращающая объект, на который существует ссылка.</param>
      <param name="metadata">Метаданные, связанные с объектом, на который существует ссылка.</param>
      <param name="mode">Режим синхронизации потоков</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`2" /> с заданными метаданными.</summary>
      <param name="metadata">Метаданные, связанные с объектом, на который существует ссылка.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`2" /> с заданными метаданными и потокобезопасным значением.</summary>
      <param name="metadata">Метаданные, связанные с объектом, на который существует ссылка.</param>
      <param name="isThreadSafe">Указывает, будет ли создаваемый объект <see cref="T:System.Lazy`2" /> потокобезопасным.</param>
    </member>
    <member name="M:System.Lazy`2.#ctor(`1,System.Threading.LazyThreadSafetyMode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Lazy`2" /> с заданными метаданными и режимом синхронизации потоков.</summary>
      <param name="metadata">Метаданные, связанные с объектом, на который существует ссылка.</param>
      <param name="mode">Режим синхронизации потоков.</param>
    </member>
    <member name="P:System.Lazy`2.Metadata">
      <summary>Получает метаданные, связанные с объектом, на который существует ссылка.</summary>
      <returns>Метаданные, связанные с объектом, на который существует ссылка.</returns>
    </member>
    <member name="T:System.MemberAccessException">
      <summary>Исключение возникает при неудачной попытке доступа к члену класса.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MemberAccessException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.MemberAccessException" />.</summary>
    </member>
    <member name="M:System.MemberAccessException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.MemberAccessException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.MemberAccessException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.MemberAccessException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="inner">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="inner" /> не является указателем null (Nothing в Visual Basic), то текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.MissingMemberException">
      <summary>Исключение, выбрасываемое при попытке динамического доступа к несуществующему члену класса.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MissingMemberException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.MissingMemberException" />.</summary>
    </member>
    <member name="M:System.MissingMemberException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.MissingMemberException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.MissingMemberException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.MissingMemberException" />, используя указанное сообщение об ошибке и ссылку на внутреннее исключение, которое было исходной причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="inner">Экземпляр <see cref="T:System.Exception" />, который является причиной текущего Exception. Если параметр <paramref name="inner" /> не является указателем null (Nothing в Visual Basic), текущее Exception вызывается в блоке catch, обрабатывающем <paramref name="inner" />.</param>
    </member>
    <member name="P:System.MissingMemberException.Message">
      <summary>Возвращает текстовую строку, содержащую сигнатуру отсутствующего члена, имя класса и имя члена.</summary>
      <returns>Строка сообщения об ошибке.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.MTAThreadAttribute">
      <summary>Указывает, что потоковая модель COM для приложения является многопотоковым подразделением (MTA).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.MTAThreadAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.MTAThreadAttribute" />.</summary>
    </member>
    <member name="T:System.MulticastDelegate">
      <summary>Представляет групповой делегат, то есть делегат, имеющий в своем списке вызовов более одного элемента.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.Equals(System.Object)">
      <summary>Определяет, равны ли этот групповой делегат и указанный объект.</summary>
      <returns>true, если <paramref name="obj" /> и данный экземпляр имеют одинаковые списки вызовов; в противном случае — false.</returns>
      <param name="obj">Объект, сравниваемый с данным экземпляром.</param>
      <exception cref="T:System.MemberAccessException">Не удается создать экземпляр абстрактного класса, или этот член был вызван при помощи механизма поздней привязки.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <exception cref="T:System.MemberAccessException">Не удается создать экземпляр абстрактного класса, или этот член был вызван при помощи механизма поздней привязки.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.GetInvocationList">
      <summary>Возвращает список вызовов данного группового делегата в порядке вызова.</summary>
      <returns>Массив делегатов, списки вызовов которых совпадают со списком вызовов данного экземпляра.</returns>
      <exception cref="T:System.MemberAccessException">Не удается создать экземпляр абстрактного класса, или этот член был вызван при помощи механизма поздней привязки.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.op_Equality(System.MulticastDelegate,System.MulticastDelegate)">
      <summary>Определяет, равны ли два объекта <see cref="T:System.MulticastDelegate" />.</summary>
      <returns>true, если <paramref name="d1" /> и <paramref name="d2" /> имеют одинаковые списки вызовов; в противном случае — false.</returns>
      <param name="d1">Левый операнд.</param>
      <param name="d2">Правый операнд.</param>
      <exception cref="T:System.MemberAccessException">Не удается создать экземпляр абстрактного класса, или этот член был вызван при помощи механизма поздней привязки.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.MulticastDelegate.op_Inequality(System.MulticastDelegate,System.MulticastDelegate)">
      <summary>Определяет, отличаются ли два объекта <see cref="T:System.MulticastDelegate" />.</summary>
      <returns>true, если списки вызовов <paramref name="d1" /> и <paramref name="d2" /> различаются; в противном случае — false.</returns>
      <param name="d1">Левый операнд.</param>
      <param name="d2">Правый операнд.</param>
      <exception cref="T:System.MemberAccessException">Не удается создать экземпляр абстрактного класса, или этот член был вызван при помощи механизма поздней привязки.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.NotImplementedException">
      <summary>Это исключение выбрасывается, когда запрошенный метод или операция не реализованы.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.NotImplementedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.NotImplementedException" />, используя свойства по умолчанию.</summary>
    </member>
    <member name="M:System.NotImplementedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.NotImplementedException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
    </member>
    <member name="M:System.NotImplementedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.NotImplementedException" /> заданным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="inner">Исключение, которое вызвало текущее исключение. Если значение параметра <paramref name="inner" /> не равно null, текущее исключение вызывается в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.NotSupportedException">
      <summary>Исключение, которое генерируется, если вызываемый метод не поддерживается, или если была осуществлена попытка чтения, поиска или записи в потоке, который не поддерживает функции вызова.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.NotSupportedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.NotSupportedException" />, задавая в качестве значения свойства нового экземпляра <see cref="P:System.Exception.Message" /> системное сообщение с описанием ошибки. В этом сообщении учитывается текущий язык и региональные параметры системы.</summary>
    </member>
    <member name="M:System.NotSupportedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.NotSupportedException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Строка <see cref="T:System.String" />, описывающая ошибку. Содержимое параметра <paramref name="message" /> должно быть понятным пользователю. Вызывающий оператор этого конструктора необходим, чтобы убедиться, локализована ли данная строка для текущего языка и региональных параметров системы.</param>
    </member>
    <member name="M:System.NotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.NotSupportedException" /> заданным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="innerException" /> не является указателем null, текущее исключение выброшено в блоке catch, обрабатывающем внутренние исключения.</param>
    </member>
    <member name="T:System.Nullable">
      <summary>Поддерживает тип значения, который можно присвоить null. Этот класс не наследуется.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable.Compare``1(System.Nullable{``0},System.Nullable{``0})">
      <summary>Сравнивает значения двух объектов <see cref="T:System.Nullable`1" />.</summary>
      <returns>Целое число, представляющее результат сравнений параметров <paramref name="n1" /> и <paramref name="n2" />. 
Возвращаемое значение 	Описание 	
Меньше нуля 	Значение свойства <see cref="P:System.Nullable`1.HasValue" /> параметра <paramref name="n1" /> равно false, а свойства <see cref="P:System.Nullable`1.HasValue" /> параметра <paramref name="n2" /> — true. -или- Значения свойств <see cref="P:System.Nullable`1.HasValue" /> параметров <paramref name="n1" /> и <paramref name="n2" /> равны true, а значение свойства <see cref="P:System.Nullable`1.Value" /> параметра <paramref name="n1" /> меньше значения свойства <see cref="P:System.Nullable`1.Value" /> параметра <paramref name="n2" />. 	
Ноль 	Значения свойств <see cref="P:System.Nullable`1.HasValue" /> параметров <paramref name="n1" /> и <paramref name="n2" /> равны false. -или- Значения свойств <see cref="P:System.Nullable`1.HasValue" /> параметров <paramref name="n1" /> и <paramref name="n2" /> равны true и при этом значение свойства <see cref="P:System.Nullable`1.Value" /> параметра <paramref name="n1" /> равно значению свойства <see cref="P:System.Nullable`1.Value" /> параметра <paramref name="n2" />. 	
Больше нуля. 	Значение свойства <see cref="P:System.Nullable`1.HasValue" /> параметра <paramref name="n1" /> равно true, а свойства <see cref="P:System.Nullable`1.HasValue" /> параметра <paramref name="n2" /> — false. -или- Значения свойств <see cref="P:System.Nullable`1.HasValue" /> параметров <paramref name="n1" /> и <paramref name="n2" /> равны true, а значение свойства <see cref="P:System.Nullable`1.Value" /> параметра <paramref name="n1" /> больше значения свойства <see cref="P:System.Nullable`1.Value" /> параметра <paramref name="n2" />.</returns>
      <param name="n1">Объект <see cref="T:System.Nullable`1" />.</param>
      <param name="n2">Объект <see cref="T:System.Nullable`1" />.</param>
      <typeparam name="T">Базовый тип значения параметров <paramref name="n1" /> и <paramref name="n2" />.</typeparam>
    </member>
    <member name="M:System.Nullable.Equals``1(System.Nullable{``0},System.Nullable{``0})">
      <summary>Указывает, равны ли два указанных объекта типа <see cref="T:System.Nullable`1" />.</summary>
      <returns>Значение true, если значение параметра <paramref name="n1" /> равно значению параметра <paramref name="n2" />; в противном случае — значение false.  Возвращаемое значение зависит от значений свойств <see cref="P:System.Nullable`1.HasValue" /> и <see cref="P:System.Nullable`1.Value" /> двух сравниваемых параметров. 
Возвращаемое значение 	Описание 	
true 	Значения свойств <see cref="P:System.Nullable`1.HasValue" /> параметров <paramref name="n1" /> и <paramref name="n2" /> равны false.  -или- Значения свойств <see cref="P:System.Nullable`1.HasValue" /> параметров <paramref name="n1" /> и <paramref name="n2" /> равны true и при этом значения свойств <see cref="P:System.Nullable`1.Value" /> у этих двух параметров равны. 	
false 	Значение свойства <see cref="P:System.Nullable`1.HasValue" /> равно true для одного параметра и false для другого. -или- Значения свойств <see cref="P:System.Nullable`1.HasValue" /> параметров <paramref name="n1" /> и <paramref name="n2" /> равны true и при этом значения свойств <see cref="P:System.Nullable`1.Value" /> у этих двух параметров неравны.</returns>
      <param name="n1">Объект <see cref="T:System.Nullable`1" />.</param>
      <param name="n2">Объект <see cref="T:System.Nullable`1" />.</param>
      <typeparam name="T">Базовый тип значения параметров <paramref name="n1" /> и <paramref name="n2" />.</typeparam>
    </member>
    <member name="M:System.Nullable.GetUnderlyingType(System.Type)">
      <summary>Возвращает аргумент заданного базового типа, допускающего значение NULL.</summary>
      <returns>Аргумент типа параметра <paramref name="nullableType" />, если параметр <paramref name="nullableType" /> является закрытым универсальным типом, допускающим значение NULL; в противном случае — значение null.</returns>
      <param name="nullableType">Объект <see cref="T:System.Type" />, описывающий закрытый универсальный тип, поддерживающий значение NULL.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="nullableType" /> имеет значение null.</exception>
    </member>
    <member name="T:System.Nullable`1">
      <summary>Представляет тип значения, который можно присвоить null.</summary>
      <typeparam name="T">Базовый тип значения универсального типа <see cref="T:System.Nullable`1" />.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable`1.#ctor(`0)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Nullable`1" /> заданным значением.</summary>
      <param name="value">Тип значения.</param>
    </member>
    <member name="M:System.Nullable`1.Equals(System.Object)">
      <summary>Указывает, равен ли текущий объект <see cref="T:System.Nullable`1" /> заданному объекту.</summary>
      <returns>true, если значение параметра <paramref name="other" /> равно текущему объекту <see cref="T:System.Nullable`1" />, в противном случае — false.  В следующей таблице указано, как определяется равенство сравниваемых значений.  
Возвращаемое значение 	Описание 	
true 	Свойство <see cref="P:System.Nullable`1.HasValue" /> имеет значение false, а <paramref name="other" /> параметр имеет значение null. То есть, два значения null равны по определению. -или- Свойство <see cref="P:System.Nullable`1.HasValue" /> имеет значение true, а значение, возвращаемое свойством <see cref="P:System.Nullable`1.Value" />, равно значению параметра <paramref name="other" />. 	
false 	Свойство <see cref="P:System.Nullable`1.HasValue" /> текущей структуры <see cref="T:System.Nullable`1" /> имеет значение true, а параметр <paramref name="other" /> имеет значение null. -или- Свойство <see cref="P:System.Nullable`1.HasValue" /> текущей структуры <see cref="T:System.Nullable`1" /> имеет значение false, а значением параметра <paramref name="other" /> не является null. -или- Свойство <see cref="P:System.Nullable`1.HasValue" /> текущей структуры <see cref="T:System.Nullable`1" /> имеет значение true, а значение, возвращаемое свойством <see cref="P:System.Nullable`1.Value" />, не равно значению параметра <paramref name="other" />.</returns>
      <param name="other">Объект.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable`1.GetHashCode">
      <summary>Извлекает хэш-код объекта, возвращенного свойством <see cref="P:System.Nullable`1.Value" />.</summary>
      <returns>Хэш-код объекта, возвращенного свойством <see cref="P:System.Nullable`1.Value" />, если свойство <see cref="P:System.Nullable`1.HasValue" /> имеет значение true, или нуль, если свойство <see cref="P:System.Nullable`1.HasValue" /> имеет значение false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Nullable`1.GetValueOrDefault">
      <summary>Извлекает значение текущего объекта <see cref="T:System.Nullable`1" /> или значение этого объекта по умолчанию.</summary>
      <returns>Значение свойства <see cref="P:System.Nullable`1.Value" />, если свойство <see cref="P:System.Nullable`1.HasValue" /> имеет значение true; в противном случае значение по умолчанию текущего объекта <see cref="T:System.Nullable`1" />. Тип значения по умолчанию является аргументом типа текущего объекта <see cref="T:System.Nullable`1" />, а значение значения по умолчанию состоит только из двоичных нулей.</returns>
    </member>
    <member name="M:System.Nullable`1.GetValueOrDefault(`0)">
      <summary>Извлекает значение текущего объекта <see cref="T:System.Nullable`1" /> или заданное значение по умолчанию.</summary>
      <returns>Значение свойства <see cref="P:System.Nullable`1.Value" />, если свойство <see cref="P:System.Nullable`1.HasValue" /> имеет значение true; в противном случае значение параметра <paramref name="defaultValue" />.</returns>
      <param name="defaultValue">Значение, которое следует вернуть, если свойство <see cref="P:System.Nullable`1.HasValue" /> имеет значение false.</param>
    </member>
    <member name="P:System.Nullable`1.HasValue">
      <summary>Возвращает значение, указывающее, имеет ли значение текущий объект <see cref="T:System.Nullable`1" />.</summary>
      <returns>true, если текущий объект <see cref="T:System.Nullable`1" /> имеет значение; false, если текущий объект <see cref="T:System.Nullable`1" /> не имеет значения.</returns>
    </member>
    <member name="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
      <summary>Возвращает значение заданного значения <see cref="T:System.Nullable`1" />.</summary>
      <returns>Значение свойства <see cref="P:System.Nullable`1.Value" /> для параметра <paramref name="value" />.</returns>
      <param name="value">Значение <see cref="T:System.Nullable`1" />.</param>
    </member>
    <member name="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
      <summary>Создает новый объект <see cref="T:System.Nullable`1" />, инициализированный заданным значением.</summary>
      <returns>Объект <see cref="T:System.Nullable`1" />, свойство <see cref="P:System.Nullable`1.Value" /> которого инициализируется со значением параметра <paramref name="value" />.</returns>
      <param name="value">Тип значения.</param>
    </member>
    <member name="M:System.Nullable`1.ToString">
      <summary>Возвращает текстовое представление значения текущего объекта <see cref="T:System.Nullable`1" />.</summary>
      <returns>Текстовое представление значения текущего объекта <see cref="T:System.Nullable`1" />, если свойство <see cref="P:System.Nullable`1.HasValue" /> имеет значение true, или пустая строка (""), если свойство <see cref="P:System.Nullable`1.HasValue" /> имеет значение false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Nullable`1.Value">
      <summary>Получает значение текущего объекта <see cref="T:System.Nullable`1" />.</summary>
      <returns>Значение текущего объекта <see cref="T:System.Nullable`1" />, если свойство <see cref="P:System.Nullable`1.HasValue" /> имеет значение true. Если свойство <see cref="P:System.Nullable`1.HasValue" /> имеет значение false, выбрасывается исключение.</returns>
      <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Nullable`1.HasValue" /> — false.</exception>
    </member>
    <member name="T:System.NullReferenceException">
      <summary>Исключение, возникающее при попытке разыменования указателя NULL на объект.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.NullReferenceException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.NullReferenceException" />, устанавливая в качестве значения свойства <see cref="P:System.Exception.Message" /> нового экземпляра системное сообщение с описанием ошибки: "При запросе экземпляра объекта обнаружено значение NULL". В этом сообщении учитывается текущий язык и региональные параметры системы.</summary>
    </member>
    <member name="M:System.NullReferenceException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.NullReferenceException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Строка <see cref="T:System.String" />, описывающая ошибку. Содержимое параметра <paramref name="message" /> должно быть понятным пользователю. Вызывающий оператор этого конструктора необходим, чтобы убедиться, локализована ли данная строка для текущего языка и региональных параметров системы.</param>
    </member>
    <member name="M:System.NullReferenceException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.NullReferenceException" /> заданным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Object">
      <summary>Поддерживает все классы в иерархии классов .NET Framework и предоставляет низкоуровневые службы для производных классов. Он является исходным базовым классом для всех классов платформы .NET Framework и корнем иерархии типов.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Object.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Object" />.</summary>
    </member>
    <member name="M:System.Object.Equals(System.Object)">
      <summary>Определяет, равен ли заданный объект текущему объекту.</summary>
      <returns>true, если указанный объект равен текущему объекту; в противном случае — false.</returns>
      <param name="obj">Объект, который требуется сравнить с текущим объектом.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.Equals(System.Object,System.Object)">
      <summary>Определяет, считаются ли равными указанные экземпляры объектов.</summary>
      <returns>true, если указанные объекты равны; в противном случае — false. Если оба параметра <paramref name="objA" /> и <paramref name="objB" /> имеют значение NULL, метод возвращает значение true.</returns>
      <param name="objA">Первый сравниваемый объект.</param>
      <param name="objB">Второй сравниваемый объект.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.Finalize">
      <summary>Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, перед тем как объект будет утилизирован в процессе сборки мусора.</summary>
    </member>
    <member name="M:System.Object.GetHashCode">
      <summary>Служит хэш-функцией по умолчанию.</summary>
      <returns>Хэш-код для текущего объекта.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.GetType">
      <summary>Возвращает объект <see cref="T:System.Type" /> для текущего экземпляра.</summary>
      <returns>Точный тип текущего экземпляра в среде выполнения.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.MemberwiseClone">
      <summary>Создает неполную копию текущего объекта <see cref="T:System.Object" />.</summary>
      <returns>Неполная копия объекта <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Object.ReferenceEquals(System.Object,System.Object)">
      <summary>Определяет, совпадают ли указанные экземпляры <see cref="T:System.Object" />.</summary>
      <returns>Значение true, если параметр <paramref name="objA" /> соответствует тому же экземпляру, что и параметр <paramref name="objB" />, или же оба они являются равны NULL; в противном случае — значение false.</returns>
      <param name="objA">Первый сравниваемый объект.</param>
      <param name="objB">Второй сравниваемый объект.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Object.ToString">
      <summary>Возвращает строку, представляющую текущий объект.</summary>
      <returns>Строка, представляющая текущий объект.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.ObjectDisposedException">
      <summary>Исключение, которое выбрасывается при выполнении операции над удаленным объектом.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ObjectDisposedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ObjectDisposedException" /> строкой, содержащей имя удаленного объекта.</summary>
      <param name="objectName">Строка, содержащая имя удаленного объекта.</param>
    </member>
    <member name="M:System.ObjectDisposedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ObjectDisposedException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если значением параметра <paramref name="innerException" /> не является null, текущее исключение выдается в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="M:System.ObjectDisposedException.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ObjectDisposedException" /> указанными именем объекта и сообщением.</summary>
      <param name="objectName">Имя удаленного объекта.</param>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
    </member>
    <member name="P:System.ObjectDisposedException.Message">
      <summary>Возвращает сообщение с описанием ошибки.</summary>
      <returns>Строка, описывающая ошибку.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.ObjectDisposedException.ObjectName">
      <summary>Возвращает имя удаленного объекта.</summary>
      <returns>Строка, содержащая имя удаленного объекта.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.ObsoleteAttribute">
      <summary>Отмечает элементы программы, которые больше не используются. Этот класс не наследуется.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ObsoleteAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ObsoleteAttribute" /> значениями свойств по умолчанию.</summary>
    </member>
    <member name="M:System.ObsoleteAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ObsoleteAttribute" /> указанным сообщением об обходном пути.</summary>
      <param name="message">Строка текста, описывающая альтернативные обходные пути.</param>
    </member>
    <member name="M:System.ObsoleteAttribute.#ctor(System.String,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ObsoleteAttribute" /> сообщением об обходном пути и логическим значением, позволяющим определить, следует ли считать использование устаревшего элемента ошибкой.</summary>
      <param name="message">Строка текста, описывающая альтернативные обходные пути.</param>
      <param name="error">Логическое значение, позволяющее определить, следует ли считать использование устаревшего элемента ошибкой.</param>
    </member>
    <member name="P:System.ObsoleteAttribute.IsError">
      <summary>Возвращает логическое значение, позволяющее определить, будет ли компилятор считать использование устаревшего элемента программы ошибкой.</summary>
      <returns>Значение true, если использование устаревшего элемента считается ошибкой; в противном случае — значение false. Значение по умолчанию — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.ObsoleteAttribute.Message">
      <summary>Возвращает сообщение об обходном пути, содержащее описание альтернативных элементов программы.</summary>
      <returns>Текстовая строка с описанием обходного пути.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.OutOfMemoryException">
      <summary>Исключение, которое выбрасывается при недостаточном объеме памяти для выполнения программы.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.OutOfMemoryException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.OutOfMemoryException" />.</summary>
    </member>
    <member name="M:System.OutOfMemoryException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.OutOfMemoryException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.OutOfMemoryException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.OutOfMemoryException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="innerException" /> не является указателем null (Nothing в Visual Basic), то текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.OverflowException">
      <summary>Исключение, которое выбрасывается, когда при выполнении арифметических операций, операций приведения типов и преобразования происходит переполнение.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.OverflowException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.OverflowException" />.</summary>
    </member>
    <member name="M:System.OverflowException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.OverflowException" /> заданным сообщением об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.OverflowException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.OverflowException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="innerException" /> не является указателем null (Nothing в Visual Basic), то текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.ParamArrayAttribute">
      <summary>Указывает, что при вызове метода допускается использование переменного числа аргументов. Этот класс не наследуется.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ParamArrayAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ParamArrayAttribute" /> со свойствами по умолчанию.</summary>
    </member>
    <member name="T:System.PlatformNotSupportedException">
      <summary>Исключение, возникающее в случае невозможности выполнения функции на определенной платформе.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.PlatformNotSupportedException.#ctor">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.PlatformNotSupportedException" /> со значениями свойств по умолчанию.</summary>
    </member>
    <member name="M:System.PlatformNotSupportedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.PlatformNotSupportedException" /> с заданным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причины исключения.</param>
    </member>
    <member name="M:System.PlatformNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.PlatformNotSupportedException" /> заданным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="inner">Исключение, которое вызвало текущее исключение. Если значение параметра <paramref name="inner" /> не равно null, текущее исключение вызывается в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Predicate`1">
      <summary>Представляет метод, в котором задан набор критериев и который позволяет определить, удовлетворяет ли этим критериям заданный объект.</summary>
      <typeparam name="T">Тип сравниваемого объекта.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Predicate`1.#ctor(System.Object,System.IntPtr)">
    </member>
    <member name="M:System.Predicate`1.BeginInvoke(`0,System.AsyncCallback,System.Object)">
    </member>
    <member name="M:System.Predicate`1.EndInvoke(System.IAsyncResult)">
    </member>
    <member name="M:System.Predicate`1.Invoke(`0)">
    </member>
    <member name="T:System.RankException">
      <summary>Исключение, которое возникает при передаче в метод массива с неправильным числом размерностей.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RankException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.RankException" />.</summary>
    </member>
    <member name="M:System.RankException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.RankException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Строка <see cref="T:System.String" />, описывающая ошибку.</param>
    </member>
    <member name="M:System.RankException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.RankException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="innerException" /> не является указателем null (Nothing в Visual Basic), то текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.RuntimeFieldHandle">
      <summary>Предоставляет поле, использующее лексему внутренних метаданных.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.Equals(System.Object)">
      <summary>Указывает, равнозначен ли текущий экземпляр указанному объекту.</summary>
      <returns>Значение true, если параметр <paramref name="obj" /> является объектом <see cref="T:System.RuntimeFieldHandle" /> и равен значению текущего экземпляра; в противном случае — значение false.</returns>
      <param name="obj">Объект, сравниваемый с текущим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.Equals(System.RuntimeFieldHandle)">
      <summary>Указывает, равен ли текущий экземпляр указанному объекту <see cref="T:System.RuntimeFieldHandle" />.</summary>
      <returns>Значение true, если значение параметра <paramref name="handle" /> равно значению текущего экземпляра; в противном случае — false.</returns>
      <param name="handle">
        <see cref="T:System.RuntimeFieldHandle" /> для сравнения с текущим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.GetHashCode">
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.op_Equality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)">
      <summary>Определяет равенство двух структур <see cref="T:System.RuntimeFieldHandle" />.</summary>
      <returns>true, если значения параметров <paramref name="left" /> и <paramref name="right" /> равны; в противном случае — false.</returns>
      <param name="left">Объект <see cref="T:System.RuntimeFieldHandle" />, используемый для сравнения с <paramref name="right" />.</param>
      <param name="right">Объект <see cref="T:System.RuntimeFieldHandle" />, используемый для сравнения с <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeFieldHandle.op_Inequality(System.RuntimeFieldHandle,System.RuntimeFieldHandle)">
      <summary>Определяет неравенство двух структур <see cref="T:System.RuntimeFieldHandle" />.</summary>
      <returns>true, если значения <paramref name="left" /> и <paramref name="right" /> не равны; в противном случае — false.</returns>
      <param name="left">Объект <see cref="T:System.RuntimeFieldHandle" />, используемый для сравнения с <paramref name="right" />.</param>
      <param name="right">Объект <see cref="T:System.RuntimeFieldHandle" />, используемый для сравнения с <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.RuntimeMethodHandle">
      <summary>
        <see cref="T:System.RuntimeMethodHandle" /> является дескриптором внутреннего представления метаданных метода.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.Equals(System.Object)">
      <summary>Определяет равенство этого экземпляра указанному объекту.</summary>
      <returns>true, если значением параметра <paramref name="obj" /> является <see cref="T:System.RuntimeMethodHandle" />, равный значению данного экземпляра; в противном случае — false.</returns>
      <param name="obj">Объект <see cref="T:System.Object" />, сравниваемый с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.Equals(System.RuntimeMethodHandle)">
      <summary>Определяет равенство этого экземпляра указанному объекту <see cref="T:System.RuntimeMethodHandle" />.</summary>
      <returns>true, если значение параметра <paramref name="handle" /> равно значению этого экземпляра; в противном случае — false.</returns>
      <param name="handle">Объект <see cref="T:System.RuntimeMethodHandle" />, сравниваемый с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.op_Equality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)">
      <summary>Показывает, равны ли два экземпляра <see cref="T:System.RuntimeMethodHandle" />.</summary>
      <returns>true, если значение параметра <paramref name="left" /> равно значению параметра <paramref name="right" />; в противном случае — false.</returns>
      <param name="left">Объект <see cref="T:System.RuntimeMethodHandle" /> для сравнения с параметром <paramref name="right" />.</param>
      <param name="right">Объект <see cref="T:System.RuntimeMethodHandle" /> для сравнения с <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeMethodHandle.op_Inequality(System.RuntimeMethodHandle,System.RuntimeMethodHandle)">
      <summary>Определяет, являются ли два экземпляра <see cref="T:System.RuntimeMethodHandle" /> неравными.</summary>
      <returns>true, если значение параметра <paramref name="left" /> не равно значению параметра <paramref name="right" />; в противном случае — false.</returns>
      <param name="left">Объект <see cref="T:System.RuntimeMethodHandle" /> для сравнения с параметром <paramref name="right" />.</param>
      <param name="right">Объект <see cref="T:System.RuntimeMethodHandle" /> для сравнения с <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.RuntimeTypeHandle">
      <summary>Предоставляет тип, использующий маркер внутренних метаданных.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.Equals(System.Object)">
      <summary>Показывает, равен ли указанный объект текущей структуре <see cref="T:System.RuntimeTypeHandle" />.</summary>
      <returns>true, если параметр <paramref name="obj" /> является структурой <see cref="T:System.RuntimeTypeHandle" /> и равен данному экземпляру; в противном случае — false.</returns>
      <param name="obj">Объект, сравниваемый с текущим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.Equals(System.RuntimeTypeHandle)">
      <summary>Указывает, равна ли заданная структура <see cref="T:System.RuntimeTypeHandle" /> текущей структуре <see cref="T:System.RuntimeTypeHandle" />.</summary>
      <returns>true, если значение параметра <paramref name="handle" /> равно значению этого экземпляра; в противном случае — false.</returns>
      <param name="handle">Структура <see cref="T:System.RuntimeTypeHandle" /> для сравнения с текущим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.GetHashCode">
      <summary>Возвращает хэш-код текущего экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Equality(System.Object,System.RuntimeTypeHandle)">
      <summary>Указывает, равны ли объект и структура <see cref="T:System.RuntimeTypeHandle" />.</summary>
      <returns>true, если параметр <paramref name="left" /> является структурой <see cref="T:System.RuntimeTypeHandle" />, равной <paramref name="right" />; в противном случае — false.</returns>
      <param name="left">Объект, сравниваемый с <paramref name="right" />.</param>
      <param name="right">Структура <see cref="T:System.RuntimeTypeHandle" />, сравниваемая с <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Equality(System.RuntimeTypeHandle,System.Object)">
      <summary>Указывает, равна ли структура <see cref="T:System.RuntimeTypeHandle" /> объекту.</summary>
      <returns>true, если параметр <paramref name="right" /> является структурой <see cref="T:System.RuntimeTypeHandle" />, равной <paramref name="left" />; в противном случае — false.</returns>
      <param name="left">Структура <see cref="T:System.RuntimeTypeHandle" />, сравниваемая с <paramref name="right" />.</param>
      <param name="right">Объект, сравниваемый с <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Inequality(System.Object,System.RuntimeTypeHandle)">
      <summary>Указывает, являются ли объект и структура <see cref="T:System.RuntimeTypeHandle" /> неравными.</summary>
      <returns>true, если параметр <paramref name="left" /> является структурой <see cref="T:System.RuntimeTypeHandle" />, не равной <paramref name="right" />; в противном случае — false.</returns>
      <param name="left">Объект, сравниваемый с <paramref name="right" />.</param>
      <param name="right">Структура <see cref="T:System.RuntimeTypeHandle" />, сравниваемая с <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.RuntimeTypeHandle.op_Inequality(System.RuntimeTypeHandle,System.Object)">
      <summary>Указывает, является ли структура <see cref="T:System.RuntimeTypeHandle" /> неравной объекту.</summary>
      <returns>true, если параметр <paramref name="right" /> является структурой <see cref="T:System.RuntimeTypeHandle" />, не равной <paramref name="left" />; в противном случае — false.</returns>
      <param name="left">Структура <see cref="T:System.RuntimeTypeHandle" />, сравниваемая с <paramref name="right" />.</param>
      <param name="right">Объект, сравниваемый с <paramref name="left" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="T:System.SByte">
      <summary>Представляет 8-разрядное целое число со знаком.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.CompareTo(System.SByte)">
      <summary>Сравнивает данный экземпляр с заданным 8-битовым целым числом со знаком и возвращает значение, указывающее, как соотносятся их значения.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Описание  	
Меньше нуля  	Данный экземпляр меньше <paramref name="value" />.  	
Zero  	Этот экземпляр и параметр <paramref name="value" /> равны.  	
Больше нуля.  	Этот экземпляр больше параметра <paramref name="value" />.</returns>
      <param name="value">8-битовое целое число со знаком для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.SByte.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>Значение true, если параметр <paramref name="obj" /> является экземпляром типа <see cref="T:System.SByte" /> и равен значению данного экземпляра; в противном случае — значение false.</returns>
      <param name="obj">Объект для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.SByte.Equals(System.SByte)">
      <summary>Возвращает значение, указывающее, равен ли данный экземпляр заданному значению типа <see cref="T:System.SByte" />.</summary>
      <returns>true, если значение параметра <paramref name="obj" /> совпадает со значением данного экземпляра; в противном случае — false.</returns>
      <param name="obj">Значение типа <see cref="T:System.SByte" /> для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.SByte.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.SByte.MaxValue">
      <summary>Представляет наибольшее возможное значение типа <see cref="T:System.SByte" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.SByte.MinValue">
      <summary>Представляет минимально допустимое значение типа <see cref="T:System.SByte" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String)">
      <summary>Преобразует строковое представление числа в эквивалентное ему 8-битовое целое число со знаком.</summary>
      <returns>8-разрядное знаковое целое число, эквивалентное числу, содержащемуся в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, представляющая преобразуемое число. Данная строка интерпретируется с использованием стиля <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> не состоит из необязательного знака и следующей за ним последовательности цифр (от нуля до девяти).</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.SByte.MinValue" /> или больше значения <see cref="F:System.SByte.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Преобразует строковое представление числа в указанном формате в эквивалентное 8-разрядное знаковое целое число.</summary>
      <returns>8-разрядное знаковое целое число, эквивалентное числу, содержащемуся в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число. Строка интерпретируется с использованием стиля, указанного в <paramref name="style" />.</param>
      <param name="style">Побитовое сочетание значений перечисления, обозначающих элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> не соответствует формату, заданному в параметре <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.SByte.MinValue" /> или больше значения <see cref="F:System.SByte.MaxValue" />.  -или- Параметр <paramref name="s" /> включает дробные разряды, не равные нулю.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в формате, соответствующем определенному стилю, языку и региональным параметрам, в эквивалентное ему 8-битовое целое число со знаком.</summary>
      <returns>8-битовое значение типа byte со знаком, эквивалентное числу, заданному в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число. Строка интерпретируется с использованием стиля, указанного в <paramref name="style" />.</param>
      <param name="style">Побитовое сочетание значений перечисления, обозначающих элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров. Если значение параметра <paramref name="provider" /> равно null, используются текущий язык и региональные параметры потока.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />. -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> не соответствует формату, заданному в параметре <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />. -или- Параметр <paramref name="s" /> включает дробные разряды, не равные нулю.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.Parse(System.String,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в указанном формате, соответствующем языку и региональным параметрам, в эквивалентное 8-разрядное знаковое целое число.</summary>
      <returns>8-разрядное знаковое целое число, эквивалентное числу, содержащемуся в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, представляющая преобразуемое число. Данная строка интерпретируется с использованием стиля <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров. Если значение параметра <paramref name="provider" /> равно null, используются текущий язык и региональные параметры потока.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.SByte.MinValue" /> или больше значения <see cref="F:System.SByte.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Значение  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки. 	
Zero  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и объект <paramref name="value" />. 	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="value" /> в порядке сортировки. -или-  Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="value" /> не является объектом <see cref="T:System.SByte" />.</exception>
    </member>
    <member name="M:System.SByte.ToString">
      <summary>Преобразовывает числовое значение данного экземпляра в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения данного экземпляра, состоящее из знака минус, если число отрицательное, и последовательности цифр в диапазоне от 0 до 9 с ненулевой первой цифрой.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.ToString(System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="provider" />.</returns>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.ToString(System.String)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное строковое представление с использованием указанного формата.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</returns>
      <param name="format">Стандартная или пользовательская строка числового формата.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> не является допустимым.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.ToString(System.String,System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
      <param name="format">Стандартная или пользовательская строка числового формата.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> не является допустимым.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte@)">
      <summary>Предпринимает попытку преобразования числа в формате, который определяется заданным стилем и языком и региональными параметрами, в эквивалент типа <see cref="T:System.SByte" /> и возвращает значение, определяющее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, представляющая преобразуемое число.</param>
      <param name="style">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <param name="result">При возвращении этим методом содержит 8-разрядное целочисленное значение со знаком, эквивалентное числу, содержащемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось неудачей. Преобразование завершается сбоем, если параметр <paramref name="s" /> равен null или <see cref="F:System.String.Empty" />, не находится в формате, совместимом с <paramref name="style" /> или представляет собой число меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.SByte.TryParse(System.String,System.SByte@)">
      <summary>Предпринимает попытку преобразования строкового представления числа в его эквивалент типа <see cref="T:System.SByte" /> и возвращает значение, позволяющее определить, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="result">По возвращении из этого метода содержит 8-битовое целочисленное значение со знаком, эквивалентное числу, содержащемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось неудачей. Преобразование завершается неудачей, если параметр <paramref name="s" /> равен null или <see cref="F:System.String.Empty" />, не находится в правильном формате или представляет число меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />. Этот параметр передается без инициализации.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Single">
      <summary>Представляет число одиночной точности с плавающей запятой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.CompareTo(System.Single)">
      <summary>Сравнивает данный экземпляр с заданным числом одиночной точности с плавающей запятой и возвращает целое число, которое показывает, является ли значение данного экземпляра меньше, больше или равным значению заданного числа одиночной точности с плавающей запятой.</summary>
      <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />. 
Возвращаемое значение  	Описание  	
Меньше нуля  	Данный экземпляр меньше <paramref name="value" />. -или-  Данный экземпляр не является числом (<see cref="F:System.Single.NaN" />), а параметр <paramref name="value" /> является.  	
Zero  	Этот экземпляр и параметр <paramref name="value" /> равны. -или-  И этот экземпляр, и параметр <paramref name="value" /> не являются числами (<see cref="F:System.Single.NaN" />), равны <see cref="F:System.Single.PositiveInfinity" /> или <see cref="F:System.Single.NegativeInfinity" />.  	
Больше нуля.  	Этот экземпляр больше параметра <paramref name="value" />. -или-  Данный экземпляр является числом, а параметр <paramref name="value" /> — нет (<see cref="F:System.Single.NaN" />).</returns>
      <param name="value">Сравниваемое число одиночной точности с плавающей запятой.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Single.Epsilon">
      <summary>Представляет наименьшее положительное значение <see cref="T:System.Single" /> больше нуля. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>Значение true, если параметр <paramref name="obj" /> является экземпляром <see cref="T:System.Single" /> и равен значению этого экземпляра; в противном случае — значение false.</returns>
      <param name="obj">Объект для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Single.Equals(System.Single)">
      <summary>Возвращает значение, позволяющее определить, представляют ли этот экземпляр и заданный объект <see cref="T:System.Single" /> одно и то же значение.</summary>
      <returns>Значение true, если значение параметра <paramref name="obj" /> равно данному экземпляру; в противном случае — значение false.</returns>
      <param name="obj">Объект для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Single.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Single.IsInfinity(System.Single)">
      <summary>Возвращает значение, позволяющее определить, равно ли данное число плюс или минус бесконечности.</summary>
      <returns>Значение true, если параметр <paramref name="f" /> равен значению <see cref="F:System.Single.PositiveInfinity" /> или <see cref="F:System.Single.NegativeInfinity" />; в противном случае — значение false.</returns>
      <param name="f">Число одинарной точности с плавающей запятой.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.IsNaN(System.Single)">
      <summary>Возвращает значение, показывающее, что указанное значение не является числом (<see cref="F:System.Single.NaN" />).</summary>
      <returns>Значение true, если параметр <paramref name="f" /> относится к нечисловому типу (<see cref="F:System.Single.NaN" />); в противном случае — значение false.</returns>
      <param name="f">Число одинарной точности с плавающей запятой.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.IsNegativeInfinity(System.Single)">
      <summary>Возвращает значение, позволяющее определить, равно ли данное число минус бесконечности.</summary>
      <returns>Значение true, если значение параметра <paramref name="f" /> равно значению <see cref="F:System.Single.NegativeInfinity" />; в противном случае — значение false.</returns>
      <param name="f">Число одинарной точности с плавающей запятой.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.IsPositiveInfinity(System.Single)">
      <summary>Возвращает значение, показывающее, равно ли данное число плюс бесконечности.</summary>
      <returns>Значение true, если значение параметра <paramref name="f" /> равно значению <see cref="F:System.Single.PositiveInfinity" />; в противном случае — значение false.</returns>
      <param name="f">Число одинарной точности с плавающей запятой.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.MaxValue">
      <summary>Представляет наибольшее возможное значение типа <see cref="T:System.Single" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.MinValue">
      <summary>Представляет минимальное допустимое значение <see cref="T:System.Single" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.NaN">
      <summary>Представляет нечисловое значение (NaN). Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.NegativeInfinity">
      <summary>Представляет минус бесконечность. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.op_Equality(System.Single,System.Single)">
      <summary>Возвращает значение, определяющее, равны ли два указанных значения <see cref="T:System.Single" />.</summary>
      <returns>true, если значения <paramref name="left" /> и <paramref name="right" /> равны; в противном случае — false.</returns>
      <param name="left">Первое сравниваемое значение.</param>
      <param name="right">Второе сравниваемое значение.</param>
    </member>
    <member name="M:System.Single.op_GreaterThan(System.Single,System.Single)">
      <summary>Возвращает значение, определяющее, действительно ли заданное значение типа <see cref="T:System.Single" /> больше другого заданного значения типа <see cref="T:System.Single" />.</summary>
      <returns>true, если значение <paramref name="left" /> больше значения <paramref name="right" />; в противном случае — false.</returns>
      <param name="left">Первое сравниваемое значение.</param>
      <param name="right">Второе сравниваемое значение.</param>
    </member>
    <member name="M:System.Single.op_GreaterThanOrEqual(System.Single,System.Single)">
      <summary>Возвращает значение, определяющее, действительно ли заданное значение типа <see cref="T:System.Single" /> больше или равно другому заданному значению типа <see cref="T:System.Single" />.</summary>
      <returns>true, если значение <paramref name="left" /> больше или равно значению <paramref name="right" />; в противном случае — false.</returns>
      <param name="left">Первое сравниваемое значение.</param>
      <param name="right">Второе сравниваемое значение.</param>
    </member>
    <member name="M:System.Single.op_Inequality(System.Single,System.Single)">
      <summary>Возвращает значение, определяющее, являются ли два указанных значения <see cref="T:System.Single" /> не равными.</summary>
      <returns>Значение true, если значения параметров <paramref name="left" /> и <paramref name="right" /> не равны; в противном случае — значение false.</returns>
      <param name="left">Первое сравниваемое значение.</param>
      <param name="right">Второе сравниваемое значение.</param>
    </member>
    <member name="M:System.Single.op_LessThan(System.Single,System.Single)">
      <summary>Возвращает значение, определяющее, действительно ли заданное значение типа <see cref="T:System.Single" /> меньше другого заданного значения типа <see cref="T:System.Single" />.</summary>
      <returns>true, если значение <paramref name="left" /> меньше значения <paramref name="right" />; в противном случае — false.</returns>
      <param name="left">Первое сравниваемое значение.</param>
      <param name="right">Второе сравниваемое значение.</param>
    </member>
    <member name="M:System.Single.op_LessThanOrEqual(System.Single,System.Single)">
      <summary>Возвращает значение, определяющее, действительно ли заданное значение типа <see cref="T:System.Single" /> меньше или равно другому заданному значению типа <see cref="T:System.Single" />.</summary>
      <returns>true, если значение <paramref name="left" /> меньше или равно значению <paramref name="right" />; в противном случае — false.</returns>
      <param name="left">Первое сравниваемое значение.</param>
      <param name="right">Второе сравниваемое значение.</param>
    </member>
    <member name="M:System.Single.Parse(System.String)">
      <summary>Преобразует строковое представление числа в эквивалентное ему число одиночной точности с плавающей запятой.</summary>
      <returns>Число одиночной точности с плавающей запятой, эквивалентное числовому значению или знаку, указанному в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> не представляет число в допустимом формате.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Single.MinValue" /> или больше значения <see cref="F:System.Single.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Преобразует строковое представление числа в указанном стиле в эквивалентное ему число одиночной точности с плавающей запятой.</summary>
      <returns>Число с плавающей запятой одиночной точности, которое эквивалентно числовому значению или символу, заданному параметром <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="style">Побитовая комбинация значений перечисления, обозначающая элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Float" /> в сочетании со значением <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> не является числом допустимого формата.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше <see cref="F:System.Single.MinValue" /> или больше <see cref="F:System.Single.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> включает значение <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в указанном стиле и с использованием формата, соответствующего данному языку и региональным параметрам, в эквивалентное ему число одиночной точности с плавающей запятой.</summary>
      <returns>Число одиночной точности с плавающей запятой, эквивалентное числовому значению или знаку, указанному в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="style">Побитовая комбинация значений перечисления, обозначающая элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Float" /> в сочетании со значением <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> не представляет числовое значение.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Значение параметра <paramref name="style" /> равно значению <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше <see cref="F:System.Single.MinValue" /> или больше <see cref="F:System.Single.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.Parse(System.String,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа, записанное в формате, соответствующем определенному языку и региональным параметрам, в эквивалентное ему число одиночной точности с плавающей запятой.</summary>
      <returns>Число одиночной точности с плавающей запятой, эквивалентное числовому значению или знаку, указанному в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая преобразуемое число.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> не представляет число в допустимом формате.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.Single.MinValue" /> или больше значения <see cref="F:System.Single.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Single.PositiveInfinity">
      <summary>Представляет плюс бесконечность. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Значение  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки. 	
Zero  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и объект <paramref name="value" />. 	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="value" /> в порядке сортировки. -или-  Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не является объектом типа <see cref="T:System.Single" />.</exception>
    </member>
    <member name="M:System.Single.ToString">
      <summary>Преобразовывает числовое значение данного экземпляра в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения этого экземпляра.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.ToString(System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="provider" />.</returns>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.ToString(System.String)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное строковое представление с использованием указанного формата.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</returns>
      <param name="format">Строка числового формата.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> не является допустимым.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.ToString(System.String,System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
      <param name="format">Строка числового формата.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
      <summary>Преобразует строковое представление числа в указанном стиле и с использованием формата, соответствующего данному языку и региональным параметрам, в эквивалентное ему число одиночной точности с плавающей запятой. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, представляющая преобразуемое число.</param>
      <param name="style">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Float" /> в сочетании со значением <see cref="F:System.Globalization.NumberStyles.AllowThousands" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <param name="result">Когда этот метод возвращает значение, оно содержит эквивалент числового значения или символа, содержащегося в параметре <paramref name="s" />, представленный в виде числа одиночной точности с плавающей запятой, если преобразование прошло успешно, или нуль, если преобразование выполнить не удалось. Преобразование завершается сбоем, если значением параметра <paramref name="s" /> равно null или <see cref="F:System.String.Empty" />, не является значением в формате, совместимом с <paramref name="style" />, представляет число меньше <see cref="F:System.Single.MinValue" /> или больше <see cref="F:System.Single.MaxValue" /> либо если <paramref name="style" /> не является допустимой комбинацией перечисленных констант <see cref="T:System.Globalization.NumberStyles" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Значение параметра <paramref name="style" /> равно значению <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Single.TryParse(System.String,System.Single@)">
      <summary>Преобразует строковое представление числа в эквивалентное ему число одиночной точности с плавающей запятой. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, представляющая преобразуемое число.</param>
      <param name="result">Когда этот метод возвращает значение, оно содержит эквивалент числового значения или символа, содержащегося в параметре <paramref name="s" />, представленный в виде числа одиночной точности с плавающей запятой, если преобразование прошло успешно, или нуль, если преобразование выполнить не удалось. Преобразование завершается сбоем, если значение параметра <paramref name="s" /> равно null или <see cref="F:System.String.Empty" />, не является числом допустимого формата или представляет число меньше <see cref="F:System.Single.MinValue" /> или больше <see cref="F:System.Single.MaxValue" />. Этот параметр передается без инициализации.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.STAThreadAttribute">
      <summary>Указывает, что потоковая модель COM для приложения является однопотоковым подразделением (STA).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.STAThreadAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.STAThreadAttribute" />.</summary>
    </member>
    <member name="T:System.String">
      <summary>Представляет текст как последовательность знаков Юникода.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.#ctor(System.Char*)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.String" /> значением, на которое указывает заданный указатель на массив знаков Юникода.</summary>
      <param name="value">Указатель на строку знаков в кодировке Юникод, завершающуюся нулевым значением.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Текущий процесс не имеет доступа для чтения ко всем адресованным знакам.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="value" /> определяет массив, содержащий недопустимый знак Юникода, либо параметр <paramref name="value" /> определяет адрес, меньший 64000.</exception>
    </member>
    <member name="M:System.String.#ctor(System.Char*,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.String" /> значением, которое определяется заданным указателем на массив знаков Юникода, начальной позицией знака в этом массиве и длиной.</summary>
      <param name="value">Указатель на массив знаков Юникода.</param>
      <param name="startIndex">Начальная позиция в <paramref name="value" />.</param>
      <param name="length">Используемое количество знаков в <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> или <paramref name="length" /> меньше нуля, <paramref name="value" /> + <paramref name="startIndex" /> вызывает переполнение указателя или текущий процесс не имеет доступа для чтения ко всем адресованным символам.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="value" /> определяет массив, содержащий недопустимый знак Юникода, либо сумма значений параметров <paramref name="value" /> и <paramref name="startIndex" /> определяет адрес, меньший 64000.</exception>
    </member>
    <member name="M:System.String.#ctor(System.Char,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.String" /> значением, полученным путем повторения заданного знака Юникода заданное число раз.</summary>
      <param name="c">Знак Юникода.</param>
      <param name="count">Количество повторов <paramref name="c" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> меньше нуля.</exception>
    </member>
    <member name="M:System.String.#ctor(System.Char[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.String" /> значением, заданным в виде массива знаков Юникода.</summary>
      <param name="value">Массив знаков Юникода.</param>
    </member>
    <member name="M:System.String.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.String" /> значением, заданным массивом знаков Юникода, начальной позицией знака в пределах данного массива и длиной.</summary>
      <param name="value">Массив знаков Юникода.</param>
      <param name="startIndex">Начальная позиция в <paramref name="value" />.</param>
      <param name="length">Используемое количество знаков в <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> или <paramref name="length" /> меньше нуля. -или-  Сумма значений параметров <paramref name="startIndex" /> и <paramref name="length" /> превышает количество элементов в <paramref name="value" />.</exception>
    </member>
    <member name="P:System.String.Chars(System.Int32)">
      <summary>Получает объект <see cref="T:System.Char" /> в указанной позиции в текущем объекте <see cref="T:System.String" />.</summary>
      <returns>Объект в позиции <paramref name="index" />.</returns>
      <param name="index">Позиция в текущей строке.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> больше или равен длине данного объекта или меньше нуля.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Сравнивает подстроки двух указанных объектов <see cref="T:System.String" /> и возвращает целое число, которое показывает их относительное положение в порядке сортировки.</summary>
      <returns>32-битовое целое число со знаком, выражающее лексическое соотношение двух сравниваемых значений. 
Значение  	Атрибут Condition  	
Меньше нуля  	Подстрока в <paramref name="strA" /> меньше, чем подстрока в <paramref name="strB" />.  	
Zero  	Подстроки равны, или значение параметра <paramref name="length" /> равно нулю.  	
Больше нуля.  	Подстрока в <paramref name="strA" /> больше, чем подстрока в <paramref name="strB" />.</returns>
      <param name="strA">Первая из сравниваемых строк.</param>
      <param name="indexA">Позиция подстроки в <paramref name="strA" />.</param>
      <param name="strB">Вторая из сравниваемых строк.</param>
      <param name="indexB">Позиция подстроки в <paramref name="strB" />.</param>
      <param name="length">Максимальное число сравниваемых знаков в подстроках.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса <paramref name="indexA" /> больше значения свойства <paramref name="strA" />.<see cref="P:System.String.Length" />. -или-  <paramref name="indexB" /> больше значения свойства <paramref name="strB" />.<see cref="P:System.String.Length" />. -или-  Значение параметра <paramref name="indexA" />, <paramref name="indexB" /> или <paramref name="length" /> является отрицательным.  -или- Значение параметра <paramref name="indexA" /> или <paramref name="indexB" /> равно null, а значение параметра <paramref name="length" /> больше нуля.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)">
      <summary>Сравнивает подстроки двух указанных объектов <see cref="T:System.String" /> с использованием заданных правил и возвращает целое число, которое показывает их относительное положение в порядке сортировки.</summary>
      <returns>32-разрядное знаковое целое число, выражающее лексическое отношение двух сравниваемых значений. 
Значение  	Атрибут Condition  	
Меньше нуля  	Подстрока в параметре <paramref name="strA" /> меньше подстроки в параметре <paramref name="strB" />. 	
Zero  	Подстроки равны, или значение параметра <paramref name="length" /> равно нулю.  	
Больше нуля.  	Подстрока в <paramref name="strA" /> больше, чем подстрока в <paramref name="strB" />.</returns>
      <param name="strA">Первая из сравниваемых строк.</param>
      <param name="indexA">Позиция подстроки в <paramref name="strA" />.</param>
      <param name="strB">Вторая из сравниваемых строк.</param>
      <param name="indexB">Позиция подстроки в <paramref name="strB" />.</param>
      <param name="length">Максимальное число сравниваемых знаков в подстроках.</param>
      <param name="comparisonType">Одно из значений перечисления, определяющее используемые при сравнении правила.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса <paramref name="indexA" /> больше значения свойства <paramref name="strA" />.<see cref="P:System.String.Length" />. -или-  <paramref name="indexB" /> больше значения свойства <paramref name="strB" />.<see cref="P:System.String.Length" />. -или-  Значение параметра <paramref name="indexA" />, <paramref name="indexB" /> или <paramref name="length" /> является отрицательным.  -или- Значение параметра <paramref name="indexA" /> или <paramref name="indexB" /> равно null, а значение параметра <paramref name="length" /> больше нуля.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="comparisonType" /> не равно значению <see cref="T:System.StringComparison" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.String)">
      <summary>Сравнивает два указанных объекта <see cref="T:System.String" /> и возвращает целое число, которое показывает их относительное положение в порядке сортировки.</summary>
      <returns>32-разрядное знаковое целое число, выражающее лексическое отношение двух сравниваемых значений. 
Значение  	Атрибут Condition  	
Меньше нуля  	Значение параметра <paramref name="strA" /> меньше значения параметра <paramref name="strB" />.  	
Zero  	Значения параметров <paramref name="strA" /> и <paramref name="strB" /> равны.  	
Больше нуля.  	Значение <paramref name="strA" /> больше значения <paramref name="strB" />.</returns>
      <param name="strA">Первая сравниваемая строка.</param>
      <param name="strB">Вторая сравниваемая строка.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Compare(System.String,System.String,System.StringComparison)">
      <summary>Сравнивает два указанных объекта <see cref="T:System.String" /> с использованием заданных правил и возвращает целое число, которое показывает их относительное положение в порядке сортировки.</summary>
      <returns>32-разрядное знаковое целое число, выражающее лексическое отношение двух сравниваемых значений. 
Значение  	Атрибут Condition  	
Меньше нуля  	Значение параметра <paramref name="strA" /> меньше значения параметра <paramref name="strB" />.  	
Zero  	Значения параметров <paramref name="strA" /> и <paramref name="strB" /> равны.  	
Больше нуля.  	Значение <paramref name="strA" /> больше значения <paramref name="strB" />.</returns>
      <param name="strA">Первая сравниваемая строка.</param>
      <param name="strB">Вторая сравниваемая строка.</param>
      <param name="comparisonType">Одно из значений перечисления, определяющее используемые при сравнении правила.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="comparisonType" /> не равно значению <see cref="T:System.StringComparison" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.StringComparison" /> не поддерживается.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Сравнивает подстроки двух заданных объектов <see cref="T:System.String" />, вычисляя числовые значения соответствующих объектов <see cref="T:System.Char" /> в каждой подстроке.</summary>
      <returns>32-разрядное знаковое целое число, выражающее лексическое отношение двух сравниваемых значений. 
Значение 	Атрибут Condition  	
Меньше нуля  	Подстрока в <paramref name="strA" /> меньше, чем подстрока в <paramref name="strB" />.  	
Zero  	Подстроки равны, или значение параметра <paramref name="length" /> равно нулю.  	
Больше нуля.  	Подстрока в <paramref name="strA" /> больше, чем подстрока в <paramref name="strB" />.</returns>
      <param name="strA">Первая из сравниваемых строк.</param>
      <param name="indexA">Начальный индекс подстроки в <paramref name="strA" />.</param>
      <param name="strB">Вторая из сравниваемых строк.</param>
      <param name="indexB">Начальный индекс подстроки в <paramref name="strB" />.</param>
      <param name="length">Максимальное число сравниваемых знаков в подстроках.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="strA" /> не равно null, и <paramref name="indexA" /> выше <paramref name="strA" />.<see cref="P:System.String.Length" />. -или-  Значение <paramref name="strB" /> не равно null, и <paramref name="indexB" /> выше <paramref name="strB" />.<see cref="P:System.String.Length" />. -или-  Значение параметра <paramref name="indexA" />, <paramref name="indexB" /> или <paramref name="length" /> является отрицательным.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.CompareOrdinal(System.String,System.String)">
      <summary>Сравнивает два заданных объекта <see cref="T:System.String" />, оценивая числовые значения соответствующих объектов <see cref="T:System.Char" /> в каждой строке.</summary>
      <returns>Целое число, выражающее лексическое соотношение двух сравниваемых значений. 
Значение 	Атрибут Condition  	
Меньше нуля  	Значение параметра <paramref name="strA" /> меньше значения параметра <paramref name="strB" />.  	
Zero  	Значения параметров <paramref name="strA" /> и <paramref name="strB" /> равны.  	
Больше нуля.  	Значение <paramref name="strA" /> больше значения <paramref name="strB" />.</returns>
      <param name="strA">Первая сравниваемая строка.</param>
      <param name="strB">Вторая сравниваемая строка.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.CompareTo(System.String)">
      <summary>Сравнивает данный экземпляр с заданным объектом <see cref="T:System.String" /> и показывает, расположен ли данный экземпляр перед, после или на той же позиции в порядке сортировки, что и заданный объект <see cref="T:System.String" />.</summary>
      <returns>32-битовое целое число со знаком, которое показывает, расположен ли данный экземпляр перед, после или на той же позиции в порядке сортировки, что и параметр <paramref name="value" />. 
Значение  	Атрибут Condition  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="strB" />.  	
Zero  	Данный экземпляр имеет ту же позицию в порядке сортировки, что и <paramref name="strB" />.  	
Больше нуля.  	Данный экземпляр стоит после параметра <paramref name="strB" />. -или-  Параметр <paramref name="strB" /> имеет значение null.</returns>
      <param name="strB">Строка, сравниваемая с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Сцепляет элементы созданной коллекции <see cref="T:System.Collections.Generic.IEnumerable`1" /> типа <see cref="T:System.String" />.</summary>
      <returns>Сцепленные строки в параметре <paramref name="values" />.</returns>
      <param name="values">Объект коллекции, реализующий <see cref="T:System.Collections.Generic.IEnumerable`1" /> и имеющий аргумент универсального типа <see cref="T:System.String" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="values" /> имеет значение null.</exception>
    </member>
    <member name="M:System.String.Concat``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Сцепляет элементы реализации <see cref="T:System.Collections.Generic.IEnumerable`1" />.</summary>
      <returns>Сцепленные элементы в параметре <paramref name="values" />.</returns>
      <param name="values">Объект коллекции, реализующий интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
      <typeparam name="T">Тип элементов параметра <paramref name="values" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="values" /> имеет значение null.</exception>
    </member>
    <member name="M:System.String.Concat(System.Object)">
      <summary>Создает строковое представление указанного объекта.</summary>
      <returns>Строковое представление значения параметра <paramref name="arg0" /> или <see cref="F:System.String.Empty" />, если значение параметра <paramref name="arg0" /> равно null.</returns>
      <param name="arg0">Объект для представления или значение null.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Object,System.Object)">
      <summary>Сцепляет строковые представления двух указанных объектов.</summary>
      <returns>Сцепленные строковые представления значений <paramref name="arg0" /> и <paramref name="arg1" />.</returns>
      <param name="arg0">Первый из сцепляемых объектов.</param>
      <param name="arg1">Второй из сцепляемых объектов.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Object,System.Object,System.Object)">
      <summary>Сцепляет строковые представления трех указанных объектов.</summary>
      <returns>Сцепленные строковые представления значений <paramref name="arg0" />, <paramref name="arg1" /> и <paramref name="arg2" />.</returns>
      <param name="arg0">Первый из сцепляемых объектов.</param>
      <param name="arg1">Второй из сцепляемых объектов.</param>
      <param name="arg2">Третий из сцепляемых объектов.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.Object[])">
      <summary>Сцепляет строковые представления элементов указанного массива <see cref="T:System.Object" />.</summary>
      <returns>Сцепленные строковые представления значений элементов параметра <paramref name="args" />.</returns>
      <param name="args">Массив объектов, содержащий элементы, которые требуется сцепить.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="args" /> имеет значение null.</exception>
      <exception cref="T:System.OutOfMemoryException">Недостаточно памяти.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String)">
      <summary>Сцепляет два указанных экземпляра <see cref="T:System.String" />.</summary>
      <returns>Сцепление <paramref name="str0" /> и <paramref name="str1" />.</returns>
      <param name="str0">Первая из сцепляемых строк.</param>
      <param name="str1">Вторая из сцепляемых строк.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String,System.String)">
      <summary>Сцепляет три указанных экземпляра <see cref="T:System.String" />.</summary>
      <returns>Сцепление <paramref name="str0" />, <paramref name="str1" /> и <paramref name="str2" />.</returns>
      <param name="str0">Первая из сцепляемых строк.</param>
      <param name="str1">Вторая из сцепляемых строк.</param>
      <param name="str2">Третья из сцепляемых строк.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String,System.String,System.String,System.String)">
      <summary>Сцепляет четыре указанных экземпляра <see cref="T:System.String" />.</summary>
      <returns>Сцепление <paramref name="str0" />, <paramref name="str1" />, <paramref name="str2" /> и <paramref name="str3" />.</returns>
      <param name="str0">Первая из сцепляемых строк.</param>
      <param name="str1">Вторая из сцепляемых строк.</param>
      <param name="str2">Третья из сцепляемых строк.</param>
      <param name="str3">Четвертая из сцепляемых строк.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Concat(System.String[])">
      <summary>Сцепляет элементы указанного массива <see cref="T:System.String" />.</summary>
      <returns>Сцепленные элементы <paramref name="values" />.</returns>
      <param name="values">Массив строк.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="values" /> имеет значение null.</exception>
      <exception cref="T:System.OutOfMemoryException">Недостаточно памяти.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Contains(System.String)">
      <summary>Возвращает значение, указывающее, равен ли данный экземпляр заданному объекту или значению типа <see cref="T:System.String" />.</summary>
      <returns>true, если параметр <paramref name="value" /> встречается в строке или <paramref name="value" /> является пустой строкой (""); в противном случае — false.</returns>
      <param name="value">Строка для поиска.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>Копирует заданное число знаков начиная с указанной позиции в этом экземпляре до указанной позиции в массиве знаков Юникода.</summary>
      <param name="sourceIndex">Индекс первого символа в этом экземпляре, который необходимо скопировать.</param>
      <param name="destination">Массив символов Юникода, в который копируются символы в этом экземпляре.</param>
      <param name="destinationIndex">Индекс в массиве <paramref name="destination" />, с которого начинается копирование.</param>
      <param name="count">Число знаков в данном экземпляре, копируемых в <paramref name="destination" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="destination" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="sourceIndex" />, <paramref name="destinationIndex" /> или <paramref name="count" /> являются отрицательными.  -или-  <paramref name="count" /> больше чем длина подстроки от <paramref name="startIndex" /> до конца данного экземпляра.  -или-  <paramref name="count" /> больше, чем длина подмассива от <paramref name="destinationIndex" /> до конца <paramref name="destination" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.String.Empty">
      <summary>Представляет пустую строку. Это поле доступно только для чтения.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.EndsWith(System.String)">
      <summary>Определяет, совпадает ли конец данного экземпляра строки с указанной строкой.</summary>
      <returns>true, если конец этого экземпляра совпадает с <paramref name="value" />; в противном случае — false.</returns>
      <param name="value">Строка, которую необходимо сравнить с подстрокой, расположенной в конце этого экземпляра.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.EndsWith(System.String,System.StringComparison)">
      <summary>Определяет, совпадает ли конец экземпляра строки с заданной строкой при сравнении с учетом заданного параметра сравнения.</summary>
      <returns>true, если параметр <paramref name="value" /> соответствует концу данной строки; в противном случае — false.</returns>
      <param name="value">Строка, которую необходимо сравнить с подстрокой, расположенной в конце этого экземпляра.</param>
      <param name="comparisonType">Значение перечисления, определяющее способ сравнения данной строки со значением <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="comparisonType" /> не равно значению <see cref="T:System.StringComparison" />.</exception>
    </member>
    <member name="M:System.String.Equals(System.Object)">
      <summary>Определяет, равны ли значения этого экземпляра и указанного объекта, который также должен быть объектом <see cref="T:System.String" />.</summary>
      <returns>true, если <paramref name="obj" /> имеет тип <see cref="T:System.String" /> и его значение совпадает со значением данного экземпляра; в противном случае — false.</returns>
      <param name="obj">Строка для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String)">
      <summary>Определяет равны ли значения этого экземпляра и указанного объекта <see cref="T:System.String" />.</summary>
      <returns>true, если значение параметра <paramref name="value" /> совпадает со значением данного экземпляра; в противном случае — false.</returns>
      <param name="value">Строка для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.String)">
      <summary>Определяет, равны ли значения двух указанных объектов <see cref="T:System.String" />.</summary>
      <returns>Значение true, если значение <paramref name="a" /> совпадает со значением <paramref name="b" />; в противном случае — значение false. Если оба параметра <paramref name="a" /> и <paramref name="b" /> имеют значение null, метод возвращает значение true.</returns>
      <param name="a">Первая сравниваемая строка или значение null.</param>
      <param name="b">Вторая сравниваемая строка или значение null.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.String,System.StringComparison)">
      <summary>Определяет, равны ли значения двух указанных объектов <see cref="T:System.String" />. Параметр определяет язык и региональные параметры, учет регистра и правила сортировки, используемые при сравнении.</summary>
      <returns>true, если значения параметров <paramref name="a" /> и <paramref name="b" /> совпадают; в противном случае — false.</returns>
      <param name="a">Первая сравниваемая строка или значение null.</param>
      <param name="b">Вторая сравниваемая строка или значение null.</param>
      <param name="comparisonType">Одно из значений перечисления, определяющее правила сравнения.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="comparisonType" /> не равно значению <see cref="T:System.StringComparison" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Equals(System.String,System.StringComparison)">
      <summary>Определяет, равны ли значения этой строки и указанного объекта <see cref="T:System.String" />. Параметр определяет язык и региональные параметры, учет регистра и правила сортировки, используемые при сравнении.</summary>
      <returns>true, если значение параметра <paramref name="value" /> совпадает со значением данной строки; в противном случае — false.</returns>
      <param name="value">Строка для сравнения с данным экземпляром.</param>
      <param name="comparisonType">Одно из значений из перечисления, задающее способ сравнения строк.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="comparisonType" /> не равно значению <see cref="T:System.StringComparison" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])">
      <summary>Заменяет элементы формата в указанной строке строковым представлениями соответствующих объектов в указанном массиве. Параметр предоставляет сведения об особенностях форматирования, связанных с языком и региональными параметрами.</summary>
      <returns>Копия <paramref name="format" />, в которой элементы формата заменены строковыми представления соответствующих объектов в <paramref name="args" />.</returns>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <param name="format">Строка составного форматирования.</param>
      <param name="args">Массив объектов, содержащий нуль или более форматируемых объектов.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="format" /> или <paramref name="args" /> — null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> не является допустимым. -или-  Индекс элемента формата меньше нуля, либо больше или равен длине массива <paramref name="args" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Format(System.String,System.Object[])">
      <summary>Заменяет элемент формата в указанной строке строковым представлением соответствующего объекта в указанном массиве.</summary>
      <returns>Копия <paramref name="format" />, в которой элементы формата заменены строковыми представления соответствующих объектов в <paramref name="args" />.</returns>
      <param name="format">Строка составного форматирования.</param>
      <param name="args">Массив объектов, содержащий нуль или более форматируемых объектов.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="format" /> или <paramref name="args" /> — null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> не является допустимым. -или-  Индекс элемента формата меньше нуля, либо больше или равен длине массива <paramref name="args" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.GetHashCode">
      <summary>Возвращает хэш-код для этой строки.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char)">
      <summary>Возвращает индекс с отсчетом от нуля первого вхождения указанного символа Юникода в данной строке.</summary>
      <returns>Отсчитываемое от нуля значение индекса параметра <paramref name="value" />, если этот знак найден; в противном случае — значение -1.</returns>
      <param name="value">Искомый знак Юникода.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char,System.Int32)">
      <summary>Возвращает индекс с отсчетом от нуля первого вхождения указанного символа Юникода в данной строке. Поиск начинается с указанной позиции знака.</summary>
      <returns>Отсчитываемое от нуля значение индекса параметра <paramref name="value" />, если этот знак найден; в противном случае — значение -1.</returns>
      <param name="value">Искомый знак Юникода.</param>
      <param name="startIndex">Позиция, с которой начинается поиск.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="startIndex" /> меньше 0 (нуля) или больше, чем длина строки.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.Char,System.Int32,System.Int32)">
      <summary>Возвращает индекс с отсчетом от нуля первого вхождения указанного символа в данном экземпляре. Поиск начинается с указанной позиции знака; проверяется заданное количество позиций.</summary>
      <returns>Отсчитываемое от нуля значение индекса параметра <paramref name="value" />, если этот знак найден; в противном случае — значение -1.</returns>
      <param name="value">Искомый знак Юникода.</param>
      <param name="startIndex">Позиция, с которой начинается поиск.</param>
      <param name="count">Количество позиций знаков для проверки.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> или <paramref name="startIndex" /> является отрицательным. -или-  Параметр <paramref name="startIndex" /> больше, чем длина этой строки. -или- <paramref name="count" /> больше, чем длина данной строки минус <paramref name="startIndex" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String)">
      <summary>Возвращает индекс с отсчетом от нуля первого вхождения значения указанной строки в данном экземпляре.</summary>
      <returns>Положение в индексе (начиная с нуля) параметра <paramref name="value" />, если эта строка найдена, или значение -1, если она не найдена. Если значение <paramref name="value" /> равно <see cref="F:System.String.Empty" />, то возвращаемое значение равно 0.</returns>
      <param name="value">Строка для поиска.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32)">
      <summary>Возвращает индекс с отсчетом от нуля первого вхождения значения указанной строки в данном экземпляре. Поиск начинается с указанной позиции знака.</summary>
      <returns>Положение в индексе (начиная с нуля) параметра <paramref name="value" />, если эта строка найдена, или значение -1, если она не найдена. Если значение параметра <paramref name="value" /> равно <see cref="F:System.String.Empty" />, возвращаемым значением является <paramref name="startIndex" />.</returns>
      <param name="value">Строка для поиска.</param>
      <param name="startIndex">Позиция, с которой начинается поиск.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">параметр <paramref name="startIndex" /> меньше 0 (нуля) или больше длины этой строки.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32,System.Int32)">
      <summary>Возвращает индекс с отсчетом от нуля первого вхождения значения указанной строки в данном экземпляре. Поиск начинается с указанной позиции знака; проверяется заданное количество позиций.</summary>
      <returns>Положение в индексе (начиная с нуля) параметра <paramref name="value" />, если эта строка найдена, или значение -1, если она не найдена. Если значение параметра <paramref name="value" /> равно <see cref="F:System.String.Empty" />, возвращаемым значением является <paramref name="startIndex" />.</returns>
      <param name="value">Строка для поиска.</param>
      <param name="startIndex">Позиция, с которой начинается поиск.</param>
      <param name="count">Количество позиций знаков для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> или <paramref name="startIndex" /> является отрицательным. -или-  Параметр <paramref name="startIndex" /> больше, чем длина этой строки. -или- <paramref name="count" /> больше, чем длина данной строки минус <paramref name="startIndex" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)">
      <summary>Возвращает индекс с отсчетом от нуля первого вхождения указанной строки в текущем объекте <see cref="T:System.String" />. Параметры задают начальную позицию поиска в текущей строке, количество проверяемых знаков текущей строки и тип поиска.</summary>
      <returns>Положение в индексе (начиная с нуля) параметра <paramref name="value" />, если эта строка найдена, или значение -1, если она не найдена. Если значение <paramref name="value" /> равно <see cref="F:System.String.Empty" />, то возвращаемым значением является <paramref name="startIndex" />.</returns>
      <param name="value">Строка для поиска.</param>
      <param name="startIndex">Позиция, с которой начинается поиск.</param>
      <param name="count">Количество позиций знаков для проверки.</param>
      <param name="comparisonType">Одно из значений перечисления, определяющее правила поиска.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> или <paramref name="startIndex" /> является отрицательным. -или-  <paramref name="startIndex" /> больше, чем длина данного экземпляра. -или- <paramref name="count" /> больше, чем длина данной строки минус <paramref name="startIndex" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> не является допустимым значением <see cref="T:System.StringComparison" />.</exception>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)">
      <summary>Возвращает индекс с отсчетом от нуля первого вхождения указанной строки в текущем объекте <see cref="T:System.String" />. Параметры задают начальную позицию поиска в текущей строке и тип поиска.</summary>
      <returns>Положение в индексе (начиная с нуля) параметра <paramref name="value" />, если эта строка найдена, или значение -1, если она не найдена. Если значение <paramref name="value" /> равно <see cref="F:System.String.Empty" />, то возвращаемым значением является <paramref name="startIndex" />.</returns>
      <param name="value">Строка для поиска.</param>
      <param name="startIndex">Позиция, с которой начинается поиск.</param>
      <param name="comparisonType">Одно из значений перечисления, определяющее правила поиска.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">параметр <paramref name="startIndex" /> меньше 0 (нуля) или больше длины этой строки.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> не является допустимым значением <see cref="T:System.StringComparison" />.</exception>
    </member>
    <member name="M:System.String.IndexOf(System.String,System.StringComparison)">
      <summary>Возвращает индекс с отсчетом от нуля первого вхождения указанной строки в текущем объекте <see cref="T:System.String" />. Параметр определяет тип поиска заданной строки.</summary>
      <returns>Индекс позиции строки, заданной в параметре <paramref name="value" />, если она найдена, и -1, если нет. Если значение <paramref name="value" /> равно <see cref="F:System.String.Empty" />, то возвращаемое значение равно 0.</returns>
      <param name="value">Строка для поиска.</param>
      <param name="comparisonType">Одно из значений перечисления, определяющее правила поиска.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> не является допустимым значением <see cref="T:System.StringComparison" />.</exception>
    </member>
    <member name="M:System.String.IndexOfAny(System.Char[])">
      <summary>Возвращает индекс с отсчетом от нуля первого обнаруженного в данном экземпляре символа из указанного массива символов Юникода.</summary>
      <returns>Начинающееся с нуля значение индекса первого вхождения какого-либо знака из <paramref name="anyOf" /> в данном экземпляре; -1, если не найден ни один знак из <paramref name="anyOf" />.</returns>
      <param name="anyOf">Массив знаков Юникода, содержащий один или несколько искомых знаков.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="anyOf" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOfAny(System.Char[],System.Int32)">
      <summary>Возвращает индекс с отсчетом от нуля первого обнаруженного в данном экземпляре символа из указанного массива символов Юникода. Поиск начинается с указанной позиции знака.</summary>
      <returns>Начинающееся с нуля значение индекса первого вхождения какого-либо знака из <paramref name="anyOf" /> в данном экземпляре; -1, если не найден ни один знак из <paramref name="anyOf" />.</returns>
      <param name="anyOf">Массив знаков Юникода, содержащий один или несколько искомых знаков.</param>
      <param name="startIndex">Позиция, с которой начинается поиск.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="anyOf" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="startIndex" /> отрицательно. -или-  <paramref name="startIndex" /> больше числа знаков в данном экземпляре.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.IndexOfAny(System.Char[],System.Int32,System.Int32)">
      <summary>Возвращает индекс с отсчетом от нуля первого обнаруженного в данном экземпляре символа из указанного массива символов Юникода. Поиск начинается с указанной позиции знака; проверяется заданное количество позиций.</summary>
      <returns>Начинающееся с нуля значение индекса первого вхождения какого-либо знака из <paramref name="anyOf" /> в данном экземпляре; -1, если не найден ни один знак из <paramref name="anyOf" />.</returns>
      <param name="anyOf">Массив знаков Юникода, содержащий один или несколько искомых знаков.</param>
      <param name="startIndex">Позиция, с которой начинается поиск.</param>
      <param name="count">Количество позиций знаков для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="anyOf" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="count" /> или <paramref name="startIndex" /> является отрицательным. -или-  <paramref name="count" /> + <paramref name="startIndex" /> больше числа знаков в данном экземпляре.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Insert(System.Int32,System.String)">
      <summary>Возвращает новую строку, в которой указанная строка вставляется на указанной позиции индекса в данном экземпляре.</summary>
      <returns>Новая строка, эквивалентная данному экземпляру, но с тем отличием, что в положение <paramref name="startIndex" /> помещено значение <paramref name="value" />.</returns>
      <param name="startIndex">Положение отсчитываемого от нуля индекса вставки.</param>
      <param name="value">Строка, которую требуется вставить.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> является отрицательным или больше длины данного экземпляра.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IsNullOrEmpty(System.String)">
      <summary>Указывает, действительно ли указанная строка является строкой null или <see cref="F:System.String.Empty" />.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> равен null или пустой строке (""); в противном случае — значение false.</returns>
      <param name="value">Строка для проверки.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.IsNullOrWhiteSpace(System.String)">
      <summary>Указывает, является ли указанная строка значением null, пустой строкой или строкой, состоящей только из пробельных символов.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> имеет значение null или <see cref="F:System.String.Empty" />, либо если параметр <paramref name="value" /> содержит только пробелы.</returns>
      <param name="value">Строка для проверки.</param>
    </member>
    <member name="M:System.String.Join(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Сцепляет элементы созданной коллекции <see cref="T:System.Collections.Generic.IEnumerable`1" /> типа <see cref="T:System.String" />, помещая между ними заданный разделитель.</summary>
      <returns>Строка, состоящая из элементов <paramref name="values" />, разделяемых строками <paramref name="separator" />. Если <paramref name="values" /> не содержит членов, метод возвращает <see cref="F:System.String.Empty" />.</returns>
      <param name="separator">Строка для использования в качестве разделителя. <paramref name="separator" /> включается в возвращаемую строку, только если в <paramref name="values" /> более одного элемента.</param>
      <param name="values">Коллекция, содержащая сцепляемые строки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="values" /> имеет значение null.</exception>
    </member>
    <member name="M:System.String.Join``1(System.String,System.Collections.Generic.IEnumerable{``0})">
      <summary>Сцепляет элементы созданной коллекции, помещая между ними заданный разделитель.</summary>
      <returns>Строка, состоящая из элементов <paramref name="values" />, разделяемых строками <paramref name="separator" />. Если <paramref name="values" /> не содержит членов, метод возвращает <see cref="F:System.String.Empty" />.</returns>
      <param name="separator">Строка для использования в качестве разделителя. <paramref name="separator" /> включается в возвращаемую строку, только если в <paramref name="values" /> более одного элемента.</param>
      <param name="values">Коллекция, содержащая сцепляемые объекты.</param>
      <typeparam name="T">Тип элементов параметра <paramref name="values" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="values" /> имеет значение null.</exception>
    </member>
    <member name="M:System.String.Join(System.String,System.Object[])">
      <summary>Сцепляет элементы массива объектов, помещая между ними заданный разделитель.</summary>
      <returns>Строка, состоящая из элементов из параметра <paramref name="values" />, разделяемых строками <paramref name="separator" />. Если <paramref name="values" /> равен пустому массиву, метод возвращает значение <see cref="F:System.String.Empty" />.</returns>
      <param name="separator">Строка для использования в качестве разделителя. <paramref name="separator" /> включается в возвращаемую строку, только если в <paramref name="values" /> более одного элемента.</param>
      <param name="values">Массив, содержащий элементы, которые требуется сцепить.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="values" /> имеет значение null.</exception>
    </member>
    <member name="M:System.String.Join(System.String,System.String[])">
      <summary>Сцепляет все элементы массива строк, помещая между ними заданный разделитель.</summary>
      <returns>Строка, состоящая из элементов из параметра <paramref name="value" />, перемежаемых строками <paramref name="separator" />. Если <paramref name="value" /> равен пустому массиву, метод возвращает значение <see cref="F:System.String.Empty" />.</returns>
      <param name="separator">Строка для использования в качестве разделителя. <paramref name="separator" /> включается в возвращаемую строку, только если в <paramref name="value" /> более одного элемента.</param>
      <param name="value">Массив, содержащий элементы, которые требуется сцепить.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Join(System.String,System.String[],System.Int32,System.Int32)">
      <summary>Сцепляет указанные элементы массива строк, помещая между ними заданный разделитель.</summary>
      <returns>Строка, состоящая из строк из параметра <paramref name="value" />, разделяемых строками <paramref name="separator" />.  -или- <see cref="F:System.String.Empty" />, если параметр <paramref name="count" /> равен нулю, параметр <paramref name="value" /> не содержит элементов или параметр <paramref name="separator" /> и все элементы параметра <paramref name="value" /> равны <see cref="F:System.String.Empty" />.</returns>
      <param name="separator">Строка для использования в качестве разделителя. <paramref name="separator" /> включается в возвращаемую строку, только если в <paramref name="value" /> более одного элемента.</param>
      <param name="value">Массив, содержащий элементы, которые требуется сцепить.</param>
      <param name="startIndex">Первый используемый элемент массива <paramref name="value" />.</param>
      <param name="count">Число используемых элементов массива <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="startIndex" /> или <paramref name="count" /> меньше 0. -или-  <paramref name="startIndex" /> плюс <paramref name="count" /> больше количества элементов в <paramref name="value" />.</exception>
      <exception cref="T:System.OutOfMemoryException">Недостаточно памяти.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.Char)">
      <summary>Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанного символа Юникода в пределах данного экземпляра.</summary>
      <returns>Отсчитываемое от нуля значение индекса параметра <paramref name="value" />, если этот знак найден; в противном случае — значение -1.</returns>
      <param name="value">Знак Юникода, который необходимо найти.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.Char,System.Int32)">
      <summary>Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанного символа Юникода в пределах данного экземпляра. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки.</summary>
      <returns>Отсчитываемая от нуля позиция параметра <paramref name="value" /> в индексе, если этот символ найден, или значение -1, если он не найден или текущий экземпляр равен <see cref="F:System.String.Empty" />.</returns>
      <param name="value">Знак Юникода, который необходимо найти.</param>
      <param name="startIndex">Начальное положение поиска. Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а значение параметра <paramref name="startIndex" /> меньше нуля либо больше или равно длине этого экземпляра.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.Char,System.Int32,System.Int32)">
      <summary>Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанного символа Юникода в подстроке в пределах данного экземпляра. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки для заданного числа позиций символов.</summary>
      <returns>Отсчитываемая от нуля позиция параметра <paramref name="value" /> в индексе, если этот символ найден, или значение -1, если он не найден или текущий экземпляр равен <see cref="F:System.String.Empty" />.</returns>
      <param name="value">Знак Юникода, который необходимо найти.</param>
      <param name="startIndex">Начальное положение поиска. Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</param>
      <param name="count">Количество позиций знаков для проверки.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а значение параметра <paramref name="startIndex" /> меньше нуля либо больше или равно длине этого экземпляра. -или- Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" />  - Значение <paramref name="count" />+1 меньше нуля.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String)">
      <summary>Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанной строки в данном экземпляре.</summary>
      <returns>Положение в индексе (начиная с нуля) параметра <paramref name="value" />, если эта строка найдена, или значение -1, если она не найдена. Если параметр <paramref name="value" /> равен <see cref="F:System.String.Empty" />, возвращаемым значением является последняя позиция в индексе данного экземпляра.</returns>
      <param name="value">Строка для поиска.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32)">
      <summary>Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанной строки в данном экземпляре. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки.</summary>
      <returns>Отсчитываемое от нуля значение индекса параметра <paramref name="value" />, если строка найдена; значение -1, если строка не найдена или значение текущего экземпляра равно <see cref="F:System.String.Empty" />. Если значение параметра <paramref name="value" /> равно <see cref="F:System.String.Empty" />, возвращаемым значением является наименьшее значение из <paramref name="startIndex" /> и последнего значения индекса в данном экземпляре.</returns>
      <param name="value">Строка для поиска.</param>
      <param name="startIndex">Позиция, с которой начинается поиск. Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> меньше нуля либо больше длины текущего экземпляра.  -или- Текущий экземпляр равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> больше нуля.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32)">
      <summary>Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанной строки в данном экземпляре. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки для заданного числа позиций символов.</summary>
      <returns>Отсчитываемое от нуля значение индекса параметра <paramref name="value" />, если строка найдена; значение -1, если строка не найдена или значение текущего экземпляра равно <see cref="F:System.String.Empty" />. Если значение параметра <paramref name="value" /> равно <see cref="F:System.String.Empty" />, возвращаемым значением является наименьшее значение из <paramref name="startIndex" /> и последнего значения индекса в данном экземпляре.</returns>
      <param name="value">Строка для поиска.</param>
      <param name="startIndex">Позиция, с которой начинается поиск. Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</param>
      <param name="count">Количество позиций знаков для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="count" /> отрицательно. -или- Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> имеет отрицательное значение. -или-  Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> больше, чем длина этого экземпляра. -или- Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" />  - Значение <paramref name="count" /> + 1 задает позицию вне пределов данного экземпляра.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)">
      <summary>Возвращает позицию индекса с отсчетом от нуля последнего вхождения указанной строки в данном экземпляре. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки для заданного числа позиций символов. Параметр определяет тип сравнения для выполнения во время поиска заданной строки.</summary>
      <returns>Позиция индекса параметра <paramref name="value" />, если эта строка найдена, или -1, если она не найдена или если текущий экземпляр равен <see cref="F:System.String.Empty" />. Если значение параметра <paramref name="value" /> равно <see cref="F:System.String.Empty" />, возвращаемым значением является наименьшее значение из <paramref name="startIndex" /> и последнего значения индекса в данном экземпляре.</returns>
      <param name="value">Строка для поиска.</param>
      <param name="startIndex">Позиция, с которой начинается поиск. Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</param>
      <param name="count">Количество позиций знаков для проверки.</param>
      <param name="comparisonType">Одно из значений перечисления, определяющее правила поиска.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="count" /> отрицательно. -или- Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> имеет отрицательное значение. -или-  Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> больше, чем длина этого экземпляра. -или- Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> +1 - <paramref name="count" /> задает позицию за пределами данного экземпляра.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> не является допустимым значением <see cref="T:System.StringComparison" />.</exception>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)">
      <summary>Возвращает индекс с отсчетом от нуля последнего вхождения указанной строки в текущем объекте <see cref="T:System.String" />. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки. Параметр определяет тип сравнения для выполнения во время поиска заданной строки.</summary>
      <returns>Позиция индекса параметра <paramref name="value" />, если эта строка найдена, или -1, если она не найдена или если текущий экземпляр равен <see cref="F:System.String.Empty" />. Если значение параметра <paramref name="value" /> равно <see cref="F:System.String.Empty" />, возвращаемым значением является наименьшее значение из <paramref name="startIndex" /> и последнего значения индекса в данном экземпляре.</returns>
      <param name="value">Строка для поиска.</param>
      <param name="startIndex">Позиция, с которой начинается поиск. Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</param>
      <param name="comparisonType">Одно из значений перечисления, определяющее правила поиска.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> меньше нуля либо больше длины текущего экземпляра.  -или- Текущий экземпляр равен <see cref="F:System.String.Empty" />, а <paramref name="startIndex" /> больше нуля.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> не является допустимым значением <see cref="T:System.StringComparison" />.</exception>
    </member>
    <member name="M:System.String.LastIndexOf(System.String,System.StringComparison)">
      <summary>Возвращает индекс с отсчетом от нуля последнего вхождения указанной строки в текущем объекте <see cref="T:System.String" />. Параметр определяет тип поиска заданной строки.</summary>
      <returns>Индекс позиции строки, заданной в параметре <paramref name="value" />, если она найдена, и -1, если нет. Если параметр <paramref name="value" /> равен <see cref="F:System.String.Empty" />, возвращаемым значением является последняя позиция в индексе данного экземпляра.</returns>
      <param name="value">Строка для поиска.</param>
      <param name="comparisonType">Одно из значений перечисления, определяющее правила поиска.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> не является допустимым значением <see cref="T:System.StringComparison" />.</exception>
    </member>
    <member name="M:System.String.LastIndexOfAny(System.Char[])">
      <summary>Возвращает позицию индекса с отсчетом от нуля последнего вхождения в данном экземпляре какого-либо одного или нескольких символов, указанных в массиве символов Юникода.</summary>
      <returns>Значение индекса последнего вхождения какого-либо знака из <paramref name="anyOf" /> в данном экземпляре; -1, если ни один знак из <paramref name="anyOf" /> не был найден.</returns>
      <param name="anyOf">Массив знаков Юникода, содержащий один или несколько искомых знаков.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="anyOf" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOfAny(System.Char[],System.Int32)">
      <summary>Возвращает позицию индекса с отсчетом от нуля последнего вхождения в данном экземпляре какого-либо одного или нескольких символов, указанных в массиве символов Юникода. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки.</summary>
      <returns>Значение индекса последнего вхождения какого-либо знака из <paramref name="anyOf" /> в данном экземпляре; -1, если ни один знак из <paramref name="anyOf" /> не был найден или текущий экземпляр равен <see cref="F:System.String.Empty" />.</returns>
      <param name="anyOf">Массив знаков Юникода, содержащий один или несколько искомых знаков.</param>
      <param name="startIndex">Позиция, с которой начинается поиск. Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="anyOf" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Текущий экземпляр не равен <see cref="F:System.String.Empty" />, и <paramref name="startIndex" /> задает позицию за пределами данного экземпляра.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.LastIndexOfAny(System.Char[],System.Int32,System.Int32)">
      <summary>Возвращает позицию индекса с отсчетом от нуля последнего вхождения в данном экземпляре какого-либо одного или нескольких символов, указанных в массиве символов Юникода. Поиск начинается с указанной позиции символа и выполняется в обратном направлении до начала строки для заданного числа позиций символов.</summary>
      <returns>Значение индекса последнего вхождения какого-либо знака из <paramref name="anyOf" /> в данном экземпляре; -1, если ни один знак из <paramref name="anyOf" /> не был найден или текущий экземпляр равен <see cref="F:System.String.Empty" />.</returns>
      <param name="anyOf">Массив знаков Юникода, содержащий один или несколько искомых знаков.</param>
      <param name="startIndex">Позиция, с которой начинается поиск. Поиск выполняется от индекса, заданного параметром <paramref name="startIndex" />, до начала данного экземпляра.</param>
      <param name="count">Количество позиций знаков для проверки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="anyOf" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Текущий экземпляр не равен значению <see cref="F:System.String.Empty" />, и значение параметра <paramref name="count" /> или <paramref name="startIndex" /> является отрицательным. -или-  Текущий экземпляр не равен значению <see cref="F:System.String.Empty" />, и значение параметра <paramref name="startIndex" /> минус <paramref name="count" /> +1 является отрицательным.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.String.Length">
      <summary>Возвращает число знаков в текущем объекте <see cref="T:System.String" />.</summary>
      <returns>Количество знаков в текущей строке.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.op_Equality(System.String,System.String)">
      <summary>Определяет, равны ли значения двух указанных строк.</summary>
      <returns>Значение true, если значение <paramref name="a" /> совпадает со значением <paramref name="b" />; в противном случае — значение false.</returns>
      <param name="a">Первая сравниваемая строка или значение null.</param>
      <param name="b">Вторая сравниваемая строка или значение null.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.String.op_Inequality(System.String,System.String)">
      <summary>Определяет, различаются ли значения двух указанных строк.</summary>
      <returns>true, если значение <paramref name="a" /> отличается от значения <paramref name="b" />; в противном случае — false.</returns>
      <param name="a">Первая сравниваемая строка или значение null.</param>
      <param name="b">Вторая сравниваемая строка или значение null.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.String.PadLeft(System.Int32)">
      <summary>Возвращает новую строку, в которой знаки данного экземпляра выровнены по правому краю путем добавления слева пробелов до указанной общей длины.</summary>
      <returns>Новая строка, эквивалентная данному экземпляру, но с выравниванием по правому краю и с добавленными слева пробелами, необходимыми для достижения длины <paramref name="totalWidth" />. Однако если значение параметра <paramref name="totalWidth" /> меньше длины данного экземпляра, метод возвращает ссылку на имеющийся экземпляр. Если значение параметра <paramref name="totalWidth" /> равно длине данного экземпляра, метод возвращает новую строку, идентичную данному экземпляру.</returns>
      <param name="totalWidth">Количество знаков в полученной строке равно числу исходных знаков плюс некоторое количество добавленных для заполнения знаков.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="totalWidth" /> меньше нуля.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.PadLeft(System.Int32,System.Char)">
      <summary>Возвращает новую строку, в которой знаки данного экземпляра выровнены по правому краю путем добавления слева пробелов или указанного знака Юникода до указанной общей длины.</summary>
      <returns>Новая строка, эквивалентная данному экземпляру, но с выравниванием по правому краю и с добавленными слева знаками <paramref name="paddingChar" />, необходимыми для достижения длины <paramref name="totalWidth" />. Однако если значение параметра <paramref name="totalWidth" /> меньше длины данного экземпляра, метод возвращает ссылку на имеющийся экземпляр. Если значение параметра <paramref name="totalWidth" /> равно длине данного экземпляра, метод возвращает новую строку, идентичную данному экземпляру.</returns>
      <param name="totalWidth">Количество знаков в полученной строке равно числу исходных знаков плюс некоторое количество добавленных для заполнения знаков.</param>
      <param name="paddingChar">Добавляемый в качестве заполнителя знак Юникода.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="totalWidth" /> меньше нуля.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.PadRight(System.Int32)">
      <summary>Возвращает новую строку, в которой знаки данной строки выровнены по левому краю путем добавления справа пробелов до указанной общей длины.</summary>
      <returns>Новая строка, эквивалентная данному экземпляру, но с выравниванием по левому краю и с добавленными справа пробелами, необходимыми для достижения длины <paramref name="totalWidth" />. Однако если значение параметра <paramref name="totalWidth" /> меньше длины данного экземпляра, метод возвращает ссылку на имеющийся экземпляр. Если значение параметра <paramref name="totalWidth" /> равно длине данного экземпляра, метод возвращает новую строку, идентичную данному экземпляру.</returns>
      <param name="totalWidth">Количество знаков в полученной строке равно числу исходных знаков плюс некоторое количество добавленных для заполнения знаков.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="totalWidth" /> меньше нуля.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.PadRight(System.Int32,System.Char)">
      <summary>Возвращает новую строку, в которой знаки данной строки выровнены по левому краю путем добавления справа пробелов или указанного знака Юникода до указанной общей длины.</summary>
      <returns>Новая строка, эквивалентная данному экземпляру, но с выравниванием по левому краю и с добавленными справа знаками <paramref name="paddingChar" />, необходимыми для достижения длины <paramref name="totalWidth" />.  Однако если значение параметра <paramref name="totalWidth" /> меньше длины данного экземпляра, метод возвращает ссылку на имеющийся экземпляр. Если значение параметра <paramref name="totalWidth" /> равно длине данного экземпляра, метод возвращает новую строку, идентичную данному экземпляру.</returns>
      <param name="totalWidth">Количество знаков в полученной строке равно числу исходных знаков плюс некоторое количество добавленных для заполнения знаков.</param>
      <param name="paddingChar">Добавляемый в качестве заполнителя знак Юникода.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="totalWidth" /> меньше нуля.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.Remove(System.Int32)">
      <summary>Возвращает новую строку, в которой были удалены все символы, начиная с указанной позиции и до конца в текущем экземпляре.</summary>
      <returns>Новая строка, эквивалентная данной строке за минусом удаленных знаков.</returns>
      <param name="startIndex">Позиция (начиная с нуля), с которой начинается удаление знаков.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> меньше нуля. -или-  Значение параметра <paramref name="startIndex" /> задает позицию вне пределов данной строки.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Remove(System.Int32,System.Int32)">
      <summary>Возвращает новую строку, в которой было удалено указанное число символов в указанной позиции.</summary>
      <returns>Новая строка, эквивалентная данному экземпляру за минусом удаленных знаков.</returns>
      <param name="startIndex">Позиция (начиная с нуля), с которой начинается удаление знаков.</param>
      <param name="count">Число символов для удаления.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> или <paramref name="count" /> меньше нуля. -или-  Значение <paramref name="startIndex" /> плюс <paramref name="count" /> задает позицию вне пределов данного экземпляра.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Replace(System.Char,System.Char)">
      <summary>Возвращает новую строку, в которой все вхождения заданного знака Юникода в текущем экземпляре заменены другим заданным знаком Юникода.</summary>
      <returns>Строка, эквивалентная данному экземпляру, но с тем отличием, что все вхождения <paramref name="oldChar" /> заменены на <paramref name="newChar" />. Если <paramref name="oldChar" /> не обнаружен в текущем экземпляре метод возвращает текущий экземпляр без изменений.</returns>
      <param name="oldChar">Заменяемый знак Юникода.</param>
      <param name="newChar">Знак Юникода для замены всех обнаруженных вхождений <paramref name="oldChar" />.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Replace(System.String,System.String)">
      <summary>Возвращает новую строку, в которой все вхождения заданной строки в текущем экземпляре заменены другой заданной строкой.</summary>
      <returns>Строка, эквивалентная текущей строке, но с тем отличием, что все вхождения <paramref name="oldValue" /> заменены на <paramref name="newValue" />. Если <paramref name="oldValue" /> не обнаружен в текущем экземпляре метод возвращает текущий экземпляр без изменений.</returns>
      <param name="oldValue">Строка, которую требуется заменить.</param>
      <param name="newValue">Строка для замены всех вхождений <paramref name="oldValue" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="oldValue" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="oldValue" /> является пустой строкой ("").</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[])">
      <summary>Возвращает строковый массив, содержащий подстроки данного экземпляра, разделенные элементами заданного массива знаков Юникода.</summary>
      <returns>Массив, элементы которого содержат подстроки данного экземпляра, разделенные одним или более знаками из <paramref name="separator" />. Дополнительные сведения см. в разделе "Замечания".</returns>
      <param name="separator">Массив знаков Юникода, разделяющих подстроки в данном экземпляре, пустой массив, не содержащий разделителей, или null.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[],System.Int32)">
      <summary>Возвращает строковый массив, содержащий подстроки данного экземпляра, разделенные элементами заданного массива знаков Юникода. Параметр указывает максимальное число возвращаемых подстрок.</summary>
      <returns>Массив, элементы которого содержат подстроки данного экземпляра, разделенные одним или более знаками из <paramref name="separator" />. Дополнительные сведения см. в разделе "Замечания".</returns>
      <param name="separator">Массив знаков Юникода, разделяющих подстроки в данном экземпляре, пустой массив, не содержащий разделителей, или null.</param>
      <param name="count">Максимальное число возвращаемых подстрок.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="count" /> отрицательно.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[],System.Int32,System.StringSplitOptions)">
      <summary>Возвращает строковый массив, содержащий подстроки данной строки, разделенные элементами заданного массива знаков Юникода. Параметры задают максимальное количество возвращаемых подстрок и значение, указывающее, следует ли возвращать пустые элементы массива.</summary>
      <returns>Массив, элементы которого содержат подстроки данной строки, разделенные одним или более знаками из <paramref name="separator" />. Дополнительные сведения см. в разделе "Замечания".</returns>
      <param name="separator">Массив знаков Юникода, разделяющих подстроки в данной строке, пустой массив, не содержащий разделителей, или null.</param>
      <param name="count">Максимальное число возвращаемых подстрок.</param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, чтобы исключить пустые элементы из возвращаемого массива; или <see cref="F:System.StringSplitOptions.None" /> для включения пустых элементов в возвращаемый массив.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="count" /> отрицательно.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> не является одним из значений <see cref="T:System.StringSplitOptions" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.Char[],System.StringSplitOptions)">
      <summary>Возвращает строковый массив, содержащий подстроки данной строки, разделенные элементами заданного массива знаков Юникода. Параметр указывает, следует ли возвращать пустые элементы массива.</summary>
      <returns>Массив, элементы которого содержат подстроки данной строки, разделенные одним или более знаками из <paramref name="separator" />. Дополнительные сведения см. в разделе "Замечания".</returns>
      <param name="separator">Массив знаков Юникода, разделяющих подстроки в данной строке, пустой массив, не содержащий разделителей, или null.</param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, чтобы исключить пустые элементы из возвращаемого массива; или <see cref="F:System.StringSplitOptions.None" /> для включения пустых элементов в возвращаемый массив.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> не является одним из значений <see cref="T:System.StringSplitOptions" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.String[],System.Int32,System.StringSplitOptions)">
      <summary>Возвращает строковый массив, содержащий подстроки данной строки, разделенные элементами заданного массива строк. Параметры задают максимальное количество возвращаемых подстрок и значение, указывающее, следует ли возвращать пустые элементы массива.</summary>
      <returns>Массив, элементы которого содержат подстроки данной строки, разделенные одной или более строками из <paramref name="separator" />. Дополнительные сведения см. в разделе "Замечания".</returns>
      <param name="separator">Массив строк, разделяющих подстроки в данной строке, пустой массив, не содержащий разделителей, или null.</param>
      <param name="count">Максимальное число возвращаемых подстрок.</param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, чтобы исключить пустые элементы из возвращаемого массива; или <see cref="F:System.StringSplitOptions.None" /> для включения пустых элементов в возвращаемый массив.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="count" /> отрицательно.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> не является одним из значений <see cref="T:System.StringSplitOptions" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Split(System.String[],System.StringSplitOptions)">
      <summary>Возвращает строковый массив, содержащий подстроки данной строки, разделенные элементами заданного массива строк. Параметр указывает, следует ли возвращать пустые элементы массива.</summary>
      <returns>Массив, элементы которого содержат подстроки данной строки, разделенные одной или более строками из <paramref name="separator" />. Дополнительные сведения см. в разделе "Замечания".</returns>
      <param name="separator">Массив строк, разделяющих подстроки в данной строке, пустой массив, не содержащий разделителей, или null.</param>
      <param name="options">
        <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, чтобы исключить пустые элементы из возвращаемого массива; или <see cref="F:System.StringSplitOptions.None" /> для включения пустых элементов в возвращаемый массив.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> не является одним из значений <see cref="T:System.StringSplitOptions" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.StartsWith(System.String)">
      <summary>Определяет, совпадает ли начало данного экземпляра строки с указанной строкой.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> соответствует началу данной строки; в противном случае — значение false.</returns>
      <param name="value">Строка, подлежащая сравнению.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.StartsWith(System.String,System.StringComparison)">
      <summary>Определяет, совпадает ли начало этого экземпляра строки с заданной строкой при сравнении с учетом заданного параметра сравнения.</summary>
      <returns>Значение true, если данный экземпляр начинается со значения <paramref name="value" />; в противном случае — значение false.</returns>
      <param name="value">Строка, подлежащая сравнению.</param>
      <param name="comparisonType">Значение перечисления, определяющее способ сравнения данной строки со значением <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="comparisonType" /> не равно значению <see cref="T:System.StringComparison" />.</exception>
    </member>
    <member name="M:System.String.Substring(System.Int32)">
      <summary>Извлекает подстроку из данного экземпляра. Подстрока начинается в указанном положении символов и продолжается до конца строки.</summary>
      <returns>Строка, эквивалентная подстроке, которая начинается с <paramref name="startIndex" /> в данном экземпляре, или <see cref="F:System.String.Empty" />, если значение <paramref name="startIndex" /> равно длине данного экземпляра.</returns>
      <param name="startIndex">Позиция первого знака подстроки в данном экземпляре (с нуля).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> меньше нуля или больше длины данного экземпляра.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Substring(System.Int32,System.Int32)">
      <summary>Извлекает подстроку из данного экземпляра. Подстрока начинается с указанной позиции знака и имеет указанную длину.</summary>
      <returns>Строка, эквивалентная подстроке длиной <paramref name="length" />, которая начинается с <paramref name="startIndex" /> в данном экземпляре, или <see cref="F:System.String.Empty" />, если значение <paramref name="startIndex" /> равно длине данного экземпляра, а значение <paramref name="length" /> равно нулю.</returns>
      <param name="startIndex">Позиция первого знака подстроки в данном экземпляре (с нуля).</param>
      <param name="length">Число символов в подстроке.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="startIndex" /> плюс <paramref name="length" /> задает позицию вне пределов данного экземпляра. -или-  Значение параметра <paramref name="startIndex" /> или <paramref name="length" /> меньше нуля.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий перебор элементов текущего объекта <see cref="T:System.String" />.</summary>
      <returns>Перечислитель, который можно использовать для перебора элементов текущей строки.</returns>
    </member>
    <member name="M:System.String.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Значение  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки. 	
Zero  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и объект <paramref name="value" />. 	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="value" /> в порядке сортировки. -или-  Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не является объектом типа <see cref="T:System.String" />.</exception>
    </member>
    <member name="M:System.String.ToCharArray">
      <summary>Копирует знаки данного экземпляра в массив знаков Юникода.</summary>
      <returns>Массив знаков Юникода, элементами которого являются отдельные знаки из данного экземпляра. Если этот экземпляр является пустой строкой, то возвращаемый массив пуст и его длина равна нулю.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.ToCharArray(System.Int32,System.Int32)">
      <summary>Копирует знаки из указанной подстроки данного экземпляра в массив знаков Юникода.</summary>
      <returns>Массив знаков Юникода, элементами которого являются <paramref name="length" /> знаков данного экземпляра начиная с позиции <paramref name="startIndex" />.</returns>
      <param name="startIndex">Начальная позиция подстроки в данном экземпляре.</param>
      <param name="length">Длина подстроки в данном экземпляре.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> или <paramref name="length" /> меньше нуля. -или-  <paramref name="startIndex" /> плюс <paramref name="length" /> больше длины данного экземпляра.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.ToLower">
      <summary>Возвращает копию этой строки, переведенную в нижний регистр.</summary>
      <returns>Строка в нижнем регистре.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.ToLowerInvariant">
      <summary>Возвращает копию этого объекта <see cref="T:System.String" />, переведенную в нижний регистр, используя правила учета регистра инвариантного языка и региональных параметров.</summary>
      <returns>Эквивалент текущей строки в нижнем регистре.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.ToString">
      <summary>Возвращает этот экземпляр <see cref="T:System.String" />; реальное преобразование не осуществляется.</summary>
      <returns>Текущая строка.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.ToUpper">
      <summary>Возвращает копию этой строки, переведенную в верхний регистр.</summary>
      <returns>Эквивалент текущей строки в верхнем регистре.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.ToUpperInvariant">
      <summary>Возвращает копию этого объекта <see cref="T:System.String" />, переведенную в верхний регистр, используя правила учета регистра инвариантного языка и региональных параметров.</summary>
      <returns>Эквивалент текущей строки в верхнем регистре.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.String.Trim">
      <summary>Удаляет все начальные и конечные знаки пробела из текущего объекта <see cref="T:System.String" />.</summary>
      <returns>Строка, оставшаяся после удаления всех знаков пробела из начала и конца текущей строки.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.Trim(System.Char[])">
      <summary>Удаляет все начальные и конечные вхождения набора знаков, заданного в виде массива, из текущего объекта <see cref="T:System.String" />.</summary>
      <returns>Строка, оставшаяся после удаления всех вхождений символов, заданных в параметре <paramref name="trimChars" />, из начала и конца текущей строки. Если значением параметра <paramref name="trimChars" /> является null или пустой массив, удаляются знаки пробела.</returns>
      <param name="trimChars">Массив удаляемых знаков Юникода или null.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.String.TrimEnd(System.Char[])">
      <summary>Удаляет все конечные вхождения набора знаков, заданного в виде массива, из текущего объекта <see cref="T:System.String" />.</summary>
      <returns>Строка, оставшаяся после удаления всех вхождений символов, заданных в параметре <paramref name="trimChars" />, из конца текущей строки. Если значением параметра <paramref name="trimChars" /> является null или пустой массив, удаляются знаки пробела в Юникоде.</returns>
      <param name="trimChars">Массив удаляемых знаков Юникода или null.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.String.TrimStart(System.Char[])">
      <summary>Удаляет все начальные вхождения набора знаков, заданного в виде массива, из текущего объекта <see cref="T:System.String" />.</summary>
      <returns>Строка, оставшаяся после удаления всех вхождений символов, заданных в параметре <paramref name="trimChars" />, из начала текущей строки. Если значением параметра <paramref name="trimChars" /> является null или пустой массив, удаляются знаки пробела.</returns>
      <param name="trimChars">Массив удаляемых знаков Юникода или null.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.StringComparison">
      <summary>Задает язык и региональные параметры, регистр и правила сортировки, используемые определенными перегрузками методов <see cref="M:System.String.Compare(System.String,System.String)" /> и <see cref="M:System.String.Equals(System.Object)" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.StringComparison.CurrentCulture">
      <summary>Сравнивает строку, используя правила сортировки с учетом текущего языка и региональных параметров.</summary>
    </member>
    <member name="F:System.StringComparison.CurrentCultureIgnoreCase">
      <summary>Сравнивает строки, используя правила сортировки с учетом текущего языка и региональных параметров и без учета регистра сравниваемых строк.</summary>
    </member>
    <member name="F:System.StringComparison.Ordinal">
      <summary>Сравнивает строки, используя правила сортировки по порядковому номеру.</summary>
    </member>
    <member name="F:System.StringComparison.OrdinalIgnoreCase">
      <summary>Сравнивает строки, используя правила сортировки по порядковому номеру без учета регистра сравниваемых строк.</summary>
    </member>
    <member name="T:System.StringSplitOptions">
      <summary>Указывает, включает или исключает пустые строки из возвращаемого значения соответствующий метод <see cref="Overload:System.String.Split" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.StringSplitOptions.None">
      <summary>Возвращаемое значение содержит элементы массива, содержащие пустые строки.</summary>
    </member>
    <member name="F:System.StringSplitOptions.RemoveEmptyEntries">
      <summary>Возвращаемое значение не содержит элементы массива, содержащие пустые строки.</summary>
    </member>
    <member name="T:System.ThreadStaticAttribute">
      <summary>Указывает, что значение статического поля уникально для каждого потока.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.ThreadStaticAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ThreadStaticAttribute" />.</summary>
    </member>
    <member name="T:System.TimeoutException">
      <summary>Исключение, возникающее при истечении времени, предоставленного процессу или операции.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeoutException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.TimeoutException" />.</summary>
    </member>
    <member name="M:System.TimeoutException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.TimeoutException" /> указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.TimeoutException.#ctor(System.String,System.Exception)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.TimeoutException" /> с указанным сообщением об ошибке и внутренним исключением.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.TimeSpan">
      <summary>Представляет интервал времени.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.TimeSpan" /> с заданным количеством часов, минут и секунд.</summary>
      <param name="hours">Количество часов.</param>
      <param name="minutes">Количество минут.</param>
      <param name="seconds">Количество секунд.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Данные параметры определяют значение <see cref="T:System.TimeSpan" />, меньшее <see cref="F:System.TimeSpan.MinValue" /> или большее <see cref="F:System.TimeSpan.MaxValue" />.</exception>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.TimeSpan" /> с заданным количеством дней, часов, минут и секунд.</summary>
      <param name="days">Количество дней.</param>
      <param name="hours">Количество часов.</param>
      <param name="minutes">Количество минут.</param>
      <param name="seconds">Количество секунд.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Данные параметры определяют значение <see cref="T:System.TimeSpan" />, меньшее <see cref="F:System.TimeSpan.MinValue" /> или большее <see cref="F:System.TimeSpan.MaxValue" />.</exception>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Выполняет инициализацию нового экземпляра структуры <see cref="T:System.TimeSpan" /> с заданным количеством дней, часов, минут, секунд и миллисекунд.</summary>
      <param name="days">Количество дней.</param>
      <param name="hours">Количество часов.</param>
      <param name="minutes">Количество минут.</param>
      <param name="seconds">Количество секунд.</param>
      <param name="milliseconds">Количество миллисекунд.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Данные параметры определяют значение <see cref="T:System.TimeSpan" />, меньшее <see cref="F:System.TimeSpan.MinValue" /> или большее <see cref="F:System.TimeSpan.MaxValue" />.</exception>
    </member>
    <member name="M:System.TimeSpan.#ctor(System.Int64)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.TimeSpan" /> заданным числом тактов.</summary>
      <param name="ticks">Интервал времени, выраженный в единицах измерения, равных 100 нс.</param>
    </member>
    <member name="M:System.TimeSpan.Add(System.TimeSpan)">
      <summary>Возвращает новый объект <see cref="T:System.TimeSpan" />, значение которого равно сумме указанного объекта <see cref="T:System.TimeSpan" /> и данного экземпляра.</summary>
      <returns>Новый объект, представляющий сумму значений данного экземпляра и параметра <paramref name="ts" />.</returns>
      <param name="ts">Добавляемый интервал времени.</param>
      <exception cref="T:System.OverflowException">Результирующий объект <see cref="T:System.TimeSpan" /> меньше, чем <see cref="F:System.TimeSpan.MinValue" /> или больше, чем <see cref="F:System.TimeSpan.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)">
      <summary>Сравнивает два значения <see cref="T:System.TimeSpan" /> и возвращает целое значение, которое показывает, является ли первое значение короче, равно или длиннее второго значения.</summary>
      <returns>Одно из следующих значений. 
Значение  	Описание  	
-1  	Значение параметра <paramref name="t1" /> короче значения параметра <paramref name="t2" />.  	
0  	<paramref name="t1" /> равно <paramref name="t2" />.  	
1  	Значение параметра <paramref name="t1" /> длиннее значения параметра <paramref name="t2" />.</returns>
      <param name="t1">Первый из сравниваемых интервалов времени.</param>
      <param name="t2">Второй из сравниваемых интервалов времени.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.CompareTo(System.TimeSpan)">
      <summary>Сравнивает данный экземпляр с указанным объектом <see cref="T:System.TimeSpan" /> и возвращает целое число, которое показывает, как соотносится данный экземпляр с объектом <see cref="T:System.TimeSpan" />: короче него, равен ему или длиннее указанного объекта.</summary>
      <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />. 
Значение  	Описание  	
Отрицательное целое число  	Этот экземпляр короче параметра <paramref name="value" />.  	
Ноль  	Этот экземпляр и параметр <paramref name="value" /> равны.  	
Положительное целое число  	Этот экземпляр длиннее параметра <paramref name="value" />.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Days">
      <summary>Возвращает компонент дней периода времени, представленного текущей структурой <see cref="T:System.TimeSpan" />.</summary>
      <returns>Компонент дня данного экземпляра. Возвращаемое значение может быть положительным или отрицательным.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Duration">
      <summary>Возвращает новый объект <see cref="T:System.TimeSpan" />, значением которого является абсолютное значение текущего объекта <see cref="T:System.TimeSpan" />.</summary>
      <returns>Новый объект, значением которого является абсолютное значение текущего объекта <see cref="T:System.TimeSpan" />.</returns>
      <exception cref="T:System.OverflowException">Значением этого экземпляра является <see cref="F:System.TimeSpan.MinValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>true, если параметр <paramref name="value" /> является объектом <see cref="T:System.TimeSpan" /> и представляет тот же интервал времени, что и текущий объект <see cref="T:System.TimeSpan" />; в противном случае — false.</returns>
      <param name="value">Объект для сравнения с данным экземпляром.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Equals(System.TimeSpan)">
      <summary>Возвращает значение, указывающее, равен ли данный экземпляр заданному объекту <see cref="T:System.TimeSpan" />.</summary>
      <returns>true, если <paramref name="obj" /> представляет то т же интервал времени, что и данный экземпляр; в противном случае — false.</returns>
      <param name="obj">Объект для сравнения с данным экземпляром.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)">
      <summary>Возвращает значение, указывающее, равны ли два заданных экземпляра <see cref="T:System.TimeSpan" />.</summary>
      <returns>Значение true, если значения параметров <paramref name="t1" /> и <paramref name="t2" /> равны; в противном случае — значение false.</returns>
      <param name="t1">Первый из сравниваемых интервалов времени.</param>
      <param name="t2">Второй из сравниваемых интервалов времени.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromDays(System.Double)">
      <summary>Возвращает объект <see cref="T:System.TimeSpan" />, представляющий заданное количество дней, округленное до ближайшей миллисекунды.</summary>
      <returns>Объект, представляющий объект <paramref name="value" />.</returns>
      <param name="value">Количество дней, округленное до ближайшей миллисекунды.</param>
      <exception cref="T:System.OverflowException">Значение параметра <paramref name="value" /> меньше значения <see cref="F:System.TimeSpan.MinValue" /> или больше значения <see cref="F:System.TimeSpan.MaxValue" />.  -или- Параметр <paramref name="value" /> имеет значение <see cref="F:System.Double.PositiveInfinity" />. -или- Параметр <paramref name="value" /> имеет значение <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="value" /> — <see cref="F:System.Double.NaN" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromHours(System.Double)">
      <summary>Возвращает объект <see cref="T:System.TimeSpan" />, представляющий указанное количество часов, округленное до ближайшей миллисекунды.</summary>
      <returns>Объект, представляющий объект <paramref name="value" />.</returns>
      <param name="value">Количество часов, округленное до ближайшей миллисекунды.</param>
      <exception cref="T:System.OverflowException">Значение параметра <paramref name="value" /> меньше значения <see cref="F:System.TimeSpan.MinValue" /> или больше значения <see cref="F:System.TimeSpan.MaxValue" />.  -или- Параметр <paramref name="value" /> имеет значение <see cref="F:System.Double.PositiveInfinity" />. -или- Параметр <paramref name="value" /> имеет значение <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="value" /> — <see cref="F:System.Double.NaN" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromMilliseconds(System.Double)">
      <summary>Возвращает объект <see cref="T:System.TimeSpan" />, представляющий указанное количество миллисекунд.</summary>
      <returns>Объект, представляющий объект <paramref name="value" />.</returns>
      <param name="value">Количество миллисекунд.</param>
      <exception cref="T:System.OverflowException">Значение параметра <paramref name="value" /> меньше значения <see cref="F:System.TimeSpan.MinValue" /> или больше значения <see cref="F:System.TimeSpan.MaxValue" />. -или- Параметр <paramref name="value" /> имеет значение <see cref="F:System.Double.PositiveInfinity" />. -или- Параметр <paramref name="value" /> имеет значение <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="value" /> — <see cref="F:System.Double.NaN" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromMinutes(System.Double)">
      <summary>Возвращает объект <see cref="T:System.TimeSpan" />, представляющий указанное количество минут, округленное до ближайшей миллисекунды.</summary>
      <returns>Объект, представляющий объект <paramref name="value" />.</returns>
      <param name="value">Количество минут, округленное до ближайшей миллисекунды.</param>
      <exception cref="T:System.OverflowException">Значение параметра <paramref name="value" /> меньше значения <see cref="F:System.TimeSpan.MinValue" /> или больше значения <see cref="F:System.TimeSpan.MaxValue" />. -или- Параметр <paramref name="value" /> имеет значение <see cref="F:System.Double.PositiveInfinity" />. -или- Параметр <paramref name="value" /> имеет значение <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="value" /> — <see cref="F:System.Double.NaN" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromSeconds(System.Double)">
      <summary>Возвращает объект <see cref="T:System.TimeSpan" />, представляющий указанное количество секунд, округленное до ближайшей миллисекунды.</summary>
      <returns>Объект, представляющий объект <paramref name="value" />.</returns>
      <param name="value">Количество секунд, округленное до ближайшей миллисекунды.</param>
      <exception cref="T:System.OverflowException">Значение параметра <paramref name="value" /> меньше значения <see cref="F:System.TimeSpan.MinValue" /> или больше значения <see cref="F:System.TimeSpan.MaxValue" />. -или- Параметр <paramref name="value" /> имеет значение <see cref="F:System.Double.PositiveInfinity" />. -или- Параметр <paramref name="value" /> имеет значение <see cref="F:System.Double.NegativeInfinity" />.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="value" /> — <see cref="F:System.Double.NaN" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.FromTicks(System.Int64)">
      <summary>Возвращает объект <see cref="T:System.TimeSpan" />, представляющий заданное время в тактах.</summary>
      <returns>Объект, представляющий объект <paramref name="value" />.</returns>
      <param name="value">Количество тактов, представляющее время.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Hours">
      <summary>Возвращает компонент часов периода времени, представленного текущей структурой <see cref="T:System.TimeSpan" />.</summary>
      <returns>Компонент текущей структуры <see cref="T:System.TimeSpan" />, представляющий количество часов. Возвращаемое значение лежит в диапазоне от -23 до 23.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.MaxValue">
      <summary>Представляет максимальное значение <see cref="T:System.TimeSpan" />. Это поле доступно только для чтения.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Milliseconds">
      <summary>Возвращает компонент миллисекунд периода времени, представленного текущей структурой <see cref="T:System.TimeSpan" />.</summary>
      <returns>Компонент текущей структуры <see cref="T:System.TimeSpan" />, представляющий количество миллисекунд. Возвращаемое значение лежит в диапазоне от -999 до 999.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.Minutes">
      <summary>Возвращает компонент минут периода времени, представленного текущей структурой <see cref="T:System.TimeSpan" />.</summary>
      <returns>Компонент текущей структуры <see cref="T:System.TimeSpan" />, представляющий количество минут. Возвращаемое значение лежит в диапазоне от -59 до 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.MinValue">
      <summary>Представляет минимальное значение <see cref="T:System.TimeSpan" />. Это поле доступно только для чтения.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Negate">
      <summary>Возвращает новый объект <see cref="T:System.TimeSpan" />, значение которого равно значению данного экземпляра с противоположным знаком.</summary>
      <returns>Новый объект, числовое значение которого совпадает со значением данного экземпляра, но с противоположным знаком.</returns>
      <exception cref="T:System.OverflowException">Значение данного экземпляра с противоположным знаком не может быть представлено объектом <see cref="T:System.TimeSpan" />, то есть, значение данного экземпляра равно <see cref="F:System.TimeSpan.MinValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)">
      <summary>Складывает два указанных экземпляра <see cref="T:System.TimeSpan" />.</summary>
      <returns>Объект, значение которого является суммой значений <paramref name="t1" /> и <paramref name="t2" />.</returns>
      <param name="t1">Первый из добавляемых интервалов времени.</param>
      <param name="t2">Второй из добавляемых интервалов времени.</param>
      <exception cref="T:System.OverflowException">Результирующий объект <see cref="T:System.TimeSpan" /> меньше, чем <see cref="F:System.TimeSpan.MinValue" /> или больше, чем <see cref="F:System.TimeSpan.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)">
      <summary>Указывает, равны ли два экземпляра <see cref="T:System.TimeSpan" />.</summary>
      <returns>Значение true, если значения параметров <paramref name="t1" /> и <paramref name="t2" /> равны; в противном случае — значение false.</returns>
      <param name="t1">Первый из сравниваемых интервалов времени.</param>
      <param name="t2">Второй из сравниваемых интервалов времени.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)">
      <summary>Показывает, является ли заданное значение <see cref="T:System.TimeSpan" /> большим другого заданного значения <see cref="T:System.TimeSpan" />.</summary>
      <returns>Значение true, если значение <paramref name="t1" /> больше <paramref name="t2" />; в противном случае — значение false.</returns>
      <param name="t1">Первый из сравниваемых интервалов времени.</param>
      <param name="t2">Второй из сравниваемых интервалов времени.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)">
      <summary>Показывает, является ли заданное значение <see cref="T:System.TimeSpan" /> большим или равным другому заданному значению <see cref="T:System.TimeSpan" />.</summary>
      <returns>Значение true, если значение <paramref name="t1" /> больше или равно <paramref name="t2" />; в противном случае — значение false.</returns>
      <param name="t1">Первый из сравниваемых интервалов времени.</param>
      <param name="t2">Второй из сравниваемых интервалов времени.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)">
      <summary>Показывает, являются ли два экземпляра <see cref="T:System.TimeSpan" />неравными.</summary>
      <returns>Значение true, если значения <paramref name="t1" /> и <paramref name="t2" /> не равны; в противном случае — значение false.</returns>
      <param name="t1">Первый из сравниваемых интервалов времени.</param>
      <param name="t2">Второй из сравниваемых интервалов времени.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)">
      <summary>Показывает, является ли заданное значение <see cref="T:System.TimeSpan" /> меньшим другого заданного значения <see cref="T:System.TimeSpan" />.</summary>
      <returns>Значение true, если значение <paramref name="t1" /> меньше <paramref name="t2" />; в противном случае — значение false.</returns>
      <param name="t1">Первый из сравниваемых интервалов времени.</param>
      <param name="t2">Второй из сравниваемых интервалов времени.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)">
      <summary>Показывает, является ли заданное значение <see cref="T:System.TimeSpan" /> меньшим или равным другому заданному значению <see cref="T:System.TimeSpan" />.</summary>
      <returns>Значение true, если значение <paramref name="t1" /> меньше или равно <paramref name="t2" />; в противном случае — значение false.</returns>
      <param name="t1">Первый из сравниваемых интервалов времени.</param>
      <param name="t2">Второй из сравниваемых интервалов времени.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)">
      <summary>Вычитает указанный объект <see cref="T:System.TimeSpan" /> из другого указанного объекта <see cref="T:System.TimeSpan" />.</summary>
      <returns>Объект, значение которого является разностью значений <paramref name="t1" /> и <paramref name="t2" />.</returns>
      <param name="t1">Уменьшаемое.</param>
      <param name="t2">Вычитаемое.</param>
      <exception cref="T:System.OverflowException">Возвращаемое значение меньше значения <see cref="F:System.TimeSpan.MinValue" /> или больше значения <see cref="F:System.TimeSpan.MaxValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_UnaryNegation(System.TimeSpan)">
      <summary>Возвращает объект <see cref="T:System.TimeSpan" /> со значением, равным значению данного экземпляра с противоположным знаком.</summary>
      <returns>Объект, числовое значение которого совпадает со значением данного экземпляра, но с противоположным знаком.</returns>
      <param name="t">Интервал времени, у которого будет изменен знак.</param>
      <exception cref="T:System.OverflowException">Значение данного экземпляра с противоположным знаком не может быть представлено объектом <see cref="T:System.TimeSpan" />, то есть, значение данного экземпляра равно <see cref="F:System.TimeSpan.MinValue" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.op_UnaryPlus(System.TimeSpan)">
      <summary>Возвращает указанный экземпляр <see cref="T:System.TimeSpan" />.</summary>
      <returns>Интервал времени, который задается параметром <paramref name="t" />.</returns>
      <param name="t">Возвращаемый интервал времени.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Parse(System.String)">
      <summary>Преобразует строковое представление интервала времени в его эквивалент <see cref="T:System.TimeSpan" />.</summary>
      <returns>Интервал времени, соответствующий параметру <paramref name="s" />.</returns>
      <param name="s">Строка, которая указывает преобразуемый интервал времени.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> имеет недопустимый формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше <see cref="F:System.TimeSpan.MinValue" /> или больше <see cref="F:System.TimeSpan.MaxValue" />. -или-  Значение одного из компонентов — дней, часов, минут или секунд — находится вне допустимого диапазона.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Parse(System.String,System.IFormatProvider)">
      <summary>Преобразует строковое представление интервала времени в его эквивалент <see cref="T:System.TimeSpan" />, используя указанные сведения о форматировании, связанные с языком и региональными параметрами.</summary>
      <returns>Интервал времени, соответствующий параметру <paramref name="input" />, в виде, заданном параметром <paramref name="formatProvider" />.</returns>
      <param name="input">Строка, которая указывает преобразуемый интервал времени.</param>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> имеет недопустимый формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> представляет число, которое меньше <see cref="F:System.TimeSpan.MinValue" /> или больше <see cref="F:System.TimeSpan.MaxValue" />. -или-  По крайней мере одно из значений дней, часов, минут или секунд, указанных в параметре <paramref name="input" />, находится вне допустимого диапазона.</exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)">
      <summary>Преобразует строковое представление интервала времени в его эквивалент <see cref="T:System.TimeSpan" />, используя указанные формат и сведения о форматировании, связанные с языком и региональными параметрами. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
      <returns>Интервал времени, соответствующий параметру <paramref name="input" />, в виде, заданном параметрами <paramref name="format" /> и <paramref name="formatProvider" />.</returns>
      <param name="input">Строка, которая указывает преобразуемый интервал времени.</param>
      <param name="format">Стандартная или пользовательская строка формата, которая определяет требуемый формат параметра <paramref name="input" />.</param>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> имеет недопустимый формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> представляет число, которое меньше <see cref="F:System.TimeSpan.MinValue" /> или больше <see cref="F:System.TimeSpan.MaxValue" />. -или-  По крайней мере одно из значений дней, часов, минут или секунд, указанных в параметре <paramref name="input" />, находится вне допустимого диапазона.</exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)">
      <summary>Преобразует строковое представление интервала времени в его эквивалент <see cref="T:System.TimeSpan" />, используя указанные формат, сведения о форматировании, связанные с языком и региональными параметрами, и стили. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
      <returns>Интервал времени, соответствующий параметру <paramref name="input" />, в виде, заданном параметрами <paramref name="format" />, <paramref name="formatProvider" /> и <paramref name="styles" />.</returns>
      <param name="input">Строка, которая указывает преобразуемый интервал времени.</param>
      <param name="format">Стандартная или пользовательская строка формата, которая определяет требуемый формат параметра <paramref name="input" />.</param>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</param>
      <param name="styles">Побитовое сочетание значений перечисления, определяющее элементы стиля, которые могут присутствовать в параметре <paramref name="input" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> — недопустимое значение <see cref="T:System.Globalization.TimeSpanStyles" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> имеет недопустимый формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> представляет число, которое меньше <see cref="F:System.TimeSpan.MinValue" /> или больше <see cref="F:System.TimeSpan.MaxValue" />. -или-  По крайней мере одно из значений дней, часов, минут или секунд, указанных в параметре <paramref name="input" />, находится вне допустимого диапазона.</exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)">
      <summary>Преобразует строковое представление интервала времени в его эквивалент <see cref="T:System.TimeSpan" />, используя указанный массив строк форматирования и сведения о форматировании, связанные с языком и региональными параметрами. Формат строкового представления должен полностью соответствовать одному из заданных форматов.</summary>
      <returns>Интервал времени, соответствующий параметру <paramref name="input" />, в виде, заданном параметрами <paramref name="formats" /> и <paramref name="formatProvider" />.</returns>
      <param name="input">Строка, которая указывает преобразуемый интервал времени.</param>
      <param name="formats">Массив стандартных или пользовательских строк формата, которые определяют требуемый формат параметра <paramref name="input" />.</param>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> имеет недопустимый формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> представляет число, которое меньше <see cref="F:System.TimeSpan.MinValue" /> или больше <see cref="F:System.TimeSpan.MaxValue" />. -или-  По крайней мере одно из значений дней, часов, минут или секунд, указанных в параметре <paramref name="input" />, находится вне допустимого диапазона.</exception>
    </member>
    <member name="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)">
      <summary>Преобразует строковое представление интервала времени в его эквивалент <see cref="T:System.TimeSpan" />, используя указанные форматы, сведения о форматировании, связанные с языком и региональными параметрами, и стили. Формат строкового представления должен полностью соответствовать одному из заданных форматов.</summary>
      <returns>Интервал времени, соответствующий параметру <paramref name="input" />, в виде, заданном параметрами <paramref name="formats" />, <paramref name="formatProvider" /> и <paramref name="styles" />.</returns>
      <param name="input">Строка, которая указывает преобразуемый интервал времени.</param>
      <param name="formats">Массив стандартных или пользовательских строк формата, которые определяют требуемый формат параметра <paramref name="input" />.</param>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</param>
      <param name="styles">Побитовое сочетание значений перечисления, определяющее элементы стиля, которые могут присутствовать в параметре input.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="styles" /> — недопустимое значение <see cref="T:System.Globalization.TimeSpanStyles" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="input" /> имеет недопустимый формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="input" /> представляет число, которое меньше <see cref="F:System.TimeSpan.MinValue" /> или больше <see cref="F:System.TimeSpan.MaxValue" />. -или-  По крайней мере одно из значений дней, часов, минут или секунд, указанных в параметре <paramref name="input" />, находится вне допустимого диапазона.</exception>
    </member>
    <member name="P:System.TimeSpan.Seconds">
      <summary>Возвращает компонент секунд периода времени, представленного текущей структурой <see cref="T:System.TimeSpan" />.</summary>
      <returns>Компонент текущей структуры <see cref="T:System.TimeSpan" />, представляющий количество секунд. Возвращаемое значение лежит в диапазоне от -59 до 59.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.Subtract(System.TimeSpan)">
      <summary>Возвращает новый объект <see cref="T:System.TimeSpan" />, значение которого равно разности между указанным объектом <see cref="T:System.TimeSpan" /> и данным экземпляром.</summary>
      <returns>Новый интервал времени, значение которого является результатом вычитания значения параметра <paramref name="ts" /> из данного экземпляра.</returns>
      <param name="ts">Интервал времени, который будет вычтен.</param>
      <exception cref="T:System.OverflowException">Возвращаемое значение меньше значения <see cref="F:System.TimeSpan.MinValue" /> или больше значения <see cref="F:System.TimeSpan.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Значение  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки. 	
Ноль  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и объект <paramref name="value" />. 	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="value" /> в порядке сортировки. -или-  Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="value" /> не является объектом <see cref="T:System.TimeSpan" />.</exception>
    </member>
    <member name="P:System.TimeSpan.Ticks">
      <summary>Возвращает количество тактов, представляющее значение текущей структуры <see cref="T:System.TimeSpan" />.</summary>
      <returns>Количество тактов, содержащихся в этом экземпляре.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerDay">
      <summary>Возвращает количество тактов в 1 дне. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerHour">
      <summary>Представляет количество тактов в 1 часе. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerMillisecond">
      <summary>Возвращает количество тактов в 1 миллисекунде. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerMinute">
      <summary>Возвращает количество тактов в 1 минуте. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.TimeSpan.TicksPerSecond">
      <summary>Возвращает количество тактов в 1 секунде.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.ToString">
      <summary>Преобразует значение текущего объекта <see cref="T:System.TimeSpan" /> в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения текущего объекта <see cref="T:System.TimeSpan" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.ToString(System.String)">
      <summary>Преобразует значение текущего объекта <see cref="T:System.TimeSpan" /> в эквивалентное ему строковое представление с использованием заданного формата.</summary>
      <returns>Строковое представление значения текущего объекта <see cref="T:System.TimeSpan" /> в формате, заданном параметром <paramref name="format" />.</returns>
      <param name="format">Стандартная или пользовательская строка формата <see cref="T:System.TimeSpan" />.</param>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> не распознается или не поддерживается.</exception>
    </member>
    <member name="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)">
      <summary>Преобразует числовое значение текущего объекта <see cref="T:System.TimeSpan" /> в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление текущего значения <see cref="T:System.TimeSpan" /> в виде, заданном параметрами <paramref name="format" /> и <paramref name="formatProvider" />.</returns>
      <param name="format">Стандартная или пользовательская строка формата <see cref="T:System.TimeSpan" />.</param>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> не распознается или не поддерживается.</exception>
    </member>
    <member name="P:System.TimeSpan.TotalDays">
      <summary>Возвращает значение текущей структуры <see cref="T:System.TimeSpan" />, выраженное как целое и дробное количество дней.</summary>
      <returns>Общее количество дней в периоде, представленном этим экземпляром.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalHours">
      <summary>Получает значение текущей структуры <see cref="T:System.TimeSpan" />, выраженное как целое и дробное количество часов.</summary>
      <returns>Общее количество часов в периоде, представленном этим экземпляром.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalMilliseconds">
      <summary>Получает значение текущей структуры <see cref="T:System.TimeSpan" />, выраженное как целое и дробное количество миллисекунд.</summary>
      <returns>Общее количество миллисекунд в периоде, представленном этим экземпляром.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalMinutes">
      <summary>Возвращает значение текущей структуры <see cref="T:System.TimeSpan" />, выраженное как целое и дробное количество минут.</summary>
      <returns>Общее количество минут в периоде, представленном этим экземпляром.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.TimeSpan.TotalSeconds">
      <summary>Возвращает значение текущей структуры <see cref="T:System.TimeSpan" />, выраженное как целое и дробное количество секунд.</summary>
      <returns>Общее количество секунд в периоде, представленном этим экземпляром.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)">
      <summary>Преобразовывает заданное строковое представление интервала времени в его эквивалент <see cref="T:System.TimeSpan" />, используя указанную информацию о форматировании, связанную с языком и региональными параметрами, и возвращает значение, которое показывает успешность преобразования.</summary>
      <returns>Значение true, если параметр <paramref name="input" /> успешно преобразован; в противном случае — значение false. Эта операция возвращает значение false, если параметр <paramref name="input" /> имеет значение null или <see cref="F:System.String.Empty" />, либо его формат недопустим, либо он представляет интервал времени, меньший <see cref="F:System.TimeSpan.MinValue" /> или больший <see cref="F:System.TimeSpan.MaxValue" />, либо минимум один из его компонентов — количество дней, часов, минут или секунд — находится вне допустимого диапазона.</returns>
      <param name="input">Строка, которая указывает преобразуемый интервал времени.</param>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <param name="result">После возврата из этого метода, содержит объект, представляющий интервал времени, заданный в параметре <paramref name="input" />, или значение <see cref="F:System.TimeSpan.Zero" />, если преобразование завершилось неудачей. Этот параметр передается без инициализации.</param>
    </member>
    <member name="M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)">
      <summary>Преобразовывает строковое представление интервала времени в его эквивалент <see cref="T:System.TimeSpan" /> и возвращает значение, позволяющее определить успешность преобразования.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false. Эта операция возвращает значение false, если параметр <paramref name="s" /> имеет значение null или <see cref="F:System.String.Empty" />, либо его формат недопустим, либо он представляет интервал времени, меньший <see cref="F:System.TimeSpan.MinValue" /> или больший <see cref="F:System.TimeSpan.MaxValue" />, либо минимум один из его компонентов — количество дней, часов, минут или секунд — находится вне допустимого диапазона.</returns>
      <param name="s">Строка, которая указывает преобразуемый интервал времени.</param>
      <param name="result">После возврата из этого метода, содержит объект, представляющий интервал времени, заданный в параметре <paramref name="s" />, или значение <see cref="F:System.TimeSpan.Zero" />, если преобразование завершилось неудачей. Этот параметр передается без инициализации.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)">
      <summary>Преобразовывает заданное строковое представление интервала времени в его эквивалент <see cref="T:System.TimeSpan" />, используя указанный формат, информацию о форматировании, связанную с языком и региональными параметрами, и стили, и возвращает значение, которое показывает успешность преобразования. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
      <returns>Значение true, если параметр <paramref name="input" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="input">Строка, которая указывает преобразуемый интервал времени.</param>
      <param name="format">Стандартная или пользовательская строка формата, которая определяет требуемый формат параметра <paramref name="input" />.</param>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</param>
      <param name="styles">Одно или несколько перечислимых значений, указывающих стиль параметра <paramref name="input" />.</param>
      <param name="result">После возврата из этого метода, содержит объект, представляющий интервал времени, заданный в параметре <paramref name="input" />, или значение <see cref="F:System.TimeSpan.Zero" />, если преобразование завершилось неудачей. Этот параметр передается без инициализации.</param>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)">
      <summary>Преобразовывает заданное строковое представление интервала времени в его эквивалент <see cref="T:System.TimeSpan" />, используя указанный формат и информацию о форматировании, связанную с языком и региональными параметрами, и возвращает значение, которое показывает успешность преобразования. Формат строкового представления должен полностью соответствовать заданному формату.</summary>
      <returns>Значение true, если параметр <paramref name="input" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="input">Строка, которая указывает преобразуемый интервал времени.</param>
      <param name="format">Стандартная или пользовательская строка формата, которая определяет требуемый формат параметра <paramref name="input" />.</param>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <param name="result">После возврата из этого метода, содержит объект, представляющий интервал времени, заданный в параметре <paramref name="input" />, или значение <see cref="F:System.TimeSpan.Zero" />, если преобразование завершилось неудачей. Этот параметр передается без инициализации.</param>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)">
      <summary>Преобразовывает заданное строковое представление интервала времени в его эквивалент <see cref="T:System.TimeSpan" />, используя указанные форматы, информацию о форматировании, связанную с языком и региональными параметрами, и стили, и возвращает значение, которое показывает успешность преобразования. Формат строкового представления должен полностью соответствовать одному из заданных форматов.</summary>
      <returns>Значение true, если параметр <paramref name="input" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="input">Строка, которая указывает преобразуемый интервал времени.</param>
      <param name="formats">Массив стандартных или пользовательских строк формата, которые определяют допустимые форматы параметра <paramref name="input" />.</param>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <param name="styles">Одно или несколько перечислимых значений, указывающих стиль параметра <paramref name="input" />.</param>
      <param name="result">После возврата из этого метода, содержит объект, представляющий интервал времени, заданный в параметре <paramref name="input" />, или значение <see cref="F:System.TimeSpan.Zero" />, если преобразование завершилось неудачей. Этот параметр передается без инициализации.</param>
    </member>
    <member name="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)">
      <summary>Преобразовывает заданное строковое представление интервала времени в его эквивалент <see cref="T:System.TimeSpan" />, используя указанные форматы и информацию о форматировании, связанную с языком и региональными параметрами, и возвращает значение, которое показывает успешность преобразования. Формат строкового представления должен полностью соответствовать одному из заданных форматов.</summary>
      <returns>Значение true, если параметр <paramref name="input" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="input">Строка, которая указывает преобразуемый интервал времени.</param>
      <param name="formats">Массив стандартных или пользовательских строк формата, которые определяют допустимые форматы параметра <paramref name="input" />.</param>
      <param name="formatProvider">Объект, предоставляющий сведения о форматировании, связанные с языком и региональными параметрами.</param>
      <param name="result">После возврата из этого метода, содержит объект, представляющий интервал времени, заданный в параметре <paramref name="input" />, или значение <see cref="F:System.TimeSpan.Zero" />, если преобразование завершилось неудачей. Этот параметр передается без инициализации.</param>
    </member>
    <member name="F:System.TimeSpan.Zero">
      <summary>Представляет нулевое значение <see cref="T:System.TimeSpan" />. Это поле доступно только для чтения.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.TimeZoneInfo">
      <summary>Представляет любой часовой пояс в мире.</summary>
    </member>
    <member name="P:System.TimeZoneInfo.BaseUtcOffset">
      <summary>Возвращает разницу между зимним временем в текущем часовом поясе и временем в формате UTC.</summary>
      <returns>Объект, указывающий разницу между зимним временем в текущем часовом поясе и временем в формате UTC.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)">
      <summary>Преобразует время во время в заданном часовом поясе.</summary>
      <returns>Дата и время в часовом поясе назначения.</returns>
      <param name="dateTime">Преобразовываемые дата и время.</param>
      <param name="destinationTimeZone">Часовой пояс, в который требуется преобразовать <paramref name="dateTime" />.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="dateTime" /> представляет недопустимое время.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="destinationTimeZone" /> имеет значение null.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)">
      <summary>Преобразует время во время в заданном часовом поясе.</summary>
      <returns>Дата и время в часовом поясе назначения.</returns>
      <param name="dateTimeOffset">Преобразовываемые дата и время.</param>
      <param name="destinationTimeZone">Часовой пояс, в который требуется преобразовать <paramref name="dateTime" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="destinationTimeZone" /> имеет значение null.</exception>
    </member>
    <member name="P:System.TimeZoneInfo.DaylightName">
      <summary>Возвращает отображаемое имя для летнего времени текущего часового пояса.</summary>
      <returns>Отображаемое имя для летнего времени текущего часового пояса.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.DisplayName">
      <summary>Возвращает универсальное отображаемое имя, представляющее часовой пояс.</summary>
      <returns>Общее отображаемое название часового пояса.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)">
      <summary>Определяет, равен ли текущий объект <see cref="T:System.TimeZoneInfo" /> другому объекту <see cref="T:System.TimeZoneInfo" />.</summary>
      <returns>Значение true, если два объекта <see cref="T:System.TimeZoneInfo" /> равны; в противном случае — значение false.</returns>
      <param name="other">Второй объект, сравниваемый с текущим объектом.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)">
      <summary>Возвращает сведения о возможных датах и времени, которым можно сопоставить неоднозначные значения этих величин.</summary>
      <returns>Массив объектов, представляющий возможные смещения относительно времени UTC, которым может соответствовать определенная дата и время.</returns>
      <param name="dateTime">Дата и время.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="dateTime" /> не является неоднозначным временем.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)">
      <summary>Возвращает сведения о возможных датах и времени, которым можно сопоставить неоднозначные значения этих величин.</summary>
      <returns>Массив объектов, представляющий возможные смещения относительно времени UTC, которым может соответствовать определенная дата и время.</returns>
      <param name="dateTimeOffset">Дата и время.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="dateTime" /> не является неоднозначным временем.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetHashCode">
      <summary>Служит хэш-функцией для алгоритмов хэширования и таких структур данных, как хэш-таблицы.</summary>
      <returns>32-битовое знаковое целое число, выступающее в роли хэш-кода данного объекта <see cref="T:System.TimeZoneInfo" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)">
      <summary>Вычисляет для определенной даты и времени смещение или разность между временем в данном часовом поясе и временем в формате UTC.</summary>
      <returns>Объект, в котором указывается разность во времени между двумя часовыми поясами.</returns>
      <param name="dateTime">Дата и время, для которых необходимо определить смещение.</param>
    </member>
    <member name="M:System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)">
      <summary>Вычисляет для определенной даты и времени смещение или разность между временем в данном часовом поясе и временем в формате UTC.</summary>
      <returns>Объект, в котором указывается разность между временем в формате UTC и временем в текущем часовом поясе.</returns>
      <param name="dateTimeOffset">Дата и время, для которых необходимо определить смещение.</param>
    </member>
    <member name="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)">
      <summary>Определяет, являются ли заданная дата и время в заданном часовом поясе неоднозначными и можно ли им сопоставить два и более момента времени в формате UTC.</summary>
      <returns>Значение true, если параметр <paramref name="dateTime" /> неоднозначен; в противном случае — значение false.</returns>
      <param name="dateTime">Значение даты и времени.</param>
      <exception cref="T:System.ArgumentException">Свойство <see cref="P:System.DateTime.Kind" /> значения <paramref name="dateTime" /> равно <see cref="F:System.DateTimeKind.Local" />, а само значение <paramref name="dateTime" /> является недопустимым временем.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)">
      <summary>Определяет, являются ли заданная дата и время в заданном часовом поясе неоднозначными и можно ли им сопоставить два и более момента времени в формате UTC.</summary>
      <returns>Значение true, если значение параметра <paramref name="dateTimeOffset" /> в текущем часовом поясе является неоднозначным; в противном случае — значение false.</returns>
      <param name="dateTimeOffset">Дата и время.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)">
      <summary>Указывает, попадают ли заданные дата и время в диапазон летнего времени для часового пояса текущего объекта <see cref="T:System.TimeZoneInfo" />.</summary>
      <returns>Значение true, если параметр <paramref name="dateTime" /> относится к летнему времени; в противном случае — значение false.</returns>
      <param name="dateTime">Значение даты и времени.</param>
      <exception cref="T:System.ArgumentException">Свойство <see cref="P:System.DateTime.Kind" /> значения <paramref name="dateTime" /> равно <see cref="F:System.DateTimeKind.Local" />, а само значение <paramref name="dateTime" /> является недопустимым временем.</exception>
    </member>
    <member name="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)">
      <summary>Указывает, попадают ли заданные дата и время в диапазон летнего времени для часового пояса текущего объекта <see cref="T:System.TimeZoneInfo" />.</summary>
      <returns>Значение true, если параметр <paramref name="dateTimeOffset" /> относится к летнему времени; в противном случае — значение false.</returns>
      <param name="dateTimeOffset">Значение даты и времени.</param>
    </member>
    <member name="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)">
      <summary>Указывает, являются ли определенная дата и время допустимыми.</summary>
      <returns>Значение true, если значение <paramref name="dateTime" /> недопустимо; в противном случае — значение false.</returns>
      <param name="dateTime">Значение даты и времени.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TimeZoneInfo.Local">
      <summary>Возвращает объект <see cref="T:System.TimeZoneInfo" />, представляющий местный часовой пояс.</summary>
      <returns>Объект, представляющий местный часовой пояс.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.StandardName">
      <summary>Возвращает отображаемое имя для зимнего времени часового пояса.</summary>
      <returns>Отображаемое название стандартного времени часового пояса.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.SupportsDaylightSavingTime">
      <summary>Возвращает значение, позволяющее определить, заданы ли для часового пояса какие-либо правила перехода на летнее время.</summary>
      <returns>Значение true, если часовой пояс поддерживает летнее время; в противном случае — false.</returns>
    </member>
    <member name="M:System.TimeZoneInfo.ToString">
      <summary>Возвращает отображаемое имя текущего объекта <see cref="T:System.TimeZoneInfo" />.</summary>
      <returns>Значение свойства <see cref="P:System.TimeZoneInfo.DisplayName" /> текущего объекта <see cref="T:System.TimeZoneInfo" />.</returns>
    </member>
    <member name="P:System.TimeZoneInfo.Utc">
      <summary>Возвращает объект <see cref="T:System.TimeZoneInfo" />, представляющий часовой пояс UTC.</summary>
      <returns>Объект, представляющий часовой пояс UTC.</returns>
    </member>
    <member name="T:System.Tuple">
      <summary>Предоставляет статические методы для создания объектов кортежей.</summary>
    </member>
    <member name="M:System.Tuple.Create``1(``0)">
      <summary>Создает новый кортеж из одного компонента.</summary>
      <returns>Кортеж, значение которого равняется (<paramref name="item1" />).</returns>
      <param name="item1">Значение единственного компонента кортежа.</param>
      <typeparam name="T1">Тип единственного компонента кортежа.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``2(``0,``1)">
      <summary>Создает новый кортеж из двух компонентов (пару).</summary>
      <returns>Кортеж из двух компонентов, значение которого равняется (<paramref name="item1" />, <paramref name="item2" />).</returns>
      <param name="item1">Значение первого компонента кортежа.</param>
      <param name="item2">Значение второго компонента кортежа.</param>
      <typeparam name="T1">Тип первого компонента кортежа.</typeparam>
      <typeparam name="T2">Тип второго компонента кортежа.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``3(``0,``1,``2)">
      <summary>Создает новый кортеж из трех компонентов.</summary>
      <returns>Кортеж из трех компонентов, значение которого равняется (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />).</returns>
      <param name="item1">Значение первого компонента кортежа.</param>
      <param name="item2">Значение второго компонента кортежа.</param>
      <param name="item3">Значение третьего компонента кортежа.</param>
      <typeparam name="T1">Тип первого компонента кортежа.</typeparam>
      <typeparam name="T2">Тип второго компонента кортежа.</typeparam>
      <typeparam name="T3">Тип третьего компонента кортежа.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``4(``0,``1,``2,``3)">
      <summary>Создает новый кортеж из четырех компонентов.</summary>
      <returns>Кортеж из четырех компонентов, значение которого равняется (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />).</returns>
      <param name="item1">Значение первого компонента кортежа.</param>
      <param name="item2">Значение второго компонента кортежа.</param>
      <param name="item3">Значение третьего компонента кортежа.</param>
      <param name="item4">Значение четвертого компонента кортежа.</param>
      <typeparam name="T1">Тип первого компонента кортежа.</typeparam>
      <typeparam name="T2">Тип второго компонента кортежа.</typeparam>
      <typeparam name="T3">Тип третьего компонента кортежа.</typeparam>
      <typeparam name="T4">Тип четвертого компонента кортежа.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
      <summary>Создает новый кортеж из пяти компонентов.</summary>
      <returns>Кортеж из пяти компонентов, значение которого равняется (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />).</returns>
      <param name="item1">Значение первого компонента кортежа.</param>
      <param name="item2">Значение второго компонента кортежа.</param>
      <param name="item3">Значение третьего компонента кортежа.</param>
      <param name="item4">Значение четвертого компонента кортежа.</param>
      <param name="item5">Значение пятого компонента кортежа.</param>
      <typeparam name="T1">Тип первого компонента кортежа.</typeparam>
      <typeparam name="T2">Тип второго компонента кортежа.</typeparam>
      <typeparam name="T3">Тип третьего компонента кортежа.</typeparam>
      <typeparam name="T4">Тип четвертого компонента кортежа.</typeparam>
      <typeparam name="T5">Тип пятого компонента кортежа.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
      <summary>Создает новый кортеж из шести компонентов.</summary>
      <returns>Кортеж из шести компонентов, значение которого равняется (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />).</returns>
      <param name="item1">Значение первого компонента кортежа.</param>
      <param name="item2">Значение второго компонента кортежа.</param>
      <param name="item3">Значение третьего компонента кортежа.</param>
      <param name="item4">Значение четвертого компонента кортежа.</param>
      <param name="item5">Значение пятого компонента кортежа.</param>
      <param name="item6">Значение шестого компонента кортежа.</param>
      <typeparam name="T1">Тип первого компонента кортежа.</typeparam>
      <typeparam name="T2">Тип второго компонента кортежа.</typeparam>
      <typeparam name="T3">Тип третьего компонента кортежа.</typeparam>
      <typeparam name="T4">Тип четвертого компонента кортежа.</typeparam>
      <typeparam name="T5">Тип пятого компонента кортежа.</typeparam>
      <typeparam name="T6">Тип шестого компонента кортежа.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
      <summary>Создает новый кортеж из семи компонентов.</summary>
      <returns>Кортеж из семи компонентов, значение которого равняется (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />).</returns>
      <param name="item1">Значение первого компонента кортежа.</param>
      <param name="item2">Значение второго компонента кортежа.</param>
      <param name="item3">Значение третьего компонента кортежа.</param>
      <param name="item4">Значение четвертого компонента кортежа.</param>
      <param name="item5">Значение пятого компонента кортежа.</param>
      <param name="item6">Значение шестого компонента кортежа.</param>
      <param name="item7">Значение седьмого компонента кортежа.</param>
      <typeparam name="T1">Тип первого компонента кортежа.</typeparam>
      <typeparam name="T2">Тип второго компонента кортежа.</typeparam>
      <typeparam name="T3">Тип третьего компонента кортежа.</typeparam>
      <typeparam name="T4">Тип четвертого компонента кортежа.</typeparam>
      <typeparam name="T5">Тип пятого компонента кортежа.</typeparam>
      <typeparam name="T6">Тип шестого компонента кортежа.</typeparam>
      <typeparam name="T7">Тип седьмого компонента кортежа.</typeparam>
    </member>
    <member name="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
      <summary>Создает новый кортеж из восьми компонентов.</summary>
      <returns>Кортеж из восьми компонентов со значением (<paramref name="item1" />, <paramref name="item2" />, <paramref name="item3" />, <paramref name="item4" />, <paramref name="item5" />, <paramref name="item6" />, <paramref name="item7" />, <paramref name="item8" />).</returns>
      <param name="item1">Значение первого компонента кортежа.</param>
      <param name="item2">Значение второго компонента кортежа.</param>
      <param name="item3">Значение третьего компонента кортежа.</param>
      <param name="item4">Значение четвертого компонента кортежа.</param>
      <param name="item5">Значение пятого компонента кортежа.</param>
      <param name="item6">Значение шестого компонента кортежа.</param>
      <param name="item7">Значение седьмого компонента кортежа.</param>
      <param name="item8">Значение восьмого компонента кортежа.</param>
      <typeparam name="T1">Тип первого компонента кортежа.</typeparam>
      <typeparam name="T2">Тип второго компонента кортежа.</typeparam>
      <typeparam name="T3">Тип третьего компонента кортежа.</typeparam>
      <typeparam name="T4">Тип четвертого компонента кортежа.</typeparam>
      <typeparam name="T5">Тип пятого компонента кортежа.</typeparam>
      <typeparam name="T6">Тип шестого компонента кортежа.</typeparam>
      <typeparam name="T7">Тип седьмого компонента кортежа.</typeparam>
      <typeparam name="T8">Тип восьмого компонента кортежа.</typeparam>
    </member>
    <member name="T:System.Tuple`1">
      <summary>Представляет кортеж из одного компонента.</summary>
      <typeparam name="T1">Тип единственного компонента кортежа.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Tuple`1.#ctor(`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Tuple`1" />.</summary>
      <param name="item1">Значение единственного компонента кортежа.</param>
    </member>
    <member name="M:System.Tuple`1.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли текущий объект <see cref="T:System.Tuple`1" /> указанному объекту.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="obj">Объект, сравниваемый с данным экземпляром.</param>
    </member>
    <member name="M:System.Tuple`1.GetHashCode">
      <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.Tuple`1" />.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
    </member>
    <member name="P:System.Tuple`1.Item1">
      <summary>Получает значение отдельного компонента объекта <see cref="T:System.Tuple`1" />.</summary>
      <returns>Значение отдельного компонента текущего объекта <see cref="T:System.Tuple`1" />.</returns>
    </member>
    <member name="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`1" /> с указанным объектом, используя заданный компаратор, и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="other" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="other" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="other" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="other" />.</returns>
      <param name="other">Объект для сравнения с текущим экземпляром.</param>
      <param name="comparer">Объект, предоставляющий пользовательские правила для сравнения.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="other" /> не является объектом <see cref="T:System.Tuple`1" />.</exception>
    </member>
    <member name="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Возвращает значение, показывающее, равен ли текущий атрибут <see cref="T:System.Tuple`1" /> указанному объекту при использовании заданного метода сравнения.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="other">Объект, сравниваемый с данным экземпляром.</param>
      <param name="comparer">Объект, который определяет метод для оценки равенства двух объектов.</param>
    </member>
    <member name="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Вычисляет хэш-код для текущего объекта <see cref="T:System.Tuple`1" />, используя заданный метод вычисления.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <param name="comparer">Объект, метод <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> которого вычисляет хэш-код текущего объекта <see cref="T:System.Tuple`1" />.</param>
    </member>
    <member name="M:System.Tuple`1.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`1" /> с указанным объектом и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="obj" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="obj" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="obj" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="obj" />.</returns>
      <param name="obj">Объект для сравнения с текущим экземпляром.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="obj" /> не является объектом <see cref="T:System.Tuple`1" />.</exception>
    </member>
    <member name="M:System.Tuple`1.ToString">
      <summary>Возвращает строку, представляющую значение данного экземпляра <see cref="T:System.Tuple`1" />.</summary>
      <returns>Строковое представление данного объекта <see cref="T:System.Tuple`1" />.</returns>
    </member>
    <member name="T:System.Tuple`2">
      <summary>Представляет кортеж из двух компонентов или пару.</summary>
      <typeparam name="T1">Тип первого компонента кортежа.</typeparam>
      <typeparam name="T2">Тип второго компонента кортежа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`2.#ctor(`0,`1)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Tuple`2" />.</summary>
      <param name="item1">Значение первого компонента кортежа.</param>
      <param name="item2">Значение второго компонента кортежа.</param>
    </member>
    <member name="M:System.Tuple`2.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли текущий объект <see cref="T:System.Tuple`2" /> указанному объекту.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="obj">Объект, сравниваемый с данным экземпляром.</param>
    </member>
    <member name="M:System.Tuple`2.GetHashCode">
      <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.Tuple`2" />.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
    </member>
    <member name="P:System.Tuple`2.Item1">
      <summary>Получает значение первого компонента текущего объекта <see cref="T:System.Tuple`2" />.</summary>
      <returns>Значение первого компонента текущего объекта <see cref="T:System.Tuple`2" />.</returns>
    </member>
    <member name="P:System.Tuple`2.Item2">
      <summary>Получает значение второго компонента текущего объекта <see cref="T:System.Tuple`2" />.</summary>
      <returns>Значение второго компонента текущего объекта <see cref="T:System.Tuple`2" />.</returns>
    </member>
    <member name="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`2" /> с указанным объектом, используя заданный компаратор, и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="other" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="other" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="other" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="other" />.</returns>
      <param name="other">Объект для сравнения с текущим экземпляром.</param>
      <param name="comparer">Объект, предоставляющий пользовательские правила для сравнения.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="other" /> не является объектом <see cref="T:System.Tuple`2" />.</exception>
    </member>
    <member name="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Возвращает значение, показывающее, равен ли текущий атрибут <see cref="T:System.Tuple`2" /> указанному объекту при использовании заданного метода сравнения.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="other">Объект, сравниваемый с данным экземпляром.</param>
      <param name="comparer">Объект, который определяет метод для оценки равенства двух объектов.</param>
    </member>
    <member name="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Вычисляет хэш-код для текущего объекта <see cref="T:System.Tuple`2" />, используя заданный метод вычисления.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <param name="comparer">Объект, метод <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> которого вычисляет хэш-код текущего объекта <see cref="T:System.Tuple`2" />.</param>
    </member>
    <member name="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`2" /> с указанным объектом и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="obj" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="obj" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="obj" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="obj" />.</returns>
      <param name="obj">Объект для сравнения с текущим экземпляром.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="obj" /> не является объектом <see cref="T:System.Tuple`2" />.</exception>
    </member>
    <member name="M:System.Tuple`2.ToString">
      <summary>Возвращает строку, представляющую значение данного экземпляра <see cref="T:System.Tuple`2" />.</summary>
      <returns>Строковое представление данного объекта <see cref="T:System.Tuple`2" />.</returns>
    </member>
    <member name="T:System.Tuple`3">
      <summary>Представляет кортеж из трех компонентов.</summary>
      <typeparam name="T1">Тип первого компонента кортежа.</typeparam>
      <typeparam name="T2">Тип второго компонента кортежа.</typeparam>
      <typeparam name="T3">Тип третьего компонента кортежа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`3.#ctor(`0,`1,`2)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Tuple`3" />.</summary>
      <param name="item1">Значение первого компонента кортежа.</param>
      <param name="item2">Значение второго компонента кортежа.</param>
      <param name="item3">Значение третьего компонента кортежа.</param>
    </member>
    <member name="M:System.Tuple`3.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли текущий объект <see cref="T:System.Tuple`3" /> указанному объекту.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="obj">Объект, сравниваемый с данным экземпляром.</param>
    </member>
    <member name="M:System.Tuple`3.GetHashCode">
      <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.Tuple`3" />.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
    </member>
    <member name="P:System.Tuple`3.Item1">
      <summary>Получает значение первого компонента текущего объекта <see cref="T:System.Tuple`3" />.</summary>
      <returns>Значение первого компонента текущего объекта <see cref="T:System.Tuple`3" />.</returns>
    </member>
    <member name="P:System.Tuple`3.Item2">
      <summary>Получает значение второго компонента текущего объекта <see cref="T:System.Tuple`3" />.</summary>
      <returns>Значение второго компонента текущего объекта <see cref="T:System.Tuple`3" />.</returns>
    </member>
    <member name="P:System.Tuple`3.Item3">
      <summary>Получает значение третьего компонента текущего объекта <see cref="T:System.Tuple`3" />.</summary>
      <returns>Значение третьего компонента текущего объекта <see cref="T:System.Tuple`3" />.</returns>
    </member>
    <member name="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`3" /> с указанным объектом, используя заданный компаратор, и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="other" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="other" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="other" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="other" />.</returns>
      <param name="other">Объект для сравнения с текущим экземпляром.</param>
      <param name="comparer">Объект, предоставляющий пользовательские правила для сравнения.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="other" /> не является объектом <see cref="T:System.Tuple`3" />.</exception>
    </member>
    <member name="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Возвращает значение, показывающее, равен ли текущий атрибут <see cref="T:System.Tuple`3" /> указанному объекту при использовании заданного метода сравнения.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="other">Объект, сравниваемый с данным экземпляром.</param>
      <param name="comparer">Объект, который определяет метод для оценки равенства двух объектов.</param>
    </member>
    <member name="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Вычисляет хэш-код для текущего объекта <see cref="T:System.Tuple`3" />, используя заданный метод вычисления.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <param name="comparer">Объект, метод <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> которого вычисляет хэш-код текущего объекта <see cref="T:System.Tuple`3" />.</param>
    </member>
    <member name="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`3" /> с указанным объектом и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="obj" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="obj" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="obj" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="obj" />.</returns>
      <param name="obj">Объект для сравнения с текущим экземпляром.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="obj" /> не является объектом <see cref="T:System.Tuple`3" />.</exception>
    </member>
    <member name="M:System.Tuple`3.ToString">
      <summary>Возвращает строку, представляющую значение данного экземпляра <see cref="T:System.Tuple`3" />.</summary>
      <returns>Строковое представление данного объекта <see cref="T:System.Tuple`3" />.</returns>
    </member>
    <member name="T:System.Tuple`4">
      <summary>Представляет кортеж из четырех компонентов.</summary>
      <typeparam name="T1">Тип первого компонента кортежа.</typeparam>
      <typeparam name="T2">Тип второго компонента кортежа.</typeparam>
      <typeparam name="T3">Тип третьего компонента кортежа.</typeparam>
      <typeparam name="T4">Тип четвертого компонента кортежа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`4.#ctor(`0,`1,`2,`3)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Tuple`4" />.</summary>
      <param name="item1">Значение первого компонента кортежа.</param>
      <param name="item2">Значение второго компонента кортежа.</param>
      <param name="item3">Значение третьего компонента кортежа.</param>
      <param name="item4">Значение четвертого компонента кортежа.</param>
    </member>
    <member name="M:System.Tuple`4.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли текущий объект <see cref="T:System.Tuple`4" /> указанному объекту.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="obj">Объект, сравниваемый с данным экземпляром.</param>
    </member>
    <member name="M:System.Tuple`4.GetHashCode">
      <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.Tuple`4" />.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
    </member>
    <member name="P:System.Tuple`4.Item1">
      <summary>Получает значение первого компонента текущего объекта <see cref="T:System.Tuple`4" />.</summary>
      <returns>Значение первого компонента текущего объекта <see cref="T:System.Tuple`4" />.</returns>
    </member>
    <member name="P:System.Tuple`4.Item2">
      <summary>Получает значение второго компонента текущего объекта <see cref="T:System.Tuple`4" />.</summary>
      <returns>Значение второго компонента текущего объекта <see cref="T:System.Tuple`4" />.</returns>
    </member>
    <member name="P:System.Tuple`4.Item3">
      <summary>Получает значение третьего компонента текущего объекта <see cref="T:System.Tuple`4" />.</summary>
      <returns>Значение третьего компонента текущего объекта <see cref="T:System.Tuple`4" />.</returns>
    </member>
    <member name="P:System.Tuple`4.Item4">
      <summary>Получает значение четвертого компонента текущего объекта <see cref="T:System.Tuple`4" />.</summary>
      <returns>Значение четвертого компонента текущего объекта <see cref="T:System.Tuple`4" />.</returns>
    </member>
    <member name="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`4" /> с указанным объектом, используя заданный компаратор, и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="other" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="other" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="other" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="other" />.</returns>
      <param name="other">Объект для сравнения с текущим экземпляром.</param>
      <param name="comparer">Объект, предоставляющий пользовательские правила для сравнения.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="other" /> не является объектом <see cref="T:System.Tuple`4" />.</exception>
    </member>
    <member name="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Возвращает значение, показывающее, равен ли текущий атрибут <see cref="T:System.Tuple`4" /> указанному объекту при использовании заданного метода сравнения.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="other">Объект, сравниваемый с данным экземпляром.</param>
      <param name="comparer">Объект, который определяет метод для оценки равенства двух объектов.</param>
    </member>
    <member name="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Вычисляет хэш-код для текущего объекта <see cref="T:System.Tuple`4" />, используя заданный метод вычисления.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <param name="comparer">Объект, метод <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> которого вычисляет хэш-код текущего объекта <see cref="T:System.Tuple`4" />.</param>
    </member>
    <member name="M:System.Tuple`4.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`4" /> с указанным объектом и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="obj" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="obj" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="obj" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="obj" />.</returns>
      <param name="obj">Объект для сравнения с текущим экземпляром.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="obj" /> не является объектом <see cref="T:System.Tuple`4" />.</exception>
    </member>
    <member name="M:System.Tuple`4.ToString">
      <summary>Возвращает строку, представляющую значение данного экземпляра <see cref="T:System.Tuple`4" />.</summary>
      <returns>Строковое представление данного объекта <see cref="T:System.Tuple`4" />.</returns>
    </member>
    <member name="T:System.Tuple`5">
      <summary>Представляет кортеж из пяти компонентов.</summary>
      <typeparam name="T1">Тип первого компонента кортежа.</typeparam>
      <typeparam name="T2">Тип второго компонента кортежа.</typeparam>
      <typeparam name="T3">Тип третьего компонента кортежа.</typeparam>
      <typeparam name="T4">Тип четвертого компонента кортежа.</typeparam>
      <typeparam name="T5">Тип пятого компонента кортежа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`5.#ctor(`0,`1,`2,`3,`4)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Tuple`5" />.</summary>
      <param name="item1">Значение первого компонента кортежа.</param>
      <param name="item2">Значение второго компонента кортежа.</param>
      <param name="item3">Значение третьего компонента кортежа.</param>
      <param name="item4">Значение четвертого компонента кортежа.</param>
      <param name="item5">Значение пятого компонента кортежа.</param>
    </member>
    <member name="M:System.Tuple`5.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли текущий объект <see cref="T:System.Tuple`5" /> указанному объекту.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="obj">Объект, сравниваемый с данным экземпляром.</param>
    </member>
    <member name="M:System.Tuple`5.GetHashCode">
      <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.Tuple`5" />.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
    </member>
    <member name="P:System.Tuple`5.Item1">
      <summary>Получает значение первого компонента текущего объекта <see cref="T:System.Tuple`5" />.</summary>
      <returns>Значение первого компонента текущего объекта <see cref="T:System.Tuple`5" />.</returns>
    </member>
    <member name="P:System.Tuple`5.Item2">
      <summary>Получает значение второго компонента текущего объекта <see cref="T:System.Tuple`5" />.</summary>
      <returns>Значение второго компонента текущего объекта <see cref="T:System.Tuple`5" />.</returns>
    </member>
    <member name="P:System.Tuple`5.Item3">
      <summary>Получает значение третьего компонента текущего объекта <see cref="T:System.Tuple`5" />.</summary>
      <returns>Значение третьего компонента текущего объекта <see cref="T:System.Tuple`5" />.</returns>
    </member>
    <member name="P:System.Tuple`5.Item4">
      <summary>Получает значение четвертого компонента текущего объекта <see cref="T:System.Tuple`5" />.</summary>
      <returns>Значение четвертого компонента текущего объекта <see cref="T:System.Tuple`5" />.</returns>
    </member>
    <member name="P:System.Tuple`5.Item5">
      <summary>Получает значение пятого компонента текущего объекта <see cref="T:System.Tuple`5" />.</summary>
      <returns>Значение пятого компонента текущего объекта <see cref="T:System.Tuple`5" />.</returns>
    </member>
    <member name="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`5" /> с указанным объектом, используя заданный компаратор, и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="other" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="other" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="other" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="other" />.</returns>
      <param name="other">Объект для сравнения с текущим экземпляром.</param>
      <param name="comparer">Объект, предоставляющий пользовательские правила для сравнения.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="other" /> не является объектом <see cref="T:System.Tuple`5" />.</exception>
    </member>
    <member name="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Возвращает значение, показывающее, равен ли текущий атрибут <see cref="T:System.Tuple`5" /> указанному объекту при использовании заданного метода сравнения.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="other">Объект, сравниваемый с данным экземпляром.</param>
      <param name="comparer">Объект, который определяет метод для оценки равенства двух объектов.</param>
    </member>
    <member name="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Вычисляет хэш-код для текущего объекта <see cref="T:System.Tuple`5" />, используя заданный метод вычисления.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <param name="comparer">Объект, метод <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> которого вычисляет хэш-код текущего объекта <see cref="T:System.Tuple`5" />.</param>
    </member>
    <member name="M:System.Tuple`5.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`5" /> с указанным объектом и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="obj" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="obj" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="obj" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="obj" />.</returns>
      <param name="obj">Объект для сравнения с текущим экземпляром.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="obj" /> не является объектом <see cref="T:System.Tuple`5" />.</exception>
    </member>
    <member name="M:System.Tuple`5.ToString">
      <summary>Возвращает строку, представляющую значение данного экземпляра <see cref="T:System.Tuple`5" />.</summary>
      <returns>Строковое представление данного объекта <see cref="T:System.Tuple`5" />.</returns>
    </member>
    <member name="T:System.Tuple`6">
      <summary>Представляет кортеж из шести компонентов.</summary>
      <typeparam name="T1">Тип первого компонента кортежа.</typeparam>
      <typeparam name="T2">Тип второго компонента кортежа.</typeparam>
      <typeparam name="T3">Тип третьего компонента кортежа.</typeparam>
      <typeparam name="T4">Тип четвертого компонента кортежа.</typeparam>
      <typeparam name="T5">Тип пятого компонента кортежа.</typeparam>
      <typeparam name="T6">Тип шестого компонента кортежа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`6.#ctor(`0,`1,`2,`3,`4,`5)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Tuple`6" />.</summary>
      <param name="item1">Значение первого компонента кортежа.</param>
      <param name="item2">Значение второго компонента кортежа.</param>
      <param name="item3">Значение третьего компонента кортежа.</param>
      <param name="item4">Значение четвертого компонента кортежа.</param>
      <param name="item5">Значение пятого компонента кортежа.</param>
      <param name="item6">Значение шестого компонента кортежа.</param>
    </member>
    <member name="M:System.Tuple`6.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли текущий объект <see cref="T:System.Tuple`6" /> указанному объекту.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="obj">Объект, сравниваемый с данным экземпляром.</param>
    </member>
    <member name="M:System.Tuple`6.GetHashCode">
      <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.Tuple`6" />.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
    </member>
    <member name="P:System.Tuple`6.Item1">
      <summary>Получает значение первого компонента текущего объекта <see cref="T:System.Tuple`6" />.</summary>
      <returns>Значение первого компонента текущего объекта <see cref="T:System.Tuple`6" />.</returns>
    </member>
    <member name="P:System.Tuple`6.Item2">
      <summary>Получает значение второго компонента текущего объекта <see cref="T:System.Tuple`6" />.</summary>
      <returns>Значение второго компонента текущего объекта <see cref="T:System.Tuple`6" />.</returns>
    </member>
    <member name="P:System.Tuple`6.Item3">
      <summary>Получает значение третьего компонента текущего объекта <see cref="T:System.Tuple`6" />.</summary>
      <returns>Значение третьего компонента текущего объекта <see cref="T:System.Tuple`6" />.</returns>
    </member>
    <member name="P:System.Tuple`6.Item4">
      <summary>Получает значение четвертого компонента текущего объекта <see cref="T:System.Tuple`6" />.</summary>
      <returns>Значение четвертого компонента текущего объекта <see cref="T:System.Tuple`6" />.</returns>
    </member>
    <member name="P:System.Tuple`6.Item5">
      <summary>Получает значение пятого компонента текущего объекта <see cref="T:System.Tuple`6" />.</summary>
      <returns>Значение пятого компонента текущего объекта <see cref="T:System.Tuple`6" />.</returns>
    </member>
    <member name="P:System.Tuple`6.Item6">
      <summary>Получает значение шестого компонента текущего объекта <see cref="T:System.Tuple`6" />.</summary>
      <returns>Значение шестого компонента текущего объекта <see cref="T:System.Tuple`6" />.</returns>
    </member>
    <member name="M:System.Tuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`6" /> с указанным объектом, используя заданный компаратор, и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="other" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="other" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="other" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="other" />.</returns>
      <param name="other">Объект для сравнения с текущим экземпляром.</param>
      <param name="comparer">Объект, предоставляющий пользовательские правила для сравнения.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="other" /> не является объектом <see cref="T:System.Tuple`6" />.</exception>
    </member>
    <member name="M:System.Tuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Возвращает значение, показывающее, равен ли текущий объект <see cref="T:System.Tuple`6" /> указанному объекту при использовании заданного метода сравнения.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="other">Объект, сравниваемый с данным экземпляром.</param>
      <param name="comparer">Объект, который определяет метод для оценки равенства двух объектов.</param>
    </member>
    <member name="M:System.Tuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Вычисляет хэш-код для текущего объекта <see cref="T:System.Tuple`6" />, используя заданный метод вычисления.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <param name="comparer">Объект, метод <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> которого вычисляет хэш-код текущего объекта <see cref="T:System.Tuple`6" />.</param>
    </member>
    <member name="M:System.Tuple`6.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`6" /> с указанным объектом и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="obj" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="obj" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="obj" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="obj" />.</returns>
      <param name="obj">Объект для сравнения с текущим экземпляром.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="obj" /> не является объектом <see cref="T:System.Tuple`6" />.</exception>
    </member>
    <member name="M:System.Tuple`6.ToString">
      <summary>Возвращает строку, представляющую значение данного экземпляра <see cref="T:System.Tuple`6" />.</summary>
      <returns>Строковое представление данного объекта <see cref="T:System.Tuple`6" />.</returns>
    </member>
    <member name="T:System.Tuple`7">
      <summary>Представляет кортеж из семи компонентов.</summary>
      <typeparam name="T1">Тип первого компонента кортежа.</typeparam>
      <typeparam name="T2">Тип второго компонента кортежа.</typeparam>
      <typeparam name="T3">Тип третьего компонента кортежа.</typeparam>
      <typeparam name="T4">Тип четвертого компонента кортежа.</typeparam>
      <typeparam name="T5">Тип пятого компонента кортежа.</typeparam>
      <typeparam name="T6">Тип шестого компонента кортежа.</typeparam>
      <typeparam name="T7">Тип седьмого компонента кортежа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`7.#ctor(`0,`1,`2,`3,`4,`5,`6)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Tuple`7" />.</summary>
      <param name="item1">Значение первого компонента кортежа.</param>
      <param name="item2">Значение второго компонента кортежа.</param>
      <param name="item3">Значение третьего компонента кортежа.</param>
      <param name="item4">Значение четвертого компонента кортежа.</param>
      <param name="item5">Значение пятого компонента кортежа.</param>
      <param name="item6">Значение шестого компонента кортежа.</param>
      <param name="item7">Значение седьмого компонента кортежа.</param>
    </member>
    <member name="M:System.Tuple`7.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли текущий объект <see cref="T:System.Tuple`7" /> указанному объекту.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="obj">Объект, сравниваемый с данным экземпляром.</param>
    </member>
    <member name="M:System.Tuple`7.GetHashCode">
      <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.Tuple`7" />.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
    </member>
    <member name="P:System.Tuple`7.Item1">
      <summary>Получает значение первого компонента текущего объекта <see cref="T:System.Tuple`7" />.</summary>
      <returns>Значение первого компонента текущего объекта <see cref="T:System.Tuple`7" />.</returns>
    </member>
    <member name="P:System.Tuple`7.Item2">
      <summary>Получает значение второго компонента текущего объекта <see cref="T:System.Tuple`7" />.</summary>
      <returns>Значение второго компонента текущего объекта <see cref="T:System.Tuple`7" />.</returns>
    </member>
    <member name="P:System.Tuple`7.Item3">
      <summary>Получает значение третьего компонента текущего объекта <see cref="T:System.Tuple`7" />.</summary>
      <returns>Значение третьего компонента текущего объекта <see cref="T:System.Tuple`7" />.</returns>
    </member>
    <member name="P:System.Tuple`7.Item4">
      <summary>Получает значение четвертого компонента текущего объекта <see cref="T:System.Tuple`7" />.</summary>
      <returns>Значение четвертого компонента текущего объекта <see cref="T:System.Tuple`7" />.</returns>
    </member>
    <member name="P:System.Tuple`7.Item5">
      <summary>Получает значение пятого компонента текущего объекта <see cref="T:System.Tuple`7" />.</summary>
      <returns>Значение пятого компонента текущего объекта <see cref="T:System.Tuple`7" />.</returns>
    </member>
    <member name="P:System.Tuple`7.Item6">
      <summary>Получает значение шестого компонента текущего объекта <see cref="T:System.Tuple`7" />.</summary>
      <returns>Значение шестого компонента текущего объекта <see cref="T:System.Tuple`7" />.</returns>
    </member>
    <member name="P:System.Tuple`7.Item7">
      <summary>Получает значение седьмого компонента текущего объекта <see cref="T:System.Tuple`7" />.</summary>
      <returns>Значение седьмого компонента текущего объекта <see cref="T:System.Tuple`7" />.</returns>
    </member>
    <member name="M:System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`7" /> с указанным объектом, используя заданный компаратор, и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="other" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="other" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="other" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="other" />.</returns>
      <param name="other">Объект для сравнения с текущим экземпляром.</param>
      <param name="comparer">Объект, предоставляющий пользовательские правила для сравнения.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="other" /> не является объектом <see cref="T:System.Tuple`7" />.</exception>
    </member>
    <member name="M:System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Возвращает значение, показывающее, равен ли текущий объект <see cref="T:System.Tuple`7" /> указанному объекту при использовании заданного метода сравнения.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="other">Объект, сравниваемый с данным экземпляром.</param>
      <param name="comparer">Объект, который определяет метод для оценки равенства двух объектов.</param>
    </member>
    <member name="M:System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Вычисляет хэш-код для текущего объекта <see cref="T:System.Tuple`7" />, используя заданный метод вычисления.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <param name="comparer">Объект, метод <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> которого вычисляет хэш-код текущего объекта <see cref="T:System.Tuple`7" />.</param>
    </member>
    <member name="M:System.Tuple`7.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`7" /> с указанным объектом и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="obj" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="obj" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="obj" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="obj" />.</returns>
      <param name="obj">Объект для сравнения с текущим экземпляром.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="obj" /> не является объектом <see cref="T:System.Tuple`7" />.</exception>
    </member>
    <member name="M:System.Tuple`7.ToString">
      <summary>Возвращает строку, представляющую значение данного экземпляра <see cref="T:System.Tuple`7" />.</summary>
      <returns>Строковое представление данного объекта <see cref="T:System.Tuple`7" />.</returns>
    </member>
    <member name="T:System.Tuple`8">
      <summary>Представляет кортеж из n элементов, где n равно 8 или больше.</summary>
      <typeparam name="T1">Тип первого компонента кортежа.</typeparam>
      <typeparam name="T2">Тип второго компонента кортежа.</typeparam>
      <typeparam name="T3">Тип третьего компонента кортежа.</typeparam>
      <typeparam name="T4">Тип четвертого компонента кортежа.</typeparam>
      <typeparam name="T5">Тип пятого компонента кортежа.</typeparam>
      <typeparam name="T6">Тип шестого компонента кортежа.</typeparam>
      <typeparam name="T7">Тип седьмого компонента кортежа.</typeparam>
      <typeparam name="TRest">Любой универсальный объект Tuple, который определяет типы остальных компонентов кортежа.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Tuple`8" />.</summary>
      <param name="item1">Значение первого компонента кортежа.</param>
      <param name="item2">Значение второго компонента кортежа.</param>
      <param name="item3">Значение третьего компонента кортежа.</param>
      <param name="item4">Значение четвертого компонента кортежа.</param>
      <param name="item5">Значение пятого компонента кортежа.</param>
      <param name="item6">Значение шестого компонента кортежа.</param>
      <param name="item7">Значение седьмого компонента кортежа.</param>
      <param name="rest">Любой универсальный объект Tuple, который содержит значения остальных компонентов кортежа.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rest" /> не является универсальным объектом Tuple.</exception>
    </member>
    <member name="M:System.Tuple`8.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли текущий объект <see cref="T:System.Tuple`8" /> указанному объекту.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="obj">Объект, сравниваемый с данным экземпляром.</param>
    </member>
    <member name="M:System.Tuple`8.GetHashCode">
      <summary>Вычисляет хэш-код для текущего объекта <see cref="T:System.Tuple`8" />.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
    </member>
    <member name="P:System.Tuple`8.Item1">
      <summary>Получает значение первого компонента текущего объекта <see cref="T:System.Tuple`8" />.</summary>
      <returns>Значение первого компонента текущего объекта <see cref="T:System.Tuple`8" />.</returns>
    </member>
    <member name="P:System.Tuple`8.Item2">
      <summary>Получает значение второго компонента текущего объекта <see cref="T:System.Tuple`8" />.</summary>
      <returns>Значение второго компонента текущего объекта <see cref="T:System.Tuple`8" />.</returns>
    </member>
    <member name="P:System.Tuple`8.Item3">
      <summary>Получает значение третьего компонента текущего объекта <see cref="T:System.Tuple`8" />.</summary>
      <returns>Значение третьего компонента текущего объекта <see cref="T:System.Tuple`8" />.</returns>
    </member>
    <member name="P:System.Tuple`8.Item4">
      <summary>Получает значение четвертого компонента текущего объекта <see cref="T:System.Tuple`8" />.</summary>
      <returns>Значение четвертого компонента текущего объекта <see cref="T:System.Tuple`8" />.</returns>
    </member>
    <member name="P:System.Tuple`8.Item5">
      <summary>Получает значение пятого компонента текущего объекта <see cref="T:System.Tuple`8" />.</summary>
      <returns>Значение пятого компонента текущего объекта <see cref="T:System.Tuple`8" />.</returns>
    </member>
    <member name="P:System.Tuple`8.Item6">
      <summary>Получает значение шестого компонента текущего объекта <see cref="T:System.Tuple`8" />.</summary>
      <returns>Значение шестого компонента текущего объекта <see cref="T:System.Tuple`8" />.</returns>
    </member>
    <member name="P:System.Tuple`8.Item7">
      <summary>Получает значение седьмого компонента текущего объекта <see cref="T:System.Tuple`8" />.</summary>
      <returns>Значение седьмого компонента текущего объекта <see cref="T:System.Tuple`8" />.</returns>
    </member>
    <member name="P:System.Tuple`8.Rest">
      <summary>Получает остальные компоненты текущего объекта <see cref="T:System.Tuple`8" />.</summary>
      <returns>Значение остальных компонентов текущего объекта <see cref="T:System.Tuple`8" />.</returns>
    </member>
    <member name="M:System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`8" /> с указанным объектом, используя заданный компаратор, и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="other" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="other" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="other" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="other" />.</returns>
      <param name="other">Объект для сравнения с текущим экземпляром.</param>
      <param name="comparer">Объект, предоставляющий пользовательские правила для сравнения.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="other" /> не является объектом <see cref="T:System.Tuple`8" />.</exception>
    </member>
    <member name="M:System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Возвращает значение, показывающее, равен ли текущий атрибут <see cref="T:System.Tuple`8" /> указанному объекту при использовании заданного метода сравнения.</summary>
      <returns>true, если текущий экземпляр равен заданному объекту; в противном случае — false.</returns>
      <param name="other">Объект, сравниваемый с данным экземпляром.</param>
      <param name="comparer">Объект, который определяет метод для оценки равенства двух объектов.</param>
    </member>
    <member name="M:System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Вычисляет хэш-код для текущего объекта <see cref="T:System.Tuple`8" />, используя заданный метод вычисления.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <param name="comparer">Объект, метод <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> которого вычисляет хэш-код текущего объекта <see cref="T:System.Tuple`8" />.</param>
    </member>
    <member name="M:System.Tuple`8.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий объект <see cref="T:System.Tuple`8" /> с указанным объектом и возвращает целое число, которое показывает положение текущего объекта относительно указанного объекта в порядке сортировки: перед объектом, после него или в той же позиции.</summary>
      <returns>Знаковое целое число, которое указывает относительное положение данного экземпляра и объекта <paramref name="obj" /> в порядке сортировки, как показано в следующей таблице. 
Значение 	Описание 	
Отрицательное целое число 	Данный экземпляр расположен до объекта <paramref name="obj" />. 	
Ноль 	Данный экземпляр имеет ту же позицию в порядке сортировки, что и объект <paramref name="obj" />. 	
Положительное целое число 	Данный экземпляр расположен после объекта <paramref name="obj" />.</returns>
      <param name="obj">Объект для сравнения с текущим экземпляром.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="obj" /> не является объектом <see cref="T:System.Tuple`8" />.</exception>
    </member>
    <member name="M:System.Tuple`8.ToString">
      <summary>Возвращает строку, представляющую значение данного экземпляра <see cref="T:System.Tuple`8" />.</summary>
      <returns>Строковое представление данного объекта <see cref="T:System.Tuple`8" />.</returns>
    </member>
    <member name="T:System.Type">
      <summary>Представляет объявления типов для классов, интерфейсов, массивов, значений, перечислений параметров, определений универсальных типов и открытых или закрытых сконструированных универсальных типов.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.AssemblyQualifiedName">
      <summary>Получает имя объекта <see cref="T:System.Type" /> с указанием сборки, включающее имя сборки, из которой был загружен объект <see cref="T:System.Type" />.</summary>
      <returns>Имя объекта <see cref="T:System.Type" /> с указанием сборки, включающее имя сборки, из которой был загружен объект <see cref="T:System.Type" />, или значение null, если текущий экземпляр представляет параметр универсального типа.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.DeclaringType">
      <summary>Возвращает тип, объявивший текущий вложенный тип или параметр универсального типа.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий включающий тип, если текущий тип является вложенным, или определение универсального типа, если параметр типа является параметром универсального типа, или тип, объявивший этот универсальный метод, если текущий тип является параметром типа универсального метода; в противном случае — значение null.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.Equals(System.Object)">
      <summary>Позволяет определить, совпадает ли базовый системный тип текущего объекта <see cref="T:System.Type" /> с базовым системным типом указанного объекта <see cref="T:System.Object" />.</summary>
      <returns>Значение true, если базовый системный тип параметра <paramref name="o" /> совпадает с базовым системным типом текущего объекта <see cref="T:System.Type" />; в противном случае — значение false. Этот метод также возвращает значение false, если параметр <paramref name="o" /> не является объектом Type.</returns>
      <param name="o">Объект, базовый системный тип которого сравнивается с базовым системным типом текущего типа <see cref="T:System.Type" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.Equals(System.Type)">
      <summary>Позволяет определить, совпадает ли базовый системный тип текущего объекта <see cref="T:System.Type" /> с базовым системным типом указанного объекта <see cref="T:System.Type" />.</summary>
      <returns>Значение true, если базовый системный тип параметра <paramref name="o" /> совпадает с базовым системным типом текущего объекта <see cref="T:System.Type" />; в противном случае — значение false.</returns>
      <param name="o">Объект, базовый системный тип которого сравнивается с базовым системным типом текущего типа <see cref="T:System.Type" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.FullName">
      <summary>Получает полное имя объекта <see cref="T:System.Type" />, включая пространство имен <see cref="T:System.Type" />, но не включая сборку.</summary>
      <returns>Полное имя объекта <see cref="T:System.Type" />, включая пространство имен <see cref="T:System.Type" />, но не включая сборку; или значение null, если текущий экземпляр представляет параметр универсального типа, тип массива, тип указателя или тип byref, в зависимости от значения параметра типа, либо универсальный тип, который, хотя и не является определением универсального типа, содержит неразрешенные параметры.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.GenericParameterPosition">
      <summary>Возвращает позицию параметра типа в списке параметров типа универсального типа или метода, которые объявили параметр, если объект <see cref="T:System.Type" /> представляет параметр типа универсального типа или метода.</summary>
      <returns>Позиция параметра типа в списке параметров типа универсального типа или метода, которые задали этот параметр. Нумерация позиций начинается с 0.</returns>
      <exception cref="T:System.InvalidOperationException">Текущий тип не представляет параметр типа. Это означает, что свойство <see cref="P:System.Type.IsGenericParameter" /> возвращает значение false.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.GenericTypeArguments">
      <summary>Получает массив аргументов универсального типа для этого типа.</summary>
      <returns>Массив аргументов универсального типа для этого типа.</returns>
    </member>
    <member name="M:System.Type.GetArrayRank">
      <summary>Получает размерность массива <see cref="T:System.Array" />.</summary>
      <returns>Значение типа <see cref="T:System.Int32" />, содержащее количество измерений текущего Type.</returns>
      <exception cref="T:System.NotSupportedException">Функциональные возможности этого метода в базовом классе не поддерживаются и вместо этого должны быть реализованы в производном классе.</exception>
      <exception cref="T:System.ArgumentException">Текущий объект Type не является массивом.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetElementType">
      <summary>При переопределении в производном классе возвращает тип объекта <see cref="T:System.Type" />, на который ссылается данный массив, указатель или ссылка или который инкапсулирован в этих объектах.</summary>
      <returns>Тип объекта <see cref="T:System.Type" />, на который ссылается данный массив, указатель или ссылка или который инкапсулирован в этих объектах или значение null, если текущий объект <see cref="T:System.Type" /> не является массивом или указателем, не передается по ссылке либо представляет универсальный тип или параметр типа в определении универсального типа или метода.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetGenericTypeDefinition">
      <summary>Возвращает объект <see cref="T:System.Type" />, представляющий определение универсального типа, на основе которого можно сконструировать текущий универсальный тип.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий определение универсального типа, на основе которого можно сконструировать текущий тип.</returns>
      <exception cref="T:System.InvalidOperationException">Текущий тип не является универсальным.  Это означает, что свойство <see cref="P:System.Type.IsGenericType" /> возвращает значение false.</exception>
      <exception cref="T:System.NotSupportedException">Вызванный метод не поддерживается в базовом классе. Реализацию должны обеспечивать производные классы.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код данного экземпляра.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.GetType(System.String)">
      <summary>Возвращает объект <see cref="T:System.Type" /> с указанным именем, учитывая при поиске регистр.</summary>
      <returns>Тип с указанным именем, если он существует; в противном случае — значение null.</returns>
      <param name="typeName">Имя искомого типа с указанием сборки. Дополнительные сведения см. в разделе <see cref="P:System.Type.AssemblyQualifiedName" />. Если тип находится в выполняемой в данный момент сборке или библиотеке Mscorlib.dll, достаточно предоставить имя типа с указанием пространства имен.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="typeName" /> имеет значение null.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">Был вызван инициализатор класса, и создано исключение.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="typeName" /> представляет универсальный тип с типом указателя, типом ByRef или значением <see cref="T:System.Void" /> в качестве одного из его аргументов типа. -или- Параметр <paramref name="typeName" /> представляет универсальный тип, который содержит неверное количество аргументов типа. -или- Параметр <paramref name="typeName" /> представляет универсальный тип, и один из его аргументов типа не удовлетворяет ограничениям соответствующего параметра типа.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> представляет массив <see cref="T:System.TypedReference" />.</exception>
      <exception cref="T:System.IO.FileLoadException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.IO.IOException" />. Сборка или одна из ее зависимостей найдена, но загрузить ее не удалось.</exception>
      <exception cref="T:System.BadImageFormatException">Сборка или одна из ее зависимостей недействительна.  -или- В настоящий момент загружена среда CLR версии 2.0 или ниже, а сборка была скомпилирована в более поздней версии.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.GetType(System.String,System.Boolean)">
      <summary>Получает объект <see cref="T:System.Type" /> с заданным именем, выполняя поиск с учетом регистра и указывая, будет ли создаваться исключение в случае невозможности найти тип.</summary>
      <returns>Тип с указанным именем. Если тип не найден, параметр <paramref name="throwOnError" /> определяет дальнейшее действие — возврат значения null или создание исключения. В некоторых случаях исключение создается независимо от значения параметра <paramref name="throwOnError" />. См. раздел "Исключения".</returns>
      <param name="typeName">Имя искомого типа с указанием сборки. Дополнительные сведения см. в разделе <see cref="P:System.Type.AssemblyQualifiedName" />. Если тип находится в выполняемой в данный момент сборке или библиотеке Mscorlib.dll, достаточно предоставить имя типа с указанием пространства имен.</param>
      <param name="throwOnError">Значение true, чтобы создать исключение, если тип не удается найти; значение false, чтобы вернуть значение null. Кроме того, при указании значения false подавляются некоторые другие условия возникновения исключений, но не все из них. См. раздел "Исключения".</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="typeName" /> имеет значение null.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">Был вызван инициализатор класса, и создано исключение.</exception>
      <exception cref="T:System.TypeLoadException">Значение параметра <paramref name="throwOnError" /> — true, а тип не найден.  -или- Значение параметра <paramref name="throwOnError" /> — true, а <paramref name="typeName" /> содержит недопустимые символы, например внедренную табуляцию. -или- Значение параметра <paramref name="throwOnError" /> — true, а <paramref name="typeName" /> является пустой строкой. -или- Значение параметра <paramref name="throwOnError" /> — true, а <paramref name="typeName" /> представляет тип массива с недопустимым размером.  -или- <paramref name="typeName" /> представляет массив <see cref="T:System.TypedReference" />.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="throwOnError" /> — true, а <paramref name="typeName" /> содержит недопустимый синтаксис. Например, "MyType[,*,]". -или-  Параметр <paramref name="typeName" /> представляет универсальный тип с типом указателя, типом ByRef или значением <see cref="T:System.Void" /> в качестве одного из его аргументов типа. -или- Параметр <paramref name="typeName" /> представляет универсальный тип, который содержит неверное количество аргументов типа. -или- Параметр <paramref name="typeName" /> представляет универсальный тип, и один из его аргументов типа не удовлетворяет ограничениям соответствующего параметра типа.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Значение параметра <paramref name="throwOnError" /> — true, а сборку или одну из ее зависимостей найти не удалось.</exception>
      <exception cref="T:System.IO.FileLoadException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.IO.IOException" />. Сборка или одна из ее зависимостей найдена, но загрузить ее не удалось.</exception>
      <exception cref="T:System.BadImageFormatException">Сборка или одна из ее зависимостей недействительна.  -или- В настоящий момент загружена среда CLR версии 2.0 или ниже, а сборка была скомпилирована в более поздней версии.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)">
      <summary>Возвращает тип, на который ссылается указанный дескриптор типа.</summary>
      <returns>Тип, на который ссылается заданный дескриптор <see cref="T:System.RuntimeTypeHandle" />, или значение null, если значение свойства <see cref="P:System.RuntimeTypeHandle.Value" /> параметра <paramref name="handle" /> равно null.</returns>
      <param name="handle">Объект, который ссылается на данный тип.</param>
      <exception cref="T:System.Reflection.TargetInvocationException">Был вызван инициализатор класса, и создано исключение.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.HasElementType">
      <summary>Получает значение, позволяющее определить, содержит ли текущий объект <see cref="T:System.Type" /> в себе другой тип или ссылку на другой тип (иными словами, является ли текущий объект <see cref="T:System.Type" /> массивом, указателем либо параметром или же он передается по ссылке).</summary>
      <returns>Значение true, если объект <see cref="T:System.Type" /> является массивом, указателем или параметром, переданным по ссылке; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsArray">
      <summary>Получает значение, позволяющее определить, является ли объект <see cref="T:System.Type" /> массивом.</summary>
      <returns>Значение true, если <see cref="T:System.Type" /> является массивом; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsByRef">
      <summary>Возвращает значение, указывающее, передан ли объект <see cref="T:System.Type" /> по ссылке.</summary>
      <returns>Значение true, если объект <see cref="T:System.Type" /> передан по ссылке; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsConstructedGenericType">
      <summary>Получает значение, указывающее, представляет ли этот данный объект сконструированный универсальный тип. Можно создать экземпляры сконструированного универсального типа.</summary>
      <returns>Значение true, если этот объект представляет сконструированный универсальный тип; в противном случае — значение false.</returns>
    </member>
    <member name="P:System.Type.IsGenericParameter">
      <summary>Получает значение, позволяющее определить, представляет ли текущий объект <see cref="T:System.Type" /> параметр типа в определении универсального типа или метода.</summary>
      <returns>Значение true, если объект <see cref="T:System.Type" /> представляет параметр определения универсального типа; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsNested">
      <summary>Возвращает значение, позволяющее определить, представляет ли текущий объект <see cref="T:System.Type" /> тип, определение которого вложено в определение другого типа.</summary>
      <returns>Значение true, если объект <see cref="T:System.Type" /> вложен в другой тип; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.IsPointer">
      <summary>Возвращает значение, указывающее, является ли объект <see cref="T:System.Type" /> указателем.</summary>
      <returns>Значение true, если <see cref="T:System.Type" /> является указателем; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeArrayType">
      <summary>Возвращает объект <see cref="T:System.Type" />, представляющий одномерный массив текущего типа с нижней границей, равной нулю.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий одномерный массив текущего типа с нижней границей, равной нулю.</returns>
      <exception cref="T:System.NotSupportedException">Вызванный метод не поддерживается в базовом классе. Реализацию должны обеспечивать производные классы.</exception>
      <exception cref="T:System.TypeLoadException">Текущий тип — <see cref="T:System.TypedReference" />. -или- Текущий тип является типом ByRef. То есть свойство <see cref="P:System.Type.IsByRef" /> возвращает значение true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeArrayType(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Type" />, представляющий массив текущего типа указанной размерности.</summary>
      <returns>Объект, представляющий массив текущего типа указанной размерности.</returns>
      <param name="rank">Размерность массива. Это число должно быть меньше либо равно 32.</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="rank" /> не является допустимым. Например, 0 или отрицательное число.</exception>
      <exception cref="T:System.NotSupportedException">Вызванный метод не поддерживается в базовом классе.</exception>
      <exception cref="T:System.TypeLoadException">Текущий тип — <see cref="T:System.TypedReference" />. -или- Текущий тип является типом ByRef. То есть свойство <see cref="P:System.Type.IsByRef" /> возвращает значение true. -или- Значение <paramref name="rank" /> больше 32.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeByRefType">
      <summary>Возвращает объект <see cref="T:System.Type" />, который представляет текущий тип при передаче в качестве параметра ref (параметра ByRef в Visual Basic).</summary>
      <returns>Объект <see cref="T:System.Type" />, который представляет текущий тип при передаче в качестве параметра ref (параметра ByRef в Visual Basic).</returns>
      <exception cref="T:System.NotSupportedException">Вызванный метод не поддерживается в базовом классе.</exception>
      <exception cref="T:System.TypeLoadException">Текущий тип — <see cref="T:System.TypedReference" />. -или- Текущий тип является типом ByRef. То есть свойство <see cref="P:System.Type.IsByRef" /> возвращает значение true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.MakeGenericType(System.Type[])">
      <summary>Замещает элементы массива типов для параметров определения текущего универсального типа и возвращает объект <see cref="T:System.Type" />, представляющий сконструированный результирующий тип.</summary>
      <returns>
        <see cref="T:System.Type" /> представляет сконструированный тип, сформированный путем замещения элементов объекта <paramref name="typeArguments" /> параметрами текущего универсального типа.</returns>
      <param name="typeArguments">Массив типов, который должен быть замещен параметрами типа текущего универсального типа.</param>
      <exception cref="T:System.InvalidOperationException">Текущий тип не представляет определение универсального типа. Это означает, что свойство <see cref="P:System.Type.IsGenericTypeDefinition" /> возвращает значение false.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="typeArguments" /> имеет значение null. -или-  Значение любого элемента массива <paramref name="typeArguments" /> — null.</exception>
      <exception cref="T:System.ArgumentException">Число элементов объекта <paramref name="typeArguments" /> не совпадает с числом параметров типа в текущем определении универсального типа. -или-  Ни в одном из элементов объекта <paramref name="typeArguments" /> не соблюдаются ограничения, заданные для соответствующего параметра текущего универсального типа.  -или-  <paramref name="typeArguments" /> содержит элемент, представляющий собой тип указателя (<see cref="P:System.Type.IsPointer" /> возвращает true), тип ByRef (<see cref="P:System.Type.IsByRef" /> возвращает true) или <see cref="T:System.Void" />.</exception>
      <exception cref="T:System.NotSupportedException">Вызванный метод не поддерживается в базовом классе. Реализацию должны обеспечивать производные классы.</exception>
    </member>
    <member name="M:System.Type.MakePointerType">
      <summary>Возвращает объект <see cref="T:System.Type" />, который представляет указатель на текущий тип.</summary>
      <returns>Объект <see cref="T:System.Type" />, который представляет указатель на текущий тип.</returns>
      <exception cref="T:System.NotSupportedException">Вызванный метод не поддерживается в базовом классе.</exception>
      <exception cref="T:System.TypeLoadException">Текущий тип — <see cref="T:System.TypedReference" />. -или- Текущий тип является типом ByRef. То есть свойство <see cref="P:System.Type.IsByRef" /> возвращает значение true.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Type.Missing">
      <summary>Представляет отсутствующее значение в данных объекта <see cref="T:System.Type" />. Это поле доступно только для чтения.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Type.Name">
    </member>
    <member name="P:System.Type.Namespace">
      <summary>Получает пространство имен объекта <see cref="T:System.Type" />.</summary>
      <returns>Пространство имен <see cref="T:System.Type" /> или значение null, если текущий экземпляр не имеет пространства имен или представляет универсальный параметр.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Type.ToString">
      <summary>Возвращает объект типа String, представляющий имя текущего объекта Type.</summary>
      <returns>Объект типа <see cref="T:System.String" />, представляющий имя текущего типа <see cref="T:System.Type" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Type.TypeHandle">
      <summary>Получает дескриптор текущего объекта <see cref="T:System.Type" />.</summary>
      <returns>Дескриптор текущего объекта <see cref="T:System.Type" />.</returns>
      <exception cref="T:System.NotSupportedException">В настоящее время платформа .NET Compact Framework не поддерживает это свойство.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.TypeAccessException">
      <summary>Исключение, возникающее, когда метод пытается использовать тип, к которому у него нет доступа.</summary>
    </member>
    <member name="M:System.TypeAccessException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.TypeAccessException" /> системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.TypeAccessException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.TypeAccessException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message">Сообщение с описанием исключения. Вызывающий объект этого конструктора должен убедиться, что эта строка локализована для текущего языка и региональных параметров системы.</param>
    </member>
    <member name="M:System.TypeAccessException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.TypeAccessException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение с описанием исключения. Вызывающий объект этого конструктора должен убедиться, что эта строка локализована для текущего языка и региональных параметров системы.</param>
      <param name="inner">Исключение, которое вызвало текущее исключение. Если значение параметра <paramref name="inner" /> не равно null, текущее исключение вызывается в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.TypeInitializationException">
      <summary>Исключение, которое выбрасывается как оболочка для исключения, выброшенного инициализатором класса. Этот класс не наследуется.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TypeInitializationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.TypeInitializationException" /> используемым по умолчанию сообщением об ошибке, указанным именем типа и ссылкой на внутреннее исключение, которое является основной причиной возникновения данного исключения.</summary>
      <param name="fullTypeName">Полное имя типа, который не удалось инициализировать.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="innerException" /> не является указателем null (Nothing в Visual Basic), то текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="P:System.TypeInitializationException.TypeName">
      <summary>Возвращает полное имя типа, который не удалось инициализировать.</summary>
      <returns>Полное имя типа, который не удалось инициализировать.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.TypeLoadException">
      <summary>Исключение, выбрасываемое при сбоях во время загрузки типов.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.TypeLoadException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.TypeLoadException" />.</summary>
    </member>
    <member name="M:System.TypeLoadException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.TypeLoadException" />, используя указанное сообщение об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.TypeLoadException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.TypeLoadException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="inner">Исключение, которое вызвало текущее исключение. Если значение параметра <paramref name="inner" /> не равно null, текущее исключение вызывается в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="P:System.TypeLoadException.Message">
      <summary>Возвращает сообщение об ошибке для данного исключения.</summary>
      <returns>Строка сообщения об ошибке.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.TypeLoadException.TypeName">
      <summary>Возвращает полное имя типа, вызывающего исключение.</summary>
      <returns>Полное имя типа.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.UInt16">
      <summary>Представляет беззнаковое 16-разрядное целое число.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.CompareTo(System.UInt16)">
      <summary>Сравнивает данный экземпляр с заданным 16-битовым целым числом без знака и возвращает значение, указывающее, как соотносятся их значения.</summary>
      <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />. 
Возвращаемое значение  	Описание  	
Меньше нуля  	Данный экземпляр меньше <paramref name="value" />.  	
Zero  	Этот экземпляр и параметр <paramref name="value" /> равны.  	
Больше нуля.  	Этот экземпляр больше параметра <paramref name="value" />.</returns>
      <param name="value">Целое число без знака для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt16.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>Значение true, если параметр <paramref name="obj" /> является экземпляром типа <see cref="T:System.UInt16" /> и равен значению данного экземпляра; в противном случае — значение false.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt16.Equals(System.UInt16)">
      <summary>Возвращает значение, указывающее, равен ли данный экземпляр заданному значению типа <see cref="T:System.UInt16" />.</summary>
      <returns>true, если значение параметра <paramref name="obj" /> совпадает со значением данного экземпляра; в противном случае — false.</returns>
      <param name="obj">16-разрядное целое число без знака для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt16.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UInt16.MaxValue">
      <summary>Представляет наибольшее возможное значение типа <see cref="T:System.UInt16" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UInt16.MinValue">
      <summary>Представляет минимальное допустимое значение типа <see cref="T:System.UInt16" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String)">
      <summary>Преобразует строковое представление числа в эквивалентное ему 16-битовое целое число без знака.</summary>
      <returns>16-разрядное целое число без знака, эквивалентное числу, заданному параметром <paramref name="s" />.</returns>
      <param name="s">Строка, представляющая преобразуемое число.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt16.MinValue" /> или больше значения <see cref="F:System.UInt16.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Преобразует строковое представление числа в указанном формате в эквивалентное ему 16-битовое целое число без знака.</summary>
      <returns>16-битовое целое число без знака, эквивалентное числу, заданному параметром <paramref name="s" />.</returns>
      <param name="s">Строка, представляющая преобразуемое число. Строка интерпретируется с использованием стиля, указанного параметром <paramref name="style" />.</param>
      <param name="style">Побитовое сочетание значений перечисления, которое показывает разрешенный формат параметра <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> не соответствует формату, заданному в параметре <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt16.MinValue" /> или больше значения <see cref="F:System.UInt16.MaxValue" />.  -или- Параметр <paramref name="s" /> включает дробные разряды, не равные нулю.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в формате, соответствующем стилю, языку и региональным параметрам, в эквивалентное ему 16-битовое целое число без знака.</summary>
      <returns>16-битовое целое число без знака, эквивалентное числу, заданному параметром <paramref name="s" />.</returns>
      <param name="s">Строка, представляющая преобразуемое число. Строка интерпретируется с использованием стиля, указанного параметром <paramref name="style" />.</param>
      <param name="style">Побитовое сочетание значений перечисления, обозначающих элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> не соответствует формату, заданному в параметре <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше <see cref="F:System.UInt16.MinValue" /> или больше <see cref="F:System.UInt16.MaxValue" />.  -или- Параметр <paramref name="s" /> включает дробные разряды, не равные нулю.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.Parse(System.String,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в эквивалентное ему 16-разрядное целое число без знака в указанном формате, соответствующем языку и региональным параметрам.</summary>
      <returns>16-битовое целое число без знака, эквивалентное числу, заданному параметром <paramref name="s" />.</returns>
      <param name="s">Строка, представляющая преобразуемое число.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> является неправильным.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt16.MinValue" /> или больше значения <see cref="F:System.UInt16.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Значение  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки. 	
Zero  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и объект <paramref name="value" />. 	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="value" /> в порядке сортировки. -или-  Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="value" /> не является объектом <see cref="T:System.UInt16" />.</exception>
    </member>
    <member name="M:System.UInt16.ToString">
      <summary>Преобразовывает числовое значение данного экземпляра в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения данного экземпляра, состоящее из последовательности цифр от 0 до 9 без знака и начальных нулей.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.ToString(System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, состоящее из последовательности цифр от 0 до 9 без знака и начальных нулей.</returns>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.ToString(System.String)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанного формата.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</returns>
      <param name="format">Строка числового формата.</param>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> недопустим.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.ToString(System.String,System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
      <param name="format">Строка числового формата.</param>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> не является допустимым.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)">
      <summary>Предпринимает попытку преобразовать строковое представление числа в формате, соответствующем стилю, языку и региональным параметрам, в эквивалентное 16-разрядное целое число без знака. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, представляющая преобразуемое число. Строка интерпретируется с использованием стиля, указанного параметром <paramref name="style" />.</param>
      <param name="style">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <param name="result">При возвращении этим методом содержит 16-разрядное целочисленное значение без знака, эквивалентное числу, содержащемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось неудачей. Преобразование завершается неудачей, если значение параметра <paramref name="s" /> равно null, либо его формат не соответствует формату, заданному в параметре <paramref name="style" />, либо оно меньше <see cref="F:System.UInt16.MinValue" /> или больше <see cref="F:System.UInt16.MaxValue" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt16.TryParse(System.String,System.UInt16@)">
      <summary>Предпринимает попытку преобразования строкового представления числа в эквивалентное ему 16-разрядное целое число без знака. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, представляющая преобразуемое число.</param>
      <param name="result">После завершения метода содержит 16-разрядное целое число без знака, эквивалентное числу, содержавшемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось неудачно. Преобразование завершается неудачей, если значение параметра <paramref name="s" /> равно null, или задано в неверном формате, или представляет число, меньше <see cref="F:System.UInt16.MinValue" /> либо больше <see cref="F:System.UInt16.MaxValue" />. Этот параметр передается без инициализации.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UInt32">
      <summary>Представляет беззнаковое 32-разрядное целое число.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.CompareTo(System.UInt32)">
      <summary>Сравнивает данный экземпляр с заданным 32-битовым целым числом без знака и возвращает значение, указывающее, как соотносятся их значения.</summary>
      <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />. 
Возвращаемое значение  	Описание  	
Меньше нуля  	Данный экземпляр меньше <paramref name="value" />.  	
Zero  	Этот экземпляр и параметр <paramref name="value" /> равны.  	
Больше нуля.  	Этот экземпляр больше параметра <paramref name="value" />.</returns>
      <param name="value">Целое число без знака для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt32.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>Значение true, если параметр <paramref name="obj" /> является экземпляром типа <see cref="T:System.UInt32" /> и равен значению данного экземпляра; в противном случае — значение false.</returns>
      <param name="obj">Объект для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt32.Equals(System.UInt32)">
      <summary>Возвращает значение, позволяющее определить, равен ли данный экземпляр заданному объекту типа <see cref="T:System.UInt32" />.</summary>
      <returns>true, если значение параметра <paramref name="obj" /> совпадает со значением данного экземпляра; в противном случае — false.</returns>
      <param name="obj">Значение для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt32.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UInt32.MaxValue">
      <summary>Представляет наибольшее возможное значение типа <see cref="T:System.UInt32" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UInt32.MinValue">
      <summary>Представляет минимально допустимое значение типа <see cref="T:System.UInt32" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String)">
      <summary>Преобразует строковое представление числа в эквивалентное ему 32-битовое целое число без знака.</summary>
      <returns>32-битовое целое число без знака, эквивалентное числу, которое содержится в параметре <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая число для преобразования.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="s" /> — null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> имеет неправильный формат.</exception>
      <exception cref="T:System.OverflowException">Значение параметра <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt32.MinValue" /> или больше значения <see cref="F:System.UInt32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Преобразует строковое представление числа в указанном формате в эквивалентное ему 32-битовое целое число без знака.</summary>
      <returns>32-разрядное целое число без знака, эквивалентное числу, заданному параметром <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая число для преобразования. Строка интерпретируется с использованием стиля, указанного параметром <paramref name="style" />.</param>
      <param name="style">Побитовое сочетание значений перечисления, которое показывает разрешенный формат параметра <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> не соответствует формату, заданному в параметре <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />.  -или- Параметр <paramref name="s" /> включает дробные разряды, не равные нулю.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в формате, соответствующем стилю, языку и региональным параметрам, в эквивалентное ему 32-битовое целое число без знака.</summary>
      <returns>32-разрядное целое число без знака, эквивалентное числу, заданному параметром <paramref name="s" />.</returns>
      <param name="s">Строка, содержащая число для преобразования. Строка интерпретируется с использованием стиля, указанного параметром <paramref name="style" />.</param>
      <param name="style">Побитовая комбинация значений перечисления, обозначающая элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> не соответствует формату, заданному в параметре <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />.  -или- Параметр <paramref name="s" /> включает дробные разряды, не равные нулю.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.Parse(System.String,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в эквивалентное ему 32-битовое целое число без знака в указанном формате, соответствующем указанным языку и региональным параметрам.</summary>
      <returns>32-разрядное целое число без знака, эквивалентное числу, заданному параметром <paramref name="s" />.</returns>
      <param name="s">Строка, представляющая преобразуемое число.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="s" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> имеет неправильный формат.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> представляет число, которое меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Значение  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки. 	
Zero  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и объект <paramref name="value" />. 	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="value" /> в порядке сортировки. -или-  Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="value" /> не является объектом <see cref="T:System.UInt32" />.</exception>
    </member>
    <member name="M:System.UInt32.ToString">
      <summary>Преобразовывает числовое значение данного экземпляра в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения данного экземпляра, состоящее из последовательности цифр от 0 до 9 без знака и начальных нулей.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.ToString(System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, состоящее из последовательности цифр от 0 до 9 без знака и начальных нулей.</returns>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.ToString(System.String)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанного формата.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</returns>
      <param name="format">Строка числового формата.</param>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> недопустим.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.ToString(System.String,System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
      <param name="format">Строка числового формата.</param>
      <param name="provider">Объект, который представляет связанную с языком и региональными параметрами информацию о форматировании этого экземпляра.</param>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> недопустим.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32@)">
      <summary>Предпринимает попытку преобразовать строковое представление числа в формате, соответствующем стилю, языку и региональным параметрам, в эквивалентное 32-разрядное целое число без знака. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, представляющая преобразуемое число. Строка интерпретируется с использованием стиля, указанного параметром <paramref name="style" />.</param>
      <param name="style">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <param name="result">При возвращении этим методом содержит 32-разрядное целочисленное значение без знака, эквивалентное числу, содержащемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось неудачей. Преобразование завершается сбоем, если значение параметра <paramref name="s" /> равно null или <see cref="F:System.String.Empty" />, либо его формат не соответствует формату, заданному в параметре <paramref name="style" />, либо оно представляет число меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt32.TryParse(System.String,System.UInt32@)">
      <summary>Предпринимает попытку преобразования строкового представления числа в эквивалентное ему 32-разрядное целое число без знака. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, представляющая преобразуемое число.</param>
      <param name="result">После завершения метода содержит 32-разрядное целое число без знака, эквивалентное числу, содержавшемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось неудачно. Преобразование завершается неудачей, если параметр <paramref name="s" /> равен null или <see cref="F:System.String.Empty" />, либо он находится в неверном формате или представляет число меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />. Этот параметр передается без инициализации.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UInt64">
      <summary>Представляет беззнаковое 64-битовое целое число.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.CompareTo(System.UInt64)">
      <summary>Сравнивает данный экземпляр с заданным 64-битовым целым числом без знака и возвращает значение, указывающее, как соотносятся их значения.</summary>
      <returns>Знаковое число, представляющее относительные значения этого экземпляра и параметра <paramref name="value" />. 
Возвращаемое значение  	Описание  	
Меньше нуля  	Данный экземпляр меньше <paramref name="value" />.  	
Zero  	Этот экземпляр и параметр <paramref name="value" /> равны.  	
Больше нуля.  	Этот экземпляр больше параметра <paramref name="value" />.</returns>
      <param name="value">Целое число без знака для сравнения.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt64.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>Значение true, если параметр <paramref name="obj" /> является экземпляром типа <see cref="T:System.UInt64" /> и равен значению данного экземпляра; в противном случае — значение false.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt64.Equals(System.UInt64)">
      <summary>Возвращает значение, указывающее, равен ли данный экземпляр заданному значению типа <see cref="T:System.UInt64" />.</summary>
      <returns>true, если значение параметра <paramref name="obj" /> совпадает со значением данного экземпляра; в противном случае — false.</returns>
      <param name="obj">Значение типа <see cref="T:System.UInt64" /> для сравнения с данным экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UInt64.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UInt64.MaxValue">
      <summary>Представляет наибольшее возможное значение типа <see cref="T:System.UInt64" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UInt64.MinValue">
      <summary>Представляет минимальное допустимое значение типа <see cref="T:System.UInt64" />. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String)">
      <summary>Преобразует строковое представление числа в эквивалентное ему 64-битовое целое число без знака.</summary>
      <returns>64-битовое целое число без знака, эквивалентное числу, которое содержится в <paramref name="s" />.</returns>
      <param name="s">Строка, представляющая преобразуемое число.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="s" /> — null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> имеет неправильный формат.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt64.MinValue" /> или больше значения <see cref="F:System.UInt64.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Преобразует строковое представление числа в указанном формате в эквивалентное ему 64-битовое целое число без знака.</summary>
      <returns>64-битовое целое число без знака, эквивалентное числу, заданному параметром <paramref name="s" />.</returns>
      <param name="s">Строка, представляющая преобразуемое число. Строка интерпретируется с использованием стиля, указанного параметром <paramref name="style" />.</param>
      <param name="style">Побитовое сочетание значений перечисления, которое задает разрешенный формат параметра <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="s" /> — null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> не соответствует параметру <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt64.MinValue" /> или больше значения <see cref="F:System.UInt64.MaxValue" />.  -или- Параметр <paramref name="s" /> включает дробные разряды, не равные нулю.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в формате, соответствующем стилю, языку и региональным параметрам, в эквивалентное 64-разрядное целое число без знака.</summary>
      <returns>64-битовое целое число без знака, эквивалентное числу, заданному параметром <paramref name="s" />.</returns>
      <param name="s">Строка, представляющая преобразуемое число. Строка интерпретируется с использованием стиля, указанного параметром <paramref name="style" />.</param>
      <param name="style">Побитовая комбинация значений перечисления, обозначающая элементы стиля, которые могут присутствовать в параметре <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="s" /> — null.</exception>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <exception cref="T:System.FormatException">Формат параметра <paramref name="s" /> не соответствует параметру <paramref name="style" />.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt64.MinValue" /> или больше значения <see cref="F:System.UInt64.MaxValue" />.  -или- Параметр <paramref name="s" /> включает дробные разряды, не равные нулю.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.Parse(System.String,System.IFormatProvider)">
      <summary>Преобразует строковое представление числа в эквивалентное ему 64-разрядное целое число без знака в указанном формате, соответствующем языку и региональным параметрам.</summary>
      <returns>64-битовое целое число без знака, эквивалентное числу, заданному параметром <paramref name="s" />.</returns>
      <param name="s">Строка, представляющая преобразуемое число.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="s" /> — null.</exception>
      <exception cref="T:System.FormatException">Параметр <paramref name="s" /> имеет неправильный формат.</exception>
      <exception cref="T:System.OverflowException">Параметр <paramref name="s" /> представляет число, которое меньше значения <see cref="F:System.UInt64.MinValue" /> или больше значения <see cref="F:System.UInt64.MaxValue" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Значение  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки. 	
Zero  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и объект <paramref name="value" />. 	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="value" /> в порядке сортировки. -или-  Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="value">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="value" /> не является объектом <see cref="T:System.UInt64" />.</exception>
    </member>
    <member name="M:System.UInt64.ToString">
      <summary>Преобразовывает числовое значение данного экземпляра в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения данного экземпляра, состоящее из последовательности цифр от 0 до 9 без знака и начальных нулей.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.ToString(System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанных сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="provider" />.</returns>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.ToString(System.String)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанного формата.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметром <paramref name="format" />.</returns>
      <param name="format">Строка числового формата.</param>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> недопустим.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.ToString(System.String,System.IFormatProvider)">
      <summary>Преобразует числовое значение данного экземпляра в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях форматирования для данного языка и региональных параметров.</summary>
      <returns>Строковое представление значения данного экземпляра, определяемое параметрами <paramref name="format" /> и <paramref name="provider" />.</returns>
      <param name="format">Строка числового формата.</param>
      <param name="provider">Объект, который представляет связанную с языком и региональными параметрами информацию о форматировании этого экземпляра.</param>
      <exception cref="T:System.FormatException">Параметр <paramref name="format" /> недопустим.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)">
      <summary>Предпринимает попытку преобразования строкового представления числа в указанном формате, соответствующем стилю, языку и региональным параметрам, в эквивалентное 64-разрядное целое число без знака. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, представляющая преобразуемое число. Строка интерпретируется с использованием стиля, указанного параметром <paramref name="style" />.</param>
      <param name="style">Побитовая комбинация значений перечисления, которая показывает разрешенный формат параметра <paramref name="s" />. Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</param>
      <param name="provider">Объект, который предоставляет сведения о форматировании параметра <paramref name="s" />, в зависимости от языка и региональных параметров.</param>
      <param name="result">По возвращении из этого метода содержит 64-битовое целочисленное значение без знака, эквивалентное числу, содержащемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось неудачей. Преобразование завершается сбоем, если параметр <paramref name="s" /> равен null или <see cref="F:System.String.Empty" />, не находится в формате, совместимом с <paramref name="style" /> или представляет собой число меньше <see cref="F:System.UInt64.MinValue" /> или больше <see cref="F:System.UInt64.MaxValue" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="style" /> не равно значению <see cref="T:System.Globalization.NumberStyles" />.  -или- Параметр <paramref name="style" /> не является сочетанием значений <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UInt64.TryParse(System.String,System.UInt64@)">
      <summary>Предпринимает попытку преобразования строкового представления числа в эквивалентное ему 64-разрядное целое число без знака. Возвращает значение, указывающее, успешно ли выполнено преобразование.</summary>
      <returns>Значение true, если параметр <paramref name="s" /> успешно преобразован; в противном случае — значение false.</returns>
      <param name="s">Строка, представляющая преобразуемое число.</param>
      <param name="result">После завершения метода содержит 64-разрядное целое число без знака, эквивалентное числу, содержавшемуся в параметре <paramref name="s" />, если преобразование выполнено успешно, или нуль, если оно завершилось неудачно. Преобразование завершается сбоем, если параметр <paramref name="s" /> равен null или <see cref="F:System.String.Empty" />, не находится в правильном формате или представляет число меньше <see cref="F:System.UInt64.MinValue" /> или больше <see cref="F:System.UInt64.MaxValue" />. Этот параметр передается без инициализации.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UIntPtr">
      <summary>Определяемый платформой тип, который используется для представления указателя или дескриптора.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.#ctor(System.UInt32)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.UIntPtr" /> с использованием указанного 32-битового указателя или дескриптора.</summary>
      <param name="value">Указатель или дескриптор, содержащийся в 32-битовом целом числе без знака.</param>
    </member>
    <member name="M:System.UIntPtr.#ctor(System.UInt64)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.UIntPtr" /> с помощью заданного 64-битового указателя или дескриптора.</summary>
      <param name="value">Указатель или дескриптор, содержащийся в 64-битовом целом числе без знака.</param>
      <exception cref="T:System.OverflowException">На 32-разрядной платформе значение параметра <paramref name="value" /> слишком велико для представления параметра <see cref="T:System.UIntPtr" />.</exception>
    </member>
    <member name="M:System.UIntPtr.#ctor(System.Void*)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.UIntPtr" /> с использованием заданного указателя на незаданный тип.</summary>
      <param name="value">Указатель незаданного типа.</param>
    </member>
    <member name="M:System.UIntPtr.Add(System.UIntPtr,System.Int32)">
      <summary>Добавляет смещение к значению указателя без знака.</summary>
      <returns>Новый указатель без знака, получающийся при добавлении смещения <paramref name="offset" /> к указателю <paramref name="pointer" />.</returns>
      <param name="pointer">Указатель без знака, к которому требуется добавить смещение.</param>
      <param name="offset">Добавляемое смещение.</param>
    </member>
    <member name="M:System.UIntPtr.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>true, если параметр <paramref name="obj" /> является экземпляром типа <see cref="T:System.UIntPtr" /> и равен значению данного экземпляра; в противном случае — false.</returns>
      <param name="obj">Объект, сравниваемый с этим экземпляром или null.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UIntPtr.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)">
      <summary>Добавляет смещение к значению указателя без знака.</summary>
      <returns>Новый указатель без знака, получающийся при добавлении смещения <paramref name="offset" /> к указателю <paramref name="pointer" />.</returns>
      <param name="pointer">Указатель без знака, к которому требуется добавить смещение.</param>
      <param name="offset">Добавляемое смещение.</param>
    </member>
    <member name="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
      <summary>Определяет, действительно ли равны два указанных экземпляра типа <see cref="T:System.UIntPtr" />.</summary>
      <returns>Если значение параметра <paramref name="value1" /> равно <paramref name="value2" />, значение true, если нет, значение false.</returns>
      <param name="value1">Первый из сравниваемых указателей или дескрипторов.</param>
      <param name="value2">Второй из сравниваемых указателей или дескрипторов.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr">
      <summary>Преобразует значение 32-битового целого числа без знака в значение типа <see cref="T:System.UIntPtr" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.UIntPtr" />, инициализированный значением параметра <paramref name="value" />.</returns>
      <param name="value">32-разрядное целое число без знака.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr">
      <summary>Преобразует значение 64-битового целого числа без знака в <see cref="T:System.UIntPtr" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.UIntPtr" />, инициализированный значением параметра <paramref name="value" />.</returns>
      <param name="value">64-разрядное целое число без знака.</param>
      <exception cref="T:System.OverflowException">На 32-разрядной платформе значение параметра <paramref name="value" /> слишком велико для представления параметра <see cref="T:System.UIntPtr" />.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64">
      <summary>Преобразует значение заданного указателя <see cref="T:System.UIntPtr" /> в 64-битовое целое число без знака.</summary>
      <returns>Содержимое <paramref name="value" />.</returns>
      <param name="value">Указатель или дескриптор, подлежащий преобразованию.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
      <summary>Преобразует значение заданной структуры <see cref="T:System.UIntPtr" /> в указатель на неопределенный тип.</summary>
      <returns>Содержимое <paramref name="value" />.</returns>
      <param name="value">Указатель или дескриптор, подлежащий преобразованию.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
      <summary>Преобразует значение заданного указателя <see cref="T:System.UIntPtr" /> в 32-битовое целое число без знака.</summary>
      <returns>Содержимое <paramref name="value" />.</returns>
      <param name="value">Указатель или дескриптор, подлежащий преобразованию.</param>
      <exception cref="T:System.OverflowException">На 64-разрядной платформе значение указателя <paramref name="value" /> слишком велико, чтобы быть представленным 32-битовым целым числом без знака.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
      <summary>Преобразует значение заданного указателя на значение неопределенного типа в указатель <see cref="T:System.UIntPtr" />.</summary>
      <returns>Новый экземпляр <see cref="T:System.UIntPtr" />, инициализированный значением параметра <paramref name="value" />.</returns>
      <param name="value">Указатель незаданного типа.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
      <summary>Определяет, действительно ли не равны два указанных экземпляра типа <see cref="T:System.UIntPtr" /> неэквивалентными.</summary>
      <returns>Значение true, если значения параметров <paramref name="value1" /> и <paramref name="value2" /> не равны; в противном случае — значение false.</returns>
      <param name="value1">Первый из сравниваемых указателей или дескрипторов.</param>
      <param name="value2">Второй из сравниваемых указателей или дескрипторов.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)">
      <summary>Вычитает смещение из значения указателя без знака.</summary>
      <returns>Новый указатель без знака, получающийся при вычитании смещения <paramref name="offset" /> из указателя <paramref name="pointer" />.</returns>
      <param name="pointer">Указатель без знака, из которого требуется вычесть смещение.</param>
      <param name="offset">Вычитаемое смещение.</param>
    </member>
    <member name="P:System.UIntPtr.Size">
      <summary>Получает размер этого экземпляра.</summary>
      <returns>Размер указателя или дескриптора на данной платформе в байтах. Значение этого свойства равно 4 на 32-разрядной платформе, и 8 на 64-разрядной платформе.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)">
      <summary>Вычитает смещение из значения указателя без знака.</summary>
      <returns>Новый указатель без знака, получающийся при вычитании смещения <paramref name="offset" /> из указателя <paramref name="pointer" />.</returns>
      <param name="pointer">Указатель без знака, из которого требуется вычесть смещение.</param>
      <param name="offset">Вычитаемое смещение.</param>
    </member>
    <member name="M:System.UIntPtr.ToPointer">
      <summary>Преобразует значение этого экземпляра в указатель незаданного типа.</summary>
      <returns>Указатель на <see cref="T:System.Void" /> (указатель памяти содержащей данные неопределенного типа).</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.ToString">
      <summary>Преобразовывает числовое значение данного экземпляра в эквивалентное ему строковое представление.</summary>
      <returns>Строковое представление значения этого экземпляра.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.ToUInt32">
      <summary>Преобразует значение данного экземпляра в 32-битовое целое число без знака.</summary>
      <returns>32-битовое целое число без знака, эквивалентное значению данного экземпляра.</returns>
      <exception cref="T:System.OverflowException">На 64-разрядной платформе значение указателя слишком велико, чтобы быть представленным 32-битовым целым числом без знака.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.UIntPtr.ToUInt64">
      <summary>Преобразует значение данного экземпляра в 64-битовое целое число без знака.</summary>
      <returns>64-битовое целое число без знака, эквивалентное значению данного экземпляра.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UIntPtr.Zero">
      <summary>Доступное только для чтения поле, которое предоставляет указатель или дескриптор, инициализированный с нулевым значением.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.UnauthorizedAccessException">
      <summary>Исключение, возникающее в случае запрета доступа операционной системой из-за ошибки ввода-вывода или особого типа ошибки безопасности.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.UnauthorizedAccessException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UnauthorizedAccessException" />.</summary>
    </member>
    <member name="M:System.UnauthorizedAccessException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UnauthorizedAccessException" /> заданным сообщением об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.UnauthorizedAccessException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.UnauthorizedAccessException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="inner">Исключение, которое вызвало текущее исключение. Если параметр <paramref name="inner" /> не является указателем null (Nothing в Visual Basic), то текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Uri">
      <summary>Обеспечивает объектное представление универсального кода ресурсов (URI), а также простой доступ к его частям.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Uri" />, используя указанный URI.</summary>
      <param name="uriString">URI.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="uriString" /> имеет значение null.</exception>
      <exception cref="T:System.UriFormatException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.FormatException" />. <paramref name="uriString" /> пусто. -или-  Формат схемы, заданной в параметре <paramref name="uriString" />, неправильный. Дополнительные сведения см. в разделе <see cref="M:System.Uri.CheckSchemeName(System.String)" />. -или-  Параметр <paramref name="uriString" /> содержит слишком много символов косой черты. -или-  Пароль, указанный в параметре <paramref name="uriString" />, является недопустимым. -или-  Имя узла, указанное в параметре <paramref name="uriString" />, является недопустимым. -или-  Имя файла, указанное в параметре <paramref name="uriString" />, является недопустимым.  -или-  Имя пользователя, указанное в параметре <paramref name="uriString" />, является недопустимым. -или-  Имя узла или имя центра, заданное в параметре <paramref name="uriString" />, не может заканчиваться знаками обратной косой черты. -или-  Номер порта, заданный в параметре <paramref name="uriString" />, является недопустимым или не поддается анализу. -или-  Длина параметра <paramref name="uriString" /> превышает 65519 символов. -или-  Длина схемы, заданной в параметре <paramref name="uriString" />, превышает 1023 знака. -или-  В параметре <paramref name="uriString" /> содержится недопустимая последовательность символов. -или-  Путь MS-DOS, заданный в параметре <paramref name="uriString" />, должен начинаться с приставки c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.String,System.UriKind)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Uri" />, используя указанный URI. Этот конструктор позволяет указать, является ли строка URI относительным URI, абсолютным URI или неопределенным вариантом.</summary>
      <param name="uriString">Строка, позволяющая идентифицировать ресурсы, которые должны быть представлены с помощью экземпляра <see cref="T:System.Uri" />.</param>
      <param name="uriKind">Указывает, является ли строка URI относительным URI, абсолютным URI или неопределенным вариантом.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="uriKind" /> не является допустимым.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="uriString" /> имеет значение null.</exception>
      <exception cref="T:System.UriFormatException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.FormatException" />. Параметр <paramref name="uriString" /> содержит относительный URI, а значение параметра <paramref name="uriKind" /> равно <see cref="F:System.UriKind.Absolute" />. или Параметр <paramref name="uriString" /> содержит абсолютный URI, а значение параметра <paramref name="uriKind" /> равно <see cref="F:System.UriKind.Relative" />. или <paramref name="uriString" /> пусто. -или-  Формат схемы, заданной в параметре <paramref name="uriString" />, неправильный. Дополнительные сведения см. в разделе <see cref="M:System.Uri.CheckSchemeName(System.String)" />. -или-  Параметр <paramref name="uriString" /> содержит слишком много символов косой черты. -или-  Пароль, указанный в параметре <paramref name="uriString" />, является недопустимым. -или-  Имя узла, указанное в параметре <paramref name="uriString" />, является недопустимым. -или-  Имя файла, указанное в параметре <paramref name="uriString" />, является недопустимым.  -или-  Имя пользователя, указанное в параметре <paramref name="uriString" />, является недопустимым. -или-  Имя узла или имя центра, заданное в параметре <paramref name="uriString" />, не может заканчиваться знаками обратной косой черты. -или-  Номер порта, заданный в параметре <paramref name="uriString" />, является недопустимым или не поддается анализу. -или-  Длина параметра <paramref name="uriString" /> превышает 65519 символов. -или-  Длина схемы, заданной в параметре <paramref name="uriString" />, превышает 1023 знака. -или-  В параметре <paramref name="uriString" /> содержится недопустимая последовательность символов. -или-  Путь MS-DOS, заданный в параметре <paramref name="uriString" />, должен начинаться с приставки c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Uri" /> на основе заданного базового URI и строки относительного URI.</summary>
      <param name="baseUri">Базовый URI.</param>
      <param name="relativeUri">Относительный URI для добавления к базовому.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="baseUri" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="baseUri" /> не является экземпляром абсолютного <see cref="T:System.Uri" />.</exception>
      <exception cref="T:System.UriFormatException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.FormatException" />. Код URI, сформированный путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, является пустым или содержит только пробелы. -или-  Схема, заданная в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, является недопустимой. -или-  Код URI, сформированный путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, содержит слишком много знаков косой черты. -или-  Пароль, заданный в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, является недопустимым. -или-  Имя узла, заданное в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, является недопустимым. -или-  Имя файла, заданного в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, является недопустимым.  -или-  Имя пользователя, заданное в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, является недопустимым. -или-  Имя узла или имя центра, заданное в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, не может заканчиваться знаками обратной косой черты. -или-  Номер порта, заданный в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, является недопустимым или не поддается анализу. -или-  Длина URI, сформированного путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, превышает 65519 знака. -или-  Длина схемы, заданной в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, превышает 1023 знака. -или-  В URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, содержится недопустимая последовательно символов. -или-  Путь MS-DOS, заданный в параметре <paramref name="uriString" />, должен начинаться с приставки c:\\.</exception>
    </member>
    <member name="M:System.Uri.#ctor(System.Uri,System.Uri)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Uri" /> на основе сочетания заданного базового экземпляра <see cref="T:System.Uri" /> и относительного экземпляра <see cref="T:System.Uri" />.</summary>
      <param name="baseUri">Абсолютный <see cref="T:System.Uri" />, являющийся основой для нового экземпляра <see cref="T:System.Uri" />.</param>
      <param name="relativeUri">Экземпляр относительного <see cref="T:System.Uri" />, объединяемый с объектом <paramref name="baseUri" />.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="baseUri" /> не является экземпляром абсолютного <see cref="T:System.Uri" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="baseUri" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="baseUri" /> не является экземпляром абсолютного <see cref="T:System.Uri" />.</exception>
      <exception cref="T:System.UriFormatException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.FormatException" />. Код URI, сформированный путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, является пустым или содержит только пробелы. -или-  Схема, заданная в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, является недопустимой. -или-  Код URI, сформированный путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, содержит слишком много знаков косой черты. -или-  Пароль, заданный в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, является недопустимым. -или-  Имя узла, заданное в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, является недопустимым. -или-  Имя файла, заданного в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, является недопустимым.  -или-  Имя пользователя, заданное в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, является недопустимым. -или-  Имя узла или имя центра, заданное в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, не может заканчиваться знаками обратной косой черты. -или-  Номер порта, заданный в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, является недопустимым или не поддается анализу. -или-  Длина URI, сформированного путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, превышает 65519 знака. -или-  Длина схемы, заданной в URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, превышает 1023 знака. -или-  В URI, сформированном путем объединения значений параметров <paramref name="baseUri" /> и <paramref name="relativeUri" />, содержится недопустимая последовательно символов. -или-  Путь MS-DOS, заданный в параметре <paramref name="uriString" />, должен начинаться с приставки c:\\.</exception>
    </member>
    <member name="P:System.Uri.AbsolutePath">
      <summary>Возвращает абсолютный путь URI.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий абсолютный путь к ресурсу.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.AbsoluteUri">
      <summary>Возвращает абсолютный URI.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий весь URI.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Authority">
      <summary>Возвращает для сервера службу доменных имен (DNS) или IP-адрес и номер порта.</summary>
      <returns>Строка <see cref="T:System.String" />, содержащая компонент центра URI, представленного этим экземпляром.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.CheckHostName(System.String)">
      <summary>Определяет, является ли указанное имя узла допустимым именем DNS.</summary>
      <returns>Объект <see cref="T:System.UriHostNameType" />, указывающий тип имени узла. Если не удается определить тип имени узла или если имя узла представляет null или строку нулевой длины, этот метод возвращает <see cref="F:System.UriHostNameType.Unknown" />.</returns>
      <param name="name">Имя узла, подлежащее проверке. Это может быть адрес IPv4 или IPv6 или имя узла в Интернете.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.CheckSchemeName(System.String)">
      <summary>Определяет, является ли допустимым указанное имя схемы.</summary>
      <returns>Значение типа <see cref="T:System.Boolean" />, которое равно true, если имя схемы допустимо; в противном случае — значение false.</returns>
      <param name="schemeName">Имя схемы, подлежащее проверке.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.Compare(System.Uri,System.Uri,System.UriComponents,System.UriFormat,System.StringComparison)">
      <summary>Сравнивает указанные части двух URI, используя заданные правила сравнения.</summary>
      <returns>Значение типа <see cref="T:System.Int32" />, указывающее на лексическую связь между сравниваемыми компонентами <see cref="T:System.Uri" />. 
Значение 	Значение 	
Меньше нуля 	Значение параметра <paramref name="uri1" /> меньше значения <paramref name="uri2" />. 	
Ноль 	Значения параметров <paramref name="uri1" /> и <paramref name="uri2" /> равны. 	
Больше нуля. 	Значение <paramref name="uri1" /> больше значения <paramref name="uri2" />.</returns>
      <param name="uri1">Первая коллекция <see cref="T:System.Uri" />.</param>
      <param name="uri2">Вторая категория <see cref="T:System.Uri" />.</param>
      <param name="partsToCompare">Побитовое сочетание значений <see cref="T:System.UriComponents" />, которые задают сравниваемые части <paramref name="uri1" /> и <paramref name="uri2" />.</param>
      <param name="compareFormat">Одно из значений <see cref="T:System.UriFormat" />, которое задает преобразование символов в escape-последовательность, используемую при сравнении компонентов URI.</param>
      <param name="comparisonType">Одно из значений <see cref="T:System.StringComparison" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparisonType" /> не является допустимым значением <see cref="T:System.StringComparison" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Uri.DnsSafeHost">
      <summary>Возвращает не преобразованное в escape-последовательность имя узла, которое безопасно использовать для разрешения DNS.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий не преобразованную в escape-последовательность часть URI, которая соответствует узлу и которую можно использоваться для разрешения DNS; либо исходная не преобразованная в escape-последовательность строка имени узла, если она изначально допускает разрешение.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.Equals(System.Object)">
      <summary>Сравнивает два экземпляра <see cref="T:System.Uri" /> на предмет их равенства.</summary>
      <returns>Значение типа <see cref="T:System.Boolean" />, которое равно true если два экземпляра представляют один URI; в противном случае — значение false.</returns>
      <param name="comparand">Экземпляр <see cref="T:System.Uri" /> или URI, который требуется сравнить с текущим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Uri.EscapeDataString(System.String)">
      <summary>Преобразует строку в ее escape-представление.</summary>
      <returns>Структура <see cref="T:System.String" />, содержащая escape-представление структуры <paramref name="stringToEscape" />.</returns>
      <param name="stringToEscape">Строка, которую нужно преобразовать в escape-представление.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="stringToEscape" /> имеет значение null.</exception>
      <exception cref="T:System.UriFormatException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.FormatException" />. Длина параметра <paramref name="stringToEscape" /> превышает 32766 символов.</exception>
    </member>
    <member name="M:System.Uri.EscapeUriString(System.String)">
      <summary>Преобразует строку URI в ее escape-представление.</summary>
      <returns>Структура <see cref="T:System.String" />, содержащая escape-представление структуры <paramref name="stringToEscape" />.</returns>
      <param name="stringToEscape">Строка, которую нужно преобразовать в escape-представление.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="stringToEscape" /> имеет значение null.</exception>
      <exception cref="T:System.UriFormatException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.FormatException" />. Длина параметра <paramref name="stringToEscape" /> превышает 32766 символов.</exception>
    </member>
    <member name="P:System.Uri.Fragment">
      <summary>Возвращает фрагмент URI.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий любые сведения о фрагменте URI.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
      <summary>Возвращает заданные компоненты текущего экземпляра, используя указанное для специальных знаков указанное escape-преобразование.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий компоненты.</returns>
      <param name="components">Побитовое сочетание значений <see cref="T:System.UriComponents" />, позволяющее определить, какие части текущего экземпляра будут возвращены вызывающему оператору.</param>
      <param name="format">Одно из значений <see cref="T:System.UriFormat" />, позволяющее управлять преобразованием специальных знаков в escape-последовательности.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="uriComponents" /> не является сочетанием допустимых значений <see cref="T:System.UriComponents" />.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий <see cref="T:System.Uri" /> не является абсолютным URI. Относительные URI в этом методе использовать нельзя.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.GetHashCode">
      <summary>Возвращает хэш-код для URI.</summary>
      <returns>Значение типа <see cref="T:System.Int32" />, содержащее хэш-значение, созданное для этого URI.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Host">
      <summary>Возвращает компонент узла этого экземпляра.</summary>
      <returns>Строка <see cref="T:System.String" />, которая содержит имя узла. Обычно это DNS-имя узла или IP-адрес сервера.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.HostNameType">
      <summary>Возвращает тип имени узла, заданного в URI.</summary>
      <returns>Элемент перечисления <see cref="T:System.UriHostNameType" />.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsAbsoluteUri">
      <summary>Получает значение, позволяющее определить, является ли экземпляр <see cref="T:System.Uri" /> абсолютным.</summary>
      <returns>Значение типа <see cref="T:System.Boolean" />, которое равно true, если экземпляр <see cref="T:System.Uri" /> является абсолютным; в противном случае — значение false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.IsBaseOf(System.Uri)">
      <summary>Определяет, является ли текущий экземпляр <see cref="T:System.Uri" /> основой указанного экземпляра <see cref="T:System.Uri" />.</summary>
      <returns>Значение true, если текущий экземпляр <see cref="T:System.Uri" /> является основной для <paramref name="uri" />; в противном случае — значение false.</returns>
      <param name="uri">Указанный экземпляр <see cref="T:System.Uri" />, который необходимо проверить.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="uri" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsDefaultPort">
      <summary>Возвращает значение, позволяющее определить, является ли номер порта, указанный в URI, портом данной схемы по умолчанию.</summary>
      <returns>Значение типа <see cref="T:System.Boolean" />, которое равно true, если значение свойства <see cref="P:System.Uri.Port" /> является портом данной схемы по умолчанию; в противном случае — значение false.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsFile">
      <summary>Возвращает значение, позволяющее определить, представляет ли заданный <see cref="T:System.Uri" /> код URI файла.</summary>
      <returns>Значение типа <see cref="T:System.Boolean" />, которое равно true, если <see cref="T:System.Uri" /> является URI файла; в противном случае — значение false.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsLoopback">
      <summary>Возвращает значение, позволяющее определить, ссылается ли заданный <see cref="T:System.Uri" /> на локальный узел.</summary>
      <returns>Значение типа <see cref="T:System.Boolean" />, которое равно true, если этот <see cref="T:System.Uri" /> ссылается на локальный узел; в противном случае — значение false.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.IsUnc">
      <summary>Получает значение, позволяющее определить, является ли заданный <see cref="T:System.Uri" /> путем UNC.</summary>
      <returns>Значение типа <see cref="T:System.Boolean" />, которое равно true, если экземпляр <see cref="T:System.Uri" /> является путем UNC; в противном случае — значение false.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.IsWellFormedOriginalString">
      <summary>Указывает, является ли формат строки, использовавшейся для создания данного <see cref="T:System.Uri" />, правильным и не требующим дальнейшего преобразования в escape-последовательность.</summary>
      <returns>Значение типа <see cref="T:System.Boolean" />, равное true, если строка имеет правильный формат; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)">
      <summary>Указывает, является ли правильным формат данной строки, пытаясь создать на ее основе URI и проверяя, не требуется ли для нее дополнительное преобразование в escape-последовательность.</summary>
      <returns>Значение типа <see cref="T:System.Boolean" />, равное true , если строка имеет правильный формат; в противном случае — значение false.</returns>
      <param name="uriString">Строка, используемая при попытке создания объекта <see cref="T:System.Uri" />.</param>
      <param name="uriKind">Тип объекта <see cref="T:System.Uri" /> в параметре <paramref name="uriString" />.</param>
    </member>
    <member name="P:System.Uri.LocalPath">
      <summary>Возвращает представление имени файла в локальной операционной системе.</summary>
      <returns>Объект <see cref="T:System.String" /> содержащий представление имени файла в локальной операционной системе.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.MakeRelativeUri(System.Uri)">
      <summary>Определяет разницу между двумя экземплярами класса <see cref="T:System.Uri" />.</summary>
      <returns>Если имя узла и схема данного экземпляра URI и <paramref name="uri" /> совпадают, этот метод возвращает относительный <see cref="T:System.Uri" />, который, при добавлении к его концу текущего экземпляра URI, превратится в <paramref name="uri" />. Если имена узлов и схемы отличаются, этот метод возвращает объект <see cref="T:System.Uri" />, представляющий параметр <paramref name="uri" />.</returns>
      <param name="uri">URI для сравнения с текущим URI.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="uri" /> имеет значение null.</exception>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
    </member>
    <member name="M:System.Uri.op_Equality(System.Uri,System.Uri)">
      <summary>Определяет, равны ли значения двух экземпляров <see cref="T:System.Uri" />.</summary>
      <returns>Значение типа <see cref="T:System.Boolean" />, которое равно true, если экземпляры <see cref="T:System.Uri" /> эквиваленты; в противном случае — значение false.</returns>
      <param name="uri1">Экземпляр <see cref="T:System.Uri" /> для сравнения с <paramref name="uri2" />.</param>
      <param name="uri2">Экземпляр <see cref="T:System.Uri" /> для сравнения с <paramref name="uri1" />.</param>
      <filterpriority>3</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.op_Inequality(System.Uri,System.Uri)">
      <summary>Определяет, не равны ли значения двух экземпляров <see cref="T:System.Uri" />.</summary>
      <returns>Значение <see cref="T:System.Boolean" />, которое равно true, если два экземпляра <see cref="T:System.Uri" /> не равны; в противном случае — значение false. Если значение одного из параметров равно null, этот метод возвращает значение true.</returns>
      <param name="uri1">Экземпляр <see cref="T:System.Uri" /> для сравнения с <paramref name="uri2" />.</param>
      <param name="uri2">Экземпляр <see cref="T:System.Uri" /> для сравнения с <paramref name="uri1" />.</param>
      <filterpriority>3</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.OriginalString">
      <summary>Возвращает исходную строку URI, переданную в конструктор <see cref="T:System.Uri" />.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий точный URI, указанный при создании этого экземпляра; в противном случае — <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.PathAndQuery">
      <summary>Возвращает свойства <see cref="P:System.Uri.AbsolutePath" /> и <see cref="P:System.Uri.Query" />, разделенные вопросительным знаком (?).</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий свойства <see cref="P:System.Uri.AbsolutePath" /> и <see cref="P:System.Uri.Query" />, разделенные вопросительным знаком (?).</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Port">
      <summary>Возвращает номер порта данного URI.</summary>
      <returns>Значение типа <see cref="T:System.Int32" />, в котором содержится номер порта для данного URI.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Query">
      <summary>Возвращает любые сведения запроса, включенные в заданный URI.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий какие-либо сведения запроса, включенные в заданный URI.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Scheme">
      <summary>Возвращает имя схемы для данного URI.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий схему для данного URI, преобразованную в нижний регистр.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:System.Uri.Segments">
      <summary>Возвращает массив, содержащий сегменты пути, которые образуют указанный URI.</summary>
      <returns>Массив <see cref="T:System.String" />, содержащий сегменты пути, которые образуют указанный URI.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.ToString">
      <summary>Получает каноническое строковое представление заданного экземпляра <see cref="T:System.Uri" />.</summary>
      <returns>Экземпляр <see cref="T:System.String" />, содержащий каноническое представление экземпляра <see cref="T:System.Uri" /> без преобразования в escape-последовательность. В escape-последовательность преобразовываются только знаки #, ? и %.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Uri.TryCreate(System.String,System.UriKind,System.Uri@)">
      <summary>Создает новый <see cref="T:System.Uri" />, используя заданный экземпляр <see cref="T:System.String" /> и <see cref="T:System.UriKind" />.</summary>
      <returns>Значение типа <see cref="T:System.Boolean" />, которое равно true, если <see cref="T:System.Uri" /> успешно создан; в противном случае — значение false.</returns>
      <param name="uriString">Объект типа <see cref="T:System.String" />, представляющий объект <see cref="T:System.Uri" />.</param>
      <param name="uriKind">Тип URI.</param>
      <param name="result">При возврате этим методом, он содержит сконструированный <see cref="T:System.Uri" />.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.String,System.Uri@)">
      <summary>Создает новый <see cref="T:System.Uri" />, используя заданные экземпляры базового и относительного <see cref="T:System.String" />.</summary>
      <returns>Значение типа <see cref="T:System.Boolean" />, которое равно true, если <see cref="T:System.Uri" /> успешно создан; в противном случае — значение false.</returns>
      <param name="baseUri">Базовый <see cref="T:System.Uri" />.</param>
      <param name="relativeUri">Относительный <see cref="T:System.Uri" />, представленный в виде <see cref="T:System.String" />, для добавления к базовому <see cref="T:System.Uri" />.</param>
      <param name="result">При возвращении данным методом содержит <paramref name="baseUri" />, составленный из значений <paramref name="relativeUri" /> и <see cref="T:System.Uri" />. Этот параметр передается без инициализации.</param>
    </member>
    <member name="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
      <summary>Создает новый <see cref="T:System.Uri" />, используя заданные экземпляры базового и относительного <see cref="T:System.Uri" />.</summary>
      <returns>Значение типа <see cref="T:System.Boolean" />, которое равно true, если <see cref="T:System.Uri" /> успешно создан; в противном случае — значение false.</returns>
      <param name="baseUri">Базовый <see cref="T:System.Uri" />.</param>
      <param name="relativeUri">Относительный <see cref="T:System.Uri" /> для добавления к базовому <see cref="T:System.Uri" />.</param>
      <param name="result">При возвращении данным методом содержит <paramref name="baseUri" />, составленный из значений <paramref name="relativeUri" /> и <see cref="T:System.Uri" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="baseUri" /> имеет значение null.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Uri.UnescapeDataString(System.String)">
      <summary>Отменяет преобразование строки в escape-представление.</summary>
      <returns>Структура <see cref="T:System.String" />, содержащая структуру <paramref name="stringToUnescape" />, для которой было отменено escape-преобразование.</returns>
      <param name="stringToUnescape">Строка, для которой нужно отменить преобразование в escape-представление.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="stringToUnescape" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Uri.UserEscaped">
      <summary>Указывает на то, что строка URI не была полностью преобразована в escape-последовательность перед созданием экземпляр класса <see cref="T:System.Uri" />.</summary>
      <returns>Значение типа <see cref="T:System.Boolean" />, которое равно true, если при создании экземпляра <see cref="T:System.Uri" /> для параметра <paramref name="dontEscape" /> было задано значение true; в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Uri.UserInfo">
      <summary>Возвращает имя пользователя, пароль или другие связанные с пользователем сведения, которые соответствуют заданному URI.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий сведения о пользователе, связанные с данным URI. Возвращаемое значение не содержит знак "@", зарезервированный для отделения части URI, в которой указываются сведения о пользователе.</returns>
      <exception cref="T:System.InvalidOperationException">Этот экземпляр представляет относительный URI, а это свойство допустимо использовать только для абсолютных URI.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="T:System.UriComponents">
      <summary>Задает части <see cref="T:System.Uri" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UriComponents.AbsoluteUri">
      <summary>Данные <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" />, <see cref="P:System.Uri.LocalPath" />, <see cref="P:System.Uri.Query" /> и <see cref="P:System.Uri.Fragment" />.</summary>
    </member>
    <member name="F:System.UriComponents.Fragment">
      <summary>Данные <see cref="P:System.Uri.Fragment" />.</summary>
    </member>
    <member name="F:System.UriComponents.Host">
      <summary>Данные <see cref="P:System.Uri.Host" />.</summary>
    </member>
    <member name="F:System.UriComponents.HostAndPort">
      <summary>Данные <see cref="P:System.Uri.Host" /> и <see cref="P:System.Uri.Port" />. Если в составе URI отсутствуют данные порта и объекту присвоен порт по умолчанию <see cref="P:System.Uri.Scheme" />, возвращается порт по умолчанию. Если порт по умолчанию отсутствует, возвращается значение -1.</summary>
    </member>
    <member name="F:System.UriComponents.HttpRequestUrl">
      <summary>Данные <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" />, <see cref="P:System.Uri.Port" />, <see cref="P:System.Uri.LocalPath" /> и <see cref="P:System.Uri.Query" />.</summary>
    </member>
    <member name="F:System.UriComponents.KeepDelimiter">
      <summary>Указывает, следует ли включать разделитель.</summary>
    </member>
    <member name="F:System.UriComponents.NormalizedHost">
      <summary>Нормализованная форма <see cref="P:System.Uri.Host" />.</summary>
    </member>
    <member name="F:System.UriComponents.Path">
      <summary>Данные <see cref="P:System.Uri.LocalPath" />.</summary>
    </member>
    <member name="F:System.UriComponents.PathAndQuery">
      <summary>Данные <see cref="P:System.Uri.LocalPath" /> и <see cref="P:System.Uri.Query" />. См. также описание свойства <see cref="P:System.Uri.PathAndQuery" />.</summary>
    </member>
    <member name="F:System.UriComponents.Port">
      <summary>Данные <see cref="P:System.Uri.Port" />.</summary>
    </member>
    <member name="F:System.UriComponents.Query">
      <summary>Данные <see cref="P:System.Uri.Query" />.</summary>
    </member>
    <member name="F:System.UriComponents.Scheme">
      <summary>Данные <see cref="P:System.Uri.Scheme" />.</summary>
    </member>
    <member name="F:System.UriComponents.SchemeAndServer">
      <summary>Данные <see cref="P:System.Uri.Scheme" />, <see cref="P:System.Uri.Host" /> и <see cref="P:System.Uri.Port" />.</summary>
    </member>
    <member name="F:System.UriComponents.SerializationInfoString">
      <summary>Полный контекст <see cref="T:System.Uri" />, необходимый для средств сериализации универсальных кодов ресурса (URI). Этот контекст включает область протокола IPv6.</summary>
    </member>
    <member name="F:System.UriComponents.StrongAuthority">
      <summary>Данные <see cref="P:System.Uri.UserInfo" />, <see cref="P:System.Uri.Host" /> и <see cref="P:System.Uri.Port" />. Если в составе <see cref="T:System.Uri" /> отсутствуют данные порта и объекту присвоен порт по умолчанию <see cref="P:System.Uri.Scheme" />, возвращается порт по умолчанию. Если порт по умолчанию отсутствует, возвращается значение -1.</summary>
    </member>
    <member name="F:System.UriComponents.StrongPort">
      <summary>Данные <see cref="P:System.Uri.Port" />. Если в составе <see cref="T:System.Uri" /> отсутствуют данные порта и объекту присвоен порт по умолчанию <see cref="P:System.Uri.Scheme" />, возвращается порт по умолчанию. Если порт по умолчанию отсутствует, возвращается значение -1.</summary>
    </member>
    <member name="F:System.UriComponents.UserInfo">
      <summary>Данные <see cref="P:System.Uri.UserInfo" />.</summary>
    </member>
    <member name="T:System.UriFormat">
      <summary>Управляет способом преобразования специальных знаков в информации универсального кода ресурса (URI).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.UriFormat.SafeUnescaped">
      <summary>Символы, имеющие зарезервированное значение в компонентах запрошенного URI, остаются преобразованными. Остальные символы не преобразуются. См. примечания.</summary>
    </member>
    <member name="F:System.UriFormat.Unescaped">
      <summary>Преобразование не произведено.</summary>
    </member>
    <member name="F:System.UriFormat.UriEscaped">
      <summary>Преобразование выполнено в соответствии с правилами стандарта RFC 2396.</summary>
    </member>
    <member name="T:System.UriHostNameType">
      <summary>Определяет типы имен узелов для метода <see cref="M:System.Uri.CheckHostName(System.String)" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.UriHostNameType.Basic">
      <summary>узел установлен, однако не удается определить тип.</summary>
    </member>
    <member name="F:System.UriHostNameType.Dns">
      <summary>Имя узла представлено в виде DNS-имени.</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv4">
      <summary>Имя узла представлено в формате IPv4.</summary>
    </member>
    <member name="F:System.UriHostNameType.IPv6">
      <summary>Имя узла представлено в формате IPv6.</summary>
    </member>
    <member name="F:System.UriHostNameType.Unknown">
      <summary>Тип имени узла не поддерживается.</summary>
    </member>
    <member name="T:System.UriKind">
      <summary>Определяет виды <see cref="T:System.Uri" /> для <see cref="M:System.Uri.IsWellFormedUriString(System.String,System.UriKind)" /> и нескольких методов <see cref="Overload:System.Uri.#ctor" /> methods.</summary>
    </member>
    <member name="F:System.UriKind.Absolute">
      <summary>Данный URI является абсолютным.</summary>
    </member>
    <member name="F:System.UriKind.Relative">
      <summary>Данный URI является относительным.</summary>
    </member>
    <member name="F:System.UriKind.RelativeOrAbsolute">
      <summary>Вид URI не определен.</summary>
    </member>
    <member name="T:System.ValueType">
      <summary>Предоставляет базовый класс для типов значений.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ValueType.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ValueType" />.</summary>
    </member>
    <member name="M:System.ValueType.Equals(System.Object)">
      <summary>Показывает, равен ли этот экземпляр заданному объекту.</summary>
      <returns>Значение true, если <paramref name="obj" /> и данный экземпляр относятся к одному типу и представляют одинаковые значения; в противном случае — значение false.</returns>
      <param name="obj">Объект для сравнения с текущим экземпляром.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ValueType.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>32-разрядное целое число со знаком, являющееся хэш-кодом для данного экземпляра.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.ValueType.ToString">
      <summary>Возвращает полное имя типа этого экземпляра.</summary>
      <returns>Объект типа <see cref="T:System.String" />, содержащий полное имя типа.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Version">
      <summary>Представляет номер версии сборки, операционной системы или среды CLR. Этот класс не наследуется.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.#ctor(System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Version" /> с помощью указанных основного и дополнительного номеров версии.</summary>
      <param name="major">Основной номер версии.</param>
      <param name="minor">Дополнительный номер версии.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="major" /> или <paramref name="minor" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Version" /> с помощью указанных основного и дополнительного номеров версии и номера построения.</summary>
      <param name="major">Основной номер версии.</param>
      <param name="minor">Дополнительный номер версии.</param>
      <param name="build">Номер построения.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра равно <paramref name="major" />, <paramref name="minor" /> или <paramref name="build" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Version.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Version" /> с помощью указанных основного и дополнительного номеров версии, номера построения и номера редакции.</summary>
      <param name="major">Основной номер версии.</param>
      <param name="minor">Дополнительный номер версии.</param>
      <param name="build">Номер построения.</param>
      <param name="revision">Номер редакции сборки.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="major" />, <paramref name="minor" />, <paramref name="build" /> или <paramref name="revision" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Version.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Version" />, используя указанную строку.</summary>
      <param name="version">Строка, содержащая основной и дополнительный номер версии, номер построения и номер редакции, в которой каждое число отделено точкой (.).</param>
      <exception cref="T:System.ArgumentException">В параметре <paramref name="version" /> содержится менее двух или более четырех компонентов.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="version" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Компонент, представляющий основной или дополнительный номера версии, номер построения или редакции, меньше нуля.</exception>
      <exception cref="T:System.FormatException">По меньшей мере, один компонент параметра <paramref name="version" /> не распознан как десятичное число.</exception>
      <exception cref="T:System.OverflowException">По меньшей мере, один компонент параметра <paramref name="version" /> представляет число, превышающее <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="P:System.Version.Build">
      <summary>Возвращает значение компонента текущего объекта <see cref="T:System.Version" />, представляющего в номере версии номер построения.</summary>
      <returns>Номер построения или значение -1, если номер сборки не определен.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.CompareTo(System.Version)">
      <summary>Сравнивает текущий объект <see cref="T:System.Version" /> с заданным объектом <see cref="T:System.Version" /> и возвращает сведения об их относительных значениях.</summary>
      <returns>Знаковое целое число, которое определяет относительные значения двух объектов, как показано в следующей таблице. 
Возвращаемое значение  	Значение  	
Меньше нуля  	В текущем объекте <see cref="T:System.Version" /> указана версия, предшествующая версии, указанной в параметре <paramref name="value" />.  	
Ноль  	Версия текущего объекта <see cref="T:System.Version" /> совпадает с версией, заданной в параметре <paramref name="value" />.  	
Больше нуля.  	В текущем объекте <see cref="T:System.Version" /> указана версия, следующая за версией, указанной в параметре <paramref name="value" />.  -или- Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="value">Объект <see cref="T:System.Version" />, сравниваемый с текущим объектом <see cref="T:System.Version" />, или значение null.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.Equals(System.Object)">
      <summary>Возвращает значение, позволяющее определить, равен ли текущий объект <see cref="T:System.Version" /> указанному.</summary>
      <returns>Значение true если текущий объект <see cref="T:System.Version" /> и объект <paramref name="obj" /> оба являются объектами <see cref="T:System.Version" />, и все компоненты текущего объекта <see cref="T:System.Version" /> совпадают с соответствующими компонентами объекта <paramref name="obj" />; в противном случае — значение false.</returns>
      <param name="obj">Объект, сравниваемый с текущим объектом <see cref="T:System.Version" />, или значение null.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.Equals(System.Version)">
      <summary>Возвращает значение, позволяющее определить, представляют ли текущий объект <see cref="T:System.Version" /> и заданный объект <see cref="T:System.Version" /> одно и то же значение.</summary>
      <returns>Значение true если все компоненты текущего объекта <see cref="T:System.Version" /> совпадают с соответствующими компонентами параметра <paramref name="obj" />; в противном случае — значение false.</returns>
      <param name="obj">Объект <see cref="T:System.Version" />, сравниваемый с текущим объектом <see cref="T:System.Version" />, или значение null.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.GetHashCode">
      <summary>Возвращает хэш-код для текущего объекта <see cref="T:System.Version" />.</summary>
      <returns>Хэш-код 32-битового целого числа со знаком.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Version.Major">
      <summary>Получает значение компонента текущего объекта <see cref="T:System.Version" />, представляющего в номере версии основной номер.</summary>
      <returns>Основной номер версии.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Version.MajorRevision">
      <summary>Возвращает старшие 16 разрядов номера редакции.</summary>
      <returns>16-разрядное знаковое целое число.</returns>
    </member>
    <member name="P:System.Version.Minor">
      <summary>Возвращает значение компонента текущего объекта <see cref="T:System.Version" />, представляющего в номере версии дополнительный номер.</summary>
      <returns>Дополнительный номер версии.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Version.MinorRevision">
      <summary>Возвращает младшие 16 разрядов номера редакции.</summary>
      <returns>16-разрядное знаковое целое число.</returns>
    </member>
    <member name="M:System.Version.op_Equality(System.Version,System.Version)">
      <summary>Определяет, равны ли между собой два указанных объекта <see cref="T:System.Version" />.</summary>
      <returns>Если значение свойства <paramref name="v1" /> равно <paramref name="v2" />, значение true; в противном случае — значение false.</returns>
      <param name="v1">Первый объект <see cref="T:System.Version" />.</param>
      <param name="v2">Второй объект <see cref="T:System.Version" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_GreaterThan(System.Version,System.Version)">
      <summary>Определяет, действительно ли значение первого указанного объекта <see cref="T:System.Version" /> больше значения второго указанного объекта <see cref="T:System.Version" />.</summary>
      <returns>Значение true, если значение <paramref name="v1" /> больше значения <paramref name="v2" />; в противном случае — значение false.</returns>
      <param name="v1">Первый объект <see cref="T:System.Version" />.</param>
      <param name="v2">Второй объект <see cref="T:System.Version" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_GreaterThanOrEqual(System.Version,System.Version)">
      <summary>Определяет, является ли значение первого указанного объекта <see cref="T:System.Version" /> большим или равным значению второго указанного объекта <see cref="T:System.Version" />.</summary>
      <returns>Значение true, если значение <paramref name="v1" /> больше или равно значению <paramref name="v2" />; в противном случае — значение false.</returns>
      <param name="v1">Первый объект <see cref="T:System.Version" />.</param>
      <param name="v2">Второй объект <see cref="T:System.Version" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_Inequality(System.Version,System.Version)">
      <summary>Определяет, действительно ли два заданных объекта <see cref="T:System.Version" /> не равны.</summary>
      <returns>Значение true, если значения параметров <paramref name="v1" /> и <paramref name="v2" /> не равны; в противном случае — значение false.</returns>
      <param name="v1">Первый объект <see cref="T:System.Version" />.</param>
      <param name="v2">Второй объект <see cref="T:System.Version" />.</param>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_LessThan(System.Version,System.Version)">
      <summary>Определяет, меньше ли значение первого указанного объекта <see cref="T:System.Version" />, чем значение второго указанного объекта <see cref="T:System.Version" />.</summary>
      <returns>Значение true, если значение <paramref name="v1" /> меньше значения <paramref name="v2" />; в противном случае — значение false.</returns>
      <param name="v1">Первый объект <see cref="T:System.Version" />.</param>
      <param name="v2">Второй объект <see cref="T:System.Version" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="v1" /> имеет значение null.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.op_LessThanOrEqual(System.Version,System.Version)">
      <summary>Определяет, действительно ли значение первого указанного объекта <see cref="T:System.Version" /> меньше или равно значению второго указанного объекта <see cref="T:System.Version" />.</summary>
      <returns>Значение true, если значение <paramref name="v1" /> меньше или равно значению <paramref name="v2" />; в противном случае — значение false.</returns>
      <param name="v1">Первый объект <see cref="T:System.Version" />.</param>
      <param name="v2">Второй объект <see cref="T:System.Version" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="v1" /> имеет значение null.</exception>
      <filterpriority>3</filterpriority>
    </member>
    <member name="M:System.Version.Parse(System.String)">
      <summary>Преобразует строковое представление номера версии в эквивалентный объект <see cref="T:System.Version" />.</summary>
      <returns>Объект, эквивалентный номеру версии, который задается параметром <paramref name="input" />.</returns>
      <param name="input">Строка, содержащая преобразуемый номер версии.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="input" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">В параметре <paramref name="input" /> содержится менее двух или более четырех компонентов версий.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">По крайней мере один из компонентов в <paramref name="input" /> меньше нуля.</exception>
      <exception cref="T:System.FormatException">По крайней мере один из компонентов в <paramref name="input" /> не является целым числом.</exception>
      <exception cref="T:System.OverflowException">По меньшей мере, один компонент в <paramref name="input" /> представляет число, превышающее <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="P:System.Version.Revision">
      <summary>Возвращает значение компонента текущего объекта <see cref="T:System.Version" />, представляющего в номере версии номер редакции.</summary>
      <returns>Номер редакции или значение -1, если номер редакции не определен.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.System#IComparable#CompareTo(System.Object)">
      <summary>Сравнивает текущий экземпляр с другим объектом того же типа и возвращает целое число, которое показывает, расположен ли текущий экземпляр перед, после или на той же позиции в порядке сортировки, что и другой объект.</summary>
      <returns>Целое число со знаком, показывающее относительный порядок данного экземпляра и <paramref name="value" />. 
Возвращаемое значение  	Значение  	
Меньше нуля  	Данный экземпляр предшествует параметру <paramref name="value" /> в порядке сортировки. 	
Ноль  	Данный экземпляр занимает ту же позицию в порядке сортировки, что и объект <paramref name="value" />. 	
Больше нуля.  	Данный экземпляр следует за параметром <paramref name="value" /> в порядке сортировки. -или-  Параметр <paramref name="value" /> имеет значение null.</returns>
      <param name="version">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="value" /> не является объектом <see cref="T:System.Version" />.</exception>
    </member>
    <member name="M:System.Version.ToString">
      <summary>Преобразует значение текущего объекта <see cref="T:System.Version" /> в эквивалентное ему представление <see cref="T:System.String" />.</summary>
      <returns>Представление <see cref="T:System.String" /> для значений компонентов текущего объекта <see cref="T:System.Version" />, соответствующих основному и дополнительному номерам версий, номеру построения и номеру редакции, согласно приведенному ниже формату. Все компоненты разделены точкой (.). Квадратные скобки ("[" и "]") указывают на компонент, который не будет отображаться в возвращаемом значении, если он не определен. ОсновнойНомерВерсии.ДополнительныйНомерВерсии[.НомерПостроения[.НомерРедакции]]  Например, при создании объекта <see cref="T:System.Version" /> с помощью конструктора Version(1,1) возвращается строка "1.1". Например, при создании объекта <see cref="T:System.Version" /> с помощью конструктора Version(1,3,4,2) возвращается строка "1.3.4.2".</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.ToString(System.Int32)">
      <summary>Преобразует значение текущего объекта <see cref="T:System.Version" /> в эквивалентное ему представление <see cref="T:System.String" />. Заданное количество обозначает число возвращаемых компонент.</summary>
      <returns>Представление <see cref="T:System.String" /> для значений компонентов текущего объекта <see cref="T:System.Version" />, соответствующих основному и дополнительному номерам версий, номеру построения и номеру редакции, в котором все значения разделены точкой (.). Параметр <paramref name="fieldCount" /> определяет количество возвращаемых компонентов. 
fieldCount  	Возвращаемое значение  	
0  	Пустая строка ("").  	
1  	основной номер версии  	
2  	ОсновнойНомерВерсии.ДополнительныйНомерВерсии  	
3  	ОсновнойНомерВерсии.ДополнительныйНомерВерсии.НомерПостроения  	
4  	ОсновнойНомерВерсии.ДополнительныйНомерВерсии.НомерПостроения.НомерРедакции  	
Например, при создании объекта <see cref="T:System.Version" /> с помощь конструктора Version(1,3,5), ToString(2) возвращается строка "1.3", а метод ToString(4) выбрасывает исключение.</returns>
      <param name="fieldCount">Число возвращаемых компонентов. Значение параметра <paramref name="fieldCount" /> лежит в диапазоне от 0 до 4.</param>
      <exception cref="T:System.ArgumentException">Значение параметра <paramref name="fieldCount" /> меньше 0 или больше 4. -или-  Значение параметра <paramref name="fieldCount" /> превышает число компонентов, определенных в текущем объекте <see cref="T:System.Version" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Version.TryParse(System.String,System.Version@)">
      <summary>Предпринимает попытку преобразования строкового представления номера версии в эквивалентный объект <see cref="T:System.Version" /> и возвращает значение, позволяющее определить, успешно ли выполнено преобразование.</summary>
      <returns>true, если параметр <paramref name="input" /> успешно преобразован, в противном случае — false.</returns>
      <param name="input">Строка, содержащая преобразуемый номер версии.</param>
      <param name="result">После завершения метода содержит объект <see cref="T:System.Version" />, эквивалентный номеру, содержавшемуся в параметре <paramref name="input" />, если преобразование выполнено успешно, или объект <see cref="T:System.Version" />, в котором основной и дополнительный номера версии равны 0, если преобразование завершилось неудачно.</param>
    </member>
    <member name="T:System.Void">
      <summary>Задает тип возвращаемого значения для метода, не возвращающего значение.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.WeakReference">
      <summary>Представляет слабую ссылку, которая указывает на объект, но позволяет удалять его сборщику мусора.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.WeakReference.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.WeakReference" />, ссылающийся на заданный объект.</summary>
      <param name="target">Отслеживаемый объект или null.</param>
    </member>
    <member name="M:System.WeakReference.#ctor(System.Object,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.WeakReference" />, ссылающийся на заданный объект и использующий заданное отслеживание восстановления.</summary>
      <param name="target">Объект, для которого необходимо отслеживать восстановление.</param>
      <param name="trackResurrection">Указывает, когда необходимо прекратить отслеживание объекта. Если true, объект отслеживается после финализации; если значение false, объект отслеживается только до финализации.</param>
    </member>
    <member name="M:System.WeakReference.Finalize">
      <summary>Удаляет ссылку на целевой объект, представленный текущим объектом <see cref="T:System.WeakReference" />.</summary>
    </member>
    <member name="P:System.WeakReference.IsAlive">
      <summary>Возвращает сведения о том, был ли удален сборщиком мусора объект, на который ссылается объект <see cref="T:System.WeakReference" />.</summary>
      <returns>true, если объект, на который ссылается текущий объект <see cref="T:System.WeakReference" />, не был удален сборщиком мусора и остается доступным; в противном случае — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.WeakReference.Target">
      <summary>Возвращает или задает (целевой) объект, на который ссылается текущий объект <see cref="T:System.WeakReference" />.</summary>
      <returns>null, если объект, на который ссылается текущий объект <see cref="T:System.WeakReference" />, не был удален сборщиком мусора; в противном случае — ссылка на объект, на который ссылается текущий объект <see cref="T:System.WeakReference" />.</returns>
      <exception cref="T:System.InvalidOperationException">Ссылка на целевой объект является недопустимой. Это исключение может быть выброшено при установке данного свойства, если значением является пустая ссылка или объект финализирован во время выполнения операции установки.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.WeakReference.TrackResurrection">
      <summary>Возвращает сведения о том, отслеживается ли после финализации объект, на который ссылается текущий объект <see cref="T:System.WeakReference" />.</summary>
      <returns>true, если объект, на который ссылается текущий объект <see cref="T:System.WeakReference" />, отслеживается после финализации, или false, если этот объект отслеживается только до финализации.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.WeakReference`1">
      <summary>Представляет слабо типизированную ссылку, которая указывает на объект, но позволяет удалять его при сборке мусора.</summary>
      <typeparam name="T">Тип объекта, на который указывает ссылка.</typeparam>
    </member>
    <member name="M:System.WeakReference`1.#ctor(`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.WeakReference`1" />, который ссылается на указанный объект.</summary>
      <param name="target">Объект, на который указывает ссылка, или значение null.</param>
    </member>
    <member name="M:System.WeakReference`1.#ctor(`0,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.WeakReference`1" />, который ссылается на заданный объект и использует указанное отслеживание восстановления.</summary>
      <param name="target">Объект, на который указывает ссылка, или значение null.</param>
      <param name="trackResurrection">Значение true для отслеживания объекта после финализации; значение false для отслеживания объекта только до финализации.</param>
    </member>
    <member name="M:System.WeakReference`1.SetTarget(`0)">
      <summary>Задает целевой объект, на который ссылается этот объект <see cref="T:System.WeakReference`1" />.</summary>
      <param name="target">Новый целевой объект.</param>
    </member>
    <member name="M:System.WeakReference`1.TryGetTarget(`0@)">
      <summary>Пытается извлечь целевой объект, на который ссылается текущий объект <see cref="T:System.WeakReference`1" />.</summary>
      <returns>Значение true, если целевой объект был извлечен; в противном случае — значение false.</returns>
      <param name="target">Когда выполнение этого метода завершается, содержит целевой объект, если он доступен. Этот параметр обрабатывается как неинициализированный.</param>
    </member>
    <member name="T:System.Collections.DictionaryEntry">
      <summary>Определяет пару ключ/значение словаря, которая может быть задана или получена.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.DictionaryEntry.#ctor(System.Object,System.Object)">
      <summary>Инициализирует экземпляр типа <see cref="T:System.Collections.DictionaryEntry" /> с указанным ключом и значением.</summary>
      <param name="key">Объект, определенный в каждой паре ключ/значение.</param>
      <param name="value">Описание, связанное с параметром <paramref name="key" />.</param>
      <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="key" /> является null, и версией платформы .NET Framework является 1.0 или 1.1.</exception>
    </member>
    <member name="P:System.Collections.DictionaryEntry.Key">
      <summary>Получает или задает ключ в паре ключ/значение.</summary>
      <returns>Ключ из пары ключ/значение.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Collections.DictionaryEntry.Value">
      <summary>Получает или задает значение в паре ключ/значение.</summary>
      <returns>Значение из пары ключ/значение.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Collections.ICollection">
      <summary>Определяет размер, перечислители и методы синхронизации для всех нестандартных коллекций.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы коллекции <see cref="T:System.Collections.ICollection" /> в массив <see cref="T:System.Array" />, начиная с указанного индекса массива <see cref="T:System.Array" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.ICollection" />. Индексация в массиве <see cref="T:System.Array" /> должна начинаться с нуля.</param>
      <param name="index">Индекс (с нуля) в массиве <paramref name="array" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Массив <paramref name="array" /> является многомерным. -или-  Количество элементов в исходной коллекции <see cref="T:System.Collections.ICollection" /> превышает доступное место, начиная с индекса <paramref name="index" /> до конца массива назначения <paramref name="array" />. -или- Тип исходной коллекции <see cref="T:System.Collections.ICollection" /> нельзя автоматически привести к типу массива назначения <paramref name="array" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.ICollection.Count">
      <summary>Получает число элементов, содержащихся в коллекции <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Число элементов, содержащихся в коллекции <see cref="T:System.Collections.ICollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.ICollection.IsSynchronized">
      <summary>Получает значение, позволяющее определить, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</summary>
      <returns>true, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.ICollection.SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IComparer">
      <summary>Предоставляет метод для сравнения двух объектов.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IComparer.Compare(System.Object,System.Object)">
      <summary>Сравнение двух объектов и возврат значения, указывающего, является ли один объект меньшим, равным или большим другого.</summary>
      <returns>Знаковое целое число, которое определяет относительные значения параметров <paramref name="x" /> и <paramref name="y" />, как показано в следующей таблице. 
Значение  	Значение  	
Меньше нуля  	Значение параметра <paramref name="x" /> меньше значения параметра <paramref name="y" />.  	
Ноль  	Значения параметров <paramref name="x" /> и <paramref name="y" /> равны.  	
Больше нуля.  	Значение <paramref name="x" /> больше значения <paramref name="y" />.</returns>
      <param name="x">Первый сравниваемый объект.</param>
      <param name="y">Второй сравниваемый объект.</param>
      <exception cref="T:System.ArgumentException">Ни параметр <paramref name="x" />, ни параметр <paramref name="y" /> не реализует интерфейс <see cref="T:System.IComparable" />. -или-  Параметры <paramref name="x" /> и <paramref name="y" /> имеют разные типы и не могут сравниваться друг с другом.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IDictionary">
      <summary>Представляет небазовую коллекцию пар "ключ-значение".</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
      <summary>Добавляет элемент с предоставленными ключом и значением в объект <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">Объект <see cref="T:System.Object" /> используется в качестве ключа добавляемого элемента.</param>
      <param name="value">Объект <see cref="T:System.Object" /> используется в качестве значения добавляемого элемента.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Элемент с таким ключом уже существует в объекте <see cref="T:System.Collections.IDictionary" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.IDictionary" /> доступен только для чтения. -или-  Коллекция <see cref="T:System.Collections.IDictionary" /> имеет фиксированный размер.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Clear">
      <summary>Удаляет все элементы из объекта <see cref="T:System.Collections.IDictionary" />.</summary>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.IDictionary" /> доступен только для чтения.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Contains(System.Object)">
      <summary>Определяет, содержится ли элемент с указанным ключом в объекте <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Значение true, если в объекте <see cref="T:System.Collections.IDictionary" /> содержится элемент с данным ключом, в противном случае — false.</returns>
      <param name="key">Ключ для размещения в объекте <see cref="T:System.Collections.IDictionary" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IDictionaryEnumerator" /> для объекта <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IDictionaryEnumerator" /> для объекта <see cref="T:System.Collections.IDictionary" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.IsFixedSize">
      <summary>Получает значение, показывающее, имеет ли объект <see cref="T:System.Collections.IDictionary" /> фиксированный размер.</summary>
      <returns>true, если объект <see cref="T:System.Collections.IDictionary" /> имеет фиксированный размер, в противном случае — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.IsReadOnly">
      <summary>Возвращает значение, указывающее, является ли объект <see cref="T:System.Collections.IDictionary" /> доступным только для чтения.</summary>
      <returns>true, если объект <see cref="T:System.Collections.IDictionary" /> доступен только для чтения, в противном случае — false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.Item(System.Object)">
      <summary>Возвращает или задает элемент с указанным ключом.</summary>
      <returns>Элемент с заданным ключом, или значение null, если ключ не существует.</returns>
      <param name="key">Ключ элемента, который требуется получить или задать.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
      <exception cref="T:System.NotSupportedException">Свойство задано, и объект <see cref="T:System.Collections.IDictionary" /> доступен только для чтения. -или-  Свойство задано, ключ <paramref name="key" /> не существует в коллекции, и коллекция <see cref="T:System.Collections.IDictionary" /> имеет фиксированный размер.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.Keys">
      <summary>Получает объект <see cref="T:System.Collections.ICollection" />, содержащий ключи объекта <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Объект <see cref="T:System.Collections.ICollection" />, содержащий ключи объекта <see cref="T:System.Collections.IDictionary" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IDictionary.Remove(System.Object)">
      <summary>Удаляет элемент с указанным ключом из объекта <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">Ключ удаляемого элемента.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.IDictionary" /> доступен только для чтения. -или-  Коллекция <see cref="T:System.Collections.IDictionary" /> имеет фиксированный размер.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionary.Values">
      <summary>Получает объект <see cref="T:System.Collections.ICollection" />, содержащий значения из объекта <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Объект <see cref="T:System.Collections.ICollection" />, содержащий значения из объекта <see cref="T:System.Collections.IDictionary" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IDictionaryEnumerator">
      <summary>Перечисляет элементы неуниверсального словаря.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionaryEnumerator.Entry">
      <summary>Получает и ключ, и значение текущего элемента словаря.</summary>
      <returns>Объект <see cref="T:System.Collections.DictionaryEntry" />, содержащий и ключ, и значение текущего элемента словаря.</returns>
      <exception cref="T:System.InvalidOperationException">Перечислитель <see cref="T:System.Collections.IDictionaryEnumerator" /> размещен перед первым элементом словаря или после последнего элемента.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionaryEnumerator.Key">
      <summary>Получает ключ текущего элемента словаря.</summary>
      <returns>Ключ текущего элемента перечисления.</returns>
      <exception cref="T:System.InvalidOperationException">Перечислитель <see cref="T:System.Collections.IDictionaryEnumerator" /> размещен перед первым элементом словаря или после последнего элемента.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IDictionaryEnumerator.Value">
      <summary>Получает значение текущего элемента словаря.</summary>
      <returns>Значение текущего элемента перечисления.</returns>
      <exception cref="T:System.InvalidOperationException">Перечислитель <see cref="T:System.Collections.IDictionaryEnumerator" /> размещен перед первым элементом словаря или после последнего элемента.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IEnumerable">
      <summary>Предоставляет перечислитель, который поддерживает простой перебор элементов неуниверсальной коллекции.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IEnumerable.GetEnumerator">
      <summary>Возвращает перечислитель, осуществляющий перебор коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для перебора коллекции.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IEnumerator">
      <summary>Поддерживает простой перебор по неуниверсальной коллекции.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Collections.IEnumerator.Current">
      <summary>Получает текущий элемент в коллекции.</summary>
      <returns>Текущий элемент в коллекции.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IEnumerator.MoveNext">
      <summary>Перемещает перечислитель к следующему элементу коллекции.</summary>
      <returns>Значение true, если перечислитель был успешно перемещен к следующему элементу; значение false, если перечислитель достиг конца коллекции.</returns>
      <exception cref="T:System.InvalidOperationException">Коллекция была изменена после создания перечислителя.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IEnumerator.Reset">
      <summary>Устанавливает перечислитель в его начальное положение, т. е. перед первым элементом коллекции.</summary>
      <exception cref="T:System.InvalidOperationException">Коллекция была изменена после создания перечислителя.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IEqualityComparer">
      <summary>Определяет методы для поддержки операций сравнения объектов в отношении равенства.</summary>
    </member>
    <member name="M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)">
      <summary>Определяет, равны ли два указанных объекта.</summary>
      <returns>true, если указанные объекты равны; в противном случае — false.</returns>
      <param name="x">Первый сравниваемый объект.</param>
      <param name="y">Второй сравниваемый объект.</param>
      <exception cref="T:System.ArgumentException">Параметры <paramref name="x" /> и <paramref name="y" /> имеют разные типы и не могут сравниваться друг с другом.</exception>
    </member>
    <member name="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)">
      <summary>Возвращает хэш-код указанного объекта.</summary>
      <returns>Хэш-код указанного объекта.</returns>
      <param name="obj">Объект <see cref="T:System.Object" />, для которого необходимо возвратить хэш-код.</param>
      <exception cref="T:System.ArgumentNullException">Тип параметра <paramref name="obj" /> является ссылочным типом и значение параметра <paramref name="obj" /> — null.</exception>
    </member>
    <member name="T:System.Collections.IList">
      <summary>Представляет неуниверсальную коллекцию объектов с индивидуальным доступом, осуществляемым при помощи индекса.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Add(System.Object)">
      <summary>Добавляет элемент в интерфейс <see cref="T:System.Collections.IList" />.</summary>
      <returns>Позиция, в которую вставлен новый элемент, или -1 для обозначения, что элемент не был помещен в коллекцию.</returns>
      <param name="value">Объект, добавляемый в коллекцию <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">Список <see cref="T:System.Collections.IList" /> доступен только для чтения. -или-  Коллекция <see cref="T:System.Collections.IList" /> имеет фиксированный размер.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Clear">
      <summary>Удаляет все элементы из интерфейса <see cref="T:System.Collections.IList" />.</summary>
      <exception cref="T:System.NotSupportedException">Список <see cref="T:System.Collections.IList" /> доступен только для чтения.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Contains(System.Object)">
      <summary>Определяет, содержится ли конкретное значение в списке <see cref="T:System.Collections.IList" />.</summary>
      <returns>Значение true, если объект <see cref="T:System.Object" /> найден в <see cref="T:System.Collections.IList" />, в противном случае — значение false.</returns>
      <param name="value">Объект, который требуется найти в <see cref="T:System.Collections.IList" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.IndexOf(System.Object)">
      <summary>Определяет индекс заданного элемента в <see cref="T:System.Collections.IList" />.</summary>
      <returns>Индекс <paramref name="value" />, если он найден в списке; в противном случае -1.</returns>
      <param name="value">Объект, который требуется найти в <see cref="T:System.Collections.IList" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Insert(System.Int32,System.Object)">
      <summary>Вставляет элемент в коллекцию <see cref="T:System.Collections.IList" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить параметр <paramref name="value" />.</param>
      <param name="value">Объект, вставляемый в <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> не является допустимым индексом в списке <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.NotSupportedException">Список <see cref="T:System.Collections.IList" /> доступен только для чтения. -или-  Коллекция <see cref="T:System.Collections.IList" /> имеет фиксированный размер.</exception>
      <exception cref="T:System.NullReferenceException">Параметр <paramref name="value" /> является ссылкой со значением null в списке <see cref="T:System.Collections.IList" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IList.IsFixedSize">
      <summary>Получает значение, указывающее, имеет ли список <see cref="T:System.Collections.IList" /> фиксированный размер.</summary>
      <returns>Значение true, если список <see cref="T:System.Collections.IList" /> имеет фиксированный размер, в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IList.IsReadOnly">
      <summary>Получает значение, указывающее, является ли объект <see cref="T:System.Collections.IList" /> доступным только для чтения.</summary>
      <returns>Значение true, если интерфейс <see cref="T:System.Collections.IList" /> доступен только для чтения, в противном случае — значение false.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Collections.IList.Item(System.Int32)">
      <summary>Получает или задает элемент с указанным индексом.</summary>
      <returns>Элемент с заданным индексом.</returns>
      <param name="index">Отсчитываемый с нуля индекс получаемого или задаваемого элемента.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> не является допустимым индексом в списке <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.NotSupportedException">Свойство задано, и объект <see cref="T:System.Collections.IList" /> доступен только для чтения.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.Remove(System.Object)">
      <summary>Удаляет первое вхождение указанного объекта из <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Объект, который необходимо удалить из коллекции <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">Список <see cref="T:System.Collections.IList" /> доступен только для чтения. -или-  Коллекция <see cref="T:System.Collections.IList" /> имеет фиксированный размер.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Collections.IList.RemoveAt(System.Int32)">
      <summary>Удаляет элемент <see cref="T:System.Collections.IList" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс удаляемого элемента.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> не является допустимым индексом в списке <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.NotSupportedException">Список <see cref="T:System.Collections.IList" /> доступен только для чтения. -или-  Коллекция <see cref="T:System.Collections.IList" /> имеет фиксированный размер.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Collections.IStructuralComparable">
      <summary>Поддерживает структурное сравнение объектов коллекции.</summary>
    </member>
    <member name="M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)">
      <summary>Определяет позицию текущего объекта коллекции относительно другого объекта в порядке сортировки (находится перед другим объектов, на одной позиции с ним или после другого объекта).</summary>
      <returns>Знаковое целое число, определяющее, как соотносятся между собой текущий объект коллекции и объект <paramref name="other" />. Возможные соотношения показаны в следующей таблице. 
Возвращаемое значение 	Описание 	
-1 	Текущий экземпляр стоит перед объектом <paramref name="other" />. 	
0	Текущий экземпляр и объект <paramref name="other" /> равны. 	
1	Текущий экземпляр стоит после объекта <paramref name="other" />.</returns>
      <param name="other">Объект для сравнения с текущим экземпляром.</param>
      <param name="comparer">Объект, который сравнивает члены текущего объекта коллекции с соответствующими членами объекта <paramref name="other" />.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="other" /> и этот экземпляр не принадлежат к одному типу.</exception>
    </member>
    <member name="T:System.Collections.IStructuralEquatable">
      <summary>Определяет методы для поддержки операций сравнения объектов с целью определения их структурного равенства.</summary>
    </member>
    <member name="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
      <summary>Определяет, соблюдается ли структурное равенство между объектом и текущим экземпляром.</summary>
      <returns>true, если два объекта равны; в противном случае false.</returns>
      <param name="other">Объект для сравнения с текущим экземпляром.</param>
      <param name="comparer">Объект, определяющий, равны ли текущий экземпляр и объект <paramref name="other" />.</param>
    </member>
    <member name="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
      <summary>Возвращает хэш-код текущего экземпляра.</summary>
      <returns>Хэш-код для текущего экземпляра.</returns>
      <param name="comparer">Объект, вычисляющий хэш-код текущего объекта.</param>
    </member>
    <member name="T:System.Collections.Generic.ICollection`1">
      <summary>Определяет методы, используемые для управления универсальными коллекциями.</summary>
      <typeparam name="T">Тип элементов в коллекции.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Add(`0)">
      <summary>Добавляет элемент в коллекцию <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">Объект, добавляемый в коллекцию <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Clear">
      <summary>Удаляет все элементы из интерфейса <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Contains(`0)">
      <summary>Определяет, содержит ли коллекция <see cref="T:System.Collections.Generic.ICollection`1" /> указанное значение.</summary>
      <returns>Значение true, если объект <paramref name="item" /> найден в <see cref="T:System.Collections.Generic.ICollection`1" />; в противном случае — значение false.</returns>
      <param name="item">Объект, который требуется найти в <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
      <summary>Копирует элементы <see cref="T:System.Collections.Generic.ICollection`1" /> в массив <see cref="T:System.Array" />, начиная с указанного индекса <see cref="T:System.Array" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.Generic.ICollection`1" />. Индексация в массиве <see cref="T:System.Array" /> должна начинаться с нуля.</param>
      <param name="arrayIndex">Индекс (с нуля) в массиве <paramref name="array" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="arrayIndex" /> меньше 0.</exception>
      <exception cref="T:System.ArgumentException">Количество элементов в исходной коллекции <see cref="T:System.Collections.Generic.ICollection`1" /> превышает доступное место в целевом массиве <paramref name="array" />, начиная с индекса <paramref name="arrayIndex" /> до конца массива.</exception>
    </member>
    <member name="P:System.Collections.Generic.ICollection`1.Count">
      <summary>Получает число элементов, содержащихся в интерфейсе <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>Число элементов, содержащихся в интерфейсе <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.ICollection`1.IsReadOnly">
      <summary>Получает значение, указывающее, является ли объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступным только для чтения.</summary>
      <returns>Значение true, если <see cref="T:System.Collections.Generic.ICollection`1" /> доступна только для чтения; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Collections.Generic.ICollection`1.Remove(`0)">
      <summary>Удаляет первый экземпляр указанного объекта из коллекции <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>Значение true, если объект <paramref name="item" /> успешно удален из <see cref="T:System.Collections.Generic.ICollection`1" />, в противном случае — значение false. Этот метод также возвращает значение false, если параметр <paramref name="item" /> не найден в исходном интерфейсе <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <param name="item">Объект, который необходимо удалить из коллекции <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступен только для чтения.</exception>
    </member>
    <member name="T:System.Collections.Generic.IComparer`1">
      <summary>Определяет метод, реализуемый типом для сравнения двух объектов.</summary>
      <typeparam name="T">Тип объектов для сравнения.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)">
      <summary>Сравнение двух объектов и возврат значения, указывающего, является ли один объект меньшим, равным или большим другого.</summary>
      <returns>Знаковое целое число, которое определяет относительные значения параметров <paramref name="x" /> и <paramref name="y" />, как показано в следующей таблице. 
Значение  	Значение  	
Меньше нуля 	Значение параметра <paramref name="x" /> меньше значения параметра <paramref name="y" />. 	
Ноль 	Значения параметров <paramref name="x" /> и <paramref name="y" /> равны. 	
Больше нуля. 	Значение <paramref name="x" /> больше значения <paramref name="y" />.</returns>
      <param name="x">Первый сравниваемый объект.</param>
      <param name="y">Второй сравниваемый объект.</param>
    </member>
    <member name="T:System.Collections.Generic.IDictionary`2">
      <summary>Представляет универсальную коллекцию пар ключ/значение.</summary>
      <typeparam name="TKey">Тип ключей в словаре.</typeparam>
      <typeparam name="TValue">Тип значений в словаре.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
      <summary>Добавляет элемент с указанными ключом и значением в <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">Объект, используемый в качестве ключа добавляемого элемента.</param>
      <param name="value">Объект, используемый в качестве значения добавляемого элемента.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Элемент с таким ключом уже существует в <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IDictionary`2" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
      <summary>Определяет, содержится ли элемент с указанным ключом в <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Значение true, если в <see cref="T:System.Collections.Generic.IDictionary`2" /> содержится элемент с данным ключом; в противном случае — значение false.</returns>
      <param name="key">Ключ, который требуется найти в <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IDictionary`2.Item(`0)">
      <summary>Возвращает или задает элемент с указанным ключом.</summary>
      <returns>Элемент с указанным ключом.</returns>
      <param name="key">Ключ элемента, который требуется получить или задать.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Свойство получено и параметр <paramref name="key" /> не найден.</exception>
      <exception cref="T:System.NotSupportedException">Свойство задано, и объект <see cref="T:System.Collections.Generic.IDictionary`2" /> доступен только для чтения.</exception>
    </member>
    <member name="P:System.Collections.Generic.IDictionary`2.Keys">
      <summary>Получает интерфейс <see cref="T:System.Collections.Generic.ICollection`1" />, содержащий ключи <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.Generic.ICollection`1" />, содержащий ключи объекта, который реализует <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
      <summary>Удаляет элемент с указанным ключом из <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Значение true, если элемент успешно удален, в противном случае — значение false.  Этот метод также возвращает значение false, если параметр <paramref name="key" /> не найден в исходном объекте <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
      <param name="key">Ключ удаляемого элемента.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IDictionary`2" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
      <summary>Получает значение, связанное с указанным ключом.</summary>
      <returns>Значение true, если объект, реализующий <see cref="T:System.Collections.Generic.IDictionary`2" />, содержит элемент с указанным ключом, в противном случае — значение false.</returns>
      <param name="key">Ключ, значение которого необходимо получить.</param>
      <param name="value">Этот метод возвращает значение, связанное с указанным ключом, если он найден; в противном случае — значение по умолчанию для данного типа параметра <paramref name="value" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IDictionary`2.Values">
      <summary>Получает коллекцию <see cref="T:System.Collections.Generic.ICollection`1" />, содержащую значения из словаря <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.Generic.ICollection`1" />, содержащий значения объекта, который реализует <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.IEnumerable`1">
      <summary>Предоставляет перечислитель, который поддерживает простой перебор элементов в указанной коллекции.</summary>
      <typeparam name="T">Тип объектов для перечисления.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
      <summary>Возвращает перечислитель, выполняющий перебор элементов коллекции.</summary>
      <returns>Интерфейс <see cref="T:System.Collections.Generic.IEnumerator`1" />, который может использоваться для перебора элементов коллекции.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Collections.Generic.IEnumerator`1">
      <summary>Поддерживает простой перебор элементов универсальной коллекции.</summary>
      <typeparam name="T">Тип объектов для перечисления.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Collections.Generic.IEnumerator`1.Current">
      <summary>Получает элемент коллекции, соответствующий текущей позиции перечислителя.</summary>
      <returns>Элемент коллекции, соответствующий текущей позиции перечислителя.</returns>
    </member>
    <member name="T:System.Collections.Generic.IEqualityComparer`1">
      <summary>Определяет методы для поддержки операций сравнения объектов в отношении равенства.</summary>
      <typeparam name="T">Тип объектов для сравнения.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)">
      <summary>Определяет, равны ли два указанных объекта.</summary>
      <returns>true, если указанные объекты равны; в противном случае — false.</returns>
      <param name="x">Первый сравниваемый объект типа <paramref name="T" />.</param>
      <param name="y">Второй сравниваемый объект типа <paramref name="T" />.</param>
    </member>
    <member name="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)">
      <summary>Возвращает хэш-код указанного объекта.</summary>
      <returns>Хэш-код указанного объекта.</returns>
      <param name="obj">Объект <see cref="T:System.Object" />, для которого необходимо возвратить хэш-код.</param>
      <exception cref="T:System.ArgumentNullException">Тип параметра <paramref name="obj" /> является ссылочным типом и значение параметра <paramref name="obj" /> — null.</exception>
    </member>
    <member name="T:System.Collections.Generic.IList`1">
      <summary>Представляет коллекцию объектов, доступ к которым может быть получен отдельно, по индексу.</summary>
      <typeparam name="T">Тип элементов в списке.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.IList`1.IndexOf(`0)">
      <summary>Определяет индекс заданного элемента коллекции <see cref="T:System.Collections.Generic.IList`1" />.</summary>
      <returns>Индекс <paramref name="item" /> если он найден в списке; в противном случае его значение равно -1.</returns>
      <param name="item">Объект, который требуется найти в <see cref="T:System.Collections.Generic.IList`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
      <summary>Вставляет элемент в список <see cref="T:System.Collections.Generic.IList`1" /> по указанному индексу.</summary>
      <param name="index">Индекс (с нуля), по которому вставляется <paramref name="item" />.</param>
      <param name="item">Объект, вставляемый в <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> не является допустимым индексом в списке <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IList`1" /> доступен только для чтения.</exception>
    </member>
    <member name="P:System.Collections.Generic.IList`1.Item(System.Int32)">
      <summary>Получает или задает элемент с указанным индексом.</summary>
      <returns>Элемент с заданным индексом.</returns>
      <param name="index">Отсчитываемый с нуля индекс получаемого или задаваемого элемента.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> не является допустимым индексом в списке <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">Свойство задано, и объект <see cref="T:System.Collections.Generic.IList`1" /> доступен только для чтения.</exception>
    </member>
    <member name="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
      <summary>Удаляет элемент <see cref="T:System.Collections.Generic.IList`1" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс удаляемого элемента.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> не является допустимым индексом в списке <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">Объект <see cref="T:System.Collections.Generic.IList`1" /> доступен только для чтения.</exception>
    </member>
    <member name="T:System.Collections.Generic.IReadOnlyCollection`1">
      <summary>Представляет строго типизированную, доступную только для чтения коллекцию элементов.</summary>
      <typeparam name="T">Тип элементов.</typeparam>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyCollection`1.Count">
      <summary>Получает количество элементов коллекции.</summary>
      <returns>Количество элементов коллекции.</returns>
    </member>
    <member name="T:System.Collections.Generic.IReadOnlyDictionary`2">
      <summary>Представляет универсальную коллекцию пар "ключ-значение", доступную только для чтения.</summary>
      <typeparam name="TKey">Тип ключей в словаре, доступном только для чтения.</typeparam>
      <typeparam name="TValue">Тип значений в словаре, доступном только для чтения.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
      <summary>Определяет, содержится ли в словаре, доступном только для чтения, элемент с указанным ключом.</summary>
      <returns>Значение true, если в доступном только для чтения словаре содержится элемент с указанным ключом; в противном случае — значение false.</returns>
      <param name="key">Искомый ключ.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)">
      <summary>Получает элемент, имеющий указанный ключ в доступном только для чтения словаре.</summary>
      <returns>Элемент, имеющий указанный ключ в доступном только для чтения словаре.</returns>
      <param name="key">Искомый ключ.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">Свойство получено и параметр <paramref name="key" /> не найден.</exception>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
      <summary>Получает перечисляемую коллекция, содержащую ключи в словаре только для чтения.</summary>
      <returns>Перечисляемая коллекция, содержащая ключи в словаре только для чтения.</returns>
    </member>
    <member name="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
      <summary>Получает значение, связанное с указанным ключом.</summary>
      <returns>Значение true, если объект, который реализует интерфейс <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" />, содержит элемент, имеющий указанный ключ; в противном случае — значение false.</returns>
      <param name="key">Искомый ключ.</param>
      <param name="value">Этот метод возвращает значение, связанное с указанным ключом, если он найден; в противном случае — значение по умолчанию для данного типа параметра <paramref name="value" />. Этот параметр передается без инициализации.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
      <summary>Получает перечисляемую коллекцию, содержащая значения в словаре только для чтения.</summary>
      <returns>Перечисляемая коллекция, содержащая значения в словаре только для чтения.</returns>
    </member>
    <member name="T:System.Collections.Generic.IReadOnlyList`1">
      <summary>Представляет доступную только для чтения коллекцию объектов, доступ к которым может быть получен по индексу.</summary>
      <typeparam name="T">Тип элементов в списке, доступном только для чтения.</typeparam>
    </member>
    <member name="P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)">
      <summary>Получает элемент в коллекции по указанному индексу в списке, доступном только для чтения.</summary>
      <returns>Элемент в коллекции по указанному индексу в списке, доступном только для чтения.</returns>
      <param name="index">Индекс элемента (с нуля), который требуется получить.</param>
    </member>
    <member name="T:System.Collections.Generic.ISet`1">
      <summary>Предоставляет основной интерфейс для абстракции наборов.</summary>
      <typeparam name="T">Тип элементов в наборе.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Add(`0)">
      <summary>Добавляет элемент в текущий набор и возвращает значение, указывающее, что элемент был добавлен успешно.</summary>
      <returns>Значение true, если элемент добавлен в набор; значение false, если элемент уже был в наборе.</returns>
      <param name="item">Элемент, добавляемый в набор.</param>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Удаляет все элементы указанной коллекции из текущего набора.</summary>
      <param name="other">Коллекция элементов, удаляемых из набора.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="other" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Изменяет текущий набор, чтобы он содержал только элементы, которые также имеются в заданной коллекции.</summary>
      <param name="other">Коллекция для сравнения с текущим набором.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="other" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Определяет, является ли текущий набор должным (строгим) подмножеством заданной коллекции.</summary>
      <returns>true, если текущий набор является надлежащим подмножеством объекта <paramref name="other" />; в противном случае — значение false.</returns>
      <param name="other">Коллекция для сравнения с текущим набором.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="other" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Определяет, является ли текущий набор должным (строгим) подмножеством заданной коллекции.</summary>
      <returns>true, если текущий набор является надлежащим надмножеством объекта <paramref name="other" />; в противном случае — значение false.</returns>
      <param name="other">Коллекция для сравнения с текущим набором.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="other" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Определяет, является ли набор подмножеством заданной коллекции.</summary>
      <returns>Значение true, если текущий набор является подмножеством объекта <paramref name="other" />; в противном случае — значение false.</returns>
      <param name="other">Коллекция для сравнения с текущим набором.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="other" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Определяет, является ли текущий набор надмножеством заданной коллекции.</summary>
      <returns>Значение true, если текущий набор является надмножеством объекта <paramref name="other" />; в противном случае — значение false.</returns>
      <param name="other">Коллекция для сравнения с текущим набором.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="other" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary>Определяет, пересекаются ли текущий набор и указанная коллекция.</summary>
      <returns>Значение true, если в текущем наборе и объекте <paramref name="other" /> имеется по крайней мере один общий элемент; в противном случае — значение false.</returns>
      <param name="other">Коллекция для сравнения с текущим набором.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="other" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary>Определяет, содержат ли текущий набор и указанная коллекция одни и те же элементы.</summary>
      <returns>Значение true, если текущий набор равен объекту <paramref name="other" />; в противном случае — значение false.</returns>
      <param name="other">Коллекция для сравнения с текущим набором.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="other" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Изменяет текущий набор, чтобы он содержал только элементы, которые имеются либо в текущем наборе, либо в указанной коллекции, но не одновременно в них обоих.</summary>
      <param name="other">Коллекция для сравнения с текущим набором.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="other" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Изменяет текущий набор, чтобы он содержал все элементы, которые имеются как в текущем наборе, так и в указанной коллекции.</summary>
      <param name="other">Коллекция для сравнения с текущим набором.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="other" /> имеет значение null.</exception>
    </member>
    <member name="T:System.Collections.Generic.KeyNotFoundException">
      <summary>Исключение, выданное, когда ключ, указанный для доступа к элементу в коллекции, не соответствует ни одному ключу в коллекции.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.KeyNotFoundException" />, используя значения свойства по умолчанию.</summary>
    </member>
    <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.KeyNotFoundException" /> с указанным сообщением об ошибке.</summary>
      <param name="message">Сообщение, описывающее ошибку.</param>
    </member>
    <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.Generic.KeyNotFoundException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Collections.Generic.KeyValuePair`2">
      <summary>Определяет пару "ключ-значение", которая может быть задана или получена.</summary>
      <typeparam name="TKey">Тип ключа.</typeparam>
      <typeparam name="TValue">Тип значения.</typeparam>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Collections.Generic.KeyValuePair`2.#ctor(`0,`1)">
      <summary>Инициализирует новый экземпляр структуры <see cref="T:System.Collections.Generic.KeyValuePair`2" /> с использованием указанных ключа и значения.</summary>
      <param name="key">Объект, определенный в каждой паре ключ/значение.</param>
      <param name="value">Описание, связанное с параметром <paramref name="key" />.</param>
    </member>
    <member name="P:System.Collections.Generic.KeyValuePair`2.Key">
      <summary>Возвращает ключ из пары "ключ-значение".</summary>
      <returns>
        <paramref name="TKey" /> — ключ из структуры <see cref="T:System.Collections.Generic.KeyValuePair`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.KeyValuePair`2.ToString">
      <summary>Возвращает строковое представление структуры <see cref="T:System.Collections.Generic.KeyValuePair`2" />, используя строковые представления ключа и значения.</summary>
      <returns>Строковое представление структуры <see cref="T:System.Collections.Generic.KeyValuePair`2" />, включающее строковые представления ключа и значения.</returns>
    </member>
    <member name="P:System.Collections.Generic.KeyValuePair`2.Value">
      <summary>Возвращает значение из пары "ключ-значение".</summary>
      <returns>
        <paramref name="TValue" /> — значение из структуры <see cref="T:System.Collections.Generic.KeyValuePair`2" />.</returns>
    </member>
    <member name="T:System.Collections.ObjectModel.Collection`1">
      <summary>Предоставляет базовый класс для универсальных коллекций.</summary>
      <typeparam name="T">Тип элементов в коллекции.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.ObjectModel.Collection`1" />, который является пустым.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>Инициализирует новый экземпляр <see cref="T:System.Collections.ObjectModel.Collection`1" />, который служит оболочкой для указанного списка.</summary>
      <param name="list">Список помещается в оболочку в новой коллекции.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="list" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Add(`0)">
      <summary>Добавляет объект в конец <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="item">Объект, который должен быть добавлен в конец <see cref="T:System.Collections.ObjectModel.Collection`1" />. Для ссылочных типов допускается значение null.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Clear">
      <summary>Удаляет все элементы из коллекции <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.ClearItems">
      <summary>Удаляет все элементы из коллекции <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Contains(`0)">
      <summary>Определяет, принадлежит ли элемент <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>Значение true, если параметр <paramref name="item" /> найден в коллекции <see cref="T:System.Collections.ObjectModel.Collection`1" />; в противном случае — значение false.</returns>
      <param name="item">Объект, который требуется найти в <see cref="T:System.Collections.ObjectModel.Collection`1" />. Для ссылочных типов допускается значение null.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)">
      <summary>Копирует всю коллекцию <see cref="T:System.Collections.ObjectModel.Collection`1" /> в совместимый одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса целевого массива.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы <see cref="T:System.Collections.ObjectModel.Collection`1" />. Индексация в массиве <see cref="T:System.Array" /> должна начинаться с нуля.</param>
      <param name="index">Индекс (с нуля) в массиве <paramref name="array" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Количество элементов в исходной коллекции <see cref="T:System.Collections.ObjectModel.Collection`1" /> превышает доступное место, начиная с индекса <paramref name="index" /> до конца массива назначения <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.Count">
      <summary>Получает число элементов, которое в действительности содержится в <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>Число элементов, которое в действительности содержится в <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.GetEnumerator">
      <summary>Возвращает перечислитель, осуществляющий перебор элементов массива <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IEnumerator`1" /> для <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
      <summary>Осуществляет поиск указанного объекта и возвращает индекс (с нуля) первого вхождения, найденного в пределах всей коллекции <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>Индекс (с нуля) первого вхождения параметра <paramref name="item" />, если оно найдено в коллекции <see cref="T:System.Collections.ObjectModel.Collection`1" />; в противном случае -1.</returns>
      <param name="item">Объект, который требуется найти в <see cref="T:System.Collections.Generic.List`1" />. Для ссылочных типов допускается значение null.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
      <summary>Вставляет элемент в коллекцию <see cref="T:System.Collections.ObjectModel.Collection`1" /> по указанному индексу.</summary>
      <param name="index">Индекс (с нуля), по которому вставляется <paramref name="item" />.</param>
      <param name="item">Объект, который нужно вставить. Для ссылочных типов допускается значение null.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля. -или- Значение <paramref name="index" /> больше значения <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
      <summary>Вставляет элемент в коллекцию <see cref="T:System.Collections.ObjectModel.Collection`1" /> по указанному индексу.</summary>
      <param name="index">Индекс (с нуля), по которому вставляется <paramref name="item" />.</param>
      <param name="item">Объект, который нужно вставить. Для ссылочных типов допускается значение null.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля. -или- Значение <paramref name="index" /> больше значения <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)">
      <summary>Получает или задает элемент с указанным индексом.</summary>
      <returns>Элемент с заданным индексом.</returns>
      <param name="index">Отсчитываемый с нуля индекс получаемого или задаваемого элемента.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля. -или- Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.Items">
      <summary>Получает оболочку <see cref="T:System.Collections.Generic.IList`1" /> для <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>Оболочка <see cref="T:System.Collections.Generic.IList`1" /> для <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
      <summary>Удаляет первое вхождение указанного объекта из коллекции <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <returns>Значение true, если элемент <paramref name="item" /> успешно удален, в противном случае — значение false.  Этот метод также возвращает значение false, если параметр <paramref name="item" /> не найден в исходной коллекции <see cref="T:System.Collections.ObjectModel.Collection`1" />.</returns>
      <param name="item">Объект, который требуется удалить из <see cref="T:System.Collections.ObjectModel.Collection`1" />. Для ссылочных типов допускается значение null.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)">
      <summary>Удаляет элемент по указанному индексу из коллекции <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="index">Индекс (с нуля) элемента, который требуется удалить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля. -или- Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
      <summary>Удаляет элемент по указанному индексу из коллекции <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="index">Индекс (с нуля) элемента, который требуется удалить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля. -или- Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
      <summary>Заменяет элемент по указанному индексу.</summary>
      <param name="index">Индекс (с нуля) элемента, который требуется заменить.</param>
      <param name="item">Новое значение элемента по указанному индексу. Для ссылочных типов допускается значение null.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля. -или- Значение <paramref name="index" /> больше значения <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Получает значение, указывающее, является ли объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступным только для чтения.</summary>
      <returns>Значение true, если <see cref="T:System.Collections.Generic.ICollection`1" /> доступна только для чтения; в противном случае — значение false.  В используемой по умолчанию реализации <see cref="T:System.Collections.ObjectModel.Collection`1" /> это свойство всегда возвращает значение false.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы коллекции <see cref="T:System.Collections.ICollection" /> в массив <see cref="T:System.Array" />, начиная с указанного индекса массива <see cref="T:System.Array" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.ICollection" />. Индексация в массиве <see cref="T:System.Array" /> должна начинаться с нуля.</param>
      <param name="index">Индекс (с нуля) в массиве <paramref name="array" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Массив <paramref name="array" /> является многомерным. -или- В массиве <paramref name="array" /> не используется индексация с нуля. -или- Количество элементов в исходной коллекции <see cref="T:System.Collections.ICollection" /> превышает доступное место, начиная с индекса <paramref name="index" /> до конца массива назначения <paramref name="array" />. -или- Тип исходной коллекции <see cref="T:System.Collections.ICollection" /> нельзя автоматически привести к типу массива назначения <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Получает значение, позволяющее определить, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</summary>
      <returns>true, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — false.  В используемой по умолчанию реализации <see cref="T:System.Collections.ObjectModel.Collection`1" /> это свойство всегда возвращает значение false.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.  В используемой по умолчанию реализации <see cref="T:System.Collections.ObjectModel.Collection`1" /> это свойство всегда возвращает текущий экземпляр.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, осуществляющий перебор коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)">
      <summary>Добавляет элемент в интерфейс <see cref="T:System.Collections.IList" />.</summary>
      <returns>Позиция, в которую был вставлен новый элемент.</returns>
      <param name="value">Объект <see cref="T:System.Object" /> для добавления в интерфейс <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">Тип параметра <paramref name="value" /> является недопустимым для списка <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Определяет, содержится ли конкретное значение в списке <see cref="T:System.Collections.IList" />.</summary>
      <returns>Значение true, если объект <see cref="T:System.Object" /> найден в <see cref="T:System.Collections.IList" />, в противном случае — значение false.</returns>
      <param name="value">Объект <see cref="T:System.Object" />, поиск которого осуществляется в <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">Тип параметра <paramref name="value" /> является недопустимым для списка <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Определяет индекс заданного элемента в <see cref="T:System.Collections.IList" />.</summary>
      <returns>Индекс <paramref name="value" />, если он найден в списке; в противном случае -1.</returns>
      <param name="value">Объект <see cref="T:System.Object" />, поиск которого осуществляется в <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">Тип параметра <paramref name="value" /> является недопустимым для списка <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Вставляет элемент в список <see cref="T:System.Collections.IList" /> по указанному индексу.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить параметр <paramref name="value" />.</param>
      <param name="value">Объект <see cref="T:System.Object" />, вставляемый в <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> не является допустимым индексом в списке <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.ArgumentException">Тип параметра <paramref name="value" /> является недопустимым для списка <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize">
      <summary>Получает значение, указывающее, имеет ли список <see cref="T:System.Collections.IList" /> фиксированный размер.</summary>
      <returns>Значение true, если список <see cref="T:System.Collections.IList" /> имеет фиксированный размер, в противном случае — значение false.  В используемой по умолчанию реализации <see cref="T:System.Collections.ObjectModel.Collection`1" /> это свойство всегда возвращает значение false.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly">
      <summary>Получает значение, указывающее, является ли объект <see cref="T:System.Collections.IList" /> доступным только для чтения.</summary>
      <returns>Значение true, если интерфейс <see cref="T:System.Collections.IList" /> доступен только для чтения, в противном случае — значение false.  В используемой по умолчанию реализации <see cref="T:System.Collections.ObjectModel.Collection`1" /> это свойство всегда возвращает значение false.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Получает или задает элемент с указанным индексом.</summary>
      <returns>Элемент с заданным индексом.</returns>
      <param name="index">Отсчитываемый с нуля индекс получаемого или задаваемого элемента.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> не является допустимым индексом в списке <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.ArgumentException">Свойство задано, и тип параметра <paramref name="value" /> не может быть назначен <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Удаляет первое вхождение указанного объекта из <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, удаляемый из коллекции <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">Тип параметра <paramref name="value" /> является недопустимым для списка <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="T:System.Collections.ObjectModel.ReadOnlyCollection`1">
      <summary>Предоставляет базовый класс для универсальной коллекции, доступной только для чтения.</summary>
      <typeparam name="T">Тип элементов в коллекции.</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />, который является доступной только для чтения оболочкой для указанного списка.</summary>
      <param name="list">Список, для которого создается оболочка.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="list" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
      <summary>Определяет, входит ли элемент в состав коллекции <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</summary>
      <returns>Значение true, если параметр <paramref name="value" /> найден в коллекции <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />; в противном случае — значение false.</returns>
      <param name="value">Объект, поиск которого осуществляется в <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />. Для ссылочных типов допускается значение null.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Копирует целый массив <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> в совместимый одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса целевого массива.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы массива <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />. Индексация в массиве <see cref="T:System.Array" /> должна начинаться с нуля.</param>
      <param name="index">Индекс (с нуля) в массиве <paramref name="array" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Количество элементов в исходной коллекции <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> превышает доступное место, начиная с индекса <paramref name="index" /> до конца массива назначения <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count">
      <summary>Получает число элементов, содержащихся в экземпляре класса <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</summary>
      <returns>Число элементов, содержащихся в экземпляре класса <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator">
      <summary>Возвращает перечислитель, осуществляющий перебор элементов массива <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</summary>
      <returns>Объект <see cref="T:System.Collections.Generic.IEnumerator`1" /> для <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)">
      <summary>Осуществляет поиск указанного объекта и возвращает индекс (с нуля) первого вхождения, найденного в пределах всей коллекции <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</summary>
      <returns>Индекс (с нуля) первого вхождения параметра <paramref name="item" />, если оно найдено в коллекции <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />; в противном случае -1.</returns>
      <param name="value">Объект, который требуется найти в <see cref="T:System.Collections.Generic.List`1" />. Для ссылочных типов допускается значение null.</param>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)">
      <summary>Получает элемент с указанным индексом.</summary>
      <returns>Элемент с заданным индексом.</returns>
      <param name="index">Индекс элемента (с нуля), который требуется получить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля. -или- Значение параметра <paramref name="index" /> больше или равно значению свойства <see cref="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Count" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items">
      <summary>Возвращает список <see cref="T:System.Collections.Generic.IList`1" />, для которого <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> создает оболочку.</summary>
      <returns>Список <see cref="T:System.Collections.Generic.IList`1" />, для которого <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> создает оболочку.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Добавляет элемент в коллекцию <see cref="T:System.Collections.Generic.ICollection`1" />.  Данная реализация всегда выдает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Объект, добавляемый в коллекцию <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Возникает всегда.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Удаляет все элементы из интерфейса <see cref="T:System.Collections.Generic.ICollection`1" />.  Данная реализация всегда выдает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Возникает всегда.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Получает значение, указывающее, является ли объект <see cref="T:System.Collections.Generic.ICollection`1" /> доступным только для чтения.</summary>
      <returns>Значение true, если <see cref="T:System.Collections.Generic.ICollection`1" /> доступна только для чтения; в противном случае — значение false.  В используемой по умолчанию реализации <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> это свойство всегда возвращает значение true.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Удаляет первый экземпляр указанного объекта из коллекции <see cref="T:System.Collections.Generic.ICollection`1" />.  Данная реализация всегда выдает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Значение true, если элемент <paramref name="value" /> успешно удален из <see cref="T:System.Collections.Generic.ICollection`1" />, в противном случае — значение false.</returns>
      <param name="value">Объект, который необходимо удалить из коллекции <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Возникает всегда.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>Вставляет элемент в список <see cref="T:System.Collections.Generic.IList`1" /> по указанному индексу.  Данная реализация всегда выдает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить параметр <paramref name="value" />.</param>
      <param name="value">Объект, вставляемый в <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <exception cref="T:System.NotSupportedException">Возникает всегда.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>Получает или задает элемент с указанным индексом.</summary>
      <returns>Элемент с заданным индексом.</returns>
      <param name="index">Отсчитываемый с нуля индекс получаемого или задаваемого элемента.</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Удаляет элемент <see cref="T:System.Collections.Generic.IList`1" /> по указанному индексу.  Данная реализация всегда выдает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Отсчитываемый от нуля индекс удаляемого элемента.</param>
      <exception cref="T:System.NotSupportedException">Возникает всегда.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы коллекции <see cref="T:System.Collections.ICollection" /> в массив <see cref="T:System.Array" />, начиная с указанного индекса массива <see cref="T:System.Array" />.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из интерфейса <see cref="T:System.Collections.ICollection" />. Индексация в массиве <see cref="T:System.Array" /> должна начинаться с нуля.</param>
      <param name="index">Индекс (с нуля) в массиве <paramref name="array" />, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="array" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.</exception>
      <exception cref="T:System.ArgumentException">Массив <paramref name="array" /> является многомерным. -или- В массиве <paramref name="array" /> не используется индексация с нуля. -или- Количество элементов в исходной коллекции <see cref="T:System.Collections.ICollection" /> превышает доступное место, начиная с индекса <paramref name="index" /> до конца массива назначения <paramref name="array" />. -или- Тип исходной коллекции <see cref="T:System.Collections.ICollection" /> нельзя автоматически привести к типу массива назначения <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Получает значение, позволяющее определить, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</summary>
      <returns>true, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — false.  В используемой по умолчанию реализации <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> это свойство всегда возвращает значение false.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.  В используемой по умолчанию реализации <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> это свойство всегда возвращает текущий экземпляр.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, осуществляющий перебор коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</returns>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Добавляет элемент в интерфейс <see cref="T:System.Collections.IList" />.  Данная реализация всегда выдает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Позиция, в которую был вставлен новый элемент.</returns>
      <param name="value">Объект <see cref="T:System.Object" /> для добавления в интерфейс <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">Возникает всегда.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear">
      <summary>Удаляет все элементы из интерфейса <see cref="T:System.Collections.IList" />.  Данная реализация всегда выдает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Возникает всегда.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Определяет, содержится ли конкретное значение в списке <see cref="T:System.Collections.IList" />.</summary>
      <returns>Значение true, если объект <see cref="T:System.Object" /> найден в <see cref="T:System.Collections.IList" />, в противном случае — значение false.</returns>
      <param name="value">Объект <see cref="T:System.Object" />, поиск которого осуществляется в <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">Тип параметра <paramref name="value" /> отличен от типа, указанного для параметра универсального типа <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Определяет индекс заданного элемента в <see cref="T:System.Collections.IList" />.</summary>
      <returns>Индекс <paramref name="value" />, если он найден в списке; в противном случае -1.</returns>
      <param name="value">Объект <see cref="T:System.Object" />, поиск которого осуществляется в <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">Тип параметра <paramref name="value" /> отличен от типа, указанного для параметра универсального типа <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Вставляет элемент в коллекцию <see cref="T:System.Collections.IList" /> по указанному индексу.  Данная реализация всегда выдает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Отсчитываемый от нуля индекс, по которому следует вставить параметр <paramref name="value" />.</param>
      <param name="value">Объект <see cref="T:System.Object" />, вставляемый в <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">Возникает всегда.</exception>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Получает значение, указывающее, имеет ли список <see cref="T:System.Collections.IList" /> фиксированный размер.</summary>
      <returns>Значение true, если список <see cref="T:System.Collections.IList" /> имеет фиксированный размер, в противном случае — значение false.  В используемой по умолчанию реализации <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> это свойство всегда возвращает значение true.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Получает значение, указывающее, является ли объект <see cref="T:System.Collections.IList" /> доступным только для чтения.</summary>
      <returns>Значение true, если интерфейс <see cref="T:System.Collections.IList" /> доступен только для чтения, в противном случае — значение false.  В используемой по умолчанию реализации <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> это свойство всегда возвращает значение true.</returns>
    </member>
    <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Получает или задает элемент с указанным индексом.</summary>
      <returns>Элемент с заданным индексом.</returns>
      <param name="index">Индекс элемента (с нуля), который требуется получить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> не является допустимым индексом в списке <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.NotSupportedException">Выдается всегда, если данное свойство задано.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Удаляет первое вхождение указанного объекта из <see cref="T:System.Collections.IList" />.  Данная реализация всегда выдает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, удаляемый из коллекции <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.NotSupportedException">Возникает всегда.</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Удаляет элемент <see cref="T:System.Collections.IList" /> по указанному индексу.  Данная реализация всегда выдает исключение <see cref="T:System.NotSupportedException" />.</summary>
      <param name="index">Отсчитываемый от нуля индекс удаляемого элемента.</param>
      <exception cref="T:System.NotSupportedException">Возникает всегда.</exception>
    </member>
    <member name="T:System.ComponentModel.DefaultValueAttribute">
      <summary>Задает для свойства значение по умолчанию.</summary>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DefaultValueAttribute" />, используя указанное значение <see cref="T:System.Boolean" />.</summary>
      <param name="value">Значение <see cref="T:System.Boolean" />, являющееся значением по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Byte)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DefaultValueAttribute" />, используя указанное 8-разрядное целое число без знака.</summary>
      <param name="value">8-разрядное целое число без знака, являющееся значением по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Char)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DefaultValueAttribute" />, используя указанный знак Юникода.</summary>
      <param name="value">Знак Юникода, являющийся значением по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Double)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DefaultValueAttribute" />, используя указанное число с плавающей запятой с удвоенной точностью.</summary>
      <param name="value">Число с плавающей запятой с удвоенной точностью, являющееся значением по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int16)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DefaultValueAttribute" />, используя указанное 16-разрядное целое число со знаком.</summary>
      <param name="value">16-разрядное целое число со знаком, являющееся значением по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DefaultValueAttribute" />, используя указанное 32-разрядное целое число со знаком.</summary>
      <param name="value">32-разрядное целое число со знаком, являющееся значением по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DefaultValueAttribute" />, используя указанное 64-разрядное целое число со знаком.</summary>
      <param name="value">64-разрядное целое число со знаком, являющееся значением по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</summary>
      <param name="value">Объект <see cref="T:System.Object" />, представляющий значение по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Single)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DefaultValueAttribute" />, используя указанное число с плавающей запятой с обычной точностью.</summary>
      <param name="value">Число с плавающей запятой с обычной точностью, являющееся значением по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DefaultValueAttribute" />, используя указанную строку <see cref="T:System.String" />.</summary>
      <param name="value">Строка <see cref="T:System.String" />, являющаяся значением по умолчанию.</param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Type,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DefaultValueAttribute" />, преобразуя при этом указанное значение к указанному типу. В качестве контекста перевода используется нейтральные настройки языка и региональных параметров.</summary>
      <param name="type">Тип <see cref="T:System.Type" />, задающий тип, к которому нужно преобразовать значение.</param>
      <param name="value">Строка <see cref="T:System.String" />, которая может быть преобразована к указанному типу с помощью преобразователя <see cref="T:System.ComponentModel.TypeConverter" /> для этого типа. Для преобразования используются язык и региональные параметры "английский (США)".</param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, равно ли значение данного объекта текущему атрибуту <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</summary>
      <returns>Значение true, если значение данного объекта равно значению текущего; в противном случае — значение false.</returns>
      <param name="obj">Объект, проверяемый на равенство.</param>
    </member>
    <member name="M:System.ComponentModel.DefaultValueAttribute.GetHashCode">
    </member>
    <member name="P:System.ComponentModel.DefaultValueAttribute.Value">
      <summary>Возвращает значение по умолчанию для свойства, с которым связан этот атрибут.</summary>
      <returns>Объект <see cref="T:System.Object" />, представляющий значение по умолчанию для свойства, с которым связан этот атрибут.</returns>
    </member>
    <member name="T:System.ComponentModel.EditorBrowsableAttribute">
      <summary>Указывает на то, что свойство или метод отображаются в редакторе. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.#ctor(System.ComponentModel.EditorBrowsableState)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.EditorBrowsableAttribute" />, используя объект <see cref="T:System.ComponentModel.EditorBrowsableState" />.</summary>
      <param name="state">Состояние <see cref="T:System.ComponentModel.EditorBrowsableState" />, устанавливаемое равным <see cref="P:System.ComponentModel.EditorBrowsableAttribute.State" />.</param>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равно ли значение данного объекта текущему атрибуту <see cref="T:System.ComponentModel.EditorBrowsableAttribute" />.</summary>
      <returns>Значение true, если значение данного объекта равно значению текущего; в противном случае — значение false.</returns>
      <param name="obj">Объект, проверяемый на равенство.</param>
    </member>
    <member name="M:System.ComponentModel.EditorBrowsableAttribute.GetHashCode">
    </member>
    <member name="P:System.ComponentModel.EditorBrowsableAttribute.State">
      <summary>Возвращает отображаемое состояние свойства или метода.</summary>
      <returns>Состояние <see cref="T:System.ComponentModel.EditorBrowsableState" />, являющееся отображаемым состоянием свойства или метода.</returns>
    </member>
    <member name="T:System.ComponentModel.EditorBrowsableState">
      <summary>Определяет в редакторе отображаемое состояние для свойства или метода.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Advanced">
      <summary>Свойство или метод является элементом, который должен быть видимым только для опытных пользователей. Редактор может показать или скрыть такие свойства.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Always">
      <summary>Это свойство или метод всегда отображается в редакторе.</summary>
    </member>
    <member name="F:System.ComponentModel.EditorBrowsableState.Never">
      <summary>Это свойство или метод никогда не отображается в редакторе.</summary>
    </member>
    <member name="T:System.Diagnostics.ConditionalAttribute">
      <summary>Указывает компиляторам, что при отсутствии символа условной компиляции, вызов метода или атрибут следует игнорировать.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.ConditionalAttribute" />.</summary>
      <param name="conditionString">Строка, в которой связанный с атрибутом символ условной компиляции задан с учетом регистра.</param>
    </member>
    <member name="P:System.Diagnostics.ConditionalAttribute.ConditionString">
      <summary>Возвращает символ условной компиляции, связанный с атрибутом <see cref="T:System.Diagnostics.ConditionalAttribute" />.</summary>
      <returns>Строка, в которой связанный с атрибутом <see cref="T:System.Diagnostics.ConditionalAttribute" /> символ условной компиляции задан с учетом регистра.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Diagnostics.DebuggableAttribute">
      <summary>Изменяет генерацию кода для JIT-отладки во время выполнения. Этот класс не наследуется.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.DebuggableAttribute" />, используя заданные для JIT-компилятора режимы отладки.</summary>
      <param name="modes">Поразрядное сочетание значений <see cref="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" />, определяющих режим отладки для JIT-компилятора.</param>
    </member>
    <member name="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
      <summary>Задает режим отладки для JIT-компилятора.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default">
      <summary>Требует от JIT-компилятора использования поведения По умолчанию которое включает активацию оптимизаций, отключение поддержки режима "Изменить и продолжить" и использование хранилища символов точек следования при его наличии. В платформе .NET Framework версии 2.0 всегда генерируются сведения об отслеживании JIT, смещении MSIL для смещения машинного кода внутри метода.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations">
      <summary>Выключение оптимизации кода компилятором делает код более быстрым, коротким и эффективным. Оптимизация изменяет порядок строк кода в файле вывода, что может осложнить процесс отладки. Обычно во время отладки оптимизация должна быть отключена.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue">
      <summary>Разрешить режим "Изменить и продолжить". "Изменить и продолжить" это режим, позволяющий вносить изменения в исходный код, в то время как выполнение программы приостановлено. Возможности режима "Изменить и продолжить" зависят от компилятора.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints">
      <summary>Используйте неявные точки следования MSIL, а не точки следования базы данных программы (PDB). Символьная информация обычно включает, по меньшей мере, одно смещение в терминах языка MSIL для каждой исходной строки. Перед компиляцией метода JIT-компилятор запрашивает у профилирующей службы список MSIL-смещений, которые необходимо сохранить. Эти MSIL-смещения называются точками следования.</summary>
    </member>
    <member name="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.None">
      <summary>В платформе .NET Framework версии 2.0 всегда генерируются сведения о JIT-отслеживании, и этот флаг дает тот же эффект, что и <see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default" /> за исключением свойства <see cref="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled" /> со значением false, которое не имеет смысла в версии 2.0.</summary>
    </member>
    <member name="T:System.Globalization.DateTimeStyles">
      <summary>Определяет параметры форматирования, задающие пользовательские настройки синтаксического анализа строки для ряда методов синтаксического анализа даты и времени.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AdjustToUniversal">
      <summary>Дата и время возвращаются в формате универсального времени (UTC). Если строка ввода указывает на локальное время с помощью указателя часового пояса или <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" />, дата и время преобразуются из локального времени в формат UTC. Если строка ввода указывает время в формате UTC с помощью указателя часового пояса или <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />, никакого преобразования не происходит. Если строка ввода не указывает локальное или универсальное время, преобразования не происходит, а результирующее свойство <see cref="P:System.DateTime.Kind" /> становится равным <see cref="F:System.DateTimeKind.Unspecified" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowInnerWhite">
      <summary>Лишние знаки-разделители в середине строки не следует учитывать при разборе, за исключением знаков-разделителей, встречающихся в шаблонах формата <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowLeadingWhite">
      <summary>Начальные знаки-разделители не следует учитывать при разборе, за исключением знаков-разделителей, встречающихся в шаблонах формата <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowTrailingWhite">
      <summary>Конечные знаки-разделители не следует учитывать при разборе, за исключением знаков-разделителей, встречающихся в шаблонах формата <see cref="T:System.Globalization.DateTimeFormatInfo" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AllowWhiteSpaces">
      <summary>Лишние знаки-разделители в любом месте строки не следует учитывать при разборе, за исключением знаков-разделителей, встречающихся в шаблонах формата <see cref="T:System.Globalization.DateTimeFormatInfo" />. Это значение является сочетанием значений <see cref="F:System.Globalization.DateTimeStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.DateTimeStyles.AllowTrailingWhite" /> и <see cref="F:System.Globalization.DateTimeStyles.AllowInnerWhite" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AssumeLocal">
      <summary>Если часовой пояс не указан в строке разбора, подразумевается, что используется локальное время.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.AssumeUniversal">
      <summary>Если часовой пояс не указан в строке разбора, подразумевается, что используется формат UTC.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.NoCurrentDateDefault">
      <summary>Если в анализируемой строке содержится только время и отсутствует дата, методами анализа подразумевается дата по григорианскому календарю, в которой значение года равно 1, месяца — 1 и дня — 1. Если это значение не используется, подразумевается текущая дата.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.None">
      <summary>Необходимо использовать параметры форматирования по умолчанию. Это значение представляет стиль по умолчанию для методов <see cref="M:System.DateTime.Parse(System.String)" />, <see cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)" /> и <see cref="M:System.DateTime.TryParse(System.String,System.DateTime@)" />.</summary>
    </member>
    <member name="F:System.Globalization.DateTimeStyles.RoundtripKind">
      <summary>Поле даты <see cref="T:System.DateTimeKind" /> сохраняется при преобразовании объекта <see cref="T:System.DateTime" /> в строку с помощью стандартного описателя формата "o" или "r" и преобразования строки обратно в объект <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="T:System.Globalization.NumberStyles">
      <summary>Определяет стили, разрешенные в аргументах числовой строки, передаваемые методам Parse и TryParse целочисленных типов и числовых типов с плавающей запяой.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowCurrencySymbol">
      <summary>Указывает, что числовая строка может содержать символ денежной единицы. Допустимые символы денежных единиц определяются свойством <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowDecimalPoint">
      <summary>Указывает, что числовая строка может включать десятичный разделитель. Если значение <see cref="T:System.Globalization.NumberStyles" /> включает флаг <see cref="F:System.Globalization.NumberStyles.AllowCurrencySymbol" /> и анализируемая строка включает обозначение денежной единицы, символ десятичного разделителя определяется свойством <see cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />. В противном случае символ десятичного разделителя определяется свойством <see cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowExponent">
      <summary>Указывает, что числовая строка может быть в экспоненциальном представлении. Флаг <see cref="F:System.Globalization.NumberStyles.AllowExponent" /> позволяет включить в разбираемую строку экспоненту, начинающуюся с символа E или e, за которым следует необязательный положительный или отрицательный знак и целое число. Другими словами, он успешно выполняет разбор строки в форме nnnexx, nnnE +xx, и nnnE -xx. Он не допускает наличия десятичного разделителя или знака в значащей части числа, или мантиссе; чтобы разрешить эти элементы в анализируемой строке, используйте флаги <see cref="F:System.Globalization.NumberStyles.AllowDecimalPoint" /> и <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" /> или составной стиль, включающий эти отдельные флаги.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowHexSpecifier">
      <summary>Указывает, что числовая строка представляет шестнадцатеричное значение. К допустимым шестнадцатеричным значениям относятся цифры 0-9 и шестнадцатеричные знаки A-F и a-f. Строки, анализируемые с использованием этого стиля, не могут иметь префикс "0x" или "&amp;h". Строка, анализируемая с использованием стиля <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />, всегда интерпретируется как шестнадцатеричное значение. С флагом <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> можно объединять только флаги <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" /> и <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" />. Перечисление <see cref="T:System.Globalization.NumberStyles" /> включает составной стиль <see cref="F:System.Globalization.NumberStyles.HexNumber" />, состоящий из этих трех флагов.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowLeadingSign">
      <summary>Указывает, что числовая строка может включать начальный знак. Допустимые начальные знаки определяются свойствами <see cref="P:System.Globalization.NumberFormatInfo.PositiveSign" /> и <see cref="P:System.Globalization.NumberFormatInfo.NegativeSign" />.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowLeadingWhite">
      <summary>Указывает, что анализируемая строка может начинаться со знаков пробела. Допустимые знаки пробела имеют следующие значения в кодировке Юникод: U+0009, U+000A, U+000B, U+000C, U+000D и U+0020. Обратите внимание, что это подмножество символов, для которых метод <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> возвращает значение true.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowParentheses">
      <summary>Указывает, что в числовой строке может находиться одна пара скобок, в которых заключено число. Скобки означают, что анализируемая строка представляет отрицательное число.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowThousands">
      <summary>Указывает, что в числовой строке могут находиться разделители групп, например символы, отделяющие сотни от тысяч. Если значение <see cref="T:System.Globalization.NumberStyles" /> включает флаг <see cref="F:System.Globalization.NumberStyles.AllowCurrencySymbol" /> и анализируемая строка содержит обозначение денежной единицы, допустимый разделитель группы определяется свойством <see cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" /> и количество цифр в каждой группе определяется свойством <see cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />. В противном случае допустимый разделитель групп определяется свойством <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />, а количество цифр в каждой группе определяется свойством <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowTrailingSign">
      <summary>Указывает, что числовая строка может включать конечный знак. Допустимые конечные знаки определяются свойствами <see cref="P:System.Globalization.NumberFormatInfo.PositiveSign" /> и <see cref="P:System.Globalization.NumberFormatInfo.NegativeSign" />.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.AllowTrailingWhite">
      <summary>Указывает, что анализируемая строка может оканчиваться знаками пробела. Допустимые знаки пробела имеют следующие значения в кодировке Юникод: U+0009, U+000A, U+000B, U+000C, U+000D и U+0020. Обратите внимание, что это подмножество символов, для которых метод <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> возвращает значение true.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Any">
      <summary>Указывает, что используются все стили, кроме <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />. Это стили составного числа.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Currency">
      <summary>Указывает, что используются все стили, кроме <see cref="F:System.Globalization.NumberStyles.AllowExponent" /> и <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />. Это стили составного числа.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Float">
      <summary>Указывает, что используются стили <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" />, <see cref="F:System.Globalization.NumberStyles.AllowDecimalPoint" /> и <see cref="F:System.Globalization.NumberStyles.AllowExponent" />. Это стили составного числа.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.HexNumber">
      <summary>Указывает, что используются стили <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" /> и <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />. Это стили составного числа.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Integer">
      <summary>Указывает, что используются стили <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" /> и <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" />. Это стили составного числа.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.None">
      <summary>Указывает, что элементы стиля, такие как начальные или конечные пробел, тысячи сепараторы или десятичного разделителя, не могут присутствовать в анализируемой строки. Анализируемая строка должна состоять только из целых десятичных чисел.</summary>
    </member>
    <member name="F:System.Globalization.NumberStyles.Number">
      <summary>Указывает, что используются стили <see cref="F:System.Globalization.NumberStyles.AllowLeadingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingWhite" />, <see cref="F:System.Globalization.NumberStyles.AllowLeadingSign" />, <see cref="F:System.Globalization.NumberStyles.AllowTrailingSign" />, <see cref="F:System.Globalization.NumberStyles.AllowDecimalPoint" /> и <see cref="F:System.Globalization.NumberStyles.AllowThousands" />. Это стили составного числа.</summary>
    </member>
    <member name="T:System.Globalization.TimeSpanStyles">
      <summary>Определяет параметры форматирования, задающие способ разбора строки методами <see cref="Overload:System.TimeSpan.ParseExact" /> и <see cref="Overload:System.TimeSpan.TryParseExact" />.</summary>
    </member>
    <member name="F:System.Globalization.TimeSpanStyles.AssumeNegative">
      <summary>Указывает, что входные данные всегда обрабатываются как отрицательный интервал времени.</summary>
    </member>
    <member name="F:System.Globalization.TimeSpanStyles.None">
      <summary>Указывает, что входные данные обрабатываются как отрицательный интервал времени только при наличии отрицательного знака.</summary>
    </member>
    <member name="T:System.Reflection.AssemblyCompanyAttribute">
      <summary>Определяет для манифеста сборки настраиваемый атрибут имени компании.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyCompanyAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyCompanyAttribute" />.</summary>
      <param name="company">Сведения об имени компании.</param>
    </member>
    <member name="P:System.Reflection.AssemblyCompanyAttribute.Company">
      <summary>Возвращает сведения об имени компании.</summary>
      <returns>Строка, содержащая имя компании.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyConfigurationAttribute">
      <summary>Определяет конфигурацию сборки (отладочная или коммерческая версия) для сборки.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyConfigurationAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyConfigurationAttribute" />.</summary>
      <param name="configuration">Конфигурация сборки.</param>
    </member>
    <member name="P:System.Reflection.AssemblyConfigurationAttribute.Configuration">
      <summary>Возвращает сведения о конфигурации сборки.</summary>
      <returns>Строка, содержащая сведения о конфигурации сборки.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyCopyrightAttribute">
      <summary>Определяет настраиваемый атрибут авторских прав для манифеста сборки.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyCopyrightAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyCopyrightAttribute" />.</summary>
      <param name="copyright">Сведения об авторских правах.</param>
    </member>
    <member name="P:System.Reflection.AssemblyCopyrightAttribute.Copyright">
      <summary>Возвращает сведения об авторских правах.</summary>
      <returns>Строка, содержащая сведения об авторских правах.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyCultureAttribute">
      <summary>Определяет, какие язык и региональные параметры поддерживает сборка.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyCultureAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyCultureAttribute" /> с языком и региональными параметрами, поддерживаемыми сборкой с данным атрибутом.</summary>
      <param name="culture">Язык и региональные параметры, поддерживаемые сборкой с данным атрибутом.</param>
    </member>
    <member name="P:System.Reflection.AssemblyCultureAttribute.Culture">
      <summary>Возвращает поддерживаемые язык и региональные параметры сборки с данным атрибутом.</summary>
      <returns>Строка, содержащая имя поддерживаемых языка и региональных параметров.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyDefaultAliasAttribute">
      <summary>Определяет понятный псевдоним по умолчанию для манифеста сборки.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyDefaultAliasAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyDefaultAliasAttribute" />.</summary>
      <param name="defaultAlias">Сведения о псевдониме по умолчанию данной сборки.</param>
    </member>
    <member name="P:System.Reflection.AssemblyDefaultAliasAttribute.DefaultAlias">
      <summary>Возвращает сведения о псевдониме по умолчанию.</summary>
      <returns>Строка, содержащая сведения о псевдониме по умолчанию.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyDelaySignAttribute">
      <summary>Определяет, что при создании эта сборка не подписывается полностью.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyDelaySignAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyDelaySignAttribute" />.</summary>
      <param name="delaySign">Значение true, если элемент, представленный данным атрибутом, активирован. В обратном случае — значение false.</param>
    </member>
    <member name="P:System.Reflection.AssemblyDelaySignAttribute.DelaySign">
      <summary>Возвращает значение, показывающее состояние атрибута.</summary>
      <returns>Значение true, если эта сборка была собрана как сборка с отложенным подписанием. В обратном случае — значение false.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyDescriptionAttribute">
      <summary>Предоставляет текстовое описание для сборки.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyDescriptionAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyDescriptionAttribute" />.</summary>
      <param name="description">Описание сборки.</param>
    </member>
    <member name="P:System.Reflection.AssemblyDescriptionAttribute.Description">
      <summary>Возвращает сведения об описании сборки.</summary>
      <returns>Строка, содержащая описание сборки.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyFileVersionAttribute">
      <summary>Приказывает компилятору использовать определенный номер версии для ресурса версии файла Win32. Не требуется, чтобы версия файла Win32 совпадала с номером версии сборки.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyFileVersionAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyFileVersionAttribute" />, определяющий версию файла.</summary>
      <param name="version">Версия файла.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="version" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Reflection.AssemblyFileVersionAttribute.Version">
      <summary>Возвращает имя ресурса версии файла Win32.</summary>
      <returns>Строка, содержащая имя ресурса версии файла.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyFlagsAttribute">
      <summary>Определяет битовую комбинацию флагов <see cref="T:System.Reflection.AssemblyNameFlags" /> для сборки, описывающих параметры JIT-компилятора, возможность переопределить целевые объекты сборки, а также вид открытого ключа сборки — полный или измененный с использованием маркера. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyFlagsAttribute" /> указанным сочетанием флагов <see cref="T:System.Reflection.AssemblyNameFlags" />.</summary>
      <param name="assemblyFlags">Битовая комбинация флагов <see cref="T:System.Reflection.AssemblyNameFlags" />, представляющих параметры JIT-компилятора, долговременность, возможность переопределить целевые объекты сборки, а также вид ее открытого ключа — полный или измененный с использованием маркера.</param>
    </member>
    <member name="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags">
      <summary>Возвращает целочисленное значение, представляющее сочетание флагов <see cref="T:System.Reflection.AssemblyNameFlags" />, определенных при создании этого экземпляра атрибута.</summary>
      <returns>Целочисленное значение, представляющее битовую комбинацию флагов <see cref="T:System.Reflection.AssemblyNameFlags" />.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyInformationalVersionAttribute">
      <summary>Определяет дополнительные сведения о версии для манифеста сборки.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyInformationalVersionAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyInformationalVersionAttribute" />.</summary>
      <param name="informationalVersion">Сведения о версии сборки.</param>
    </member>
    <member name="P:System.Reflection.AssemblyInformationalVersionAttribute.InformationalVersion">
      <summary>Возвращает сведения о версии.</summary>
      <returns>Строка, содержащая сведения о версии.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyKeyFileAttribute">
      <summary>Определяет имя файла, содержащего пару ключей, используемую для создания строгого имени.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyKeyFileAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса AssemblyKeyFileAttribute с именем файла, содержащего пару ключей, используемую, чтобы создавать строгое имя для сборки с данным атрибутом.</summary>
      <param name="keyFile">Имя файла, содержащего пару ключей.</param>
    </member>
    <member name="P:System.Reflection.AssemblyKeyFileAttribute.KeyFile">
      <summary>Возвращает имя файла, содержащего пару ключей, используемую для создания строгого имени для сборки с данным атрибутом.</summary>
      <returns>Строка, содержащая имя файла, где находится данная пара ключей.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyKeyNameAttribute">
      <summary>Определяет имя контейнера ключей в CSP, который содержит пару ключей для создания строгого имени.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyKeyNameAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyKeyNameAttribute" /> с именем контейнера, содержащего пару ключей, используемую для создания строгого имени для сборки с данным атрибутом.</summary>
      <param name="keyName">Имя контейнера, содержащего пару ключей.</param>
    </member>
    <member name="P:System.Reflection.AssemblyKeyNameAttribute.KeyName">
      <summary>Возвращает имя контейнера, содержащего пару ключей, используемую для создания строгого имени для сборки с данным атрибутом.</summary>
      <returns>Строка, содержащая имя контейнера, который содержит соответствующую пару ключей.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyMetadataAttribute">
      <summary>Определяет пару метаданных ключ/значение для декорированной сборки.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyMetadataAttribute.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyMetadataAttribute" /> с помощью указанного ключа метаданных и значения.</summary>
      <param name="key">Ключ метаданных.</param>
      <param name="value">Значение метаданных.</param>
    </member>
    <member name="P:System.Reflection.AssemblyMetadataAttribute.Key">
      <summary>Получает ключ метаданных.</summary>
      <returns>Ключ метаданных.</returns>
    </member>
    <member name="P:System.Reflection.AssemblyMetadataAttribute.Value">
      <summary>Получает значение метаданных.</summary>
      <returns>Значение метаданных.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyNameFlags">
      <summary>Предоставляет сведения о ссылке <see cref="T:System.Reflection.Assembly" />.</summary>
    </member>
    <member name="F:System.Reflection.AssemblyNameFlags.None">
      <summary>Указывает, что ни один из флагов не применяется.</summary>
    </member>
    <member name="F:System.Reflection.AssemblyNameFlags.PublicKey">
      <summary>Определяет, что открытый ключ образуется из полного открытого ключа, а не из токена открытого ключа.</summary>
    </member>
    <member name="F:System.Reflection.AssemblyNameFlags.Retargetable">
      <summary>Определяет, что во время выполнения сборка может быть перенацелена на сборку от другого издателя. Это значение поддерживает инфраструктуру платформы .NET Framework, оно не предназначено для прямого использования в вашем коде.</summary>
    </member>
    <member name="T:System.Reflection.AssemblyProductAttribute">
      <summary>Определяет пользовательский атрибут имени продукта для манифеста сборки.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyProductAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyProductAttribute" />.</summary>
      <param name="product">Сведения об имени продукта.</param>
    </member>
    <member name="P:System.Reflection.AssemblyProductAttribute.Product">
      <summary>Возвращает сведения об имени продукта.</summary>
      <returns>Строка, содержащая имя продукта.</returns>
    </member>
    <member name="T:System.Reflection.AssemblySignatureKeyAttribute">
      <summary>Предоставляет миграцию от более старого, более простого ключа строгого имени к более длинному ключу с более сильным алгоритмом хэширования.</summary>
    </member>
    <member name="M:System.Reflection.AssemblySignatureKeyAttribute.#ctor(System.String,System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Reflection.AssemblySignatureKeyAttribute" />, используя указанный открытый ключ и подпись другой стороны.</summary>
      <param name="publicKey">Открытый ключ или ключ удостоверения.</param>
      <param name="countersignature">Подпись другой стороны, которая является подписью в составе ключа строгого имени.</param>
    </member>
    <member name="P:System.Reflection.AssemblySignatureKeyAttribute.Countersignature">
      <summary>Получает подпись другой стороны для строгого имени для этой сборки.</summary>
      <returns>Подпись другой стороны для этого ключа подписи.</returns>
    </member>
    <member name="P:System.Reflection.AssemblySignatureKeyAttribute.PublicKey">
      <summary>Получает открытый ключ для строгого имени, используемого для подписывания сборки.</summary>
      <returns>Открытый ключ для этой сборки.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyTitleAttribute">
      <summary>Задает описание сборки.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyTitleAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyTitleAttribute" />.</summary>
      <param name="title">Заголовок сборки.</param>
    </member>
    <member name="P:System.Reflection.AssemblyTitleAttribute.Title">
      <summary>Возвращает сведения о заголовке сборки.</summary>
      <returns>Заголовок сборки.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyTrademarkAttribute">
      <summary>Определяет пользовательский атрибут товарного знака для манифеста сборки.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyTrademarkAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.AssemblyTrademarkAttribute" />.</summary>
      <param name="trademark">Сведения о товарном знаке.</param>
    </member>
    <member name="P:System.Reflection.AssemblyTrademarkAttribute.Trademark">
      <summary>Возвращает сведения о товарном знаке.</summary>
      <returns>Объект String, содержащий сведения о товарном знаке.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyVersionAttribute">
      <summary>Указывает версию сборки, которой присваиваются атрибуты.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса AssemblyVersionAttribute с соответствующими атрибутами заданным номером версии сборки.</summary>
      <param name="version">Номер версии сборки с соответствующими атрибутами.</param>
    </member>
    <member name="P:System.Reflection.AssemblyVersionAttribute.Version">
      <summary>Возвращает номер версии сборки с соответствующими атрибутами.</summary>
      <returns>Строка, содержащая номер версии сборки.</returns>
    </member>
    <member name="T:System.Reflection.DefaultMemberAttribute">
      <summary>Описывает члена типа, являющегося членом по умолчанию, который используется методом <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</summary>
    </member>
    <member name="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.DefaultMemberAttribute" />.</summary>
      <param name="memberName">Значение типа String, содержащее имя вызываемого члена. Это может быть конструктор, метод, свойство или поле. При вызове метода должен быть задан подходящий атрибут вызова. Член по умолчанию для класса может быть задан путем передачи пустой String в качестве имени члена. Член по умолчанию для типа помечается пользовательским атрибутом DefaultMemberAttribute или в COM-объекте обычным путем.</param>
    </member>
    <member name="P:System.Reflection.DefaultMemberAttribute.MemberName">
      <summary>Возвращает имя из атрибута.</summary>
      <returns>Строка, представляющая имя члена.</returns>
    </member>
    <member name="T:System.Runtime.GCLargeObjectHeapCompactionMode">
      <summary>Указывает, будет ли Куча больших объектов (LOH) сжата во время следующей блокирующей сборки мусора.</summary>
    </member>
    <member name="F:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce">
      <summary>Куча больших объектов (LOH) будет сжата во время следующей блокирующей сборки мусора второго поколения.</summary>
    </member>
    <member name="F:System.Runtime.GCLargeObjectHeapCompactionMode.Default">
      <summary>Куча больших объектов (LOH) не сжимается.</summary>
    </member>
    <member name="T:System.Runtime.GCLatencyMode">
      <summary>Настраивает время, когда сборщик мусора вмешается в работу приложения.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.Batch">
      <summary>Отключает параллельную сборку мусора и подбирает объекты, используя пакетный вызов. Это режим с наибольшим уровнем вмешательства.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.Interactive">
      <summary>Включает параллельную сборку мусора и подбирает объекты во время работы приложения. Это режим по умолчанию для сборки мусора на рабочей станции, обеспечивающий меньшее вмешательство по сравнению с <see cref="F:System.Runtime.GCLatencyMode.Batch" />. В нем сбалансированы пропускная способность и время отклика приложения.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.LowLatency">
      <summary>Включает режим сборки мусора, при котором объекты подбираются с большей осторожностью. Полная коллекция происходит только в случае недостатка памяти, в то время как коллекции нулевого и первого поколения могут происходить чаще.</summary>
    </member>
    <member name="F:System.Runtime.GCLatencyMode.SustainedLowLatency">
      <summary>Включает сборку мусора, которая пытается минимизировать задержку на протяжении длительного периода. Сборщик пытается выполнять только поколение 0, поколение 1 и параллельные коллекции поколения 2. Полностью блокирующие коллекции могут все равно возникать при нехватке памяти в системе.</summary>
    </member>
    <member name="T:System.Runtime.GCSettings">
      <summary>Указывает параметры сборки мусора для текущего процесса.</summary>
    </member>
    <member name="P:System.Runtime.GCSettings.IsServerGC">
      <summary>Получает значение, указывающее, включена ли сборка мусора сервера.</summary>
      <returns>Значение true, если сборка мусора сервера включена, в противном случае — false.</returns>
    </member>
    <member name="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
      <summary>Получает или задает значение, которое указывает, будет ли Куча больших объектов (LOH) сжата во время полной блокирующей сборки мусора.</summary>
      <returns>Одно из значений перечисления, указывающее уменьшает ли LOH полная блокирующая сборка мусора.</returns>
    </member>
    <member name="P:System.Runtime.GCSettings.LatencyMode">
      <summary>Возвращает или задает текущий режим задержки для сборки мусора.</summary>
      <returns>Одно из значений из перечисления, задающее режим задержки.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Для <see cref="T:System.Runtime.GCLatencyMode" /> задано недопустимое значение.</exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute">
      <summary>Задает имя свойства, обращающегося к полю с атрибутами.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса AccessedThroughPropertyAttribute с именем свойства, используемого для доступа к полю с атрибутами.</summary>
      <param name="propertyName">Имя свойства, используемого для доступа к полю с атрибутами.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.PropertyName">
      <summary>Возвращает имя свойства, используемого для доступа к полю с атрибутами.</summary>
      <returns>Имя свойства, используемого для доступа к полю с атрибутами.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.AsyncStateMachineAttribute">
      <summary>Отображает помечен ли метод модификатором Async (Visual Basic) или async (справочник по C#).</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.AsyncStateMachineAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.AsyncStateMachineAttribute" />.</summary>
      <param name="stateMachineType">Объект типа для типа базового конечного автомата, который используется для реализации метода конечного автомата.</param>
    </member>
    <member name="T:System.Runtime.CompilerServices.CallerFilePathAttribute">
      <summary>Позволяет получить полный путь исходного файла, содержащего вызывающий объект. Это путь к файлу во время компиляции.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CallerFilePathAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.CallerFilePathAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CallerLineNumberAttribute">
      <summary>Позволяет получить номер строки в файле источника, на которой вызывается метод.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CallerLineNumberAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.CallerLineNumberAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CallerMemberNameAttribute">
      <summary>Позволяет получить имя метода или свойства, вызывающего метод.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CallerMemberNameAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute">
      <summary>Контролирует точность кода, создаваемого JIT-компилятором среды CLR.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" /> с заданными релаксациями компиляции.</summary>
      <param name="relaxations">Релаксации компиляции.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxations">
      <summary>Возвращает релаксации компиляции, заданные при построении текущего объекта.</summary>
      <returns>Релаксации компиляции, заданные при построении текущего объекта. Перечисление <see cref="T:System.Runtime.CompilerServices.CompilationRelaxations" /> используется со свойством <see cref="P:System.Runtime.CompilerServices.CompilationRelaxationsAttribute.CompilationRelaxations" />.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.CompilerGeneratedAttribute">
      <summary>Отличает генерируемый компилятором элемент от элемента, генерируемого пользователем. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CompilerGeneratedAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.CompilerGeneratedAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.CustomConstantAttribute">
      <summary>Определяет постоянное значение, которое компилятор может сохранять для данного поля или параметра метода.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.CustomConstantAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.CustomConstantAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.CustomConstantAttribute.Value">
      <summary>Возвращает постоянное значение, хранящееся в данном атрибуте.</summary>
      <returns>Постоянное значение, хранящееся в данном атрибуте.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.DateTimeConstantAttribute">
      <summary>Сохраняет 8-байтовую константу типа <see cref="T:System.DateTime" /> для поля или параметра.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.DateTimeConstantAttribute.#ctor(System.Int64)">
      <summary>Инициализирует новый экземпляр класса DateTimeConstantAttribute с числом 100-наносекундных импульсов, представляющим дату и время создания данного экземпляра.</summary>
      <param name="ticks">Число 100-наносекундных импульсов, представляющее дату и время создания данного экземпляра.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.DateTimeConstantAttribute.Value">
      <summary>Возвращает число 100-наносекундных импульсов, представляющее дату и время создания данного экземпляра.</summary>
      <returns>Число 100-наносекундных импульсов, представляющее дату и время создания данного экземпляра.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.DecimalConstantAttribute">
      <summary>Сохраняет значение константы типа <see cref="T:System.Decimal" /> в метаданных. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.Int32,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.DecimalConstantAttribute" /> указанными целочисленными значениями со знаком.</summary>
      <param name="scale">Показатель степени множителя 10, определяющий число знаков справа от десятичной запятой. Допустимые значения — от 0 до 28 включительно.</param>
      <param name="sign">Значение 0 указывает на положительное значение, а 1 — на отрицательное.</param>
      <param name="hi">Старшие 32 бита 96-битного <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />.</param>
      <param name="mid">Средние 32 бита 96-битного <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />.</param>
      <param name="low">Младшие 32 бита 96-битного <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.DecimalConstantAttribute.#ctor(System.Byte,System.Byte,System.UInt32,System.UInt32,System.UInt32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.DecimalConstantAttribute" /> указанными целочисленными значениями без знака.</summary>
      <param name="scale">Показатель степени множителя 10, определяющий число знаков справа от десятичной запятой. Допустимые значения — от 0 до 28 включительно.</param>
      <param name="sign">Значение 0 указывает на положительное значение, а 1 — на отрицательное.</param>
      <param name="hi">Старшие 32 бита 96-битного <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />.</param>
      <param name="mid">Средние 32 бита 96-битного <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />.</param>
      <param name="low">Младшие 32 бита 96-битного <see cref="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scale" /> &gt; 28.</exception>
    </member>
    <member name="P:System.Runtime.CompilerServices.DecimalConstantAttribute.Value">
      <summary>Возвращает десятичную константу, хранящуюся в данном атрибуте.</summary>
      <returns>Десятичная константа, хранящаяся в данном атрибуте.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.ExtensionAttribute">
      <summary>Указывает, что метод является методом расширения или что класс или сборка содержат методы расширения.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ExtensionAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.ExtensionAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.FixedBufferAttribute">
      <summary>Указывает, что поле следует интерпретировать как содержащее фиксированное число элементов указанного примитивного типа. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.FixedBufferAttribute.#ctor(System.Type,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.FixedBufferAttribute" />.</summary>
      <param name="elementType">Тип элементов, содержащихся в буфере.</param>
      <param name="length">Количество элементов в буфере.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.FixedBufferAttribute.ElementType">
      <summary>Возвращает тип элементов, содержащихся в фиксированном буфере.</summary>
      <returns>Тип элементов.</returns>
    </member>
    <member name="P:System.Runtime.CompilerServices.FixedBufferAttribute.Length">
      <summary>Возвращает число элементов в фиксированном буфере.</summary>
      <returns>Число элементов в фиксированном буфере.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IndexerNameAttribute">
      <summary>Указывает имя, под которым индексатор известен в языках программирования, не поддерживающих индексаторы непосредственно.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IndexerNameAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.IndexerNameAttribute" />.</summary>
      <param name="indexerName">Имя индексатора в том виде, в каком оно представляется в других языках программирования.</param>
    </member>
    <member name="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute">
      <summary>Задает, что типы, видимые обычно только в пределах текущей сборки, являются видимыми для заданной сборки.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> с именем заданной дружественной сборки.</summary>
      <param name="assemblyName">Имя дружественной сборки.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
      <summary>Получает имя дружественной сборки, для которой будут сделаны видимыми все типы и члены типов, помеченные ключевым словом internal.</summary>
      <returns>Строка, представляющая имя дружественной сборки.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IStrongBox">
      <summary>Определяет свойство для доступа к значению, на которое ссылается объект.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.CompilerServices.IStrongBox.Value">
      <summary>Получает или задает значение, на которое ссылается объект.</summary>
      <returns>Значение, на которое ссылается объект.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.IsVolatile">
      <summary>Помечает поле как изменчивое. Этот класс не наследуется.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute">
      <summary>Указывает, помечен ли метод в Visual Basic модификатором Iterator.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.IteratorStateMachineAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute" />.</summary>
      <param name="stateMachineType">Объект типа для типа базового конечного автомата, который используется для реализации метода конечного автомата.</param>
    </member>
    <member name="T:System.Runtime.CompilerServices.MethodImplAttribute">
      <summary>Указывает подробности реализации метода. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.MethodImplAttribute.#ctor(System.Runtime.CompilerServices.MethodImplOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.MethodImplAttribute" /> с заданным значением <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" />.</summary>
      <param name="methodImplOptions">Значение <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" />, задающее свойства метода с атрибутами.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.MethodImplAttribute.Value">
      <summary>Возвращает значение <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" />, описывающее метод с атрибутами.</summary>
      <returns>Значение <see cref="T:System.Runtime.CompilerServices.MethodImplOptions" />, описывающее метод с атрибутами.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.MethodImplOptions">
      <summary>Подробно определяет способ реализации метода.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining">
      <summary>По возможности метод должен быть встроенным.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.NoInlining">
      <summary>Не удается встроить метод. Встраивание — это оптимизация, при которой вызов метода заменяется телом метода.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.NoOptimization">
      <summary>Метод не оптимизирован JIT-компилятором или службой генерирования машинного кода (см. Ngen.exe) при отладке возможных проблем с генерированием кода.</summary>
    </member>
    <member name="F:System.Runtime.CompilerServices.MethodImplOptions.PreserveSig">
      <summary>Сигнатура метода должна экспортироваться в том виде, в каком она объявлена.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.ReferenceAssemblyAttribute">
      <summary>Определяет сборку в качестве базовой сборки, содержащей метаданные, но не содержащей исполняемый код.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ReferenceAssemblyAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.ReferenceAssemblyAttribute" />.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.ReferenceAssemblyAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.ReferenceAssemblyAttribute" />, используя заданное описание.</summary>
      <param name="description">Описание сборки, на которую сделана ссылка.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.ReferenceAssemblyAttribute.Description">
      <summary>Получает описание сборки, на которую сделана ссылка.</summary>
      <returns>Описание сборки, на которую сделана ссылка.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
      <summary>Указывает, следует ли создавать оболочку для выражений, не являющихся производными от класса <see cref="T:System.Exception" />, в виде объекта <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.WrapNonExceptionThrows">
      <summary>Получает или задает значение, указывающее, следует ли создавать оболочку для исключений, не являющихся производными от класса <see cref="T:System.Exception" />, в виде объекта <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" />.</summary>
      <returns>true, если для исключений, не являющихся производными от класса <see cref="T:System.Exception" />, следует создавать оболочку в виде объекта <see cref="T:System.Runtime.CompilerServices.RuntimeWrappedException" />; false в противном случае.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.RuntimeHelpers">
      <summary>Предоставляет набор статических методов и свойств для поддержки компиляторов. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(System.Object)">
      <summary>Служит в качестве хэш-функции для конкретного объекта и подходит для использования в алгоритмах и структурах данных, использующих хэш-коды, например в хэш-таблице.</summary>
      <returns>Хэш-код для объекта, идентифицируемого по параметру <paramref name="o" />.</returns>
      <param name="o">Объект, для которого нужно извлечь хэш-код.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.GetObjectValue(System.Object)">
      <summary>Упаковывает тип значения.</summary>
      <returns>Упакованная копия <paramref name="obj" />, если это класс значения; в противном случае — <paramref name="obj" />.</returns>
      <param name="obj">Упаковываемый тип значения.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.InitializeArray(System.Array,System.RuntimeFieldHandle)">
      <summary>Предоставляет быстрый способ инициализации массива данных, хранящихся в модуле.</summary>
      <param name="array">Инициализируемый массив.</param>
      <param name="fldHandle">Дескриптор поля, указывающий расположение данных, используемых для инициализации массива.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.RuntimeHelpers.OffsetToStringData">
      <summary>Получает смещение в байтах к данным в указанной строке.</summary>
      <returns>Смещение в байтах от начала объекта <see cref="T:System.String" /> до первого символа строки.</returns>
    </member>
    <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(System.RuntimeTypeHandle)">
      <summary>Выполняет указанный метод конструктора класса.</summary>
      <param name="type">Дескриптор типа, определяющий метод конструктора класса, который нужно выполнить.</param>
      <exception cref="T:System.TypeInitializationException">Инициализатор класса создает исключение.</exception>
    </member>
    <member name="T:System.Runtime.CompilerServices.StateMachineAttribute">
      <summary>Позволяет указать, является ли этот метод методом конечного автомата.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.StateMachineAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.StateMachineAttribute" />.</summary>
      <param name="stateMachineType">Объект типа для типа базового конечного автомата, который был создан компилятором для реализации метода конечного автомата.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType">
      <summary>Возвращает объект типа для типа базового конечного автомата, который был создан компилятором для реализации метода конечного автомата.</summary>
      <returns>Получает объект типа для типа базового конечного автомата, который был создан компилятором для реализации метода конечного автомата.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.StrongBox`1">
      <summary>Содержит ссылку на значение.</summary>
      <typeparam name="T">Тип значения, на которое ссылается <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />.</typeparam>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Runtime.CompilerServices.StrongBox`1.#ctor">
      <summary>Инициализирует новый объект StrongBox, которому можно передать значение при ссылочном вызове.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.StrongBox`1.#ctor(`0)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />, используя указанное значение.</summary>
      <param name="value">Значение, на которое будет ссылаться <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Runtime.CompilerServices.StrongBox`1.System#Runtime#CompilerServices#IStrongBox#Value">
      <summary>Получает или задает значение, на которое ссылается <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />.</summary>
      <returns>Значение, на которое ссылается <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />.</returns>
    </member>
    <member name="F:System.Runtime.CompilerServices.StrongBox`1.Value">
      <summary>Представляет значение, на которое ссылается <see cref="T:System.Runtime.CompilerServices.StrongBox`1" />.</summary>
    </member>
    <member name="T:System.Runtime.CompilerServices.TypeForwardedFromAttribute">
      <summary>Указывает исходный класс <see cref="T:System.Type" /> в другой сборке.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.TypeForwardedFromAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.TypeForwardedFromAttribute" />.</summary>
      <param name="assemblyFullName">Исходный класс <see cref="T:System.Type" /> в другой сборке.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="assemblyFullName" /> имеет значение null или пуст.</exception>
    </member>
    <member name="P:System.Runtime.CompilerServices.TypeForwardedFromAttribute.AssemblyFullName">
      <summary>Получает имя исходного типа с указанием сборки.</summary>
      <returns>Имя исходного типа с указанием сборки.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.TypeForwardedToAttribute">
      <summary>Указывает целевой <see cref="T:System.Type" /> в другой сборке.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.TypeForwardedToAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.TypeForwardedToAttribute" />, задавая целевой <see cref="T:System.Type" />.</summary>
      <param name="destination">Целевой <see cref="T:System.Type" /> в другой сборке.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.TypeForwardedToAttribute.Destination">
      <summary>Возвращает целевой <see cref="T:System.Type" /> в другой сборке.</summary>
      <returns>Целевой <see cref="T:System.Type" /> в другой сборке.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.UnsafeValueTypeAttribute">
      <summary>Указывает, что тип содержит неуправляемый массив, в котором потенциально возможно переполнение. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.UnsafeValueTypeAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.CompilerServices.UnsafeValueTypeAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo">
      <summary>Представляет исключение, состояние которого захватывается в некоторой точке в коде.</summary>
    </member>
    <member name="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
      <summary>Создает объект <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" />, представляющий указанное исключение в текущей точке в коде.</summary>
      <returns>Объект, представляющий указанное исключение в текущей точке в коде.</returns>
      <param name="source">Исключение, состояние которого зарегистрировано, и которое представлено возвращенным объектом.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="source" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException">
      <summary>Получает исключение, представляемое текущим экземпляром.</summary>
      <returns>Исключение, представляемое текущим экземпляром.</returns>
    </member>
    <member name="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw">
      <summary>Вызывает исключение, которое представлено текущим объектом <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" />, после восстановления состояния, сохраненного в момент захвата исключения.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.CharSet">
      <summary>Указывает, какой набор знаков должны использовать маршалированные строки.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CharSet.Ansi">
      <summary>Маршалирует строки в виде строк многобайтовых символов.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.CharSet.Unicode">
      <summary>Маршалирует строки в виде 2-байтных символов Юникода.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.ComVisibleAttribute">
      <summary>Управляет доступностью отдельного управляемого типа или члена или всех типов в сборки для COM.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.ComVisibleAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса ComVisibleAttribute.</summary>
      <param name="visibility">Значение равно true, если тип доступен для COM; в противном случае — значение false. Значение по умолчанию — true.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.ComVisibleAttribute.Value">
      <summary>Возвращает значение, показывающее, доступен ли данный тип для COM.</summary>
      <returns>Значение true, если тип доступен; в противном случае — значение false. Значение по умолчанию — true.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.FieldOffsetAttribute">
      <summary>Показывает физическое положение полей, содержащихся в неуправляемом представлении класса или структуры.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.FieldOffsetAttribute.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.FieldOffsetAttribute" />, используя смещение в структуре относительно начала поля.</summary>
      <param name="offset">Смещение в байтах от начала структуры до начала поля.</param>
    </member>
    <member name="P:System.Runtime.InteropServices.FieldOffsetAttribute.Value">
      <summary>Возвращает смещение в байтах от начала структуры до начала поля.</summary>
      <returns>Смещение в байтах от начала структуры до начала поля.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.LayoutKind">
      <summary>Управляет размещением объекта при его экспорте в неуправляемый код.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.LayoutKind.Auto">
      <summary>Среда CLR автоматически выбирает соответствующее размещение для членов объекта в неуправляемой памяти. Доступ к объектам, определенным при помощи этого члена перечисления, не может быть предоставлен вне управляемого кода. Попытка выполнить такую операцию вызовет исключение.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.LayoutKind.Explicit">
      <summary>Точное положение каждого члена объекта в неуправляемой памяти управляется явно в соответствии с настройкой поля <see cref="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" />. Каждый член должен использовать атрибут <see cref="T:System.Runtime.InteropServices.FieldOffsetAttribute" /> для указания положения этого поля внутри типа.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.LayoutKind.Sequential">
      <summary>Члены объекта располагаются последовательно, в порядке своего появления при экспортировании в неуправляемую память. Члены располагаются в соответствии с компоновкой, заданной в <see cref="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack" />, и могут быть несмежными.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.OutAttribute">
      <summary>Показывает, что требуется маршалинг данных из вызываемого объекта в вызывающий.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.OutAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.OutAttribute" />.</summary>
    </member>
    <member name="T:System.Runtime.InteropServices.StructLayoutAttribute">
      <summary>Позволяет управлять физическим размещением полей данных класса или структуры.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" />, используя указанный элемент перечисления <see cref="T:System.Runtime.InteropServices.LayoutKind" />.</summary>
      <param name="layoutKind">Одно из значений перечисления, определяющих компоновку класса или структуры.</param>
    </member>
    <member name="F:System.Runtime.InteropServices.StructLayoutAttribute.CharSet">
      <summary>Показывает, каким образом следует выполнять маршалинг по умолчанию для полей данных в классах (как LPWSTR или как LPSTR).</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.StructLayoutAttribute.Pack">
      <summary>Управляет выравниванием полей данных для класса или структуры в памяти.</summary>
    </member>
    <member name="F:System.Runtime.InteropServices.StructLayoutAttribute.Size">
      <summary>Показывает абсолютный размер класса или структуры.</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.StructLayoutAttribute.Value">
      <summary>Возвращает значение <see cref="T:System.Runtime.InteropServices.LayoutKind" />, определяющее способ упорядочивания класса или структуры.</summary>
      <returns>Одно из значений перечисления, определяющих компоновку класса или структуры.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.TargetFrameworkAttribute">
      <summary>Определяет версию платформы .NET Framework, относительно которой скомпилирована определенная сборка.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Runtime.Versioning.TargetFrameworkAttribute" />, указывая версию платформы .NET Framework, относительно которой скомпилирована определенная сборка.</summary>
      <param name="frameworkName">Версия платформы .NET Framework, относительно которой построена сборка.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="frameworkName" /> имеет значение null.</exception>
    </member>
    <member name="P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkDisplayName">
      <summary>Получает отображаемое имя версии платформы .NET Framework, относительно которой построена сборка.</summary>
      <returns>Отображаемое имя версии платформы .NET Framework.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.TargetFrameworkAttribute.FrameworkName">
      <summary>Получает отображаемое имя версии платформы .NET Framework, относительно которой скомпилирована определенная сборка.</summary>
      <returns>Имя версии платформы .NET Framework, с помощью которой скомпилирована сборка.</returns>
    </member>
    <member name="T:System.Security.AllowPartiallyTrustedCallersAttribute">
      <summary>Позволяет частично доверенному коду вызывать сборку. Без этого объявления использовать сборку может только полностью доверенный код. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Security.AllowPartiallyTrustedCallersAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" />.</summary>
    </member>
    <member name="T:System.Security.SecurityCriticalAttribute">
      <summary>Указывает на то, что код или сборка выполняют операции, задействующие систему безопасности.</summary>
    </member>
    <member name="M:System.Security.SecurityCriticalAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.SecurityCriticalAttribute" />.</summary>
    </member>
    <member name="T:System.Security.SecurityException">
      <summary>Исключение, которое создается при обнаружении ошибки безопасности.</summary>
    </member>
    <member name="M:System.Security.SecurityException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.SecurityException" /> со свойствами по умолчанию.</summary>
    </member>
    <member name="M:System.Security.SecurityException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.SecurityException" /> с заданным сообщением об ошибке.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
    </member>
    <member name="M:System.Security.SecurityException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.SecurityException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="inner">Исключение, которое вызвало текущее исключение. Если значение параметра <paramref name="inner" /> не равно null, текущее исключение вызывается в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="M:System.Security.SecurityException.ToString">
      <summary>Возвращает представление текущего исключения <see cref="T:System.Security.SecurityException" />.</summary>
      <returns>Строковое представление текущего исключения <see cref="T:System.Security.SecurityException" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence, ControlPolicy" />
      </PermissionSet>
    </member>
    <member name="T:System.Security.SecuritySafeCriticalAttribute">
      <summary>Этот атрибут отмечает типы и элементы как жизненно важные для безопасности, к которым прозрачный код имеет безопасный доступ.</summary>
    </member>
    <member name="M:System.Security.SecuritySafeCriticalAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.SecuritySafeCriticalAttribute" />.</summary>
    </member>
    <member name="T:System.Security.SecurityTransparentAttribute">
      <summary>Указывает, что сборка не может вызывать расширения прав.</summary>
    </member>
    <member name="M:System.Security.SecurityTransparentAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.SecurityTransparentAttribute" />.</summary>
    </member>
    <member name="T:System.Security.VerificationException">
      <summary>Исключение, которое создается, когда политика безопасности требует строго типизированного кода, а процесс проверки не в состоянии выяснить, используется ли строго типизированный код.</summary>
    </member>
    <member name="M:System.Security.VerificationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.VerificationException" /> со свойствами по умолчанию.</summary>
    </member>
    <member name="M:System.Security.VerificationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.VerificationException" />, используя пояснительное сообщение.</summary>
      <param name="message">Сообщение, содержащее причину возникновения исключения.</param>
    </member>
    <member name="M:System.Security.VerificationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.VerificationException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее это исключение.</summary>
      <param name="message">Сообщение об ошибке с объяснением причин исключения.</param>
      <param name="innerException">Исключение, которое вызвало текущее исключение. Если значение параметра <paramref name="innerException" /> не равно null, текущее исключение сгенерировано в блоке catch, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Text.StringBuilder">
      <summary>Предоставляет изменяемую строку символов. Этот класс не наследуется.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.StringBuilder" />.</summary>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.StringBuilder" />, используя указанную емкость.</summary>
      <param name="capacity">Примерный начальный размер этого экземпляра.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="capacity" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.StringBuilder" />, который начинается с указанной емкости и может увеличиваться до указанного максимального значения.</summary>
      <param name="capacity">Примерный начальный размер <see cref="T:System.Text.StringBuilder" />.</param>
      <param name="maxCapacity">Наибольшее допустимое количество знаков в текущей строке.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxCapacity" /> меньше единицы, <paramref name="capacity" /> меньше нуля или <paramref name="capacity" /> больше, чем <paramref name="maxCapacity" />.</exception>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.StringBuilder" />, используя указанную строку.</summary>
      <param name="value">Строка, используемая для инициализации значения экземпляра. Если <paramref name="value" /> равно null, то новый <see cref="T:System.Text.StringBuilder" /> будет содержать пустую строку (то есть, он содержит <see cref="F:System.String.Empty" />).</param>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.StringBuilder" />, используя указанную строку и емкость.</summary>
      <param name="value">Строка, используемая для инициализации значения экземпляра. Если <paramref name="value" /> равно null, то новый <see cref="T:System.Text.StringBuilder" /> будет содержать пустую строку (то есть, он содержит <see cref="F:System.String.Empty" />).</param>
      <param name="capacity">Примерный начальный размер <see cref="T:System.Text.StringBuilder" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="capacity" /> меньше нуля.</exception>
    </member>
    <member name="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Text.StringBuilder" /> из указанной подстроки и емкости.</summary>
      <param name="value">Строка, содержащая подстроку, применяемую для инициализации значения этого экземпляра. Если <paramref name="value" /> равно null, то новый <see cref="T:System.Text.StringBuilder" /> будет содержать пустую строку (то есть, он содержит <see cref="F:System.String.Empty" />).</param>
      <param name="startIndex">Позиция в пределах <paramref name="value" />, с которой начинается подстрока.</param>
      <param name="length">Число символов в подстроке.</param>
      <param name="capacity">Примерный начальный размер <see cref="T:System.Text.StringBuilder" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="capacity" /> меньше нуля. -или-  Сумма значений <paramref name="startIndex" /> и <paramref name="length" /> не равна положению в <paramref name="value" />.</exception>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Boolean)">
      <summary>Добавляет строковое представление указанного логического значения к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Прибавляемое логическое значение.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Byte)">
      <summary>Добавляет строковое представление указанного 8-битового целого числа без знака к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Добавляемое значение.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char)">
      <summary>Добавляет строковое представление указанного символа Юникода к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Символ Юникода, который необходимо добавить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
      <summary>Добавляет указанное число копий строкового представления символа Юникода к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Символ, который необходимо добавить.</param>
      <param name="repeatCount">Сколько раз следует добавить <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="repeatCount" /> меньше нуля. -или-  При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <exception cref="T:System.OutOfMemoryException">Недостаточно памяти.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char[])">
      <summary>Добавляет строковое представление символа Юникода в указанном массиве к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Массив символов для добавления.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
      <summary>Добавляет строковое представление указанного дочернего массива символов Юникода к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Массив символов.</param>
      <param name="startIndex">Начальная позиция в массиве <paramref name="value" />.</param>
      <param name="charCount">Количество добавляемых знаков.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> — null, а значения <paramref name="startIndex" /> и <paramref name="charCount" /> не равны нулю.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="charCount" /> меньше нуля. -или-  Значение параметра <paramref name="startIndex" /> меньше нуля. -или-  Длина значения <paramref name="startIndex" /> + <paramref name="charCount" /> больше, чем длина <paramref name="value" />. -или-  При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Decimal)">
      <summary>Добавляет строковое представление указанного десятичного числа к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Добавляемое значение.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Double)">
      <summary>Добавляет строковое представление указанного числа с плавающей запятой с удвоенной точностью к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Добавляемое значение.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Int16)">
      <summary>Добавляет строковое представление указанного 16-битового целого числа со знаком к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Добавляемое значение.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Int32)">
      <summary>Добавляет строковое представление указанного 32-битового целого числа со знаком к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Добавляемое значение.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Int64)">
      <summary>Добавляет строковое представление указанного 64-битового целого числа со знаком к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Добавляемое значение.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Object)">
      <summary>Добавляет строковое представление указанного объекта к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Добавляемый объект.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.SByte)">
      <summary>Добавляет строковое представление указанного 8-битового целого числа со знаком к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Добавляемое значение.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.Single)">
      <summary>Добавляет строковое представление указанного числа с плавающей запятой с обычной точностью к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Добавляемое значение.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.String)">
      <summary>Добавляет копию указанной строки к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Добавляемая строка.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
      <summary>Добавляет копию указанной подстроки к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Строка, содержащая добавляемую подстроку.</param>
      <param name="startIndex">Начальная позиция подстроки в пределах <paramref name="value" />.</param>
      <param name="count">Число знаков в подстроке <paramref name="value" /> для добавления.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> — null, а значения <paramref name="startIndex" /> и <paramref name="count" /> не равны нулю.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> меньше нуля. -или-  <paramref name="startIndex" /> меньше нуля. -или-  Длина значения <paramref name="startIndex" /> + <paramref name="count" /> больше, чем длина <paramref name="value" />. -или-  При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.UInt16)">
      <summary>Добавляет строковое представление указанного 16-битового целого числа без знака к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Добавляемое значение.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.UInt32)">
      <summary>Добавляет строковое представление указанного 32-битового целого числа без знака к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Добавляемое значение.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Append(System.UInt64)">
      <summary>Добавляет строковое представление указанного 64-битового целого числа без знака к данному экземпляру.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Добавляемое значение.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
      <summary>Добавляет к данному экземпляру строку, возвращаемую в результате обработки строки составного формата, содержащей ноль или более элементов формата. Каждый элемент формата заменяется строковым представлением соответствующего аргумента в массиве параметров с помощью указанного поставщика формата.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления. После операции добавления этот экземпляр содержит все данные, существовавшие до операции, к которым добавляется копия параметра <paramref name="format" />, где все спецификации форматирования заменяются представлением строки соответствующего аргумента объекта.</returns>
      <param name="provider">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</param>
      <param name="format">Строка составного формата (см. примечания).</param>
      <param name="args">Массив объектов для форматирования.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="format" /> имеет значение null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> не является допустимым.  -или- Индекс элемента формата меньше 0 (нуля), либо больше или равен длине массива <paramref name="args" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Длина развернутой строки превысит <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
      <summary>Добавляет к данному экземпляру строку, возвращаемую в результате обработки строки составного формата, содержащей ноль или более элементов формата. Каждый элемент формата заменяется строковым представлением соответствующего аргумента в массиве параметров.</summary>
      <returns>Ссылка на данный экземпляр с добавленным <paramref name="format" />. Каждый элемент формата в параметре <paramref name="format" /> заменяется строковым представлением соответствующего аргумента объекта.</returns>
      <param name="format">Строка составного формата (см. примечания).</param>
      <param name="args">Массив объектов для форматирования.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="format" /> или <paramref name="args" /> — null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> не является допустимым.  -или- Индекс элемента формата меньше 0 (нуля), либо больше или равен длине массива <paramref name="args" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Длина развернутой строки превысит <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendLine">
      <summary>Добавляет знак завершения строки по умолчанию в конец текущего объекта <see cref="T:System.Text.StringBuilder" />.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.AppendLine(System.String)">
      <summary>Добавляет копию указанной строки и знак завершения строки по умолчанию в конец текущего объекта <see cref="T:System.Text.StringBuilder" />.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
      <param name="value">Добавляемая строка.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.Capacity">
      <summary>Возвращает или задает максимальное число знаков, которое может содержаться в памяти, назначенной текущим экземпляром.</summary>
      <returns>Максимальное число символов, которое может содержаться в памяти, назначенной текущим экземпляром.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное для заданной операции значение меньше текущей длины данного экземпляра. -или-  Указанное для заданной операции значение больше, чем максимальная емкость.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.Chars(System.Int32)">
      <summary>Возвращает или задает символ на указанной позиции в данном экземпляре.</summary>
      <returns>Символ Юникода в позиции <paramref name="index" />.</returns>
      <param name="index">Позиция символа.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Во время задания символа <paramref name="index" /> находится вне границ данного экземпляра.</exception>
      <exception cref="T:System.IndexOutOfRangeException">Во время получения символа <paramref name="index" /> находится вне границ данного экземпляра.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Clear">
      <summary>Удаляет все символы из текущего экземпляра <see cref="T:System.Text.StringBuilder" />.</summary>
      <returns>Объект, длина <see cref="P:System.Text.StringBuilder.Length" /> которого равна 0 (нулю).</returns>
    </member>
    <member name="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>Копирует символы из указанного сегмента этого экземпляра в указанный массив <see cref="T:System.Char" />.</summary>
      <param name="sourceIndex">Начальная позиция в этом экземпляре, откуда будут скопированы символы. Индексация начинается с нуля.</param>
      <param name="destination">Массив, в который копируются символы.</param>
      <param name="destinationIndex">Начальная позиция в массиве <paramref name="destination" />, в которую копируются символы. Индексация начинается с нуля.</param>
      <param name="count">Число копируемых знаков.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="destination" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра равно <paramref name="sourceIndex" />, <paramref name="destinationIndex" /> или <paramref name="count" /> меньше нуля. -или- Значение <paramref name="sourceIndex" /> больше, чем длина данного экземпляра.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceIndex" /> + <paramref name="count" /> больше, чем длина данного экземпляра. -или- Длина значения <paramref name="destinationIndex" /> + <paramref name="count" /> больше, чем длина <paramref name="destination" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)">
      <summary>Гарантирует, что емкость данного экземпляра <see cref="T:System.Text.StringBuilder" /> не меньше указанного значения.</summary>
      <returns>Новая емкость этого экземпляра.</returns>
      <param name="capacity">Минимальная емкость для проверки.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="capacity" /> меньше нуля. -или-  При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
      <summary>Возвращает значение, показывающее, равен ли данный экземпляр заданному объекту.</summary>
      <returns>true, если данный экземпляр и <paramref name="sb" /> имеют одинаковую строку, <see cref="P:System.Text.StringBuilder.Capacity" /> и значения <see cref="P:System.Text.StringBuilder.MaxCapacity" />; в противном случае — false.</returns>
      <param name="sb">Объект, сравниваемый с этим экземпляром, или значение null.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
      <summary>Вставляет строковое представление логического значения в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Значение, которое следует вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше длины данного экземпляра.</exception>
      <exception cref="T:System.OutOfMemoryException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
      <summary>Вставляет строковое представление указанного 8-битового целого числа без знака в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Значение, которое следует вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше длины данного экземпляра.</exception>
      <exception cref="T:System.OutOfMemoryException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
      <summary>Вставляет строковое представление указанного символа Юникода в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Значение, которое следует вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше длины данного экземпляра. -или-  При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
      <summary>Вставляет строковое представление указанного массива символов Юникода в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Массив символов для вставки.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше длины данного экземпляра. -или-  При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>Вставляет строковое представление указанного подмассива символов Юникода в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Массив символов.</param>
      <param name="startIndex">Начальный индекс внутри <paramref name="value" />.</param>
      <param name="charCount">Число символов для вставки.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="value" /> — null, а значения <paramref name="startIndex" /> и <paramref name="charCount" /> не равны нулю.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра равно <paramref name="index" />, <paramref name="startIndex" /> или <paramref name="charCount" /> меньше нуля. -или-  Значение <paramref name="index" /> больше, чем длина данного экземпляра. -или-  Сумма значений <paramref name="startIndex" /> и <paramref name="charCount" /> не равна положению в <paramref name="value" />. -или-  При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
      <summary>Вставляет строковое представление десятичного числа в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Значение, которое следует вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше длины данного экземпляра.</exception>
      <exception cref="T:System.OutOfMemoryException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
      <summary>Вставляет строковое представление числа с плавающей запятой с удвоенной точностью в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Значение, которое следует вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше длины данного экземпляра.</exception>
      <exception cref="T:System.OutOfMemoryException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
      <summary>Вставляет строковое представление указанного 16-битового знакового целого числа в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Значение, которое следует вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше длины данного экземпляра.</exception>
      <exception cref="T:System.OutOfMemoryException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
      <summary>Вставляет строковое представление указанного 32-битового знакового целого числа в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Значение, которое следует вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше длины данного экземпляра.</exception>
      <exception cref="T:System.OutOfMemoryException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
      <summary>Вставляет строковое представление 64-битового целого со знаком в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Значение, которое следует вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше длины данного экземпляра.</exception>
      <exception cref="T:System.OutOfMemoryException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
      <summary>Вставляет строковое представление объекта в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Объект для вставки или значение null.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше длины данного экземпляра.</exception>
      <exception cref="T:System.OutOfMemoryException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
      <summary>Вставляет строковое представление указанного 8-битового знакового целого числа в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Значение, которое следует вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше длины данного экземпляра.</exception>
      <exception cref="T:System.OutOfMemoryException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
      <summary>Вставляет строковое представление числа одинарной точности с плавающей запятой с обычной точностью в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Значение, которое следует вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше длины данного экземпляра.</exception>
      <exception cref="T:System.OutOfMemoryException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
      <summary>Вставляет строку в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Строка, которую требуется вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше текущей длины данного экземпляра.  -или- Текущая длина этого объекта <see cref="T:System.Text.StringBuilder" /> вместе с длиной <paramref name="value" /> превышает значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
      <summary>Вставляет одну или более копий указанной строки в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Строка, которую требуется вставить.</param>
      <param name="count">Сколько раз следует вставить <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше текущей длины данного экземпляра. -или-  Значение параметра <paramref name="count" /> меньше нуля.</exception>
      <exception cref="T:System.OutOfMemoryException">Текущая длина этого объекта <see cref="T:System.Text.StringBuilder" /> вместе со значением длительности <paramref name="value" /> параметра <paramref name="count" /> превышает значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
      <summary>Вставляет строковое представление 16-разрядного целого числа без знака в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Значение, которое следует вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше длины данного экземпляра.</exception>
      <exception cref="T:System.OutOfMemoryException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
      <summary>Вставляет строковое представление 32-битового целого числа без знака в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Значение, которое следует вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше длины данного экземпляра.</exception>
      <exception cref="T:System.OutOfMemoryException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
      <summary>Вставляет строковое представление 64-битового целого числа без знака в данный экземпляр на указанную позицию символа.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
      <param name="index">Позиция в данном экземпляре, с которой начинается вставка.</param>
      <param name="value">Значение, которое следует вставить.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> меньше нуля или больше длины данного экземпляра.</exception>
      <exception cref="T:System.OutOfMemoryException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.Length">
      <summary>Получает или задает длину текущего объекта <see cref="T:System.Text.StringBuilder" />.</summary>
      <returns>Длина этого экземпляра.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Указанное для заданной операции значение меньше нуля или больше, чем <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.StringBuilder.MaxCapacity">
      <summary>Возвращает максимальную емкость данного экземпляра.</summary>
      <returns>Наибольшее количество символов, которое может содержать данный экземпляр.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
      <summary>Удаляет указанный диапазон символов из данного экземпляра.</summary>
      <returns>Ссылка на этот экземпляр после завершения операции удаления.</returns>
      <param name="startIndex">Отсчитываемая с нуля позиция в данном экземпляре, с которой начинается удаление.</param>
      <param name="length">Число знаков для удаления.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Если <paramref name="startIndex" /> или <paramref name="length" /> меньше нуля, или <paramref name="startIndex" /> + <paramref name="length" /> больше, чем длина данного экземпляра.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
      <summary>Замещает все вхождения указанного символа в данном экземпляре на другой указанный знак.</summary>
      <returns>Ссылка на данный экземпляр с помощью <paramref name="oldChar" /> заменяется на <paramref name="newChar" />.</returns>
      <param name="oldChar">Замещаемый символ.</param>
      <param name="newChar">Символ, замещающий <paramref name="oldChar" />.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
      <summary>Замещает все вхождения указанного символа в подстроке данного экземпляра на другой указанный символ.</summary>
      <returns>Ссылка на данный экземпляр с помощью <paramref name="oldChar" /> заменяется на <paramref name="newChar" /> в диапазоне от <paramref name="startIndex" /> до <paramref name="startIndex" /> + <paramref name="count" />.</returns>
      <param name="oldChar">Замещаемый символ.</param>
      <param name="newChar">Символ, замещающий <paramref name="oldChar" />.</param>
      <param name="startIndex">Позиция в данном экземпляре, с которой начинается подстрока.</param>
      <param name="count">Длина подстроки.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> + <paramref name="count" /> больше, чем длина значения данного экземпляра. -или-  Значение параметра <paramref name="startIndex" /> или <paramref name="count" /> меньше нуля.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.String,System.String)">
      <summary>Замещает все вхождения указанной строки в данном экземпляре на другую указанную строку.</summary>
      <returns>Ссылка на данный экземпляр со всеми экземплярами <paramref name="oldValue" /> заменяется на <paramref name="newValue" />.</returns>
      <param name="oldValue">Замещаемая строка.</param>
      <param name="newValue">Строка, замещающая <paramref name="oldValue" />, или null.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="oldValue" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Длина параметра <paramref name="oldValue" /> равна нулю.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
      <summary>Замещает все вхождения указанной строки в подстроке данного экземпляра на другую указанную строку.</summary>
      <returns>Ссылка на данный экземпляр со всеми экземплярами <paramref name="oldValue" /> заменяется на <paramref name="newValue" /> в диапазоне от <paramref name="startIndex" /> до <paramref name="startIndex" /> + <paramref name="count" /> - 1.</returns>
      <param name="oldValue">Замещаемая строка.</param>
      <param name="newValue">Строка, замещающая <paramref name="oldValue" />, или null.</param>
      <param name="startIndex">Позиция в данном экземпляре, с которой начинается подстрока.</param>
      <param name="count">Длина подстроки.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="oldValue" /> имеет значение null.</exception>
      <exception cref="T:System.ArgumentException">Длина параметра <paramref name="oldValue" /> равна нулю.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> или <paramref name="count" /> меньше нуля. -или-  Значение <paramref name="startIndex" /> плюс <paramref name="count" /> указывает позицию символа вне пределов данного экземпляра. -или-  При увеличении значения данного экземпляра будет превышено значение <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.ToString">
      <summary>Преобразует значение данного экземпляра в <see cref="T:System.String" />.</summary>
      <returns>Строка, чье значение совпадает с данным экземпляром.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
      <summary>Преобразует значение подстроки этого экземпляра в <see cref="T:System.String" />.</summary>
      <returns>Строка, чье значение совпадает с указанной подстрокой данного экземпляра.</returns>
      <param name="startIndex">Начальная позиция подстроки в данном экземпляре.</param>
      <param name="length">Длина подстроки.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="startIndex" /> или <paramref name="length" /> меньше нуля. -или-  Сумма <paramref name="startIndex" /> и <paramref name="length" /> больше, чем длина текущего экземпляра.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Threading.LazyThreadSafetyMode">
      <summary>Задает способ синхронизации доступа в нескольких потоках экземпляром <see cref="T:System.Lazy`1" />.</summary>
    </member>
    <member name="F:System.Threading.LazyThreadSafetyMode.ExecutionAndPublication">
      <summary>Блокировки позволяют потокобезопасным образом ограничить инициализацию экземпляра <see cref="T:System.Lazy`1" /> одним потоком. При внутреннем использовании блокировок методом инициализации (или конструктором по умолчанию, если метод инициализации отсутствует) возможны взаимоблокировки. Если при использовании конструктора <see cref="T:System.Lazy`1" />, задающего метод инициализации (параметр <paramref name="valueFactory" />), этот метод инициализации вызывает исключение (или ему не удается обработать исключение) во время первого вызова свойства <see cref="P:System.Lazy`1.Value" />, данное исключение кэшируется и вызывается повторно при последующих вызовах свойства <see cref="P:System.Lazy`1.Value" />. Если используется конструктор <see cref="T:System.Lazy`1" />, не указывающий метод инициализации, исключения, создаваемые конструктором по умолчанию для <paramref name="T" />, не кэшируются. В этом случае при последующем вызове свойства <see cref="P:System.Lazy`1.Value" /> инициализация экземпляра <see cref="T:System.Lazy`1" /> может закончиться успешно. Если метод инициализации рекурсивно осуществляет доступ к свойству <see cref="P:System.Lazy`1.Value" /> экземпляра <see cref="T:System.Lazy`1" />, создается исключение <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Threading.LazyThreadSafetyMode.None">
      <summary>Экземпляр <see cref="T:System.Lazy`1" /> не является потокобезопасным; если доступ к экземпляру осуществляется из нескольких потоков, его поведение является неопределенным. Этот режим рекомендуется использовать только в том случае, если важна высокая производительность и экземпляр <see cref="T:System.Lazy`1" /> гарантированно никогда не инициализируется больше, чем из одного потока. Если при использовании конструктора <see cref="T:System.Lazy`1" />, задающего метод инициализации (параметр <paramref name="valueFactory" />), этот метод инициализации вызывает исключение (или ему не удается обработать исключение) во время первого вызова свойства <see cref="P:System.Lazy`1.Value" />, данное исключение кэшируется и вызывается повторно при последующих вызовах свойства <see cref="P:System.Lazy`1.Value" />. Если используется конструктор <see cref="T:System.Lazy`1" />, не указывающий метод инициализации, исключения, создаваемые конструктором по умолчанию для <paramref name="T" />, не кэшируются. В этом случае при последующем вызове свойства <see cref="P:System.Lazy`1.Value" /> инициализация экземпляра <see cref="T:System.Lazy`1" /> может закончиться успешно. Если метод инициализации рекурсивно осуществляет доступ к свойству <see cref="P:System.Lazy`1.Value" /> экземпляра <see cref="T:System.Lazy`1" />, создается исключение <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Threading.LazyThreadSafetyMode.PublicationOnly">
      <summary>При попытке одновременной инициализации экземпляра <see cref="T:System.Lazy`1" /> несколькими потоками все потоки могут запускать метод инициализации (или конструктор по умолчанию, если метод инициализации отсутствует). Поток, который первым завершает инициализацию, задает значение экземпляра <see cref="T:System.Lazy`1" />. Это значение возвращается любым другим потокам, одновременно запускающим метод инициализации, если метод инициализации не создал исключения в этих потоках. Любые экземпляры <paramref name="T" />, созданные другими потоками, удаляются. Если метод инициализации создает исключение в одном из потоков, это исключение передается за пределы свойства <see cref="P:System.Lazy`1.Value" /> в этом потоке. Исключение не кэшируется. Значение свойства <see cref="P:System.Lazy`1.IsValueCreated" /> остается равным false и последующие вызовы свойства <see cref="P:System.Lazy`1.Value" /> тем потоком, где было создано исключение, или другими потоками вызывают метод инициализации повторно. Если метод инициализации рекурсивно осуществляет доступ к свойству <see cref="P:System.Lazy`1.Value" /> экземпляра <see cref="T:System.Lazy`1" />, исключение не создается.</summary>
    </member>
    <member name="T:System.Threading.Timeout">
      <summary>Содержит константы, определяющие бесконечные интервалы времени ожидания. Этот класс не наследуется.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Threading.Timeout.Infinite">
      <summary>Константа, используемая для задания бесконечного периода ожидания.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:System.Threading.Timeout.InfiniteTimeSpan">
      <summary>Константа, используемая для задания бесконечного периода ожидания для методов, принимающих параметр <see cref="T:System.TimeSpan" />.</summary>
    </member>
    <member name="T:System.Threading.WaitHandle">
      <summary>Инкапсулирует связанные с операционной системой объекты, ожидающие монопольного доступа к общим ресурсам.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Threading.WaitHandle" />.</summary>
    </member>
    <member name="M:System.Threading.WaitHandle.Dispose">
      <summary>Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Threading.WaitHandle" />.</summary>
    </member>
    <member name="M:System.Threading.WaitHandle.Dispose(System.Boolean)">
      <summary>При переопределении в производном классе освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Threading.WaitHandle" />, и (необязательно) освобождает управляемые ресурсы.</summary>
      <param name="explicitDisposing">Значение true позволяет освободить управляемые и неуправляемые ресурсы; значение false позволяет освободить только неуправляемые ресурсы.</param>
    </member>
    <member name="F:System.Threading.WaitHandle.InvalidHandle">
      <summary>Представляет недопустимый собственный дескриптор операционной системы. Это поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])">
      <summary>Ожидает получения сигнала всеми элементами заданного массива.</summary>
      <returns>true, когда каждый элемент <paramref name="waitHandles" /> получил сигнал. Иначе возвращение значения методом не выполняется.</returns>
      <param name="waitHandles">Массив WaitHandle, содержащий объекты, ожидаемые текущим экземпляром. Этот массив не может содержать несколько ссылок на один и тот же объект.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="waitHandles" /> — null. -или-  Один или несколько объектов в массиве <paramref name="waitHandles" /> имеют значение null.  -или- <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 2.0 или выше.</exception>
      <exception cref="T:System.DuplicateWaitObjectException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.ArgumentException" />. Массив <paramref name="waitHandles" /> содержит элементы, являющиеся дубликатами.</exception>
      <exception cref="T:System.NotSupportedException">Количество объектов в массиве <paramref name="waitHandles" /> больше допустимого системой. -или-  Атрибут <see cref="T:System.STAThreadAttribute" /> применен к потоковой процедуре для текущего потока, а массив <paramref name="waitHandles" /> содержит больше одного элемента.</exception>
      <exception cref="T:System.ApplicationException">
        <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 1.0 или 1.1.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">Ожидание прервано, поскольку поток завершил работу, не освободив мьютекс. Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)">
      <summary>Ожидает получения сигнала всеми элементами заданного массива, используя значение <see cref="T:System.Int32" /> для указания интервала времени.</summary>
      <returns>Значение true, если каждый элемент массива <paramref name="waitHandles" /> получил сигнал; в противном случае — значение false.</returns>
      <param name="waitHandles">Массив WaitHandle, содержащий объекты, ожидаемые текущим экземпляром. Данный массив не может содержать несколько ссылок на один и тот же объект (дубликатов).</param>
      <param name="millisecondsTimeout">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="waitHandles" /> — null. -или-  Один или несколько объектов в массиве <paramref name="waitHandles" /> имеют значение null.  -или- Параметр <paramref name="waitHandles" /> представляет собой массив без элементов.</exception>
      <exception cref="T:System.DuplicateWaitObjectException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.ArgumentException" />. Массив <paramref name="waitHandles" /> содержит элементы, являющиеся дубликатами.</exception>
      <exception cref="T:System.NotSupportedException">Количество объектов в массиве <paramref name="waitHandles" /> больше допустимого системой. -или-  Атрибут <see cref="T:System.STAThreadAttribute" /> применен к потоковой процедуре для текущего потока, а массив <paramref name="waitHandles" /> содержит больше одного элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">Ожидание завершено, поскольку поток завершил работу, не освободив мьютекс. Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)">
      <summary>Ожидает получения сигнала всеми элементами заданного массива, используя значение <see cref="T:System.TimeSpan" /> для указания интервала времени.</summary>
      <returns>Значение true, если каждый элемент массива <paramref name="waitHandles" /> получил сигнал; в противном случае — значение false.</returns>
      <param name="waitHandles">Массив WaitHandle, содержащий объекты, ожидаемые текущим экземпляром. Этот массив не может содержать несколько ссылок на один и тот же объект.</param>
      <param name="timeout">Структура <see cref="T:System.TimeSpan" />, указывающее время ожидания в миллисекундах, или структура <see cref="T:System.TimeSpan" />, отвечающая значению -1 миллисекунда, для неограниченного времени ожидания.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="waitHandles" /> — null.  -или-  Один или несколько объектов в массиве <paramref name="waitHandles" /> имеют значение null.  -или- Параметр <paramref name="waitHandles" /> представляет собой массив без элементов.</exception>
      <exception cref="T:System.DuplicateWaitObjectException">В .NET для приложений Магазина Windows или переносимой библиотеке классов вместо этого перехватите исключение базового класса <see cref="T:System.ArgumentException" />. Массив <paramref name="waitHandles" /> содержит элементы, являющиеся дубликатами.</exception>
      <exception cref="T:System.NotSupportedException">Количество объектов в массиве <paramref name="waitHandles" /> больше допустимого системой. -или-  Атрибут <see cref="T:System.STAThreadAttribute" /> применен к потоковой процедуре для текущего потока, а массив <paramref name="waitHandles" /> содержит больше одного элемента.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.  -или- Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">Ожидание прервано, поскольку поток завершил работу, не освободив мьютекс. Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])">
      <summary>Ожидает получения сигнала какими-либо элементами заданного массива.</summary>
      <returns>Индекс объекта, удовлетворившего операцию ожидания, в массиве.</returns>
      <param name="waitHandles">Массив WaitHandle, содержащий объекты, ожидаемые текущим экземпляром.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="waitHandles" /> — null. -или- Один или несколько объектов в массиве <paramref name="waitHandles" /> имеют значение null.</exception>
      <exception cref="T:System.NotSupportedException">Количество объектов в массиве <paramref name="waitHandles" /> больше допустимого системой.</exception>
      <exception cref="T:System.ApplicationException">
        <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 1.0 или 1.1.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">Ожидание завершено, поскольку поток завершил работу, не освободив мьютекс. Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="waitHandles" /> является массивом без элементов, а платформа .NET Framework имеет версию 2.0 или выше.</exception>
      <exception cref="T:System.InvalidOperationException">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)">
      <summary>Ожидает получения сигнала любыми элементами указанного массива, используя 32-битовое целое число со знаком для задания интервала времени.</summary>
      <returns>Индекс объекта в массиве, удовлетворившего операцию ожидания, или значение <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, если ни один из объектов не удовлетворил операцию ожидания, и истек интервал времени, равный <paramref name="millisecondsTimeout" />.</returns>
      <param name="waitHandles">Массив WaitHandle, содержащий объекты, ожидаемые текущим экземпляром.</param>
      <param name="millisecondsTimeout">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="waitHandles" /> — null. -или- Один или несколько объектов в массиве <paramref name="waitHandles" /> имеют значение null.</exception>
      <exception cref="T:System.NotSupportedException">Количество объектов в массиве <paramref name="waitHandles" /> больше допустимого системой.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">Ожидание завершено, поскольку поток завершил работу, не освободив мьютекс. Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="waitHandles" /> представляет собой массив без элементов.</exception>
      <exception cref="T:System.InvalidOperationException">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)">
      <summary>Ожидает получения сигнала любыми элементами заданного массива, используя значение типа <see cref="T:System.TimeSpan" /> для указания интервала времени.</summary>
      <returns>Индекс объекта в массиве, удовлетворившего операцию ожидания, или значение <see cref="F:System.Threading.WaitHandle.WaitTimeout" />, если ни один из объектов не удовлетворил операцию ожидания, и истек интервал времени, равный <paramref name="timeout" />.</returns>
      <param name="waitHandles">Массив WaitHandle, содержащий объекты, ожидаемые текущим экземпляром.</param>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, представляющий время ожидания в миллисекундах, или объект <see cref="T:System.TimeSpan" />, представляющий -1 миллисекунду для неограниченного ожидания.</param>
      <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="waitHandles" /> — null. -или- Один или несколько объектов в массиве <paramref name="waitHandles" /> имеют значение null.</exception>
      <exception cref="T:System.NotSupportedException">Количество объектов в массиве <paramref name="waitHandles" /> больше допустимого системой.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.  -или- Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">Ожидание завершено, поскольку поток завершил работу, не освободив мьютекс. Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="waitHandles" /> представляет собой массив без элементов.</exception>
      <exception cref="T:System.InvalidOperationException">Массив <paramref name="waitHandles" /> содержит прозрачный прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitOne">
      <summary>Блокирует текущий поток до получения сигнала объектом <see cref="T:System.Threading.WaitHandle" />.</summary>
      <returns>Значение true, если текущий экземпляр получает сигнал. Если текущий экземпляр не сигнализируется, метод <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> не возвращает никакое значение.</returns>
      <exception cref="T:System.ObjectDisposedException">Текущий экземпляр уже был удален.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">Ожидание завершено, поскольку поток завершил работу, не освободив мьютекс. Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий экземпляр является прозрачным прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitOne(System.Int32)">
      <summary>Блокирует текущий поток до получения текущим дескриптором <see cref="T:System.Threading.WaitHandle" /> сигнала, используя 32-разрядное целочисленное значение со знаком для указания интервала времени.</summary>
      <returns>Значение true при получении сигнала текущим экземпляром; в противном случае — значение false.</returns>
      <param name="millisecondsTimeout">Время ожидания в миллисекундах или функция <see cref="F:System.Threading.Timeout.Infinite" /> (-1) в случае неограниченного времени ожидания.</param>
      <exception cref="T:System.ObjectDisposedException">Текущий экземпляр уже был удален.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="millisecondsTimeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">Ожидание завершено, поскольку поток завершил работу, не освободив мьютекс. Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий экземпляр является прозрачным прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</exception>
    </member>
    <member name="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)">
      <summary>Блокирует текущий поток до получения сигнала текущим экземпляром, используя значение типа <see cref="T:System.TimeSpan" /> для указания интервала времени.</summary>
      <returns>Значение true при получении сигнала текущим экземпляром; в противном случае — значение false.</returns>
      <param name="timeout">Объект <see cref="T:System.TimeSpan" />, представляющий время ожидания в миллисекундах, или объект <see cref="T:System.TimeSpan" />, представляющий -1 миллисекунду для неограниченного ожидания.</param>
      <exception cref="T:System.ObjectDisposedException">Текущий экземпляр уже был удален.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченное время ожидания. -или- Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.Threading.AbandonedMutexException">Ожидание завершено, поскольку поток завершил работу, не освободив мьютекс. Это исключение не выдается в операционных системах Windows 98 и Windows Millennium Edition.</exception>
      <exception cref="T:System.InvalidOperationException">Текущий экземпляр является прозрачным прокси для объекта <see cref="T:System.Threading.WaitHandle" /> в другом домене приложения.</exception>
    </member>
    <member name="F:System.Threading.WaitHandle.WaitTimeout">
      <summary>Указывает, что время ожидания операции <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> истекло до получения сигнала каким-либо из дескрипторов ожидания. Это поле является константой.</summary>
      <filterpriority>1</filterpriority>
    </member>
  </members>
</doc>