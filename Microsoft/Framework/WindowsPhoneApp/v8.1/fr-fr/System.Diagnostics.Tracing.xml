<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Tracing</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Tracing.EventAttribute">
      <summary>Spécifie les informations de schéma d'événement supplémentaires pour un événement.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventAttribute.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Tracing.EventAttribute" /> avec l'identificateur d'événement spécifié.</summary>
      <param name="eventId">Identificateur de l'événement.</param>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.EventId">
      <summary>Obtient ou définit l'identificateur pour l'événement.</summary>
      <returns>Identificateur de l'événement. Cette valeur doit être supérieure à 0.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Keywords">
      <summary>Obtient ou définit les mots clés pour l'événement.</summary>
      <returns>Combinaison d'opérations de bits des valeurs d'énumération.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Level">
      <summary>Obtient ou définit le niveau de l'événement.</summary>
      <returns>L'une des valeurs d'énumération qui spécifie le niveau de l'événement.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Message">
      <summary>Obtient ou définit le message pour l'événement.</summary>
      <returns>Message pour l'événement.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Opcode">
      <summary>Obtient ou définit le code d'opération pour l'événement.</summary>
      <returns>L'une des valeurs d'énumération qui spécifie le code d'opération.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Task">
      <summary>Obtient ou définit la tâche de l'événement.</summary>
      <returns>Tâche de l'événement.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Version">
      <summary>Obtient ou définit la version de l'événement.</summary>
      <returns>Version de l'événement.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventCommand">
      <summary>Décrit la commande (propriété <see cref="P:System.Diagnostics.Tracing.EventCommandEventArgs.Command" /> ) qui est passée au rappel de <see cref="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" /> .</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.Disable">
      <summary>Désactive l'événement.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.Enable">
      <summary>Active l'événement.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.SendManifest">
      <summary>Envoie le manifeste.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.Update">
      <summary>Met à jour l'événement.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventCommandEventArgs">
      <summary>Fournit les arguments pour le rappel <see cref="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventCommandEventArgs.Arguments">
      <summary>Obtient le tableau des arguments pour le rappel.</summary>
      <returns>Tableau d'arguments de rappel.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventCommandEventArgs.Command">
      <summary>Obtient la commande de rappel.</summary>
      <returns>Commande de rappel.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent(System.Int32)">
      <summary>Désactive l'événement avec l'identificateur spécifié.</summary>
      <returns>true si <paramref name="eventId" /> se situe dans la plage ; sinon false.</returns>
      <param name="eventId">Identificateur de l'événement à désactiver.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent(System.Int32)">
      <summary>Active l'événement avec l'identificateur spécifié.</summary>
      <returns>true si <paramref name="eventId" /> se situe dans la plage ; sinon false.</returns>
      <param name="eventId">Identificateur de l'événement à activer.</param>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventKeywords">
      <summary>Définit les mots clés standard qui s'appliquent aux événements.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.AuditFailure">
      <summary>Joint à tous les événements d'audit de sécurité ayant échoué. Utilise ce mot clé uniquement pour les événements du journal de sécurité.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.AuditSuccess">
      <summary>Joint à tous les événements d'audit de sécurité réussi. Utilise ce mot clé uniquement pour les événements du journal de sécurité.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.CorrelationHint">
      <summary>Joint aux événements de transfert dont l'ID d'activité (ID de corrélation) associé est une valeur calculée et dont l'unicité n'est pas garantie (c'est-à-dire qu'il ne s'agit pas d'un vrai GUID).</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.EventLogClassic">
      <summary>Joint aux événements qui sont déclenchés par l'utilisation de la fonction RaiseEvent.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.None">
      <summary>Aucun filtre sur les mots clés n'est exécuté lorsque l'événement est publié.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.Sqm">
      <summary>Joint à tous les événements du mécanisme de qualité de service (SQM, Service Quality Mechanism).</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.WdiContext">
      <summary>Joint à tous les événements de contexte de l'infrastructure de diagnostics Windows (WDI, Windows Diagnostics Infrastructure).</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.WdiDiagnostic">
      <summary>Joint à tous les événements de diagnostic de l'infrastructure de diagnostics Windows (WDI, Windows Diagnostics Infrastructure).</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventLevel">
      <summary>Identifie le niveau d'un événement.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Critical">
      <summary>Ce niveau correspond à une erreur critique (une erreur grave ayant provoqué une panne importante).</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Error">
      <summary>Ce niveau correspond aux erreurs standard qui signifient l'existence d'un problème.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Informational">
      <summary>Ce niveau ajoute des événements d'information ou des messages qui ne signalent pas des erreurs. Ces événements peuvent aider à suivre la progression ou l'état d'une application.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.LogAlways">
      <summary>Aucun filtrage de niveau ne s'effectue sur l'événement.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Verbose">
      <summary>Ce niveau ajoute des événements ou des messages longs. Il provoque l'enregistrement de tous les événements.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Warning">
      <summary>Ce niveau ajoute des événements d'avertissement (par exemple, des événements publiés parce que l'utilisation d'un disque approche de sa capacité totale).</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventListener">
      <summary>Fournit les méthodes d'activation et de désactivation des événements à partir des sources d'événement.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.Diagnostics.Tracing.EventListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)">
      <summary>Désactive tous les événements de la source d'événement spécifiée.</summary>
      <param name="eventSource">Source d'événements pour laquelle désactiver les événements.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.Dispose">
      <summary>Libère les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Diagnostics.Tracing.EventListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)">
      <summary>Active les événements pour la source d'événement spécifiée qui a le niveau de commentaires spécifié ou un niveau inférieur.</summary>
      <param name="eventSource">Source d'événements pour laquelle activer les événements.</param>
      <param name="level">Niveau des événements à activer.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
      <summary>Active les événements pour la source d'événement spécifiée qui a le niveau de commentaires spécifié ou un niveau inférieur, et les indicateurs de mot clé de correspondance.</summary>
      <param name="eventSource">Source d'événements pour laquelle activer les événements.</param>
      <param name="level">Niveau des événements à activer.</param>
      <param name="matchAnyKeyword">Indicateurs de mots clés nécessaires pour activer les événements.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Active les événements pour la source d'événement spécifiée qui a le niveau de commentaires spécifié ou un niveau inférieur, les indicateurs de mot clé de correspondance et les arguments de correspondance.</summary>
      <param name="eventSource">Source d'événements pour laquelle activer les événements.</param>
      <param name="level">Niveau des événements à activer.</param>
      <param name="matchAnyKeyword">Indicateurs de mots clés nécessaires pour activer les événements.</param>
      <param name="arguments">Arguments à faire correspondre pour activer les événements.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
      <summary>Obtient un petit nombre non négatif qui représente la source d'événement spécifiée.</summary>
      <returns>Petit nombre non négatif qui représente la source d'événement spécifiée.</returns>
      <param name="eventSource">Source d'événements dont l'index doit être recherché.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)">
      <summary>Appelée pour toutes les sources d'événements existantes lorsque l'écouteur d'événements est créé et lorsqu'une nouvelle source d'événements est attachée à l'écouteur.</summary>
      <param name="eventSource">Source de l'événement.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)">
      <summary>Appelée lorsqu'un événement a été écrit par une source d'événement pour laquelle l'écouteur d'événements a des événements activés.</summary>
      <param name="eventData">Arguments d'événement qui décrivent cet événement.</param>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventOpcode">
      <summary>Définit les codes d'opération standard que la source d'événement joint aux événements.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.DataCollectionStart">
      <summary>Événement de démarrage d'une collecte de données de trace.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.DataCollectionStop">
      <summary>Événement d'arrêt d'une collecte de données de trace.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Extension">
      <summary>Evénement d'extension.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Info">
      <summary>Événement d'informations.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Receive">
      <summary>Événement qui est publié lorsqu'une activité dans une application reçoit des données.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Reply">
      <summary>Événement qui est publié après qu'une activité dans une application a répondu à un événement.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Resume">
      <summary>Événement qui est publié après qu'une activité dans une application a repris à partir d'un état suspendu. L'événement doit suivre un événement portant le code d'opération <see cref="F:System.Diagnostics.Tracing.EventOpcode.Suspend" /> .</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Send">
      <summary>Événement qui est publié lorsqu'une activité dans une application transfère des données ou des ressources système à une autre activité.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Start">
      <summary>Événement qui est publié lorsqu'une application démarre une nouvelle transaction ou activité. Ce code d'opération peut être incorporé à une autre transaction ou activité lorsque plusieurs événements comprenant le code <see cref="F:System.Diagnostics.Tracing.EventOpcode.Start" /> se suivent sans événement intervenant comprenant le code <see cref="F:System.Diagnostics.Tracing.EventOpcode.Stop" />.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Stop">
      <summary>Événement qui est publié lorsqu'une activité ou une transaction dans une application se termine. L'événement correspond au dernier événement non apparié qui porte le code d'opération <see cref="F:System.Diagnostics.Tracing.EventOpcode.Start" /> .</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Suspend">
      <summary>Événement qui est publié lorsqu'une activité dans une application est suspendue.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSource">
      <summary>Permet de créer des événements pour le suivi d'événements pour Windows (ETW).</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.Diagnostics.Tracing.EventSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)">
      <summary>Crée une instance de la classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> et spécifie si une exception doit être levée lorsqu'une erreur se produit dans le code Windows sous-jacent.</summary>
      <param name="throwOnEventWriteErrors">true pour lever une exception lorsqu'une erreur est détectée dans le code Windows sous-jacent ; sinon, false.</param>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
      <summary>Obtient les exceptions levées lors de la construction de la source d'événement.</summary>
      <returns>L'exception a été levée lors de la construction de la source d'événement, ou null si aucune exception n'est levée.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId">
      <summary>Obtient l'ID d'activité du thread actif.</summary>
      <returns>ID d'activité du thread actif.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Dispose">
      <summary>Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Diagnostics.Tracing.EventSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par la classe <see cref="T:System.Diagnostics.Tracing.EventSource" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">true pour libérer les ressources managées et non managées ; false pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Finalize">
      <summary>Permet à l'objet <see cref="T:System.Diagnostics.Tracing.EventSource" /> de tenter de libérer des ressources et d'effectuer d'autres opérations de nettoyage avant que l'objet ne soit récupéré par l'opération de garbage collection.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
      <summary>Retourne une chaîne du manifeste XML associée à la source d'événement actuelle.</summary>
      <returns>Chaîne de données XML.</returns>
      <param name="eventSourceType">Type de l'événement source.</param>
      <param name="assemblyPathToIncludeInManifest">Chemin d'accès au fichier .dll à inclure dans le manifeste.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)">
      <summary>Obtient l'identificateur unique de cette implémentation de la source d'événement.</summary>
      <returns>Identificateur unique pour ce type de source d'événement.</returns>
      <param name="eventSourceType">Type de l'événement source.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
      <summary>Obtient le nom convivial de la source d'événements.</summary>
      <returns>Nom convivial de la source d'événements. La valeur par défaut est le nom simple de la classe.</returns>
      <param name="eventSourceType">Type de l'événement source.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GetSources">
      <summary>Obtient un instantané de toutes les sources d'événements pour le domaine d'application.</summary>
      <returns>Énumération de toutes les sources d'événement dans le domaine d'application.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.Guid">
      <summary>Identificateur unique de la source d'événement.</summary>
      <returns>Identificateur unique de la source d'événement.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.IsEnabled">
      <summary>Détermine si la source d'événements actuelle est activée.</summary>
      <returns>true si la source d'événement actuelle est activée ; sinon, false.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
      <summary>Détermine si la source d'événements en cours qui a le niveau et le mot clé spécifié est activée.</summary>
      <returns>true si source d'événements est activée ; sinon, false.</returns>
      <param name="level">Niveau de la source d'événement.</param>
      <param name="keywords">Mot clé de l'événement source.</param>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.Name">
      <summary>Nom convivial de la classe dérivé de la source d'événements.</summary>
      <returns>Nom convivial de la classe dérivée.  La valeur par défaut est le nom simple de la classe.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)">
      <summary>Appelée lorsque la source d'événements actuelle est mise à jour par le contrôleur.</summary>
      <param name="command">Arguments pour l'événement.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Envoie une commande à une source d'événement spécifiée.</summary>
      <param name="eventSource">Source d'événements à laquelle envoyer la commande.</param>
      <param name="command">Commande d'événement à envoyer.</param>
      <param name="commandArguments">Arguments pour la command d'événement.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
      <summary>Définit l'ID d'activité du thread actif.</summary>
      <param name="activityId">Nouvel ID d'activité du thread actif, ou <see cref="F:System.Guid.Empty" /> pour indiquer que le travail sur le thread actif n'est associé à aucune activité.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
      <summary>Définit l'ID d'activité sur le thread actif et retourne l'ID de l'activité précédente.</summary>
      <param name="activityId">Nouvel ID d'activité du thread actif, ou <see cref="F:System.Guid.Empty" /> pour indiquer que le travail sur le thread actif n'est associé à aucune activité.</param>
      <param name="oldActivityThatWillContinue">Lorsque cette méthode est retournée, contient l'ID de l'activité précédente sur le thread actif.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.ToString">
      <summary>Obtient une représentation sous forme de chaîne de l'instance de source d'événement actuelle.</summary>
      <returns>Nom et identificateur unique qui identifient la source d'événements actuelle.</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
      <summary>Écrit un événement à l'aide de l'identificateur d'événement fourni.</summary>
      <param name="eventId">Identificateur de l'événement. Cette valeur doit être supérieure à zéro.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
      <summary>Écrit un événement à l'aide de l'identificateur d'événement et de l'argument en entier d'une valeur de 32 octets fournis.</summary>
      <param name="eventId">Identificateur de l'événement. Cette valeur doit être supérieure à zéro.</param>
      <param name="arg1">Argument entier.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
      <summary>Écrit un événement à l'aide de l'identificateur d'événement et des arguments en entier d'une valeur de 32 octets fournis.</summary>
      <param name="eventId">Identificateur de l'événement. Cette valeur doit être supérieure à zéro.</param>
      <param name="arg1">Argument entier.</param>
      <param name="arg2">Argument entier.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Écrit un événement à l'aide de l'identificateur d'événement et des arguments en entier d'une valeur de 32 octets fournis.</summary>
      <param name="eventId">Identificateur de l'événement. Cette valeur doit être supérieure à zéro.</param>
      <param name="arg1">Argument entier.</param>
      <param name="arg2">Argument entier.</param>
      <param name="arg3">Argument entier.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
      <summary>Écrit un événement à l'aide de l'identificateur d'événement fourni et de l'argument en entier d'une valeur de 64 octets.</summary>
      <param name="eventId">Identificateur de l'événement. Cette valeur doit être supérieure à zéro.</param>
      <param name="arg1">Argument entier 64 bits.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
      <summary>Écrit un événement à l'aide de l'identificateur d'événement et des arguments d'une valeur de 64 octets fournis.</summary>
      <param name="eventId">Identificateur de l'événement. Cette valeur doit être supérieure à zéro.</param>
      <param name="arg1">Argument entier 64 bits.</param>
      <param name="arg2">Argument entier 64 bits.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
      <summary>Écrit un événement à l'aide de l'identificateur d'événement et des arguments d'une valeur de 64 octets fournis.</summary>
      <param name="eventId">Identificateur de l'événement. Cette valeur doit être supérieure à zéro.</param>
      <param name="arg1">Argument entier 64 bits.</param>
      <param name="arg2">Argument entier 64 bits.</param>
      <param name="arg3">Argument entier 64 bits.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
      <summary>Écrit un événement à l'aide de l'identificateur d'événement et du tableau d'arguments fournis.</summary>
      <param name="eventId">Identificateur de l'événement. Cette valeur doit être supérieure à zéro.</param>
      <param name="args">Tableau d'objets.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
      <summary>Écrit un événement à l'aide de l'identificateur d'événement et de l'argument de chaîne fournis.</summary>
      <param name="eventId">Identificateur de l'événement. Cette valeur doit être supérieure à zéro.</param>
      <param name="arg1">Argument de chaîne.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
      <summary>Écrit un événement à l'aide de l'identificateur d'événement et d'arguments fournis.</summary>
      <param name="eventId">Identificateur de l'événement. Cette valeur doit être supérieure à zéro.</param>
      <param name="arg1">Argument de chaîne.</param>
      <param name="arg2">Argument entier 32 bits.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Écrit un événement à l'aide de l'identificateur d'événement et d'arguments fournis.</summary>
      <param name="eventId">Identificateur de l'événement. Cette valeur doit être supérieure à zéro.</param>
      <param name="arg1">Argument de chaîne.</param>
      <param name="arg2">Argument entier 32 bits.</param>
      <param name="arg3">Argument entier 32 bits.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
      <summary>Écrit un événement à l'aide de l'identificateur d'événement et d'arguments fournis.</summary>
      <param name="eventId">Identificateur de l'événement. Cette valeur doit être supérieure à zéro.</param>
      <param name="arg1">Argument de chaîne.</param>
      <param name="arg2">Argument entier 64 bits.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
      <summary>Écrit un événement à l'aide de l'identificateur d'événement et des arguments de chaîne fournis.</summary>
      <param name="eventId">Identificateur de l'événement. Cette valeur doit être supérieure à zéro.</param>
      <param name="arg1">Argument de chaîne.</param>
      <param name="arg2">Argument de chaîne.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
      <summary>Écrit un événement à l'aide de l'identificateur d'événement et des arguments de chaîne fournis.</summary>
      <param name="eventId">Identificateur de l'événement. Cette valeur doit être supérieure à zéro.</param>
      <param name="arg1">Argument de chaîne.</param>
      <param name="arg2">Argument de chaîne.</param>
      <param name="arg3">Argument de chaîne.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
      <summary>Crée une surcharge <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> à l'aide de l'identificateur d'événement et des données d'événement fournis.</summary>
      <param name="eventId">Identificateur de l'événement.</param>
      <param name="eventDataCount">Nombre d'éléments de données d'événement.</param>
      <param name="data">Structure contenant les données d'événement.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
      <summary>Écrit un événement qui indique que l'activité en cours est liée à une autre activité.</summary>
      <param name="eventId">Identificateur qui identifie de manière unique cet événement au sein de l'objet <see cref="T:System.Diagnostics.Tracing.EventSource" />.</param>
      <param name="childActivityID">Identificateur d'activité associé.</param>
      <param name="args">Tableau d'objets qui contient les données relatives à l'événement.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
      <summary>Écrit un événement qui indique que l'activité en cours est liée à une autre activité.</summary>
      <param name="eventId">Identificateur qui identifie de manière unique cet événement au sein de l'objet <see cref="T:System.Diagnostics.Tracing.EventSource" />.</param>
      <param name="childActivityID">Pointeur vers le GUID de l'ID d'activité enfant.</param>
      <param name="eventDataCount">Nombre d'éléments dans le champ <paramref name="data" />.</param>
      <param name="data">Pointeur vers le premier élément dans le champ de données de l'événement.</param>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSource.EventData">
      <summary>Fournit les données d'événement pour créer des surcharges <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> rapides à l'aide de la méthode <see cref="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" /> .</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.EventData.DataPointer">
      <summary>Obtient ou définit le pointeur vers les données de la nouvelle surcharge <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" />.</summary>
      <returns>Pointeur vers les données.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.EventData.Size">
      <summary>Obtient ou définit le nombre d'éléments de charge dans la nouvelle surcharge <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" />.</summary>
      <returns>Nombre d'éléments de charge utile dans la nouvelle surcharge.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceAttribute">
      <summary>Permet au nom de suivi d'événements pour Windows (ETW) d'être défini indépendamment du nom de la classe d'événement.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceAttribute.Guid">
      <summary>Obtient ou définit l'identificateur source d'événement.</summary>
      <returns>Identificateur source de l'événement.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceAttribute.LocalizationResources">
      <summary>Obtient ou définit le nom du fichier de ressources de localisation.</summary>
      <returns>Nom du fichier de ressources de localisation, ou null si le fichier de ressources de localisation n'existe pas.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceAttribute.Name">
      <summary>Obtient ou définit le nom de la source d'événement.</summary>
      <returns>Nom de la source d'événements.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceException">
      <summary>Exception levée lorsqu'une erreur se produit pendant le suivi d'événements pour Windows (ETW).</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Tracing.EventSourceException" />.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Tracing.EventSourceException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message décrivant l'erreur.</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Tracing.EventSourceException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message d'erreur indiquant la raison de l'exception.</param>
      <param name="innerException">L'exception qui est la cause de l'exception actuelle ou null si aucune exception interne n'est spécifiée.</param>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventTask">
      <summary>Définit les tâches qui s'appliquent aux événements.</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventTask.None">
      <summary>Tâche non définie.</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventWrittenEventArgs">
      <summary>Fournit des données pour le rappel <see cref="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.ActivityId">
      <summary>Obtient l'ID d'activité du thread sur lequel l'événement a été écrit.</summary>
      <returns>ID d'activité du thread sur lequel l'événement a été écrit.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventId">
      <summary>Obtient l'identificateur de l'événement.</summary>
      <returns>Identificateur de l'événement.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventSource">
      <summary>Obtient l'objet source de l'événement.</summary>
      <returns>Objet source d'événement.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Keywords">
      <summary>Obtient les mots clés de l'événement.</summary>
      <returns>Mots clés de l'événement.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Level">
      <summary>Obtient le niveau de l'événement.</summary>
      <returns>Niveau de l'événement.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Message">
      <summary>Obtient le message pour l'événement.</summary>
      <returns>Message pour l'événement.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Opcode">
      <summary>Obtient le code d'opération pour l'événement.</summary>
      <returns>Code d'opération de l'événement.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Payload">
      <summary>Obtient la charge utile de l'événement.</summary>
      <returns>Charge utile pour l'événement.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.RelatedActivityId">
      <summary>Obtient l'identificateur d'une activité liée à l'activité représentée par l'instance actuelle.</summary>
      <returns>Identificateur de l'activité connexe, ou <see cref="F:System.Guid.Empty" /> s'il n'existe aucune activité connexe.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Task">
      <summary>Obtient la tâche pour l'événement.</summary>
      <returns>Tâche de l'événement.</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Version">
      <summary>Obtient la version de l'événement.</summary>
      <returns>Version de l'événement.</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.NonEventAttribute">
      <summary>Identifie une méthode qui ne génère pas d'événement.</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.NonEventAttribute.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.Diagnostics.Tracing.NonEventAttribute" />.</summary>
    </member>
  </members>
</doc>