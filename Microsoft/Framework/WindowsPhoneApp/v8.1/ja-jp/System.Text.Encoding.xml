<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Text.Encoding</name>
  </assembly>
  <members>
    <member name="T:System.Text.Decoder">
      <summary>エンコード済みバイト シーケンスを文字のセットに変換します。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Decoder.#ctor">
      <summary>
        <see cref="T:System.Text.Decoder" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
      <summary>エンコード済みバイト配列を UTF-16 エンコード文字に変換し、その結果を文字列配列に格納します。</summary>
      <param name="bytes">変換するバイト配列。</param>
      <param name="byteIndex">
        <paramref name="bytes" /> の変換する最初の要素。</param>
      <param name="byteCount">変換する <paramref name="bytes" /> の要素の数。</param>
      <param name="chars">変換後の文字を格納する配列。</param>
      <param name="charIndex">データを格納する <paramref name="chars" /> の最初の要素。</param>
      <param name="charCount">変換に使用する <paramref name="chars" /> 内の最大要素数。</param>
      <param name="flush">これ以上データの変換を行わないことを示す場合は true。それ以外の場合は false。</param>
      <param name="bytesUsed">このメソッドから制御が戻るときに、変換に使用されたバイト数を格納します。 このパラメーターは初期化せずに渡されます。</param>
      <param name="charsUsed">このメソッドから制御が戻るときに、<paramref name="chars" /> に格納されている変換の結果生成された文字数を格納します。 このパラメーターは初期化せずに渡されます。</param>
      <param name="completed">このメソッドから制御が戻るときに、<paramref name="byteCount" /> で指定したすべての文字が変換された場合は true です。それ以外の場合は false です。 このパラメーターは初期化せずに渡されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> または <paramref name="bytes" /> が null  (Nothing) です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" />、<paramref name="charCount" />、<paramref name="byteIndex" />、または <paramref name="byteCount" /> が 0 未満です。 または <paramref name="chars" /> の長さ。  -<paramref name="charIndex" /> が <paramref name="charCount" /> より小さい。 または <paramref name="bytes" /> の長さ。  -<paramref name="byteIndex" /> が <paramref name="byteCount" /> より小さい。</exception>
      <exception cref="T:System.ArgumentException">出力バッファーの容量が小さいために変換済み出力を格納できません。 出力バッファーは、<see cref="Overload:System.Text.Decoder.GetCharCount" /> メソッドで示されるサイズ以上にする必要があります。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Decoder.Fallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary>派生クラスでオーバーライドされた場合、指定したバイト配列に格納されているバイト シーケンスをデコードすることによって生成される文字数を計算します。</summary>
      <returns>指定したバイト シーケンス、および内部バッファー内のバイトをデコードすることによって生成される文字数。</returns>
      <param name="bytes">デコード対象のバイト シーケンスが格納されたバイト配列。</param>
      <param name="index">デコードする最初のバイトのインデックス。</param>
      <param name="count">デコードするバイト数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> が null  (Nothing) です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> または <paramref name="count" /> が 0 未満です。 または <paramref name="index" /> および <paramref name="count" /> が <paramref name="bytes" /> 内の有効な範囲を示していません。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Decoder.Fallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>派生クラスでオーバーライドされた場合、指定したバイト配列に格納されているバイト シーケンスをデコードすることによって生成される文字数を計算します。 パラメーターでは、計算後にデコーダーの内部状態をクリアするかどうかを示します。</summary>
      <returns>指定したバイト シーケンス、および内部バッファー内のバイトをデコードすることによって生成される文字数。</returns>
      <param name="bytes">デコード対象のバイト シーケンスが格納されたバイト配列。</param>
      <param name="index">デコードする最初のバイトのインデックス。</param>
      <param name="count">デコードするバイト数。</param>
      <param name="flush">計算後にエンコーダーの内部状態をクリアするようシミュレートする場合は true。それ以外の場合は false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> が null  (Nothing) です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> または <paramref name="count" /> が 0 未満です。 または <paramref name="index" /> および <paramref name="count" /> が <paramref name="bytes" /> 内の有効な範囲を示していません。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Decoder.Fallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary>派生クラスでオーバーライドされた場合、指定したバイト配列に格納されているバイト シーケンス、および内部バッファー内のバイトを、指定した文字配列にデコードします。</summary>
      <returns>
        <paramref name="chars" /> に書き込まれた実際の文字数。</returns>
      <param name="bytes">デコード対象のバイト シーケンスが格納されたバイト配列。</param>
      <param name="byteIndex">デコードする最初のバイトのインデックス。</param>
      <param name="byteCount">デコードするバイト数。</param>
      <param name="chars">結果の文字のセットを格納する文字配列。</param>
      <param name="charIndex">結果の文字のセットを書き込む開始位置のインデックス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> が null  (Nothing) です。 または <paramref name="chars" /> が null  (Nothing) です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="byteIndex" />、<paramref name="byteCount" />、または <paramref name="charIndex" /> が 0 未満です。 または <paramref name="byteindex" /> および <paramref name="byteCount" /> が <paramref name="bytes" /> 内の有効な範囲を示していません。 または <paramref name="charIndex" /> が <paramref name="chars" /> の有効なインデックスではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="chars" /> には、<paramref name="charIndex" /> から配列の末尾までに十分なサイズがなく、結果の文字を格納できません。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Decoder.Fallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
      <summary>派生クラスでオーバーライドされた場合、指定したバイト配列に格納されているバイト シーケンス、および内部バッファー内のバイトを、指定した文字配列にデコードします。 パラメーターでは、変換後にデコーダーの内部状態をクリアするかどうかを示します。</summary>
      <returns>
        <paramref name="chars" /> パラメーターに書き込まれた実際の文字数。</returns>
      <param name="bytes">デコード対象のバイト シーケンスが格納されたバイト配列。</param>
      <param name="byteIndex">デコードする最初のバイトのインデックス。</param>
      <param name="byteCount">デコードするバイト数。</param>
      <param name="chars">結果の文字のセットを格納する文字配列。</param>
      <param name="charIndex">結果の文字のセットを書き込む開始位置のインデックス。</param>
      <param name="flush">変換後にデコーダーの内部状態をクリアする場合は true。それ以外の場合は false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> が null  (Nothing) です。 または <paramref name="chars" /> が null  (Nothing) です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="byteIndex" />、<paramref name="byteCount" />、または <paramref name="charIndex" /> が 0 未満です。 または <paramref name="byteindex" /> および <paramref name="byteCount" /> が <paramref name="bytes" /> 内の有効な範囲を示していません。 または <paramref name="charIndex" /> が <paramref name="chars" /> の有効なインデックスではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="chars" /> には、<paramref name="charIndex" /> から配列の末尾までに十分なサイズがなく、結果の文字を格納できません。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Decoder.Fallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Decoder.Reset">
      <summary>派生クラスでオーバーライドされた場合、デコーダーを初期状態に戻します。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Text.DecoderFallbackException">
      <summary>デコーダー フォールバック操作が失敗したときにスローされる例外。 このクラスは継承できません。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.DecoderFallbackException.#ctor">
      <summary>
        <see cref="T:System.Text.DecoderFallbackException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Text.DecoderFallbackException.#ctor(System.String)">
      <summary>
        <see cref="T:System.Text.DecoderFallbackException" /> クラスの新しいインスタンスを初期化します。 パラメーターでは、エラー メッセージを指定します。</summary>
      <param name="message">エラー メッセージ。</param>
    </member>
    <member name="M:System.Text.DecoderFallbackException.#ctor(System.String,System.Byte[],System.Int32)">
      <summary>
        <see cref="T:System.Text.DecoderFallbackException" /> クラスの新しいインスタンスを初期化します。 パラメーターでは、エラー メッセージ、デコードするバイト配列、およびデコードできないバイトのインデックスを指定します。</summary>
      <param name="message">エラー メッセージ。</param>
      <param name="bytesUnknown">入力バイト配列。</param>
      <param name="index">デコードできないバイトの <paramref name="bytesUnknown" /> におけるインデックス位置。</param>
    </member>
    <member name="M:System.Text.DecoderFallbackException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="T:System.Text.DecoderFallbackException" /> クラスの新しいインスタンスを初期化します。 パラメーターでは、エラー メッセージと、この例外の原因となった内部例外を指定します。</summary>
      <param name="message">エラー メッセージ。</param>
      <param name="innerException">この例外の原因となった例外。</param>
    </member>
    <member name="P:System.Text.DecoderFallbackException.BytesUnknown">
      <summary>例外の原因となった入力バイト シーケンスを取得します。</summary>
      <returns>デコードできない入力バイト配列。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Text.DecoderFallbackException.Index">
      <summary>例外の原因となったバイトの入力バイト シーケンスにおけるインデックス位置を取得します。</summary>
      <returns>デコードできないバイトの入力バイト配列におけるインデックス位置。 インデックス位置は 0 から始まります。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Text.Encoder">
      <summary>文字のセットをバイト シーケンスに変換します。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoder.#ctor">
      <summary>
        <see cref="T:System.Text.Encoder" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
      <summary>配列に格納された Unicode 文字をエンコード済みバイト シーケンスに変換し、その結果をバイト配列に格納します。</summary>
      <param name="chars">変換する文字配列。</param>
      <param name="charIndex">
        <paramref name="chars" /> の変換する最初の要素。</param>
      <param name="charCount">変換する <paramref name="chars" /> の要素の数。</param>
      <param name="bytes">変換後のバイトを格納する配列。</param>
      <param name="byteIndex">データを格納する <paramref name="bytes" /> の最初の要素。</param>
      <param name="byteCount">変換に使用する <paramref name="bytes" /> 内の最大要素数。</param>
      <param name="flush">これ以上データの変換を行わないことを示す場合は true。それ以外の場合は false。</param>
      <param name="charsUsed">このメソッドから制御が戻るときに、<paramref name="chars" /> 内で変換に使用された文字数を格納します。 このパラメーターは初期化せずに渡されます。</param>
      <param name="bytesUsed">このメソッドから制御が戻るときに、変換の結果生成されたバイト数を格納します。 このパラメーターは初期化せずに渡されます。</param>
      <param name="completed">このメソッドから制御が戻るときに、<paramref name="charCount" /> で指定したすべての文字が変換された場合は true を格納します。それ以外の場合は false を格納します。 このパラメーターは初期化せずに渡されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> または <paramref name="bytes" /> が null  (Nothing) です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" />、<paramref name="charCount" />、<paramref name="byteIndex" />、または <paramref name="byteCount" /> が 0 未満です。 または <paramref name="chars" /> の長さ。  -<paramref name="charIndex" /> が <paramref name="charCount" /> より小さい。 または <paramref name="bytes" /> の長さ。  -<paramref name="byteIndex" /> が <paramref name="byteCount" /> より小さい。</exception>
      <exception cref="T:System.ArgumentException">出力バッファーの容量が小さいために変換済み出力を格納できません。 出力バッファーは、<see cref="Overload:System.Text.Encoder.GetByteCount" /> メソッドで示されるサイズ以上にする必要があります。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
      <summary>派生クラスでオーバーライドされた場合、指定した文字配列に格納されている文字のセットをエンコードすることによって生成されるバイト数を計算します。 パラメーターでは、計算後にエンコーダーの内部状態をクリアするかどうかを示します。</summary>
      <returns>指定した文字、および内部バッファー内の文字をエンコードすることによって生成されるバイト数。</returns>
      <param name="chars">エンコード対象の文字のセットを格納している文字配列。</param>
      <param name="index">エンコードする最初の文字のインデックス。</param>
      <param name="count">エンコードする文字数。</param>
      <param name="flush">計算後にエンコーダーの内部状態をクリアするようシミュレートする場合は true。それ以外の場合は false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> は null なので、</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> または <paramref name="count" /> が 0 未満です。 または <paramref name="index" /> および <paramref name="count" /> が <paramref name="chars" /> 内の有効な範囲を示していません。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
      <summary>派生クラスでオーバーライドされた場合、指定した文字配列に格納されている文字のセット、および内部バッファー内の文字を、指定したバイト配列にエンコードします。 パラメーターでは、変換後にエンコーダーの内部状態をクリアするかどうかを示します。</summary>
      <returns>
        <paramref name="bytes" /> に書き込まれた実際のバイト数。</returns>
      <param name="chars">エンコード対象の文字のセットを格納している文字配列。</param>
      <param name="charIndex">エンコードする最初の文字のインデックス。</param>
      <param name="charCount">エンコードする文字数。</param>
      <param name="bytes">結果のバイト シーケンスを格納するバイト配列。</param>
      <param name="byteIndex">結果のバイト シーケンスを書き込む開始位置のインデックス。</param>
      <param name="flush">変換後にエンコーダーの内部状態をクリアする場合は true。それ以外の場合は false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> が null  (Nothing) です。 または <paramref name="bytes" /> が null  (Nothing) です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" />、<paramref name="charCount" />、または <paramref name="byteIndex" /> が 0 未満です。 または <paramref name="charIndex" /> および <paramref name="charCount" /> が <paramref name="chars" /> 内の有効な範囲を示していません。 または <paramref name="byteIndex" /> が <paramref name="bytes" /> の有効なインデックスではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="bytes" /> には、<paramref name="byteIndex" /> から配列の末尾までに十分なサイズがなく、結果のバイトを格納できません。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Text.EncoderFallbackException">
      <summary>エンコーダー フォールバック操作が失敗したときにスローされる例外。 このクラスは継承できません。</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.EncoderFallbackException.#ctor">
      <summary>
        <see cref="T:System.Text.EncoderFallbackException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Text.EncoderFallbackException.#ctor(System.String)">
      <summary>
        <see cref="T:System.Text.EncoderFallbackException" /> クラスの新しいインスタンスを初期化します。 パラメーターでは、エラー メッセージを指定します。</summary>
      <param name="message">エラー メッセージ。</param>
    </member>
    <member name="M:System.Text.EncoderFallbackException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="T:System.Text.EncoderFallbackException" /> クラスの新しいインスタンスを初期化します。 パラメーターでは、エラー メッセージと、この例外の原因となった内部例外を指定します。</summary>
      <param name="message">エラー メッセージ。</param>
      <param name="innerException">この例外の原因となった例外。</param>
    </member>
    <member name="P:System.Text.EncoderFallbackException.CharUnknown">
      <summary>例外の原因となった入力文字を取得します。</summary>
      <returns>エンコードできない文字。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Text.EncoderFallbackException.CharUnknownHigh">
      <summary>例外の原因となったサロゲート ペアの上位サロゲートを取得します。</summary>
      <returns>エンコードできないサロゲート ペアの上位サロゲート。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Text.EncoderFallbackException.CharUnknownLow">
      <summary>例外の原因となったサロゲート ペアの下位サロゲートを取得します。</summary>
      <returns>エンコードできないサロゲート ペアの下位サロゲート。</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Text.EncoderFallbackException.Index">
      <summary>例外の原因となった文字の入力バッファーにおけるインデックス位置を取得します。</summary>
      <returns>エンコードできない入力文字の入力バッファーにおけるインデックス位置。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Text.Encoding">
      <summary>文字エンコーディングを表します。</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.#ctor">
      <summary>
        <see cref="T:System.Text.Encoding" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Text.Encoding.BigEndianUnicode">
      <summary>ビッグ エンディアンのバイト順を使用する UTF-16 形式のエンコーディングを取得します。</summary>
      <returns>ビッグ エンディアンのバイト順を使用する UTF-16 形式のエンコーディング オブジェクト。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])">
      <summary>バイト配列全体を、あるエンコーディングから別のエンコーディングに変換します。</summary>
      <returns>
        <paramref name="bytes" /> を <paramref name="srcEncoding" /> から <paramref name="dstEncoding" /> へ変換した結果を格納する <see cref="T:System.Byte" /> 型の配列。</returns>
      <param name="srcEncoding">
        <paramref name="bytes" /> のエンコーディング形式。</param>
      <param name="dstEncoding">変換後のエンコーディング形式。</param>
      <param name="bytes">変換対象のバイト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="srcEncoding" /> は null なので、 または <paramref name="dstEncoding" /> は null なので、 または <paramref name="bytes" /> は null なので、</exception>
      <exception cref="T:System.Text.DecoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および srcEncoding<see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および dstEncoding<see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)">
      <summary>バイト配列内のバイトの範囲を、あるエンコーディングから別のエンコーディングに変換します。</summary>
      <returns>
        <paramref name="bytes" /> に含まれる特定の範囲のバイトを <paramref name="srcEncoding" /> から <paramref name="dstEncoding" /> に変換した結果が格納されている <see cref="T:System.Byte" /> 型の配列。</returns>
      <param name="srcEncoding">変換前の配列 <paramref name="bytes" /> のエンコーディング。</param>
      <param name="dstEncoding">変換後の配列のエンコーディング。</param>
      <param name="bytes">変換対象のバイト配列。</param>
      <param name="index">変換対象の <paramref name="bytes" /> の最初の要素を示すインデックス。</param>
      <param name="count">変換するバイト数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="srcEncoding" /> は null なので、 または <paramref name="dstEncoding" /> は null なので、 または <paramref name="bytes" /> は null なので、</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> および <paramref name="count" /> がバイト配列内の有効範囲を指定していません。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および srcEncoding<see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および dstEncoding<see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> が、現在のインスタンスと等しいかどうかを判断します。</summary>
      <returns>
        <paramref name="value" /> が <see cref="T:System.Text.Encoding" /> のインスタンスで、現在のインスタンスと等しい場合は true。それ以外の場合は false。</returns>
      <param name="value">現在のインスタンスと比較する <see cref="T:System.Object" />。</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetByteCount(System.Char[])">
      <summary>派生クラスでオーバーライドされた場合、指定した文字配列に格納されているすべての文字をエンコードすることによって生成されるバイト数を計算します。</summary>
      <returns>指定した文字配列に格納されているすべての文字をエンコードすることによって生成されるバイト数。</returns>
      <param name="chars">エンコード対象の文字を格納している文字配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> は null なので、</exception>
      <exception cref="T:System.Text.EncoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary>派生クラスでオーバーライドされた場合、指定した文字配列に格納されている文字のセットをエンコードすることによって生成されるバイト数を計算します。</summary>
      <returns>指定した文字をエンコードすることによって生成されるバイト数。</returns>
      <param name="chars">エンコード対象の文字のセットを格納している文字配列。</param>
      <param name="index">エンコードする最初の文字のインデックス。</param>
      <param name="count">エンコードする文字数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> は null なので、</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> または <paramref name="count" /> が 0 未満です。 または <paramref name="index" /> および <paramref name="count" /> が <paramref name="chars" /> 内の有効な範囲を示していません。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetByteCount(System.String)">
      <summary>派生クラスでオーバーライドされた場合、指定した文字列に含まれる文字をエンコードすることによって生成されるバイト数を計算します。</summary>
      <returns>指定した文字をエンコードすることによって生成されるバイト数。</returns>
      <param name="s">エンコード対象の文字のセットを格納している文字列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> は null なので、</exception>
      <exception cref="T:System.Text.EncoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetBytes(System.Char[])">
      <summary>派生クラスでオーバーライドされた場合、指定した文字配列に格納されているすべての文字をバイト シーケンスにエンコードします。</summary>
      <returns>指定した文字のセットをエンコードした結果を格納しているバイト配列。</returns>
      <param name="chars">エンコード対象の文字を格納している文字配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> は null なので、</exception>
      <exception cref="T:System.Text.EncoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)">
      <summary>派生クラスでオーバーライドされた場合、指定した文字配列に格納されている文字のセットをバイト シーケンスにエンコードします。</summary>
      <returns>指定した文字のセットをエンコードした結果を格納しているバイト配列。</returns>
      <param name="chars">エンコード対象の文字のセットを格納している文字配列。</param>
      <param name="index">エンコードする最初の文字のインデックス。</param>
      <param name="count">エンコードする文字数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> は null なので、</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> または <paramref name="count" /> が 0 未満です。 または <paramref name="index" /> および <paramref name="count" /> が <paramref name="chars" /> 内の有効な範囲を示していません。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>派生クラスでオーバーライドされた場合、指定した文字配列に格納されている文字のセットを、指定したバイト配列にエンコードします。</summary>
      <returns>
        <paramref name="bytes" /> に書き込まれた実際のバイト数。</returns>
      <param name="chars">エンコード対象の文字のセットを格納している文字配列。</param>
      <param name="charIndex">エンコードする最初の文字のインデックス。</param>
      <param name="charCount">エンコードする文字数。</param>
      <param name="bytes">結果のバイト シーケンスを格納するバイト配列。</param>
      <param name="byteIndex">結果のバイト シーケンスを書き込む開始位置のインデックス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> は null なので、 または <paramref name="bytes" /> は null なので、</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" />、<paramref name="charCount" />、または <paramref name="byteIndex" /> が 0 未満です。 または <paramref name="charIndex" /> および <paramref name="charCount" /> が <paramref name="chars" /> 内の有効な範囲を示していません。 または <paramref name="byteIndex" /> が <paramref name="bytes" /> の有効なインデックスではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="bytes" /> には、<paramref name="byteIndex" /> から配列の末尾までに十分なサイズがなく、結果のバイトを格納できません。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetBytes(System.String)">
      <summary>派生クラスでオーバーライドされた場合、指定した文字列に含まれるすべての文字をバイト シーケンスにエンコードします。</summary>
      <returns>指定した文字のセットをエンコードした結果を格納しているバイト配列。</returns>
      <param name="s">エンコードする文字を含む文字列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> は null なので、</exception>
      <exception cref="T:System.Text.EncoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>派生クラスでオーバーライドされた場合、指定した文字列に含まれる文字のセットを、指定したバイト配列にエンコードします。</summary>
      <returns>
        <paramref name="bytes" /> に書き込まれた実際のバイト数。</returns>
      <param name="s">エンコード対象の文字のセットを格納している文字列。</param>
      <param name="charIndex">エンコードする最初の文字のインデックス。</param>
      <param name="charCount">エンコードする文字数。</param>
      <param name="bytes">結果のバイト シーケンスを格納するバイト配列。</param>
      <param name="byteIndex">結果のバイト シーケンスを書き込む開始位置のインデックス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> は null なので、 または <paramref name="bytes" /> は null なので、</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charIndex" />、<paramref name="charCount" />、または <paramref name="byteIndex" /> が 0 未満です。 または <paramref name="charIndex" /> および <paramref name="charCount" /> が <paramref name="chars" /> 内の有効な範囲を示していません。 または <paramref name="byteIndex" /> が <paramref name="bytes" /> の有効なインデックスではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="bytes" /> には、<paramref name="byteIndex" /> から配列の末尾までに十分なサイズがなく、結果のバイトを格納できません。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetCharCount(System.Byte[])">
      <summary>派生クラスでオーバーライドされた場合、指定したバイト配列に格納されているすべてのバイトをデコードすることによって生成される文字数を計算します。</summary>
      <returns>指定したバイト シーケンスをデコードすることによって生成される文字数。</returns>
      <param name="bytes">デコード対象のバイト シーケンスが格納されたバイト配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> は null なので、</exception>
      <exception cref="T:System.Text.DecoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary>派生クラスでオーバーライドされた場合、指定したバイト配列に格納されているバイト シーケンスをデコードすることによって生成される文字数を計算します。</summary>
      <returns>指定したバイト シーケンスをデコードすることによって生成される文字数。</returns>
      <param name="bytes">デコード対象のバイト シーケンスが格納されたバイト配列。</param>
      <param name="index">デコードする最初のバイトのインデックス。</param>
      <param name="count">デコードするバイト数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> は null なので、</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> または <paramref name="count" /> が 0 未満です。 または <paramref name="index" /> および <paramref name="count" /> が <paramref name="bytes" /> 内の有効な範囲を示していません。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetChars(System.Byte[])">
      <summary>派生クラスでオーバーライドされた場合、指定したバイト配列に格納されているすべてのバイトを文字のセットにデコードします。</summary>
      <returns>指定したバイト シーケンスのデコード結果が格納された文字配列。</returns>
      <param name="bytes">デコード対象のバイト シーケンスが格納されたバイト配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> は null なので、</exception>
      <exception cref="T:System.Text.DecoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)">
      <summary>派生クラスでオーバーライドされた場合、指定したバイト配列に格納されているバイト シーケンスを文字のセットにデコードします。</summary>
      <returns>指定したバイト シーケンスのデコード結果が格納された文字配列。</returns>
      <param name="bytes">デコード対象のバイト シーケンスが格納されたバイト配列。</param>
      <param name="index">デコードする最初のバイトのインデックス。</param>
      <param name="count">デコードするバイト数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> は null なので、</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> または <paramref name="count" /> が 0 未満です。 または <paramref name="index" /> および <paramref name="count" /> が <paramref name="bytes" /> 内の有効な範囲を示していません。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary>派生クラスでオーバーライドされた場合、指定したバイト配列に格納されているバイト シーケンスを、指定した文字配列にデコードします。</summary>
      <returns>
        <paramref name="chars" /> に書き込まれた実際の文字数。</returns>
      <param name="bytes">デコード対象のバイト シーケンスが格納されたバイト配列。</param>
      <param name="byteIndex">デコードする最初のバイトのインデックス。</param>
      <param name="byteCount">デコードするバイト数。</param>
      <param name="chars">結果の文字のセットを格納する文字配列。</param>
      <param name="charIndex">結果の文字のセットを書き込む開始位置のインデックス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> は null なので、 または <paramref name="chars" /> は null なので、</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="byteIndex" />、<paramref name="byteCount" />、または <paramref name="charIndex" /> が 0 未満です。 または <paramref name="byteindex" /> および <paramref name="byteCount" /> が <paramref name="bytes" /> 内の有効な範囲を示していません。 または <paramref name="charIndex" /> が <paramref name="chars" /> の有効なインデックスではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="chars" /> には、<paramref name="charIndex" /> から配列の末尾までに十分なサイズがなく、結果の文字を格納できません。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetDecoder">
      <summary>派生クラスでオーバーライドされた場合、エンコード済みバイト シーケンスを文字シーケンスに変換するデコーダーを取得します。</summary>
      <returns>エンコード済みバイト シーケンスを文字シーケンスに変換する <see cref="T:System.Text.Decoder" />。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetEncoder">
      <summary>派生クラスでオーバーライドされた場合、Unicode 文字のシーケンスをエンコード済みバイト シーケンスに変換するエンコーダーを取得します。</summary>
      <returns>Unicode 文字のシーケンスをエンコード済みバイト シーケンスに変換する <see cref="T:System.Text.Encoder" />。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetEncoding(System.String)">
      <summary>指定したコード ページ名に関連付けられたエンコーディングを返します。</summary>
      <returns>指定したコード ページに関連付けられたエンコード。</returns>
      <param name="name">使用するエンコーディングのコード ページ名。 <see cref="P:System.Text.Encoding.WebName" /> プロパティが返す値はすべて有効です。 使用可能な値は、<see cref="T:System.Text.Encoding" /> クラスのトピックに記載されている表の、名前の列にリストされています。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> が有効なコード ページ名ではありません。 または <paramref name="name" /> が示すコード ページは基になるプラットフォームでサポートされていません。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetHashCode">
      <summary>現在のインスタンスのハッシュ コードを返します。</summary>
      <returns>現在のインスタンスのハッシュ コード。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetMaxByteCount(System.Int32)">
      <summary>派生クラスでオーバーライドされた場合、指定した文字数をエンコードすることによって生成される最大バイト数を計算します。</summary>
      <returns>指定した文字数をエンコードすることによって生成される最大バイト数。</returns>
      <param name="charCount">エンコードする文字数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charCount" /> が 0 未満です。</exception>
      <exception cref="T:System.Text.EncoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetMaxCharCount(System.Int32)">
      <summary>派生クラスでオーバーライドされた場合、指定したバイト数をデコードすることによって生成される最大文字数を計算します。</summary>
      <returns>指定したバイト数をデコードすることによって生成される最大文字数。</returns>
      <param name="byteCount">デコードするバイト数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="byteCount" /> が 0 未満です。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetPreamble">
      <summary>派生クラスでオーバーライドされた場合、使用するエンコーディングを指定するバイト シーケンスを返します。</summary>
      <returns>使用するエンコーディングを指定するバイト シーケンスを格納するバイト配列。 または プリアンブルが不要な場合は、長さ 0 のバイト配列。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary>派生クラスでオーバーライドされた場合、指定したバイト配列に格納されているバイト シーケンスを文字列にデコードします。</summary>
      <returns>指定したバイト シーケンスのデコード結果が格納されている文字列。</returns>
      <param name="bytes">デコード対象のバイト シーケンスが格納されたバイト配列。</param>
      <param name="index">デコードする最初のバイトのインデックス。</param>
      <param name="count">デコードするバイト数。</param>
      <exception cref="T:System.ArgumentException">このバイト配列には、無効な Unicode コード ポイントが含まれています。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> は null なので、</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> または <paramref name="count" /> が 0 未満です。 または <paramref name="index" /> および <paramref name="count" /> が <paramref name="bytes" /> 内の有効な範囲を示していません。</exception>
      <exception cref="T:System.Text.DecoderFallbackException">フォールバックが発生しました (詳細については、「.NET Framework における文字エンコーディング」を参照してください)。 および <see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.Encoding.Unicode">
      <summary>リトル エンディアン バイト順を使用する UTF-16 形式のエンコーディングを取得します。</summary>
      <returns>リトル エンディアンのバイト順を使用する UTF-16 形式のエンコーディング。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.Encoding.UTF8">
      <summary>UTF-8 形式のエンコーディングを取得します。</summary>
      <returns>UTF-8 形式のエンコード。</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.Encoding.WebName">
      <summary>派生クラスでオーバーライドされた場合、現在のエンコーディングの IANA (Internet Assigned Numbers Authority) に登録されている名前を取得します。</summary>
      <returns>現在の <see cref="T:System.Text.Encoding" /> の IANA 名。</returns>
      <filterpriority>2</filterpriority>
    </member>
  </members>
</doc>