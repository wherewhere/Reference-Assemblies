<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationSchemes">
      <summary>認証用のプロトコルを指定します。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Anonymous">
      <summary>匿名認証を指定します。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Basic">
      <summary>基本認証を指定します。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Digest">
      <summary>ダイジェスト認証を指定します。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.IntegratedWindowsAuthentication">
      <summary>Windows 認証を指定します。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Negotiate">
      <summary>クライアントとネゴシエートし、認証方式を決定します。 クライアントとサーバーの両方が Kerberos をサポートする場合は、この方式が使用されます。それ以外の場合は NTLM が使用されます。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.None">
      <summary>認証は使用できません。 このフラグが設定された <see cref="T:System.Net.HttpListener" /> オブジェクトを要求するクライアントは、常に "403 アクセス不可" のステータスを受け取ります。 リソースをクライアントに提供できない場合にこのフラグを使用します。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Ntlm">
      <summary>NTLM 認証を指定します。</summary>
    </member>
    <member name="T:System.Net.Cookie">
      <summary>クッキーを管理するために使用するプロパティとメソッドのセットを提供します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor">
      <summary>
        <see cref="T:System.Net.Cookie" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String)">
      <summary>指定した <see cref="P:System.Net.Cookie.Name" /> と <see cref="P:System.Net.Cookie.Value" /> を使用して、<see cref="T:System.Net.Cookie" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">
        <see cref="T:System.Net.Cookie" /> の名前。 等号 (=)、セミコロン (;)、コンマ (,)、改行 (\n)、リターン (\r)、タブ (\t)、および空白文字は、<paramref name="name" /> 内で使用しないでください。 ドル記号文字 ("$") を最初の文字にすることはできません。</param>
      <param name="value">
        <see cref="T:System.Net.Cookie" /> の値。 セミコロン (;) とコンマ (,) は、<paramref name="value" /> 内で使用しないでください。</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> パラメーターが null です。 または <paramref name="name" /> パラメーターの長さが 0 です。 または <paramref name="name" /> パラメーターに無効な文字が含まれています。 または <paramref name="value" /> パラメーターが null です。 または <paramref name="value" /> パラメーターには、無効な文字を含む、引用符で囲まれていない文字列が含まれています。</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)">
      <summary>指定した <see cref="P:System.Net.Cookie.Name" />、<see cref="P:System.Net.Cookie.Value" />、および <see cref="P:System.Net.Cookie.Path" /> を使用して、<see cref="T:System.Net.Cookie" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">
        <see cref="T:System.Net.Cookie" /> の名前。 等号 (=)、セミコロン (;)、コンマ (,)、改行 (\n)、リターン (\r)、タブ (\t)、および空白文字は、<paramref name="name" /> 内で使用しないでください。 ドル記号文字 ("$") を最初の文字にすることはできません。</param>
      <param name="value">
        <see cref="T:System.Net.Cookie" /> の値。 セミコロン (;) とコンマ (,) は、<paramref name="value" /> 内で使用しないでください。</param>
      <param name="path">この <see cref="T:System.Net.Cookie" /> が適用される送信元サーバーの URI のサブセット。 既定値は "/" です。</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> パラメーターが null です。 または <paramref name="name" /> パラメーターの長さが 0 です。 または <paramref name="name" /> パラメーターに無効な文字が含まれています。 または <paramref name="value" /> パラメーターが null です。 または <paramref name="value" /> パラメーターには、無効な文字を含む、引用符で囲まれていない文字列が含まれています。</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary>指定した <see cref="P:System.Net.Cookie.Name" />、<see cref="P:System.Net.Cookie.Value" />、<see cref="P:System.Net.Cookie.Path" />、および <see cref="P:System.Net.Cookie.Domain" /> を使用して、<see cref="T:System.Net.Cookie" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">
        <see cref="T:System.Net.Cookie" /> の名前。 等号 (=)、セミコロン (;)、コンマ (,)、改行 (\n)、リターン (\r)、タブ (\t)、および空白文字は、<paramref name="name" /> 内で使用しないでください。 ドル記号文字 ("$") を最初の文字にすることはできません。</param>
      <param name="value">
        <see cref="T:System.Net.Cookie" /> オブジェクトの値。 セミコロン (;) とコンマ (,) は、<paramref name="value" /> 内で使用しないでください。</param>
      <param name="path">この <see cref="T:System.Net.Cookie" /> が適用される送信元サーバーの URI のサブセット。 既定値は "/" です。</param>
      <param name="domain">この <see cref="T:System.Net.Cookie" /> が有効なオプションのインターネット ドメイン。 既定値は、この <see cref="T:System.Net.Cookie" /> の送信元のホストです。</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> パラメーターが null です。 または <paramref name="name" /> パラメーターの長さが 0 です。 または <paramref name="name" /> パラメーターに無効な文字が含まれています。 または <paramref name="value" /> パラメーターが null です。 または <paramref name="value" /> パラメーターには、無効な文字を含む、引用符で囲まれていない文字列が含まれています。</exception>
    </member>
    <member name="P:System.Net.Cookie.Comment">
      <summary>サーバーが <see cref="T:System.Net.Cookie" /> に追加できるコメントを取得または設定します。</summary>
      <returns>この <see cref="T:System.Net.Cookie" /> で使用法をドキュメント化するオプションのコメント。</returns>
    </member>
    <member name="P:System.Net.Cookie.CommentUri">
      <summary>サーバーが <see cref="T:System.Net.Cookie" /> で提供できる URI コメントを取得または設定します。</summary>
      <returns>この <see cref="T:System.Net.Cookie" /> の URI 参照の想定している用途を表すオプションのコメント。 この値は、URI 書式に準拠している必要があります。</returns>
    </member>
    <member name="P:System.Net.Cookie.Discard">
      <summary>サーバーが設定した破棄フラグを取得または設定します。</summary>
      <returns>現在のセッションの最後にクライアントが <see cref="T:System.Net.Cookie" /> を破棄する場合は true。それ以外の場合は false。 既定値は、false です。</returns>
    </member>
    <member name="P:System.Net.Cookie.Domain">
      <summary>
        <see cref="T:System.Net.Cookie" /> が有効な URI を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> が有効な URI。</returns>
    </member>
    <member name="M:System.Net.Cookie.Equals(System.Object)">
      <summary>
        <see cref="M:System.Object.Equals(System.Object)" /> メソッドをオーバーライドします。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> が <paramref name="comparand" /> に等しい場合は、true を返します。 2 つの <see cref="T:System.Net.Cookie" /> インスタンスは、<see cref="P:System.Net.Cookie.Name" />、<see cref="P:System.Net.Cookie.Value" />、<see cref="P:System.Net.Cookie.Path" />、<see cref="P:System.Net.Cookie.Domain" />、および <see cref="P:System.Net.Cookie.Version" /> の各プロパティが等しい場合に等しくなります。 <see cref="P:System.Net.Cookie.Name" /> の文字列比較と <see cref="P:System.Net.Cookie.Domain" /> の文字列比較は、大文字と小文字を区別しません。</returns>
      <param name="comparand">
        <see cref="T:System.Net.Cookie" /> への参照。</param>
    </member>
    <member name="P:System.Net.Cookie.Expired">
      <summary>
        <see cref="T:System.Net.Cookie" /> の現在の状態を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> の有効期限が切れた場合は true。それ以外の場合は false。 既定値は、false です。</returns>
    </member>
    <member name="P:System.Net.Cookie.Expires">
      <summary>
        <see cref="T:System.Net.Cookie" /> の有効期限の日時を <see cref="T:System.DateTime" /> として取得または設定します。</summary>
      <returns>
        <see cref="T:System.DateTime" /> インスタンスとしての <see cref="T:System.Net.Cookie" /> の有効期限の日時。</returns>
    </member>
    <member name="M:System.Net.Cookie.GetHashCode">
      <summary>
        <see cref="M:System.Object.GetHashCode" /> メソッドをオーバーライドします。</summary>
      <returns>このインスタンスの 32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="P:System.Net.Cookie.HttpOnly">
      <summary>ページ スクリプトまたは他のアクティブ コンテンツがこのクッキーにアクセスできるかどうかを決定します。</summary>
      <returns>ページ スクリプトまたは他のアクティブ コンテンツがこのクッキーにアクセスできるかどうかを決定するブール値。</returns>
    </member>
    <member name="P:System.Net.Cookie.Name">
      <summary>
        <see cref="T:System.Net.Cookie" /> の名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> の名前。</returns>
      <exception cref="T:System.Net.CookieException">設定操作として指定した値が、null または空の文字列です。 または 設定操作として指定した値に無効な文字が含まれていました。 等号 (=)、セミコロン (;)、コンマ (,)、改行 (\n)、リターン (\r)、タブ (\t)、および空白文字は、<see cref="P:System.Net.Cookie.Name" /> プロパティ内で使用しないでください。 ドル記号文字 ("$") を最初の文字にすることはできません。</exception>
    </member>
    <member name="P:System.Net.Cookie.Path">
      <summary>
        <see cref="T:System.Net.Cookie" /> が適用される URI を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> が適用される URI。</returns>
    </member>
    <member name="P:System.Net.Cookie.Port">
      <summary>
        <see cref="T:System.Net.Cookie" /> が適用される TCP ポートのリストを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> が適用される TCP ポートのリスト。</returns>
      <exception cref="T:System.Net.CookieException">設定操作に指定した値が解析できなかったか、二重引用符で囲まれていません。</exception>
    </member>
    <member name="P:System.Net.Cookie.Secure">
      <summary>
        <see cref="T:System.Net.Cookie" /> のセキュリティ レベルを取得または設定します。</summary>
      <returns>要求に HTTPS (Secure Hypertext Transfer Protocol) が使用されるときにだけクライアントが後続の要求でクッキーを返すようにする場合は true。それ以外の場合は false。 既定値は、false です。</returns>
    </member>
    <member name="P:System.Net.Cookie.TimeStamp">
      <summary>クッキーが <see cref="T:System.DateTime" /> として発行された時刻を取得します。</summary>
      <returns>クッキーが <see cref="T:System.DateTime" /> として発行された時刻。</returns>
    </member>
    <member name="M:System.Net.Cookie.ToString">
      <summary>
        <see cref="M:System.Object.ToString" /> メソッドをオーバーライドします。</summary>
      <returns>この <see cref="T:System.Net.Cookie" /> オブジェクトの、HTTP クッキー: 要求ヘッダーに含めることができる文字列形式を返します。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.Cookie.Value">
      <summary>
        <see cref="T:System.Net.Cookie" /> の <see cref="P:System.Net.Cookie.Value" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> の <see cref="P:System.Net.Cookie.Value" />。</returns>
    </member>
    <member name="P:System.Net.Cookie.Version">
      <summary>クッキーが準拠する HTTP 状態保守のバージョンを取得または設定します。</summary>
      <returns>クッキーが準拠する HTTP 状態保守のバージョン。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">バージョンに指定した値は使用できません。</exception>
    </member>
    <member name="T:System.Net.CookieCollection">
      <summary>
        <see cref="T:System.Net.Cookie" /> クラスのインスタンスのコレクション コンテナーを提供します。</summary>
    </member>
    <member name="M:System.Net.CookieCollection.#ctor">
      <summary>
        <see cref="T:System.Net.CookieCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
      <summary>
        <see cref="T:System.Net.Cookie" /> を <see cref="T:System.Net.CookieCollection" /> に追加します。</summary>
      <param name="cookie">
        <see cref="T:System.Net.CookieCollection" /> に追加される <see cref="T:System.Net.Cookie" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> は null なので、</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
      <summary>現在のインスタンスに <see cref="T:System.Net.CookieCollection" /> の内容を追加します。</summary>
      <param name="cookies">追加される <see cref="T:System.Net.CookieCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookies" /> は null なので、</exception>
    </member>
    <member name="P:System.Net.CookieCollection.Count">
      <summary>
        <see cref="T:System.Net.CookieCollection" /> に格納されているクッキーの数を取得します。</summary>
      <returns>
        <see cref="T:System.Net.CookieCollection" /> に格納されているクッキーの数。</returns>
    </member>
    <member name="M:System.Net.CookieCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Net.CookieCollection" /> を反復処理できる列挙子を取得します。</summary>
      <returns>
        <see cref="T:System.Net.CookieCollection" /> を反復処理できる <see cref="T:System.Collections.IEnumerator" /> インターフェイスを実装するインスタンス。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.String)">
      <summary>
        <see cref="T:System.Net.CookieCollection" /> から特定の名前の <see cref="T:System.Net.Cookie" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Net.CookieCollection" /> の特定の名前の <see cref="T:System.Net.Cookie" />。</returns>
      <param name="name">検索される <see cref="T:System.Net.Cookie" /> の名前。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> は null なので、</exception>
    </member>
    <member name="M:System.Net.CookieCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> のトピックを参照してください。</summary>
      <param name="array">コレクション要素のコピー先となる 1 次元配列。 配列では 0 から始まるインデックスを使用する必要があります。</param>
      <param name="index">コピーの開始位置となる、<paramref name="array" /> 内の 0 から始まるインデックス。</param>
    </member>
    <member name="P:System.Net.CookieCollection.System#Collections#ICollection#IsSynchronized">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.ICollection.IsSynchronized" /> のトピックを参照してください。</summary>
      <returns>コレクションへのアクセスが同期されている (スレッド セーフである) 場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.System#Collections#ICollection#SyncRoot">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.ICollection.SyncRoot" /> のトピックを参照してください。</summary>
      <returns>コレクションへのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="T:System.Net.CookieContainer">
      <summary>
        <see cref="T:System.Net.CookieCollection" /> オブジェクトのコレクション用のコンテナーを提供します。</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor">
      <summary>
        <see cref="T:System.Net.CookieContainer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
      <summary>
        <see cref="T:System.Net.Cookie" /> を特定の URI の <see cref="T:System.Net.CookieContainer" /> に追加します。</summary>
      <param name="uri">
        <see cref="T:System.Net.CookieContainer" /> に追加される <see cref="T:System.Net.Cookie" /> の URI。</param>
      <param name="cookie">
        <see cref="T:System.Net.CookieContainer" /> に追加される <see cref="T:System.Net.Cookie" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> が null または <paramref name="cookie" /> が null です。</exception>
      <exception cref="T:System.Net.CookieException">
        <paramref name="cookie" /> が <paramref name="maxCookieSize" /> を超えています。 または <paramref name="cookie" /> のドメインが有効な URI ではありません。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
      <summary>
        <see cref="T:System.Net.CookieCollection" /> の内容を特定の URI の <see cref="T:System.Net.CookieContainer" /> に追加します。</summary>
      <param name="uri">
        <see cref="T:System.Net.CookieContainer" /> に追加される <see cref="T:System.Net.CookieCollection" /> の URI。</param>
      <param name="cookies">
        <see cref="T:System.Net.CookieContainer" /> に追加される <see cref="T:System.Net.CookieCollection" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookies" /> は null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cookies" /> 内のいずれかのクッキーのドメインが null です。</exception>
      <exception cref="T:System.Net.CookieException">
        <paramref name="cookies" /> 内のいずれかのクッキーが、無効なドメインを含んでいます。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.CookieContainer.Capacity">
      <summary>
        <see cref="T:System.Net.CookieContainer" /> が保持できる <see cref="T:System.Net.Cookie" /> インスタンス数を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Net.CookieContainer" /> が保持できる <see cref="T:System.Net.Cookie" /> インスタンス数。 これは、ハード リミットであり、<see cref="T:System.Net.Cookie" /> を追加して超過させることはできません。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="Capacity" /> が 0 以下または値が <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> 未満で、<see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> が <see cref="F:System.Int32.MaxValue" /> に等しくない場合です。</exception>
    </member>
    <member name="P:System.Net.CookieContainer.Count">
      <summary>
        <see cref="T:System.Net.CookieContainer" /> が現在保持している <see cref="T:System.Net.Cookie" /> インスタンス数を取得します。</summary>
      <returns>
        <see cref="T:System.Net.CookieContainer" /> が現在保持している<see cref="T:System.Net.Cookie" /> インスタンス数。 これは、すべてのドメイン内の <see cref="T:System.Net.Cookie" /> インスタンスの合計数を示します。</returns>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLengthLimit">
      <summary>
        <see cref="T:System.Net.CookieContainer" /> が保持できる <see cref="T:System.Net.Cookie" /> インスタンスの既定の最大サイズをバイト単位で表します。 このフィールドは定数です。</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLimit">
      <summary>
        <see cref="T:System.Net.CookieContainer" /> が保持できる <see cref="T:System.Net.Cookie" /> インスタンスの既定の最大数を表します。 このフィールドは定数です。</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit">
      <summary>
        <see cref="T:System.Net.CookieContainer" /> がドメインごとに参照できる <see cref="T:System.Net.Cookie" /> インスタンスの既定の最大数を表します。 このフィールドは定数です。</summary>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
      <summary>特定の URI に関連付けられている <see cref="T:System.Net.Cookie" /> インスタンスを表す HTTP クッキーを格納する HTTP クッキー ヘッダーを取得します。</summary>
      <returns>セミコロンで区切られた <see cref="T:System.Net.Cookie" /> インスタンスを表す文字列を含む HTTP クッキー ヘッダー。</returns>
      <param name="uri">必要な <see cref="T:System.Net.Cookie" /> インスタンスの URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> は null です。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookies(System.Uri)">
      <summary>特定の URI に関連付けられている <see cref="T:System.Net.Cookie" /> インスタンスを格納する <see cref="T:System.Net.CookieCollection" /> を取得します。</summary>
      <returns>特定の URI に関連付けられている <see cref="T:System.Net.Cookie" /> インスタンスを格納する <see cref="T:System.Net.CookieCollection" />。</returns>
      <param name="uri">必要な <see cref="T:System.Net.Cookie" /> インスタンスの URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> は null です。</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.CookieContainer.MaxCookieSize">
      <summary>
        <see cref="T:System.Net.Cookie" /> の許容最大長を表します。</summary>
      <returns>
        <see cref="T:System.Net.Cookie" /> の許容最大長 (バイト単位)。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="MaxCookieSize" /> が 0 以下です。</exception>
    </member>
    <member name="P:System.Net.CookieContainer.PerDomainCapacity">
      <summary>
        <see cref="T:System.Net.CookieContainer" /> でドメインごとに格納できる <see cref="T:System.Net.Cookie" /> インスタンスの数を取得および設定します。</summary>
      <returns>ドメインごとに許可されている <see cref="T:System.Net.Cookie" /> インスタンス数。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="PerDomainCapacity" /> が 0 以下です。 または (<paramref name="PerDomainCapacity" /> が、最大許容クッキー インスタンス数の 300 を超えており、<see cref="F:System.Int32.MaxValue" /> に等しくありません。)</exception>
    </member>
    <member name="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
      <summary>HTTP クッキー ヘッダーの 1 つ以上のクッキーの <see cref="T:System.Net.Cookie" /> インスタンスを特定の URI の <see cref="T:System.Net.CookieContainer" /> に追加します。</summary>
      <param name="uri">
        <see cref="T:System.Net.CookieCollection" /> の URI。</param>
      <param name="cookieHeader">コンマで区切られた <see cref="T:System.Net.Cookie" /> インスタンスを含む、HTTP サーバーで返された HTTP set-cookie ヘッダーの内容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> は null です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookieHeader" /> は null です。</exception>
      <exception cref="T:System.Net.CookieException">いずれかのクッキーが無効です。 または コンテナーにいずれかのクッキーを追加するときにエラーが発生しました。</exception>
    </member>
    <member name="T:System.Net.CookieException">
      <summary>
        <see cref="T:System.Net.Cookie" /> を <see cref="T:System.Net.CookieContainer" /> に追加するときにエラーが発生した場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor">
      <summary>
        <see cref="T:System.Net.CookieException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Net.CredentialCache">
      <summary>複数の資格情報にストレージを提供します。</summary>
    </member>
    <member name="M:System.Net.CredentialCache.#ctor">
      <summary>
        <see cref="T:System.Net.CredentialCache" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)">
      <summary>SMTP で使用する <see cref="T:System.Net.NetworkCredential" /> インスタンスを資格情報キャッシュに追加し、ホスト コンピューター、ポート、および認証プロトコルに関連付けます。 このメソッドを使用して追加される資格情報は、SMTP でのみ有効です。 このメソッドは、HTTP 要求および FTP 要求では動作しません。</summary>
      <param name="host">ホスト コンピューターを示す <see cref="T:System.String" />。</param>
      <param name="port">
        <paramref name="host" /> 上の接続先のポートを指定する <see cref="T:System.Int32" />。</param>
      <param name="authenticationType">
        <paramref name="cred" /> を使用して <paramref name="host" /> に接続する場合に使用する認証方式を指定する <see cref="T:System.String" />。 「解説」を参照してください。</param>
      <param name="credential">資格情報キャッシュに追加する <see cref="T:System.Net.NetworkCredential" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> は null です。 または <paramref name="authType" /> は null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="authType" /> が使用できる値ではありません。 「解説」を参照してください。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> が 0 未満です。</exception>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)">
      <summary>
        <see cref="T:System.Net.NetworkCredential" /> インスタンスを SMTP 以外のプロトコルで使用する資格情報キャッシュに追加し、URI (Uniform Resource Identifier) プリフィックスおよび認証プロトコルに関連付けます。</summary>
      <param name="uriPrefix">資格情報によってアクセスが許可されるリソースの URI プリフィックスを指定する <see cref="T:System.Uri" />。</param>
      <param name="authType">
        <paramref name="uriPrefix" /> で指定されたリソースが使用する認証方式。</param>
      <param name="cred">資格情報キャッシュに追加する <see cref="T:System.Net.NetworkCredential" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> は null です。 または <paramref name="authType" /> は null です。</exception>
      <exception cref="T:System.ArgumentException">同じ資格情報が 2 回以上追加されました。</exception>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultCredentials">
      <summary>アプリケーションのシステム資格情報を取得します。</summary>
      <returns>アプリケーションのシステム資格情報を表す <see cref="T:System.Net.ICredentials" />。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="USERNAME" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultNetworkCredentials">
      <summary>現在のセキュリティ コンテキストのネットワーク資格情報を取得します。</summary>
      <returns>現在のユーザーまたはアプリケーションのネットワーク資格情報を表す <see cref="T:System.Net.NetworkCredential" />。</returns>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)">
      <summary>指定したホスト、ポート、および認証プロトコルに関連付けられている <see cref="T:System.Net.NetworkCredential" /> インスタンスを返します。</summary>
      <returns>
        <see cref="T:System.Net.NetworkCredential" />。または、キャッシュに一致する資格情報がない場合はnull。</returns>
      <param name="host">ホスト コンピューターを示す <see cref="T:System.String" />。</param>
      <param name="port">
        <paramref name="host" /> 上の接続先のポートを指定する <see cref="T:System.Int32" />。</param>
      <param name="authenticationType">
        <paramref name="host" /> に接続する場合に使用する認証方式を指定する <see cref="T:System.String" />。 「解説」を参照してください。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> は null です。 または <paramref name="authType" /> は null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="authType" /> が使用できる値ではありません。 「解説」を参照してください。 または <paramref name="host" /> が空の文字列 ("") です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> が 0 未満です。</exception>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)">
      <summary>指定した URI (Uniform Resource Identifier) と認証の種類に関連付けられた <see cref="T:System.Net.NetworkCredential" /> インスタンスを返します。</summary>
      <returns>
        <see cref="T:System.Net.NetworkCredential" />。または、キャッシュに一致する資格情報がない場合はnull。</returns>
      <param name="uriPrefix">資格情報によってアクセスが許可されるリソースの URI プリフィックスを指定する <see cref="T:System.Uri" />。</param>
      <param name="authType">
        <paramref name="uriPrefix" /> で指定されたリソースが使用する認証方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> または <paramref name="authType" /> が null です。</exception>
    </member>
    <member name="M:System.Net.CredentialCache.GetEnumerator">
      <summary>
        <see cref="T:System.Net.CredentialCache" /> インスタンスを反復処理できる列挙子を返します。</summary>
      <returns>
        <see cref="T:System.Net.CredentialCache" /> の <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)">
      <summary>
        <see cref="T:System.Net.NetworkCredential" /> インスタンスが指定したホスト、ポート、および認証プロトコルに関連付けられている場合に、このインスタンスをキャッシュから削除します。</summary>
      <param name="host">ホスト コンピューターを示す <see cref="T:System.String" />。</param>
      <param name="port">
        <paramref name="host" /> 上の接続先のポートを指定する <see cref="T:System.Int32" />。</param>
      <param name="authenticationType">
        <paramref name="host" /> に接続する場合に使用する認証方式を指定する <see cref="T:System.String" />。 「解説」を参照してください。</param>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.Uri,System.String)">
      <summary>
        <see cref="T:System.Net.NetworkCredential" /> インスタンスが指定した URI (Uniform Resource Identifier) プレフィックスと認証プロトコルに関連付けられている場合に、このインスタンスをキャッシュから削除します。</summary>
      <param name="uriPrefix">資格情報が使用されるリソースの URI プリフィックスを指定する <see cref="T:System.Uri" />。</param>
      <param name="authType">
        <paramref name="uriPrefix" /> で指定されたホストが使用する認証方式。</param>
    </member>
    <member name="T:System.Net.DecompressionMethods">
      <summary>
        <see cref="T:System.Net.HttpWebRequest" /> への応答として受信したデータを圧縮するために使用される、ファイルの圧縮と圧縮解除のエンコーディング形式を表します。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Deflate">
      <summary>デフレート圧縮/圧縮解除アルゴリズムを使用します。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.GZip">
      <summary>gZip 圧縮/圧縮解除アルゴリズムを使用します。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.None">
      <summary>圧縮は使用しないでください。</summary>
    </member>
    <member name="T:System.Net.HttpStatusCode">
      <summary>HTTP で定義されたステータス コードの値を格納します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Accepted">
      <summary>HTTP ステータス 202 と等価です。 <see cref="F:System.Net.HttpStatusCode.Accepted" /> は、要求が追加の処理のために受け入れられたことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Ambiguous">
      <summary>HTTP ステータス 300 と等価です。 <see cref="F:System.Net.HttpStatusCode.Ambiguous" /> は、要求された情報に複数の表現があることを示します。 既定のアクションは、このステータスをリダイレクトとして扱い、この応答に関連付けられている Location ヘッダーの内容に従うことです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadGateway">
      <summary>HTTP ステータス 502 と等価です。 <see cref="F:System.Net.HttpStatusCode.BadGateway" /> は、中間プロキシ サーバーが別のプロキシまたは元のサーバーから無効な応答を受け取ったことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadRequest">
      <summary>HTTP ステータス 400 と等価です。 <see cref="F:System.Net.HttpStatusCode.BadRequest" /> は、サーバーが要求を理解できないことを示します。 <see cref="F:System.Net.HttpStatusCode.BadRequest" /> は、他のエラーが適用されない場合や、正確なエラーを確認できないか、独自のエラー コードがない場合に送信されます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Conflict">
      <summary>HTTP ステータス 409 と等価です。 <see cref="F:System.Net.HttpStatusCode.Conflict" /> は、サーバー上の競合のために要求を実行できないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Continue">
      <summary>HTTP ステータス 100 と等価です。 <see cref="F:System.Net.HttpStatusCode.Continue" /> は、クライアントが要求を継続できることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Created">
      <summary>HTTP ステータス 201 と等価です。 <see cref="F:System.Net.HttpStatusCode.Created" /> は、応答が送信される前に、要求によって新しいリソースが作成されたことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ExpectationFailed">
      <summary>HTTP ステータス 417 と等価です。 <see cref="F:System.Net.HttpStatusCode.ExpectationFailed" /> は、サーバーが Expect ヘッダーで指定された要求を満たすことができないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Forbidden">
      <summary>HTTP ステータス 403 と等価です。 <see cref="F:System.Net.HttpStatusCode.Forbidden" /> は、サーバーが要求の実行を拒否していることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Found">
      <summary>HTTP ステータス 302 と等価です。 <see cref="F:System.Net.HttpStatusCode.Found" /> は、要求された情報が Location ヘッダーで指定される URI にあることを示します。 このステータスが受信されたときの既定のアクションは、この応答に関連付けられている Location ヘッダーに従うことです。 元の要求メソッドが POST だった場合、リダイレクトされた要求では GET メソッドが使用されます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.GatewayTimeout">
      <summary>HTTP ステータス 504 と等価です。 <see cref="F:System.Net.HttpStatusCode.GatewayTimeout" /> は、中間プロキシ サーバーが別のプロキシまたは元のサーバーからの応答を待機している間にタイムアウトしたことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Gone">
      <summary>HTTP ステータス 410 と等価です。 <see cref="F:System.Net.HttpStatusCode.Gone" /> は、要求されたリソースが利用できないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.HttpVersionNotSupported">
      <summary>HTTP ステータス 505 と等価です。 <see cref="F:System.Net.HttpStatusCode.HttpVersionNotSupported" /> は、要求された HTTP バージョンがサーバーでサポートされていないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InternalServerError">
      <summary>HTTP ステータス 500 と等価です。 <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> は、サーバーで汎用エラーが発生したことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LengthRequired">
      <summary>HTTP ステータス 411 と等価です。 <see cref="F:System.Net.HttpStatusCode.LengthRequired" /> は、必要な Content-length ヘッダーがないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MethodNotAllowed">
      <summary>HTTP ステータス 405 と等価です。 <see cref="F:System.Net.HttpStatusCode.MethodNotAllowed" /> は、要求メソッド (POST または GET) が要求リソースで許可されていないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Moved">
      <summary>HTTP ステータス 301 と等価です。 <see cref="F:System.Net.HttpStatusCode.Moved" /> は、要求された情報が Location ヘッダーで指定される URI に移動したことを示します。 このステータスが受信されたときの既定のアクションは、この応答に関連付けられている Location ヘッダーに従うことです。 元の要求メソッドが POST だった場合、リダイレクトされた要求では GET メソッドが使用されます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MovedPermanently">
      <summary>HTTP ステータス 301 と等価です。 <see cref="F:System.Net.HttpStatusCode.MovedPermanently" /> は、要求された情報が Location ヘッダーで指定される URI に移動したことを示します。 このステータスが受信されたときの既定のアクションは、この応答に関連付けられている Location ヘッダーに従うことです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultipleChoices">
      <summary>HTTP ステータス 300 と等価です。 <see cref="F:System.Net.HttpStatusCode.MultipleChoices" /> は、要求された情報に複数の表現があることを示します。 既定のアクションは、このステータスをリダイレクトとして扱い、この応答に関連付けられている Location ヘッダーの内容に従うことです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NoContent">
      <summary>HTTP ステータス 204 と等価です。 <see cref="F:System.Net.HttpStatusCode.NoContent" /> は、要求が正常に処理され、応答が意図的に空白になっていることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NonAuthoritativeInformation">
      <summary>HTTP ステータス 203 と等価です。 <see cref="F:System.Net.HttpStatusCode.NonAuthoritativeInformation" /> は、返されたメタ情報が、元のサーバーではなくキャッシュされたコピーから取得されたもので、正しくない可能性があることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotAcceptable">
      <summary>HTTP ステータス 406 と等価です。 <see cref="F:System.Net.HttpStatusCode.NotAcceptable" /> は、クライアントが Accept ヘッダーでリソースの利用可能な任意の表現を受け入れないことを指定していることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotFound">
      <summary>HTTP ステータス 404 と等価です。 <see cref="F:System.Net.HttpStatusCode.NotFound" /> は、要求されたリソースがサーバーに存在していないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotImplemented">
      <summary>HTTP ステータス 501 と等価です。 <see cref="F:System.Net.HttpStatusCode.NotImplemented" /> は、サーバーが要求された機能をサポートしていないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotModified">
      <summary>HTTP ステータス 304 と等価です。 <see cref="F:System.Net.HttpStatusCode.NotModified" /> は、クライアントのキャッシュされたコピーが最新のものであることを示します。 リソースの内容は転送されません。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.OK">
      <summary>HTTP ステータス 200 と等価です。 <see cref="F:System.Net.HttpStatusCode.OK" /> は、要求が成功し、要求された情報が応答で返されたことを示します。 これは受信される最も一般的なステータス コードです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PartialContent">
      <summary>HTTP ステータス 206 と等価です。 <see cref="F:System.Net.HttpStatusCode.PartialContent" /> は、応答が GET 要求によって要求された応答の一部であることを示します。これにはバイト範囲が含まれます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PaymentRequired">
      <summary>HTTP ステータス 402 と等価です。 <see cref="F:System.Net.HttpStatusCode.PaymentRequired" /> は将来使用するために予約されています。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionFailed">
      <summary>HTTP ステータス 412 と等価です。 <see cref="F:System.Net.HttpStatusCode.PreconditionFailed" /> は、この要求で設定された条件が満たされず、要求を実行できないことを示します。 条件は、If-Match、If-None-Match、If-Unmodified-Since などの条件要求ヘッダーを使用して設定されます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired">
      <summary>HTTP ステータス 407 と等価です。 <see cref="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired" /> は、要求されたプロキシが認証を要求することを示します。 Proxy-authenticate ヘッダーには、認証の実行方法の詳細が含まれます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Redirect">
      <summary>HTTP ステータス 302 と等価です。 <see cref="F:System.Net.HttpStatusCode.Redirect" /> は、要求された情報が Location ヘッダーで指定される URI にあることを示します。 このステータスが受信されたときの既定のアクションは、この応答に関連付けられている Location ヘッダーに従うことです。 元の要求メソッドが POST だった場合、リダイレクトされた要求では GET メソッドが使用されます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectKeepVerb">
      <summary>HTTP ステータス 307 と等価です。 <see cref="F:System.Net.HttpStatusCode.RedirectKeepVerb" /> は、要求された情報が Location ヘッダーで指定される URI にあることを示します。 このステータスが受信されたときの既定のアクションは、この応答に関連付けられている Location ヘッダーに従うことです。 元の要求メソッドが POST だった場合、リダイレクトされた要求でも POST メソッドが使用されます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectMethod">
      <summary>HTTP ステータス 303 と等価です。 <see cref="F:System.Net.HttpStatusCode.RedirectMethod" /> は、POST の結果として、Location ヘッダーで指定された URI にクライアントを自動的にリダイレクトします。 Location ヘッダーで指定されたリソースへの要求は、GET によって実行されます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
      <summary>HTTP ステータス 416 と等価です。 <see cref="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable" /> は、リソースから要求されたデータの範囲を返すことができないことを示します。その原因は、範囲の先頭がリソースの先頭より前であるか、範囲の末尾がリソースの末尾より後ろであるかのいずれかです。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestEntityTooLarge">
      <summary>HTTP ステータス 413 と等価です。 <see cref="F:System.Net.HttpStatusCode.RequestEntityTooLarge" /> は、要求が大きすぎて、サーバーで処理できないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestTimeout">
      <summary>HTTP ステータス 408 と等価です。 <see cref="F:System.Net.HttpStatusCode.RequestTimeout" /> は、サーバーが要求を予期している時間内にクライアントが要求を送信しなかったことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestUriTooLong">
      <summary>HTTP ステータス 414 と等価です。 <see cref="F:System.Net.HttpStatusCode.RequestUriTooLong" /> は、URI が長すぎることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ResetContent">
      <summary>HTTP ステータス 205 と等価です。 <see cref="F:System.Net.HttpStatusCode.ResetContent" /> は、クライアントが現在のリソースを再び読み込むのではなく、リセットする必要があることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SeeOther">
      <summary>HTTP ステータス 303 と等価です。 <see cref="F:System.Net.HttpStatusCode.SeeOther" /> は、POST の結果として、Location ヘッダーで指定された URI にクライアントを自動的にリダイレクトします。 Location ヘッダーで指定されたリソースへの要求は、GET によって実行されます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ServiceUnavailable">
      <summary>HTTP ステータス 503 と等価です。 通常、<see cref="F:System.Net.HttpStatusCode.ServiceUnavailable" /> は、高い負荷または保守のため、サーバーを一時的に利用できないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SwitchingProtocols">
      <summary>HTTP ステータス 101 と等価です。 <see cref="F:System.Net.HttpStatusCode.SwitchingProtocols" /> は、プロトコル バージョンまたはプロトコルが変更されていることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TemporaryRedirect">
      <summary>HTTP ステータス 307 と等価です。 <see cref="F:System.Net.HttpStatusCode.TemporaryRedirect" /> は、要求された情報が Location ヘッダーで指定される URI にあることを示します。 このステータスが受信されたときの既定のアクションは、この応答に関連付けられている Location ヘッダーに従うことです。 元の要求メソッドが POST だった場合、リダイレクトされた要求でも POST メソッドが使用されます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unauthorized">
      <summary>HTTP ステータス 401 と等価です。 <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> は、要求されたリソースが認証を要求することを示します。 WWW-Authenticate ヘッダーには、認証の実行方法の詳細が含まれます。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnsupportedMediaType">
      <summary>HTTP ステータス 415 と等価です。 <see cref="F:System.Net.HttpStatusCode.UnsupportedMediaType" /> は、その要求の種類がサポートされていないことを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unused">
      <summary>HTTP ステータス 306 と等価です。 <see cref="F:System.Net.HttpStatusCode.Unused" /> は、作成中の HTTP/1.1 仕様の拡張案です。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UpgradeRequired">
      <summary>HTTP ステータス 426 と等価です。 <see cref="F:System.Net.HttpStatusCode.UpgradeRequired" /> は、クライアントが TLS/1.0 など別のプロトコルに切り替える必要があることを示します。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UseProxy">
      <summary>HTTP ステータス 305 と等価です。 <see cref="F:System.Net.HttpStatusCode.UseProxy" /> は、要求が Location ヘッダーで指定される URI でプロキシ サーバーを使用する必要があることを示します。</summary>
    </member>
    <member name="T:System.Net.ICredentials">
      <summary>Web クライアント認証用の資格情報を取得するための、基本認証インターフェイスを提供します。</summary>
    </member>
    <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <summary>指定された URI に関連付けられている <see cref="T:System.Net.NetworkCredential" /> オブジェクトと、認証の種類を返します。</summary>
      <returns>指定された URI に関連付けられている <see cref="T:System.Net.NetworkCredential" /> と、認証の種類。使用できる認証がない場合には、null が返されます。</returns>
      <param name="uri">クライアントが認証を提供している <see cref="T:System.Uri" />。</param>
      <param name="authType">
        <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> プロパティで定義される認証の種類。</param>
    </member>
    <member name="T:System.Net.ICredentialsByHost">
      <summary>ホスト、ポート、および認証の種類用の資格情報を取得するためのインターフェイスを提供します。</summary>
    </member>
    <member name="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)">
      <summary>指定したホスト、ポート、および認証プロトコル用の資格情報を返します。</summary>
      <returns>指定したホスト、ポート、および認証プロトコル用の <see cref="T:System.Net.NetworkCredential" />。指定したホスト、ポート、および認証プロトコル用に使用できる資格情報がない場合は null。</returns>
      <param name="host">クライアントを認証しているホスト コンピューター。</param>
      <param name="port">クライアントが通信を行う <paramref name="host " /> 上のポート。</param>
      <param name="authenticationType">認証プロトコル。</param>
    </member>
    <member name="T:System.Net.IWebProxy">
      <summary>
        <see cref="T:System.Net.WebRequest" /> クラスのプロキシ アクセスの実装用に基本インターフェイスを提供します。</summary>
    </member>
    <member name="P:System.Net.IWebProxy.Credentials">
      <summary>認証用にプロキシ サーバーに送信する資格情報。</summary>
      <returns>プロキシ サーバーへの要求を認証するために必要な資格情報を格納している <see cref="T:System.Net.ICredentials" /> インスタンス。</returns>
    </member>
    <member name="M:System.Net.IWebProxy.GetProxy(System.Uri)">
      <summary>プロキシの URI を返します。</summary>
      <returns>
        <paramref name="destination" /> と通信するために使用するプロキシの URI を格納している <see cref="T:System.Uri" /> インスタンス。</returns>
      <param name="destination">要求されたインターネット リソースを指定する <see cref="T:System.Uri" />。</param>
    </member>
    <member name="M:System.Net.IWebProxy.IsBypassed(System.Uri)">
      <summary>指定したホストでプロキシを使用しないことを示します。</summary>
      <returns>
        <paramref name="host" /> でプロキシ サーバーを使用しない場合は true。それ以外の場合は false。</returns>
      <param name="host">プロキシの使用を確認するホストの <see cref="T:System.Uri" />。</param>
    </member>
    <member name="T:System.Net.NetworkCredential">
      <summary>基本認証、ダイジェスト認証、NTLM 認証、Kerberos 認証など、パスワード ベースの認証方式に使用する資格情報を提供します。</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor">
      <summary>
        <see cref="T:System.Net.NetworkCredential" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <summary>指定したユーザー名とパスワードを使用して、<see cref="T:System.Net.NetworkCredential" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="userName">資格情報に関連付けられているユーザー名。</param>
      <param name="password">資格情報に関連付けられているユーザー名に対応するパスワード。</param>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <summary>指定したユーザー名、パスワード、ドメインを使用して、<see cref="T:System.Net.NetworkCredential" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="userName">資格情報に関連付けられているユーザー名。</param>
      <param name="password">資格情報に関連付けられているユーザー名に対応するパスワード。</param>
      <param name="domain">これらの資格情報に関連付けられているドメイン。</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Domain">
      <summary>資格情報を検証するドメインまたはコンピューター名を取得または設定します。</summary>
      <returns>資格情報に関連付けられているドメインの名前。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)">
      <summary>指定したホスト、ポート、および認証の種類用に <see cref="T:System.Net.NetworkCredential" /> クラスのインスタンスを返します。</summary>
      <returns>指定したホスト、ポート、および認証プロトコル用の <see cref="T:System.Net.NetworkCredential" />。指定したホスト、ポート、および認証プロトコル用に使用できる資格情報がない場合は null。</returns>
      <param name="host">クライアントを認証するホスト コンピューター。</param>
      <param name="port">クライアントが通信する <paramref name="host" /> 上のポート。</param>
      <param name="authenticationType">
        <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> プロパティの定義に従って要求された認証の種類。</param>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <summary>指定された URI (Uniform Resource Identifier) と認証の種類について、<see cref="T:System.Net.NetworkCredential" /> クラスのインスタンスを返します。</summary>
      <returns>
        <see cref="T:System.Net.NetworkCredential" /> オブジェクト。</returns>
      <param name="uri">クライアントが認証を提供する URI。</param>
      <param name="authType">
        <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> プロパティの定義に従って要求された認証の種類。</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Password">
      <summary>資格情報に関連付けられているユーザー名に対応するパスワードを取得または設定します。</summary>
      <returns>資格情報に関連付けられているパスワード。 この <see cref="T:System.Net.NetworkCredential" /> インスタンスが、null に設定された <paramref name="password" /> パラメーターを使用して初期化された場合、<see cref="P:System.Net.NetworkCredential.Password" /> プロパティは空の文字列を返します。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Net.NetworkCredential.UserName">
      <summary>資格情報に関連付けられているユーザー名を取得または設定します。</summary>
      <returns>資格情報に関連付けられているユーザー名。</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Net.TransportContext">
      <summary>
        <see cref="T:System.Net.TransportContext" /> クラスは、基になるトランスポート層に関する追加のコンテキストを提供します。</summary>
    </member>
  </members>
</doc>