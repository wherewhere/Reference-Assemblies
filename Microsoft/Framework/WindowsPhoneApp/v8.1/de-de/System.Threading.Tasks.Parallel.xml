<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Tasks.Parallel</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Tasks.Parallel">
      <summary>Unterstützt parallele Schleifen und Bereiche.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
      <summary>Führt eine for-Schleife (For in Visual Basic) aus, in der Iterationen parallel ausgeführt werden können.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="fromInclusive">Der Startindex, einschließend.</param>
      <param name="toExclusive">Der Endindex, ausschließend.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <summary>Führt eine for (For in Visual Basic)-Schleife aus, in der Iterationen parallel ausgeführt werden können und der Status der Schleife beobachtet und bearbeitet werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die synchronisiert werden kann.</returns>
      <param name="fromInclusive">Der Startindex, einschließend.</param>
      <param name="toExclusive">Der Endindex, ausschließend.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary>Führt eine for-Schleife (For in Visual Basic) mit lokalen Threaddaten aus, in der Iterationen parallel ausgeführt und der Status der Schleife beobachtet und bearbeitet werden können.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die synchronisiert werden kann.</returns>
      <param name="fromInclusive">Der Startindex, einschließend.</param>
      <param name="toExclusive">Der Endindex, ausschließend.</param>
      <param name="localInit">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <param name="localFinally">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</param>
      <typeparam name="TLocal">Der Typ der lokalen Thread-Daten.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="body" />-Argument ist null. - oder - Das <paramref name="localInit" />-Argument ist null. - oder - Das <paramref name="localFinally" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
      <summary>Führt eine for (For in Visual Basic)-Schleife aus, in der Iterationen parallel ausgeführt und Schleifenoptionen konfiguriert werden können.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die synchronisiert werden kann.</returns>
      <param name="fromInclusive">Der Startindex, einschließend.</param>
      <param name="toExclusive">Der Endindex, ausschließend.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="body" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <summary>Führt eine for (For in Visual Basic)-Schleife aus, in der Iterationen parallel ausgeführt und Schleifenoptionen konfiguriert werden können und wo der Status der Schleife beobachtet und bearbeitet werden kann.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="fromInclusive">Der Startindex, einschließend.</param>
      <param name="toExclusive">Der Endindex, ausschließend.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="body" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary>Führt eine for (For in Visual Basic)-Schleife mit lokalen Threaddaten aus, in der Iterationen parallel ausgeführt, Schleifenoptionen konfiguriert und der Status der Schleife beobachtet und bearbeitet werden können.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="fromInclusive">Der Startindex, einschließend.</param>
      <param name="toExclusive">Der Endindex, ausschließend.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="localInit">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <param name="localFinally">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</param>
      <typeparam name="TLocal">Der Typ der lokalen Thread-Daten.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="body" />-Argument ist null. - oder - Das <paramref name="localInit" />-Argument ist null. - oder - Das <paramref name="localFinally" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null.</exception>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
      <summary>Führt eine for-Schleife (For in Visual Basic) mit 64-Bit-Indizes aus, in der Iterationen parallel ausgeführt werden können.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="fromInclusive">Der Startindex, einschließend.</param>
      <param name="toExclusive">Der Endindex, ausschließend.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <summary>Führt eine for-Schleife (For in Visual Basic) mit 64-Bit-Indizes aus, in der Iterationen parallel ausgeführt werden können und der Zustand der Schleife überwacht und bearbeitet werden kann.</summary>
      <returns>Eine <see cref="T:System.Threading.Tasks.ParallelLoopResult" />-Struktur, die Informationen darüber enthält, welcher Teil der Schleife abgeschlossen ist.</returns>
      <param name="fromInclusive">Der Startindex, einschließend.</param>
      <param name="toExclusive">Der Endindex, ausschließend.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary>Führt eine for (For in Visual Basic)-Schleife mit 64-Bit-Indizes sowie lokalen Threaddaten aus, in denen Iterationen parallel ausgeführt werden können, und der Status der Schleife kann beobachtet und bearbeitet werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="fromInclusive">Der Startindex, einschließend.</param>
      <param name="toExclusive">Der Endindex, ausschließend.</param>
      <param name="localInit">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <param name="localFinally">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</param>
      <typeparam name="TLocal">Der Typ der lokalen Thread-Daten.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="body" />-Argument ist null. - oder - Das <paramref name="localInit" />-Argument ist null. - oder - Das <paramref name="localFinally" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
      <summary>Führt eine for (For in Visual Basic)-Schleife mit 64-Bit-Indizes aus, in der Iterationen parallel ausgeführt und Schleifenoptionen konfiguriert werden können.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="fromInclusive">Der Startindex, einschließend.</param>
      <param name="toExclusive">Der Endindex, ausschließend.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="body" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <summary>Führt eine for (For in Visual Basic)-Schleife mit 64-Bit-Indizes aus, in der Iterationen parallel ausgeführt und Schleifenoptionen konfiguriert werden können, und der Status der Schleife kann beobachtet und bearbeitet werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="fromInclusive">Der Startindex, einschließend.</param>
      <param name="toExclusive">Der Endindex, ausschließend.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="body" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <summary>Führt eine for-Schleife (For in Visual Basic) mit 64-Bit Indizes und Thread-lokalen Daten aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar, und der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="fromInclusive">Der Startindex, einschließend.</param>
      <param name="toExclusive">Der Endindex, ausschließend.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="localInit">Der Funktionsdelegat, der den Ausgangszustand der lokalen Daten für jeden Thread zurückgibt.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <param name="localFinally">Der Delegat, der eine abschließende Aktion für den lokalen Zustand jedes Threads ausführt.</param>
      <typeparam name="TLocal">Der Typ der lokalen Thread-Daten.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="body" />-Argument ist null. - oder - Das <paramref name="localInit" />-Argument ist null. - oder - Das <paramref name="localFinally" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null.</exception>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit einem <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> aus. Iterationen können parallel ablaufen, und der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Der sortierbare Partitionierer, der die ursprüngliche Datenquelle enthält.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <typeparam name="TSource">Der Typ der Elemente in <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" /> sortierbaren Partitionierer gibt false zurück. - oder - Die <see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" />-Eigenschaft im nach Quelle sortierbaren Partitionierer gibt false zurück. - oder - Sämtliche Methoden im sortierbaren Quellpartitionierer geben null zurück.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit Thread-lokalen Daten für einen <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Der sortierbare Partitionierer, der die ursprüngliche Datenquelle enthält.</param>
      <param name="localInit">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <param name="localFinally">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</param>
      <typeparam name="TSource">Der Typ der Elemente in <paramref name="source" />.</typeparam>
      <typeparam name="TLocal">Der Typ der lokalen Thread-Daten.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null. - oder - Das <paramref name="localInit" />-Argument ist null. - oder - Das <paramref name="localFinally" />-Argument ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> gibt false zurück, oder der Partitionierer gibt die null-Partitionen zurück.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit einem <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> aus. Iterationen können parallel ablaufen, Schleifenoptionen sind konfigurierbar, und der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Der sortierbare Partitionierer, der die ursprüngliche Datenquelle enthält.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <typeparam name="TSource">Der Typ der Elemente in <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" /> sortierbaren Partitionierer gibt false zurück. - oder - Die Eigenschaft<see cref="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" /> im <paramref name="source" /> Partitionierer, den man sortieren kann, gibt false zurück. - oder - Die Ausnahme, die ausgelöst wird, wenn irgendwelche Methoden im <paramref name="source" /> sortierbaren Partitionierer null zurückgeben.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit 64-Bit-Indizes und Thread-lokalen Daten für einen <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Der sortierbare Partitionierer, der die ursprüngliche Datenquelle enthält.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="localInit">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <param name="localFinally">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</param>
      <typeparam name="TSource">Der Typ der Elemente in <paramref name="source" />.</typeparam>
      <typeparam name="TLocal">Der Typ der lokalen Thread-Daten.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null. - oder - Der <paramref name="localInit" /> oder das <paramref name="localFinally" />-Argument ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> gibt false zurück, oder der Partitionierer gibt die null-Partitionen zurück.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) für ein <see cref="T:System.Collections.Concurrent.Partitioner" />-Objekt aus, in dem Iterationen parallel ausgeführt werden können.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <typeparam name="TSource">Der Typ der Elemente in <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" />-Partitioner gibt false zurück. - oder - Die Ausnahme, die ausgelöst wird, wenn irgendeine Methode im <paramref name="source" />-Partitionierer null zurückgibt. - oder - Die <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" />-Methode im <paramref name="source" />-Partitioner gibt nicht die korrekte Anzahl von Partitionen zurück.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit einem <see cref="T:System.Collections.Concurrent.Partitioner" /> aus. Iterationen können parallel ablaufen, und der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <typeparam name="TSource">Der Typ der Elemente in <paramref name="source" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" />-Partitioner gibt false zurück. - oder - Eine Methode im <paramref name="source" />-Partitioner gibt null zurück. - oder - Die <see cref="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" />-Methode im <paramref name="source" />-Partitioner gibt nicht die korrekte Anzahl von Partitionen zurück.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit Thread-lokalen Daten für einen <see cref="T:System.Collections.Concurrent.Partitioner" /> aus. Iterationen können parallel ablaufen. Der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</param>
      <param name="localInit">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <param name="localFinally">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</param>
      <typeparam name="TSource">Der Typ der Elemente in <paramref name="source" />.</typeparam>
      <typeparam name="TLocal">Der Typ der lokalen Thread-Daten.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null. - oder - Das <paramref name="localInit" />-Argument ist null. - oder - Das <paramref name="localFinally" />-Argument ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> gibt false zurück, oder der Partitionierer gibt die null-Partitionen zurück.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <summary>Führt einen following examplereach-Vorgang (For Each in Visual Basic) mit einem <see cref="T:System.Collections.Concurrent.Partitioner" /> aus. Iterationen können parallel ausgeführt werden, Schleifenoptionen sind konfigurierbar.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <typeparam name="TSource">Der Typ der Elemente in <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" />-Partitioner gibt false zurück. - oder - Die Ausnahme, die ausgelöst wird, wenn irgendeine Methode im <paramref name="source" />-Partitionierer null zurückgibt.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit einem <see cref="T:System.Collections.Concurrent.Partitioner" /> aus. Iterationen können parallel ablaufen, Schleifenoptionen sind konfigurierbar, und der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die synchronisiert werden kann.</returns>
      <param name="source">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <typeparam name="TSource">Der Typ der Elemente in <paramref name="source" />.</typeparam>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" />-Partitioner gibt false zurück. - oder - Die Ausnahme, die ausgelöst wird, wenn irgendeine Methode im <paramref name="source" />-Partitionierer null zurückgibt.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit Thread-lokalen Daten für einen <see cref="T:System.Collections.Concurrent.Partitioner" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Der Partitionierer, der die ursprüngliche Datenquelle enthält.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="localInit">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <param name="localFinally">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</param>
      <typeparam name="TSource">Der Typ der Elemente in <paramref name="source" />.</typeparam>
      <typeparam name="TLocal">Der Typ der lokalen Thread-Daten.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null. - oder - Das <paramref name="localInit" />-Argument ist null. - oder - Das <paramref name="localFinally" />-Argument ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />-Eigenschaft im <paramref name="source" /><see cref="T:System.Collections.Concurrent.Partitioner" /> gibt false zurück, oder der Partitionierer gibt die null-Partitionen zurück.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit einem <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Eine auflistbare Datenquelle.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <typeparam name="TSource">Der Datentyp in der Quelle.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit einem <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Eine auflistbare Datenquelle.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <typeparam name="TSource">Der Datentyp in der Quelle.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit 64-Bit-Indizes für einen <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ausgeführt werden. Der Schleifenzustand kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Eine auflistbare Datenquelle.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <typeparam name="TSource">Der Datentyp in der Quelle.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit Thread-lokalen Daten für einen <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Eine auflistbare Datenquelle.</param>
      <param name="localInit">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <param name="localFinally">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</param>
      <typeparam name="TSource">Der Datentyp in der Quelle.</typeparam>
      <typeparam name="TLocal">Der Typ der lokalen Thread-Daten.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null. - oder - Das <paramref name="localInit" />-Argument ist null. - oder - Das <paramref name="localFinally" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit Thread-lokalen Daten für einen <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Eine auflistbare Datenquelle.</param>
      <param name="localInit">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <param name="localFinally">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</param>
      <typeparam name="TSource">Der Datentyp in der Quelle.</typeparam>
      <typeparam name="TLocal">Der Typ der lokalen Thread-Daten.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null. - oder - Das <paramref name="localInit" />-Argument ist null. - oder - Das <paramref name="localFinally" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit einem <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Eine auflistbare Datenquelle.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <typeparam name="TSource">Der Datentyp in der Quelle.</typeparam>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit einem <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Eine auflistbare Datenquelle.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <typeparam name="TSource">Der Datentyp in der Quelle.</typeparam>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit 64-Bit-Indizes für einen <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Eine auflistbare Datenquelle.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <typeparam name="TSource">Der Datentyp in der Quelle.</typeparam>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit Thread-lokalen Daten für einen <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Eine auflistbare Datenquelle.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="localInit">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <param name="localFinally">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</param>
      <typeparam name="TSource">Der Datentyp in der Quelle.</typeparam>
      <typeparam name="TLocal">Der Typ der lokalen Thread-Daten.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null. - oder - Das <paramref name="localInit" />-Argument ist null. - oder - Das <paramref name="localFinally" />-Argument ist null.</exception>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <summary>Führt einen foreach-Vorgang (For Each in Visual Basic) mit Thread-lokalen Daten und 64-Bit-Indizes für einen <see cref="T:System.Collections.IEnumerable" /> aus. Iterationen können parallel ablaufen. Schleifenoptionen sind konfigurierbar. Der Schleifenstatus kann beobachtet und manipuliert werden.</summary>
      <returns>Eine Struktur, die Informationen darüber enthält, welcher Abschnitt der Schleife abgeschlossen ist.</returns>
      <param name="source">Eine auflistbare Datenquelle.</param>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="localInit">Der Funktionsdelegat, der den ursprünglichen Zustand der lokalen Daten für jede Aufgabe zurückgibt.</param>
      <param name="body">Der Delegat, der einmal pro Iteration aufgerufen wird.</param>
      <param name="localFinally">Der Delegat, der die endgültige Aktion beim lokalen Status jeder Aufgabe ausführt.</param>
      <typeparam name="TSource">Der Datentyp in der Quelle.</typeparam>
      <typeparam name="TLocal">Der Typ der lokalen Thread-Daten.</typeparam>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="source" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null. - oder - Das <paramref name="body" />-Argument ist null. - oder - Das <paramref name="localInit" />-Argument ist null. - oder - Das <paramref name="localFinally" />-Argument ist null.</exception>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" />-Argument wird abgebrochen.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
      <exception cref="T:System.AggregateException">Die Ausnahme, die alle einzelnen, auf allen Threads ausgelösten Ausnahmen enthält.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
      <summary>Führt jede der bereitgestellten Aktionen aus (möglicherweise parallel).</summary>
      <param name="actions">Ein Array auszuführender <see cref="T:System.Action" />.</param>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="actions" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Diese Ausnahme wird ausgelöst, wenn eine beliebige Aktion im <paramref name="actions" />-Array eine Ausnahme auslöst.</exception>
      <exception cref="T:System.ArgumentException">Ein <paramref name="actions" />-Array enthält ein null-Element.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
      <summary>Führt die einzelnen bereitgestellten Aktionen (nach Möglichkeit parallel) aus, es sei denn, der Vorgang wird vom Benutzer abgebrochen.</summary>
      <param name="parallelOptions">Ein Objekt, das das Verhalten dieses Vorgangs konfiguriert.</param>
      <param name="actions">Ein Array auszuführender Aktionen.</param>
      <exception cref="T:System.OperationCanceledException">Die <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> ist festgelegt.</exception>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="actions" />-Argument ist null. - oder - Das <paramref name="parallelOptions" />-Argument ist null.</exception>
      <exception cref="T:System.AggregateException">Diese Ausnahme wird ausgelöst, wenn eine beliebige Aktion im <paramref name="actions" />-Array eine Ausnahme auslöst.</exception>
      <exception cref="T:System.ArgumentException">Ein <paramref name="actions" />-Array enthält ein null-Element.</exception>
      <exception cref="T:System.ObjectDisposedException">Die <see cref="T:System.Threading.CancellationTokenSource" />, die der <see cref="T:System.Threading.CancellationToken" /> im <paramref name="parallelOptions" /> zugeordnet ist, ist gelöscht worden.</exception>
    </member>
    <member name="T:System.Threading.Tasks.ParallelLoopResult">
      <summary>Gibt den Status der Ausführung einer <see cref="T:System.Threading.Tasks.Parallel" />-Schleife an.</summary>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopResult.IsCompleted">
      <summary>Ruft ab, ob die Schleife bis zum Abschluss ausgeführt wurde, das heißt, dass alle Iterationen der Schleife ausgeführt wurden und keine Anforderung eines vorzeitigen Abbruchs an die Schleife gesendet wurde.</summary>
      <returns>True, wenn die Schleife zum Abschluss ausgeführt wurde, andernfalls false.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration">
      <summary>Ruft den Indes der niedrigsten Iteration ab, von der <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> aufgerufen wurde.</summary>
      <returns>Gibt eine ganze Zahl zurück, die die niedrigste Iteration darstellt, aus der die Break-Anweisung aufgerufen wurde.</returns>
    </member>
    <member name="T:System.Threading.Tasks.ParallelLoopState">
      <summary>Ermöglicht Iterationen von <see cref="T:System.Threading.Tasks.Parallel" />-Schleifen die Interaktion mit anderen Iterationen. Eine Instanz dieser Klasse wird von der Parallel-Klasse für jede Schleife bereitgestellt. Sie können keine Instanzen im Benutzercode erstellen.</summary>
    </member>
    <member name="M:System.Threading.Tasks.ParallelLoopState.Break">
      <summary>Gibt an, dass die <see cref="T:System.Threading.Tasks.Parallel" />-Schleife die Ausführung von Iterationen nach der aktuellen Iteration beenden soll, sobald es dem System möglich ist.</summary>
      <exception cref="T:System.InvalidOperationException">Die <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" />-Methode wurde bereits zuvor aufgerufen. <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> und <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> können von Iterationen derselben Schleife nicht in Kombination verwendet werden.</exception>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.IsExceptional">
      <summary>Ruft einen Wert ab, der angibt, ob eine Iteration der Schleife eine Ausnahme ausgelöst hat, die nicht durch diese Iteration behandelt wurde.</summary>
      <returns>True, wenn eine nicht behandelte Ausnahme ausgelöst wurde, andernfalls false.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.IsStopped">
      <summary>Ruft einen Wert ab, der angibt, ob eine Iteration der Schleife <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> aufgerufen hat.</summary>
      <returns>True, wenn die Schleife durch eine Iteration beendet wurde, andernfalls false.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration">
      <summary>Ruft die niedrigste Iteration der Schleife ab, von der <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> aufgerufen wurde.</summary>
      <returns>Eine ganze Zahl, die die niedrigste Iteration darstellt, aus der Break aufgerufen wurde. Bei einer <see cref="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" />-Schleife basiert der Wert auf einem intern generierten Index.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration">
      <summary>Ruft einen Wert ab, der angibt, ob die aktuelle Iteration der Schleife basierend auf Anforderungen dieser oder anderer Iterationen beendet werden soll.</summary>
      <returns>True, wenn die aktuelle Iteration beendet werden soll, andernfalls false.</returns>
    </member>
    <member name="M:System.Threading.Tasks.ParallelLoopState.Stop">
      <summary>Gibt an, dass die <see cref="T:System.Threading.Tasks.Parallel" />-Schleife die Ausführung beenden soll, sobald es dem System möglich ist.</summary>
      <exception cref="T:System.InvalidOperationException">Die <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" />-Methode wurde bereits zuvor aufgerufen. <see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /> und <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop" /> können von Iterationen derselben Schleife nicht in Kombination verwendet werden.</exception>
    </member>
    <member name="T:System.Threading.Tasks.ParallelOptions">
      <summary>Speichert Optionen, die die Ausführung von Methoden für die <see cref="T:System.Threading.Tasks.Parallel" />-Klasse konfigurieren.</summary>
    </member>
    <member name="M:System.Threading.Tasks.ParallelOptions.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Threading.Tasks.ParallelOptions" />-Klasse.</summary>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.CancellationToken">
      <summary>Ruft das <see cref="T:System.Threading.CancellationToken" /> ab, das dieser <see cref="T:System.Threading.Tasks.ParallelOptions" />-Instanz zugeordnet ist, oder legt dieses fest.</summary>
      <returns>Das Token, das dieser Instanz zugeordnet ist.</returns>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism">
      <summary>Ruft den maximalen Grad an Parallelität dieser ParallelOptions-Instanz ab oder legt ihn fest.</summary>
      <returns>Eine ganze Zahl, die den maximalen Parallelitätsgrad darstellt.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Ausnahme, die ausgelöst wird, wenn dieser <see cref="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" /> auf 0 (null) oder einen Wert kleiner -1 festgelegt wird.</exception>
    </member>
    <member name="P:System.Threading.Tasks.ParallelOptions.TaskScheduler">
      <summary>Ruft das <see cref="T:System.Threading.Tasks.TaskScheduler" /> ab, das dieser <see cref="T:System.Threading.Tasks.ParallelOptions" />-Instanz zugeordnet ist, oder legt dieses fest. Durch Festlegen dieser Eigenschaft auf NULL wird angegeben, dass der aktuelle Taskplaner verwendet werden soll.</summary>
      <returns>Der Taskplaner, der dieser Instanz zugeordnet ist.</returns>
    </member>
  </members>
</doc>