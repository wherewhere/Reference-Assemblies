<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Text.Encoding</name>
  </assembly>
  <members>
    <member name="T:System.Text.Decoder">
      <summary>Convierte una secuencia de bytes codificados en un juego de caracteres.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Decoder.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Text.Decoder" />.</summary>
    </member>
    <member name="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
      <summary>Convierte una matriz de bytes codificados en caracteres codificados URF-16 y almacena el resultado en una matriz de caracteres.</summary>
      <param name="bytes">Matriz de bytes que se va a convertir.</param>
      <param name="byteIndex">Primer elemento de <paramref name="bytes" /> que se va a convertir.</param>
      <param name="byteCount">Número de elementos de <paramref name="bytes" /> que se van a convertir.</param>
      <param name="chars">Matriz para almacenar los caracteres convertidos.</param>
      <param name="charIndex">Primer elemento de <paramref name="chars" /> en el que se almacenan los datos.</param>
      <param name="charCount">Número máximo de elementos de <paramref name="chars" /> que se van a utilizar en la conversión.</param>
      <param name="flush">Es true para indicar que no se van a convertir más datos; de lo contrario, es false.</param>
      <param name="bytesUsed">El resultado que devuelve este método contiene el número de bytes utilizados en la conversión. Este parámetro se pasa sin inicializar.</param>
      <param name="charsUsed">El resultado que devuelve este método contiene el número de caracteres de <paramref name="chars" /> que ha creado la conversión. Este parámetro se pasa sin inicializar.</param>
      <param name="completed">El resultado que devuelve este método contiene true si se han convertido todos los caracteres especificados por <paramref name="byteCount" />; de lo contrario, contiene false. Este parámetro se pasa sin inicializar.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="chars" /> o <paramref name="bytes" /> es null (Nothing).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="charIndex" />, <paramref name="charCount" />, <paramref name="byteIndex" /> o <paramref name="byteCount" /> es menor que cero. O bien Longitud de <paramref name="chars" />.  - <paramref name="charIndex" /> es menor que <paramref name="charCount" />. O bien Longitud de <paramref name="bytes" />.  - <paramref name="byteIndex" /> es menor que <paramref name="byteCount" />.</exception>
      <exception cref="T:System.ArgumentException">El búfer de salida no tiene capacidad para contener las entradas convertidas. El búfer de salida debe tener un tamaño mayor o igual que el indicado por el método <see cref="Overload:System.Text.Decoder.GetCharCount" />.</exception>
      <exception cref="T:System.Text.DecoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación más completa) - y - La propiedad <see cref="P:System.Text.Decoder.Fallback" /> está establecida en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary>Cuando se reemplaza en una clase derivada, calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes de la matriz de bytes especificada.</summary>
      <returns>Número de caracteres que se genera al descodificar la secuencia de bytes especificada y cualquier byte del búfer interno.</returns>
      <param name="bytes">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="index">Índice del primer byte que se va a descodificar.</param>
      <param name="count">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="bytes" /> es null (Nothing).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="index" /> o <paramref name="count" /> es menor que cero. O bien  <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.</exception>
      <exception cref="T:System.Text.DecoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación más completa) - y - La propiedad <see cref="P:System.Text.Decoder.Fallback" /> está establecida en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Cuando se reemplaza en una clase derivada, calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes de la matriz de bytes especificada. Un parámetro indica si el estado interno del descodificador se borra después del cálculo.</summary>
      <returns>Número de caracteres que se genera al descodificar la secuencia de bytes especificada y cualquier byte del búfer interno.</returns>
      <param name="bytes">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="index">Índice del primer byte que se va a descodificar.</param>
      <param name="count">Número de bytes que se van a descodificar.</param>
      <param name="flush">Es true para simular el borrado del estado interno del codificador después del cálculo; de lo contrario, es false.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="bytes" /> es null (Nothing).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="index" /> o <paramref name="count" /> es menor que cero. O bien  <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.</exception>
      <exception cref="T:System.Text.DecoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación más completa) - y - La propiedad <see cref="P:System.Text.Decoder.Fallback" /> está establecida en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary>Cuando se reemplaza en una clase derivada, descodifica una secuencia de bytes de la matriz de bytes especificada y cualquier byte del búfer interno en la matriz de caracteres especificada.</summary>
      <returns>Número real de caracteres escrito en <paramref name="chars" />.</returns>
      <param name="bytes">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="byteIndex">Índice del primer byte que se va a descodificar.</param>
      <param name="byteCount">Número de bytes que se van a descodificar.</param>
      <param name="chars">Matriz de caracteres que va a contener el juego de caracteres resultante.</param>
      <param name="charIndex">Índice en el que se inicia la escritura del conjunto de caracteres resultante.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="bytes" /> es null (Nothing). O bien  El valor de <paramref name="chars" /> es null  (Nothing).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> o <paramref name="charIndex" /> es menor que cero. O bien  <paramref name="byteindex" /> y <paramref name="byteCount" /> no denotan un intervalo válido en <paramref name="bytes" />. O bien  <paramref name="charIndex" /> no es un índice válido para <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="chars" /> no tiene suficiente capacidad desde <paramref name="charIndex" /> hasta el final de la matriz para aloja los caracteres resultantes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación más completa) - y - La propiedad <see cref="P:System.Text.Decoder.Fallback" /> está establecida en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
      <summary>Cuando se reemplaza en una clase derivada, descodifica una secuencia de bytes de la matriz de bytes especificada y cualquier byte del búfer interno en la matriz de caracteres especificada. Un parámetro indica si el estado interno del descodificador se borra después de la conversión.</summary>
      <returns>Número real de caracteres escrito en el parámetro <paramref name="chars" />.</returns>
      <param name="bytes">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="byteIndex">Índice del primer byte que se va a descodificar.</param>
      <param name="byteCount">Número de bytes que se van a descodificar.</param>
      <param name="chars">Matriz de caracteres que va a contener el juego de caracteres resultante.</param>
      <param name="charIndex">Índice en el que se inicia la escritura del conjunto de caracteres resultante.</param>
      <param name="flush">Es true para borrar el estado interno del descodificador después de la conversión; de lo contrario, es false.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="bytes" /> es null (Nothing). O bien  El valor de <paramref name="chars" /> es null  (Nothing).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> o <paramref name="charIndex" /> es menor que cero. O bien  <paramref name="byteindex" /> y <paramref name="byteCount" /> no denotan un intervalo válido en <paramref name="bytes" />. O bien  <paramref name="charIndex" /> no es un índice válido para <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="chars" /> no tiene suficiente capacidad desde <paramref name="charIndex" /> hasta el final de la matriz para aloja los caracteres resultantes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación más completa) - y - La propiedad <see cref="P:System.Text.Decoder.Fallback" /> está establecida en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Decoder.Reset">
      <summary>Cuando se reemplaza en una clase derivada, reestablece el estado inicial del descodificador.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Text.DecoderFallbackException">
      <summary>Excepción que se produce cuando una operación de retroceso del descodificador (decoder fallback) no se realiza correctamente. Esta clase no puede heredarse.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.DecoderFallbackException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Text.DecoderFallbackException" />.</summary>
    </member>
    <member name="M:System.Text.DecoderFallbackException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Text.DecoderFallbackException" />. Un parámetro especifica el mensaje de error.</summary>
      <param name="message">Mensaje de error.</param>
    </member>
    <member name="M:System.Text.DecoderFallbackException.#ctor(System.String,System.Byte[],System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Text.DecoderFallbackException" />. Los parámetros especifican el mensaje de error, la matriz de bytes que se está descodificando y el índice del byte que no se puede descodificar.</summary>
      <param name="message">Mensaje de error.</param>
      <param name="bytesUnknown">Matriz de bytes de entrada.</param>
      <param name="index">Posición de índice en <paramref name="bytesUnknown" /> del byte que no se puede descodificar.</param>
    </member>
    <member name="M:System.Text.DecoderFallbackException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Text.DecoderFallbackException" />. Los parámetros especifican el mensaje de error y la excepción interna que es la causa de esta excepción.</summary>
      <param name="message">Mensaje de error.</param>
      <param name="innerException">Excepción que produjo esta excepción.</param>
    </member>
    <member name="P:System.Text.DecoderFallbackException.BytesUnknown">
      <summary>Obtiene la secuencia de bytes de entrada que produjo la excepción.</summary>
      <returns>Matriz de bytes de entrada que no se puede descodificar.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Text.DecoderFallbackException.Index">
      <summary>Obtiene la posición de índice en la secuencia de bytes de entrada del byte que produjo la excepción.</summary>
      <returns>Posición de índice en la matriz de bytes de entrada del byte que no se puede descodificar. La posición de índice es de base cero.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Text.Encoder">
      <summary>Codifica un juego de caracteres en una secuencia de bytes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoder.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Text.Encoder" />.</summary>
    </member>
    <member name="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
      <summary>Convierte una matriz de caracteres Unicode en una secuencia de bytes codificada y almacena el resultado en una matriz de bytes.</summary>
      <param name="chars">Matriz de caracteres que se van a convertir.</param>
      <param name="charIndex">Primer elemento de <paramref name="chars" /> que se va a convertir.</param>
      <param name="charCount">Número de elementos de <paramref name="chars" /> que se van a convertir.</param>
      <param name="bytes">Matriz donde se almacenan los bytes convertidos.</param>
      <param name="byteIndex">Primer elemento de <paramref name="bytes" /> en el que se almacenan datos.</param>
      <param name="byteCount">Número máximo de elementos de <paramref name="bytes" /> que se van a utilizar en la conversión.</param>
      <param name="flush">Es true para indicar que no se van a convertir más datos; en caso contrario, es false.</param>
      <param name="charsUsed">El resultado de este método contiene el número de caracteres de <paramref name="chars" /> utilizados en la conversión. Este parámetro se pasa sin inicializar.</param>
      <param name="bytesUsed">El resultado de este método contiene el número de bytes generados por la conversión. Este parámetro se pasa sin inicializar.</param>
      <param name="completed">El resultado que devuelve este método contiene true si se han convertido todos los caracteres especificados por <paramref name="charCount" />; de lo contrario, contiene false. Este parámetro se pasa sin inicializar.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="chars" /> o <paramref name="bytes" /> es null (Nothing).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="charIndex" />, <paramref name="charCount" />, <paramref name="byteIndex" /> o <paramref name="byteCount" /> es menor que cero. O bien Longitud de <paramref name="chars" />.  - <paramref name="charIndex" /> es menor que <paramref name="charCount" />. O bien Longitud de <paramref name="bytes" />.  - <paramref name="byteIndex" /> es menor que <paramref name="byteCount" />.</exception>
      <exception cref="T:System.ArgumentException">El búfer de salida no tiene capacidad para contener las entradas convertidas. El búfer de salida debe tener un tamaño mayor o igual que el indicado por el método <see cref="Overload:System.Text.Encoder.GetByteCount" />.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación más completa) - y - La propiedad <see cref="P:System.Text.Encoder.Fallback" /> está establecida en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
      <summary>Cuando se reemplaza en una clase derivada, calcula el número de bytes generado al codificar un juego de caracteres de la matriz de caracteres especificada. Un parámetro indica si se debe borrar el estado interno del codificador después del cálculo.</summary>
      <returns>Número de bytes generado al codificar los caracteres especificados y cualquier carácter del búfer interno.</returns>
      <param name="chars">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</param>
      <param name="index">Índice del primer carácter que se va a codificar.</param>
      <param name="count">Número de caracteres que se van a codificar.</param>
      <param name="flush">Es true para simular el borrado del estado interno del codificador después del cálculo; de lo contrario, es false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="index" /> o <paramref name="count" /> es menor que cero. O bien  <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="chars" />.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación más completa) - y - La propiedad <see cref="P:System.Text.Encoder.Fallback" /> está establecida en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
      <summary>Cuando se reemplaza en una clase derivada, codifica un juego de caracteres de la matriz de caracteres especificada y cualquier carácter del búfer interno en la matriz de bytes especificada. Un parámetro indica si se debe borrar el estado interno del codificador después de la conversión.</summary>
      <returns>Número real de bytes escritos en <paramref name="bytes" />.</returns>
      <param name="chars">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</param>
      <param name="charIndex">Índice del primer carácter que se va a codificar.</param>
      <param name="charCount">Número de caracteres que se van a codificar.</param>
      <param name="bytes">Matriz de bytes que va a contener la secuencia de bytes resultante.</param>
      <param name="byteIndex">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</param>
      <param name="flush">Es true para borrar el estado interno del codificador después de la conversión; de lo contrario, es false.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="chars" /> es null  (Nothing). O bien  El valor de <paramref name="bytes" /> es null (Nothing).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero. O bien  <paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />. O bien  <paramref name="byteIndex" /> no es un índice válido en <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación más completa) - y - La propiedad <see cref="P:System.Text.Encoder.Fallback" /> está establecida en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Text.EncoderFallbackException">
      <summary>La excepción que se produce cuando se produce un error en la operación de reserva de codificador. Esta clase no puede heredarse.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.EncoderFallbackException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Text.EncoderFallbackException" />.</summary>
    </member>
    <member name="M:System.Text.EncoderFallbackException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Text.EncoderFallbackException" />. Un parámetro especifica el mensaje de error.</summary>
      <param name="message">Mensaje de error.</param>
    </member>
    <member name="M:System.Text.EncoderFallbackException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Text.EncoderFallbackException" />. Los parámetros especifican el mensaje de error y la excepción interna que es la causa de esta excepción.</summary>
      <param name="message">Mensaje de error.</param>
      <param name="innerException">Excepción que produjo esta excepción.</param>
    </member>
    <member name="P:System.Text.EncoderFallbackException.CharUnknown">
      <summary>Obtiene el carácter de entrada que produjo la excepción.</summary>
      <returns>El carácter que no se puede codificar.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Text.EncoderFallbackException.CharUnknownHigh">
      <summary>Obtiene el carácter de componente alto del par suplente que produjo la excepción.</summary>
      <returns>El carácter de componente alto del par suplente que no se puede codificar.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Text.EncoderFallbackException.CharUnknownLow">
      <summary>Obtiene el carácter de componente bajo del par suplente que produjo la excepción.</summary>
      <returns>El carácter de componente bajo del par suplente que no se puede codificar.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Text.EncoderFallbackException.Index">
      <summary>Obtiene la posición de índice en el búfer de entrada del carácter que ha producido la excepción.</summary>
      <returns>La posición de índice en el búfer de entrada del carácter que no se puede codificar.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Text.Encoding">
      <summary>Representa una codificación de carácter.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Text.Encoding" />.</summary>
    </member>
    <member name="P:System.Text.Encoding.BigEndianUnicode">
      <summary>Obtiene una codificación para el formato UTF-16 utilizando el orden de bytes big endian.</summary>
      <returns>Un objeto de codificación para el formato UTF-16 que utiliza el orden de bytes big endian.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])">
      <summary>Convierte una matriz de bytes completa de una codificación a otra.</summary>
      <returns>Una matriz de tipo <see cref="T:System.Byte" /> que contiene el resultado de convertir <paramref name="bytes" /> de <paramref name="srcEncoding" /> a <paramref name="dstEncoding" />.</returns>
      <param name="srcEncoding">Formato de codificación de <paramref name="bytes" />.</param>
      <param name="dstEncoding">Formato de codificación de destino.</param>
      <param name="bytes">Bytes que se van a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="srcEncoding" /> es null. O bien  <paramref name="dstEncoding" /> es null. O bien  <paramref name="bytes" /> es null.</exception>
      <exception cref="T:System.Text.DecoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - srcEncoding.<see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - dstEncoding.<see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)">
      <summary>Convierte un intervalo de bytes de una matriz de bytes de una codificación a otra.</summary>
      <returns>Matriz de tipo <see cref="T:System.Byte" /> que contiene el resultado de convertir un intervalo de bytes de <paramref name="bytes" /> de <paramref name="srcEncoding" /> a <paramref name="dstEncoding" />.</returns>
      <param name="srcEncoding">La codificación de la matriz de origen, <paramref name="bytes" />.</param>
      <param name="dstEncoding">Codificación de la matriz de salida.</param>
      <param name="bytes">Matriz de bytes que se convierte.</param>
      <param name="index">Índice del primer elemento de <paramref name="bytes" /> que se convierte.</param>
      <param name="count">Número de bytes que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="srcEncoding" /> es null. O bien  <paramref name="dstEncoding" /> es null. O bien  <paramref name="bytes" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> y <paramref name="count" /> no especifican un intervalo válido en la matriz de bytes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - srcEncoding.<see cref="P:System.Text.Encoding.DecoderFallback" /> está establecido en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - dstEncoding.<see cref="P:System.Text.Encoding.EncoderFallback" /> está establecido en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.Equals(System.Object)">
      <summary>Determina si la clase <see cref="T:System.Object" /> especificada es igual a la instancia actual.</summary>
      <returns>true si <paramref name="value" /> es una instancia de <see cref="T:System.Text.Encoding" /> y es igual a la instancia actual; en caso contrario, false.</returns>
      <param name="value">
        <see cref="T:System.Object" /> que se va a comparar con la instancia actual.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetByteCount(System.Char[])">
      <summary>Cuando se reemplaza en una clase derivada, calcula el número de bytes generados al codificar todos los caracteres de la matriz de caracteres especificada.</summary>
      <returns>El número de bytes generados al codificar todos los caracteres de la matriz de caracteres especificada.</returns>
      <param name="chars">Matriz de caracteres que contiene los caracteres que se codifican.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> es null.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecida en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <summary>Cuando se reemplaza en una clase derivada, calcula el número de bytes generado al codificar un juego de caracteres de la matriz de caracteres especificada.</summary>
      <returns>Número de bytes que se generan al codificar los caracteres especificados.</returns>
      <param name="chars">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</param>
      <param name="index">Índice del primer carácter que se va a codificar.</param>
      <param name="count">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="index" /> o <paramref name="count" /> es menor que cero. O bien  <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="chars" />.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecida en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetByteCount(System.String)">
      <summary>Cuando se invalida en una clase derivada, calcula el número de bytes que se generan al codificar los caracteres de la cadena especificada.</summary>
      <returns>Número de bytes que se generan al codificar los caracteres especificados.</returns>
      <param name="s">Cadena que contiene el juego de caracteres que se va a codificar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es null.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecida en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetBytes(System.Char[])">
      <summary>Cuando se reemplaza en una clase derivada, codifica todos los caracteres de la matriz de caracteres especificada en una secuencia de bytes.</summary>
      <returns>Una matriz de bytes que contiene los resultados de codificar el juego de caracteres especificado.</returns>
      <param name="chars">Matriz de caracteres que contiene los caracteres que se codifican.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> es null.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecida en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)">
      <summary>Cuando se reemplaza en una clase derivada, codifica un juego de caracteres de la matriz de caracteres especificada en una secuencia de bytes.</summary>
      <returns>Una matriz de bytes que contiene los resultados de codificar el juego de caracteres especificado.</returns>
      <param name="chars">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</param>
      <param name="index">Índice del primer carácter que se va a codificar.</param>
      <param name="count">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="index" /> o <paramref name="count" /> es menor que cero. O bien  <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="chars" />.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecida en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>Cuando se reemplaza en una clase derivada, codifica un juego de caracteres de la matriz de caracteres especificada en la matriz de bytes especificada.</summary>
      <returns>Número real de bytes escritos en <paramref name="bytes" />.</returns>
      <param name="chars">Matriz de caracteres que contiene el juego de caracteres que se va a codificar.</param>
      <param name="charIndex">Índice del primer carácter que se va a codificar.</param>
      <param name="charCount">Número de caracteres que se van a codificar.</param>
      <param name="bytes">Matriz de bytes que va a contener la secuencia de bytes resultante.</param>
      <param name="byteIndex">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> es null. O bien  <paramref name="bytes" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero. O bien  <paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />. O bien  <paramref name="byteIndex" /> no es un índice válido en <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecida en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetBytes(System.String)">
      <summary>Cuando se invalida en una clase derivada, codifica todos los caracteres de la cadena especificada en una secuencia de bytes.</summary>
      <returns>Una matriz de bytes que contiene los resultados de codificar el juego de caracteres especificado.</returns>
      <param name="s">Cadena que contiene los caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es null.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecida en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
      <summary>Cuando se invalida en una clase derivada, codifica un juego de caracteres de la cadena especificada en la matriz de bytes especificada.</summary>
      <returns>Número real de bytes escritos en <paramref name="bytes" />.</returns>
      <param name="s">Cadena que contiene el juego de caracteres que se va a codificar.</param>
      <param name="charIndex">Índice del primer carácter que se va a codificar.</param>
      <param name="charCount">Número de caracteres que se van a codificar.</param>
      <param name="bytes">Matriz de bytes que va a contener la secuencia de bytes resultante.</param>
      <param name="byteIndex">Índice en el que se inicia la escritura de la secuencia de bytes resultante.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es null. O bien  <paramref name="bytes" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="charIndex" />, <paramref name="charCount" /> o <paramref name="byteIndex" /> es menor que cero. O bien  <paramref name="charIndex" /> y <paramref name="charCount" /> no denotan un intervalo válido en <paramref name="chars" />. O bien  <paramref name="byteIndex" /> no es un índice válido en <paramref name="bytes" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="bytes" /> no tiene suficiente capacidad desde <paramref name="byteIndex" /> hasta el final de la matriz para alojar los bytes resultantes.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecida en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetCharCount(System.Byte[])">
      <summary>Cuando se reemplaza en una clase derivada, calcula el número de caracteres generados al descodificar todos los bytes de la matriz de bytes especificada.</summary>
      <returns>Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</returns>
      <param name="bytes">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> es null.</exception>
      <exception cref="T:System.Text.DecoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecida en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <summary>Cuando se reemplaza en una clase derivada, calcula el número de caracteres generado mediante la descodificación de una secuencia de bytes de la matriz de bytes especificada.</summary>
      <returns>Número de caracteres que se generan al descodificar la secuencia especificada de bytes.</returns>
      <param name="bytes">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="index">Índice del primer byte que se va a descodificar.</param>
      <param name="count">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="index" /> o <paramref name="count" /> es menor que cero. O bien  <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.</exception>
      <exception cref="T:System.Text.DecoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecida en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetChars(System.Byte[])">
      <summary>Cuando se reemplaza en una clase derivada, descodifica todos los bytes de la matriz de bytes especificada en un juego de caracteres.</summary>
      <returns>Una matriz de caracteres que contiene los resultados obtenidos al descodificar la secuencia de bytes especificada.</returns>
      <param name="bytes">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> es null.</exception>
      <exception cref="T:System.Text.DecoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecida en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)">
      <summary>Cuando se reemplaza en una clase derivada, descodifica una secuencia de bytes de la matriz de bytes especificada en un juego de caracteres.</summary>
      <returns>Una matriz de caracteres que contiene los resultados obtenidos al descodificar la secuencia de bytes especificada.</returns>
      <param name="bytes">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="index">Índice del primer byte que se va a descodificar.</param>
      <param name="count">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="index" /> o <paramref name="count" /> es menor que cero. O bien  <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.</exception>
      <exception cref="T:System.Text.DecoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecida en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary>Cuando se reemplaza en una clase derivada, descodifica una secuencia de bytes de la matriz de bytes especificada en la matriz de caracteres especificada.</summary>
      <returns>Número real de caracteres escrito en <paramref name="chars" />.</returns>
      <param name="bytes">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="byteIndex">Índice del primer byte que se va a descodificar.</param>
      <param name="byteCount">Número de bytes que se van a descodificar.</param>
      <param name="chars">Matriz de caracteres que va a contener el juego de caracteres resultante.</param>
      <param name="charIndex">Índice en el que se inicia la escritura del conjunto de caracteres resultante.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> es null. O bien  <paramref name="chars" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="byteIndex" />, <paramref name="byteCount" /> o <paramref name="charIndex" /> es menor que cero. O bien  <paramref name="byteindex" /> y <paramref name="byteCount" /> no denotan un intervalo válido en <paramref name="bytes" />. O bien  <paramref name="charIndex" /> no es un índice válido para <paramref name="chars" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="chars" /> no tiene suficiente capacidad desde <paramref name="charIndex" /> hasta el final de la matriz para aloja los caracteres resultantes.</exception>
      <exception cref="T:System.Text.DecoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecida en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetDecoder">
      <summary>Cuando se reemplaza en una clase derivada, obtiene un descodificador que convierte una secuencia de bytes codificada en una secuencia de caracteres.</summary>
      <returns>Una clase <see cref="T:System.Text.Decoder" /> que convierte una secuencia de bytes codificada en una secuencia de caracteres.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetEncoder">
      <summary>Cuando se reemplaza en una clase derivada, obtiene un codificador que convierte una secuencia de caracteres Unicode en una secuencia de bytes codificada.</summary>
      <returns>Clase <see cref="T:System.Text.Encoder" /> que convierte una secuencia de caracteres Unicode en una secuencia de bytes codificada.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetEncoding(System.String)">
      <summary>Devuelve la codificación asociada al nombre de la página de códigos especificada.</summary>
      <returns>La codificación asociada a la página de códigos especificada.</returns>
      <param name="name">Nombre de página de códigos de la codificación preferida. Cualquier valor devuelto por la propiedad <see cref="P:System.Text.Encoding.WebName" /> es válido. Se hace una lista de los valores posibles en la columna Nombre de la tabla que aparece en el tema de la clase <see cref="T:System.Text.Encoding" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> no es un nombre de página de códigos válido. O bien  La página de códigos indicada por <paramref name="name" /> no es compatible con la plataforma subyacente.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetHashCode">
      <summary>Devuelve el código hash de la instancia actual.</summary>
      <returns>Código hash de la instancia actual.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetMaxByteCount(System.Int32)">
      <summary>Cuando se reemplaza en una clase derivada, calcula el número máximo de bytes generados al codificar el número de caracteres especificado.</summary>
      <returns>El número máximo de bytes generados al codificar el número de caracteres especificado.</returns>
      <param name="charCount">Número de caracteres que se van a codificar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="charCount" /> es menor que cero.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.EncoderFallback" /> está establecida en <see cref="T:System.Text.EncoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetMaxCharCount(System.Int32)">
      <summary>Cuando se reemplaza en una clase derivada, calcula el número máximo de caracteres generados al descodificar el número de bytes especificado.</summary>
      <returns>Número máximo de caracteres que se generan al descodificar el número de bytes especificado.</returns>
      <param name="byteCount">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="byteCount" /> es menor que cero.</exception>
      <exception cref="T:System.Text.DecoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecida en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetPreamble">
      <summary>Cuando se reemplaza en una clase derivada, devuelve una secuencia de bytes que especifica la codificación utilizada.</summary>
      <returns>Una matriz de bytes que contiene una secuencia de bytes que especifica la codificación utilizada. O bien  Una matriz de bytes de longitud cero, si no se requiere un preámbulo.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
      <summary>Cuando se reemplaza en una clase derivada, descodifica una secuencia de bytes de la matriz de bytes especificada en una cadena.</summary>
      <returns>Cadena que contiene el resultado de la descodificación de la secuencia de bytes especificada.</returns>
      <param name="bytes">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <param name="index">Índice del primer byte que se va a descodificar.</param>
      <param name="count">Número de bytes que se van a descodificar.</param>
      <exception cref="T:System.ArgumentException">La matriz de bytes contiene puntos de código Unicode no válidos.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="index" /> o <paramref name="count" /> es menor que cero. O bien  <paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <paramref name="bytes" />.</exception>
      <exception cref="T:System.Text.DecoderFallbackException">Se ha producido una acción de reserva (vea Codificación de caracteres en .NET Framework para obtener una explicación completa) - y - La propiedad <see cref="P:System.Text.Encoding.DecoderFallback" /> está establecida en <see cref="T:System.Text.DecoderExceptionFallback" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.Encoding.Unicode">
      <summary>Obtiene una codificación para el formato UTF-16 utilizando el orden de bytes little-endian.</summary>
      <returns>Una codificación para el formato UTF-16 utilizando el orden de bytes little-endian.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.Encoding.UTF8">
      <summary>Obtiene una codificación para el formato UTF-8.</summary>
      <returns>Codificación para el formato UTF-8.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Text.Encoding.WebName">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el nombre registrado en IANA (Internet Assigned Numbers Authority) para la codificación actual.</summary>
      <returns>El nombre IANA de la clase <see cref="T:System.Text.Encoding" /> actual.</returns>
      <filterpriority>2</filterpriority>
    </member>
  </members>
</doc>