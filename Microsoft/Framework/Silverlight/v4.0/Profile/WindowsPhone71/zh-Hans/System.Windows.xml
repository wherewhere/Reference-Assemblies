<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Microsoft Corporation.  All rights reserved. -->
<doc>
  <assembly>
    <name>System.Windows</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Internal.IManagedFrameworkInternalHelper">
<summary>不应在代码中直接使用或实现此类型。 </summary>
    </member>
    <member name="M:Microsoft.Internal.IManagedFrameworkInternalHelper.SetContextEx(System.IntPtr)">
<summary>[SECURITY CRITICAL] 不应在代码中直接使用或实现此方法。 </summary>
<param name="context">不使用。</param>
    </member>
    <member name="T:Microsoft.Xna.Framework.Silverlight.GraphicsDeviceManager">
<summary>提供用于管理 <see cref="T:Microsoft.Xna.Framework.Graphics.GraphicsDevice"/> 的功能。使用静态方法 <see cref="P:Microsoft.Xna.Framework.Silverlight.GraphicsDeviceManager.Current"/> 获取全局设备管理器的实例。</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Silverlight.GraphicsDeviceManager.Current">
<summary>获取 GraphicsDeviceManger 实例的静态属性。</summary>
<returns>图形设备管理器。</returns>
    </member>
    <member name="P:Microsoft.Xna.Framework.Silverlight.GraphicsDeviceManager.GraphicsDevice">
<summary>获取图形设备。</summary>
<returns>图形设备。</returns>
    </member>
    <member name="P:Microsoft.Xna.Framework.Silverlight.GraphicsDeviceManager.RenderMode">
<summary>获取当前呈现模式。</summary>
<returns>呈现模式。</returns>
    </member>
    <member name="E:Microsoft.Xna.Framework.Silverlight.GraphicsDeviceManager.RenderModeChanged">
<summary>当呈现模式发生更改时发生。</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Silverlight.GraphicsDeviceManager.RenderModeReason">
<summary>获取呈现模式值的说明。</summary>
<returns>当前呈现模式的原因。</returns>
    </member>
    <member name="T:Microsoft.Xna.Framework.Silverlight.RenderMode">
<summary>描述呈现的类型。</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Silverlight.RenderMode.Unavailable">
<summary>指示没有可用的呈现器。</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Silverlight.RenderMode.Hardware">
<summary>指示呈现是由 GPU 加速的硬件。</summary>
    </member>
    <member name="T:Microsoft.Xna.Framework.Silverlight.RenderModeChangedEventArgs">
<summary>为 <see cref="E:Microsoft.Xna.Framework.Silverlight.GraphicsDeviceManager.RenderModeChanged"/> 事件提供数据。</summary>
    </member>
    <member name="P:Microsoft.Xna.Framework.Silverlight.RenderModeChangedEventArgs.OldRenderMode">
<summary>获取上一个呈现模式的值。</summary>
<returns>上一个呈现模式。</returns>
    </member>
    <member name="P:Microsoft.Xna.Framework.Silverlight.RenderModeChangedEventArgs.OldRenderModeReason">
<summary>获取呈现模式值的上一个说明值。 </summary>
<returns>呈现模式值的上一个说明。</returns>
    </member>
    <member name="P:Microsoft.Xna.Framework.Silverlight.RenderModeChangedEventArgs.RenderMode">
<summary>获取当前呈现模式。</summary>
<returns>当前呈现模式。</returns>
    </member>
    <member name="P:Microsoft.Xna.Framework.Silverlight.RenderModeChangedEventArgs.RenderModeReason">
<summary>获取呈现模式值的当前说明。 </summary>
<returns>呈现模式值的当前说明。</returns>
    </member>
    <member name="T:Microsoft.Xna.Framework.Silverlight.RenderModeReason">
<summary>描述 <see cref="T:Microsoft.Xna.Framework.Silverlight.RenderMode"/> 值的可能说明。</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Silverlight.RenderModeReason.Normal">
<summary>正常。</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Silverlight.RenderModeReason.GPUAccelerationDisabled">
<summary>禁用 GPU 硬件加速。</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Silverlight.RenderModeReason.SecurityBlocked">
<summary>出于安全原因而被阻止。</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Silverlight.RenderModeReason.Not3DCapable">
<summary>图形卡不是 3D 卡。</summary>
    </member>
    <member name="F:Microsoft.Xna.Framework.Silverlight.RenderModeReason.TemporarilyUnavailable">
<summary>临时不可用。 </summary>
    </member>
    <member name="T:System.Collections.ObjectModel.ObservableCollection`1">
<summary>表示一个动态数据集合，在添加项、移除项或刷新整个列表时，此集合将提供通知。</summary>
<typeparam name="T">集合中的项的类型。</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor">
<summary>初始化 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 类的新空实例。</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
<summary>初始化 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 类的新实例，并用从指定集合中复制的项来填充该实例。</summary>
<param name="collection">从中复制项的集合。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="collection"/> 为 null。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
<summary>初始化 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 类的新实例，并用从指定列表中复制的项来填充该实例。</summary>
<param name="list">从中复制项的列表。</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.ClearItems">
<summary>从集合中移除所有项。</summary>
<exception cref="T:System.InvalidOperationException">该方法正在 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged"/> 或 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged"/> 事件处理程序中调用。 </exception>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged">
<summary>当集合中的某个项更改或者整个集合更改时发生。</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.InsertItem(System.Int32,`0)">
<summary>将一项插入集合中指定索引处。</summary>
<param name="index">应插入 <paramref name="item"/> 的位置的零始索引。</param>
<param name="item">要插入的对象。</param>
<exception cref="T:System.InvalidOperationException">该方法正在 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged"/> 或 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged"/> 事件处理程序中调用。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
<summary>引发带有提供的事件数据的 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged"/> 事件。</summary>
<param name="e">要在事件中报告的事件数据。</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
<summary>引发带有提供的参数的 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged"/> 事件。</summary>
<param name="e">要在事件中报告的事件数据。</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged">
<summary>当集合中单个项的属性更改时发生。</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.RemoveItem(System.Int32)">
<summary>从集合中移除指定索引位置的项。</summary>
<param name="index">要移除的项的从零开始的索引。</param>
<exception cref="T:System.InvalidOperationException">该方法正在 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged"/> 或 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged"/> 事件处理程序中调用。</exception>
    </member>
    <member name="M:System.Collections.ObjectModel.ObservableCollection`1.SetItem(System.Int32,`0)">
<summary>替换指定索引处的项。</summary>
<param name="index">要替换的项的从零开始的索引。</param>
<param name="item">位于指定索引处的项的新值。</param>
<exception cref="T:System.InvalidOperationException">该方法正在 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.PropertyChanged"/> 或 <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged"/> 事件处理程序中调用。 </exception>
    </member>
    <member name="E:System.Collections.ObjectModel.ObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
<summary>在更改属性值时发生。</summary>
    </member>
    <member name="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1">
<summary>表示只读的 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>。</summary>
<typeparam name="T">集合所容纳的对象的类型。</typeparam>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})">
<summary>初始化 <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1"/> 类的新实例，该实例用作指定的 <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> 的包装。</summary>
<param name="list">要包装的集合。</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.CollectionChanged">
<summary>在添加或移除项时发生。</summary>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
<summary>引发 <see cref="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.CollectionChanged"/> 事件。 </summary>
<param name="args">事件数据。</param>
    </member>
    <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
<summary>引发 <see cref="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.PropertyChanged"/> 事件。 </summary>
<param name="args">事件数据。</param>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.PropertyChanged">
<summary>在更改属性值时发生。</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
<summary>有关此成员的说明，请参阅 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/>。</summary>
    </member>
    <member name="E:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
<summary>有关此成员的说明，请参阅 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>。</summary>
    </member>
    <member name="T:System.Collections.Specialized.INotifyCollectionChanged">
<summary>将集合的动态更改通知给侦听器，例如，何时添加和移除项或者重置整个集合对象。</summary>
    </member>
    <member name="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
<summary>在集合的项列表已更改或集合重置时发生。</summary>
    </member>
    <member name="T:System.Collections.Specialized.NotifyCollectionChangedAction">
<summary>描述引发 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> 事件的操作。 </summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add">
<summary>向集合中添加了一个或多个项。</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove">
<summary>从集合中移除了一个或多个项。</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace">
<summary>在集合中替换了一个或多个项。</summary>
    </member>
    <member name="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset">
<summary>集合的内容发生显著更改。</summary>
    </member>
    <member name="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs">
<summary>为 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> 事件提供事件数据。</summary>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction)">
<summary>初始化 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> 类的新实例，指定 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction"/> 值。</summary>
<param name="action">作为枚举值的操作值。该值应始终为 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset"/>；请参阅“备注”。</param>
      <exception cref="T:System.NotSupportedException">
<paramref name="action"/> 不是 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Reset"/>。</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
<summary>初始化描述 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add"/> 或 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove"/> 更改的 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> 类的新实例。</summary>
<param name="action">作为枚举值的操作值。该值应为 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add"/> 或 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove"/>；请参阅“备注”。</param>
<param name="changedItem">受更改影响的项。</param>
<param name="index">发生更改处的索引。</param>
      <exception cref="T:System.NotSupportedException">
<paramref name="action"/> 不是 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Add"/> 或 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove"/>。</exception>
    </member>
    <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
<summary>初始化描述 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace"/> 更改的 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> 类的新实例。</summary>
<param name="action">作为枚举值的操作值。该值应为 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace"/>；请参阅“备注”。</param>
<param name="newItem">要替换原始项的新项。</param>
<param name="oldItem">要替换的原始项。</param>
<param name="index">要替换的项的索引。</param>
      <exception cref="T:System.NotSupportedException">
<paramref name="action"/> 不是 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace"/>。</exception>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.Action">
<summary>获取引起此事件的操作的说明。 </summary>
<returns>引起此事件的操作的说明，作为枚举的值。</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems">
<summary>获取受操作影响的项。</summary>
<returns>受操作影响的项的列表。默认值为 null。</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex">
<summary>获取更改发生处的索引。</summary>
<returns>更改发生处的索引。</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems">
<summary>获取 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace"/> 或 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove"/> 操作影响的项。</summary>
<returns>受 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace"/> 或 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove"/> 操作影响的项的列表。</returns>
    </member>
    <member name="P:System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex">
<summary>获取 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace"/> 或 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove"/> 操作发生更改处的索引。</summary>
<returns><see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Replace"/> 或 <see cref="F:System.Collections.Specialized.NotifyCollectionChangedAction.Remove"/> 操作发生更改处的索引。</returns>
    </member>
    <member name="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler">
<summary>表示处理用来实现 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> 事件的事件的方法。</summary>
<param name="sender">引发事件的对象。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.ComponentModel.AlternateContentPropertyAttribute">
<summary>指示是否应在对象树中显示非内容属性。</summary>
    </member>
    <member name="M:System.ComponentModel.AlternateContentPropertyAttribute.#ctor">
<summary>初始化 <see cref="T:System.ComponentModel.AlternateContentPropertyAttribute"/> 类的新实例。</summary>
    </member>
    <member name="T:System.ComponentModel.ClosingEventArgs">
<summary>为 <see cref="E:System.Windows.Window.Closing"/> 事件提供数据。 </summary>
    </member>
    <member name="M:System.ComponentModel.ClosingEventArgs.#ctor(System.Boolean)">
<summary>初始化 <see cref="T:System.ComponentModel.ClosingEventArgs"/> 类的新实例。 </summary>
<param name="isCancelable">初始化 <see cref="P:System.ComponentModel.ClosingEventArgs.IsCancelable"/> 属性。</param>
    </member>
    <member name="P:System.ComponentModel.ClosingEventArgs.IsCancelable">
<summary>获取一个值，该值指示是否可以取消 <see cref="E:System.Windows.Window.Closing"/> 事件。</summary>
<returns>如果可以取消该事件，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
<summary>为 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging"/> 事件提供数据。</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
<summary>初始化 <see cref="T:System.ComponentModel.CurrentChangingEventArgs"/> 类的新实例，并将 <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable"/> 属性设置为 true。</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
<summary>初始化 <see cref="T:System.ComponentModel.CurrentChangingEventArgs"/> 类的新实例并将 <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable"/> 属性设置为指定的值。</summary>
<param name="isCancelable">如果禁用取消 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 更改的功能，则为 true；如果启用取消，则为 false。</param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
<summary>获取或设置一个值，该值指示是否应取消 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 更改。 </summary>
<returns>如果应取消事件，则为 true；否则为 false。默认值为 false。</returns>
<exception cref="T:System.InvalidOperationException"><see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable"/> 属性值为 false。</exception>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
<summary>获取一个值，该值指示是否可以取消 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 更改。 </summary>
<returns>如果可以取消事件，则为 true；如果不能取消事件，则为 false。</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
<summary>表示可以处理 <see cref="T:System.ComponentModel.ICollectionView"/> 实现的 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging"/> 事件的方法。 </summary>
<param name="sender">事件的源。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.ComponentModel.DataErrorsChangedEventArgs">
<summary>为 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged"/> 事件提供数据。</summary>
    </member>
    <member name="M:System.ComponentModel.DataErrorsChangedEventArgs.#ctor(System.String)">
<summary>初始化 <see cref="T:System.ComponentModel.DataErrorsChangedEventArgs"/> 类的新实例。 </summary>
<param name="propertyName">其错误已经更改的属性的名称，对于实体级别错误，则为 null 或 <see cref="F:System.String.Empty"/>。</param>
    </member>
    <member name="P:System.ComponentModel.DataErrorsChangedEventArgs.PropertyName">
<summary>获取其错误已经更改的属性的名称，对于实体级别错误，则为 null 或 <see cref="F:System.String.Empty"/>。</summary>
<returns>受影响属性的名称，对于实体级别错误，则为 null 或 <see cref="F:System.String.Empty"/>。</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerProperties">
<summary>提供可用于与设计器进行通信的附加属性。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
<summary>获取指定 <see cref="T:System.Windows.UIElement"/> 的 <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode"/> 附加属性的值。</summary>
<returns>该元素的 <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode"/> 属性值。</returns>
<param name="element">从中读取属性值的元素。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="P:System.ComponentModel.DesignerProperties.IsInDesignMode">
<summary>获取或设置是否在设计器的上下文中运行 <see cref="T:System.Windows.DependencyObject"/>。</summary>
<returns>指示 <see cref="T:System.Windows.DependencyObject"/> 是否在设计器的上下文中运行的 <see cref="T:System.Boolean"/>。</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerProperties.IsInDesignModeProperty">
<summary>标识 <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode"/> 附加属性。</summary>
    </member>
    <member name="P:System.ComponentModel.DesignerProperties.IsInDesignTool">
<summary>获取一个值，该值指示元素是否在设计器的上下文中运行。 </summary>
<returns>如果元素在设计器的上下文中运行，则为 true；否则为 false。 </returns>
    </member>
    <member name="P:System.ComponentModel.DesignerProperties.RefreshOnlyXmlnsDefinitionsOnAssemblyReplace">
<summary>获取或设置一个值，该值指示在程序集重新编译后，是应在设计器中刷新与程序集关联的所有元数据，还是仅刷新 xmlns 命名空间定义。</summary>
<returns>如果仅刷新命名空间定义，则为 true；否则为 false。 </returns>
    </member>
    <member name="M:System.ComponentModel.DesignerProperties.SetIsInDesignMode(System.Windows.DependencyObject,System.Boolean)">
<summary>将 <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode"/> 附加属性的值设置为指定元素。 </summary>
<param name="element">附加属性所写入的元素。</param>
<param name="value">所需的 <see cref="T:System.Boolean"/> 值。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
<summary>提供一个用于定义如何将集合中的项划分为组的基类。</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
<summary>初始化 <see cref="T:System.ComponentModel.GroupDescription"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
<summary>返回指定项的组名或名称。</summary>
<returns>表示组名或名称的对象。</returns>
<param name="item">要为其返回组名的项。</param>
<param name="level">分组层次结构中组的级别。</param>
<param name="culture">影响分组的区域性信息。</param>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
<summary>获取组名的集合。</summary>
<returns>组名的集合。 </returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
<summary>指示指定的项是否属于指定的组。</summary>
<returns>如果该项属于该组，则为 true；否则为 false。</returns>
<param name="groupName">要检查的组名称。</param>
<param name="itemName">要检查的项名称。</param>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
<summary>引发 <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged"/> 事件。 </summary>
<param name="e">事件数据。</param>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
<summary>在更改属性值时发生。</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
<summary>指示是否应序列化组名。</summary>
<returns>如果应序列化组名，则为 true；否则为 false。</returns>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
<summary>有关此成员的说明，请参阅 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>。</summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
<summary>允许集合具有当前记录管理、自定义排序、筛选和分组这些功能。</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
<summary>获取一个值，该值指示此视图是否支持通过 <see cref="P:System.ComponentModel.ICollectionView.Filter"/> 属性进行筛选。</summary>
<returns>如果此视图支持筛选，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
<summary>获取一个值，该值指示此视图是否支持通过 <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions"/> 属性进行分组。</summary>
<returns>如果此视图支持分组，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
<summary>获取一个值，该值指示此视图是否支持通过 <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions"/> 属性进行排序。</summary>
<returns>如果此视图支持排序，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
<summary>指示所指定的项是否属于此集合视图。 </summary>
<returns>如果该项属于此集合视图，则为 true；否则为 false。</returns>
<param name="item">要检查的对象。 </param>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
<summary>获取或设置根据区域性而可能不同的视图的任何操作（如排序）的区域性信息。</summary>
<returns>区分区域性的操作期间使用的区域性信息。 </returns>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
<summary>在当前项更改后发生。</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
<summary>在当前项更改之前发生。</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
<summary>获取视图中的当前项。</summary>
<returns>视图中的当前项；如果没有当前项，则为 null。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
<summary>获取视图中 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 的序号位置。</summary>
<returns>视图中 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 的序号位置。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
<summary>进入延迟循环，该循环可用于将更改合并到视图并延迟自动刷新。 </summary>
<returns>典型的用法是用此方法的实现创建一个使用范围，然后在该范围中包括多个视图更改调用。该实现应延迟自动刷新，直到该使用范围退出。 </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
<summary>获取或设置一个回调，该回调用于确定某个项是否适合包含在视图中。 </summary>
<returns>一个方法，用于确定某个项是否适合包含在视图中。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
<summary>获取 <see cref="T:System.ComponentModel.GroupDescription"/> 对象的集合，这些对象描述集合中的项在视图中的分组方式。 </summary>
<returns>对象的集合，这些对象描述集合中的项在视图中的分组方式。 </returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
<summary>获取顶级组。</summary>
<returns>如果没有任何组，则为顶级组的只读集合或 null。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
<summary>获取一个值，该值指示视图的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 是否超出集合的末尾。</summary>
<returns>如果视图的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 超出集合的末尾，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
<summary>获取一个值，该值指示视图的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 是否超出集合的开头。</summary>
<returns>如果视图的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 超出集合的开头，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
<summary>获取一个值，该值指示视图是否为空。</summary>
<returns>如果视图为空，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
<summary>将视图中的指定项设置为 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/>。</summary>
<returns>如果最终的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 是视图中的项，则为 true；否则为 false。</returns>
<param name="item">要设置为当前项的项。</param>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
<summary>将视图中的第一项设置为 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/>。</summary>
<returns>如果最终的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 是视图中的项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
<summary>将视图中的最后一项设置为 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/>。</summary>
<returns>如果最终的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 是视图中的项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
<summary>将视图中位于 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 之后的项设置为 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/>。</summary>
<returns>如果最终的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 是视图中的项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
<summary>将位于指定索引位置的项设置为视图中的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/>。</summary>
<returns>如果最终的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 是视图中的项，则为 true；否则为 false。</returns>
<param name="position">要将 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 设置成的索引。</param>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
<summary>将视图中位于 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 之前的项设置为 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/>。</summary>
<returns>如果最终的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem"/> 是视图中的项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
<summary>重新创建该视图。</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
<summary>获取 <see cref="T:System.ComponentModel.SortDescription"/> 实例的集合，这些对象描述集合中的项在视图中的排序方式。</summary>
<returns>值的集合，这些值描述集合中的项在视图中的排序方式。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
<summary>获取基础集合。</summary>
<returns>基础集合。</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
<summary>定义一个方法，该方法使集合能够为专用的排序、筛选、分组和货币提供自定义视图。</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
<summary>返回用于专用排序、筛选、分组和货币的自定义视图。</summary>
<returns>用于专用排序、筛选、分组和货币的自定义视图。</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
<summary>定义集合视图所实现的方法和属性，用于向集合提供编辑功能。</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
<summary>将新项添加到基础集合中。</summary>
<returns>添加到集合中的新项。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
<summary>获取一个值，该值指示是否可以将新项添加到集合中。</summary>
<returns>如果可以向集合添加新项，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
<summary>获取一个值，该值指示集合视图是否可以放弃挂起的更改并还原所编辑对象的原始值。</summary>
<returns>如果集合视图可以丢弃挂起的更改并还原所编辑对象的原始值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
<summary>结束编辑事务，并还原项的原始值（如有可能）。</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
<summary>结束添加事务并放弃挂起的新项。</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
<summary>获取一个值，该值指示是否可以从集合中移除项。</summary>
<returns>如果可以从集合中移除项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
<summary>结束编辑事务并保存挂起的更改。</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
<summary>结束添加事务并保存挂起的新项。</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
<summary>获取正在当前添加事务过程中添加的项。</summary>
<returns>如果 <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew"/> 为 true，则为要添加的项；否则为 null。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
<summary>获取集合中正在编辑的项。</summary>
<returns>如果 <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem"/> 为 true，则为要编辑的项；否则为 null。</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
<summary>对指定项开始编辑事务。</summary>
<param name="item">要编辑的项。</param>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
<summary>获取一个值，该值指示是否正在执行添加事务。</summary>
<returns>如果正在进行添加事务，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
<summary>获取一个值，该值指示是否正在执行编辑事务。</summary>
<returns>如果正在编辑事务，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
<summary>获取或设置集合视图中新项占位符的位置。</summary>
<returns>用于指定集合视图中新项占位符位置的一个枚举值。</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
<summary>从集合中移除指定的项。</summary>
<param name="item">要移除的项。</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
<summary>从集合中移除指定位置的项。</summary>
<param name="index">要移除的项的索引。</param>
    </member>
    <member name="T:System.ComponentModel.INotifyDataErrorInfo">
<summary>定义数据实体类可以实现以提供自定义同步和异步验证支持的成员。</summary>
    </member>
    <member name="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged">
<summary>当属性或整个实体的验证错误已经更改时发生。 </summary>
    </member>
    <member name="M:System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)">
<summary>获取指定属性或整个实体的验证错误。</summary>
<returns>属性或实体的验证错误。</returns>
<param name="propertyName">要检索其验证错误的属性的名称；或者为 null 或 <see cref="F:System.String.Empty"/> 以检索实体级别的错误。</param>
    </member>
    <member name="P:System.ComponentModel.INotifyDataErrorInfo.HasErrors">
<summary>获取一个指示该实体是否有验证错误的值。 </summary>
<returns>如果该实体当前有验证错误，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
<summary>指定新项占位符出现在 <see cref="T:System.ComponentModel.IEditableCollectionView"/> 中的位置。</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
<summary>集合不使用新项占位符。添加的项的位置取决于基础集合。通常，将其添加到集合的末尾。</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
<summary>出现在集合末尾的新项的占位符。在集合末尾添加新项，使其位于新项占位符之前。</summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
<summary>定义要用作集合的排序条件的方向和属性名。</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
<summary>初始化 <see cref="T:System.ComponentModel.SortDescription"/> 结构的新实例。 </summary>
<param name="propertyName">作为列表的排序依据的属性名。</param>
<param name="direction">排序顺序。</param>
<exception cref="T:System.ArgumentNullException"><paramref name="propertyName"/> 参数为 null。</exception>
<exception cref="T:System.ArgumentException"><paramref name="propertyName"/> 参数为空。-或- <paramref name="direction"/> 参数未指定有效值。</exception>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
<summary>获取或设置一个值，该值指示是按升序还是降序进行排序。</summary>
<returns>指示排序方向的值。 </returns>
      <exception cref="T:System.InvalidOperationException">
<see cref="P:System.ComponentModel.SortDescription.IsSealed"/> 为 true。</exception>
<exception cref="T:System.ArgumentException">指定的值不是有效的排序方向。</exception>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
<summary>比较 <see cref="T:System.ComponentModel.SortDescription"/> 的指定实例与当前实例的值是否相等。</summary>
<returns>如果 <paramref name="obj"/> 和此 <see cref="T:System.ComponentModel.SortDescription"/> 实例具有相同的 <see cref="P:System.ComponentModel.SortDescription.PropertyName"/> 和 <see cref="P:System.ComponentModel.SortDescription.Direction"/> 值，则为 true；否则为 false。</returns>
<param name="obj">要进行比较的 <see cref="T:System.ComponentModel.SortDescription"/> 实例。</param>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
<summary>返回当前实例的哈希代码。</summary>
<returns>当前实例的哈希代码。</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
<summary>获取一个值，该值指示此结构是否处于不可变状态。 </summary>
<returns>如果此对象正在使用，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
<summary>比较两个 <see cref="T:System.ComponentModel.SortDescription"/> 实例的值是否相等。 </summary>
<returns>如果两个 <see cref="T:System.ComponentModel.SortDescription"/> 实例具有相同的 <see cref="P:System.ComponentModel.SortDescription.PropertyName"/> 和 <see cref="P:System.ComponentModel.SortDescription.Direction"/> 值，则为 true；否则为 false。</returns>
<param name="sd1">要进行比较的第一个 <see cref="T:System.ComponentModel.SortDescription"/> 实例。</param>
<param name="sd2">要进行比较的第二个 <see cref="T:System.ComponentModel.SortDescription"/> 实例。</param>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
<summary>比较两个 <see cref="T:System.ComponentModel.SortDescription"/> 实例的值是否不相等。 </summary>
<returns>如果两个 <see cref="T:System.ComponentModel.SortDescription"/> 实例没有相同的 <see cref="P:System.ComponentModel.SortDescription.PropertyName"/> 和 <see cref="P:System.ComponentModel.SortDescription.Direction"/> 值，则为 true；否则为 false。</returns>
<param name="sd1">要进行比较的第一个 <see cref="T:System.ComponentModel.SortDescription"/> 实例。</param>
<param name="sd2">要进行比较的第二个 <see cref="T:System.ComponentModel.SortDescription"/> 实例。</param>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
<summary>获取或设置要用作排序条件的属性名。</summary>
<returns>作为排序方式的属性的名称。</returns>
      <exception cref="T:System.InvalidOperationException">
<see cref="P:System.ComponentModel.SortDescription.IsSealed"/> 为 true。</exception>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
<summary>表示 <see cref="T:System.ComponentModel.SortDescription"/> 实例的集合。</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
<summary>初始化 <see cref="T:System.ComponentModel.SortDescriptionCollection"/> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
<summary>从集合中移除所有 <see cref="T:System.ComponentModel.SortDescription"/> 实例。</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
<summary>当添加或移除 <see cref="T:System.ComponentModel.SortDescription"/> 时发生。</summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
<summary>获取一个空的、不可修改的 <see cref="T:System.ComponentModel.SortDescriptionCollection"/>。</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
<summary>将 <see cref="T:System.ComponentModel.SortDescription"/> 插入到集合中的指定索引处。</summary>
<param name="index">从零开始的索引，在此处插入了 <see cref="T:System.ComponentModel.SortDescription"/>。</param>
<param name="item">要插入的 <see cref="T:System.ComponentModel.SortDescription"/>。</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
<summary>移除集合中指定索引处的 <see cref="T:System.ComponentModel.SortDescription"/>。</summary>
<param name="index">要移除的 <see cref="T:System.ComponentModel.SortDescription"/> 的从零开始的索引。 </param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
<summary>替换指定索引处的 <see cref="T:System.ComponentModel.SortDescription"/>。</summary>
<param name="index">要替换的 <see cref="T:System.ComponentModel.SortDescription"/> 的从零开始的索引。</param>
<param name="item">位于指定索引处的 <see cref="T:System.ComponentModel.SortDescription"/> 的新值。</param>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
<summary>有关此成员的说明，请参阅 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/>。</summary>
    </member>
    <member name="T:System.IO.IsolatedStorage.IsolatedStorageSettings">
<summary>提供一个在独立存储中存储键/值对的 <see cref="T:System.Collections.Generic.Dictionary`2"/>。 </summary>
      <exception cref="T:System.ArgumentNullException">
<paramref name="key"/> 为 null。当尝试使用索引器引用该类的一个实例而您为键值传入的变量是 null 时，会引发此异常。</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Add(System.String,System.Object)">
<summary>将键/值对的对应项添加到字典中。</summary>
<param name="key">要存储的项的键。</param>
<param name="value">要存储的值。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="key"/> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
<paramref name="key"/> 已存在于字典中。</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.ApplicationSettings">
<summary>获取一个 <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> 实例，该实例包含应用程序的应用程序级 <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> 的内容；如果不存在这样的实例，则创建一个新的 <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> 实例。</summary>
<returns>一个 <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> 对象，该对象包含应用程序的应用程序级 <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> 的内容。如果尚不存在这样的实例，则创建一个新实例。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Clear">
<summary>将 <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> 中存储的项的计数重置为零，并释放对集合中元素的所有引用。</summary>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Contains(System.String)">
<summary>确定应用程序设置字典是否包含指定键。</summary>
<returns>如果字典包含指定的键，则为 true；否则为 false。</returns>
<param name="key">要查找的项的键。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="key"/> 为 null。</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Count">
<summary>获取存储在字典中的键/值对的数目。</summary>
<returns>存储在字典中的键/值对的数目。</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Item(System.String)">
<summary>获取或设置与指定的键相关联的值。</summary>
<returns>与指定的键相关联的值。如果找不到指定的键，get 操作会引发 <see cref="T:System.Collections.Generic.KeyNotFoundException"/>，而 set 操作会创建一个具有指定键的新元素。</returns>
<param name="key">要获取或设置的项的键。</param>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Keys">
<summary>获取包含字典中的键的集合。</summary>
<returns>一个包含 <see cref="T:System.Collections.Generic.Dictionary`2"/> 中的键的 <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection"/>。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Remove(System.String)">
<summary>移除具有指定键的项。</summary>
<returns>如果指定的键已移除，则为 true；否则为 false。</returns>
<param name="key">要删除的项的键。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="key"/> 为 null。</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Save">
<summary>保存写入到当前 <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> 对象的数据。</summary>
<exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> 没有足够的可用空间。</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.SiteSettings">
<summary>获取一个 <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> 实例，该实例包含应用程序的域级 <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> 的内容；如果不存在这样的实例，则创建一个新的 <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> 实例。</summary>
<returns>一个 <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> 对象，该对象包含应用程序的域级 <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> 的内容。如果尚不存在这样的实例，则创建一个新实例。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.ICollection`1.Add(`0)"/>。</summary>
<param name="item">要添加的 <see cref="T:System.Collections.Generic.KeyValuePair`2"/>。</param>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#Clear">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.ICollection`1.Clear"/>。</summary>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.ICollection`1.Contains(`0)"/>。</summary>
<returns>如果 <paramref name="item"/> 在 <see cref="T:System.Collections.Generic.ICollection`1"/> 中，则为 true；否则为 false。</returns>
<param name="item">要查找的项的键/值对。</param>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)"/>。</summary>
<param name="array">作为从 <see cref="T:System.Collections.Generic.ICollection`1"/> 复制的元素的目标位置的一维 <see cref="T:System.Array"/>。该数组的索引必须从零开始。</param>
<param name="arrayIndex"><paramref name="array"/> 中从零开始的索引，将在此处开始复制。</param>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#IsReadOnly">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly"/>。</summary>
<returns>如果 <see cref="T:System.Collections.Generic.IDictionary`2"/> 为只读，则为 true；否则为 false。在 <see cref="T:System.Collections.Generic.Dictionary`2"/> 的默认实现中，此属性始终返回 false。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.ICollection`1.Remove(`0)"/>。</summary>
<returns>如果从 <see cref="T:System.Collections.Generic.ICollection`1"/> 中成功移除了 <paramref name="item"/>，则为 true；否则为 false。如果在原始 <see cref="T:System.Collections.Generic.ICollection`1"/> 中没有找到 <paramref name="item"/>，该方法也会返回 false。</returns>
<param name="item">要删除的项的键。</param>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#IDictionary{TKey@TValue}#ContainsKey(System.String)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)"/>。</summary>
<returns>如果 <see cref="T:System.Collections.Generic.IDictionary`2"/> 包含具有指定 <paramref name="key"/> 的元素，则为 true；否则为 false。</returns>
<param name="key">要查找的项的键。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="key"/> 为 null。</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.Generic.IDictionary`2.Keys"/>。</summary>
<returns>一个 <see cref="T:System.Collections.Generic.ICollection`1"/>，其中包含实现 <see cref="T:System.Collections.Generic.IDictionary`2"/> 的对象的键。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#IDictionary{TKey@TValue}#TryGetValue(System.String,System.Object@)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)"/>。</summary>
<returns>如果 <see cref="T:System.Collections.Generic.IDictionary`2"/> 包含具有指定 <paramref name="key"/> 的元素，则为 true；否则为 false。</returns>
<param name="key">要获取的值的键。</param>
<param name="value">当此方法返回时，如果找到该键，便会返回与指定的键相关联的值；否则，会返回 <paramref name="value"/> 参数的类型默认值。该参数未经初始化即被传递。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="key"/> 为 null。</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.Generic.IDictionary`2.Values"/>。</summary>
<returns>一个 <see cref="T:System.Collections.Generic.ICollection`1"/>，其中包含实现 <see cref="T:System.Collections.Generic.IDictionary`2"/> 的对象中的值。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>。</summary>
<returns>可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1"/> 对象。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/>。</summary>
<param name="array">作为从 <see cref="T:System.Collections.ICollection"/> 复制的元素的目标位置的一维 <see cref="T:System.Array"/>。该数组的索引必须从零开始。</param>
<param name="index"><paramref name="array"/> 中从零开始的索引，将在此处开始复制。</param>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#ICollection#Count">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.Count"/>。</summary>
<returns><see cref="T:System.Collections.ICollection"/> 中包含的元素数。</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#ICollection#IsSynchronized">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.IsSynchronized"/>。</summary>
<returns>如果同步对 <see cref="T:System.Collections.ICollection"/> 的访问（线程安全），则为 true；否则为 false。在 <see cref="T:System.Collections.Generic.Dictionary`2"/> 的默认实现中，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#ICollection#SyncRoot">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.SyncRoot"/>。</summary>
<returns>可用于同步对 <see cref="T:System.Collections.ICollection"/> 的访问的对象。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#Add(System.Object,System.Object)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)"/>。</summary>
<param name="key">用作要添加的元素的键的对象。</param>
<param name="value">作为要添加的元素的值的对象。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="key"/> 为 null。</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#Clear">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IDictionary.Clear"/>。</summary>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#Contains(System.Object)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IDictionary.Contains(System.Object)"/>。</summary>
<returns>如果 <see cref="T:System.Collections.IDictionary"/> 包含具有指定 <paramref name="key"/> 的元素，则为 true；否则为 false。 </returns>
<param name="key">要在 <see cref="T:System.Collections.IDictionary"/> 中查找的键。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="key"/> 为 null。</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#GetEnumerator">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IDictionary.GetEnumerator"/>。</summary>
<returns>可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1"/> 对象。</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#IsFixedSize">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IDictionary.IsFixedSize"/>。</summary>
<returns>如果 <see cref="T:System.Collections.IDictionary"/> 具有固定大小，则为 true；否则为 false。在 <see cref="T:System.Collections.IDictionary"/> 的默认实现中，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#IsReadOnly">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IDictionary.IsReadOnly"/>。</summary>
<returns>如果 <see cref="T:System.Collections.IDictionary"/> 为只读，则为 true；否则为 false。在 <see cref="T:System.Collections.IDictionary"/> 的默认实现中，此属性始终返回 false。</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#Item(System.Object)">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.IDictionary.Item(System.Object)"/>。</summary>
<returns>与指定的 <paramref name="key"/> 相关联的值。</returns>
<param name="key">要获取或设置的值的键。</param>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#Remove(System.Object)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IDictionary.Remove(System.Object)"/>。</summary>
<param name="key">要删除的项的键。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="key"/> 为 null。</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IEnumerable#GetEnumerator">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>。</summary>
<returns>可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1"/> 对象。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.TryGetValue``1(System.String,``0@)">
<summary>获取指定键的值。</summary>
<returns>如果找到了指定键，则为 true；否则为 false。</returns>
<param name="key">要获取的值的键。</param>
<param name="value">当此方法返回时，如果找到该键，便会返回与指定的键相关联的值；否则，会返回 <paramref name="value"/> 参数的类型默认值。该参数未经初始化即被传递。</param>
<typeparam name="T"><paramref name="value"/> 参数的 <see cref="T:System.Type"/>。</typeparam>
      <exception cref="T:System.ArgumentNullException">
<paramref name="key"/> 为 null。</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Values">
<summary>获取包含字典中的值的集合。</summary>
<returns>一个包含 <see cref="T:System.Collections.Generic.Dictionary`2"/> 中的值的 <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection"/>。</returns>
    </member>
    <member name="T:System.Net.HttpUtility">
<summary>提供用于对 HTML 和 URL 字符串进行编码和解码的方法。</summary>
    </member>
    <member name="M:System.Net.HttpUtility.HtmlDecode(System.String)">
<summary>将已经为 HTTP 传输进行过 HTML 编码的字符串转换为已解码的字符串。</summary>
<returns>一个已解码的字符串。</returns>
<param name="html">要进行解码的 HTML 编码的字符串。</param>
    </member>
    <member name="M:System.Net.HttpUtility.HtmlEncode(System.String)">
<summary>将文本字符串转换为 HTML 编码的字符串。</summary>
<returns>HTML 编码的字符串。</returns>
<param name="html">要进行 HTML 编码的文本。</param>
    </member>
    <member name="M:System.Net.HttpUtility.UrlDecode(System.String)">
<summary>将已经为在 URL 中传输而编码的字符串转换为解码的字符串。</summary>
<returns>一个已解码的字符串。</returns>
<param name="url">要进行解码的 URL 编码的字符串。</param>
    </member>
    <member name="M:System.Net.HttpUtility.UrlEncode(System.String)">
<summary>将文本字符串转换为 URL 编码的字符串。</summary>
<returns>URL 编码的字符串。</returns>
<param name="url">要进行 URL 编码的文本。</param>
    </member>
    <member name="T:System.Net.Browser.WebRequestCreator">
<summary>提供对象以便指定是由浏览器还是由客户端来处理 HTTP 请求和响应。 </summary>
    </member>
    <member name="P:System.Net.Browser.WebRequestCreator.BrowserHttp">
<summary>获取一个对象，该对象为 Web 请求和响应指定浏览器 HTTP 处理。</summary>
<returns>一个 <see cref="T:System.Net.IWebRequestCreate"/> 对象，该对象为 Web 请求和响应指定浏览器处理。</returns>
    </member>
    <member name="P:System.Net.Browser.WebRequestCreator.ClientHttp">
<summary>获取一个对象，该对象为 Web 请求和响应指定客户端 HTTP 处理。</summary>
<returns>一个 <see cref="T:System.Net.IWebRequestCreate"/> 对象，它与在 Web 浏览器之外运行的基于 Silverlight 的应用程序一起使用。</returns>
    </member>
    <member name="T:System.Reflection.ICustomTypeProvider">
<summary>定义一个方法，该方法返回数据绑定系统使用的自定义 <see cref="T:System.Type"/> 对象来确定实现类型的运行时结构。</summary>
    </member>
    <member name="M:System.Reflection.ICustomTypeProvider.GetCustomType">
<summary>返回一个 <see cref="T:System.Type"/> 对象，该对象表示实现类型的运行时结构。</summary>
<returns>用于数据绑定的对象的运行时类型。</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.Automation.AutomationEvent">
<summary>表示一个自动化事件。 </summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Automation.AutomationEvent.AddEventHandler(System.Delegate)">
<summary>将指定的委托附加到该自动化事件。 </summary>
<param name="handler">要附加到该事件的委托。 </param>
    </member>
    <member name="E:System.Runtime.InteropServices.Automation.AutomationEvent.EventRaised">
<summary>当发生该自动化事件时发生。</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Automation.AutomationEvent.RemoveEventHandler(System.Delegate)">
<summary>将指定的委托从该自动化事件中分离。 </summary>
<param name="handler">要从该事件中分离的委托。</param>
    </member>
    <member name="T:System.Runtime.InteropServices.Automation.AutomationEventArgs">
<summary>为 <see cref="E:System.Runtime.InteropServices.Automation.AutomationEvent.EventRaised"/> 事件提供数据。</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.Automation.AutomationEventArgs.Arguments">
<summary>获取自动化事件的事件参数。 </summary>
<returns>自动化事件的事件参数。</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.Automation.AutomationFactory">
<summary>提供对已注册的自动化服务器的访问。 </summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Automation.AutomationFactory.CreateObject``1">
<summary>尚未实现。</summary>
<returns>null。</returns>
<typeparam name="T">要创建的对象的类型。 </typeparam>
    </member>
    <member name="M:System.Runtime.InteropServices.Automation.AutomationFactory.CreateObject(System.String)">
<summary>激活具有指定的编程标识符 (ProgID) 的已注册自动化服务器并返回对它的引用。</summary>
<returns>对指定的自动化服务器的后期绑定引用。</returns>
<param name="progID">要激活的已注册自动化服务器的 ProgID。</param>
<exception cref="T:System.Exception">找不到为指定的 <paramref name="progID"/> 注册的对象。</exception>
    </member>
    <member name="M:System.Runtime.InteropServices.Automation.AutomationFactory.GetEvent(System.Object,System.String)">
<summary>获取一个对象，该对象表示指定的自动化服务器的指定事件。</summary>
<returns>一个表示指定事件的对象。</returns>
<param name="automationObject">对要检索其事件的自动化服务器的引用。</param>
<param name="eventName">要检索的事件的名称。</param>
    </member>
    <member name="M:System.Runtime.InteropServices.Automation.AutomationFactory.GetObject(System.String)">
<summary>获取对以前激活的并且当前正在运行的、具有指定编程标识符 (ProgID) 的自动化服务器的引用。 </summary>
<returns>对指定的自动化服务器的后期绑定引用。 </returns>
<param name="progID">要检索其引用的已注册自动化服务器的 ProgID。</param>
<exception cref="T:System.Exception">找不到为指定的 <paramref name="progID"/> 注册的对象。</exception>
    </member>
    <member name="P:System.Runtime.InteropServices.Automation.AutomationFactory.IsAvailable">
<summary>获取一个值，该值指示 Silverlight 中的自动化功能是否可用于该应用程序。</summary>
<returns>如果 Silverlight 中的自动化功能可用于该应用程序，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.Analytics">
<summary>公开有关应用程序如何执行的只读数据。</summary>
    </member>
    <member name="M:System.Windows.Analytics.#ctor">
<summary>初始化 <see cref="T:System.Windows.Analytics"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Analytics.AverageProcessLoad">
<summary>获取一个系数，该系数报告此进程使用的 CPU 上的总负载，由所有核心上使用的总平均 CPU 量决定。</summary>
<returns>一个介于 0 和 1 之间的值，该值报告与此进程关联的 CPU 负载，通过检查多核系统所有核心的总平均处理量来决定系数。0 映射为 0% 负载，而 1 映射为 100% 负载。</returns>
    </member>
    <member name="P:System.Windows.Analytics.AverageProcessorLoad">
<summary>获取一个系数，该系数报告所有进程在 CPU 上的总负载，由所有核心上使用的总平均 CPU 量决定。</summary>
<returns>一个介于 0 和 1 之间的值，该值报告所有进程的 CPU 负载，通过检查多核系统所有核心的总平均处理量来决定系数。0 映射为 0% 负载，而 1 映射为 100% 负载。</returns>
    </member>
    <member name="P:System.Windows.Analytics.ClientInformation">
<summary>获取哈希的伪唯一 Base64 字符串值（基于每个域和计算机）的集合。</summary>
<returns>返回一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/>，它包含唯一的字符串值。</returns>
    </member>
    <member name="M:System.Windows.Analytics.Finalize">
<summary>释放由 <see cref="T:System.Windows.Analytics"/> 类使用的资源。</summary>
    </member>
    <member name="P:System.Windows.Analytics.GpuCollection">
<summary>获取 <see cref="T:System.Windows.GpuInformation"/> 对象的集合，其中每个对象都包括从视频驱动程序获取的详细信息。 </summary>
<returns><see cref="T:System.Windows.GpuInformation"/> 对象的集合，其中每个对象都包括从视频驱动程序获取的详细信息。 </returns>
    </member>
    <member name="T:System.Windows.Application">
<summary>封装 Silverlight 应用程序。</summary>
    </member>
    <member name="M:System.Windows.Application.#ctor">
<summary>初始化 <see cref="T:System.Windows.Application"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Application.ApplicationLifetimeObjects">
<summary>获取已为此应用程序注册的应用程序扩展服务。</summary>
<returns>已注册的服务。 </returns>
    </member>
    <member name="M:System.Windows.Application.CheckAndDownloadUpdateAsync">
<summary>启动异步进程以检查并下载应用程序的更新版本。</summary>
    </member>
    <member name="E:System.Windows.Application.CheckAndDownloadUpdateCompleted">
<summary>当应用程序已完成更新检查以响应 <see cref="M:System.Windows.Application.CheckAndDownloadUpdateAsync"/> 方法调用时发生。</summary>
    </member>
    <member name="P:System.Windows.Application.Current">
<summary>获取当前应用程序的 <see cref="T:System.Windows.Application"/> 对象。</summary>
<returns>当前应用程序的 <see cref="T:System.Windows.Application"/> 对象。</returns>
    </member>
    <member name="E:System.Windows.Application.Exit">
<summary>恰好在应用程序关闭之前发生，且无法取消。</summary>
    </member>
    <member name="M:System.Windows.Application.GetResourceStream(System.Uri)">
<summary>从应用程序包中的某个位置返回资源文件。</summary>
<returns>一个包含所需资源文件的流的 <see cref="T:System.Windows.Resources.StreamResourceInfo"/>。</returns>
<param name="uriResource">标识要加载的资源文件的相对 URI。该 URI 相对于应用程序包，并且不需要前导正斜杠。 </param>
<exception cref="T:System.ArgumentException">未初始化应用程序类。-或- <paramref name="uriResource"/> 为绝对 URI。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="uriResource"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Application.GetResourceStream(System.Windows.Resources.StreamResourceInfo,System.Uri)">
<summary>从指定 zip 包中的某个位置返回资源文件。</summary>
<returns>一个包含所需资源文件的流的 <see cref="T:System.Windows.Resources.StreamResourceInfo"/>。</returns>
<param name="zipPackageStreamResourceInfo">一个包含具有所需资源文件的 zip 包流的 <see cref="T:System.Windows.Resources.StreamResourceInfo"/>。</param>
<param name="uriResource">标识要从 zip 包提取的资源文件的相对 URI。该 URI 相对于应用程序包，并且不需要前导正斜杠。 </param>
<exception cref="T:System.ArgumentException">未初始化应用程序类。-或- <paramref name="uriResource"/> 为绝对 URI。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="zipPackageStreamResourceInfo"/> 为 null。-或- <paramref name="uriResource"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Application.HasElevatedPermissions">
<summary>获取一个值，该值指示应用程序是否正使用提升的权限运行。</summary>
<returns>如果应用程序正使用提升的权限运行，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Application.Host">
<summary>获取有关 Silverlight 应用程序的主机的各种详细信息。</summary>
<returns><see cref="T:System.Windows.Interop.SilverlightHost"/>，提供有关 Silverlight 主机应用程序的各种详细信息。</returns>
    </member>
    <member name="M:System.Windows.Application.Install">
<summary>尝试安装应用程序以使该应用程序可以在浏览器外部运行。 </summary>
<returns>如果用户同意安装应用程序并且该应用程序需要提升的信任级别，则为 true；否则为 false。有关更多信息，请参阅“备注”。 </returns>
<exception cref="T:System.InvalidOperationException">已经安装了应用程序。-或- 应用程序承载于其中的 URI 所具有的架构不是 http、https 或文件。</exception>
    </member>
    <member name="P:System.Windows.Application.InstallState">
<summary>获取应用程序的当前浏览器外安装状态。</summary>
<returns>应用程序的浏览器外安装状态。</returns>
    </member>
    <member name="E:System.Windows.Application.InstallStateChanged">
<summary>当 <see cref="P:System.Windows.Application.InstallState"/> 属性值更改时发生。 </summary>
    </member>
    <member name="P:System.Windows.Application.IsRunningOutOfBrowser">
<summary>获取一个值，该值指示应用程序是否从浏览器外状态启动。</summary>
<returns>如果应用程序从浏览器外状态启动，则为 true；如果应用程序从其宿主网页启动，则为 false。 </returns>
    </member>
    <member name="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
<summary>加载位于指定统一资源标识符 (URI) 处的 XAML 文件，并将其转换为由该 XAML 文件的根元素指定的对象的实例。</summary>
<param name="component">与要加载的 XAML 文件的根元素类型相同的对象。</param>
<param name="resourceLocator">标识要加载的 XAML 文件的相对 URI。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="resourceLocator"/> 为绝对 URI。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="component"/> 为 null。-或- <paramref name="resourceLocator"/> 为 null。</exception>
<exception cref="T:System.Windows.Markup.XamlParseException">分析 XAML 文件时出错。</exception>
    </member>
    <member name="P:System.Windows.Application.MainWindow">
<summary>获取浏览器外应用程序窗口。</summary>
<returns>浏览器外应用程序窗口。</returns>
<exception cref="T:System.UnauthorizedAccessException">当前线程不为 UI 线程。</exception>
    </member>
    <member name="P:System.Windows.Application.Resources">
<summary>获取应用程序范围资源（如样式、模板和画笔）的集合。</summary>
<returns>一个包含零个或多个应用程序范围资源的 <see cref="T:System.Windows.ResourceDictionary"/> 对象。</returns>
    </member>
    <member name="P:System.Windows.Application.RootVisual">
<summary>获取或设置主要应用程序用户界面。</summary>
<returns>作为主要应用程序用户界面的 <see cref="T:System.Windows.UIElement"/>。</returns>
<exception cref="T:System.InvalidOperationException">设置此属性时，指定的值不是从 <see cref="T:System.Windows.UIElement"/> 派生的类的实例。</exception>
    </member>
    <member name="E:System.Windows.Application.Startup">
<summary>在应用程序启动时发生。</summary>
    </member>
    <member name="E:System.Windows.Application.UnhandledException">
<summary>在未处理由 Silverlight 引发的异常时发生。</summary>
    </member>
    <member name="P:System.Windows.Application.Windows">
<summary>获取已创建的 <see cref="T:System.Windows.Window"/> 实例的集合。</summary>
<returns>应用程序所使用的窗口的集合。</returns>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。 </exception>
<exception cref="T:System.UnauthorizedAccessException">当前线程不为用户界面 (UI) 线程。</exception>
    </member>
    <member name="T:System.Windows.ApplicationServiceContext">
<summary>表示应用程序扩展服务启动时 Silverlight 应用程序的初始状态。 </summary>
    </member>
    <member name="P:System.Windows.ApplicationServiceContext.ApplicationInitParams">
<summary>获取在嵌入 Silverlight 插件时由宿主网页指定的初始化参数。 </summary>
<returns>作为键/值对字典的初始化参数。 </returns>
    </member>
    <member name="T:System.Windows.ApplicationUnhandledExceptionEventArgs">
<summary>为 <see cref="E:System.Windows.Application.UnhandledException"/> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.ApplicationUnhandledExceptionEventArgs.#ctor(System.Exception,System.Boolean)">
<summary>初始化 <see cref="T:System.Windows.ApplicationUnhandledExceptionEventArgs"/> 类的新实例。</summary>
<param name="ex">引发的尚未处理的异常。</param>
<param name="handled">一个值，指示异常是否已得到处理且不应再进一步处理。</param>
    </member>
    <member name="P:System.Windows.ApplicationUnhandledExceptionEventArgs.ExceptionObject">
<summary>获取或设置未处理的异常。</summary>
<returns>未处理的异常。</returns>
    </member>
    <member name="P:System.Windows.ApplicationUnhandledExceptionEventArgs.Handled">
<summary>获取或设置一个值，该值指示是否已处理异常。</summary>
<returns>如果为 true，则标记异常已处理，这表示 Silverlight 不应再进一步处理该异常；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.AssemblyPart">
<summary>程序集部件是将要包括在基于 Silverlight 的应用程序的程序包 (.xap) 中的程序集。</summary>
    </member>
    <member name="M:System.Windows.AssemblyPart.#ctor">
<summary>初始化 <see cref="T:System.Windows.AssemblyPart"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.AssemblyPart.Load(System.IO.Stream)">
<summary>将 <see cref="T:System.IO.Stream"/> 转换为随后将加载到当前应用程序域中的 <see cref="T:System.Reflection.Assembly"/>。</summary>
<returns>随后将加载到当前应用程序域中的 <see cref="T:System.Reflection.Assembly"/>。</returns>
<param name="assemblyStream">要加载到当前应用程序域中的 <see cref="T:System.IO.Stream"/>。</param>
    </member>
    <member name="P:System.Windows.AssemblyPart.Source">
<summary>获取将程序集标识为程序集部件的 <see cref="T:System.Uri"/>。</summary>
<returns>一个 <see cref="T:System.String"/>，它是标识为程序集部件的程序集。</returns>
    </member>
    <member name="F:System.Windows.AssemblyPart.SourceProperty">
<summary>标识 <see cref="P:System.Windows.AssemblyPart.Source"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.AssemblyPart.Source"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.AssemblyPartCollection">
<summary>存储 <see cref="T:System.Windows.AssemblyPart"/> 对象的集合。为 <see cref="P:System.Windows.Deployment.Parts"/> 属性提供集合支持。</summary>
    </member>
    <member name="M:System.Windows.AssemblyPartCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.AssemblyPartCollection"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.CheckAndDownloadUpdateCompletedEventArgs">
<summary>为 <see cref="E:System.Windows.Application.CheckAndDownloadUpdateCompleted"/> 事件提供数据。 </summary>
    </member>
    <member name="P:System.Windows.CheckAndDownloadUpdateCompletedEventArgs.Error">
<summary>获取表示在试图下载更新时所发生错误的异常。 </summary>
<returns>表示错误的异常，如果未发生错误，则为 null。</returns>
    </member>
    <member name="P:System.Windows.CheckAndDownloadUpdateCompletedEventArgs.UpdateAvailable">
<summary>获取一个值，该值指示是否已成功下载应用程序的新版本并将在应用程序下一次启动时使用此版本。 </summary>
<returns>如果有更新可用，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.CheckAndDownloadUpdateCompletedEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.Application.CheckAndDownloadUpdateCompleted"/> 事件的方法。 </summary>
<param name="sender">事件的源。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Clipboard">
<summary>提供可以方便地与系统剪贴板相互传输数据的静态方法。在 Silverlight 5 Beta 中，这种访问仅限于 Unicode 文本字符串。</summary>
    </member>
    <member name="M:System.Windows.Clipboard.ContainsText">
<summary>查询剪贴板上是否存在 UnicodeText 格式的数据。</summary>
<returns>如果系统剪贴板上包含 Unicode 文本数据，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Clipboard.GetText">
<summary>如果 Unicode 文本数据存在，则在系统剪贴板中检索 Unicode 文本数据。</summary>
<returns>如果系统剪贴板上有 Unicode 文本数据，则返回一个包含 Unicode 文本数据的字符串。否则，返回空字符串。</returns>
<exception cref="T:System.Security.SecurityException">从用户启动的上下文调用了此方法。-或- 未确认剪贴板访问用户对话框。</exception>
    </member>
    <member name="M:System.Windows.Clipboard.SetText(System.String)">
<summary>设置要在剪贴板上存储的 Unicode 文本数据，以便以后使用 <see cref="M:System.Windows.Clipboard.GetText"/> 进行访问。</summary>
<param name="text">一个包含要存储在剪贴板上的 Unicode 文本数据的字符串。</param>
<exception cref="T:System.Security.SecurityException">从用户启动的上下文调用了此方法。-或- 未确认剪贴板访问用户对话框。</exception>
    </member>
    <member name="T:System.Windows.CornerRadius">
<summary>描述圆角的特征，例如可以应用于 <see cref="T:System.Windows.Controls.Border"/> 的特征。</summary>
    </member>
    <member name="M:System.Windows.CornerRadius.#ctor(System.Double)">
<summary>初始化新的 <see cref="T:System.Windows.CornerRadius"/> 结构，将相同的统一半径应用到所有的角。</summary>
<param name="uniformRadius">应用到全部四个 <see cref="T:System.Windows.CornerRadius"/> 属性（<see cref="P:System.Windows.CornerRadius.TopLeft"/>、<see cref="P:System.Windows.CornerRadius.TopRight"/>、<see cref="P:System.Windows.CornerRadius.BottomRight"/> 和 <see cref="P:System.Windows.CornerRadius.BottomLeft"/>）的统一半径。</param>
    </member>
    <member name="M:System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)">
<summary>初始化 <see cref="T:System.Windows.CornerRadius"/> 结构的新实例，将特定半径值应用到它的角。</summary>
<param name="topLeft">设置最初的 <see cref="P:System.Windows.CornerRadius.TopLeft"/>。</param>
<param name="topRight">设置最初的 <see cref="P:System.Windows.CornerRadius.TopRight"/>。</param>
<param name="bottomRight">设置最初的 <see cref="P:System.Windows.CornerRadius.BottomLeft"/>。</param>
<param name="bottomLeft">设置最初的 <see cref="P:System.Windows.CornerRadius.BottomRight"/>。</param>
    </member>
    <member name="P:System.Windows.CornerRadius.BottomLeft">
<summary>获取或设置应用 <see cref="T:System.Windows.CornerRadius"/> 的对象左下角的圆角半径（以像素为单位）。</summary>
<returns>一个 <see cref="T:System.Double"/>，表示应用 <see cref="T:System.Windows.CornerRadius"/> 的对象左下角的圆角半径（以像素为单位）。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.BottomRight">
<summary>获取或设置应用 <see cref="T:System.Windows.CornerRadius"/> 的对象右下角的圆角半径（以像素为单位）。</summary>
<returns>一个 <see cref="T:System.Double"/>，表示应用 <see cref="T:System.Windows.CornerRadius"/> 的对象右下角的圆角半径（以像素为单位）。默认值为 0。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.Equals(System.Object)">
<summary>比较此 <see cref="T:System.Windows.CornerRadius"/> 结构与另一个对象是否相等。</summary>
<returns>如果两个对象相等，则为 true；否则为 false。</returns>
<param name="obj">要比较的对象。</param>
    </member>
    <member name="M:System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)">
<summary>比较此 <see cref="T:System.Windows.CornerRadius"/> 结构与另一个 <see cref="T:System.Windows.CornerRadius"/> 结构是否相等。</summary>
<returns>如果 <see cref="T:System.Windows.CornerRadius"/> 的两个实例相等，则为 true；否则为 false。</returns>
<param name="cornerRadius">要对其进行比较以看是否相等的 <see cref="T:System.Windows.CornerRadius"/> 的一个实例。</param>
    </member>
    <member name="M:System.Windows.CornerRadius.GetHashCode">
<summary>返回结构的哈希代码。</summary>
<returns>此 <see cref="T:System.Windows.CornerRadius"/> 的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
<summary>比较两个 <see cref="T:System.Windows.CornerRadius"/> 结构的值是否相等。</summary>
<returns>如果 <see cref="T:System.Windows.CornerRadius"/> 的两个实例相等，则为 true；否则为 false。</returns>
<param name="cr1">要比较的第一个结构。</param>
<param name="cr2">要比较的另一个结构。</param>
    </member>
    <member name="M:System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
<summary>比较两个 <see cref="T:System.Windows.CornerRadius"/> 结构是否不相等。 </summary>
<returns>如果 <see cref="T:System.Windows.CornerRadius"/> 的两个实例不相等，则为 true；否则为 false。</returns>
<param name="cr1">要比较的第一个结构。</param>
<param name="cr2">要比较的另一个结构。</param>
    </member>
    <member name="P:System.Windows.CornerRadius.TopLeft">
<summary>获取或设置应用 <see cref="T:System.Windows.CornerRadius"/> 的对象左上角的圆角半径（以像素为单位）。</summary>
<returns>一个 <see cref="T:System.Double"/>，表示应用 <see cref="T:System.Windows.CornerRadius"/> 的对象左上角的圆角半径（以像素为单位）。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.TopRight">
<summary>获取或设置应用 <see cref="T:System.Windows.CornerRadius"/> 的对象右上角的圆角半径（以像素为单位）。</summary>
<returns>一个 <see cref="T:System.Double"/>，表示应用 <see cref="T:System.Windows.CornerRadius"/> 的对象右上角的圆角半径（以像素为单位）。默认值为 0。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.ToString">
<summary>返回 <see cref="T:System.Windows.CornerRadius"/> 结构的字符串表示形式。</summary>
<returns>一个 <see cref="T:System.String"/>，表示 <see cref="T:System.Windows.CornerRadius"/> 值。</returns>
    </member>
    <member name="T:System.Windows.CrossDomainAccess">
<summary>定义一些值，这些值指定跨域调用方对基于 Silverlight 的应用程序具有的访问权限。</summary>
    </member>
    <member name="F:System.Windows.CrossDomainAccess.NoAccess">
<summary>跨域调用方对 Silverlight 应用程序不具有访问权限。</summary>
    </member>
    <member name="F:System.Windows.CrossDomainAccess.ScriptableOnly">
<summary>跨域调用方对 Silverlight 应用程序具有脚本访问权限。</summary>
    </member>
    <member name="T:System.Windows.DataFormats">
<summary>为数据对象提供静态预定义格式名称。使用已命名的常数标识您向 <see cref="T:System.Windows.IDataObject"/> 对象请求的数据的格式。</summary>
    </member>
    <member name="F:System.Windows.DataFormats.FileDrop">
<summary>指定 Microsoft Windows 文件放置格式。</summary>
<returns>指定 Microsoft Windows 文件放置格式的字符串。</returns>
    </member>
    <member name="T:System.Windows.DataObject">
<summary>提供 <see cref="T:System.Windows.IDataObject"/> 接口的基本实现，该接口为传输数据定义与格式无关的机制。</summary>
    </member>
    <member name="M:System.Windows.DataObject.#ctor">
<summary>初始化 <see cref="T:System.Windows.DataObject"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.DataObject.#ctor(System.Object)">
<summary>使用指定的初始数据初始化 <see cref="T:System.Windows.DataObject"/> 类的新实例。 </summary>
<param name="data">一个对象，表示要在此数据对象中存储的数据。</param>
<exception cref="T:System.NotImplementedException">未实现。</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetData(System.String)">
<summary>检索指定格式的数据对象；数据格式由字符串指定。</summary>
<returns>一个数据对象，其中包含指定格式的数据；如果指定格式的数据不可用，则为 null。</returns>
<param name="format">一个字符串，指定要检索什么格式的数据。使用常量 <see cref="F:System.Windows.DataFormats.FileDrop"/>。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="format"/> 不等效于 <see cref="F:System.Windows.DataFormats.FileDrop"/>。</exception>
<exception cref="T:System.Security.SecurityException">在 Drop 以外的其他模式下尝试的访问。</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetData(System.String,System.Boolean)">
<summary>检索指定格式的数据对象，可选择将数据转换为指定格式。始终引发异常。</summary>
<returns>始终引发异常。</returns>
<param name="format">一个字符串，指定要检索的数据所采用的格式。 </param>
<param name="autoConvert">如果尝试自动将数据转换为指定的格式，则为 true；若果不转换数据格式，则为 false。</param>
<exception cref="T:System.NotImplementedException">未实现。</exception>
<exception cref="T:System.Security.SecurityException">在 Drop 以外的其他模式下尝试的访问。</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetData(System.Type)">
<summary>检索指定格式的数据对象；数据格式由 <see cref="T:System.Type"/> 对象指定。始终引发异常。</summary>
<returns>始终引发异常。</returns>
<param name="format">一个 <see cref="T:System.Type"/> 对象，指定要检索的数据所采用的格式。 </param>
<exception cref="T:System.NotImplementedException">未实现。</exception>
<exception cref="T:System.Security.SecurityException">在 Drop 以外的其他模式下尝试的访问。</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetDataPresent(System.String)">
<summary>查看指定格式的数据是否可用，或者是否可以转换为指定格式；数据格式由一个字符串指定。</summary>
<returns>如果数据采用指定的格式且不为 null，则返回 true。如果 <paramref name="format"/> 不等效于 <see cref="F:System.Windows.DataFormats.FileDrop"/> 或数据为 null，则返回 false。</returns>
<param name="format">一个字符串，指定要检查的格式。请参阅 <see cref="T:System.Windows.DataFormats"/> 类以了解预定义数据格式的集合。</param>
<exception cref="T:System.Security.SecurityException">在 Drop 以外的其他模式下尝试的访问。</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetDataPresent(System.String,System.Boolean)">
<summary>检查指定格式的数据是否可用，或者数据是否可以转换为指定格式。一个布尔标志，指示如果指定格式的数据不可用，是否检查能否将数据转换为此格式。始终引发异常。</summary>
<returns>始终引发异常。</returns>
<param name="format">一个字符串，指定要检查的格式。请参阅 <see cref="T:System.Windows.DataFormats"/> 类以了解预定义数据格式的集合。</param>
<param name="autoConvert">如果仅检查指定的格式，则为 false；如果还要检查是否可以将该数据对象中存储的数据转换为指定的格式，则为 true。</param>
<exception cref="T:System.NotImplementedException">未实现。</exception>
<exception cref="T:System.Security.SecurityException">在 Drop 以外的其他模式下尝试的访问。</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetDataPresent(System.Type)">
<summary>检查指定格式的数据是否可用，或者数据是否可以转换为指定格式。数据格式由 <see cref="T:System.Type"/> 对象指定。始终引发异常。</summary>
<returns>始终引发异常。</returns>
<param name="format">一个 <see cref="T:System.Type"/>，指定要检查的格式。</param>
<exception cref="T:System.NotImplementedException">未实现。</exception>
<exception cref="T:System.Security.SecurityException">在 Drop 以外的其他模式下尝试的访问。</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetFormats">
<summary>返回一个包含所有格式的列表，此数据对象中的数据以这些格式存储，或可以转换为这些格式。</summary>
<returns>一个字符串数组，其中每个字符串都指定此数据对象支持的一种格式的名称。</returns>
<exception cref="T:System.Security.SecurityException">在 Drop 以外的其他模式下尝试的访问。</exception>
    </member>
    <member name="M:System.Windows.DataObject.GetFormats(System.Boolean)">
<summary>返回一个包含所有格式的列表，此数据对象中的数据以这些格式存储。布尔标志指示是否同时包括数据可自动转换为的格式。始终引发异常。</summary>
<returns>始终引发异常。</returns>
<param name="autoConvert">若要检索此数据对象中的数据采用的所有存储格式或转换为的所有格式，则为 true；若要仅检索存储于此数据对象中的数据的存储格式（不包括数据未采用但可自动转换为的存储格式），则为 false。</param>
<exception cref="T:System.NotImplementedException">未实现。</exception>
<exception cref="T:System.Security.SecurityException">在 Drop 以外的其他模式下尝试的访问。</exception>
    </member>
    <member name="M:System.Windows.DataObject.SetData(System.Object)">
<summary>在此数据对象中存储指定的数据，同时自动从源对象类型转换数据格式。始终引发异常。</summary>
<param name="data">要在此数据对象中存储的数据。</param>
<exception cref="T:System.NotImplementedException">未实现。</exception>
<exception cref="T:System.Security.SecurityException">在 Drop 以外的其他模式下尝试的访问。</exception>
    </member>
    <member name="M:System.Windows.DataObject.SetData(System.String,System.Object)">
<summary>在此数据对象中存储指定的数据，以及一种或多种指定的数据格式。数据格式由字符串指定。始终引发异常。</summary>
<param name="format">一个指定数据存储格式的字符串。请参阅 <see cref="T:System.Windows.DataFormats"/> 类以查看一组预定义的数据格式。</param>
<param name="data">要在此数据对象中存储的数据。</param>
<exception cref="T:System.NotImplementedException">未实现。</exception>
<exception cref="T:System.Security.SecurityException">在 Drop 以外的其他模式下尝试的访问。</exception>
    </member>
    <member name="M:System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)">
<summary>在此数据对象中存储指定的数据，以及一种或多种指定的数据格式。此重载包含一个布尔标志，用于指示是否可在检索时将数据转换为其他格式。始终引发异常。</summary>
<param name="format">一个字符串，指定存储数据时使用的格式。请参阅 <see cref="T:System.Windows.DataFormats"/> 类以了解预定义数据格式的集合。</param>
<param name="data">要在此数据对象中存储的数据。</param>
<param name="autoConvert">如果允许检索时将数据转换为其他格式，则为 true；如果禁止在检索时将数据转换为其他格式，则为 false。</param>
<exception cref="T:System.NotImplementedException">未实现。</exception>
<exception cref="T:System.Security.SecurityException">在 Drop 以外的其他模式下尝试的访问。</exception>
    </member>
    <member name="M:System.Windows.DataObject.SetData(System.Type,System.Object)">
<summary>在此数据对象中存储指定的数据，以及一种或多种指定的数据格式。数据格式由 <see cref="T:System.Type"/> 类指定。始终引发异常。</summary>
<param name="format">一个 <see cref="T:System.Type"/>，指定存储数据时使用的格式。</param>
<param name="data">要在此数据对象中存储的数据。</param>
<exception cref="T:System.NotImplementedException">未实现。</exception>
<exception cref="T:System.Security.SecurityException">在 Drop 以外的其他模式下尝试的访问。</exception>
    </member>
    <member name="T:System.Windows.DataTemplate">
<summary>描述数据对象的可视结构。</summary>
    </member>
    <member name="M:System.Windows.DataTemplate.#ctor">
<summary>初始化 <see cref="T:System.Windows.DataTemplate"/> 类的新实例，而不初始化 <see cref="P:System.Windows.DataTemplate.DataType"/> 属性。</summary>
    </member>
    <member name="M:System.Windows.DataTemplate.#ctor(System.Object)">
<summary>初始化 <see cref="T:System.Windows.DataTemplate"/> 类的新实例，将 <see cref="P:System.Windows.DataTemplate.DataType"/> 属性设置为指定的值。</summary>
<param name="dataType"><see cref="P:System.Windows.DataTemplate.DataType"/> 属性的初始值。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="dataType"/> 并不属于类型 <see cref="T:System.Type"/>。</exception>
    </member>
    <member name="P:System.Windows.DataTemplate.DataType">
<summary>获取或设置此 <see cref="T:System.Windows.DataTemplate"/> 所针对的类型。</summary>
<returns>此模板应用到的对象的类型。</returns>
<exception cref="T:System.ArgumentException">当设置此属性时，指定的值不是 <see cref="T:System.Type"/> 类型。</exception>
    </member>
    <member name="M:System.Windows.DataTemplate.LoadContent">
<summary>在 <see cref="T:System.Windows.DataTemplate"/> 中创建 <see cref="T:System.Windows.UIElement"/> 对象。 </summary>
<returns><see cref="T:System.Windows.DataTemplate"/> 的根 <see cref="T:System.Windows.UIElement"/>。</returns>
    </member>
    <member name="T:System.Windows.DataTemplateKey">
<summary>表示 <see cref="T:System.Windows.DataTemplate"/> 类的资源键。</summary>
    </member>
    <member name="M:System.Windows.DataTemplateKey.#ctor">
<summary>初始化 <see cref="T:System.Windows.DataTemplateKey"/> 类的新实例，而不初始化 <see cref="P:System.Windows.DataTemplateKey.DataType"/> 属性。</summary>
    </member>
    <member name="M:System.Windows.DataTemplateKey.#ctor(System.Object)">
<summary>初始化 <see cref="T:System.Windows.DataTemplateKey"/> 类的新实例，将 <see cref="P:System.Windows.DataTemplateKey.DataType"/> 属性设置为指定的值。</summary>
<param name="dataType"><see cref="P:System.Windows.DataTemplate.DataType"/> 属性的初始值。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="dataType"/> 并不属于类型 <see cref="T:System.Type"/>。</exception>
    </member>
    <member name="P:System.Windows.DataTemplateKey.DataType">
<summary>获取或设置模板所针对的类型。</summary>
<returns>模板应用到的对象的类型。</returns>
<exception cref="T:System.ArgumentException">当设置此属性时，指定的值不是 <see cref="T:System.Type"/> 类型。</exception>
    </member>
    <member name="M:System.Windows.DataTemplateKey.Equals(System.Object)">
<summary>返回一个值，该值指示指定的对象是否为与当前 <see cref="T:System.Windows.DataTemplateKey"/> 具有相同 <see cref="P:System.Windows.DataTemplateKey.DataType"/> 属性值的 <see cref="T:System.Windows.DataTemplateKey"/>。</summary>
<returns>如果 <paramref name="o"/> 等于当前对象，则为 true；否则为 false。</returns>
<param name="o">要与当前对象进行比较的对象。</param>
    </member>
    <member name="M:System.Windows.DataTemplateKey.GetHashCode">
<summary>返回 <see cref="P:System.Windows.DataTemplateKey.DataType"/> 属性值的哈希代码。</summary>
<returns><see cref="P:System.Windows.DataTemplateKey.DataType"/> 属性值的哈希代码，如果 <see cref="P:System.Windows.DataTemplateKey.DataType"/> 为 null，则为 0。</returns>
    </member>
    <member name="T:System.Windows.DependencyObject">
<summary>表示一个参与 Silverlight 依赖项属性系统的对象。<see cref="T:System.Windows.DependencyObject"/> 是 <see cref="T:System.Windows.UIElement"/>、<see cref="T:System.Windows.Media.Geometry"/>、<see cref="T:System.Windows.FrameworkTemplate"/>、<see cref="T:System.Windows.Style"/> 和 <see cref="T:System.Windows.ResourceDictionary"/> 等若干个其他重要的 Silverlight 类的直接基类。</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
<summary>初始化 <see cref="T:System.Windows.DependencyObject"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.CheckAccess">
<summary>确定调用线程是否可以访问此对象。</summary>
<returns>如果调用线程可以访问此对象，则为 true；否则为 false。 </returns>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
<summary>清除依赖项属性的本地值。 </summary>
<param name="dp">要为其清除值的属性的 <see cref="T:System.Windows.DependencyProperty"/> 标识符。</param>
    </member>
    <member name="P:System.Windows.DependencyObject.Dispatcher">
<summary>获取与此对象关联的 <see cref="T:System.Windows.Threading.Dispatcher"/>。 </summary>
<returns>与此对象关联的 <see cref="T:System.Windows.Threading.Dispatcher"/>。 </returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)">
<summary>返回为 Silverlight 依赖项属性设置的任意基值，在动画不活动时将应用它们。</summary>
<returns>返回的基值。</returns>
<param name="dp">所需的依赖项属性的标识符。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="dp"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
<summary>从 <see cref="T:System.Windows.DependencyObject"/> 返回依赖项属性的当前有效值。 </summary>
<returns>返回当前的有效值。</returns>
<param name="dp">要为其检索值的属性的 <see cref="T:System.Windows.DependencyProperty"/> 标识符。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="dp"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
<summary>返回依赖项属性的本地值（如果设置了本地值）。 </summary>
<returns>返回本地值，或在未设置本地值的情况下返回 sentinel 值 <see cref="F:System.Windows.DependencyProperty.UnsetValue"/>。</returns>
<param name="dp">要为其检索本地值的属性的 <see cref="T:System.Windows.DependencyProperty"/> 标识符。</param>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
<summary>对 <see cref="T:System.Windows.DependencyObject"/> 设置依赖项属性的本地值。 </summary>
<param name="dp">要设置的依赖项属性的标识符。</param>
<param name="value">新的本地值。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="value"/> 的类型不是为 <paramref name="dp"/> 属性注册时使用的正确类型。</exception>
    </member>
    <member name="T:System.Windows.DependencyObjectCollection`1">
<summary>表示指定类型的 <see cref="T:System.Windows.DependencyObject"/> 实例的集合。</summary>
<typeparam name="T">集合中的项的类型。</typeparam>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.#ctor">
<summary>初始化 <see cref="T:System.Windows.DependencyObjectCollection`1"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.Add(`0)">
<summary>将指定的对象添加到集合末尾。</summary>
<param name="item">要添加到集合中的对象。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="item"/> 不是 <see cref="T:System.Windows.DependencyObject"/>。</exception>
<exception cref="T:System.InvalidOperationException">该方法正在 <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged"/> 事件处理程序中调用。 </exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.Clear">
<summary>从集合中移除所有对象。</summary>
<exception cref="T:System.InvalidOperationException">该方法正在 <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged"/> 事件处理程序中调用。 </exception>
    </member>
    <member name="E:System.Windows.DependencyObjectCollection`1.CollectionChanged">
<summary>在集合中添加、移除或替换项时发生。</summary>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.Contains(`0)">
<summary>获取一个值，该值指示集合中是否包含指定对象。</summary>
<returns>如果该对象在集合中，则为 true；否则为 false。</returns>
<param name="item">集合中要检查的对象。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="item"/> 不是 <see cref="T:System.Windows.DependencyObject"/>。</exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.CopyTo(`0[],System.Int32)">
<summary>从指定索引处开始，将集合中的对象复制到指定的数组。</summary>
<param name="array">目标数组。</param>
<param name="arrayIndex">要复制的第一个对象的索引。</param>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.Count">
<summary>获取集合中的对象数。</summary>
<returns>集合中的对象数。</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.GetEnumerator">
<summary>获取一个能够循环访问集合的枚举器。</summary>
<returns>集合的枚举器。</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.IndexOf(`0)">
<summary>获取集合中指定对象的索引；如果该对象不在集合中，则返回 -1。</summary>
<returns>集合中 <paramref name="item"/> 的第一个匹配项的索引；如果集合中没有 <paramref name="item"/>，则为 -1。</returns>
<param name="item">要在集合中查找的对象。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="item"/> 不是 <see cref="T:System.Windows.DependencyObject"/>。</exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.Insert(System.Int32,`0)">
<summary>将指定对象添加到集合中的指定索引处。</summary>
<param name="index">要添加对象的位置处的索引。</param>
<param name="item">要添加的对象。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
<paramref name="index"/> 小于零或大于集合中的项数。</exception>
      <exception cref="T:System.ArgumentException">
<paramref name="item"/> 不是 <see cref="T:System.Windows.DependencyObject"/>。</exception>
<exception cref="T:System.InvalidOperationException">该方法正在 <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged"/> 事件处理程序中调用。 </exception>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.IsReadOnly">
<summary>获取一个指示能否修改该集合的值。</summary>
<returns>如果可以修改该集合，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.Item(System.Int32)">
<summary>获取或设置指定索引处的对象。</summary>
<returns>指定索引处的对象。</returns>
<param name="index">要获取或设置的对象的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
<paramref name="index"/> 小于零或大于集合中的项数。</exception>
<exception cref="T:System.ArgumentException">当设置此属性时，指定的值不是 <see cref="T:System.Windows.DependencyObject"/>。</exception>
<exception cref="T:System.InvalidOperationException">该属性正在 <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged"/> 事件处理程序中设置。 </exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.Remove(`0)">
<summary>从集合中移除指定的对象。</summary>
<returns>如果该对象被移除，则为 true；如果未在集合中找到该对象，则为 false。</returns>
<param name="item">要移除的对象。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="item"/> 不是 <see cref="T:System.Windows.DependencyObject"/>。</exception>
<exception cref="T:System.InvalidOperationException">该方法正在 <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged"/> 事件处理程序中调用。 </exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.RemoveAt(System.Int32)">
<summary>从集合中移除位于指定索引位置的对象。</summary>
<param name="index">要移除的对象的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
<paramref name="index"/> 小于零或大于集合中的最高索引。</exception>
<exception cref="T:System.InvalidOperationException">该方法正在 <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged"/> 事件处理程序中调用。 </exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
<summary>从指定索引处开始，将集合中的对象复制到指定的数组。</summary>
<param name="array">目标数组。</param>
<param name="index">要复制的第一个对象的索引。</param>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#Count">
<summary>获取集合中的对象数。</summary>
<returns>集合中的对象数。</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#IsSynchronized">
<summary>获取一个值，指示对集合的访问是否同步（线程安全）。 </summary>
<returns>如果对集合的访问是同步（线程安全）的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#SyncRoot">
<summary>获取可用于同步对集合的访问的对象。</summary>
<returns>可用于同步对集合的访问的对象。</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IEnumerable#GetEnumerator">
<summary>获取一个能够循环访问集合的枚举器。</summary>
<returns>集合的枚举器。</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Add(System.Object)">
<summary>将指定的对象添加到集合末尾。</summary>
<returns>添加了对象的位置处的索引。</returns>
<param name="value">要添加到集合中的对象。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="value"/> 不是 <see cref="T:System.Windows.DependencyObject"/>。</exception>
<exception cref="T:System.InvalidOperationException">该方法正在 <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged"/> 事件处理程序中调用。 </exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Clear">
<summary>从集合中移除所有对象。</summary>
<exception cref="T:System.InvalidOperationException">该方法正在 <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged"/> 事件处理程序中调用。 </exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Contains(System.Object)">
<summary>获取一个值，该值指示集合中是否包含指定对象。</summary>
<returns>如果该对象在集合中，则为 true；否则为 false。</returns>
<param name="value">集合中要检查的对象。</param>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IndexOf(System.Object)">
<summary>获取集合中指定对象的索引；如果该对象不在集合中，则返回 -1。</summary>
<returns>集合中 <paramref name="item"/> 的第一个匹配项的索引；如果集合中没有 <paramref name="item"/>，则为 -1。</returns>
<param name="value">要在集合中查找的对象。</param>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
<summary>将指定对象添加到集合中的指定索引处。</summary>
<param name="index">要添加对象的位置处的索引。</param>
<param name="value">要添加的对象。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
<paramref name="index"/> 小于零或大于集合中的项数。</exception>
      <exception cref="T:System.ArgumentException">
<paramref name="value"/> 不是 <see cref="T:System.Windows.DependencyObject"/>。</exception>
<exception cref="T:System.InvalidOperationException">该方法正在 <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged"/> 事件处理程序中调用。 </exception>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IsFixedSize">
<summary>获取一个值，该指示集合在创建之后是否允许添加或移除对象。</summary>
<returns>如果集合具有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IsReadOnly">
<summary>获取一个指示能否修改该集合的值。</summary>
<returns>如果可以修改该集合，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Item(System.Int32)">
<summary>获取或设置指定索引处的对象。</summary>
<returns>指定索引处的对象。</returns>
<param name="index">要获取或设置的对象的索引。</param>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Remove(System.Object)">
<summary>从集合中移除指定的对象。</summary>
<param name="value">要移除的对象。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="value"/> 不是 <see cref="T:System.Windows.DependencyObject"/>。</exception>
<exception cref="T:System.InvalidOperationException">该方法正在 <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged"/> 事件处理程序中调用。 </exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
<summary>从集合中移除位于指定索引位置的对象。</summary>
<param name="index">要移除的对象的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
<paramref name="index"/> 小于零或大于集合中的最高索引。</exception>
<exception cref="T:System.InvalidOperationException">该方法正在 <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged"/> 事件处理程序中调用。 </exception>
    </member>
    <member name="T:System.Windows.DependencyProperty">
<summary>表示向 Silverlight 依赖项属性系统注册的依赖项属性。依赖项属性为值表达式、数据绑定、动画和属性更改通知提供支持。</summary>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
<summary>检索注册到指定 <see cref="T:System.Type"/> 的依赖项属性的属性元数据值。</summary>
<returns>属性元数据对象。</returns>
<param name="forType">从中检索依赖项属性元数据的特定类型。</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
<summary>使用属性的指定属性名称、属性类型、所有者类型和属性元数据注册依赖项属性。 </summary>
<returns>一个依赖项对象标识符，应使用它在您的类中设置公用静态只读字段的值。随后可以在您自己的代码以及任何第三方用户代码中使用该标识符在将来引用该依赖项属性，用于某些操作，比如以编程方式设置该属性的值，或是在代码中附加 <see cref="T:System.Windows.Data.Binding"/>。</returns>
<param name="name">要注册的依赖项对象的名称。</param>
<param name="propertyType">属性的类型。</param>
<param name="ownerType">正注册依赖项对象的所有者类型。</param>
<param name="typeMetadata">属性元数据实例。实例中可以包含一个 <see cref="T:System.Windows.PropertyChangedCallback"/> 实现引用。</param>
<exception cref="T:System.ArgumentNullException">必需的参数为 null（在异常中检查缺失参数的名称）。</exception>
<exception cref="T:System.ArgumentException">参数超出范围，例如 <paramref name="name"/> 为空字符串。-或- 尝试使用与 <paramref name="typeMetadata"/> 中指定的默认值不匹配的 <paramref name="propertyType"/> 注册。</exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
<summary>使用属性的指定属性名称、属性类型、所有者类型和属性元数据注册附加依赖项属性。 </summary>
<returns>一个依赖项对象标识符，应使用它在您的类中设置公用静态只读字段的值。随后可以使用该标识符在将来引用附加属性，用于某些操作，比如以编程方式设置该属性的值，或者附加 <see cref="T:System.Windows.Data.Binding"/>。</returns>
<param name="name">要注册的依赖项对象的名称。</param>
<param name="propertyType">属性的类型。</param>
<param name="ownerType">正注册依赖项对象的所有者类型。</param>
<param name="defaultMetadata">属性元数据实例。实例中可以包含一个 <see cref="T:System.Windows.PropertyChangedCallback"/> 实现引用。</param>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
<summary>指定由属性系统使用的静态值而非 null，以指示属性存在，但其值未经属性系统设置。</summary>
<returns>未设置值的 sentinel 值。</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
<summary>为 <see cref="T:System.Windows.PropertyChangedCallback"/> 实现提供数据。</summary>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
<summary>获取发生更改之后的属性的值。</summary>
<returns>发生更改之后的属性值。</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
<summary>获取发生更改之前的属性的值。</summary>
<returns>发生更改之前的属性值。</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
<summary>获取发生值更改的依赖项属性的标识符。</summary>
<returns>发生值更改的依赖项属性的标识符字段。</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
<summary>表示将处理某些事件的方法，这些事件在特定的 <see cref="T:System.Windows.DependencyObject"/> 实现上的 <see cref="T:System.Windows.DependencyProperty"/> 发生更改时引发。 </summary>
<param name="sender">事件的源（通常为属性已更改的对象）。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Deployment">
<summary>部署基于 Silverlight 的应用程序时，提供应用程序清单中的应用程序部件和本地化信息。</summary>
    </member>
    <member name="M:System.Windows.Deployment.#ctor">
<summary>初始化 <see cref="T:System.Windows.Deployment"/> 类的新实例。</summary>
<exception cref="T:System.InvalidOperationException">已初始化 <see cref="P:System.Windows.Deployment.Current"/> 属性。 </exception>
    </member>
    <member name="P:System.Windows.Deployment.Current">
<summary>获取当前 <see cref="T:System.Windows.Deployment"/> 对象。 </summary>
<returns>当前的 <see cref="T:System.Windows.Deployment"/> 对象。</returns>
    </member>
    <member name="P:System.Windows.Deployment.EntryPointAssembly">
<summary>获取一个字符串名称，该名称标识 <see cref="T:System.Windows.Deployment"/> 中的哪个部分为入口点程序集。</summary>
<returns>一个字符串，它命名应该用作入口点程序集的程序集。这将是您指定为 <see cref="T:System.Windows.AssemblyPart"/> 的某个程序集的名称。</returns>
    </member>
    <member name="F:System.Windows.Deployment.EntryPointAssemblyProperty">
<summary>标识 <see cref="P:System.Windows.Deployment.EntryPointAssembly"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Deployment.EntryPointAssembly"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Deployment.EntryPointType">
<summary>获取标识类的命名空间和类型名称的一个字符串，该类包含您应用程序的 <see cref="T:System.Windows.Application"/> 入口点。</summary>
<returns>包含 <see cref="T:System.Windows.Application"/> 入口点的类的命名空间和类型名称。</returns>
    </member>
    <member name="F:System.Windows.Deployment.EntryPointTypeProperty">
<summary>标识 <see cref="P:System.Windows.Deployment.EntryPointType"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Deployment.EntryPointType"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Deployment.ExternalCallersFromCrossDomain">
<summary>获取一个值，该值指示跨域调用方对此部署中基于 Silverlight 的应用程序具有的访问级别。</summary>
<returns>指示跨域调用方的访问级别的值。</returns>
    </member>
    <member name="F:System.Windows.Deployment.ExternalCallersFromCrossDomainProperty">
<summary>标识 <see cref="P:System.Windows.Deployment.ExternalCallersFromCrossDomain"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Deployment.ExternalCallersFromCrossDomain"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Deployment.ExternalParts">
<summary>获取 <see cref="T:System.Windows.ExternalPart"/> 实例的集合，这些实例表示应用程序要求的外部程序集。</summary>
<returns>外部程序集部件的集合。默认值为空集合。</returns>
    </member>
    <member name="F:System.Windows.Deployment.ExternalPartsProperty">
<summary>标识 <see cref="P:System.Windows.Deployment.ExternalParts"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Deployment.ExternalParts"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Deployment.GetAppIdForUri(System.Uri,System.String@)">
<summary>[SECURITY CRITICAL] 获取表示浏览器外应用程序的唯一 ID 的值。</summary>
<returns>浏览器外应用程序的唯一 ID。 </returns>
<param name="AppUri">应用程序的 .xap 文件在其主机服务器上的绝对 URI。</param>
<param name="xapLocationStr">此方法返回时，在脱机应用程序缓存中包含 .xap 文件的本地路径。该参数未经初始化即被传递。 </param>
    </member>
    <member name="P:System.Windows.Deployment.OutOfBrowserSettings">
<summary>获取一个对象，该对象包含关于用于浏览器外支持的应用程序信息。 </summary>
<returns>关于用于浏览器外支持的应用程序的信息。 </returns>
    </member>
    <member name="F:System.Windows.Deployment.OutOfBrowserSettingsProperty">
<summary>标识 <see cref="P:System.Windows.Deployment.OutOfBrowserSettings"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Deployment.OutOfBrowserSettings"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Deployment.Parts">
<summary>获取部署中包含的程序集部件的集合。</summary>
<returns>程序集部件的集合。默认值为空集合。</returns>
    </member>
    <member name="F:System.Windows.Deployment.PartsProperty">
<summary>标识 <see cref="P:System.Windows.Deployment.Parts"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Deployment.Parts"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Deployment.RegisterAssembly(System.Reflection.Assembly)">
<summary>[SECURITY CRITICAL] 允许本机 Silverlight 宿主（如 Expression Blend 或 Visual Studio）指导 Silverlight 注册一个程序集，Silverlight 宿主已单独将该程序集加载到 Silverlight 应用程序正在运行的宿主托管的应用程序域中。</summary>
<param name="assembly">Silverlight 宿主已单独加载的程序集。</param>
    </member>
    <member name="P:System.Windows.Deployment.RuntimeVersion">
<summary>获取此部署支持的 Silverlight 运行时版本。</summary>
<returns>此部署支持的 Silverlight 运行时版本。</returns>
    </member>
    <member name="F:System.Windows.Deployment.RuntimeVersionProperty">
<summary>标识 <see cref="P:System.Windows.Deployment.RuntimeVersion"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Deployment.RuntimeVersion"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Deployment.SetCurrentApplication(System.Windows.Application)">
<summary>[SECURITY CRITICAL] 允许 Silverlight 插件的本机宿主指定正在运行的 Silverlight 应用程序的当前 <see cref="T:System.Windows.Application"/> 对象。</summary>
<param name="application">本机宿主正在设置为当前 <see cref="T:System.Windows.Application"/> 的 <see cref="T:System.Windows.Application"/> 对象。</param>
    </member>
    <member name="T:System.Windows.DragEventArgs">
<summary>为 Silverlight 中的拖放事件提供数据。 </summary>
    </member>
    <member name="P:System.Windows.DragEventArgs.Data">
<summary>获取一个数据对象（实现 <see cref="T:System.Windows.IDataObject"/>），该对象包含与相应的拖动事件关联的数据。此值在所有的事件事例中都没用；请参阅“备注”。</summary>
<returns>包含与相应的拖动事件关联的数据的数据对象。</returns>
    </member>
    <member name="M:System.Windows.DragEventArgs.GetPosition(System.Windows.UIElement)">
<summary>返回与指定 <see cref="T:System.Windows.UIElement"/> 相关的拖动点。</summary>
<returns>与 <paramref name="relativeTo"/> 中所指定元素相关的拖动点。</returns>
<param name="relativeTo">要为其获取相关拖动点的 <see cref="T:System.Windows.UIElement"/>。</param>
    </member>
    <member name="P:System.Windows.DragEventArgs.Handled">
<summary>获取或设置一个值，该值指示路由事件在路由过程中的事件处理当前状态。</summary>
<returns>如果事件标记为已处理，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="T:System.Windows.DragEventHandler">
<summary>表示将处理 <see cref="T:System.Windows.UIElement"/> 的 <see cref="E:System.Windows.UIElement.DragEnter"/>、<see cref="E:System.Windows.UIElement.DragLeave"/>、<see cref="E:System.Windows.UIElement.DragOver"/> 和 <see cref="E:System.Windows.UIElement.Drop"/> 事件的方法。 </summary>
<param name="sender">事件处理程序所附加到的对象。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Duration">
<summary>表示 <see cref="T:System.Windows.Media.Animation.Timeline"/> 处于活动状态的持续时间。</summary>
    </member>
    <member name="M:System.Windows.Duration.#ctor(System.TimeSpan)">
<summary>使用提供的 <see cref="T:System.TimeSpan"/> 值初始化 <see cref="T:System.Windows.Duration"/> 结构的新实例。</summary>
<param name="timeSpan">表示此持续时间的初始时间间隔。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="timeSpan"/> 的计算结果小于 <see cref="F:System.TimeSpan.Zero"/>。</exception>
    </member>
    <member name="M:System.Windows.Duration.Add(System.Windows.Duration)">
<summary>将指定的 <see cref="T:System.Windows.Duration"/> 值与此 <see cref="T:System.Windows.Duration"/> 相加。</summary>
<returns>如果涉及的每个 <see cref="T:System.Windows.Duration"/> 都具有值，则返回表示合并值的 <see cref="T:System.Windows.Duration"/>。否则，此方法返回 null。</returns>
<param name="duration"><see cref="T:System.Windows.Duration"/> 的一个实例，该实例表示当前实例加 <paramref name="duration"/> 的值。</param>
    </member>
    <member name="P:System.Windows.Duration.Automatic">
<summary>获取一个自动确定的 <see cref="T:System.Windows.Duration"/> 值。</summary>
<returns>一个初始化为自动值的 <see cref="T:System.Windows.Duration"/>。</returns>
    </member>
    <member name="M:System.Windows.Duration.Compare(System.Windows.Duration,System.Windows.Duration)">
<summary>将一个 <see cref="T:System.Windows.Duration"/> 值与另一个值进行比较。</summary>
<returns>如果 <paramref name="t1"/> 小于 <paramref name="t2"/>，则为一个表示差的负值。如果 <paramref name="t1"/> 等于 <paramref name="t2"/>，则为 0。如果 <paramref name="t1"/> 大于 <paramref name="t2"/>，则为一个表示差的正值。</returns>
<param name="t1">要比较的第一个 <see cref="T:System.Windows.Duration"/> 实例。</param>
<param name="t2">要比较的第二个 <see cref="T:System.Windows.Duration"/> 实例。</param>
    </member>
    <member name="M:System.Windows.Duration.Equals(System.Object)">
<summary>确定指定的对象是否等于 <see cref="T:System.Windows.Duration"/>。</summary>
<returns>如果值等于此 <see cref="T:System.Windows.Duration"/>，则为 true；否则为 false。</returns>
<param name="value">要检查是否相等的对象。</param>
    </member>
    <member name="M:System.Windows.Duration.Equals(System.Windows.Duration)">
<summary>确定指定的 <see cref="T:System.Windows.Duration"/> 是否等于此 <see cref="T:System.Windows.Duration"/>。</summary>
<returns>如果 <paramref name="duration"/> 等于此 <see cref="T:System.Windows.Duration"/>，则为 true；否则为 false。</returns>
<param name="duration">要检查是否相等的 <see cref="T:System.Windows.Duration"/>。</param>
    </member>
    <member name="M:System.Windows.Duration.Equals(System.Windows.Duration,System.Windows.Duration)">
<summary>确定两个 <see cref="T:System.Windows.Duration"/> 值是否相等。</summary>
<returns>如果 <paramref name="t1"/> 等于 <paramref name="t2"/>，则为 true；否则为 false。</returns>
<param name="t1">要进行比较的第一个 <see cref="T:System.Windows.Duration"/>。</param>
<param name="t2">要进行比较的第二个 <see cref="T:System.Windows.Duration"/>。</param>
    </member>
    <member name="P:System.Windows.Duration.Forever">
<summary>获取一个表示无限间隔的 <see cref="T:System.Windows.Duration"/> 值。</summary>
<returns>一个初始化为永久值的 <see cref="T:System.Windows.Duration"/>。</returns>
    </member>
    <member name="M:System.Windows.Duration.GetHashCode">
<summary>获取此对象的哈希代码。</summary>
<returns>哈希代码标识符。</returns>
    </member>
    <member name="P:System.Windows.Duration.HasTimeSpan">
<summary>获取一个值，该值指示此 <see cref="T:System.Windows.Duration"/> 是否表示 <see cref="T:System.TimeSpan"/> 值。</summary>
<returns>如果此 <see cref="T:System.Windows.Duration"/> 为 <see cref="T:System.TimeSpan"/> 值，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Duration.op_Addition(System.Windows.Duration,System.Windows.Duration)">
<summary>将两个 <see cref="T:System.Windows.Duration"/> 值相加。</summary>
<returns>如果两个 <see cref="T:System.Windows.Duration"/> 值都具有 <see cref="T:System.TimeSpan"/> 值，则此方法将返回这两个值的和。如果任意一个值设置为 <see cref="P:System.Windows.Duration.Automatic"/>，则方法将返回 <see cref="P:System.Windows.Duration.Automatic"/>。如果任意一个值设置为 <see cref="P:System.Windows.Duration.Forever"/>，则方法将返回 <see cref="P:System.Windows.Duration.Forever"/>。如果 <paramref name="t1"/> 或 <paramref name="t2"/> 没有值，则此方法返回 null。</returns>
<param name="t1">要相加的第一个 <see cref="T:System.Windows.Duration"/>。</param>
<param name="t2">要相加的第二个 <see cref="T:System.Windows.Duration"/>。</param>
    </member>
    <member name="M:System.Windows.Duration.op_Equality(System.Windows.Duration,System.Windows.Duration)">
<summary>确定两个 <see cref="T:System.Windows.Duration"/> 实例是否相等。</summary>
<returns>如果两个 <see cref="T:System.Windows.Duration"/> 值具有相等属性值，或者如果所有 <see cref="T:System.Windows.Duration"/> 值为 null，则为 true。否则，此方法返回 false。</returns>
<param name="t1">要进行比较的第一个 <see cref="T:System.Windows.Duration"/>。</param>
<param name="t2">要进行比较的第二个 <see cref="T:System.Windows.Duration"/>。</param>
    </member>
    <member name="M:System.Windows.Duration.op_GreaterThan(System.Windows.Duration,System.Windows.Duration)">
<summary>确定一个 <see cref="T:System.Windows.Duration"/> 是否大于另一个。</summary>
<returns>如果 <paramref name="t1"/> 和 <paramref name="t2"/> 都有值，并且 <paramref name="t1"/> 大于 <paramref name="t2"/>，则为 true；否则为 false。</returns>
<param name="t1">要进行比较的 <see cref="T:System.Windows.Duration"/> 值。</param>
<param name="t2">要进行比较的第二个 <see cref="T:System.Windows.Duration"/> 值。</param>
    </member>
    <member name="M:System.Windows.Duration.op_GreaterThanOrEqual(System.Windows.Duration,System.Windows.Duration)">
<summary>确定一个 <see cref="T:System.Windows.Duration"/> 是否大于等于另一个。</summary>
<returns>如果 <paramref name="t1"/> 和 <paramref name="t2"/> 都有值，并且 <paramref name="t1"/> 大于或等于 <paramref name="t2"/>，则为 true；否则为 false。</returns>
<param name="t1">要比较的第一个 <see cref="T:System.Windows.Duration"/> 实例。</param>
<param name="t2">要比较的第二个 <see cref="T:System.Windows.Duration"/> 实例。</param>
    </member>
    <member name="M:System.Windows.Duration.op_Implicit(System.TimeSpan)~System.Windows.Duration">
<summary>依据给定的 <see cref="T:System.TimeSpan"/> 隐式创建 <see cref="T:System.Windows.Duration"/>。</summary>
<returns>创建的 <see cref="T:System.Windows.Duration"/>。</returns>
      <param name="timeSpan">
从中隐式创建 <see cref="T:System.Windows.Duration"/> 的 <see cref="T:System.TimeSpan"/>。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="timeSpan"/> 的计算结果小于 <see cref="F:System.TimeSpan.Zero"/>。</exception>
    </member>
    <member name="M:System.Windows.Duration.op_Inequality(System.Windows.Duration,System.Windows.Duration)">
<summary>确定两个 <see cref="T:System.Windows.Duration"/> 实例是否不相等。</summary>
<returns>如果 <paramref name="t1"/> 或 <paramref name="t2"/> 中只有一个表示值，或者它们均表示不相等的值，则为 true；否则为 false。</returns>
<param name="t1">要进行比较的第一个 <see cref="T:System.Windows.Duration"/>。</param>
<param name="t2">要进行比较的第二个 <see cref="T:System.Windows.Duration"/>。</param>
    </member>
    <member name="M:System.Windows.Duration.op_LessThan(System.Windows.Duration,System.Windows.Duration)">
<summary>确定 <see cref="T:System.Windows.Duration"/> 是否小于另一个实例的值。</summary>
<returns>如果 <paramref name="t1"/> 和 <paramref name="t2"/> 都有值，并且 <paramref name="t1"/> 小于 <paramref name="t2"/>，则为 true；否则为 false。</returns>
<param name="t1">要进行比较的第一个 <see cref="T:System.Windows.Duration"/>。</param>
<param name="t2">要进行比较的第二个 <see cref="T:System.Windows.Duration"/>。</param>
    </member>
    <member name="M:System.Windows.Duration.op_LessThanOrEqual(System.Windows.Duration,System.Windows.Duration)">
<summary>确定一个 <see cref="T:System.Windows.Duration"/> 是否小于等于另一个。</summary>
<returns>如果 <paramref name="t1"/> 和 <paramref name="t2"/> 都有值，并且 <paramref name="t1"/> 小于或等于 <paramref name="t2"/>，则为 true；否则为 false。</returns>
<param name="t1">要进行比较的 <see cref="T:System.Windows.Duration"/>。</param>
<param name="t2">要进行比较的 <see cref="T:System.Windows.Duration"/>。</param>
    </member>
    <member name="M:System.Windows.Duration.op_Subtraction(System.Windows.Duration,System.Windows.Duration)">
<summary>从一个 <see cref="T:System.Windows.Duration"/> 值中减去另一个这种类型的值。</summary>
<returns>如果每个 <see cref="T:System.Windows.Duration"/> 都具有值，则返回表示 <paramref name="t1"/> 减去 <paramref name="t2"/> 的值的 <see cref="T:System.Windows.Duration"/>。如果 <paramref name="t1"/> 的值为 <see cref="P:System.Windows.Duration.Forever"/>，并且 <paramref name="t2"/> 的值为 <see cref="P:System.Windows.Duration.TimeSpan"/>，则此方法返回 <see cref="P:System.Windows.Duration.Forever"/>。否则，此方法返回 null。</returns>
<param name="t1">第一个 <see cref="T:System.Windows.Duration"/>。</param>
<param name="t2">要减去的 <see cref="T:System.Windows.Duration"/>。</param>
    </member>
    <member name="M:System.Windows.Duration.op_UnaryPlus(System.Windows.Duration)">
<summary>返回指定的 <see cref="T:System.Windows.Duration"/>。</summary>
<returns><see cref="T:System.Windows.Duration"/> 操作结果。</returns>
<param name="duration">要获取的 <see cref="T:System.Windows.Duration"/>。</param>
    </member>
    <member name="M:System.Windows.Duration.Plus(System.Windows.Duration)">
<summary>将一个 <see cref="T:System.Windows.Duration"/> 加到此 <see cref="T:System.Windows.Duration"/>。</summary>
<returns>相加后的 <see cref="T:System.Windows.Duration"/>。</returns>
<param name="duration">要添加的 <see cref="T:System.Windows.Duration"/>。</param>
    </member>
    <member name="M:System.Windows.Duration.Subtract(System.Windows.Duration)">
<summary>从此 <see cref="T:System.Windows.Duration"/> 中减去指定的 <see cref="T:System.Windows.Duration"/>。</summary>
<returns>减去后的 <see cref="T:System.Windows.Duration"/>。</returns>
<param name="duration">要从此 <see cref="T:System.Windows.Duration"/> 中减去的 <see cref="T:System.Windows.Duration"/>。</param>
    </member>
    <member name="P:System.Windows.Duration.TimeSpan">
<summary>获取此 <see cref="T:System.Windows.Duration"/> 表示的 <see cref="T:System.TimeSpan"/> 值。</summary>
<returns>此 <see cref="T:System.Windows.Duration"/> 表示的 <see cref="T:System.TimeSpan"/> 值。</returns>
<exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Duration"/> 不表示 <see cref="T:System.TimeSpan"/>。</exception>
    </member>
    <member name="M:System.Windows.Duration.ToString">
<summary>将 <see cref="T:System.Windows.Duration"/> 转换为 <see cref="T:System.String"/> 表示形式。</summary>
<returns>此 <see cref="T:System.Windows.Duration"/> 的 <see cref="T:System.String"/> 表示形式。</returns>
    </member>
    <member name="T:System.Windows.DurationConverter">
<summary>为 <see cref="T:System.Windows.Duration"/> 结构提供类型转换支持。 </summary>
    </member>
    <member name="M:System.Windows.DurationConverter.#ctor">
<summary>初始化 <see cref="T:System.Windows.DurationConverter"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.DurationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
<summary>返回此转换器是否可以将一种类型的对象转换为 <see cref="T:System.Windows.Duration"/> 类型。</summary>
<returns>如果该转换器能够执行转换，则为 true；否则为 false。</returns>
<param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>。 </param>
<param name="sourceType">一个 <see cref="T:System.Type"/>，表示要转换的类型。 </param>
    </member>
    <member name="M:System.Windows.DurationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
<summary>将给定的值转换为 <see cref="T:System.Windows.Duration"/> 类型。</summary>
<returns>返回的 <see cref="T:System.Windows.Duration"/>。</returns>
<param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>。 </param>
<param name="culture">用作当前区域性的 <see cref="T:System.Globalization.CultureInfo"/>。 </param>
<param name="value">要转换的对象。</param>
    </member>
    <member name="T:System.Windows.ElevatedPermissions">
<summary>定义指示浏览器外应用程序是否需要提升的权限的常数。 </summary>
    </member>
    <member name="F:System.Windows.ElevatedPermissions.NotRequired">
<summary>在浏览器外部运行该应用程序无需提升的权限。</summary>
    </member>
    <member name="F:System.Windows.ElevatedPermissions.Required">
<summary>在浏览器外部运行该应用程序需要提升的权限。</summary>
    </member>
    <member name="T:System.Windows.EventTrigger">
<summary>表示一个触发器，该触发器应用一组操作（动画演示图板）作为对某个事件的响应。</summary>
    </member>
    <member name="M:System.Windows.EventTrigger.#ctor">
<summary>初始化 <see cref="T:System.Windows.EventTrigger"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.EventTrigger.Actions">
<summary>获取此 <see cref="T:System.Windows.EventTrigger"/> 维护的 <see cref="T:System.Windows.Media.Animation.BeginStoryboard"/> 对象的集合。</summary>
<returns>现有的 <see cref="T:System.Windows.TriggerActionCollection"/>。</returns>
    </member>
    <member name="P:System.Windows.EventTrigger.RoutedEvent">
<summary>获取或设置启动触发器的事件的名称。</summary>
<returns>事件的名称或标识符。请参阅“备注”。</returns>
    </member>
    <member name="T:System.Windows.ExceptionRoutedEventArgs">
<summary>为由异步操作作为事件引发的异常提供事件数据，如 <see cref="E:System.Windows.Controls.MediaElement.MediaFailed"/> 或 <see cref="E:System.Windows.Controls.MultiScaleImage.ImageFailed"/>。</summary>
    </member>
    <member name="P:System.Windows.ExceptionRoutedEventArgs.ErrorException">
<summary>获取由事件报告的基础异常或本机级别错误。</summary>
<returns>正在报告的异常。</returns>
    </member>
    <member name="T:System.Windows.ExceptionRoutedEventHandler">
<summary>表示将处理报告异常的某些事件的方法。这些异常通常来自于异步操作，在这类操作中，不提供保持 UI 线程以用于异常检查的选项。</summary>
<param name="sender">附加处理程序的对象。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Expression">
<summary>不应从代码中使用此类型或从此类型派生其他类型。</summary>
    </member>
    <member name="T:System.Windows.ExtensionPart">
<summary>表示一个压缩文件，该文件包含应用程序库缓存使用的程序集。</summary>
    </member>
    <member name="M:System.Windows.ExtensionPart.#ctor">
<summary>初始化 <see cref="T:System.Windows.ExtensionPart"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.ExtensionPart.Source">
<summary>获取或设置外部库包的文件名或 URI。</summary>
<returns>外部库包的文件名或 URI。</returns>
    </member>
    <member name="F:System.Windows.ExtensionPart.SourceProperty">
<summary>标识 <see cref="P:System.Windows.ExtensionPart.Source"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.ExtensionPart.Source"/> 依赖项属性的标识符。 </returns>
    </member>
    <member name="T:System.Windows.ExternalPart">
<summary>定义一个基类，该基类指定位于应用程序包外部的 Silverlight 应用程序部分（.xap 文件）。 </summary>
    </member>
    <member name="M:System.Windows.ExternalPart.#ctor">
<summary>初始化 <see cref="T:System.Windows.ExternalPart"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.ExternalPart.Source">
<summary>获取或设置外部部件的 URI。</summary>
<returns>外部部件的 URI。 </returns>
    </member>
    <member name="T:System.Windows.ExternalPartCollection">
<summary>表示 <see cref="T:System.Windows.ExternalPart"/> 实例的集合，这些实例指示位于应用程序包外部的 Silverlight 应用程序部分（.xap 文件）。 </summary>
    </member>
    <member name="M:System.Windows.ExternalPartCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.ExternalPartCollection"/> 类的新实例。 </summary>
    </member>
    <member name="T:System.Windows.FlowDirection">
<summary>定义一些常数，这些常数指定文本和 UI 元素的内容流动方向。</summary>
    </member>
    <member name="F:System.Windows.FlowDirection.LeftToRight">
<summary>指示内容应从左向右流动。</summary>
    </member>
    <member name="F:System.Windows.FlowDirection.RightToLeft">
<summary>指示内容应从右向左流动。</summary>
    </member>
    <member name="T:System.Windows.FontStretch">
<summary>描述与某个字体与该字体的正常纵横比相比的拉伸程度。</summary>
    </member>
    <member name="M:System.Windows.FontStretch.Equals(System.Object)">
<summary>将对象与当前 <see cref="T:System.Windows.FontStretch"/> 对象进行比较。</summary>
<returns>如果两个实例相等，则为 true；否则为 false。</returns>
<param name="obj">要比较是否相等的对象实例。</param>
    </member>
    <member name="M:System.Windows.FontStretch.GetHashCode">
<summary>检索此对象的哈希代码。</summary>
<returns>整数哈希值。</returns>
    </member>
    <member name="M:System.Windows.FontStretch.op_Equality(System.Windows.FontStretch,System.Windows.FontStretch)">
<summary>比较 <see cref="T:System.Windows.FontStretch"/> 的两个实例是否相等。</summary>
<returns>如果指定的 <see cref="T:System.Windows.FontStretch"/> 对象相等，则为 true；否则为 false。</returns>
<param name="left">要比较的第一个 <see cref="T:System.Windows.FontStretch"/> 实例。</param>
<param name="right">要比较的第二个 <see cref="T:System.Windows.FontStretch"/> 实例。</param>
    </member>
    <member name="M:System.Windows.FontStretch.op_Inequality(System.Windows.FontStretch,System.Windows.FontStretch)">
<summary>对 <see cref="T:System.Windows.FontStretch"/> 的两个实例进行评估，以确定它们是否不相等。</summary>
<returns>如果 <paramref name="left"/> 等于 <paramref name="right"/>，则为 false；否则为 true。</returns>
<param name="left">要比较的第一个 <see cref="T:System.Windows.FontStretch"/> 实例。</param>
<param name="right">要比较的第二个 <see cref="T:System.Windows.FontStretch"/> 实例。</param>
    </member>
    <member name="M:System.Windows.FontStretch.ToString">
<summary>创建当前 <see cref="T:System.Windows.FontStretch"/> 对象的 <see cref="T:System.String"/> 表示形式。</summary>
<returns>对象的 <see cref="T:System.String"/> 值表示形式。</returns>
    </member>
    <member name="T:System.Windows.FontStretches">
<summary>提供了一组预定义的字体拉伸作为静态属性值。</summary>
    </member>
    <member name="P:System.Windows.FontStretches.Condensed">
<summary>指定压缩的字体拉伸。</summary>
<returns>表示压缩的字体拉伸的值。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.Expanded">
<summary>指定扩展的字体拉伸。</summary>
<returns>表示扩展的字体拉伸的值。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.ExtraCondensed">
<summary>指定额外压缩的字体拉伸。</summary>
<returns>表示额外压缩的字体拉伸的值。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.ExtraExpanded">
<summary>指定额外扩展的字体拉伸。</summary>
<returns>表示额外扩展的字体拉伸的值。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.Normal">
<summary>指定普通字体拉伸。</summary>
<returns>表示普通字体拉伸的值。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.SemiCondensed">
<summary>指定半压缩的字体拉伸。</summary>
<returns>表示半压缩字体拉伸的值。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.SemiExpanded">
<summary>指定半扩展字体拉伸。</summary>
<returns>表示半扩展字体拉伸的值。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.UltraCondensed">
<summary>指定超压缩字体拉伸。</summary>
<returns>表示超压缩字体拉伸的值。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.UltraExpanded">
<summary>指定超扩展字体拉伸。</summary>
<returns>表示超扩展字体拉伸的值。</returns>
    </member>
    <member name="T:System.Windows.FontStyle">
<summary>表示字体的样式（例如普通或斜体）。</summary>
    </member>
    <member name="M:System.Windows.FontStyle.Equals(System.Object)">
<summary>比较对象与当前的 <see cref="T:System.Windows.FontStyle"/> 实例是否相等。</summary>
<returns>若要显示两个实例相等，则为 true；否则为 false。</returns>
<param name="obj">一个对象，表示要比较相等性的 <see cref="T:System.Windows.FontStyle"/>。</param>
    </member>
    <member name="M:System.Windows.FontStyle.GetHashCode">
<summary>检索此对象的哈希代码。 </summary>
<returns>整数哈希值。</returns>
    </member>
    <member name="M:System.Windows.FontStyle.op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)">
<summary>比较 <see cref="T:System.Windows.FontStyle"/> 的两个实例是否相等。</summary>
<returns>如果指定的 <see cref="T:System.Windows.FontStyle"/> 对象相等，则为 true；否则为 false。</returns>
<param name="left">要比较的第一个 <see cref="T:System.Windows.FontStyle"/> 实例。</param>
<param name="right">要比较的第二个 <see cref="T:System.Windows.FontStyle"/> 实例。</param>
    </member>
    <member name="M:System.Windows.FontStyle.op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)">
<summary>对 <see cref="T:System.Windows.FontStyle"/> 的两个实例进行评估，以确定它们是否不相等。</summary>
<returns>若要显示 <paramref name="left"/> 等于 <paramref name="right"/>，则为 false；否则为 true。</returns>
<param name="left">要比较的第一个 <see cref="T:System.Windows.FontStyle"/> 实例。</param>
<param name="right">要比较的第二个 <see cref="T:System.Windows.FontStyle"/> 实例。</param>
    </member>
    <member name="M:System.Windows.FontStyle.ToString">
<summary>创建表示当前 <see cref="T:System.Windows.FontStyle"/> 对象的字符串。</summary>
<returns>一个字符串，表示 <see cref="T:System.Windows.FontStyle"/> 对象的值。</returns>
    </member>
    <member name="T:System.Windows.FontStyles">
<summary>提供一组预定义字体样式作为静态属性值。</summary>
    </member>
    <member name="P:System.Windows.FontStyles.Italic">
<summary>指定斜体字体样式。</summary>
<returns>一种表示斜体字体样式的字体样式。</returns>
    </member>
    <member name="P:System.Windows.FontStyles.Normal">
<summary>指定普通或正体字体样式。</summary>
<returns>一种表示普通或正体字体样式的字体样式。</returns>
    </member>
    <member name="T:System.Windows.FontWeight">
<summary>以笔画的粗细来引用字体的密度。</summary>
    </member>
    <member name="M:System.Windows.FontWeight.Equals(System.Object)">
<summary>确定当前的 <see cref="T:System.Windows.FontWeight"/> 对象是否与指定对象相等。</summary>
<returns>如果值相等，则为 true；否则为 false。</returns>
<param name="obj">要比较是否相等的对象。</param>
    </member>
    <member name="M:System.Windows.FontWeight.GetHashCode">
<summary>检索此对象的哈希代码。</summary>
<returns>整数哈希值。</returns>
    </member>
    <member name="M:System.Windows.FontWeight.op_Equality(System.Windows.FontWeight,System.Windows.FontWeight)">
<summary>比较 <see cref="T:System.Windows.FontWeight"/> 的两个实例是否相等。</summary>
<returns>如果 <see cref="T:System.Windows.FontWeight"/> 的值相等，则为 true；否则为 false。</returns>
<param name="left">要比较的第一个 <see cref="T:System.Windows.FontWeight"/> 实例。</param>
<param name="right">要比较的第二个 <see cref="T:System.Windows.FontWeight"/> 实例。</param>
    </member>
    <member name="M:System.Windows.FontWeight.op_Inequality(System.Windows.FontWeight,System.Windows.FontWeight)">
<summary>对 <see cref="T:System.Windows.FontWeight"/> 的两个实例进行评估，以确定它们是否不相等。</summary>
<returns>如果 <paramref name="left"/> 的值等于 <paramref name="right"/>，则为 false；否则为 true。</returns>
<param name="left">要比较的第一个 <see cref="T:System.Windows.FontWeight"/> 实例。</param>
<param name="right">要比较的第二个 <see cref="T:System.Windows.FontWeight"/> 实例。</param>
    </member>
    <member name="M:System.Windows.FontWeight.ToString">
<summary>返回表示 <see cref="T:System.Windows.FontWeight"/> 对象的值的文本字符串。</summary>
<returns>一个字符串，表示 <see cref="T:System.Windows.FontWeight"/> 对象的值，如“Light”或“Normal”。</returns>
    </member>
    <member name="T:System.Windows.FontWeights">
<summary>提供一组预定义字体粗细作为静态属性值。</summary>
    </member>
    <member name="P:System.Windows.FontWeights.Black">
<summary>指定“Black”字体粗细。</summary>
<returns>表示“Black”字体粗细的 <see cref="T:System.Windows.FontWeight"/> 值。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.Bold">
<summary>指定“Bold”字体粗细。</summary>
<returns>表示“Bold”字体粗细的 <see cref="T:System.Windows.FontWeight"/> 值。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.ExtraBlack">
<summary>指定“ExtraBlack”字体粗细。</summary>
<returns>表示“ExtraBlack”字体粗细的 <see cref="T:System.Windows.FontWeight"/> 值。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.ExtraBold">
<summary>指定“ExtraBold”字体粗细。</summary>
<returns>表示“ExtraBlack”字体粗细的 <see cref="T:System.Windows.FontWeight"/> 值。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.ExtraLight">
<summary>指定“ExtraLight”字体粗细。</summary>
<returns>表示“ExtraLight”字体粗细的 <see cref="T:System.Windows.FontWeight"/> 值。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.Light">
<summary>指定“Light”字体粗细。</summary>
<returns>表示“Light”字体粗细的 <see cref="T:System.Windows.FontWeight"/> 值。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.Medium">
<summary>指定“Medium”字体粗细。</summary>
<returns>表示“Medium”字体粗细的 <see cref="T:System.Windows.FontWeight"/> 值。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.Normal">
<summary>指定“Normal”字体粗细。</summary>
<returns>表示“Normal”字体粗细的 <see cref="T:System.Windows.FontWeight"/> 值。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.SemiBold">
<summary>指定“SemiBold”字体粗细。</summary>
<returns>表示“SemiBold”字体粗细的 <see cref="T:System.Windows.FontWeight"/> 值。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.Thin">
<summary>指定“Thin”字体粗细。</summary>
<returns>表示“Thin”字体粗细的 <see cref="T:System.Windows.FontWeight"/> 值。</returns>
    </member>
    <member name="T:System.Windows.FrameworkElement">
<summary>为 Silverlight 布局中涉及的对象提供公共 API 的框架。<see cref="T:System.Windows.FrameworkElement"/> 还定义在 Silverlight 中与数据绑定、对象树和对象生存期功能区域相关的 API。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.#ctor">
<summary>初始化 <see cref="T:System.Windows.FrameworkElement"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.ActualHeight">
<summary>获取 <see cref="T:System.Windows.FrameworkElement"/> 的呈现高度。</summary>
<returns>对象的高度（以像素为单位）。默认值为 0。如果对象尚未被加载并经过布局处理过程，则可能会遇到默认值。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ActualHeightProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.ActualHeight"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.ActualHeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.ActualWidth">
<summary>获取 <see cref="T:System.Windows.FrameworkElement"/> 的呈现宽度。</summary>
<returns>对象的宽度（以像素为单位）。默认值为 0。如果对象尚未被加载并经过布局处理过程，则可能会遇到默认值。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ActualWidthProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.ActualWidth"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.ActualWidth"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
<summary>提供 Silverlight 布局的“排列”处理过程的行为。类可以重写该方法来定义其自己的排列处理过程行为。</summary>
<returns>元素在布局中排列后使用的实际大小。</returns>
<param name="finalSize">父级中此对象应用来排列自身及其子元素的最终区域。</param>
    </member>
    <member name="E:System.Windows.FrameworkElement.BindingValidationError">
<summary>在绑定源报告数据验证错误时发生。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Cursor">
<summary>获取或设置鼠标指针悬停在 <see cref="T:System.Windows.FrameworkElement"/> 上时所显示的光标图像。</summary>
<returns>要显示的光标图像。代码访问的默认值定义为 null。但是，运行时光标图像在 UI 中的外观将受到多种因素的影响。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.CursorProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.Cursor"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.Cursor"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.DataContext">
<summary>获取或设置 <see cref="T:System.Windows.FrameworkElement"/> 参与数据绑定时的数据上下文。</summary>
<returns>要用作数据上下文的对象。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.DataContextProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.DataContext"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.DataContext"/> 依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.FindName(System.String)">
<summary>检索具有指定标识符名称的对象。 </summary>
<returns>请求的对象。如果在当前 XAML 命名空间中未找到匹配的对象，则可以为 null。</returns>
<param name="name">已请求对象的名称。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.FlowDirection">
<summary>获取或设置文本和其他用户界面元素在控制其布局的任何父元素中的流动方向。</summary>
<returns>文本和其他用户界面元素在它们的父元素中的流动方向，是一个枚举值。默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight"/>。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.FlowDirectionProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.FlowDirection"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.FlowDirection"/> 依赖项属性标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
<summary>检索 <see cref="T:System.Windows.Data.BindingExpression"/> 中已建立绑定的依赖项属性。</summary>
<returns>如果本地值表示数据绑定值，则为绑定的 <see cref="T:System.Windows.Data.BindingExpression"/>。如果属性不是数据绑定值，则可能返回 null。</returns>
<param name="dp">此 <see cref="T:System.Windows.FrameworkElement"/> 上要从中获取 <see cref="T:System.Windows.Data.BindingExpression"/> 的特定属性的依赖项属性标识符。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.Height">
<summary>获取或设置 <see cref="T:System.Windows.FrameworkElement"/> 的建议高度。</summary>
<returns>对象的高度（以像素为单位）。默认值为 <see cref="F:System.Double.NaN"/>。除了特殊的 <see cref="F:System.Double.NaN"/> 值，此值必须等于或大于 0。请参阅“备注”了解上限信息。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.HeightProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.Height"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.Height"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.HorizontalAlignment">
<summary>获取或设置在布局父级（如面板或项控件）中构成 <see cref="T:System.Windows.FrameworkElement"/> 时应用于此元素的水平对齐特征。</summary>
<returns>水平对齐设置，它是一个枚举值。默认值为 <see cref="F:System.Windows.HorizontalAlignment.Stretch"/>。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.HorizontalAlignmentProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.HorizontalAlignment"/> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Language">
<summary>获取或设置应用于 <see cref="T:System.Windows.FrameworkElement"/> 的本地化/全球化语言信息。 </summary>
<returns>此对象的语言信息。默认值是一个 <see cref="T:System.Windows.Markup.XmlLanguage"/> 对象，它的 <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag"/> 值设置为字符串“en-US”。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.LanguageProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.Language"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.Language"/> 依赖项属性标识符。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.LayoutUpdated">
<summary>当 Silverlight 可视化树的布局更改时发生。 </summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.Loaded">
<summary>当已构造 <see cref="T:System.Windows.FrameworkElement"/> 并将其添加到对象树中时发生。 </summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.LoadedEvent">
<summary>标识 <see cref="E:System.Windows.FrameworkElement.Loaded"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.FrameworkElement.Loaded"/> 路由事件的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Margin">
<summary>获取或设置 <see cref="T:System.Windows.FrameworkElement"/> 的外边距。</summary>
<returns>提供对象的边距值。默认值是所有属性（维度）都等于 0 的默认 <see cref="T:System.Windows.Thickness"/>。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MarginProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.Margin"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.Margin"/> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MaxHeight">
<summary>获取或设置 <see cref="T:System.Windows.FrameworkElement"/> 的最大高度约束。 </summary>
<returns>对象的最大高度（以像素为单位）。默认值为 <see cref="F:System.Double.PositiveInfinity"/>。此值可以是任何大于等于 0 的值。<see cref="F:System.Double.PositiveInfinity"/> 也有效。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MaxHeightProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.MaxHeight"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.MaxHeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MaxWidth">
<summary>获取或设置 <see cref="T:System.Windows.FrameworkElement"/> 的最大宽度约束。</summary>
<returns>对象的最大宽度（以像素为单位）。默认值为 <see cref="F:System.Double.PositiveInfinity"/>。此值可以是任何大于等于 0 的值。<see cref="F:System.Double.PositiveInfinity"/> 也有效。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MaxWidthProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.MaxWidth"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.MaxWidth"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
<summary>提供 Silverlight 布局的“测量”处理过程的行为。类可以重写该方法来定义其自己的测量处理过程行为。</summary>
<returns>此对象在布局过程中基于其对子对象分配大小的计算或者基于固定容器大小等其他因素而确定的它所需的大小。</returns>
<param name="availableSize">此对象可以赋给子对象的可用大小。可以指定无穷大值 (<see cref="F:System.Double.PositiveInfinity"/>)，以指示对象的大小将调整为可用内容的大小。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.MinHeight">
<summary>获取或设置 <see cref="T:System.Windows.FrameworkElement"/> 的最小高度约束。</summary>
<returns>对象的最小高度（以像素为单位）。默认值为 0。此值可以是任何等于或大于 0 的值。不过，<see cref="F:System.Double.PositiveInfinity"/> 无效。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MinHeightProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.MinHeight"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.MinHeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MinWidth">
<summary>获取或设置 <see cref="T:System.Windows.FrameworkElement"/> 的最小宽度约束。</summary>
<returns>对象的最小宽度（以像素为单位）。默认值为 0。此值可以是任何等于或大于 0 的值。不过，<see cref="F:System.Double.PositiveInfinity"/> 无效。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MinWidthProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.MinWidth"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.MinWidth"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Name">
<summary>获取或设置对象的标识名称。当 XAML 处理器从标记创建对象树时，运行时代码可以使用此名称引用标记元素。</summary>
<returns>对象的名称，该名称必须是 XamlName 语法中的有效字符串。默认值为空字符串。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.NameProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.Name"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.Name"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnApplyTemplate">
<summary>在派生类中重写后，每当应用程序代码或内部进程（如重新生成布局处理过程）调用 <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>，都将调用此方法。简而言之，这意味着就在 UI 元素在应用程序中显示前调用该方法。有关更多信息，请参阅“备注”。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Parent">
<summary>获取对象树中此 <see cref="T:System.Windows.FrameworkElement"/> 的父对象。 </summary>
<returns>对象树中此对象的父对象。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Resources">
<summary>获取本地定义的资源字典。在 XAML 中，可以通过 XAML 隐式集合语法，将资源项建立为 frameworkElement.Resources 属性元素的子对象元素。</summary>
<returns>资源当前的本地定义字典，可在其中按资源的键访问每个资源。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.Binding)">
<summary>使用提供的绑定对象，将绑定附加到 <see cref="T:System.Windows.FrameworkElement"/> 上，并返回 <see cref="T:System.Windows.Data.BindingExpressionBase"/> 以供以后使用。</summary>
<returns>一个 <see cref="T:System.Windows.Data.BindingExpressionBase"/> 对象。请参阅“备注”。</returns>
<param name="dp">进行数据绑定的属性的依赖项属性标识符。</param>
<param name="binding">要用于属性的绑定。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="binding"/> 已指定为 <see cref="F:System.Windows.Data.BindingMode.TwoWay"/>，但具有空 <see cref="P:System.Windows.Data.Binding.Path"/>。-或- <paramref name="dp"/> 或 <paramref name="binding"/> 参数为 null。</exception>
    </member>
    <member name="E:System.Windows.FrameworkElement.SizeChanged">
<summary>当 <see cref="T:System.Windows.FrameworkElement"/> 上的 <see cref="P:System.Windows.FrameworkElement.ActualHeight"/> 或 <see cref="P:System.Windows.FrameworkElement.ActualWidth"/> 属性的值发生更改时发生。 </summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Style">
<summary>获取或设置呈现过程中应用于此对象的实例 <see cref="T:System.Windows.Style"/>。</summary>
<returns>如果存在，则为该对象的应用样式；否则为 null。默认情况下构造的 <see cref="T:System.Windows.FrameworkElement"/> 的默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.StyleProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.Style"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.FrameworkElement.Style"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Tag">
<summary>获取或设置一个可用于存储有关此对象的自定义信息的任意对象值。</summary>
<returns>预期值。此属性无默认值。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.TagProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.Tag"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.Tag"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Triggers">
<summary>获取为 <see cref="T:System.Windows.FrameworkElement"/> 定义的动画的触发器的集合。</summary>
<returns>为此对象定义的动画的触发器的集合。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.Unloaded">
<summary>当此对象不再与主对象树连接时发生。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.VerticalAlignment">
<summary>获取或设置在父对象（如面板或项控件）中构成 <see cref="T:System.Windows.FrameworkElement"/> 时应用于此元素的垂直对齐特征。</summary>
<returns>一个垂直对齐设置。默认值为 <see cref="F:System.Windows.VerticalAlignment.Stretch"/>。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.VerticalAlignmentProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.VerticalAlignment"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.VerticalAlignment"/> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Width">
<summary>获取或设置 <see cref="T:System.Windows.FrameworkElement"/> 的宽度。</summary>
<returns>对象的宽度（以像素为单位）。默认值为 <see cref="F:System.Double.NaN"/>。除了特殊的 <see cref="F:System.Double.NaN"/> 值，此值必须等于或大于 0。请参阅“备注”了解上限信息。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.WidthProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.Width"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.Width"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.FrameworkTemplate">
<summary>创建元素的元素树。</summary>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.#ctor">
<summary>初始化 <see cref="T:System.Windows.FrameworkTemplate"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.GpuInformation">
<summary>表示逻辑计算机系统报告的图形处理器单元 (GPU) 信息的详细信息。</summary>
    </member>
    <member name="P:System.Windows.GpuInformation.DeviceId">
<summary>获取 GPU 的设备 ID。</summary>
<returns>GPU 的设备 ID。</returns>
    </member>
    <member name="P:System.Windows.GpuInformation.DriverVersion">
<summary>获取 GPU 的驱动程序版本。</summary>
<returns>GPU 的驱动程序版本。</returns>
    </member>
    <member name="P:System.Windows.GpuInformation.VendorId">
<summary>获取 GPU 的供应商 ID。</summary>
<returns>GPU 的供应商 ID。</returns>
    </member>
    <member name="T:System.Windows.GridLength">
<summary>表示元素的长度，这些元素显式支持 <see cref="F:System.Windows.GridUnitType.Star"/> 单位类型。 </summary>
    </member>
    <member name="M:System.Windows.GridLength.#ctor(System.Double)">
<summary>使用指定的绝对值（以像素为单位）初始化 <see cref="T:System.Windows.GridLength"/> 结构的新实例。 </summary>
<param name="pixels">建立为值的绝对像素计数。</param>
    </member>
    <member name="M:System.Windows.GridLength.#ctor(System.Double,System.Windows.GridUnitType)">
<summary>初始化 <see cref="T:System.Windows.GridLength"/> 结构的新实例并指定它包含何种类型的值。 </summary>
<param name="value">此 <see cref="T:System.Windows.GridLength"/> 实例的初始值。</param>
<param name="type">此 <see cref="T:System.Windows.GridLength"/> 实例持有的 <see cref="T:System.Windows.GridUnitType"/>。</param>
<exception cref="T:System.ArgumentException">值小于 0 或并非数字。-或- 类型不是有效的 <see cref="T:System.Windows.GridUnitType"/>。</exception>
    </member>
    <member name="P:System.Windows.GridLength.Auto">
<summary>获取一个 <see cref="T:System.Windows.GridLength"/> 实例，它包含大小由内容对象的大小属性确定的值。</summary>
<returns>一个 <see cref="T:System.Windows.GridLength"/> 实例，其 <see cref="P:System.Windows.GridLength.GridUnitType"/> 属性设置为 <see cref="F:System.Windows.GridUnitType.Auto"/>。 </returns>
    </member>
    <member name="M:System.Windows.GridLength.Equals(System.Object)">
<summary>确定指定的对象是否等于当前 <see cref="T:System.Windows.GridLength"/> 实例。 </summary>
<returns>如果指定的对象具有与当前实例相同的值和 <see cref="T:System.Windows.GridUnitType"/>，则为 true；否则为 false。</returns>
<param name="oCompare">要与当前实例进行比较的对象。</param>
    </member>
    <member name="M:System.Windows.GridLength.Equals(System.Windows.GridLength)">
<summary>确定指定的 <see cref="T:System.Windows.GridLength"/> 是否等于当前的 <see cref="T:System.Windows.GridLength"/>。</summary>
<returns>如果指定的 <see cref="T:System.Windows.GridLength"/> 具有与当前实例相同的值和 <see cref="P:System.Windows.GridLength.GridUnitType"/>，则为 true；否则为 false。</returns>
<param name="gridLength">要与当前实例进行比较的 <see cref="T:System.Windows.GridLength"/> 结构。</param>
    </member>
    <member name="M:System.Windows.GridLength.GetHashCode">
<summary>获取 <see cref="T:System.Windows.GridLength"/> 的哈希代码。 </summary>
<returns><see cref="T:System.Windows.GridLength"/> 的哈希代码。 </returns>
    </member>
    <member name="P:System.Windows.GridLength.GridUnitType">
<summary>获取 <see cref="T:System.Windows.GridLength"/> 的关联 <see cref="T:System.Windows.GridUnitType"/>。 </summary>
<returns><see cref="T:System.Windows.GridUnitType"/> 值之一。默认值为 <see cref="F:System.Windows.GridUnitType.Auto"/>。</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsAbsolute">
<summary>获取一个值，该值指示 <see cref="T:System.Windows.GridLength"/> 是否包含以像素表示的值。 </summary>
<returns>如果 <see cref="P:System.Windows.GridLength.GridUnitType"/> 属性为 <see cref="F:System.Windows.GridUnitType.Pixel"/>，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsAuto">
<summary>获取一个值，该值指示 <see cref="T:System.Windows.GridLength"/> 是否包含大小由内容对象的大小属性确定的值。 </summary>
<returns>如果 <see cref="P:System.Windows.GridLength.GridUnitType"/> 属性为 <see cref="F:System.Windows.GridUnitType.Auto"/>，则为 true；否则为 false。 </returns>
    </member>
    <member name="P:System.Windows.GridLength.IsStar">
<summary>获取一个值，该值指示<see cref="T:System.Windows.GridLength"/> 是否包含以可用空间的加权比例表示的值。 </summary>
<returns>如果 <see cref="P:System.Windows.GridLength.GridUnitType"/> 属性为 <see cref="F:System.Windows.GridUnitType.Star"/>，则为 true；否则为 false。 </returns>
    </member>
    <member name="M:System.Windows.GridLength.op_Equality(System.Windows.GridLength,System.Windows.GridLength)">
<summary>比较两个 <see cref="T:System.Windows.GridLength"/> 结构是否相等。</summary>
<returns>如果两个 <see cref="T:System.Windows.GridLength"/> 实例具有相同的值和 <see cref="T:System.Windows.GridUnitType"/>，则为 true；否则为 false。</returns>
<param name="gl1">要比较的第一个 <see cref="T:System.Windows.GridLength"/> 实例。</param>
<param name="gl2">要比较的第二个 <see cref="T:System.Windows.GridLength"/> 实例。</param>
    </member>
    <member name="M:System.Windows.GridLength.op_Inequality(System.Windows.GridLength,System.Windows.GridLength)">
<summary>对两个 <see cref="T:System.Windows.GridLength"/> 结构进行比较，确定它们是否不相等。</summary>
<returns>如果两个 <see cref="T:System.Windows.GridLength"/> 实例没有相同的值和 <see cref="T:System.Windows.GridUnitType"/>，则为 true；否则为 false。</returns>
<param name="gl1">要比较的第一个 <see cref="T:System.Windows.GridLength"/> 实例。</param>
<param name="gl2">要比较的第二个 <see cref="T:System.Windows.GridLength"/> 实例。</param>
    </member>
    <member name="M:System.Windows.GridLength.ToString">
<summary>返回 <see cref="T:System.Windows.GridLength"/> 的 <see cref="T:System.String"/> 表示形式。</summary>
<returns>当前 <see cref="T:System.Windows.GridLength"/> 结构的 <see cref="T:System.String"/> 表示形式。</returns>
    </member>
    <member name="P:System.Windows.GridLength.Value">
<summary>获取一个 <see cref="T:System.Double"/>，它表示 <see cref="T:System.Windows.GridLength"/> 的值。</summary>
<returns>一个 <see cref="T:System.Double"/>，表示当前实例的值。 </returns>
    </member>
    <member name="T:System.Windows.GridUnitType">
<summary>描述 <see cref="T:System.Windows.GridLength"/> 对象具有的值的种类。 </summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Auto">
<summary>大小由内容对象的大小属性决定。 </summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Pixel">
<summary>该值以像素表示。 </summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Star">
<summary>该值表示为可用空间的加权比例。 </summary>
    </member>
    <member name="T:System.Windows.HorizontalAlignment">
<summary>指示应在哪里将元素显示在与父元素的已分配布局槽相对的水平轴上。 </summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Left">
<summary>与父元素布局槽的左侧对齐的元素。 </summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Center">
<summary>与父元素布局槽的中心对齐的元素。 </summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Right">
<summary>与父元素布局槽的右侧对齐的元素。</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Stretch">
<summary>拉伸以填充整个父元素布局槽的元素。</summary>
    </member>
    <member name="T:System.Windows.IApplicationLifetimeAware">
<summary>定义应用程序扩展服务可以选择性地实现以对应用程序生存期事件进行响应的方法。 </summary>
    </member>
    <member name="M:System.Windows.IApplicationLifetimeAware.Exited">
<summary>在 <see cref="E:System.Windows.Application.Exit"/> 事件发生之后立即由应用程序调用。 </summary>
    </member>
    <member name="M:System.Windows.IApplicationLifetimeAware.Exiting">
<summary>就在 <see cref="E:System.Windows.Application.Exit"/> 事件发生之前由应用程序调用。 </summary>
    </member>
    <member name="M:System.Windows.IApplicationLifetimeAware.Started">
<summary>在 <see cref="E:System.Windows.Application.Startup"/> 事件发生之后立即由应用程序调用。</summary>
    </member>
    <member name="M:System.Windows.IApplicationLifetimeAware.Starting">
<summary>就在 <see cref="E:System.Windows.Application.Startup"/> 事件发生之前由应用程序调用。</summary>
    </member>
    <member name="T:System.Windows.IApplicationService">
<summary>定义应用程序扩展服务必须实现才能使应用程序能够启动和停止服务的方法。 </summary>
    </member>
    <member name="M:System.Windows.IApplicationService.StartService(System.Windows.ApplicationServiceContext)">
<summary>由应用程序调用，以便初始化应用程序扩展服务。</summary>
<param name="context">提供有关应用程序状态的信息。 </param>
    </member>
    <member name="M:System.Windows.IApplicationService.StopService">
<summary>由应用程序调用，以便停止应用程序扩展服务。 </summary>
    </member>
    <member name="T:System.Windows.Icon">
<summary>表示用于标识脱机应用程序的图标。</summary>
    </member>
    <member name="M:System.Windows.Icon.#ctor">
<summary>初始化 <see cref="T:System.Windows.Icon"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Icon.Size">
<summary>获取图标大小。 </summary>
<returns>图标大小。</returns>
    </member>
    <member name="F:System.Windows.Icon.SizeProperty">
<summary>标识 <see cref="P:System.Windows.Icon.Size"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Icon.Size"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Icon.Source">
<summary>获取图标的 PNG 源文件的路径和文件名。 </summary>
<returns>图标的 PNG 源文件的路径。 </returns>
    </member>
    <member name="F:System.Windows.Icon.SourceProperty">
<summary>标识 <see cref="P:System.Windows.Icon.Source"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Icon.Source"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.IconCollection">
<summary>表示 <see cref="T:System.Windows.Icon"/> 实例的集合。</summary>
    </member>
    <member name="M:System.Windows.IconCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.IconCollection"/> 类的新实例。 </summary>
    </member>
    <member name="T:System.Windows.IDataObject">
<summary>为传送数据提供与格式无关的机制。</summary>
    </member>
    <member name="M:System.Windows.IDataObject.GetData(System.String)">
<summary>检索指定格式的数据对象；数据格式由字符串指定。</summary>
<returns>一个数据对象，其中包含指定格式的数据；如果指定格式的数据不可用，则为 null。</returns>
<param name="format">一个字符串，指定要检索的数据所采用的格式。请参阅 <see cref="T:System.Windows.DataFormats"/> 类以了解预定义数据格式的集合。</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetData(System.String,System.Boolean)">
<summary>检索指定格式的数据对象，可选择将数据转换为指定格式。</summary>
<returns>一个数据对象，其中包含指定格式的数据；如果指定格式的数据不可用，则为 null。</returns>
<param name="format">一个字符串，指定要检索的数据所采用的格式。请参阅 <see cref="T:System.Windows.DataFormats"/> 类以了解预定义数据格式的集合。</param>
<param name="autoConvert">若尝试自动将数据转换为指定格式，则为 true；若不执行数据格式转换，则为 false。如果此参数为 false，方法将返回指定格式的数据（如果可用）；如果指定格式的数据不可用，则返回 null。</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetData(System.Type)">
<summary>检索指定格式的数据对象；数据格式由 <see cref="T:System.Type"/> 对象指定。</summary>
<returns>一个数据对象，其中包含指定格式的数据；如果指定格式的数据不可用，则为 null。</returns>
<param name="format">一个 <see cref="T:System.Type"/> 对象，指定要检索的数据所采用的格式。请参阅 <see cref="T:System.Windows.DataFormats"/> 类以了解预定义数据格式的集合。</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetDataPresent(System.String)">
<summary>检查指定格式的数据是否可用，或者是否可以转换为指定格式；数据格式由一个字符串指定。</summary>
<returns>如果数据采用指定的格式，或者可以转换成指定的格式，则为 true；否则为 false。</returns>
<param name="format">一个字符串，指定要检查的格式。请参阅 <see cref="T:System.Windows.DataFormats"/> 类以了解预定义数据格式的集合。</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)">
<summary>检查指定格式的数据是否可用，或者数据是否可以转换为指定格式。如果指定格式的数据尚不可用，则布尔标志指示是否检查能否将数据转换为指定格式。</summary>
<returns>如果数据采用指定的格式，或者可以转换成指定的格式，则为 true；否则为 false。</returns>
<param name="format">一个字符串，指定要检查的格式。请参阅 <see cref="T:System.Windows.DataFormats"/> 类以了解预定义数据格式的集合。</param>
<param name="autoConvert">如果仅检查指定的格式，则为 false；如果还要检查是否可以将该数据对象中存储的数据转换为指定的格式，则为 true。</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetDataPresent(System.Type)">
<summary>查看是否具有指定格式的数据，或者数据是否可以转换为指定格式。数据格式由 <see cref="T:System.Type"/> 对象指定。</summary>
<returns>如果数据采用指定的格式，或者可以转换成指定的格式，则为 true；否则为 false。</returns>
<param name="format">一个 <see cref="T:System.Type"/>，指定要检查的格式。</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetFormats">
<summary>返回一个包含所有格式的列表，此数据对象中的数据以这些格式存储，或可以转换为这些格式。</summary>
<returns>一个字符串数组，其中每个字符串都指定此数据对象支持的一种格式的名称。</returns>
    </member>
    <member name="M:System.Windows.IDataObject.GetFormats(System.Boolean)">
<summary>返回一个包含所有格式的列表，此数据对象中的数据以这些格式存储。布尔标志指示是否同时包括数据可自动转换为的格式。</summary>
<returns>一个字符串数组，其中每个字符串都指定此数据对象支持的一种格式的名称。</returns>
<param name="autoConvert">若要检索此数据对象中的数据采用的所有存储格式或可转换为的所有格式，则为 true；若要仅检索此数据对象中的数据采用的存储格式（不包括数据未采用但可自动转换为的存储格式），则为 false。</param>
    </member>
    <member name="M:System.Windows.IDataObject.SetData(System.Object)">
<summary>在此数据对象中存储指定的数据，同时自动从源对象类型转换数据格式。</summary>
<param name="data">要在此数据对象中存储的数据。</param>
    </member>
    <member name="M:System.Windows.IDataObject.SetData(System.String,System.Object)">
<summary>使用一种或多种指定的数据格式在此数据对象中存储指定的数据。数据格式由字符串指定。</summary>
<param name="format">一个字符串，指定存储数据时使用的格式。请参阅 <see cref="T:System.Windows.DataFormats"/> 类以了解预定义数据格式的集合。</param>
<param name="data">要在此数据对象中存储的数据。</param>
    </member>
    <member name="M:System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)">
<summary>使用一种或多种指定的数据格式在此数据对象中存储指定的数据。此重载包含一个布尔标志，用于指示是否可在检索时将数据转换为其他格式。</summary>
<param name="format">一个字符串，指定存储数据时使用的格式。请参阅 <see cref="T:System.Windows.DataFormats"/> 类以了解预定义数据格式的集合。</param>
<param name="data">要在此数据对象中存储的数据。</param>
<param name="autoConvert">如果允许检索时将数据转换为其他格式，则为 true；如果禁止在检索时将数据转换为其他格式，则为 false。</param>
    </member>
    <member name="M:System.Windows.IDataObject.SetData(System.Type,System.Object)">
<summary>使用一种或多种指定的数据格式在此数据对象中存储指定的数据。数据格式由 <see cref="T:System.Type"/> 类指定。</summary>
<param name="format">一个 <see cref="T:System.Type"/>，指定存储数据时使用的格式。</param>
<param name="data">要在此数据对象中存储的数据。</param>
    </member>
    <member name="T:System.Windows.InstallState">
<summary>定义指示配置为在浏览器外部运行的应用程序的安装状态的常数。</summary>
    </member>
    <member name="F:System.Windows.InstallState.NotInstalled">
<summary>尚未将该应用程序安装为在浏览器外部运行。</summary>
    </member>
    <member name="F:System.Windows.InstallState.Installing">
<summary>正在将此应用程序安装为在浏览器外部运行。 </summary>
    </member>
    <member name="F:System.Windows.InstallState.Installed">
<summary>已经将该应用程序安装为在浏览器外部运行。</summary>
    </member>
    <member name="F:System.Windows.InstallState.InstallFailed">
<summary>不能将此应用程序安装为在浏览器外部运行。 </summary>
    </member>
    <member name="T:System.Windows.LayoutCycleException">
<summary>布局循环引发的一个异常。</summary>
    </member>
    <member name="T:System.Windows.LineStackingStrategy">
<summary>描述一种机制，根据该机制为每一行确定行框。 </summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.MaxHeight">
<summary>当该行上的内联元素正确对齐时，堆栈高度是包含所有这些元素的扩展块级数维度的最小值。这是默认值。</summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.BlockLineHeight">
<summary>堆栈高度由块元素行高属性值确定。</summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.BaselineToBaseline">
<summary>通过将上一行的基线和 LineHeight 相加来确定堆栈高度。</summary>
    </member>
    <member name="T:System.Windows.MediaFailedRoutedEventArgs">
<summary>为媒体失败事件提供事件数据。</summary>
    </member>
    <member name="P:System.Windows.MediaFailedRoutedEventArgs.ErrorTrace">
<summary>获取媒体失败事件的跟踪信息。</summary>
<returns>失败的媒体事件的错误跟踪。</returns>
    </member>
    <member name="T:System.Windows.MessageBox">
<summary>向用户显示消息，还可以提示用户响应。 </summary>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String)">
<summary>显示包含指定文本和"确定"按钮的消息框。</summary>
      <returns>
在所有情况下均为 <see cref="F:System.Windows.MessageBoxResult.OK"/>。</returns>
<param name="messageBoxText">要显示的消息。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="messageBoxText"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)">
<summary>显示包含指定文本、标题栏标题和响应按钮的消息框。 </summary>
<returns>一个值，用于指示用户对消息的响应。 </returns>
<param name="messageBoxText">要显示的消息。</param>
<param name="caption">消息框的标题。 </param>
<param name="button">一个值，用于指示要显示哪个按钮或哪些按钮。 </param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="messageBoxText"/> 为 null。-或- <paramref name="caption"/> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
<paramref name="button"/> 不是有效的 <see cref="T:System.Windows.MessageBoxButton"/> 值。</exception>
    </member>
    <member name="T:System.Windows.MessageBoxButton">
<summary>指定显示消息框时要包含的按钮。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.OK">
<summary>仅显示“确定”按钮。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.OKCancel">
<summary>同时显示“确定”和“取消”按钮。</summary>
    </member>
    <member name="T:System.Windows.MessageBoxResult">
<summary>表示对消息框的用户响应。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.None">
<summary>当前未使用此值。 </summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.OK">
<summary>用户单击了“确定”按钮。 </summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.Cancel">
<summary>用户单击了“取消”按钮或按下了 Esc。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.Yes">
<summary>当前未使用此值。 </summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.No">
<summary>当前未使用此值。 </summary>
    </member>
    <member name="T:System.Windows.NotificationWindow">
<summary>表示在系统区域内显示的通知区域。只能为浏览器外应用程序启用通知；浏览器承载的应用程序不能访问此通知区域。</summary>
    </member>
    <member name="M:System.Windows.NotificationWindow.#ctor">
<summary>初始化 <see cref="T:System.Windows.NotificationWindow"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.NotificationWindow.Close">
<summary>立即关闭通知窗口。</summary>
    </member>
    <member name="E:System.Windows.NotificationWindow.Closed">
<summary>在调用 <see cref="M:System.Windows.NotificationWindow.Close"/> 时发生，或者当通知窗口超时并且已经完成其淡出动画时发生。</summary>
    </member>
    <member name="P:System.Windows.NotificationWindow.Content">
<summary>获取或设置定义通知可视外观的可视元素的根。</summary>
<returns>一个包含可视化树的根的 <see cref="T:System.Windows.FrameworkElement"/>。可视化树定义通知的可视外观。</returns>
    </member>
    <member name="F:System.Windows.NotificationWindow.ContentProperty">
<summary>标识 <see cref="P:System.Windows.NotificationWindow.Content"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.NotificationWindow.Content"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.NotificationWindow.Height">
<summary>获取或设置此通知窗口的高度（以像素为单位）。请参阅“备注”。</summary>
<returns>此通知窗口的显示高度（以像素为单位）。</returns>
<exception cref="T:System.ArgumentOutOfRangeException">尝试将值设置为大于 100 或者小于 0。</exception>
<exception cref="T:System.InvalidOperationException">尝试设置通知窗口可见时的值。</exception>
    </member>
    <member name="F:System.Windows.NotificationWindow.HeightProperty">
<summary>标识 <see cref="P:System.Windows.NotificationWindow.Height"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.NotificationWindow.Height"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.NotificationWindow.Show(System.Int32)">
<summary>在通知窗口超时前使其显示指定的毫秒数。</summary>
<param name="durationInMilliseconds">通知窗口应在系统区域中保持显示的持续时间，以毫秒为单位。</param>
<exception cref="T:System.InvalidOperationException">不同的通知窗口实例仍然可见。</exception>
    </member>
    <member name="P:System.Windows.NotificationWindow.Visibility">
<summary>获取一个值，该值确定此通知当前是否正在显示。</summary>
<returns>如果当前显示该通知，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.NotificationWindow.Width">
<summary>获取或设置此通知窗口的宽度（以像素为单位）。请参阅“备注”。</summary>
<returns>此通知窗口的显示宽度（以像素为单位）。</returns>
<exception cref="T:System.ArgumentOutOfRangeException">尝试将值设置为大于 400 或者小于 0。</exception>
<exception cref="T:System.InvalidOperationException">尝试设置通知窗口可见时的值。</exception>
    </member>
    <member name="F:System.Windows.NotificationWindow.WidthProperty">
<summary>标识 <see cref="P:System.Windows.NotificationWindow.Width"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.NotificationWindow.Width"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.NullableBoolConverter">
<summary>从字符串转换 <see cref="T:System.Nullable`1"/> 类型（对泛型使用 <see cref="T:System.Boolean"/> 类型约束）。</summary>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.#ctor">
<summary>初始化 <see cref="T:System.Windows.NullableBoolConverter"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
<summary>确定此转换器是否可以将指定类型的对象转换为 <see cref="T:System.Nullable`1"/> 类型（对泛型使用 <see cref="T:System.Boolean"/> 类型约束）。</summary>
<returns>如果 <paramref name="sourceType"/> 是可从 <paramref name="sourceType"/> 分配的 <see cref="T:System.String"/>、<see cref="T:System.Boolean"/> 或 <see cref="T:System.Nullable`1"/> 类型（对泛型使用 <see cref="T:System.Boolean"/> 类型约束），则为 true；否则为 false。</returns>
<param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>。 </param>
<param name="sourceType">要从其转换的类型。</param>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
<summary>将指定对象转换为 <see cref="T:System.Nullable`1"/> 类型（对泛型使用 <see cref="T:System.Boolean"/> 类型约束）。</summary>
<returns>表示已转换对象的 <see cref="T:System.Nullable`1"/> 类型（对泛型使用 <see cref="T:System.Boolean"/> 类型约束）。</returns>
<param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>。 </param>
<param name="culture">用作当前区域性的 <see cref="T:System.Globalization.CultureInfo"/>。 </param>
<param name="value">要转换为 <see cref="T:System.Nullable`1"/> 类型（对泛型使用 <see cref="T:System.Boolean"/> 类型约束）的对象。</param>
<exception cref="T:System.NotSupportedException">转换尝试已失败。<paramref name="value"/> 不是 <see cref="T:System.String"/>、<see cref="T:System.Boolean"/> 或 <see cref="T:System.Nullable`1"/>（对泛型使用 <see cref="T:System.Boolean"/> 类型约束）类型。</exception>
    </member>
    <member name="T:System.Windows.OutOfBrowserSettings">
<summary>表示有关为浏览器外支持配置的应用程序的信息。 </summary>
    </member>
    <member name="M:System.Windows.OutOfBrowserSettings.#ctor">
<summary>初始化 <see cref="T:System.Windows.OutOfBrowserSettings"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.OutOfBrowserSettings.Blurb">
<summary>获取应用程序的简短说明。</summary>
<returns>应用程序的简短说明。</returns>
    </member>
    <member name="F:System.Windows.OutOfBrowserSettings.BlurbProperty">
<summary>标识 <see cref="P:System.Windows.OutOfBrowserSettings.Blurb"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.OutOfBrowserSettings.Blurb"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.OutOfBrowserSettings.EnableGPUAcceleration">
<summary>获取一个值，该值指示是否对缓存的组合使用图形处理器单元硬件加速（这可能导致图形优化）。 </summary>
<returns>如果启用 GPU 加速，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.OutOfBrowserSettings.EnableGPUAccelerationProperty">
<summary>标识 <see cref="P:System.Windows.OutOfBrowserSettings.EnableGPUAcceleration"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.OutOfBrowserSettings.EnableGPUAcceleration"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.OutOfBrowserSettings.Icons">
<summary>获取与应用程序关联的 <see cref="T:System.Windows.Icon"/> 实例的集合。</summary>
<returns>与应用程序关联的图标。</returns>
    </member>
    <member name="F:System.Windows.OutOfBrowserSettings.IconsProperty">
<summary>标识 <see cref="P:System.Windows.OutOfBrowserSettings.Icons"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.OutOfBrowserSettings.Icons"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.OutOfBrowserSettings.SecuritySettings">
<summary>获取应用于浏览器外应用程序的安全设置。</summary>
<returns>应用于浏览器外应用程序的安全设置。</returns>
    </member>
    <member name="F:System.Windows.OutOfBrowserSettings.SecuritySettingsProperty">
<summary>标识 <see cref="P:System.Windows.OutOfBrowserSettings.SecuritySettings"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.OutOfBrowserSettings.SecuritySettings"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.OutOfBrowserSettings.ShortName">
<summary>获取应用程序标题的缩写形式。 </summary>
<returns>应用程序标题的缩写形式。 </returns>
    </member>
    <member name="F:System.Windows.OutOfBrowserSettings.ShortNameProperty">
<summary>标识 <see cref="P:System.Windows.OutOfBrowserSettings.ShortName"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.OutOfBrowserSettings.ShortName"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.OutOfBrowserSettings.ShowInstallMenuItem">
<summary>获取一个值，该值指示应用程序右键单击菜单是否包括安装选项。</summary>
<returns>如果右键单击菜单包括安装选项，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.OutOfBrowserSettings.ShowInstallMenuItemProperty">
<summary>标识 <see cref="P:System.Windows.OutOfBrowserSettings.ShowInstallMenuItem"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.OutOfBrowserSettings.ShowInstallMenuItem"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.OutOfBrowserSettings.WindowSettings">
<summary>获取应用于应用程序窗口的设置。</summary>
<returns>应用于应用程序窗口的设置。</returns>
    </member>
    <member name="F:System.Windows.OutOfBrowserSettings.WindowSettingsProperty">
<summary>标识 <see cref="P:System.Windows.OutOfBrowserSettings.WindowSettings"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.OutOfBrowserSettings.WindowSettings"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Point">
<summary>表示二维空间内的 X 和 Y 坐标对。还可以表示某些属性用法的逻辑点。</summary>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
<summary>初始化包含指定值的 <see cref="T:System.Windows.Point"/> 结构。 </summary>
<param name="x"><see cref="T:System.Windows.Point"/> 结构的 X 坐标值。 </param>
<param name="y"><see cref="T:System.Windows.Point"/> 结构的 Y 坐标值。 </param>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
<summary>确定指定的对象是否为 <see cref="T:System.Windows.Point"/> 以及它是否包含与此 <see cref="T:System.Windows.Point"/> 相同的值。 </summary>
<returns>如果 <paramref name="obj"/> 是 <see cref="T:System.Windows.Point"/> 并且包含与此 <see cref="T:System.Windows.Point"/> 相同的 <see cref="P:System.Windows.Point.X"/> 值和 <see cref="P:System.Windows.Point.Y"/> 值，则为 true；否则为 false。</returns>
<param name="o">要比较的对象。</param>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
<summary>比较两个 <see cref="T:System.Windows.Point"/> 结构是否相等。</summary>
<returns>如果两个 <see cref="T:System.Windows.Point"/> 结构都包含相同的 <see cref="P:System.Windows.Point.X"/> 值和 <see cref="P:System.Windows.Point.Y"/> 值，则为 true；否则为 false。</returns>
<param name="value">要与此实例进行比较的点。</param>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
<summary>返回此 <see cref="T:System.Windows.Point"/> 的哈希代码。</summary>
<returns>此 <see cref="T:System.Windows.Point"/> 结构的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
<summary>比较两个 <see cref="T:System.Windows.Point"/> 结构是否相等。</summary>
<returns>如果 <paramref name="point1"/> 和 <paramref name="point2"/> 的 <see cref="P:System.Windows.Point.X"/> 和 <see cref="P:System.Windows.Point.Y"/> 值相等，则为 true；否则为 false。</returns>
<param name="point1">要进行比较的第一个 <see cref="T:System.Windows.Point"/> 结构。</param>
<param name="point2">要进行比较的第二个 <see cref="T:System.Windows.Point"/> 结构。</param>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
<summary>比较两个 <see cref="T:System.Windows.Point"/> 结构是否不相等。</summary>
<returns>如果 <paramref name="point1"/> 和 <paramref name="point2"/> 具有不同的 <see cref="P:System.Windows.Point.X"/> 或 <see cref="P:System.Windows.Point.Y"/> 值，则为 true。如果 <paramref name="point1"/> 和 <paramref name="point2"/> 具有相同的 <see cref="P:System.Windows.Point.X"/> 和 <see cref="P:System.Windows.Point.Y"/> 值，则为 false。</returns>
<param name="point1">要比较的第一个点。</param>
<param name="point2">要比较的第二个点。</param>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)"/>。</summary>
<returns>一个字符串，包含采用指定格式的当前实例的值。</returns>
<param name="format">指定要使用的格式的字符串。-或- null，表示使用为 IFormattable 实现的类型定义的默认格式。 </param>
<param name="provider">用于格式化该值的 IFormatProvider。-或- null，表示从操作系统的当前区域设置中获取数字格式信息。 </param>
    </member>
    <member name="M:System.Windows.Point.ToString">
<summary>创建此 <see cref="T:System.Windows.Point"/> 的 <see cref="T:System.String"/> 表示形式。 </summary>
<returns>一个 <see cref="T:System.String"/>，它包含此 <see cref="T:System.Windows.Point"/> 结构的 <see cref="P:System.Windows.Point.X"/> 和 <see cref="P:System.Windows.Point.Y"/> 值。</returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
<summary>创建此 <see cref="T:System.Windows.Point"/> 的 <see cref="T:System.String"/> 表示形式。 </summary>
<returns>一个 <see cref="T:System.String"/>，它包含此 <see cref="T:System.Windows.Point"/> 结构的 <see cref="P:System.Windows.Point.X"/> 和 <see cref="P:System.Windows.Point.Y"/> 值。</returns>
<param name="provider">区域性特定的格式设置信息。</param>
    </member>
    <member name="P:System.Windows.Point.X">
<summary>获取或设置此 <see cref="T:System.Windows.Point"/> 结构的 <see cref="P:System.Windows.Point.X"/> 坐标值。 </summary>
<returns>此 <see cref="T:System.Windows.Point"/> 结构的 <see cref="P:System.Windows.Point.X"/> 坐标值。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Point.Y">
<summary>获取或设置此 <see cref="T:System.Windows.Point"/> 的 <see cref="P:System.Windows.Point.Y"/> 坐标值。 </summary>
<returns>此 <see cref="T:System.Windows.Point"/> 结构的 <see cref="P:System.Windows.Point.Y"/> 坐标值。默认值为 0。</returns>
    </member>
    <member name="T:System.Windows.PresentationFrameworkCollection`1">
<summary>为 Silverlight 集合提供公共集合类。</summary>
<typeparam name="T">用于约束集合实现的类型安全的类型约束。</typeparam>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)">
<summary>向 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 对象添加项。</summary>
<param name="value">要添加的对象。</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.Clear">
<summary>从 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中移除所有项。</summary>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)">
<summary>确定 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 是否包含特定值。</summary>
<returns>如果对象在 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中，则为 true；否则为 false。</returns>
<param name="value">要在 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中查找的对象。</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)">
<summary>从特定的 <see cref="T:System.Array"/> 索引处开始，将 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 的元素复制到一个 <see cref="T:System.Array"/> 中。</summary>
<param name="array">作为从 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 复制的元素的目标位置的一维 <see cref="T:System.Array"/>。<see cref="T:System.Array"/> 必须具有从零开始的索引。 </param>
<param name="index"><paramref name="array"/> 中从零开始的索引，将在此处开始复制。 </param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)">
<summary>从特定的 <see cref="T:System.Array"/> 索引处开始，将 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 的元素复制到一个 <see cref="T:System.Array"/> 中。</summary>
<param name="array">作为从 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 复制的元素的目标位置的一维 <see cref="T:System.Array"/>。<see cref="T:System.Array"/> 必须具有从零开始的索引。 </param>
<param name="index"><paramref name="array"/> 中从零开始的索引，将在此处开始复制。 </param>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.Count">
<summary>获取 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中包含的元素数量。</summary>
<returns><see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中包含的元素个数。</returns>
    </member>
    <member name="F:System.Windows.PresentationFrameworkCollection`1.CountProperty">
<summary>标识 <see cref="P:System.Windows.PresentationFrameworkCollection`1.Count"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.PresentationFrameworkCollection`1.Count"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator">
<summary>返回一个循环访问集合的枚举器。</summary>
<returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator"/> 对象。</returns>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)">
<summary>确定 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中特定项的索引。</summary>
<returns>如果在列表中找到，则为 <paramref name="value"/> 的索引；否则为 -1。</returns>
<param name="value">要在 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中查找的对象。 </param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)">
<summary>将一个项插入指定索引处的 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/>。</summary>
<param name="index">应插入 <paramref name="value"/> 的位置的零始索引。 </param>
<param name="value">要插入到 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中的对象。 </param>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize">
<summary>获取一个值，该值指示 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 是否具有固定大小。</summary>
<returns>如果 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 具有固定大小，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly">
<summary>获取一个值，该值指示 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 是否为只读。</summary>
<returns>如果 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized">
<summary>获取一个值，该值指示是否同步对 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 的访问（线程安全）。</summary>
<returns>如果同步对 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 的访问（线程安全），则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)">
<summary>获取或设置位于指定索引处的元素。</summary>
<returns>位于指定索引处的元素。</returns>
<param name="index">要获取或设置的元素从零开始的索引。 </param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)">
<summary>从 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中移除第一次出现的特定对象。</summary>
<returns>如果移除对象，则为 true；否则为 false。</returns>
<param name="value">要从 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中移除的对象。</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)">
<summary>移除指定索引处的项。</summary>
<param name="index">要移除的项的从零开始的索引。 </param>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot">
<summary>获取一个对象，该对象可以用于同步对 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 的访问。</summary>
<returns>可用于同步对 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 的访问的对象。</returns>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator">
<summary>返回一个循环访问集合的枚举器。</summary>
<returns>可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator"/> 对象。</returns>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)">
<summary>向 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 对象添加项。</summary>
<returns>新元素的插入位置。 </returns>
<param name="value">要添加的对象。</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)">
<summary>确定 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 是否包含特定值。</summary>
<returns>如果对象在 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中，则为 true；否则为 false。</returns>
<param name="value">要在 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中查找的对象。</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)">
<summary>确定 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中特定项的索引。</summary>
<returns>如果在列表中找到，则为 <paramref name="value"/> 的索引；否则为 -1。</returns>
<param name="value">要在 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中查找的对象。 </param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
<summary>将一个项插入指定索引处的 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/>。</summary>
<param name="index">应插入 <paramref name="value"/> 的位置的零始索引。 </param>
<param name="value">要插入到 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中的对象。 </param>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)">
<summary>获取或设置位于指定索引处的元素。</summary>
<returns>位于指定索引处的元素。</returns>
<param name="index">要获取或设置的元素从零开始的索引。 </param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)">
<summary>从 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中移除第一次出现的特定对象。</summary>
<param name="value">要从 <see cref="T:System.Windows.PresentationFrameworkCollection`1"/> 中移除的对象。</param>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
<summary>表示在依赖项对象的有效属性值更改时调用的回调。</summary>
<param name="d">属性值已更改的 <see cref="T:System.Windows.DependencyObject"/>。</param>
<param name="e">由任何事件发出的事件数据，该事件跟踪对此属性的有效值的更改。</param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
<summary>定义依赖项属性行为的某些方面，包括其注册条件。 </summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
<summary>使用属性默认值初始化 <see cref="T:System.Windows.PropertyMetadata"/> 类的新实例。</summary>
<param name="defaultValue">应用此 <see cref="T:System.Windows.PropertyMetadata"/> 的属性的默认值。</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
<summary>使用属性默认值和回调引用初始化 <see cref="T:System.Windows.PropertyMetadata"/> 类的新实例。</summary>
<param name="defaultValue">应用此 <see cref="T:System.Windows.PropertyMetadata"/> 的属性的默认值。</param>
<param name="propertyChangedCallback">用于为属性更改行为进行调用的回调引用。</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
<summary>使用回调引用初始化 <see cref="T:System.Windows.PropertyMetadata"/> 类的新实例。</summary>
<param name="propertyChangedCallback">用于为属性更改行为进行调用的回调引用。</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
<summary>获取依赖项属性的默认值。 </summary>
<returns>依赖项属性的默认值。</returns>
    </member>
    <member name="T:System.Windows.PropertyPath">
<summary>实现一个数据结构，用于将某个属性描述为另一个属性或所属类型下的路径。属性路径用在对象的数据绑定中，并用在动画的演示图板和时间线中。</summary>
    </member>
    <member name="M:System.Windows.PropertyPath.#ctor(System.Object)">
<summary>初始化 <see cref="T:System.Windows.PropertyPath"/> 类的新实例。</summary>
<param name="parameter">依赖项属性标识符，或属性路径字符串。</param>
    </member>
    <member name="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
<summary>初始化 <see cref="T:System.Windows.PropertyPath"/> 类的新实例。</summary>
<param name="path">此 <see cref="T:System.Windows.PropertyPath"/> 的路径字符串。</param>
<param name="pathParameters">不使用。请参阅“备注”。</param>
<exception cref="T:System.ArgumentOutOfRangeException">为 <paramref name="pathParameters"/> 提供的长度大于零的数组。</exception>
    </member>
    <member name="P:System.Windows.PropertyPath.Path">
<summary>获取此 <see cref="T:System.Windows.PropertyPath"/> 具有的路径值。</summary>
<returns>此 <see cref="T:System.Windows.PropertyPath"/> 具有的路径值。</returns>
    </member>
    <member name="T:System.Windows.PropertyPathConverter">
<summary>为 <see cref="T:System.Windows.PropertyPath"/> 类型提供类型转换支持。 </summary>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.#ctor">
<summary>初始化 <see cref="T:System.Windows.PropertyPathConverter"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
<summary>返回此转换器是否可以将一种类型的对象转换为 <see cref="T:System.Windows.PropertyPath"/> 类型。</summary>
<returns>如果该转换器能够执行转换，则为 true；否则为 false。</returns>
<param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>。 </param>
<param name="sourceType">一个 <see cref="T:System.Type"/>，表示要转换的类型。 </param>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
<summary>将给定的值转换为 <see cref="T:System.Windows.PropertyPath"/> 类型。</summary>
<returns>返回的 <see cref="T:System.Windows.PropertyPath"/>。</returns>
<param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>。 </param>
<param name="culture">用作当前区域性的 <see cref="T:System.Globalization.CultureInfo"/>。 </param>
<param name="value">要转换的对象。</param>
      <exception cref="T:System.NotSupportedException">
<paramref name="value"/> 不是字符串，也不是现有 <see cref="T:System.Windows.PropertyPath"/>。</exception>
    </member>
    <member name="T:System.Windows.Rect">
<summary>描述矩形的宽度、高度和原点。 </summary>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
<summary>初始化 <see cref="T:System.Windows.Rect"/> 结构，此结构具有指定的 x 坐标、y 坐标、宽度和高度。 </summary>
<param name="x">矩形左上角的 x 坐标。</param>
<param name="y">矩形左上角的 y 坐标。</param>
<param name="width">矩形的宽度。</param>
<param name="height">矩形的高度。</param>
<exception cref="T:System.ArgumentException">宽度或高度小于 0。</exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
<summary>初始化 <see cref="T:System.Windows.Rect"/> 结构，此结构的大小刚好足以包含两个指定的点。 </summary>
<param name="point1">新矩形必须包含的第一个点。</param>
<param name="point2">新矩形必须包含的第二个点。</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
<summary>基于原点和大小初始化 <see cref="T:System.Windows.Rect"/> 结构。 </summary>
<param name="location">新 <see cref="T:System.Windows.Rect"/> 的原点。</param>
<param name="size">新 <see cref="T:System.Windows.Rect"/> 的大小。</param>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
<summary>获取矩形底边的 y 轴值。 </summary>
<returns>矩形底边的 y 轴值。如果矩形为空，则该值为 <see cref="F:System.Double.NegativeInfinity"/>。</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
<summary>指示 <see cref="T:System.Windows.Rect"/> 所描述的矩形是否包含指定的点。</summary>
<returns>如果 <see cref="T:System.Windows.Rect"/> 所描述的矩形包含指定的点，则为 true；否则为 false。</returns>
<param name="point">要检查的点。</param>
    </member>
    <member name="P:System.Windows.Rect.Empty">
<summary>获取一个特殊值，该值表示没有位置或区域的矩形。 </summary>
<returns>空矩形，其 <see cref="P:System.Windows.Rect.X"/> 和 <see cref="P:System.Windows.Rect.Y"/> 属性值为 <see cref="F:System.Double.PositiveInfinity"/>，<see cref="P:System.Windows.Rect.Width"/> 和 <see cref="P:System.Windows.Rect.Height"/> 属性值为 <see cref="F:System.Double.NegativeInfinity"/>。</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
<summary>指示指定的对象是否等于当前的 <see cref="T:System.Windows.Rect"/>。</summary>
<returns>如果 <paramref name="o"/> 为 <see cref="T:System.Windows.Rect"/> 并与当前 <see cref="T:System.Windows.Rect"/> 具有相同的 x、y、宽度、高度值，则为 true；否则为 false。</returns>
<param name="o">要与当前矩形进行比较的对象。</param>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
<summary>指示指定的 <see cref="T:System.Windows.Rect"/> 是否等于当前 <see cref="T:System.Windows.Rect"/>。 </summary>
<returns>如果指定的 <see cref="T:System.Windows.Rect"/> 具有与当前 <see cref="T:System.Windows.Rect"/> 相同的 x、y、宽度、高度属性值，则为 true；否则为 false。</returns>
<param name="value">要与当前矩形进行比较的矩形。</param>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
<summary>创建 <see cref="T:System.Windows.Rect"/> 的哈希代码。 </summary>
<returns>当前 <see cref="T:System.Windows.Rect"/> 结构的哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
<summary>获取或设置矩形的高度。 </summary>
<returns>表示矩形的高度的值。默认值为 0。</returns>
<exception cref="T:System.ArgumentException">指定的值小于 0。</exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
<summary>查找当前 <see cref="T:System.Windows.Rect"/> 所表示的矩形和指定 <see cref="T:System.Windows.Rect"/> 所表示的矩形的交集，并将结果存储为当前 <see cref="T:System.Windows.Rect"/>。 </summary>
<param name="rect">要与当前矩形相交的矩形。</param>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
<summary>获取一个值，该值指示矩形是否为 <see cref="P:System.Windows.Rect.Empty"/> 矩形。</summary>
<returns>如果矩形为 <see cref="P:System.Windows.Rect.Empty"/> 矩形，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
<summary>获取矩形左边的 x 轴值。 </summary>
<returns>矩形左边的 x 轴值。</returns>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
<summary>比较两个 <see cref="T:System.Windows.Rect"/> 结构是否相等。</summary>
<returns>如果 <see cref="T:System.Windows.Rect"/> 结构具有相同的 x、y、宽度、高度属性值，则为 true；否则为 false。</returns>
<param name="rect1">要比较的第一个矩形。</param>
<param name="rect2">要比较的第二个矩形。</param>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
<summary>比较两个 <see cref="T:System.Windows.Rect"/> 结构是否不相等。  </summary>
<returns>如果 <see cref="T:System.Windows.Rect"/> 结构没有相同的 x、y、宽度、高度属性值，则为 true；否则为 false。</returns>
<param name="rect1">要比较的第一个矩形。</param>
<param name="rect2">要比较的第二个矩形。</param>
    </member>
    <member name="P:System.Windows.Rect.Right">
<summary>获取矩形右边的 x 轴值。  </summary>
<returns>矩形右边的 x 轴值。</returns>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)"/>。</summary>
<returns>一个字符串，包含采用指定格式的当前实例的值。</returns>
<param name="format">指定要使用的格式的字符串。-或- null，表示使用为 IFormattable 实现的类型定义的默认格式。 </param>
<param name="provider">用于格式化该值的 IFormatProvider。-或- null，表示从操作系统的当前区域设置中获取数字格式信息。 </param>
    </member>
    <member name="P:System.Windows.Rect.Top">
<summary>获取矩形顶边的 y 轴位置。 </summary>
<returns>矩形顶边的 y 轴位置。</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
<summary>返回 <see cref="T:System.Windows.Rect"/> 结构的字符串表示形式。 </summary>
<returns>当前 <see cref="T:System.Windows.Rect"/> 结构的字符串表示形式。此字符串采用以下格式：“<see cref="P:System.Windows.Rect.X"/>,<see cref="P:System.Windows.Rect.Y"/>,<see cref="P:System.Windows.Rect.Width"/>,<see cref="P:System.Windows.Rect.Height"/>”。</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
<summary>使用指定的格式提供程序返回矩形的字符串表示形式。 </summary>
<returns>当前矩形的字符串表示形式，由指定的格式提供程序确定。</returns>
<param name="provider">区域性特定的格式设置信息。</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
<summary>放大当前 <see cref="T:System.Windows.Rect"/> 所表示的矩形，使其刚好足以包含指定的点。 </summary>
<param name="point">要包含的点。</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
<summary>放大当前 <see cref="T:System.Windows.Rect"/> 所表示的矩形，使其刚好足以包含指定的矩形。 </summary>
<param name="rect">要包含的矩形。</param>
    </member>
    <member name="P:System.Windows.Rect.Width">
<summary>获取或设置矩形的宽度。  </summary>
<returns>一个表示矩形宽度的值（以像素为单位）。默认值为 0。</returns>
<exception cref="T:System.ArgumentException">指定的值小于 0。</exception>
    </member>
    <member name="P:System.Windows.Rect.X">
<summary>获取或设置矩形左边的 x 轴值。 </summary>
<returns>矩形左边的 x 轴值。将此值解释为坐标空间中的像素。</returns>
    </member>
    <member name="P:System.Windows.Rect.Y">
<summary>获取或设置矩形顶边的 y 轴值。 </summary>
<returns>矩形顶边的 y 轴值。将此值解释为坐标空间中的像素。</returns>
    </member>
    <member name="T:System.Windows.ResourceDictionary">
<summary>提供一个字典，该字典包含基于 Silverlight 的应用程序组件使用的资源。 </summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.#ctor">
<summary>初始化 <see cref="T:System.Windows.ResourceDictionary"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
<summary>向 <see cref="T:System.Windows.ResourceDictionary"/> 对象添加项。</summary>
<param name="key">要添加的项的字符串键。</param>
<param name="value">要添加的项值。 </param>
<exception cref="T:System.NotSupportedException">尝试将 null 作为值添加。</exception>
<exception cref="T:System.ArgumentException">尝试添加一个项，该项具有此 <see cref="T:System.Windows.ResourceDictionary"/> 中已有的 <paramref name="key"/>。-或- 已尝试使用不是字符串的 <paramref name="key"/>。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Add(System.String,System.Object)">
<summary>向 <see cref="T:System.Windows.ResourceDictionary"/> 对象添加项。</summary>
<param name="key">要添加的项的字符串键。</param>
<param name="value">要添加的项值。 </param>
<exception cref="T:System.NotSupportedException">尝试将 null 作为值添加。</exception>
<exception cref="T:System.ArgumentException">尝试添加一个项，该项具有此 <see cref="T:System.Windows.ResourceDictionary"/> 中已有的 <paramref name="key"/>。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Clear">
<summary>从该 <see cref="T:System.Windows.ResourceDictionary"/> 中移除所有项。</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Contains(System.Object)">
<summary>返回一个值，它指示在 <see cref="T:System.Windows.ResourceDictionary"/> 中是否存在指定的键。</summary>
<returns>如果 <see cref="T:System.Windows.ResourceDictionary"/> 中存在具有该键的项，则为 true；否则为 false。</returns>
<param name="key">要在 <see cref="T:System.Windows.ResourceDictionary"/> 中检查的键。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.CopyTo(System.Array,System.Int32)">
<summary>从特定的 <see cref="T:System.Array"/> 索引处开始，将 <see cref="T:System.Windows.ResourceDictionary"/> 的元素复制到一个 <see cref="T:System.Array"/> 中。</summary>
<param name="array">作为从 <see cref="T:System.Windows.ResourceDictionary"/> 复制的元素的目标位置的一维 <see cref="T:System.Array"/>。<see cref="T:System.Array"/> 必须具有从零开始的索引。</param>
<param name="index"><paramref name="array"/> 中从零开始的索引，将在此处开始复制。</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Count">
<summary>获取集合中包含的元素数。</summary>
<returns>集合中包含的元素数。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.GetEnumerator">
<summary>公开枚举器，该枚举器支持在非泛型集合上进行简单迭代。</summary>
<returns>一个可用于循环访问集合的枚举器。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.IsFixedSize">
<summary>获取一个值，该值指示 <see cref="T:System.Windows.ResourceDictionary"/> 是否具有固定大小。</summary>
<returns>始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.IsReadOnly">
<summary>获取一个值，该值指示集合是否为只读。</summary>
<returns>始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Item(System.Object)">
<summary>获取指定索引处的元素。</summary>
<returns>如果对象存在，则为该对象；否则为 null。</returns>
<param name="key">要获取的元素的键。 </param>
<exception cref="T:System.NotImplementedException">试图使用索引器设置值。 </exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="key"/> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
<paramref name="key"/> 不是字符串。</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Keys">
<summary>获取 <see cref="T:System.Collections.ICollection"/> 对象，它包含 <see cref="T:System.Windows.ResourceDictionary"/> 的键。</summary>
<returns>此 <see cref="T:System.Windows.ResourceDictionary"/> 中所有键的 <see cref="T:System.Collections.ICollection"/>。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.MergedDictionaries">
<summary>获取 <see cref="T:System.Windows.ResourceDictionary"/> 字典的集合，这些字典构成了合并字典中的各种资源字典。</summary>
<returns>构成合并字典中各种资源字典的 <see cref="T:System.Windows.ResourceDictionary"/> 字典的集合。 </returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Remove(System.Object)">
<summary>从 <see cref="T:System.Windows.ResourceDictionary"/> 中移除特定的项。</summary>
<param name="key">要移除的项的字符串键。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="key"/> 为 null。</exception>
<exception cref="T:System.ArgumentException">已尝试使用不是字符串的 <paramref name="key"/>。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Remove(System.String)">
<summary>从 <see cref="T:System.Windows.ResourceDictionary"/> 中移除特定的项。</summary>
<param name="key">要移除的项的字符串键。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="key"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Source">
<summary>获取或设置提供合并资源字典源位置的 URI。</summary>
<returns>提供合并资源字典源位置的 URI。这通常是引用已编译 DLL 中的 XAML 资源的路径，或对 XAP 中松散 XAML 文件的相对引用。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.ICollection`1.Add(`0)"/>。</summary>
<param name="item">要添加到集合中的对象。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#Clear">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.ICollection`1.Clear"/>。</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.ICollection`1.Contains(`0)"/>。</summary>
<returns>如果在集合中找到了 <paramref name="item"/>，则为 true；否则为 false。</returns>
<param name="item">要在集合中查找的对象。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.Object,System.Object}[],System.Int32)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)"/>。</summary>
<param name="array">作为集合中元素的复制目标位置的一维数组。该数组的索引必须从零开始。 </param>
<param name="arrayIndex"><paramref name="array"/> 中从零开始的索引，将在此处开始复制。 </param>
<exception cref="T:System.NotImplementedException">在所有情况下都由此实现引发。</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#Count">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.Generic.ICollection`1.Count"/>。</summary>
<returns>集合中包含的元素数。</returns>
<exception cref="T:System.NotImplementedException">在所有情况下都由此实现引发。</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#IsReadOnly">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly"/>。</summary>
<returns>如果集合为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.ICollection`1.Remove(`0)"/>。</summary>
<returns>如果从集合中成功移除了 <paramref name="item"/>，则为 true；否则为 false。如果在原始集合中找不到 <paramref name="item"/>，此方法也会返回 false。 </returns>
<param name="item">要从集合中移除的对象。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Add(System.Object,System.Object)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)"/>。</summary>
<param name="key">用作要添加的元素的键的对象。</param>
<param name="value">用作要添加的元素的值的对象。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#ContainsKey(System.Object)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)"/>。</summary>
<returns>如果字典包含具有键的元素，则为 true；否则为 false。</returns>
<param name="key">要在字典中定位的键。</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Item(System.Object)">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.Generic.IDictionary`2.Item(`0)"/>。</summary>
<returns>带有指定键的元素。 </returns>
<param name="key">要获取或设置的元素的键。</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.Generic.IDictionary`2.Keys"/>。</summary>
<returns>包含字典中元素的键的集合。</returns>
<exception cref="T:System.NotImplementedException">在所有情况下均引发。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Remove(System.Object)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IDictionary`2.Remove(`0)"/>。</summary>
<returns>如果从集合中成功移除了元素，则为 true；否则为 false。如果在原始集合中找不到 <paramref name="key"/>，此方法也会返回 false。 </returns>
<param name="key">要移除的元素的键。 </param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#TryGetValue(System.Object,System.Object@)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)"/>。</summary>
<returns>如果字典包含具有指定键的对象，则为 true；否则为 false。</returns>
<param name="key">要获取其值的键。</param>
<param name="value">当此方法返回时，如果找到指定的键，则为与该键相关联的值；否则，为值参数的类型的默认值。该参数未经初始化即被传递。 </param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.Generic.IDictionary`2.Values"/>。</summary>
<returns>包含字典中元素的值的集合。</returns>
<exception cref="T:System.NotImplementedException">在所有情况下均引发。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>。</summary>
<returns>一个可用于循环访问集合的枚举器。</returns>
<exception cref="T:System.NotImplementedException">在所有情况下均引发。</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.IsSynchronized"/>。</summary>
<returns>始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.SyncRoot"/>。</summary>
<returns>始终为 null。<see cref="T:System.Windows.ResourceDictionary"/> 不同步。</returns>
<exception cref="T:System.NotImplementedException">在所有情况下均引发。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>。</summary>
<returns>一个可用于循环访问集合的枚举器。 </returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Values">
<summary>获取 <see cref="T:System.Collections.ICollection"/> 对象，它包含 <see cref="T:System.Windows.ResourceDictionary"/> 的值。</summary>
<returns>此 <see cref="T:System.Windows.ResourceDictionary"/> 中的所有值的 <see cref="T:System.Collections.ICollection"/>。</returns>
    </member>
    <member name="T:System.Windows.RoutedEvent">
<summary>表示 Silverlight 事件系统的路由事件。</summary>
    </member>
    <member name="M:System.Windows.RoutedEvent.ToString">
<summary>返回路由事件的字符串表示形式。</summary>
<returns>路由事件的名称。</returns>
    </member>
    <member name="T:System.Windows.RoutedEventArgs">
<summary>包含与路由事件关联的状态信息和事件数据。 </summary>
    </member>
    <member name="M:System.Windows.RoutedEventArgs.#ctor">
<summary>初始化 <see cref="T:System.Windows.RoutedEventArgs"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.RoutedEventArgs.OriginalSource">
<summary>获取对引发事件的对象的引用。 </summary>
<returns>引发事件的对象。</returns>
    </member>
    <member name="T:System.Windows.RoutedEventHandler">
<summary>表示将处理路由事件的方法。</summary>
<param name="sender">事件处理程序所附加到的对象。</param>
<param name="e">事件数据。 </param>
    </member>
    <member name="T:System.Windows.RoutedPropertyChangedEventArgs`1">
<summary>提供有关依赖项属性值更改的数据（由特定的路由事件报告），其中包含发生更改的属性的旧值和新值。 </summary>
<typeparam name="T">发生更改的依赖项属性的类型。</typeparam>
    </member>
    <member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)">
<summary>使用提供的旧值和新值初始化 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1"/> 类的新实例。</summary>
<param name="oldValue">属性在事件引发之前的旧值。</param>
<param name="newValue">属性在事件引发时的当前值。</param>
    </member>
    <member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue">
<summary>获取由属性更改事件报告的属性的新值。 </summary>
<returns>泛型值。在 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1"/> 的实际实现中，此属性的泛型类型将替换为该实现的约束类型。</returns>
    </member>
    <member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue">
<summary>获取由属性更改事件报告的属性的旧值。 </summary>
<returns>泛型值。在 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1"/> 的实际实现中，此属性的泛型类型将替换为该实现的约束类型。</returns>
    </member>
    <member name="T:System.Windows.RoutedPropertyChangedEventHandler`1">
<summary>表示将处理跟踪属性值更改的各个路由事件的方法。</summary>
<param name="sender">事件处理程序所附加到的对象。</param>
<param name="e">事件数据。特定事件定义将 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1"/> 限制为一个类型，并且类型参数的限制与委托实现的类型参数限制一致。</param>
<typeparam name="T">报告值发生更改的属性值的类型。</typeparam>
    </member>
    <member name="T:System.Windows.SecuritySettings">
<summary>表示浏览器外应用程序的安全配置。 </summary>
    </member>
    <member name="M:System.Windows.SecuritySettings.#ctor">
<summary>初始化 <see cref="T:System.Windows.SecuritySettings"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.SecuritySettings.ElevatedPermissions">
<summary>获取一个值，该值指示浏览器外应用程序是否需要提升的权限。 </summary>
<returns>一个指示浏览器外应用程序是否需要提升的权限的值。</returns>
    </member>
    <member name="F:System.Windows.SecuritySettings.ElevatedPermissionsProperty">
<summary>标识 <see cref="P:System.Windows.SecuritySettings.ElevatedPermissions"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.SecuritySettings.ElevatedPermissions"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Setter">
<summary>将值应用于 <see cref="T:System.Windows.Style"/> 中的属性。</summary>
    </member>
    <member name="M:System.Windows.Setter.#ctor">
<summary>初始化 <see cref="T:System.Windows.Setter"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object)">
<summary>使用指定的属性和值初始化 <see cref="T:System.Windows.Setter"/> 类的新实例。</summary>
<param name="property">要应用值的依赖项属性。</param>
<param name="value">要应用于属性的值。</param>
    </member>
    <member name="P:System.Windows.Setter.Property">
<summary>获取或设置要应用 <see cref="P:System.Windows.Setter.Value"/> 的属性。</summary>
<returns>要应用 <see cref="P:System.Windows.Setter.Value"/> 的 <see cref="T:System.Windows.DependencyProperty"/>。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Setter.Value">
<summary>获取或设置要应用于 <see cref="T:System.Windows.Setter"/> 所指定的属性的值。</summary>
<returns>要应用于 <see cref="T:System.Windows.Setter"/> 所指定的属性的值。</returns>
    </member>
    <member name="T:System.Windows.SetterBase">
<summary>表示值 Setter 的基类。 </summary>
    </member>
    <member name="P:System.Windows.SetterBase.IsSealed">
<summary>获取一个值，该值指示此对象是否处于不可变状态。</summary>
<returns>如果此对象处于不可变状态，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.SetterBaseCollection">
<summary>表示从 <see cref="T:System.Windows.SetterBase"/> 继承的对象的集合。</summary>
    </member>
    <member name="M:System.Windows.SetterBaseCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.SetterBaseCollection"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.SetterBaseCollection.IsSealed">
<summary>获取一个值，该值指示集合是否处于只读状态。</summary>
<returns>如果此对象处于只读状态且无法更改，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.Size">
<summary>描述对象的宽度和高度。 </summary>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
<summary>初始化 <see cref="T:System.Windows.Size"/> 结构的新实例，并为其分配初始 <paramref name="width"/> 和 <paramref name="height"/>。</summary>
<param name="width"><see cref="T:System.Windows.Size"/> 实例的初始宽度。</param>
<param name="height"><see cref="T:System.Windows.Size"/> 实例的初始高度。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="width"/> 或 <paramref name="height"/> 小于零。</exception>
    </member>
    <member name="P:System.Windows.Size.Empty">
<summary>获取一个值，该值表示空的静态 <see cref="T:System.Windows.Size"/>。 </summary>
<returns><see cref="T:System.Windows.Size"/> 的空实例。</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
<summary>比较某个对象与 <see cref="T:System.Windows.Size"/> 的实例是否相等。 </summary>
<returns>如果大小相等，则为 true；否则为 false。</returns>
<param name="o">要进行比较的 <see cref="T:System.Object"/>。</param>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
<summary>比较某个值与 <see cref="T:System.Windows.Size"/> 的实例是否相等。 </summary>
<returns>如果 <see cref="T:System.Windows.Size"/> 的实例相等，则为 true；否则为 false。</returns>
<param name="value">要与此 <see cref="T:System.Windows.Size"/> 的当前实例进行比较的大小。</param>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
<summary>获取此 <see cref="T:System.Windows.Size"/> 实例的哈希代码。 </summary>
<returns><see cref="T:System.Windows.Size"/> 的此实例的哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Size.Height">
<summary>获取或设置此 <see cref="T:System.Windows.Size"/> 实例的高度。 </summary>
<returns>此 <see cref="T:System.Windows.Size"/> 实例的 <see cref="P:System.Windows.Size.Height"/>（以像素为单位）。默认值为 0。该值不能为负。</returns>
<exception cref="T:System.ArgumentException">指定的值小于 0。</exception>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
<summary>获取一个值，该值指示此 <see cref="T:System.Windows.Size"/> 实例是否为 <see cref="P:System.Windows.Size.Empty"/>。 </summary>
<returns>如果此 Size 实例为 <see cref="P:System.Windows.Size.Empty"/>，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
<summary>比较 <see cref="T:System.Windows.Size"/> 的两个实例是否相等。 </summary>
<returns>如果 <see cref="T:System.Windows.Size"/> 的两个实例相等，则为 true；否则为 false。</returns>
<param name="size1">要比较的第一个 <see cref="T:System.Windows.Size"/> 实例。</param>
<param name="size2">要比较的第二个 <see cref="T:System.Windows.Size"/> 实例。</param>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
<summary>比较 <see cref="T:System.Windows.Size"/> 的两个实例是否不相等。 </summary>
<returns>如果 <see cref="T:System.Windows.Size"/> 的实例不相等，则为 true；否则为 false。</returns>
<param name="size1">要比较的第一个 <see cref="T:System.Windows.Size"/> 实例。</param>
<param name="size2">要比较的第二个 <see cref="T:System.Windows.Size"/> 实例。</param>
    </member>
    <member name="M:System.Windows.Size.ToString">
<summary>返回此 <see cref="T:System.Windows.Size"/> 的字符串表示形式。</summary>
<returns>此 <see cref="T:System.Windows.Size"/> 的字符串表示形式。</returns>
    </member>
    <member name="P:System.Windows.Size.Width">
<summary>获取或设置此 <see cref="T:System.Windows.Size"/> 实例的宽度。 </summary>
<returns>此 <see cref="T:System.Windows.Size"/> 实例的 <see cref="P:System.Windows.Size.Width"/>（以像素为单位）。默认值为 0。该值不能为负。</returns>
<exception cref="T:System.ArgumentException">指定的值小于 0。</exception>
    </member>
    <member name="T:System.Windows.SizeChangedEventArgs">
<summary>提供与 <see cref="E:System.Windows.FrameworkElement.SizeChanged"/> 事件相关的数据。 </summary>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.NewSize">
<summary>获取对象的新大小，并报告大小变化。</summary>
<returns>新大小。<see cref="T:System.Windows.Size"/> 结构包含新的高度和宽度。</returns>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.PreviousSize">
<summary>获取对象的先前大小，并报告大小变化。</summary>
<returns>先前的大小。 </returns>
    </member>
    <member name="T:System.Windows.SizeChangedEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.FrameworkElement.SizeChanged"/> 事件的方法。</summary>
<param name="sender">事件处理程序所附加到的对象。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.StartupEventArgs">
<summary>包含 <see cref="E:System.Windows.Application.Startup"/> 事件的事件数据。</summary>
    </member>
    <member name="P:System.Windows.StartupEventArgs.InitParams">
<summary>获取作为 Silverlight 插件的 HTML 初始化的一部分传递的初始化参数。</summary>
<returns>初始化参数集，形式为带有键字符串和值字符串的字典。</returns>
    </member>
    <member name="T:System.Windows.StartupEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.Application.Startup"/> 事件的方法。 </summary>
<param name="sender">引发事件的对象。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Style">
<summary>包含可以在类型的实例间共享的属性 setter。</summary>
    </member>
    <member name="M:System.Windows.Style.#ctor">
<summary>初始化 <see cref="T:System.Windows.Style"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Style.#ctor(System.Type)">
<summary>初始化 <see cref="T:System.Windows.Style"/> 类的一个新实例，以便在指定的 <see cref="T:System.Type"/> 上使用。 </summary>
<param name="targetType">要应用该样式的类型。</param>
    </member>
    <member name="P:System.Windows.Style.BasedOn">
<summary>获取或设置一个作为当前样式的基准的已定义样式。</summary>
<returns>一个作为当前样式的基准的已定义样式。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Style.IsSealed">
<summary>获取一个值，该值指示样式是否为只读（无法更改）。</summary>
<returns>如果样式为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Style.Seal">
<summary>锁定样式以便 <see cref="P:System.Windows.Style.TargetType"/> 属性或 <see cref="P:System.Windows.Style.Setters"/> 集合中的任何 <see cref="T:System.Windows.Setter"/> 均无法更改。</summary>
    </member>
    <member name="P:System.Windows.Style.Setters">
<summary>获取 <see cref="T:System.Windows.Setter"/> 对象的集合。</summary>
<returns><see cref="T:System.Windows.Setter"/> 对象的集合。默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.Style.TargetType">
<summary>获取或设置样式所针对的类型。</summary>
<returns>样式应用到的对象的类型。</returns>
    </member>
    <member name="T:System.Windows.StyleTypedPropertyAttribute">
<summary>表示一个属性，它应用于类定义并报告类型为 <see cref="T:System.Windows.Style"/> 的属性的 <see cref="P:System.Windows.Style.TargetType"/>。</summary>
    </member>
    <member name="M:System.Windows.StyleTypedPropertyAttribute.#ctor">
<summary>初始化 <see cref="T:System.Windows.StyleTypedPropertyAttribute"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.StyleTypedPropertyAttribute.Property">
<summary>获取或设置类型为 <see cref="T:System.Windows.Style"/> 的属性的名称。</summary>
<returns>属性的名称。</returns>
    </member>
    <member name="P:System.Windows.StyleTypedPropertyAttribute.StyleTargetType">
<summary>获取或设置此属性所指定的 <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property"/> 的 <see cref="P:System.Windows.Style.TargetType"/>。 </summary>
<returns>此属性所指定的 <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property"/> 的 <see cref="P:System.Windows.Style.TargetType"/>。</returns>
    </member>
    <member name="T:System.Windows.SystemColors">
<summary>包含与系统显示元素对应的系统颜色、系统画笔和系统资源键。</summary>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是活动窗口边框的颜色。</summary>
<returns>活动窗口边框的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是活动窗口标题栏的背景色。</summary>
<returns>活动窗口标题栏的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是活动窗口标题栏中文本的颜色。</summary>
<returns>活动窗口标题栏的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是应用程序工作区的颜色。</summary>
<returns>应用程序工作区的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是三维显示元素的表面颜色。</summary>
<returns>三维显示元素的表面颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是三维显示元素的阴影颜色。</summary>
<returns>三维显示元素的阴影颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是三维显示元素的暗阴影颜色。</summary>
<returns>三维显示元素的暗阴影颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是三维显示元素的亮色。</summary>
<returns>三维显示元素的亮色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是三维显示元素的突出显示颜色。</summary>
<returns>三维显示元素的突出显示颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是三维显示元素中文本的颜色。</summary>
<returns>三维显示元素中文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是桌面的颜色。</summary>
<returns>桌面的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是禁用文本的颜色。</summary>
<returns>禁用文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是选定项的背景色。</summary>
<returns>选定项的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是选定项的文本的颜色。</summary>
<returns>选定项文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是非活动窗口的边框的颜色。</summary>
<returns>非活动窗口边框的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是非活动窗口标题栏的背景色。</summary>
<returns>非活动窗口标题栏的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是非活动窗口的标题栏文本的颜色。</summary>
<returns>非活动窗口标题栏文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是 <see cref="T:System.Windows.Controls.ToolTip"/> 控件的背景色。</summary>
<returns><see cref="T:System.Windows.Controls.ToolTip"/> 控件的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是 <see cref="T:System.Windows.Controls.ToolTip"/> 控件的文本颜色。</summary>
<returns><see cref="T:System.Windows.Controls.ToolTip"/> 控件的文本颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是菜单背景的颜色。</summary>
<returns>菜单背景的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是菜单文本的颜色。</summary>
<returns>菜单文本的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是滚动条的背景色。</summary>
<returns>滚动条的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是窗口工作区中的背景色。</summary>
<returns>窗口工作区中的背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是窗口框架的颜色。</summary>
<returns>窗口框架的颜色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextColor">
<summary>获取 <see cref="T:System.Windows.Media.Color"/> 结构，它是窗口工作区中文本的颜色。</summary>
<returns>窗口工作区中文本的颜色。</returns>
    </member>
    <member name="T:System.Windows.SystemParameters">
<summary>包含可用来查询系统设置的属性。</summary>
    </member>
    <member name="P:System.Windows.SystemParameters.HighContrast">
<summary>获取一个值，该值指示客户端计算机是否处于高对比度模式下。</summary>
<returns>如果客户端计算机处于高对比度模式下，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.SystemParameters.WheelScrollLines">
<summary>获取一个值，该值指示为了响应鼠标轮事件而要垂直滚动的行数。</summary>
<returns>为了响应鼠标轮事件而要垂直滚动的行数。</returns>
    </member>
    <member name="T:System.Windows.TemplateBindingExpression">
<summary>支持模板绑定。</summary>
    </member>
    <member name="T:System.Windows.TemplatePartAttribute">
<summary>表示一个属性，该属性应用于类定义以标识用于控件模板化的已命名部件的类型。</summary>
    </member>
    <member name="M:System.Windows.TemplatePartAttribute.#ctor">
<summary>初始化 <see cref="T:System.Windows.TemplatePartAttribute"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.TemplatePartAttribute.Name">
<summary>获取或设置报告模板部件的对象模型名称的字符串。</summary>
<returns>应该用作模板中的模板部件名称的字符串。</returns>
    </member>
    <member name="P:System.Windows.TemplatePartAttribute.Type">
<summary>获取或设置报告模板部件的 <see cref="T:System.Type"/> 的字符串。</summary>
<returns>报告模板部件的类型的 <see cref="T:System.Type"/> 对象。</returns>
    </member>
    <member name="T:System.Windows.TemplateVisualStateAttribute">
<summary>指定控件可处于特定状态，并且 <see cref="T:System.Windows.VisualState"/> 应该位于该控件的 <see cref="T:System.Windows.Controls.ControlTemplate"/> 中。</summary>
    </member>
    <member name="M:System.Windows.TemplateVisualStateAttribute.#ctor">
<summary>初始化 <see cref="T:System.Windows.TemplateVisualStateAttribute"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.TemplateVisualStateAttribute.GroupName">
<summary>获取或设置该状态所属的组名。</summary>
<returns>该状态所属的组的名称。</returns>
    </member>
    <member name="P:System.Windows.TemplateVisualStateAttribute.Name">
<summary>获取或设置该控件可处于的状态的名称。</summary>
<returns>该控件可处于的状态的名称。</returns>
    </member>
    <member name="T:System.Windows.TextAlignment">
<summary>指定文本居中、左对齐还是右对齐。</summary>
    </member>
    <member name="F:System.Windows.TextAlignment.Center">
<summary>文本在容器内居中。</summary>
    </member>
    <member name="F:System.Windows.TextAlignment.Left">
<summary>文本与容器的左边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.TextAlignment.Right">
<summary>文本与容器的右边缘对齐。</summary>
    </member>
    <member name="F:System.Windows.TextAlignment.Justify">
<summary>文本在容器内对齐。</summary>
    </member>
    <member name="T:System.Windows.TextDecorationCollection">
<summary>提供 <see cref="P:System.Windows.Controls.TextBlock.TextDecorations"/> 和 <see cref="P:System.Windows.Documents.Inline.TextDecorations"/> 属性的值。</summary>
    </member>
    <member name="T:System.Windows.TextDecorations">
<summary>实现一组预定义文本效果。</summary>
    </member>
    <member name="P:System.Windows.TextDecorations.Underline">
<summary>指定带下划线的文本效果。</summary>
<returns>表示带下划线的文本效果的 <see cref="T:System.Windows.TextDecorationCollection"/>。</returns>
    </member>
    <member name="T:System.Windows.TextTrimming">
<summary>描述当文本溢出其包含框的边缘时如何修整文本。</summary>
    </member>
    <member name="F:System.Windows.TextTrimming.None">
<summary>不修整文本。</summary>
    </member>
    <member name="F:System.Windows.TextTrimming.WordEllipsis">
<summary>在单词边界处修整文本。将绘制省略号 (...) 来替代剩余的文本。</summary>
    </member>
    <member name="T:System.Windows.TextWrapping">
<summary>指定文本在到达其容器的边缘时是否换行。</summary>
    </member>
    <member name="F:System.Windows.TextWrapping.NoWrap">
<summary>未执行换行。</summary>
    </member>
    <member name="F:System.Windows.TextWrapping.Wrap">
<summary>如果某一文本行溢出了其容器的可用宽度，则会进行换行。即使标准换行算法无法确定任何换行时机（比如说，某一文本行包含较长的单词，而该单词受限于不允许滚动的固定宽度容器），此时也进行换行。</summary>
    </member>
    <member name="T:System.Windows.Thickness">
<summary>描述矩形周围框架的粗细。四个 <see cref="T:System.Double"/> 值分别描述矩形的四个边（<see cref="P:System.Windows.Thickness.Left"/>、<see cref="P:System.Windows.Thickness.Top"/>、<see cref="P:System.Windows.Thickness.Right"/> 和 <see cref="P:System.Windows.Thickness.Bottom"/>）。 </summary>
    </member>
    <member name="M:System.Windows.Thickness.#ctor(System.Double)">
<summary>初始化各边使用指定的统一长度的 <see cref="T:System.Windows.Thickness"/> 结构。 </summary>
<param name="uniformLength">应用到边框所有四个边的统一长度。</param>
    </member>
    <member name="M:System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
<summary>初始化 <see cref="T:System.Windows.Thickness"/> 结构，其矩形的各边应用了特定的长度（作为 <see cref="T:System.Double"/> 提供）。 </summary>
<param name="left">矩形左边的粗细。</param>
<param name="top">矩形顶边的粗细。</param>
<param name="right">矩形右边的粗细。</param>
<param name="bottom">矩形底边的粗细。</param>
    </member>
    <member name="P:System.Windows.Thickness.Bottom">
<summary>获取或设置边框底边的宽度（以像素为单位）。</summary>
<returns><see cref="T:System.Windows.Thickness"/> 的此实例的 <see cref="T:System.Double"/>，表示边框底边的宽度（以像素为单位）。默认值为 0。</returns>
    </member>
    <member name="M:System.Windows.Thickness.Equals(System.Object)">
<summary>比较此 <see cref="T:System.Windows.Thickness"/> 结构与另一个 <see cref="T:System.Object"/> 是否相等。</summary>
<returns>如果两个对象相等，则为 true；否则为 false。</returns>
<param name="obj">要比较的对象。</param>
    </member>
    <member name="M:System.Windows.Thickness.Equals(System.Windows.Thickness)">
<summary>比较此 <see cref="T:System.Windows.Thickness"/> 结构与另一个 <see cref="T:System.Windows.Thickness"/> 结构是否相等。</summary>
<returns>如果 <see cref="T:System.Windows.Thickness"/> 的两个实例相等，则为 true；否则为 false。</returns>
<param name="thickness">要对其进行比较以看是否相等的 <see cref="T:System.Windows.Thickness"/> 的一个实例。</param>
    </member>
    <member name="M:System.Windows.Thickness.GetHashCode">
<summary>返回结构的哈希代码。</summary>
<returns>此 <see cref="T:System.Windows.Thickness"/> 实例的哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Thickness.Left">
<summary>获取或设置边框左边的宽度（以像素为单位）。 </summary>
<returns><see cref="T:System.Windows.Thickness"/> 的此实例的 <see cref="T:System.Double"/>，表示边框左边的宽度（以像素为单位）。默认值为 0。</returns>
    </member>
    <member name="M:System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)">
<summary>比较两个 <see cref="T:System.Windows.Thickness"/> 结构的值是否相等。</summary>
<returns>如果 <see cref="T:System.Windows.Thickness"/> 的两个实例相等，则为 true；否则为 false。</returns>
<param name="t1">要比较的第一个结构。</param>
<param name="t2">要比较的另一个结构。</param>
    </member>
    <member name="M:System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)">
<summary>比较两个 <see cref="T:System.Windows.Thickness"/> 结构是否不相等。 </summary>
<returns>如果 <see cref="T:System.Windows.Thickness"/> 的两个实例不相等，则为 true；否则为 false。</returns>
<param name="t1">要比较的第一个结构。</param>
<param name="t2">要比较的另一个结构。</param>
    </member>
    <member name="P:System.Windows.Thickness.Right">
<summary>获取或设置边框右边的宽度（以像素为单位）。 </summary>
<returns><see cref="T:System.Windows.Thickness"/> 的此实例的 <see cref="T:System.Double"/>，表示边框右边的宽度（以像素为单位）。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Thickness.Top">
<summary>获取或设置边框顶边的宽度（以像素为单位）。</summary>
<returns><see cref="T:System.Windows.Thickness"/> 的此实例的 <see cref="T:System.Double"/>，表示边框顶边的宽度（以像素为单位）。默认值为 0。</returns>
    </member>
    <member name="M:System.Windows.Thickness.ToString">
<summary>返回 <see cref="T:System.Windows.Thickness"/> 结构的字符串表示形式。</summary>
<returns>一个 <see cref="T:System.String"/>，表示 <see cref="T:System.Windows.Thickness"/> 值。</returns>
    </member>
    <member name="T:System.Windows.TriggerAction">
<summary>充当 <see cref="T:System.Windows.Media.Animation.BeginStoryboard"/> 的基类。</summary>
    </member>
    <member name="T:System.Windows.TriggerActionCollection">
<summary>表示 <see cref="T:System.Windows.Media.Animation.BeginStoryboard"/> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.TriggerActionCollection"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.TriggerBase">
<summary>充当 <see cref="T:System.Windows.EventTrigger"/> 的基类。</summary>
    </member>
    <member name="T:System.Windows.TriggerCollection">
<summary>表示 <see cref="T:System.Windows.EventTrigger"/> 对象的集合。 </summary>
    </member>
    <member name="T:System.Windows.UIElement">
      <summary>
<see cref="T:System.Windows.UIElement"/> 是 Silverlight 中具有可视外观并可以处理基本输入的大多数对象的基类。 </summary>
    </member>
    <member name="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
<summary>为指定的路由事件添加路由事件处理程序，并将该处理程序添加到当前元素的处理程序集合中。将 <paramref name="handledEventsToo"/> 指定为 true 时，可为已标记为由其他元素在事件路由过程中处理的路由事件调用所提供的处理程序。 </summary>
<param name="routedEvent">要处理的路由事件的标识符。</param>
<param name="handler">对处理程序实现的引用。</param>
<param name="handledEventsToo">如果为 true，则将按以下方式注册处理程序：即使路由事件在其事件数据中标记为已处理，也会调用该处理程序；如果为 false，则使用默认条件注册处理程序，即当路由事件已标记为已处理时，将不调用该处理程序。默认值为 false。不要例行地请求重新处理路由事件。有关更多信息，请参阅“备注”。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="routedEvent"/> 或 <paramref name=" handler"/> 为 null<paramref name="."/></exception>
      <exception cref="T:System.ArgumentException">
<paramref name="routedEvent"/> 不表示支持的路由事件。-或- <paramref name="handler"/> 不实现支持的委托。</exception>
<exception cref="T:System.NotImplementedException">试图为当前平台的变体不支持的事件添加处理程序。</exception>
    </member>
    <member name="P:System.Windows.UIElement.AllowDrop">
<summary>获取或设置一个值，该值确定此 <see cref="T:System.Windows.UIElement"/> 是否可用作 Silverlight 拖放操作的放置目标。</summary>
<returns>如果此 <see cref="T:System.Windows.UIElement"/> 可用作 Silverlight 拖放操作的放置目标，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.UIElement.AllowDropProperty">
<summary>标识 <see cref="P:System.Windows.UIElement.AllowDrop"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.UIElement.AllowDrop"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.UIElement.Arrange(System.Windows.Rect)">
<summary>定位子对象并确定 <see cref="T:System.Windows.UIElement"/> 的大小。为其子元素实现自定义布局的父对象应从其布局重写实现调用此方法以形成递归布局更新。</summary>
<param name="finalRect">布局中父对象为子对象计算的最终大小，作为 <see cref="T:System.Windows.Rect"/> 值提供。</param>
      <exception cref="T:System.InvalidOperationException">
<paramref name="finalRect"/> 包含 <see cref="F:System.Double.NaN"/> 或无穷大值。请参阅“备注”。</exception>
    </member>
    <member name="P:System.Windows.UIElement.CacheMode">
<summary>获取或设置一个值，该值指示应在可能时缓存已呈现内容。</summary>
<returns>指示应在可能时缓存已呈现内容的值。如果指定 <see cref="T:System.Windows.Media.CacheMode"/> 的值，<see cref="P:System.Windows.UIElement.RenderTransform"/> 和 <see cref="P:System.Windows.UIElement.Opacity"/> 中的呈现操作将在图形处理单元 (GPU) 上执行（如果可用）。默认值为 null，这不会启用缓存的组合模式。 </returns>
    </member>
    <member name="F:System.Windows.UIElement.CacheModeProperty">
<summary>标识 <see cref="P:System.Windows.UIElement.CacheMode"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.UIElement.CacheMode"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.UIElement.CaptureMouse">
<summary>将鼠标捕获设置为 <see cref="T:System.Windows.UIElement"/>。</summary>
<returns>如果对象具有鼠标捕获，则返回 true；否则返回 false。</returns>
    </member>
    <member name="P:System.Windows.UIElement.Clip">
<summary>获取或设置用于定义 <see cref="T:System.Windows.UIElement"/> 的内容边框的 <see cref="T:System.Windows.Media.Geometry"/>。</summary>
<returns>用于确定剪辑区域大小的几何图形。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.UIElement.ClipProperty">
<summary>标识 <see cref="P:System.Windows.UIElement.Clip"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.UIElement.Clip"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.UIElement.DesiredSize">
<summary>获取此 <see cref="T:System.Windows.UIElement"/> 在布局过程的测量处理过程中计算的大小。 </summary>
<returns>此 <see cref="T:System.Windows.UIElement"/> 在布局过程的测量处理过程中计算的大小。</returns>
    </member>
    <member name="E:System.Windows.UIElement.DoubleTap">
<summary>当在此 <see cref="T:System.Windows.UIElement"/> 上提交 DoubleTap 手势时发生。</summary>
    </member>
    <member name="F:System.Windows.UIElement.DoubleTapEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.DoubleTap"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.DoubleTap"/> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.UIElement.DragEnter">
<summary>在输入系统报告将此元素作为目标的基础拖动事件时发生。 </summary>
    </member>
    <member name="E:System.Windows.UIElement.DragLeave">
<summary>在输入系统报告将此元素作为来源的基础拖动事件时发生。 </summary>
    </member>
    <member name="E:System.Windows.UIElement.DragOver">
<summary>在输入系统报告将此元素作为潜在放置目标的基础拖动事件时发生。 </summary>
    </member>
    <member name="E:System.Windows.UIElement.Drop">
<summary>在输入系统报告将此元素作为放置目标的基础放置事件时发生。</summary>
    </member>
    <member name="P:System.Windows.UIElement.Effect">
<summary>获取或设置用于呈现此 <see cref="T:System.Windows.UIElement"/> 的像素着色器效果。</summary>
<returns>用于呈现此 <see cref="T:System.Windows.UIElement"/> 的像素着色器效果。默认值为 null（不应用任何效果）。</returns>
    </member>
    <member name="F:System.Windows.UIElement.EffectProperty">
<summary>标识 <see cref="P:System.Windows.UIElement.Effect"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.UIElement.Effect"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.UIElement.GotFocus">
<summary>当 <see cref="T:System.Windows.UIElement"/> 收到焦点时发生。</summary>
    </member>
    <member name="E:System.Windows.UIElement.Hold">
<summary>当在此 <see cref="T:System.Windows.UIElement"/> 上提交 Hold 手势时发生。</summary>
    </member>
    <member name="F:System.Windows.UIElement.HoldEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.Hold"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.Hold"/> 路由事件的标识符。</returns>
    </member>
    <member name="M:System.Windows.UIElement.InvalidateArrange">
<summary>使 <see cref="T:System.Windows.UIElement"/> 的排列状态（布局）无效。使其无效后，将会更新 <see cref="T:System.Windows.UIElement"/> 的布局（以异步方式进行）。 </summary>
    </member>
    <member name="M:System.Windows.UIElement.InvalidateMeasure">
<summary>使 <see cref="T:System.Windows.UIElement"/> 的测量状态（布局）无效。 </summary>
    </member>
    <member name="P:System.Windows.UIElement.IsHitTestVisible">
<summary>获取或设置此 <see cref="T:System.Windows.UIElement"/> 的包含区域是否可为命中测试返回 true 值。 </summary>
<returns>如果此 <see cref="T:System.Windows.UIElement"/> 的包含区域可用于命中测试，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.UIElement.IsHitTestVisibleProperty">
<summary>标识 <see cref="P:System.Windows.UIElement.IsHitTestVisible"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.UIElement.IsHitTestVisible"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.UIElement.KeyDown">
<summary>在 <see cref="T:System.Windows.UIElement"/> 具有焦点的情况下按下键盘上的某个键时发生。</summary>
    </member>
    <member name="F:System.Windows.UIElement.KeyDownEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.KeyDown"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.KeyDown"/> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.UIElement.KeyUp">
<summary>在 <see cref="T:System.Windows.UIElement"/> 具有焦点的情况下松开键盘上的某个键时发生。</summary>
    </member>
    <member name="F:System.Windows.UIElement.KeyUpEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.KeyUp"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.KeyUp"/> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.UIElement.LostFocus">
<summary>当 <see cref="T:System.Windows.UIElement"/> 失去焦点时发生。</summary>
    </member>
    <member name="E:System.Windows.UIElement.LostMouseCapture">
<summary>在 <see cref="T:System.Windows.UIElement"/> 失去鼠标捕获时发生。</summary>
    </member>
    <member name="E:System.Windows.UIElement.ManipulationCompleted">
<summary>对于 <see cref="T:System.Windows.UIElement"/> 的操作和延时完毕时发生。</summary>
    </member>
    <member name="F:System.Windows.UIElement.ManipulationCompletedEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.ManipulationCompleted"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.ManipulationCompleted"/> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.UIElement.ManipulationDelta">
<summary>当输入设备在操作期间更改位置时发生。</summary>
    </member>
    <member name="F:System.Windows.UIElement.ManipulationDeltaEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.ManipulationDelta"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.ManipulationDelta"/> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.UIElement.ManipulationStarted">
<summary>当输入设备对 <see cref="T:System.Windows.UIElement"/> 开始操作时发生。</summary>
    </member>
    <member name="F:System.Windows.UIElement.ManipulationStartedEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.ManipulationStarted"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.ManipulationStarted"/> 路由事件的标识符。</returns>
    </member>
    <member name="M:System.Windows.UIElement.Measure(System.Windows.Size)">
<summary>更新 <see cref="T:System.Windows.UIElement"/> 的 <see cref="P:System.Windows.UIElement.DesiredSize"/>。一般地，实现其布局子级的自定义布局的对象从自己的 <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)"/> 实现调用此方法以形成递归布局更新。</summary>
<param name="availableSize">父对象可以为子对象分配的可用空间。子对象可以请求大于可用空间的空间；如果该特定容器中允许滚动或其他调整大小行为，则提供的大小可以适应此空间。</param>
      <exception cref="T:System.InvalidOperationException">
<paramref name="availableSize"/> 包含 <see cref="F:System.Double.NaN"/> 值。请参阅“备注”。</exception>
    </member>
    <member name="E:System.Windows.UIElement.MouseEnter">
<summary>当鼠标（或触笔）进入 <see cref="T:System.Windows.UIElement"/> 的边界区域时发生。</summary>
    </member>
    <member name="E:System.Windows.UIElement.MouseLeave">
<summary>当鼠标（或触笔）离开 <see cref="T:System.Windows.UIElement"/> 的边界区域时发生。</summary>
    </member>
    <member name="E:System.Windows.UIElement.MouseLeftButtonDown">
<summary>当按下鼠标左键（或触笔的笔尖接触 Tablet）并且鼠标指针悬停在 <see cref="T:System.Windows.UIElement"/> 上时发生。</summary>
    </member>
    <member name="F:System.Windows.UIElement.MouseLeftButtonDownEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.UIElement.MouseLeftButtonUp">
<summary>当鼠标（或触笔）悬停在 <see cref="T:System.Windows.UIElement"/> 上（或 <see cref="T:System.Windows.UIElement"/> 具有鼠标捕获）并且用户松开鼠标左键（或从 Tablet 上移开触笔的笔尖）时发生。</summary>
    </member>
    <member name="F:System.Windows.UIElement.MouseLeftButtonUpEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.UIElement.MouseMove">
<summary>当鼠标（或触笔）的坐标位置更改并且悬停在 <see cref="T:System.Windows.UIElement"/> 上（或 <see cref="T:System.Windows.UIElement"/> 具有鼠标捕获）时发生。</summary>
    </member>
    <member name="E:System.Windows.UIElement.MouseRightButtonDown">
<summary>当鼠标指针位于 <see cref="T:System.Windows.UIElement"/> 上并按下鼠标右键时发生。</summary>
    </member>
    <member name="F:System.Windows.UIElement.MouseRightButtonDownEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.MouseRightButtonDown"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.MouseRightButtonDown"/> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.UIElement.MouseRightButtonUp">
<summary>当鼠标指针位于 <see cref="T:System.Windows.UIElement"/> 上并松开鼠标右键时发生。但是，只有在调用方将前面的 <see cref="E:System.Windows.UIElement.MouseRightButtonDown"/> 事件标记为“已处理”时才引发此事件；请参阅“备注”。</summary>
    </member>
    <member name="F:System.Windows.UIElement.MouseRightButtonUpEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.MouseRightButtonUp"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.MouseRightButtonUp"/> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.UIElement.MouseWheel">
<summary>在以下情况下发生：当鼠标指针悬停在 <see cref="T:System.Windows.UIElement"/> 上时或 <see cref="T:System.Windows.UIElement"/> 具有焦点时，用户滚动鼠标滚轮。</summary>
    </member>
    <member name="F:System.Windows.UIElement.MouseWheelEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.MouseWheel"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.MouseWheel"/> 路由事件的标识符。</returns>
    </member>
    <member name="M:System.Windows.UIElement.OnCreateAutomationPeer">
<summary>在派生类中实现时，为 Silverlight 自动化基础结构返回类特定的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> 实现。</summary>
<returns>要返回的类特定的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> 子类。</returns>
    </member>
    <member name="P:System.Windows.UIElement.Opacity">
<summary>获取或设置对象的不透明度。</summary>
<returns>声明不透明度因子的值，范围为 0 到 1.0，其中 1.0 表示完全不透明，0 表示透明。默认值为 1.0。</returns>
    </member>
    <member name="P:System.Windows.UIElement.OpacityMask">
<summary>获取或设置用于改变此对象区域的不透明度的画笔。</summary>
<returns>描述应用于此对象的不透明度的画笔。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.UIElement.OpacityMaskProperty">
<summary>标识 <see cref="P:System.Windows.UIElement.IsHitTestVisible"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.UIElement.Clip"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.UIElement.OpacityProperty">
<summary>标识 <see cref="P:System.Windows.UIElement.IsHitTestVisible"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.UIElement.IsHitTestVisible"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.UIElement.Projection">
<summary>获取或设置在呈现此 <see cref="T:System.Windows.UIElement"/> 时要应用的透视投影（三维效果）。</summary>
<returns>呈现此 <see cref="T:System.Windows.UIElement"/> 时要应用的透视投影。默认值为 null（不应用透视）。</returns>
    </member>
    <member name="F:System.Windows.UIElement.ProjectionProperty">
<summary>标识 <see cref="P:System.Windows.UIElement.Projection"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.UIElement.Projection"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.UIElement.ReleaseMouseCapture">
<summary>从 <see cref="T:System.Windows.UIElement"/> 中移除鼠标捕获。在此调用后，一般没有对象具有鼠标捕获。</summary>
    </member>
    <member name="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
<summary>从该 <see cref="T:System.Windows.UIElement"/> 中移除指定的路由事件处理程序。 </summary>
<param name="routedEvent">附加了处理程序的路由事件的标识符。</param>
<param name="handler">要从该 <see cref="T:System.Windows.UIElement"/> 上的事件处理程序集合中移除的特定处理程序实现。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="routedEvent"/> 或 <paramref name=" handler"/> 为 null<paramref name="."/></exception>
      <exception cref="T:System.ArgumentException">
<paramref name="routedEvent"/> 不表示支持的路由事件。-或- <paramref name="handler"/> 不实现支持的委托。</exception>
<exception cref="T:System.NotImplementedException">试图为当前平台的变体不支持的事件移除处理程序。</exception>
    </member>
    <member name="P:System.Windows.UIElement.RenderSize">
<summary>获取 <see cref="T:System.Windows.UIElement"/> 的最终呈现大小。</summary>
<returns>此对象的呈现大小。没有默认值。</returns>
    </member>
    <member name="P:System.Windows.UIElement.RenderTransform">
<summary>获取或设置影响 <see cref="T:System.Windows.UIElement"/> 的呈现位置的变换信息。</summary>
<returns>介绍所需呈现变换的细节。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.UIElement.RenderTransformOrigin">
<summary>获取或设置由 <see cref="P:System.Windows.UIElement.RenderTransform"/> 声明的任何可能呈现变换的原点，相对于 <see cref="T:System.Windows.UIElement"/> 的边界。</summary>
<returns>呈现变换的原点。默认值是值为 0,0 的点。</returns>
    </member>
    <member name="F:System.Windows.UIElement.RenderTransformOriginProperty">
<summary>标识 <see cref="P:System.Windows.UIElement.RenderTransformOrigin"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.UIElement.RenderTransformOrigin"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.UIElement.RenderTransformProperty">
<summary>标识 <see cref="P:System.Windows.UIElement.RenderTransform"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.UIElement.RenderTransform"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.UIElement.Tap">
<summary>当在此 <see cref="T:System.Windows.UIElement"/> 上提交 Tap 手势时发生。</summary>
    </member>
    <member name="F:System.Windows.UIElement.TapEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.Tap"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.Tap"/> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.UIElement.TextInput">
<summary>在 UI 元素以与设备无关的方式获取文本时发生。 </summary>
    </member>
    <member name="F:System.Windows.UIElement.TextInputEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.TextInput"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.TextInput"/> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.UIElement.TextInputStart">
<summary>在 UI 元素以与设备无关的方式最初获取文本时发生。 </summary>
    </member>
    <member name="F:System.Windows.UIElement.TextInputStartEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.TextInputStart"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.TextInputStart"/> 路由事件的标识符。</returns>
    </member>
    <member name="E:System.Windows.UIElement.TextInputUpdate">
<summary>当通过输入方法编辑器 (IME) 继续编写文本时发生。</summary>
    </member>
    <member name="F:System.Windows.UIElement.TextInputUpdateEvent">
<summary>标识 <see cref="E:System.Windows.UIElement.TextInputUpdate"/> 路由事件。</summary>
<returns><see cref="E:System.Windows.UIElement.TextInputUpdate"/> 路由事件的标识符。</returns>
    </member>
    <member name="M:System.Windows.UIElement.TransformToVisual(System.Windows.UIElement)">
<summary>返回一个变换对象，该变换对象可用于将 <see cref="T:System.Windows.UIElement"/> 中的坐标变换为指定的对象。</summary>
<returns>作为对象的变换信息。对此对象调用 <see cref="M:System.Windows.Media.GeneralTransform.Transform(System.Windows.Point)"/> 以获取实际变换。</returns>
<param name="visual">要与当前对象进行比较以获得变换的对象。</param>
    </member>
    <member name="M:System.Windows.UIElement.UpdateLayout">
<summary>请确保 <see cref="T:System.Windows.UIElement"/> 的所有子对象位置都正确地进行了布局更新。 </summary>
    </member>
    <member name="P:System.Windows.UIElement.UseLayoutRounding">
<summary>获取或设置一个值，该值确定对象及其可视化子树的呈现是否应使用将呈现与整像素对齐的舍入行为。</summary>
<returns>如果呈现和布局应使用布局舍入到整像素，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.UIElement.UseLayoutRoundingProperty">
<summary>标识 <see cref="P:System.Windows.UIElement.UseLayoutRounding"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.UIElement.UseLayoutRounding"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.UIElement.Visibility">
<summary>获取或设置 <see cref="T:System.Windows.UIElement"/> 的可见性。不可见的 <see cref="T:System.Windows.UIElement"/> 不呈现，也不将其所需大小告知布局。</summary>
<returns>枚举的一个值。默认值为 <see cref="F:System.Windows.Visibility.Visible"/>。</returns>
    </member>
    <member name="F:System.Windows.UIElement.VisibilityProperty">
<summary>标识 <see cref="P:System.Windows.UIElement.Visibility"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.UIElement.Visibility"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.VerticalAlignment">
<summary>描述如何在父级布局槽内垂直地定位或拉伸子元素。 </summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Top">
<summary>元素与父级布局槽的顶端对齐。</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Center">
<summary>元素与父级布局槽的中心对齐。</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Bottom">
<summary>元素与父级布局槽的底端对齐。 </summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Stretch">
<summary>元素被拉伸以填充整个父元素的布局槽。</summary>
    </member>
    <member name="T:System.Windows.Visibility">
<summary>指定元素的显示状态。 </summary>
    </member>
    <member name="F:System.Windows.Visibility.Visible">
<summary>显示元素。</summary>
    </member>
    <member name="F:System.Windows.Visibility.Collapsed">
<summary>不显示元素，且不为其保留布局空间。</summary>
    </member>
    <member name="T:System.Windows.VisualState">
<summary>表示特定状态下控件的可视外观。</summary>
    </member>
    <member name="M:System.Windows.VisualState.#ctor">
<summary>初始化 <see cref="T:System.Windows.VisualState"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.VisualState.Name">
<summary>获取 <see cref="T:System.Windows.VisualState"/> 的名称。</summary>
<returns><see cref="T:System.Windows.VisualState"/> 的名称。</returns>
    </member>
    <member name="P:System.Windows.VisualState.Storyboard">
<summary>获取或设置一个 <see cref="T:System.Windows.Media.Animation.Storyboard"/>，它定义在控件处于 <see cref="T:System.Windows.VisualState"/> 所表示的状态时的外观。 </summary>
<returns>一个 Storyboard，它定义在控件处于 <see cref="T:System.Windows.VisualState"/> 所表示的状态时的外观。</returns>
    </member>
    <member name="T:System.Windows.VisualStateChangedEventArgs">
<summary>提供有关 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging"/> 和 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanged"/> 事件的数据。 </summary>
    </member>
    <member name="M:System.Windows.VisualStateChangedEventArgs.#ctor">
<summary>初始化 <see cref="T:System.Windows.VisualStateChangedEventArgs"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.Control">
<summary>获取是过渡状态的 <see cref="T:System.Windows.Controls.Control"/>。</summary>
<returns>是过渡状态的 <see cref="T:System.Windows.Controls.Control"/>。</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.NewState">
<summary>获取 <see cref="T:System.Windows.Controls.Control"/> 正在过渡到或已过渡到的状态。</summary>
<returns><see cref="T:System.Windows.Controls.Control"/> 正在过渡到或已过渡到的状态。</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.OldState">
<summary>获取 <see cref="T:System.Windows.Controls.Control"/> 正在从其过渡或已从其过渡的状态。</summary>
<returns><see cref="T:System.Windows.Controls.Control"/> 正在从其过渡或已从其过渡的状态。</returns>
    </member>
    <member name="T:System.Windows.VisualStateGroup">
<summary>包含互斥的 <see cref="T:System.Windows.VisualState"/> 对象和用于从一种状态过渡到另一种状态的 <see cref="T:System.Windows.VisualTransition"/> 对象。</summary>
    </member>
    <member name="M:System.Windows.VisualStateGroup.#ctor">
<summary>初始化 <see cref="T:System.Windows.VisualStateGroup"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.VisualStateGroup.CurrentState">
<summary>获取通过成功调用 <see cref="M:System.Windows.VisualStateManager.GoToState(System.Windows.Controls.Control,System.String,System.Boolean)"/> 方法而在最近设置的 <see cref="T:System.Windows.VisualState"/>。</summary>
<returns>通过成功调用 <see cref="M:System.Windows.VisualStateManager.GoToState(System.Windows.Controls.Control,System.String,System.Boolean)"/> 方法而在最近设置的 <see cref="T:System.Windows.VisualState"/>。</returns>
    </member>
    <member name="E:System.Windows.VisualStateGroup.CurrentStateChanged">
<summary>在控件过渡到不同状态后发生。</summary>
    </member>
    <member name="E:System.Windows.VisualStateGroup.CurrentStateChanging">
<summary>在控件开始过渡到不同状态时发生。</summary>
    </member>
    <member name="P:System.Windows.VisualStateGroup.Name">
<summary>获取 <see cref="T:System.Windows.VisualStateGroup"/> 的名称。</summary>
<returns><see cref="T:System.Windows.VisualStateGroup"/> 的名称。</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.States">
<summary>获取互斥 <see cref="T:System.Windows.VisualState"/> 对象的集合。</summary>
<returns>互斥 <see cref="T:System.Windows.VisualState"/> 对象的集合。</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.Transitions">
<summary>获取 <see cref="T:System.Windows.VisualTransition"/> 对象的集合。</summary>
<returns><see cref="T:System.Windows.VisualTransition"/> 对象的集合。</returns>
    </member>
    <member name="T:System.Windows.VisualStateManager">
<summary>管理控件的状态以及用于状态过渡的逻辑。</summary>
    </member>
    <member name="M:System.Windows.VisualStateManager.#ctor">
<summary>初始化 <see cref="T:System.Windows.VisualStateManager"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.VisualStateManager.CustomVisualStateManager">
<summary>获取或设置在控件的状态间过渡的 <see cref="T:System.Windows.VisualStateManager"/>。 </summary>
<returns>在控件的状态间过渡的 <see cref="T:System.Windows.VisualStateManager"/>。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty">
<summary>标识 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)">
<summary>获取 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager"/> 附加属性的值。</summary>
<returns>在控件的状态间过渡的 <see cref="T:System.Windows.VisualStateManager"/>。 </returns>
<param name="obj">要从其中获取 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager"/> 的元素。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="obj"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)">
<summary>获取 VisualStateManager.VisualStateGroups 附加属性的值。</summary>
<returns>与指定对象关联的 <see cref="T:System.Windows.VisualStateGroup"/> 对象的集合。</returns>
<param name="obj">要从其中获取 VisualStateManager.VisualStateGroups 的元素。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="obj"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToState(System.Windows.Controls.Control,System.String,System.Boolean)">
<summary>使控件在两个状态间过渡。</summary>
<returns>如果控件已成功过渡到新状态，则为 true；否则为 false。</returns>
<param name="control">要进行状态过渡的控件。 </param>
<param name="stateName">要过渡到的状态。</param>
<param name="useTransitions">如果使用 <see cref="T:System.Windows.VisualTransition"/> 在状态之间过渡，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="control"/> 为 null。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="stateName"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
<summary>使控件在状态间过渡。</summary>
<returns>如果控件已成功过渡到新状态，则为 true；否则为 false。</returns>
<param name="control">要进行状态过渡的控件。 </param>
<param name="templateRoot">控件的 <see cref="T:System.Windows.Controls.ControlTemplate"/> 的根元素。</param>
<param name="stateName">要过渡到的状态的名称。</param>
<param name="group">状态所属的 <see cref="T:System.Windows.VisualStateGroup"/>。</param>
<param name="state">要过渡到的状态的表示。</param>
<param name="useTransitions">如果使用 <see cref="T:System.Windows.VisualTransition"/> 在状态之间过渡，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.Controls.Control)">
<summary>对指定的 <see cref="T:System.Windows.VisualStateGroup"/> 引发 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanged"/> 事件。</summary>
<param name="stateGroup"><see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging"/> 事件上的对象</param>
<param name="oldState">控件已从中过渡的状态。</param>
<param name="newState">控件已过渡到的状态。</param>
<param name="control">已进行状态过渡的控件。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="stateGroup"/> 为 null。-或-<paramref name="newState"/> 为 null。-或-<paramref name="control"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.Controls.Control)">
<summary>对指定的 <see cref="T:System.Windows.VisualStateGroup"/> 引发 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging"/> 事件。</summary>
<param name="stateGroup"><see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging"/> 事件上的对象</param>
<param name="oldState">控件要从中过渡的状态。</param>
<param name="newState">控件要过渡到的状态。</param>
<param name="control">正在进行状态过渡的控件。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="stateGroup"/> 为 null。-或-<paramref name="newState"/> 为 null。-或-<paramref name="control"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)">
<summary>设置 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager"/> 附加属性的值。</summary>
<param name="obj">要对其设置属性的对象。</param>
<param name="value">在控件的状态间过渡的 <see cref="T:System.Windows.VisualStateManager"/>。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="obj"/> 为 null。</exception>
    </member>
    <member name="T:System.Windows.VisualTransition">
<summary>表示当控件从一个状态过渡到另一个状态时发生的可视行为。</summary>
    </member>
    <member name="M:System.Windows.VisualTransition.#ctor">
<summary>初始化 <see cref="T:System.Windows.VisualTransition"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.VisualTransition.From">
<summary>获取或设置要从其过渡的 <see cref="T:System.Windows.VisualState"/> 的名称。</summary>
<returns>要从其过渡的 <see cref="T:System.Windows.VisualState"/> 的名称。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.GeneratedDuration">
<summary>获取或设置从一个状态变动到另一个状态所需的时间。</summary>
<returns>从一个状态变动到另一个状态所需的时间。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.GeneratedEasingFunction">
<summary>获取或设置应用于生成的动画的缓动函数。</summary>
<returns>应用于已生成的动画的 <see cref="T:System.Windows.Media.Animation.IEasingFunction"/>。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.Storyboard">
<summary>获取或设置进行过渡时发生的 <see cref="T:System.Windows.Media.Animation.Storyboard"/>。</summary>
<returns>进行过渡时发生的 <see cref="T:System.Windows.Media.Animation.Storyboard"/>。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.To">
<summary>获取或设置要过渡到的 <see cref="T:System.Windows.VisualState"/> 的名称。</summary>
<returns>要过渡到的 <see cref="T:System.Windows.VisualState"/> 的名称。</returns>
    </member>
    <member name="T:System.Windows.Window">
<summary>表示浏览器外应用程序窗口。</summary>
    </member>
    <member name="M:System.Windows.Window.#ctor">
<summary>初始化 <see cref="T:System.Windows.Window"/> 类的新实例。 </summary>
<exception cref="T:System.InvalidOperationException">此应用程序不在浏览器外部运行。</exception>
      <exception cref="T:System.UnauthorizedAccessException">
<see cref="P:System.Windows.Application.HasElevatedPermissions"/> 为 false。</exception>
    </member>
    <member name="M:System.Windows.Window.Activate">
<summary>通过将应用程序窗口置于前台并使其具有输入焦点来尝试激活应用程序窗口。 </summary>
<returns>如果成功激活了窗口，则为 true；否则为 false。</returns>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。 </exception>
<exception cref="T:System.UnauthorizedAccessException">当前线程不为用户界面 (UI) 线程。</exception>
    </member>
    <member name="M:System.Windows.Window.Close">
<summary>除非取消 <see cref="E:System.Windows.Window.Closing"/> 事件，否则关闭应用程序窗口。 </summary>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。 </exception>
<exception cref="T:System.Security.SecurityException">调用此方法时（响应用户启动的操作除外），<see cref="E:System.Windows.Application.Startup"/> 事件已发生，并且 <see cref="P:System.Windows.Application.HasElevatedPermissions"/> 为 false。</exception>
    </member>
    <member name="E:System.Windows.Window.Closing">
<summary>在窗口即将关闭时发生。</summary>
<exception cref="T:System.NotSupportedException">添加或移除事件处理程序时，应用程序不会在浏览器外运行。 </exception>
    </member>
    <member name="P:System.Windows.Window.Content">
<summary>获取或设置标识窗口内容的根可视元素。</summary>
<returns>表示窗口内容的元素。</returns>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。</exception>
<exception cref="T:System.UnauthorizedAccessException">当前线程不为用户界面 (UI) 线程。</exception>
    </member>
    <member name="M:System.Windows.Window.DragMove">
<summary>在受信任的应用程序中，开始鼠标拖动操作以移动窗口。 </summary>
<exception cref="T:System.UnauthorizedAccessException">当前线程不为用户界面 (UI) 线程。</exception>
      <exception cref="T:System.Security.SecurityException">
<see cref="P:System.Windows.Application.HasElevatedPermissions"/> 为 false。</exception>
    </member>
    <member name="M:System.Windows.Window.DragResize(System.Windows.WindowResizeEdge)">
<summary>在受信任的应用程序中，开始鼠标拖动操作以移动指定的窗口边缘或角。</summary>
<param name="resizeEdge">用户要拖动的边缘或角。</param>
<exception cref="T:System.UnauthorizedAccessException">当前线程不为用户界面 (UI) 线程。</exception>
      <exception cref="T:System.Security.SecurityException">
<see cref="P:System.Windows.Application.HasElevatedPermissions"/> 为 false。</exception>
    </member>
    <member name="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)">
<summary>获取包含指定 <see cref="T:System.Windows.DependencyObject"/> 的窗口。</summary>
<returns>要获取的 <see cref="T:System.Windows.Window"/>。</returns>
<param name="dependencyObject">要获取的 <see cref="T:System.Windows.Window"/> 所包含的对象。</param>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。</exception>
      <exception cref="T:System.InvalidOperationException">
<paramref name="dependencyObject"/> 不是有效的 <see cref="T:System.Windows.DependencyObject"/>。</exception>
    </member>
    <member name="P:System.Windows.Window.Height">
<summary>获取或设置应用程序窗口的高度（以像素为单位）。 </summary>
<returns>应用程序窗口的高度（以像素为单位）。默认值是应用程序清单中的 <see cref="P:System.Windows.WindowSettings.Height"/> 设置。</returns>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。 </exception>
<exception cref="T:System.UnauthorizedAccessException">当前线程不为用户界面 (UI) 线程。</exception>
<exception cref="T:System.Security.SecurityException">设置此属性时（响应用户启动的操作除外），<see cref="E:System.Windows.Application.Startup"/> 事件已发生，并且 <see cref="P:System.Windows.Application.HasElevatedPermissions"/> 为 false。</exception>
<exception cref="T:System.ArgumentOutOfRangeException">设置此属性时，指定的值大于可用的屏幕高度。</exception>
    </member>
    <member name="P:System.Windows.Window.IsActive">
<summary>获取一个值，该值指示窗口是否为活动窗口。</summary>
<returns>如果窗口为活动窗口，则为 true；否则为 true。</returns>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。 </exception>
<exception cref="T:System.UnauthorizedAccessException">当前线程不为用户界面 (UI) 线程。</exception>
    </member>
    <member name="P:System.Windows.Window.IsVisible">
<summary>获取一个值，该值指示窗口当前是否在用户界面中可见。</summary>
<returns>指示窗口当前是否可见的值。</returns>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。</exception>
    </member>
    <member name="P:System.Windows.Window.Left">
<summary>获取或设置应用程序窗口左边缘的位置；有关在运行时设置此属性的限制，请参阅“备注”。</summary>
<returns>应用程序窗口左边缘的位置。默认值是应用程序清单中的 <see cref="P:System.Windows.WindowSettings.Left"/> 设置。</returns>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。 </exception>
<exception cref="T:System.UnauthorizedAccessException">当前线程不为用户界面 (UI) 线程。</exception>
    </member>
    <member name="P:System.Windows.Window.Title">
<summary>获取或设置窗口标题栏文本。 </summary>
<returns>标题栏文本。</returns>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。</exception>
    </member>
    <member name="P:System.Windows.Window.Top">
<summary>获取或设置应用程序窗口上边缘的位置；有关在运行时设置此属性的限制，请参阅“备注”。</summary>
<returns>应用程序窗口上边缘的位置。默认值是应用程序清单中的 <see cref="P:System.Windows.WindowSettings.Top"/> 设置。</returns>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。 </exception>
<exception cref="T:System.UnauthorizedAccessException">当前线程不为用户界面 (UI) 线程。</exception>
    </member>
    <member name="P:System.Windows.Window.TopMost">
<summary>获取或设置一个值，该值指示应用程序窗口是否始终在其他窗口前面显示。</summary>
<returns>如果应用程序窗口为最顶层，则为 true；否则为 true。默认值为 false。</returns>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。 </exception>
<exception cref="T:System.UnauthorizedAccessException">当前线程不为用户界面 (UI) 线程。</exception>
<exception cref="T:System.Security.SecurityException">设置此属性时（响应用户启动的操作除外），<see cref="E:System.Windows.Application.Startup"/> 事件已发生，并且 <see cref="P:System.Windows.Application.HasElevatedPermissions"/> 为 false。</exception>
    </member>
    <member name="P:System.Windows.Window.Visibility">
<summary>获取或设置一个值，该值指示窗口当前是可见还是已折叠。</summary>
<returns>指示窗口当前是可见还是已折叠的值。</returns>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。</exception>
<exception cref="T:System.ArgumentException">设置该属性时，指定的值不是有效的 <see cref="T:System.Windows.Visibility"/> 值。</exception>
    </member>
    <member name="P:System.Windows.Window.Width">
<summary>获取或设置应用程序窗口的宽度（以像素为单位）。 </summary>
<returns>应用程序窗口的宽度（以像素为单位）。默认值是应用程序清单中的 <see cref="P:System.Windows.WindowSettings.Width"/> 设置。</returns>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。 </exception>
<exception cref="T:System.UnauthorizedAccessException">当前线程不为用户界面 (UI) 线程。</exception>
<exception cref="T:System.Security.SecurityException">设置此属性时（响应用户启动的操作除外），<see cref="E:System.Windows.Application.Startup"/> 事件已发生，并且 <see cref="P:System.Windows.Application.HasElevatedPermissions"/> 为 false。</exception>
<exception cref="T:System.ArgumentOutOfRangeException">设置此属性时，指定的值大于可用的屏幕宽度。</exception>
    </member>
    <member name="P:System.Windows.Window.WindowState">
<summary>获取或设置一个值，该值指示窗口是处于最大化、最小化还是正常状态。</summary>
<returns>一个指示窗口当前状态的值。默认值为 <see cref="F:System.Windows.WindowState.Normal"/>。</returns>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。 </exception>
<exception cref="T:System.UnauthorizedAccessException">当前线程不为用户界面 (UI) 线程。</exception>
<exception cref="T:System.Security.SecurityException">设置此属性时（响应用户启动的操作除外），<see cref="E:System.Windows.Application.Startup"/> 事件已发生，并且 <see cref="P:System.Windows.Application.HasElevatedPermissions"/> 为 false。</exception>
    </member>
    <member name="P:System.Windows.Window.WindowStyle">
<summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Window"/> 的标题栏和边框的外观。</summary>
<returns>获取一个值，该值指示标题栏和边框应如何显示。默认值为 <see cref="F:System.Windows.WindowStyle.SingleBorderWindow"/>。</returns>
<exception cref="T:System.NotSupportedException">此应用程序不在浏览器外部运行。</exception>
      <exception cref="T:System.Security.SecurityException">
<see cref="P:System.Windows.Application.HasElevatedPermissions"/> 为 false。</exception>
<exception cref="T:System.ArgumentException">设置该属性时，指定的值不是有效的 <see cref="T:System.Windows.WindowStyle"/> 值。</exception>
    </member>
    <member name="T:System.Windows.WindowCollection">
<summary>表示 <see cref="T:System.Windows.Window"/> 实例的集合。</summary>
    </member>
    <member name="P:System.Windows.WindowCollection.Count">
<summary>获取集合中的窗口数。</summary>
<returns>集合中的窗口数。</returns>
    </member>
    <member name="M:System.Windows.WindowCollection.GetEnumerator">
<summary>返回一个循环访问集合的枚举器。</summary>
<returns>集合的枚举器。</returns>
    </member>
    <member name="P:System.Windows.WindowCollection.IsSynchronized">
<summary>获取一个值，指示对集合的访问是否同步（线程安全）。</summary>
<returns>始终返回 false。</returns>
    </member>
    <member name="P:System.Windows.WindowCollection.SyncRoot">
<summary>获取一个对象，该对象可以用于同步对 <see cref="T:System.Windows.WindowCollection"/> 的访问。</summary>
<returns>可用于同步对 <see cref="T:System.Windows.WindowCollection"/> 的访问的对象。</returns>
    </member>
    <member name="M:System.Windows.WindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
<summary>从特定的 <see cref="T:System.Array"/> 索引处开始，将 <see cref="T:System.Collections.ICollection"/> 的元素复制到一个 <see cref="T:System.Array"/> 中。</summary>
<param name="array">作为从 <see cref="T:System.Windows.WindowCollection"/> 复制的元素的目标位置的一维 <see cref="T:System.Array"/>。该数组的索引必须从零开始。</param>
<param name="index"><paramref name="array"/> 中从零开始的索引，将在此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="array"/> 为 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
<paramref name="index"/> 小于 0。</exception>
<exception cref="T:System.ArgumentException">源 <see cref="T:System.Windows.WindowCollection"/> 中的元素数目大于从 <paramref name="index"/> 到目标 <paramref name="array"/> 末尾之间的可用空间。</exception>
    </member>
    <member name="T:System.Windows.WindowResizeEdge">
<summary>定义表示 Silverlight 浏览器外应用程序窗口的边缘和角的常数。</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.Left">
<summary>窗口的左边缘。</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.Right">
<summary>窗口的右边缘。</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.Top">
<summary>窗口的上边缘。</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.TopLeft">
<summary>窗口的左上角。</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.TopRight">
<summary>窗口的右上角。</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.Bottom">
<summary>窗口的下边缘。</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.BottomLeft">
<summary>窗口的左下角。</summary>
    </member>
    <member name="F:System.Windows.WindowResizeEdge.BottomRight">
<summary>窗口的右下角。</summary>
    </member>
    <member name="T:System.Windows.WindowSettings">
<summary>表示有关浏览器外应用程序窗口的信息。</summary>
    </member>
    <member name="M:System.Windows.WindowSettings.#ctor">
<summary>初始化 <see cref="T:System.Windows.WindowSettings"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.WindowSettings.Height">
<summary>获取应用程序的初始窗口高度。</summary>
<returns>应用程序的初始窗口高度。</returns>
    </member>
    <member name="F:System.Windows.WindowSettings.HeightProperty">
<summary>标识 <see cref="P:System.Windows.WindowSettings.Height"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.WindowSettings.Height"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.WindowSettings.Left">
<summary>当 <see cref="P:System.Windows.WindowSettings.WindowStartupLocation"/> 为 <see cref="F:System.Windows.WindowStartupLocation.Manual"/> 时，获取浏览器外应用程序窗口左边缘的初始位置。</summary>
<returns>应用程序窗口左边缘的初始位置。</returns>
    </member>
    <member name="F:System.Windows.WindowSettings.LeftProperty">
<summary>标识 <see cref="P:System.Windows.WindowSettings.Left"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.WindowSettings.Left"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.WindowSettings.Title">
<summary>获取要显示在应用程序窗口的标题栏中的浏览器外应用程序的完整标题。</summary>
<returns>应用程序的完整标题。</returns>
    </member>
    <member name="F:System.Windows.WindowSettings.TitleProperty">
<summary>标识 <see cref="P:System.Windows.WindowSettings.Title"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.WindowSettings.Title"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.WindowSettings.Top">
<summary>当 <see cref="P:System.Windows.WindowSettings.WindowStartupLocation"/> 为 <see cref="F:System.Windows.WindowStartupLocation.Manual"/> 时，获取浏览器外应用程序窗口上边缘的初始位置。</summary>
<returns>应用程序窗口上边缘的初始位置。</returns>
    </member>
    <member name="F:System.Windows.WindowSettings.TopProperty">
<summary>标识 <see cref="P:System.Windows.WindowSettings.Top"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.WindowSettings.Top"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.WindowSettings.Width">
<summary>获取应用程序的初始窗口宽度。</summary>
<returns>应用程序的初始窗口宽度。</returns>
    </member>
    <member name="F:System.Windows.WindowSettings.WidthProperty">
<summary>标识 <see cref="P:System.Windows.WindowSettings.Width"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.WindowSettings.Width"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.WindowSettings.WindowStartupLocation">
<summary>获取一个值，该值指示浏览器外应用程序窗口在启动时如何定位。 </summary>
<returns>一个指示应用程序窗口在启动时如何定位的值。</returns>
    </member>
    <member name="F:System.Windows.WindowSettings.WindowStartupLocationProperty">
<summary>标识 <see cref="P:System.Windows.WindowSettings.WindowStartupLocation"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.WindowSettings.WindowStartupLocation"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.WindowSettings.WindowStyle">
<summary>获取一个值，该值指示浏览器外应用程序窗口的标题栏和边框的外观。</summary>
<returns>获取一个值，该值指示标题栏和边框应如何显示。 </returns>
    </member>
    <member name="F:System.Windows.WindowSettings.WindowStyleProperty">
<summary>标识 <see cref="P:System.Windows.WindowSettings.WindowStyle"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.WindowSettings.WindowStyle"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.WindowStartupLocation">
<summary>定义指示浏览器外应用程序窗口在启动时如何定位的常数。</summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.CenterScreen">
<summary>应用程序窗口在屏幕上居中，忽略 <see cref="P:System.Windows.WindowSettings.Top"/> 和 <see cref="P:System.Windows.WindowSettings.Left"/> 设置。 </summary>
    </member>
    <member name="F:System.Windows.WindowStartupLocation.Manual">
<summary>应用程序窗口的位置根据 <see cref="P:System.Windows.WindowSettings.Top"/> 和 <see cref="P:System.Windows.WindowSettings.Left"/> 设置确定。</summary>
    </member>
    <member name="T:System.Windows.WindowState">
<summary>定义指示浏览器外应用程序窗口的状态的常数。</summary>
    </member>
    <member name="F:System.Windows.WindowState.Normal">
<summary>应用程序窗口处于正常状态，它所占据的屏幕空间大小取决于其 <see cref="P:System.Windows.Window.Height"/> 和 <see cref="P:System.Windows.Window.Width"/> 值。</summary>
    </member>
    <member name="F:System.Windows.WindowState.Minimized">
<summary>应用程序窗口最小化到任务栏上。</summary>
    </member>
    <member name="F:System.Windows.WindowState.Maximized">
<summary>应用程序窗口最大化，占据了屏幕的整个工作区。</summary>
    </member>
    <member name="T:System.Windows.WindowStyle">
<summary>定义指示浏览器外应用程序窗口的标题栏和边框的外观的常数。</summary>
    </member>
    <member name="F:System.Windows.WindowStyle.SingleBorderWindow">
<summary>窗口显示标题栏和边框。 </summary>
    </member>
    <member name="F:System.Windows.WindowStyle.None">
<summary>窗口不显示标题栏或边框。 </summary>
    </member>
    <member name="F:System.Windows.WindowStyle.BorderlessRoundCornersWindow">
<summary>窗口不显示标题栏或边框，且窗口角变圆。</summary>
    </member>
    <member name="T:System.Windows.Automation.AutomationElementIdentifiers">
<summary>包含由 UI 自动化提供程序和 UI 自动化客户端用作自动化属性标识符的值。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.AcceleratorKeyProperty">
<summary>标识快捷键自动化属性。快捷键属性值由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.AccessKeyProperty">
<summary>标识访问键自动化属性。访问键属性值由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.AutomationIdProperty">
<summary>标识自动化元素标识符自动化属性。自动化元素标识符值由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.BoundingRectangleProperty">
<summary>标识边框自动化属性。边框属性值由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.ClassNameProperty">
<summary>标识类名自动化属性。类名属性值由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 方法返回。 </summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.ClickablePointProperty">
<summary>标识可单击点自动化属性。有效的可单击点属性值由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.ControlTypeProperty">
<summary>标识控件类型自动化属性。控件类型属性值由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 方法返回。 </summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.HasKeyboardFocusProperty">
<summary>标识键盘焦点自动化属性。键盘焦点状态由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.HelpTextProperty">
<summary>标识帮助文本自动化属性。帮助文本属性值由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsContentElementProperty">
<summary>标识内容元素确定自动化属性。内容元素状态指示元素是否包含对于最终用户有价值的内容。当前状态由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsControlElementProperty">
<summary>标识控件元素确定自动化属性。控件元素状态指示元素是否包含可操作的用户界面组件。当前状态由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsEnabledProperty">
<summary>标识启用的确定自动化属性。启用状态指示自动化同级引用的项是否已启用。当前状态由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsKeyboardFocusableProperty">
<summary>标识可通过键盘获得焦点的确定自动化属性。可通过键盘获得焦点的状态由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsOffscreenProperty">
<summary>标识屏幕外确定自动化属性。屏幕外状态指示自动化同级所引用的项是否在屏幕外。当前状态由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen"/> 方法返回。 </summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsPasswordProperty">
<summary>标识密码确定自动化属性。密码状态指示自动化同级所引用的项是否包含密码。当前状态由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsRequiredForFormProperty">
<summary>标识窗体要求确定自动化属性。窗体要求状态指示元素是否必须在窗体上完成。当前状态由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.ItemStatusProperty">
<summary>标识项状态自动化属性。当前项状态由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.ItemTypeProperty">
<summary>标识项类型自动化属性。项类型值由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.LabeledByProperty">
<summary>标识标记者同级自动化属性。当前标签同级由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.LocalizedControlTypeProperty">
<summary>标识本地化控件类型自动化属性。当前本地化控件类型由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlTypeCore"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.NameProperty">
<summary>标识元素名称自动化属性。当前名称由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.OrientationProperty">
<summary>标识方向自动化属性。当前方向值由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation"/> 方法返回。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.AutomationProperties">
<summary>提供对获取或设置自动化属性的实例级值的支持。这些属性值设置为附加属性（通常为 XAML 格式），并补充或重写控件的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> 的自动化属性值。 </summary>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.AcceleratorKey">
<summary>获取或设置元素的快捷键字符串。</summary>
<returns>元素的快捷键字符串。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.AcceleratorKeyProperty">
<summary>标识 <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey"/> 附加属性。</summary>
<returns><see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey"/> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.AccessKey">
<summary>获取或设置元素的访问键。</summary>
<returns>元素的访问键。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.AccessKeyProperty">
<summary>标识 <see cref="P:System.Windows.Automation.AutomationProperties.AccessKey"/> 附加属性。</summary>
<returns><see cref="P:System.Windows.Automation.AutomationProperties.AccessKey"/> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.AutomationId">
<summary>获取或设置向 UI 自动化唯一标识元素的字符串。</summary>
<returns>向 UI 自动化唯一标识元素的字符串。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.AutomationIdProperty">
<summary>标识 <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId"/> 附加属性。</summary>
<returns><see cref="P:System.Windows.Automation.AutomationProperties.AutomationId"/> 附加属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetAcceleratorKey(System.Windows.DependencyObject)">
<summary>获取指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey"/> 附加属性的值。</summary>
<returns>字符串形式的快捷键。</returns>
<param name="element">要检查的 <see cref="T:System.Windows.DependencyObject"/>。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetAccessKey(System.Windows.DependencyObject)">
<summary>获取指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.AccessKey"/> 附加属性的值。</summary>
<returns>字符串形式的访问键。</returns>
<param name="element">要检查的 <see cref="T:System.Windows.DependencyObject"/>。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetAutomationId(System.Windows.DependencyObject)">
<summary>获取指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId"/> 附加属性的值。</summary>
<returns>指定元素的 UI 自动化标识符。</returns>
<param name="element">要检查的 <see cref="T:System.Windows.DependencyObject"/>。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetHelpText(System.Windows.DependencyObject)">
<summary>获取指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.HelpText"/> 附加属性的值。</summary>
<returns>指定元素的帮助文本。</returns>
<param name="element">要检查的 <see cref="T:System.Windows.DependencyObject"/>。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetIsRequiredForForm(System.Windows.DependencyObject)">
<summary>获取指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm"/> 附加属性的值。</summary>
<returns>如果需要指定元素来填写窗体，则为 true；否则为 false。</returns>
<param name="element">要检查的 <see cref="T:System.Windows.DependencyObject"/>。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetItemStatus(System.Windows.DependencyObject)">
<summary>获取指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus"/> 附加属性的值。</summary>
<returns>元素的项状态。</returns>
<param name="element">要检查的 <see cref="T:System.Windows.DependencyObject"/>。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetItemType(System.Windows.DependencyObject)">
<summary>获取指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.ItemType"/> 附加属性的值。</summary>
<returns>元素的项类型。</returns>
<param name="element">要检查的 <see cref="T:System.Windows.DependencyObject"/>。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetLabeledBy(System.Windows.DependencyObject)">
<summary>获取指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy"/> 附加属性的值。</summary>
<returns>标签所针对的元素。 </returns>
<param name="element">要检查的 <see cref="T:System.Windows.DependencyObject"/>。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetName(System.Windows.DependencyObject)">
<summary>获取指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.Name"/> 附加属性的值。</summary>
<returns>指定元素的名称。</returns>
<param name="element">要检查的 <see cref="T:System.Windows.DependencyObject"/>。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.HelpText">
<summary>获取或设置元素的帮助文本。</summary>
<returns>指定元素的帮助文本。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.HelpTextProperty">
<summary>标识 <see cref="P:System.Windows.Automation.AutomationProperties.HelpText"/> 附加属性。</summary>
<returns><see cref="P:System.Windows.Automation.AutomationProperties.HelpText"/> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm">
<summary>获取或设置一个值，该值指示是否需要填充窗体上的元素。</summary>
<returns>如果需要填充窗体上的元素，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.IsRequiredForFormProperty">
<summary>标识 <see cref="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm"/> 附加属性。</summary>
<returns><see cref="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm"/> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.ItemStatus">
<summary>获取或设置元素中某一项的状态说明。</summary>
<returns>元素中某一项的状态。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.ItemStatusProperty">
<summary>标识 <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus"/> 附加属性。</summary>
<returns><see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus"/> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.ItemType">
<summary>获取或设置指定元素的类型说明。</summary>
<returns>指定元素的类型的说明。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.ItemTypeProperty">
<summary>标识 <see cref="P:System.Windows.Automation.AutomationProperties.ItemType"/> 附加属性。</summary>
<returns><see cref="P:System.Windows.Automation.AutomationProperties.ItemType"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.LabeledBy">
<summary>获取或设置包含元素的文本标签的元素。</summary>
<returns>包含元素的文本标签的元素。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.LabeledByProperty">
<summary>标识 <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy"/> 附加属性。</summary>
<returns><see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy"/> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.Name">
<summary>获取或设置元素的自动化名称。</summary>
<returns>元素的名称。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.NameProperty">
<summary>标识 <see cref="P:System.Windows.Automation.AutomationProperties.Name"/> 附加属性。</summary>
<returns><see cref="P:System.Windows.Automation.AutomationProperties.Name"/> 附加属性的标识符。 </returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetAcceleratorKey(System.Windows.DependencyObject,System.String)">
<summary>设置指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey"/> 附加属性的值。</summary>
<param name="element">要为其设置属性的 <see cref="T:System.Windows.DependencyObject"/>。</param>
<param name="value">要设置的快捷键值。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetAccessKey(System.Windows.DependencyObject,System.String)">
<summary>设置指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.AccessKey"/> 附加属性的值。</summary>
<param name="element">要为其设置属性的 <see cref="T:System.Windows.DependencyObject"/>。</param>
<param name="value">要设置的快捷键值。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetAutomationId(System.Windows.DependencyObject,System.String)">
<summary>设置指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId"/> 附加属性的值。</summary>
<param name="element">要为其设置属性的 <see cref="T:System.Windows.DependencyObject"/>。</param>
<param name="value">要设置的 UI 自动化标识符值。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetHelpText(System.Windows.DependencyObject,System.String)">
<summary>设置指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.HelpText"/> 附加属性的值。</summary>
<param name="element">要为其设置属性的 <see cref="T:System.Windows.DependencyObject"/>。</param>
<param name="value">帮助文本。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetIsRequiredForForm(System.Windows.DependencyObject,System.Boolean)">
<summary>设置指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm"/> 附加属性的值。</summary>
<param name="element">要为其设置属性的 <see cref="T:System.Windows.DependencyObject"/>。</param>
<param name="value">如果指定需要填充窗体上的元素，则为 true；否则为 false。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetItemStatus(System.Windows.DependencyObject,System.String)">
<summary>设置指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus"/> 附加属性的值。</summary>
<param name="element">要为其设置属性的 <see cref="T:System.Windows.DependencyObject"/>。</param>
<param name="value">项状态。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetItemType(System.Windows.DependencyObject,System.String)">
<summary>设置指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.ItemType"/> 附加属性的值。</summary>
<param name="element">要为其设置属性的 <see cref="T:System.Windows.DependencyObject"/>。</param>
<param name="value">项类型。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetLabeledBy(System.Windows.DependencyObject,System.Windows.UIElement)">
<summary>设置指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy"/> 附加属性的值。</summary>
<param name="element">要为其设置属性的 <see cref="T:System.Windows.DependencyObject"/>。</param>
<param name="value">表示 <paramref name="element"/> 的标签的 UI 元素。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetName(System.Windows.DependencyObject,System.String)">
<summary>设置指定 <see cref="T:System.Windows.DependencyObject"/> 的 <see cref="P:System.Windows.Automation.AutomationProperties.Name"/> 附加属性的值。</summary>
<param name="element">要为其设置属性的 <see cref="T:System.Windows.DependencyObject"/>。</param>
<param name="value">对象名称。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="element"/> 是无效值。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="T:System.Windows.Automation.AutomationProperty">
<summary>标识 <see cref="T:System.Windows.Automation.AutomationElementIdentifiers"/> 的属性。 </summary>
    </member>
    <member name="T:System.Windows.Automation.AutomationTextAttribute">
<summary>标识 UI 自动化文本属性。</summary>
    </member>
    <member name="T:System.Windows.Automation.DockPatternIdentifiers">
<summary>包含用作自动化属性标识符的值，专门用于 <see cref="T:System.Windows.Automation.Provider.IDockProvider"/> 模式的属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.DockPatternIdentifiers.DockPositionProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IDockProvider.DockPosition"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.DockPosition">
<summary>包含指定对象在停靠容器内的停靠位置的值。</summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.Top">
<summary>指示将 UI 自动化元素沿停靠容器的顶部边缘停靠。 </summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.Left">
<summary>指示将 UI 自动化元素沿停靠容器的左边缘停靠。 </summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.Bottom">
<summary>指示将 UI 自动化元素沿停靠容器的底部边缘停靠。 </summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.Right">
<summary>指示将 UI 自动化元素沿停靠容器的右边缘停靠。 </summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.Fill">
<summary>指示将 UI 自动化元素沿停靠容器的全部边缘停靠，并填充容器内的全部可用空间。 </summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.None">
<summary>指示 UI 自动化元素不沿停靠容器的任何边缘停靠。</summary>
    </member>
    <member name="T:System.Windows.Automation.ElementNotAvailableException">
<summary>尝试访问与不再可用的某个用户界面部分对应的 UI 自动化元素时引发的异常。</summary>
    </member>
    <member name="M:System.Windows.Automation.ElementNotAvailableException.#ctor">
<summary>初始化 <see cref="T:System.Windows.Automation.ElementNotAvailableException"/> 类的新实例。 </summary>
    </member>
    <member name="T:System.Windows.Automation.ElementNotEnabledException">
<summary>试图通过 UI 自动化操作一个未启用的控件时所引发的异常。 </summary>
    </member>
    <member name="M:System.Windows.Automation.ElementNotEnabledException.#ctor">
<summary>初始化 <see cref="T:System.Windows.Automation.ElementNotEnabledException"/> 类的新实例。 </summary>
    </member>
    <member name="T:System.Windows.Automation.ExpandCollapsePatternIdentifiers">
<summary>包含用作自动化属性标识符的值，专门用于 <see cref="T:System.Windows.Automation.Provider.IExpandCollapseProvider"/> 模式的属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapsePatternIdentifiers.ExpandCollapseStateProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.ExpandCollapseState">
<summary>包含用于指定 UI 自动化元素的 <see cref="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState"/> 自动化属性值的值。</summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapseState.Collapsed">
<summary>不显示 UI 自动化元素的子节点、控件或内容。</summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapseState.Expanded">
<summary>显示 UI 自动化元素的所有子节点、控件或内容。</summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapseState.PartiallyExpanded">
<summary>显示 UI 自动化元素的部分（而不是全部）子节点、控件或内容。 </summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapseState.LeafNode">
<summary>UI 自动化元素没有要显示的子节点、控件或内容。</summary>
    </member>
    <member name="T:System.Windows.Automation.GridItemPatternIdentifiers">
<summary>包含用作自动化属性标识符的值，专门用于 <see cref="T:System.Windows.Automation.Provider.IGridItemProvider"/> 模式的属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPatternIdentifiers.ColumnProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.Column"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.GridItemPatternIdentifiers.ColumnSpanProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.GridItemPatternIdentifiers.ContainingGridProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.GridItemPatternIdentifiers.RowProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.Row"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.GridItemPatternIdentifiers.RowSpanProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.RowSpan"/> 属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.GridPatternIdentifiers">
<summary>包含用作自动化属性标识符的值，专门用于 <see cref="T:System.Windows.Automation.Provider.IGridProvider"/> 模式的属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.GridPatternIdentifiers.ColumnCountProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.GridPatternIdentifiers.RowCountProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IGridProvider.RowCount"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.MultipleViewPatternIdentifiers">
<summary>包含用作自动化属性标识符的值，专门用于 <see cref="T:System.Windows.Automation.Provider.IMultipleViewProvider"/> 模式的属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.MultipleViewPatternIdentifiers.CurrentViewProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.MultipleViewPatternIdentifiers.SupportedViewsProperty">
<summary>标识用于获取控件特定的视图集合的自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.RangeValuePatternIdentifiers">
<summary>包含用作自动化属性标识符的值，专门用于 <see cref="T:System.Windows.Automation.Provider.IRangeValueProvider"/> 模式的属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.IsReadOnlyProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.LargeChangeProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.MaximumProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.MinimumProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.SmallChangeProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.ValueProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.RowOrColumnMajor">
<summary>指定应主要按行还是按列读取表中的数据。</summary>
    </member>
    <member name="F:System.Windows.Automation.RowOrColumnMajor.RowMajor">
<summary>应逐行读取表中的数据。 </summary>
    </member>
    <member name="F:System.Windows.Automation.RowOrColumnMajor.ColumnMajor">
<summary>应逐列读取表中的数据。 </summary>
    </member>
    <member name="F:System.Windows.Automation.RowOrColumnMajor.Indeterminate">
<summary>呈现数据的最佳方式尚不确定。</summary>
    </member>
    <member name="T:System.Windows.Automation.ScrollAmount">
<summary>包含 <see cref="T:System.Windows.Automation.Provider.IScrollProvider"/> 模式用来指示滚动方向和距离的值。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollAmount.LargeDecrement">
<summary>指定按大递减量执行滚动，等效于按 Page Up 键或单击滚动条上的空白部分。如果由 Page Up 键表示的距离不是控件的相关滚动量，或者不存在滚动条，则该值表示与当前可见窗口的大小相等的量。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollAmount.SmallDecrement">
<summary>指定按小递减量执行滚动，等效于按箭头键或单击滚动条上的箭头按钮。 </summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollAmount.NoAmount">
<summary>指定不应执行滚动。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollAmount.LargeIncrement">
<summary>指定按大增减量执行滚动，等效于按 Page Down 键或单击滚动条上的空白部分。如果由 Page Down 键表示的距离不是控件的相关滚动量，或者不存在滚动条，则该值表示与当前可见区域的大小相等的量。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollAmount.SmallIncrement">
<summary>指定按小增减量执行滚动，等效于按箭头键或单击滚动条上的箭头按钮。 </summary>
    </member>
    <member name="T:System.Windows.Automation.ScrollPatternIdentifiers">
<summary>包含用作自动化属性标识符的值，专门用于 <see cref="T:System.Windows.Automation.Provider.IScrollProvider"/> 模式和 <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll"/> 常数的属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.HorizontallyScrollableProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontallyScrollable"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.HorizontalScrollPercentProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.HorizontalViewSizeProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalViewSize"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll">
<summary>指定不应执行滚动。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.VerticallyScrollableProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticallyScrollable"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.VerticalScrollPercentProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.VerticalViewSizeProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalViewSize"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.SelectionItemPatternIdentifiers">
<summary>包含用作自动化属性标识符的值，专门用于 <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider"/> 模式的属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPatternIdentifiers.IsSelectedProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPatternIdentifiers.SelectionContainerProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.SelectionPatternIdentifiers">
<summary>包含用作自动化属性标识符的值，专门用于 <see cref="T:System.Windows.Automation.Provider.ISelectionProvider"/> 模式的属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionPatternIdentifiers.CanSelectMultipleProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.SelectionPatternIdentifiers.IsSelectionRequiredProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.SelectionPatternIdentifiers.SelectionProperty">
<summary>标识用于获取容器中的已选定项的属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.SupportedTextSelection">
<summary>包含一些值，这些值指定文本提供程序是否支持选择，而且如果支持选择，还指定其支持单个边续的选择还是多个不连续的选择。</summary>
    </member>
    <member name="F:System.Windows.Automation.SupportedTextSelection.None">
<summary>不支持文本选择。</summary>
    </member>
    <member name="F:System.Windows.Automation.SupportedTextSelection.Single">
<summary>支持单个连续的文本选择。</summary>
    </member>
    <member name="F:System.Windows.Automation.SupportedTextSelection.Multiple">
<summary>支持多个不连续的文本选择。</summary>
    </member>
    <member name="T:System.Windows.Automation.TableItemPatternIdentifiers">
<summary>包含用作自动化属性标识符的值，专门用于 <see cref="T:System.Windows.Automation.Provider.ITableProvider"/> 模式的属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.TableItemPatternIdentifiers.ColumnHeaderItemsProperty">
<summary>标识用于检索与某个表项或单元格关联的全部列标题的自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.TableItemPatternIdentifiers.RowHeaderItemsProperty">
<summary>标识用于检索与某个表项或单元格关联的全部行标题的自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.TablePatternIdentifiers">
<summary>包含用作自动化属性标识符的值，专门用于 <see cref="T:System.Windows.Automation.Provider.ITableProvider"/> 模式的属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.TablePatternIdentifiers.ColumnHeadersProperty">
<summary>标识 <see cref="M:System.Windows.Automation.Provider.ITableProvider.GetColumnHeaders"/> 方法所访问的自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.TablePatternIdentifiers.RowHeadersProperty">
<summary>标识 <see cref="M:System.Windows.Automation.Provider.ITableProvider.GetRowHeaders"/> 方法所访问的自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.TablePatternIdentifiers.RowOrColumnMajorProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.ITableProvider.RowOrColumnMajor"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.TextPatternIdentifiers">
<summary>包含用作 <see cref="T:System.Windows.Automation.Provider.ITextProvider"/> 类的标识符的值。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.AnimationStyleAttribute">
<summary>标识文本范围的 AnimationStyle 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.BackgroundColorAttribute">
<summary>标识文本范围的 BackgroundColor 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.BulletStyleAttribute">
<summary>标识文本范围的 <see cref="T:System.Windows.Automation.Text.BulletStyle"/> 属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.CapStyleAttribute">
<summary>标识文本范围的 CapStyle 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.CultureAttribute">
<summary>标识文本范围的区域性 (<see cref="T:System.Globalization.CultureInfo"/>) 属性。包括子语言级别；例如，指定瑞士法语 (fr-CH)，而不只是法语 (fr)。 </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.FontNameAttribute">
<summary>标识文本范围的 FontName 属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.FontSizeAttribute">
<summary>标识文本范围的 FontSize 属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.FontWeightAttribute">
<summary>标识文本范围的 FontWeight 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.ForegroundColorAttribute">
<summary>标识文本范围的 ForegroundColor 属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.HorizontalTextAlignmentAttribute">
<summary>标识文本范围的 HorizontalTextAlignment 属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IndentationFirstLineAttribute">
<summary>标识文本范围的 IndentationFirstLine 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IndentationLeadingAttribute">
<summary>标识文本范围的 IndentationLeading 属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IndentationTrailingAttribute">
<summary>标识文本范围的 IndentationTrailing 属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IsHiddenAttribute">
<summary>标识文本范围的 IsHidden 属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IsItalicAttribute">
<summary>标识文本范围的 IsItalic 属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IsReadOnlyAttribute">
<summary>标识文本范围的 IsReadOnly 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IsSubscriptAttribute">
<summary>标识文本范围的 IsSubscript 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IsSuperscriptAttribute">
<summary>标识文本范围的 IsSuperscript 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.MarginBottomAttribute">
<summary>标识文本范围的 MarginBottom 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.MarginLeadingAttribute">
<summary>标识文本范围的 MarginLeading 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.MarginTopAttribute">
<summary>标识文本范围的 MarginTop 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.MarginTrailingAttribute">
<summary>标识文本范围的 MarginTrailing 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.OutlineStylesAttribute">
<summary>标识文本范围的 OutlineStyles 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.OverlineColorAttribute">
<summary>标识文本范围的 OverlineColor 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.OverlineStyleAttribute">
<summary>标识文本范围的 OverlineStyle 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.StrikethroughColorAttribute">
<summary>标识文本范围的 StrikethroughColor 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.StrikethroughStyleAttribute">
<summary>标识文本范围的 StrikethroughStyle 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.TabsAttribute">
<summary>标识文本范围的 Tabs 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.TextFlowDirectionsAttribute">
<summary>标识文本范围的 TextFlowDirections 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.UnderlineColorAttribute">
<summary>标识文本范围的 UnderlineColor 属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.UnderlineStyleAttribute">
<summary>标识文本范围的 UnderlineStyle 属性。 </summary>
    </member>
    <member name="T:System.Windows.Automation.TogglePatternIdentifiers">
<summary>包含用作自动化属性标识符的值，专门用于 <see cref="T:System.Windows.Automation.Provider.IToggleProvider"/> 模式的属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.TogglePatternIdentifiers.ToggleStateProperty">
<summary>标识 <see cref="T:System.Windows.Automation.ToggleState"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.ToggleState">
<summary>包含用于指定 UI 自动化元素的 <see cref="T:System.Windows.Automation.ToggleState"/> 的值</summary>
    </member>
    <member name="F:System.Windows.Automation.ToggleState.Off">
<summary>没有选定、选中、标记或以其他方式激活 UI 自动化元素。</summary>
    </member>
    <member name="F:System.Windows.Automation.ToggleState.On">
<summary>选定、选中、标记或以其他方式激活 UI 自动化元素。</summary>
    </member>
    <member name="F:System.Windows.Automation.ToggleState.Indeterminate">
<summary>UI 自动化元素处于不确定状态。</summary>
    </member>
    <member name="T:System.Windows.Automation.TransformPatternIdentifiers">
<summary>包含用作自动化属性标识符的值，专门用于 <see cref="T:System.Windows.Automation.Provider.ITransformProvider"/> 模式的属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.TransformPatternIdentifiers.CanMoveProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.TransformPatternIdentifiers.CanResizeProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.TransformPatternIdentifiers.CanRotateProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.ValuePatternIdentifiers">
<summary>包含用作自动化属性标识符的值，专门用于 <see cref="T:System.Windows.Automation.Provider.IValueProvider"/> 模式的属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.ValuePatternIdentifiers.IsReadOnlyProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly"/> 属性。</summary>
    </member>
    <member name="F:System.Windows.Automation.ValuePatternIdentifiers.ValueProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IValueProvider.Value"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.WindowInteractionState">
<summary>定义指定窗口的当前状态的值，以用于用户或编程交互。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowInteractionState.Running">
<summary>窗口正在运行。这不保证窗口会响应或准备好响应用户交互。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowInteractionState.Closing">
<summary>窗口正在关闭。 </summary>
    </member>
    <member name="F:System.Windows.Automation.WindowInteractionState.ReadyForUserInteraction">
<summary>窗口已准备好响应用户交互。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowInteractionState.BlockedByModalWindow">
<summary>窗口已由一个模式窗口阻止。 </summary>
    </member>
    <member name="F:System.Windows.Automation.WindowInteractionState.NotResponding">
<summary>窗口未响应。 </summary>
    </member>
    <member name="T:System.Windows.Automation.WindowPatternIdentifiers">
<summary>包含用作自动化属性标识符的值，专门用于 <see cref="T:System.Windows.Automation.Provider.IWindowProvider"/> 模式的属性。 </summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.CanMaximizeProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.CanMinimizeProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.IsModalProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IWindowProvider.IsModal"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.IsTopmostProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.WindowInteractionStateProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.WindowVisualStateProperty">
<summary>标识 <see cref="P:System.Windows.Automation.Provider.IWindowProvider.VisualState"/> 自动化属性。</summary>
<returns>自动化属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Automation.WindowVisualState">
<summary>包含用于指定 <see cref="T:System.Windows.Automation.Provider.IWindowProvider"/> 模式的窗口可视状态的值。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowVisualState.Normal">
<summary>指定窗口为标准窗口（已还原）。 </summary>
    </member>
    <member name="F:System.Windows.Automation.WindowVisualState.Maximized">
<summary>指定窗口已最大化。 </summary>
    </member>
    <member name="F:System.Windows.Automation.WindowVisualState.Minimized">
<summary>指定窗口已最小化。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.AutomationControlType">
<summary>指定对 UI 自动化客户端公开的控件类型。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Button">
<summary>按钮控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Calendar">
<summary>日历控件，例如日期选取器。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.CheckBox">
<summary>复选框控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ComboBox">
<summary>组合框控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Edit">
<summary>编辑控件，例如文本框。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Hyperlink">
<summary>超链接控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Image">
<summary>图像控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ListItem">
<summary>列表项控件，是列表控件的子项。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.List">
<summary>列表控件，例如列表框。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Menu">
<summary>菜单控件，例如应用程序窗口中的一个顶级菜单。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.MenuBar">
<summary>菜单栏控件，通常包含一组顶级菜单。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.MenuItem">
<summary>菜单项控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ProgressBar">
<summary>进度条控件，以可视方式指示一个长时间操作的进度。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.RadioButton">
<summary>单选按钮控件，只允许在组中选择一项的选择机制。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ScrollBar">
<summary>滚动条控件，例如应用程序窗口中的滚动条。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Slider">
<summary>滑块控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Spinner">
<summary>微调控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.StatusBar">
<summary>状态栏控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Tab">
<summary>选项卡控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.TabItem">
<summary>选项卡项控件，代表选项卡控件的一页。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Text">
<summary>编辑控件，例如文本框或多格式文本框。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ToolBar">
<summary>工具栏，例如应用程序窗口中包含一组命令按钮的控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ToolTip">
<summary>工具提示控件，将指针移动到一个控件上方时或者有时使用键盘 Tab 键切换到一个控件时将出现此信息窗口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Tree">
<summary>树控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.TreeItem">
<summary>树控件中的节点。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Custom">
<summary>不属于定义的控件类型之一的控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Group">
<summary>组控件，充当其他控件的容器。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Thumb">
<summary>滚动条中可拖到不同位置的控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.DataGrid">
<summary>数据网格控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.DataItem">
<summary>数据项控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Document">
<summary>文档控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.SplitButton">
<summary>拆分按钮，将执行默认操作，并且还可以扩展到其他可能操作的列表。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Window">
<summary>窗口框架，包含子对象。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Pane">
<summary>窗格控件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Header">
<summary>标题控件，用作信息的行和列标签的容器。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.HeaderItem">
<summary>标题项，充当信息的行或列的标签。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Table">
<summary>表。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.TitleBar">
<summary>窗口上的标题栏。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Separator">
<summary>分隔符，在控件（例如菜单和工具栏）中创建一个可视的分隔。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.AutomationEvents">
<summary>指定由此元素通过相关联的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> 引发的事件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.ToolTipOpened">
<summary>打开工具提示时引发的事件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.ToolTipClosed">
<summary>关闭工具提示时引发的事件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.MenuOpened">
<summary>打开菜单时引发的事件。 .</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.MenuClosed">
<summary>关闭菜单时引发的事件。 </summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.AutomationFocusChanged">
<summary>焦点发生更改时引发的事件。请参阅 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus"/>。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.InvokePatternOnInvoked">
<summary>激活控件时引发的事件。请参阅 <see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke"/>。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.SelectionItemPatternOnElementAddedToSelection">
<summary>在选定项集合中添加项时引发的事件。请参阅 <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection"/>。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.SelectionItemPatternOnElementRemovedFromSelection">
<summary>从选定项集合中移除项时引发的事件。请参阅 <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection"/>。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.SelectionItemPatternOnElementSelected">
<summary>选定单个项（清除以前的任何选择）时引发的事件。请参阅 <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select"/>。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.SelectionPatternOnInvalidated">
<summary>当容器中的选定内容发生显著更改时将引发的事件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.TextPatternOnTextSelectionChanged">
<summary>修改文本选择时引发的事件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.TextPatternOnTextChanged">
<summary>修改文本内容时引发的事件。 </summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.AsyncContentLoaded">
<summary>异步加载内容时引发的事件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.PropertyChanged">
<summary>当属性发生更改时引发的事件。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.StructureChanged">
<summary>当 UI 自动化目录树结构发生更改时引发的事件。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.AutomationOrientation">
<summary>指定控件呈现的方向。 </summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationOrientation.None">
<summary>此控件没有方向。 </summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationOrientation.Horizontal">
<summary>控件将水平呈现。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationOrientation.Vertical">
<summary>控件将水平呈现。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.AutomationPeer">
<summary>提供一个对 UI 自动化公开关联类的自动化同级的基类。 </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.#ctor">
<summary>在由派生类的构造函数调用时，它们可对基类值进行初始化。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.AutomationPeer.EventsSource">
<summary>获取或设置一个 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>，它作为来自此 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> 的所有事件的源报告给自动化客户端。</summary>
<returns>作为事件源的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey">
<summary>获取与 UI 自动化同级关联的对象的快捷键组合。 </summary>
<returns>快捷键组合提示字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKeyCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey"/> 调用。</summary>
<returns>快捷键。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey">
<summary>获取与自动化同级关联的对象的快捷键。</summary>
<returns>访问键。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKeyCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey"/> 调用。</summary>
<returns>访问键。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType">
<summary>获取与 UI 自动化同级关联的对象的控件类型。</summary>
<returns>以枚举值的形式显示的控件类型。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlTypeCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>以枚举值的形式显示的控件类型。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId">
<summary>获取与自动化同级关联的对象的 <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId"/>。</summary>
<returns>自动化标识符。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationIdCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId"/> 调用。</summary>
<returns>自动化标识符。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle">
<summary>获取表示与自动化同级关联的元素的屏幕坐标的 <see cref="T:System.Windows.Rect"/> 对象。</summary>
<returns>边框。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangleCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle"/> 调用。</summary>
<returns>边框。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren">
<summary>获取在 UI 自动化树中表示为自动化同级的直接子元素的子元素集合。</summary>
<returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"/> 调用。</summary>
<returns>子元素的集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName">
<summary>获取与同级关联的控件类的名称。</summary>
<returns>关联的控件类的类名。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClassNameCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>相关的控件类的类名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint">
<summary>获取与自动化同级相关联的对象上响应鼠标单击的 <see cref="T:System.Windows.Point"/>。 </summary>
<returns>元素的可单击区域中的点。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePointCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint"/> 调用。</summary>
<returns>元素的可单击区域中的点。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText">
<summary>获取描述与自动化同级关联的控件的功能的文本。 </summary>
<returns>帮助文本。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpTextCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText"/> 调用。</summary>
<returns>帮助文本。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus">
<summary>获取可传达与此自动化同级关联的对象的可视状态的文本。 </summary>
<returns>项状态。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatusCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus"/> 调用。</summary>
<returns>项状态。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType">
<summary>获取描述元素表示哪种类型的项的字符串。 </summary>
<returns>项的类型。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetItemTypeCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType"/> 调用。</summary>
<returns>项的类型。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
<summary>获取以此元素为目标的 <see cref="T:System.Windows.UIElement"/> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>。 </summary>
<returns>作为 <see cref="T:System.Windows.UIElement"/> 目标的元素的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledByCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy"/> 调用。</summary>
<returns>作为 <see cref="T:System.Windows.UIElement"/> 目标的元素的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType">
<summary>获取表示与此自动化同级关联的控件的控件类型的本地化字符串。本地化的字符串与 <see cref="T:System.Windows.Automation.Peers.AutomationControlType"/> 值平行。</summary>
<returns>报告关联控件的本地化类型的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlTypeCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType"/> 调用。</summary>
<returns>报告关联控件的本地化类型的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetName">
<summary>获取自动化对等方报告为关联控件 UI 自动化名称的值。</summary>
<returns>要报告为 UI 自动化名称的值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/> 调用。</summary>
<returns>名称。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation">
<summary>获取指示显式控件方向（如果有）的值。</summary>
<returns>以枚举值的形式显示的控件方向。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientationCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation"/> 调用。</summary>
<returns>控件的方向。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetParent">
<summary>获取作为此 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> 的父级的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>。</summary>
<returns>自动化父级。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>在派生类中重写时，根据 <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> 输入和对等方的已知模式实现，获取支持请求模式的对象。</summary>
<returns>实现模式接口的对象；如果此同级不支持此接口，则为 null。</returns>
<param name="patternInterface"><see cref="T:System.Windows.Automation.Peers.PatternInterface"/> 枚举中的一个值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus">
<summary>获取一个值，该值指示与此自动化同级关联的对象当前是否具有键盘焦点。</summary>
<returns>如果元素具有键盘焦点，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocusCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus"/> 调用。</summary>
<returns>如果元素具有键盘焦点，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
<summary>如果属性发生更改，则触发对 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> 的主要属性的重新计算，并引发对自动化客户端的 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> 通知。 </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement">
<summary>获取一个值，该值指示与此自动化同级关联的对象是否包含向用户显示的数据。</summary>
<returns>如果元素为内容元素，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElementCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement"/> 调用。</summary>
<returns>如果元素为内容元素，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement">
<summary>获取一个值，该值指示此元素被用户理解为交互式元素，还是理解为组成 GUI 中控件的逻辑结构的一部分。</summary>
<returns>如果元素为控件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElementCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement"/> 调用。</summary>
<returns>如果元素为控件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled">
<summary>获取一个值，该值指示与此自动化同级关联的元素是否支持交互。</summary>
<returns>如果元素支持交互，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabledCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled"/> 调用。</summary>
<returns>如果自动化同级可以接收和发送事件，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable">
<summary>获取一个值，该值指示此元素是否可以接受键盘焦点。</summary>
<returns>如果元素可以接受键盘焦点，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusableCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable"/> 调用。</summary>
<returns>如果元素可以接受键盘焦点，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen">
<summary>获取一个值，该值指示元素是否不在屏幕上。</summary>
<returns>如果元素不在屏幕上，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreenCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen"/> 调用。</summary>
<returns>如果元素不在屏幕上，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword">
<summary>获取一个值，该值指示元素是否包含敏感内容。</summary>
<returns>如果元素包含密码等敏感内容，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsPasswordCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword"/> 调用。</summary>
<returns>如果元素包含敏感内容，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm">
<summary>获取一个值，该值指示是否必须在窗体中完成与此同级关联的对象。</summary>
<returns>如果必须完成该元素，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForFormCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm"/> 调用。</summary>
<returns>如果必须完成该元素，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
<summary>获取一个值，该值指示 UI 自动化是否正在侦听指定的事件。 </summary>
<returns>如果 UI 自动化正在侦听指定的事件，则为 true；否则为 false。</returns>
<param name="eventId">枚举值之一。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.PeerFromProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)">
<summary>获取指定的 <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple"/> 代理的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>。</summary>
<returns>指定的 <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple"/> 代理的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>。</returns>
<param name="provider">实现 <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple"/> 的类。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.ProviderFromPeer(System.Windows.Automation.Peers.AutomationPeer)">
<summary>获取指定的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> 的 <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple"/> 代理。</summary>
<returns>代理。</returns>
<param name="peer">自动化同级。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.RaiseAutomationEvent(System.Windows.Automation.Peers.AutomationEvents)">
<summary>引发自动化事件。</summary>
<param name="eventId">枚举值形式的待引发事件的事件标识符。请参阅 <see cref="T:System.Windows.Automation.Peers.AutomationEvents"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.RaisePropertyChangedEvent(System.Windows.Automation.AutomationProperty,System.Object,System.Object)">
<summary>引发向自动化客户端通知已更改的属性值的事件。</summary>
<param name="property">已更改的属性。</param>
<param name="oldValue">以前的属性值。</param>
<param name="newValue">属性的新值。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus">
<summary>对与此自动化同级关联的对象设置键盘焦点。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.SetFocusCore">
<summary>当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus"/> 调用。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ButtonAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.Button"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.#ctor(System.Windows.Controls.Button)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer"/> 类的新实例。</summary>
<param name="owner">与此自动化同级相关联的元素。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer"/> 关联的元素的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetClassNameCore">
<summary>获取与此 UI 自动化同级关联的类的名称。</summary>
<returns>类名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer"/> 支持的模式支持指定的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="patternInterface">枚举值之一。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke"/>。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer">
<summary>表示一个基类，用于对 UI 自动化公开派生自 <see cref="T:System.Windows.Controls.Primitives.ButtonBase"/> 的类。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.ButtonBase)">
<summary>在由派生类的构造函数调用时，提供基类值的初始化。</summary>
<param name="owner">要与此同级关联的 <see cref="T:System.Windows.Controls.Primitives.ButtonBase"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer"/> 关联的元素的 UI 自动化名称。由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/> 调用。</summary>
<returns>关联元素的 UI 自动化名称。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.CheckBox"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.#ctor(System.Windows.Controls.CheckBox)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与此 <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.CheckBox"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer"/> 关联的类的 <see cref="T:System.Windows.Automation.Peers.AutomationControlType"/>。由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer"/> 关联的类的名称。由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>类名。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.ComboBox"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.#ctor(System.Windows.Controls.ComboBox)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与此 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.ComboBox"/> 实例。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
<summary>为与此 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.ComboBox"/> 中的各项（或其他元素）创建自动化同级。</summary>
<returns>子集合中指定项的新 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer"/>。</returns>
<param name="item">要为其创建自动化同级的项。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer"/> 关联的元素的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>以枚举值的形式显示的控件类型。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer"/> 关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>类名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer"/> 支持的模式支持请求的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="pattern">枚举值之一。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse"/>。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Expand"/>。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState"/>。</summary>
<returns>控件的状态。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly"/>。</summary>
<returns>如果控件为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)"/>。</summary>
<param name="value">控件的值。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IValueProvider.Value"/>。</summary>
<returns>控件的值。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.FrameworkElement"/> 类型（包括控件）。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.#ctor(System.Windows.FrameworkElement)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 类的新实例。</summary>
<param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.FrameworkElement"/>。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="owner"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.CreatePeerForElement(System.Windows.UIElement)">
<summary>为指定的 <see cref="T:System.Windows.UIElement"/> 创建一个 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>。</summary>
<returns>指定的 <see cref="T:System.Windows.UIElement"/> 的 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>。</returns>
<param name="element">与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/>。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.FromElement(System.Windows.UIElement)">
<summary>返回指定 <see cref="T:System.Windows.UIElement"/> 的 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>。</summary>
<returns>返回 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>；如果 <see cref="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.CreatePeerForElement(System.Windows.UIElement)"/> 方法未创建 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>，则返回 null。</returns>
<param name="element">与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/>。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAcceleratorKeyCore">
<summary>返回与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/> 的快捷键。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey"/> 调用。</summary>
<returns>由 <see cref="M:System.Windows.Automation.AutomationProperties.GetAcceleratorKey(System.Windows.DependencyObject)"/> 返回的 <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAccessKeyCore">
<summary>返回与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/> 的访问键。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey"/> 调用。</summary>
<returns>与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的元素的访问键。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAutomationControlTypeCore">
<summary>返回与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/> 的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAutomationIdCore">
<summary>返回一个字符串，该字符串唯一标识与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.FrameworkElement"/>。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId"/> 调用。</summary>
<returns>返回与 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的元素的自动化标识符，如果没有自动化标识符，则返回 <see cref="F:System.String.Empty"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetBoundingRectangleCore">
<summary>返回 <see cref="T:System.Windows.Rect"/>，它表示与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/> 的边框。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle"/> 调用。</summary>
<returns>包含元素坐标的 <see cref="T:System.Windows.Rect"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetChildrenCore">
<summary>返回与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/> 的子元素集合。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"/> 调用。</summary>
<returns><see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> 子元素列表。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetClassNameCore">
<summary>返回与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/> 的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的所有者类型的名称。请参阅“继承者的说明”。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetClickablePointCore">
<summary>返回一个 <see cref="T:System.Windows.Point"/>，该对象表示与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/> 上的可单击空间。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint"/> 调用。</summary>
<returns>元素上允许单击的 <see cref="T:System.Windows.Point"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetHelpTextCore">
<summary>返回一个字符串，该字符串描述与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.FrameworkElement"/> 的功能。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText"/> 调用。</summary>
<returns>帮助文本；如果没有帮助文本，则为 <see cref="F:System.String.Empty"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetItemStatusCore">
<summary>返回一个字符串，该字符串表明与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/> 的可视状态。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus"/> 调用。</summary>
<returns>包含由 <see cref="M:System.Windows.Automation.AutomationProperties.GetItemStatus(System.Windows.DependencyObject)"/> 返回的 <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus"/> 的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetItemTypeCore">
<summary>返回一个可读字符串，它包含此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 的 <see cref="T:System.Windows.UIElement"/> 所表示的项类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType"/> 调用。</summary>
<returns>包含由 <see cref="M:System.Windows.Automation.AutomationProperties.GetItemType(System.Windows.DependencyObject)"/> 返回的 <see cref="P:System.Windows.Automation.AutomationProperties.ItemType"/> 的字符串。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetLabeledByCore">
<summary>返回目标为与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.FrameworkElement"/> 的 <see cref="T:System.Windows.UIElement"/> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy"/> 调用。</summary>
<returns>作为 <see cref="T:System.Windows.UIElement"/> 目标的元素的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetLocalizedControlTypeCore">
<summary>返回标识某个控件类型的本地化可读字符串。与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的所有者类型的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType"/> 调用。</summary>
<returns>包含所有者控件的类型名称的本地化字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetNameCore">
<summary>返回与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的元素的 UI 自动化名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/> 调用。</summary>
<returns>与此自动化对等类关联的元素的 UI 自动化名称。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetOrientationCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的元素是否沿特定方向布置。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation"/> 调用。</summary>
<returns><see cref="F:System.Windows.Automation.Peers.AutomationOrientation.None"/> 枚举值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>返回一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 支持的模式支持请求的模式。</summary>
<returns>请参阅“备注”。</returns>
<param name="patternInterface">枚举值之一。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.HasKeyboardFocusCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/> 当前是否有键盘输入焦点。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus"/> 调用。</summary>
<returns>如果元素具有键盘输入焦点，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsContentElementCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的元素是否为包含向用户呈现的数据的元素。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement"/> 调用。</summary>
<returns>如果元素中包含供用户读取的数据，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsControlElementCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的对象是否被最终用户理解为交互式对象。此外，用户可以将对象理解为组成 GUI 中控件的逻辑结构的一部分。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement"/> 调用。</summary>
<returns>如果对象可以交互，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsEnabledCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/> 是否已启用。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled"/> 调用。</summary>
<returns>如果此元素已启用，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsKeyboardFocusableCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的元素是否可以接受键盘焦点。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable"/> 调用。</summary>
<returns>如果元素可由键盘设定焦点，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsOffscreenCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/> 是否在屏幕之外。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen"/> 调用。</summary>
<returns>如果元素不在屏幕上，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsPasswordCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的元素是否包含受保护的内容。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword"/> 调用。</summary>
<returns>如果元素包含敏感内容，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsRequiredForFormCore">
<summary>返回一个值，该值指示是否需要在窗体上完成与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的元素。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm"/> 调用。</summary>
<returns>由 <see cref="M:System.Windows.Automation.AutomationProperties.GetIsRequiredForForm(System.Windows.DependencyObject)"/> 返回的值（如果设置了该值）；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.Owner">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/>。</summary>
<returns>拥有此同级类的元素。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.SetFocusCore">
<summary>在与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的元素上设置键盘输入焦点。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus"/> 调用。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.HyperlinkButton"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.#ctor(System.Windows.Controls.HyperlinkButton)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与 <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.HyperlinkButton"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer"/> 关联的元素的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer"/> 关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>类名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer"/> 支持的模式支持请求的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="patternInterface">枚举值之一。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.IsControlElementCore">
<summary>获取一个值，该值指示与此自动化同级关联的元素是否为包含向用户显示的数据的元素。</summary>
<returns>如果元素是交互式元素，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke"/>。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ImageAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.Image"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.#ctor(System.Windows.Controls.Image)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与此 <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.Image"/>。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.ItemAutomationPeer">
<summary>对 UI 自动化公开 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 集合中的数据项。 </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer)">
<summary>在由派生类的构造函数调用时，提供基类值的初始化。</summary>
<param name="item"><see cref="P:System.Windows.Controls.ItemsControl.Items"/> 集合中与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的数据项。</param>
<param name="itemsControlAutomationPeer">获取与包含 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 集合的 <see cref="T:System.Windows.Controls.ItemsControl"/> 关联的 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.#ctor(System.Windows.UIElement)">
<summary>在由派生类的构造函数调用时，提供基类值的初始化。</summary>
<param name="item"><see cref="P:System.Windows.Controls.ItemsControl.Items"/> 集合中与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的数据项。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAcceleratorKeyCore">
<summary>返回与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素的快捷键。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey"/> 调用。</summary>
<returns>由 <see cref="M:System.Windows.Automation.AutomationProperties.GetAcceleratorKey(System.Windows.DependencyObject)"/> 返回的 <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAccessKeyCore">
<summary>返回与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素的访问键。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey"/> 调用。</summary>
<returns>与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的元素的访问键。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAutomationControlTypeCore">
<summary>返回与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAutomationIdCore">
<summary>返回一个字符串，该字符串唯一标识与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId"/> 调用。</summary>
<returns>返回与 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的元素的自动化标识符，如果没有自动化标识符，则返回 <see cref="F:System.String.Empty"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetBoundingRectangleCore">
<summary>返回 <see cref="T:System.Windows.Rect"/>，它表示与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素的边框。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle"/> 调用。</summary>
<returns>包含元素项的坐标的 <see cref="T:System.Windows.Rect"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetChildrenCore">
<summary>返回所有者的子元素集合的自动化对等类。所有者类与 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"/> 调用。</summary>
<returns><see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> 元素的列表。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetClassNameCore">
<summary>返回与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>类名。请参阅“备注”。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetClickablePointCore">
<summary>返回 <see cref="T:System.Windows.Point"/>，它表示与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素的可单击空间。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint"/> 调用。</summary>
<returns>元素上允许单击的 <see cref="T:System.Windows.Point"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetHelpTextCore">
<summary>返回描述与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素的功能的字符串。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText"/> 调用。</summary>
<returns>帮助文本；如果没有帮助文本，则为 <see cref="F:System.String.Empty"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemStatusCore">
<summary>返回一个字符串，该字符串表明与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素的可视状态。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus"/> 调用。</summary>
<returns>包含由 <see cref="M:System.Windows.Automation.AutomationProperties.GetItemStatus(System.Windows.DependencyObject)"/> 返回的 <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus"/> 的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemTypeCore">
<summary>返回一个可读的字符串，该字符串包含此项表示的项元素的类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType"/> 调用。</summary>
<returns>项类型字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetLabeledByCore">
<summary>返回目标为与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项的对象的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy"/> 调用。</summary>
<returns>对象的自动化对等类，该对象是同级所有者的标签目标。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetLocalizedControlTypeCore">
<summary>返回表示某个控件类型的本地化可读字符串。该控件是与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的所有者类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType"/> 调用。</summary>
<returns>包含控件类型的字符串。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetNameCore">
<summary>获取与某个数据项对应的元素的 UI 自动化名称。该项是 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 集合中与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的元素。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/> 调用。</summary>
<returns>与某个数据项对应的元素的 UI 自动化名称。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetOrientationCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的元素是否沿特定方向布局。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>返回一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 支持的模式支持请求的模式。</summary>
<returns>用于实现模式接口的对象；如果未实现指定的模式接口，则为 null。</returns>
<param name="patternInterface">枚举值之一。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.HasKeyboardFocusCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素当前是否有键盘输入焦点。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus"/> 调用。</summary>
<returns>如果元素具有键盘输入焦点，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsContentElementCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素是否为包含向用户呈现的数据的元素。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement"/> 调用。</summary>
<returns>如果元素中包含供用户读取的数据，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsControlElementCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素是否被最终用户理解为交互式对象。此外，用户可能将元素理解为组成 GUI 中控件的逻辑结构的一部分。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement"/> 调用。</summary>
<returns>如果元素是交互式元素，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsEnabledCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素是否已启用。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled"/> 调用。</summary>
<returns>如果此元素已启用，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsKeyboardFocusableCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素是否可以接受键盘焦点。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable"/> 调用。</summary>
<returns>如果项元素可由键盘设定焦点，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsOffscreenCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素是否在屏幕之外。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen"/> 调用。</summary>
<returns>如果项元素不在屏幕上，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsPasswordCore">
<summary>返回一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素是否包含受保护的内容。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword"/> 调用。</summary>
<returns>如果项元素包含敏感内容，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsRequiredForFormCore">
<summary>返回一个值，该值指示是否需要在窗体上完成与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的项元素。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm"/> 调用。</summary>
<returns>由 <see cref="M:System.Windows.Automation.AutomationProperties.GetIsRequiredForForm(System.Windows.DependencyObject)"/> 返回的值（如果设置了该值）；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.Item">
<summary>获取 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 集合中与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的请求数据项。</summary>
<returns>请求的数据项。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.ItemsControlAutomationPeer">
<summary>获取与此同级的 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 的 <see cref="T:System.Windows.Controls.ItemsControl"/> 关联的 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"/>。</summary>
<returns>与容纳 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 集合的 <see cref="T:System.Windows.Controls.ItemsControl"/> 关联的 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.SetFocusCore">
<summary>在与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的项元素上设置键盘输入焦点。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus"/> 调用。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.ItemsControl"/> 类型。 </summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.#ctor(System.Windows.Controls.ItemsControl)">
<summary>在由派生类的构造函数调用时，提供基类值的初始化。</summary>
<param name="owner">要与此 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.ItemsControl"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
<summary>为某个数据项创建 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 的新实例。该项目存在于关联的 <see cref="T:System.Windows.Controls.ItemsControl"/> 所有者的 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 集合中。</summary>
<returns>一个对 UI 自动化公开数据项的对象或 null。请参阅“备注”。</returns>
<param name="item">与此 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 关联的数据项。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetChildrenCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"/> 关联的元素的子元素集合的自动化对等类。 </summary>
<returns>子元素的自动化对等类列表。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"/> 支持的模式实现请求的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="patternInterface">指示所需控件模式的枚举值之一。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.ListBox"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.#ctor(System.Windows.Controls.ListBox)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.ListBox"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
<summary>为某个数据项创建 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 的新实例。项同级与关联的 <see cref="T:System.Windows.Controls.ListBox"/> 的 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 集合中的某个项目对齐。</summary>
<returns>为所有者 <see cref="T:System.Windows.Controls.ListBox"/> 中的指定数据项提供 UI 自动化支持的同级对象。</returns>
<param name="item">要用作所创建的 <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"/> 的基础的数据项。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.ListBox"/> 的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer"/> 关联的类的类名。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>关联的类名。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.ListBox"/> 的 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 的集合中的项。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
<summary>使用指定的选择器自动化同级初始化 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer"/> 类的新实例。 </summary>
<param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.ListBoxItem"/> 实例。</param>
<param name="selectorAutomationPeer">获取与包含 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 集合的 <see cref="T:System.Windows.Controls.ListBox"/> 关联的 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.#ctor(System.Windows.Controls.ListBoxItem)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer"/> 类的新实例。</summary>
<param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.ListBoxItem"/> 实例。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer"/> 关联的元素的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer"/> 关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>类名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer"/> 支持的模式支持请求的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="patternInterface">枚举值之一。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView"/>。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.MediaElementAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.MediaElement"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.#ctor(System.Windows.Controls.MediaElement)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与 <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.MediaElement"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer"/> 关联的元素的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer"/> 关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>类名。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer.#ctor(System.Windows.Controls.MultiScaleImage)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer"/> 类的新实例。 </summary>
<param name="owner">要与 <see cref="T:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.MultiScaleImage"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer"/> 关联的控件的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer"/> 关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>类名。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.PasswordBox"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.#ctor(System.Windows.Controls.PasswordBox)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer"/> 类的新实例。</summary>
<param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.PasswordBox"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer"/> 支持的模式支持请求的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="patternInterface">枚举值之一。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly"/>。</summary>
<returns>如果值为只读的，则为 true；如果可以修改它，则为 false。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)"/>。</summary>
<param name="value">要设置的值。</param>
<exception cref="T:System.Windows.Automation.ElementNotEnabledException">未启用此同级的所有者。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="value"/> 作为 null 传递。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IValueProvider.Value"/>。始终引发异常。</summary>
<returns>不适用；始终引发异常。</returns>
<exception cref="T:System.InvalidOperationException">在所有情况下均引发。</exception>
    </member>
    <member name="T:System.Windows.Automation.Peers.PatternInterface">
<summary>指定 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)"/> 方法返回的控件模式。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Invoke">
<summary><see cref="T:System.Windows.Automation.Provider.IInvokeProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Selection">
<summary><see cref="T:System.Windows.Automation.Provider.ISelectionProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Value">
<summary><see cref="T:System.Windows.Automation.Provider.IValueProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.RangeValue">
<summary><see cref="T:System.Windows.Automation.Provider.IRangeValueProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Scroll">
<summary><see cref="T:System.Windows.Automation.Provider.IScrollProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem">
<summary><see cref="T:System.Windows.Automation.Provider.IScrollItemProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse">
<summary><see cref="T:System.Windows.Automation.Provider.IExpandCollapseProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Grid">
<summary><see cref="T:System.Windows.Automation.Provider.IGridProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.GridItem">
<summary><see cref="T:System.Windows.Automation.Provider.IGridItemProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.MultipleView">
<summary><see cref="T:System.Windows.Automation.Provider.IMultipleViewProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Window">
<summary><see cref="T:System.Windows.Automation.Provider.IWindowProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.SelectionItem">
<summary><see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Dock">
<summary><see cref="T:System.Windows.Automation.Provider.IDockProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Table">
<summary><see cref="T:System.Windows.Automation.Provider.ITableProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.TableItem">
<summary><see cref="T:System.Windows.Automation.Provider.ITableItemProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Toggle">
<summary><see cref="T:System.Windows.Automation.Provider.IToggleProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Transform">
<summary><see cref="T:System.Windows.Automation.Provider.ITransformProvider"/> 控件模式接口。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Text">
<summary><see cref="T:System.Windows.Automation.Provider.ITextProvider"/> 控件模式接口。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.ProgressBar"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.#ctor(System.Windows.Controls.ProgressBar)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.ProgressBar"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer"/> 关联的元素的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer"/> 关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>类名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer"/> 支持的模式支持请求的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="patternInterface">枚举值之一。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly"/>。</summary>
<returns>始终返回 true。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange"/>。</summary>
<returns>控件支持的大更改值；如果此选项不受支持，则为 <see cref="F:System.Double.NaN"/>。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)"/>。始终引发异常。</summary>
<param name="val">要设置的值。 </param>
<exception cref="T:System.InvalidOperationException">在所有情况下均引发。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange"/>。</summary>
<returns>控件支持的小更改值；如果此选项不受支持，则为 <see cref="F:System.Double.NaN"/>。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.RadioButton"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.#ctor(System.Windows.Controls.RadioButton)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.RadioButton"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer"/> 关联的元素的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer"/> 关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>类名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer"/> 支持的模式支持请求的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="patternInterface">枚举值之一。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection"/>。</summary>
      <exception cref="T:System.InvalidOperationException">
不选中此同级的 <see cref="T:System.Windows.Controls.CheckBox"/>。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected"/>。</summary>
<returns>如果选定此元素，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection"/>。</summary>
      <exception cref="T:System.InvalidOperationException">
选中此同级的 <see cref="T:System.Windows.Controls.CheckBox"/>。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select"/>。</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">
不启用此同级的 <see cref="T:System.Windows.Controls.CheckBox"/>。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer"/>。</summary>
<returns>支持 <see cref="T:System.Windows.Automation.Provider.ISelectionProvider"/> 的提供程序。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.Primitives.RangeBase"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.RangeBase)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与 <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.Primitives.RangeBase"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer"/> 实现的模式支持请求的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="patternInterface">枚举值之一。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly"/>。</summary>
<returns>如果值为只读的，则为 true；如果可以修改它，则为 false。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange"/>。</summary>
<returns>控件支持的大更改值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Maximum">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum"/>。</summary>
<returns>控件支持的最大值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Minimum">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum"/>。</summary>
<returns>控件支持的最小值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)"/>。</summary>
<param name="val">要设置的值。 </param>
<exception cref="T:System.Windows.Automation.ElementNotEnabledException">未启用此同级的所有者。</exception>
<exception cref="T:System.ArgumentOutOfRangeException">已尝试设置超出所有者控件的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> 和 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> 的值。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange"/>。</summary>
<returns>控件支持的小更改值。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Value">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/>。</summary>
<returns>控件的值。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.Primitives.RepeatButton"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.RepeatButton)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.Primitives.RepeatButton"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer"/> 关联的元素的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer"/> 关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>类名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer"/> 支持的模式支持请求的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="patternInterface">枚举值之一。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke"/>。</summary>
<exception cref="T:System.Windows.Automation.ElementNotEnabledException">所有者控件未启用。</exception>
    </member>
    <member name="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.RichTextBox"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.#ctor(System.Windows.Controls.RichTextBox)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer"/> 类的新实例。 </summary>
<param name="owner">自动化同级的 <see cref="T:System.Windows.Controls.RichTextBox"/> 所有者。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer"/> 关联的控件的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetChildrenCore">
<summary>返回与此 <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.RichTextBox"/> 的子元素集合的自动化对等类。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"/> 调用。</summary>
<returns>子元素的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> 对象列表。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer"/> 关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>类名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer"/> 支持的模式支持请求的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="patternInterface">枚举值之一。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.#ctor(System.Windows.Controls.Primitives.ScrollBar)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer"/> 关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>类名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClickablePointCore">
<summary>获取此控件的可单击点。</summary>
<returns>控件中的可单击点；如果控件中没有可单击点，则为具有 <see cref="F:System.Double.NaN"/> 坐标的点。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetOrientationCore">
<summary>获取与此同级关联的 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 控件的方向。</summary>
<returns>以枚举值的形式显示的滚动条的方向。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.ScrollViewer"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.#ctor(System.Windows.Controls.ScrollViewer)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer"/> 类的新实例。</summary>
<param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer"/> 实例关联的 <see cref="T:System.Windows.Controls.ScrollViewer"/> 实例。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer"/> 实例关联的 <see cref="T:System.Windows.Controls.ScrollViewer"/> 对象的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetClassNameCore">
<summary>获取与此同级关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>关联的类的名称。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此自动化对等类支持的模式支持指定的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="patternInterface">枚举值之一。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.IsControlElementCore">
<summary>获取一个值，该值指示与此同级关联的元素被用户理解为交互式元素，还是理解为组成 UI 中的逻辑结构的一部分。</summary>
<returns>true 值指示所有者控件是交互式控件；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontallyScrollable">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontallyScrollable"/>。</summary>
<returns>如果控件可以水平滚动，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalScrollPercent">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent"/>。</summary>
<returns>以控件中整个内容区域的一个百分比表示的水平滚动位置。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalViewSize">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalViewSize"/>。</summary>
<returns>以控件中整个内容区域的一个百分比表示的可见区域的水平大小。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.IScrollProvider.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)"/>。</summary>
<param name="horizontalAmount">特定于控件的水平增量。</param>
<param name="verticalAmount">特定于控件的垂直增量。</param>
<exception cref="T:System.Windows.Automation.ElementNotEnabledException">所有者控件未启用。</exception>
<exception cref="T:System.InvalidOperationException">特定滚动轴的当前可滚动状态不支持滚动操作。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#SetScrollPercent(System.Double,System.Double)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.IScrollProvider.SetScrollPercent(System.Double,System.Double)"/>。</summary>
<param name="horizontalPercent">以内容区域总范围的一个百分比表示的水平位置。</param>
<param name="verticalPercent">以内容区域总范围的一个百分比表示的垂直位置。</param>
<exception cref="T:System.Windows.Automation.ElementNotEnabledException">所有者控件未启用。</exception>
<exception cref="T:System.InvalidOperationException">特定滚动轴的当前可滚动状态不支持滚动操作。</exception>
<exception cref="T:System.ArgumentOutOfRangeException">指定了小于 0 或大于 100 的输入参数。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticallyScrollable">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticallyScrollable"/>。</summary>
<returns>如果控件可以垂直滚动，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalScrollPercent">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent"/>。</summary>
<returns>以控件中整个内容区域的一个百分比表示的垂直滚动位置。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalViewSize">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalViewSize"/>。</summary>
<returns>以控件中整个内容区域的一个百分比表示的可见区域的垂直大小。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SelectorAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.Primitives.Selector"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.#ctor(System.Windows.Controls.Primitives.Selector)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer"/> 类的新实例。</summary>
<param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.Primitives.Selector"/> 实例。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer"/> 关联的元素的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer"/> 支持的模式支持请求的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="patternInterface">枚举值之一。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple"/>。</summary>
<returns>如果允许多重选择，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection"/>。</summary>
<returns>UI 自动化提供程序的列表。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired"/>。</summary>
<returns>如果需要选择，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.Primitives.Selector"/> 中的项。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
<summary>使用指定的选择器自动化同级初始化 <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer"/> 的新实例。 </summary>
<param name="owner">要与此 <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/> 实例。</param>
<param name="selectorAutomationPeer">获取与包含 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 集合的控件关联的 <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.#ctor(System.Windows.UIElement)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与此 <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer"/> 关联的 <see cref="T:System.Windows.UIElement"/> 实例。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer"/> 支持的模式支持请求的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="patternInterface">枚举值之一。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection"/>。</summary>
<exception cref="T:System.NotImplementedException">所有者元素未启用。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected"/>。</summary>
<returns>如果选定了某个项，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection"/>。</summary>
<exception cref="T:System.NotImplementedException">所有者元素未启用。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select"/>。</summary>
<exception cref="T:System.NotImplementedException">所有者元素未启用。</exception>
<exception cref="T:System.InvalidOperationException">通过相关 <see cref="P:System.Windows.Automation.Peers.ItemAutomationPeer.ItemsControlAutomationPeer"/> 值未找到项的 <see cref="T:System.Windows.Controls.Primitives.Selector"/>。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer"/>。</summary>
<returns>UI 自动化提供程序。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SliderAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.Slider"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.#ctor(System.Windows.Controls.Slider)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.Slider"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer"/> 关联的元素的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer"/> 关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>类名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClickablePointCore">
<summary>获取所有者控件上可单击的点。</summary>
<returns>一个包含所有者控件上的可单击点的 <see cref="T:System.Windows.Point"/> 结构。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextBlockAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.TextBlock"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.#ctor(System.Windows.Controls.TextBlock)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.TextBlock"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.TextBlock"/> 的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer"/> 关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>类名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.TextBlock"/> 的 UI 自动化名称。由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/> 调用。</summary>
<returns>与此自动化对等类关联的对象的 UI 自动化名称。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.IsControlElementCore">
<summary>获取一个值，该值指示与此同级关联的 <see cref="T:System.Windows.Controls.TextBlock"/> 被用户理解为交互式元素，还是理解为组成 UI 的逻辑结构的一部分。</summary>
<returns>如果该元素是所应用的模板的一部分，则为 false；否则为 true。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextBoxAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.TextBox"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.#ctor(System.Windows.Controls.TextBox)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer"/> 类的新实例。</summary>
<param name="owner">与此 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.TextBox"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer"/> 关联的元素的 UI 自动化名称值。由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/> 调用。</summary>
<returns>与此自动化对等类关联的元素的 UI 自动化名称。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer"/> 支持的模式支持请求的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="patternInterface">枚举值之一。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly"/>。</summary>
<returns>如果值为只读的，则为 true；如果可以修改它，则为 false。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)"/>。</summary>
<param name="value">新值。</param>
<exception cref="T:System.Windows.Automation.ElementNotEnabledException">所有者控件未启用。</exception>
<exception cref="T:System.InvalidOperationException">所有者控件是只读的。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="value"/> 作为 null 提供。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IValueProvider.Value"/>。</summary>
<returns>以字符串形式表示的控件值。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ThumbAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.#ctor(System.Windows.Controls.Primitives.Thumb)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与 <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.Primitives.Thumb"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer"/> 关联的元素的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer"/> 关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>类名。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer">
<summary>对 UI 自动化公开 <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/> 类型。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.ToggleButton)">
<summary>初始化 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer"/> 类的新实例。</summary>
<param name="owner">要与此 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer"/> 关联的 <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetAutomationControlTypeCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer"/> 关联的元素的控件类型。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/> 调用。</summary>
<returns>枚举的一个值。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetClassNameCore">
<summary>获取与此 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer"/> 关联的类的名称。此方法由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/> 调用。</summary>
<returns>关联的类的名称。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
<summary>获取一个对象，该对象基于此 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer"/> 支持的模式支持请求的模式。</summary>
<returns>用于实现模式接口的对象；如果指定的模式接口不是由此同等对象实现的，则为 null。</returns>
<param name="patternInterface">指示控件模式的枚举值之一。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#Toggle">
<summary>有关此成员的说明，请参阅 <see cref="M:System.Windows.Automation.Provider.IToggleProvider.Toggle"/>。</summary>
<exception cref="T:System.Windows.Automation.ElementNotEnabledException">所有者控件未启用。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#ToggleState">
<summary>有关此成员的说明，请参阅 <see cref="P:System.Windows.Automation.Provider.IToggleProvider.ToggleState"/>。</summary>
<returns>控件的切换状态。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IDockProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过这些方法和属性来访问在某个停靠容器内公开其停靠属性的控件。 </summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IDockProvider.DockPosition">
<summary>获取控件在停靠容器内的当前 <see cref="T:System.Windows.Automation.DockPosition"/>。</summary>
<returns>控件相对于停靠容器的边界以及容器内其他元素的 <see cref="T:System.Windows.Automation.DockPosition"/>。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IDockProvider.SetDockPosition(System.Windows.Automation.DockPosition)">
<summary>在停靠容器内停靠控件。</summary>
<param name="dockPosition">相对于停靠容器的边界以及容器内其他元素的停靠位置。</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IExpandCollapseProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过这些方法和属性访问能够以可视方式进行展开（以显示内容）和折叠（以隐藏内容）的控件。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse">
<summary>隐藏属于控件子代的所有节点、控件或内容。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Expand">
<summary>显示控件的所有子级节点、控件或内容。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState">
<summary>获取控件的状态（展开或折叠）。</summary>
<returns>控件的状态（展开或折叠）。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IGridItemProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过这些方法和属性访问实现 <see cref="T:System.Windows.Automation.Provider.IGridProvider"/> 的容器的各个子控件。 </summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.Column">
<summary>获取包含单元格或项的列的序号。</summary>
<returns>一个从零开始的序号，标识包含该单元格或项的列。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan">
<summary>获取单元格或项跨的列数。</summary>
<returns>列数。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid">
<summary>获取一个 UI 自动化提供程序，它实现 <see cref="T:System.Windows.Automation.Provider.IGridProvider"/> 并表示单元格或项的容器。</summary>
<returns>一个 UI 自动化提供程序，它实现 <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid"/> 控件模式并表示单元格或项容器。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.Row">
<summary>获取包含单元格或项的行的序号。</summary>
<returns>一个从零开始的序号，标识包含该单元格或项的行。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.RowSpan">
<summary>获取某个单元格或项跨的行数。</summary>
<returns>行数。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IGridProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过这些方法和属性访问充当某个子元素集合的容器的控件。 </summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount">
<summary>获取网格中的总列数。</summary>
<returns>网格中的总列数。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)">
<summary>检索指定单元格的 UI 自动化提供程序。</summary>
<returns>指定单元格的 UI 自动化提供程序。</returns>
<param name="row">包含单元格的行的序号。</param>
<param name="column">包含单元格的列的序号。</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridProvider.RowCount">
<summary>获取网格中的总行数。</summary>
<returns>网格中的总行数。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IInvokeProvider">
<summary>公开一个方法，UI 自动化可通过该方法访问发起或执行一个明确操作并且在激活后不维护状态的控件。 </summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
<summary>发送一个请求，以激活控件并启动控件的单个明确操作。</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IMultipleViewProvider">
<summary>公开一些方法和属性，UI 自动化客户端可以通过这些方法和属性访问提供同一组信息或子控件的多种表示方式（并能够在这些表示方式之间切换）的控件。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView">
<summary>获取特定于控件的当前视图。</summary>
<returns>UI 自动化元素的当前视图的值 (<paramref name="viewId"/>)。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews">
<summary>检索一个特定于控件的视图标识符集合。</summary>
<returns>一个值的集合，该集合标识了可用于 UI 自动化元素的视图。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName(System.Int32)">
<summary>检索特定于控件的视图的名称。</summary>
<returns>视图的本地化名称。</returns>
<param name="viewId">视图标识符。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView(System.Int32)">
<summary>设置当前的特定于控件的视图。 </summary>
<param name="viewId">一个视图标识符。</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRangeValueProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过这些方法和属性来访问能够设置为某个范围中的一个值的控件。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly">
<summary>获取一个值，该值指示控件的值是否为只读的。 </summary>
<returns>如果值为只读的，则为 true；如果可以修改它，则为 false。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange">
<summary>获取一个值，当发生大更改时（例如按下了 Page Down 键），会将 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/> 属性加上该值或从中减去该值。</summary>
<returns>控件支持的大更改值；如果控件不支持 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange"/>，则为 null。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum">
<summary>获取控件支持的最大范围值。</summary>
<returns>控件支持的最大值；如果控件不支持 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum"/>，则为 null。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum">
<summary>获取控件支持的最小范围值。</summary>
<returns>控件支持的最小值；如果控件不支持 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum"/>，则为 null。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
<summary>设置控件的值。</summary>
<param name="value">要设置的值。</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange">
<summary>获取一个值，当发生小更改时（例如按下了某个箭头键），会将 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/> 属性加上该值或从中减去该值。</summary>
<returns>控件支持的小更改值；如果控件不支持 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange"/>，则为 null。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Value">
<summary>获取控件的值。</summary>
<returns>控件的值；如果控件不支持 <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value"/>，则为 null。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderSimple">
<summary>提供了公开 UI 元素基本信息的方法和属性。</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IScrollItemProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过这些方法和属性访问实现 <see cref="T:System.Windows.Automation.Provider.IScrollProvider"/> 的容器的各个子控件。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView">
<summary>滚动容器对象的内容区域，以便在容器的可见区域（视区）中显示控件。</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IScrollProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过这些方法和属性访问作为一个子对象集合的可滚动容器的控件。此控件的子控件必须实现 <see cref="T:System.Windows.Automation.Provider.IScrollItemProvider"/>。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontallyScrollable">
<summary>获取一个值，该值指示控件是否可以水平滚动。</summary>
<returns>如果控件可以水平滚动，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent">
<summary>获取当前水平滚动位置。</summary>
<returns>以控件内整个内容区域的一个百分比表示的水平滚动位置。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalViewSize">
<summary>获取当前的水平视图大小。</summary>
<returns>以控件内整个内容区域的一个百分比表示的可见区域的水平大小。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollProvider.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
<summary>水平、垂直或两个方向同时滚动内容区域的可见区域。</summary>
<param name="horizontalAmount">特定于控件的水平增量。如果控件不能沿此方向滚动，则传递 <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll"/>。</param>
<param name="verticalAmount">特定于控件的垂直增量。如果控件不能沿此方向滚动，则传递 <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll"/>。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollProvider.SetScrollPercent(System.Double,System.Double)">
<summary>将水平和垂直滚动位置设置为控件内整个内容区域的一个百分比。</summary>
<param name="horizontalPercent">以内容区域总范围的一个百分比表示的水平位置。如果控件不能沿此方向滚动，则传递 <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll"/>。</param>
<param name="verticalPercent">以内容区域总范围的一个百分比表示的垂直位置。如果控件不能沿此方向滚动，则传递 <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll"/>。</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticallyScrollable">
<summary>获取一个值，该值指示控件是否可以垂直滚动。</summary>
<returns>如果控件可以垂直滚动，则为 true；否则为 false。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent">
<summary>获取当前垂直滚动位置。</summary>
<returns>以控件内整个内容区域的一个百分比表示的垂直滚动位置。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticalViewSize">
<summary>获取垂直视图的大小。</summary>
<returns>以控件内整个内容区域的一个百分比表示的可见区域的垂直大小。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISelectionItemProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过这些方法和属性访问实现 <see cref="T:System.Windows.Automation.Provider.ISelectionProvider"/> 的容器的各个可选择的子控件。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection">
<summary>将当前元素添加到所选项的集合。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected">
<summary>获取一个值，该值指示某个项是否处于选定状态。 </summary>
<returns>如果选定此元素，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection">
<summary>从选定项的集合中移除当前元素。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select">
<summary>清除任何现有选择，然后选择当前元素。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer">
<summary>获取实现 <see cref="T:System.Windows.Automation.Provider.ISelectionProvider"/> 并且充当调用对象的容器的 UI 自动化提供程序。</summary>
<returns>UI 自动化提供程序。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISelectionProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过这些方法和属性访问作为单个可选择子项集合的容器的控件。此控件的子控件必须实现 <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider"/>。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple">
<summary>获取一个值，该值指示 UI 自动化提供程序是否允许同时选择多个子元素。</summary>
<returns>如果允许多重选择，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection">
<summary>检索选择的每个子元素的 UI 自动化提供程序。</summary>
<returns>UI 自动化提供程序的泛型列表。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired">
<summary>获取一个值，该值指示 UI 自动化提供程序是否要求至少选择一个子元素。</summary>
<returns>如果需要选择，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITableItemProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过这些方法和属性访问实现 <see cref="T:System.Windows.Automation.Provider.ITableProvider"/> 的容器的子控件。 </summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableItemProvider.GetColumnHeaderItems">
<summary>检索 UI 自动化提供程序（表示与某一表项或单元格关联的所有列标题）的数组。</summary>
<returns>UI 自动化提供程序的数组。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableItemProvider.GetRowHeaderItems">
<summary>检索 UI 自动化提供程序（表示与某一表项或单元格关联的所有行标题）的数组。</summary>
<returns>UI 自动化提供程序的数组。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITableProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过这些方法和属性访问充当某个子元素集合的容器的控件。此元素的子级必须实现 <see cref="T:System.Windows.Automation.Provider.ITableItemProvider"/>，而且必须组织在可以使用键盘进行遍历的一个二维逻辑坐标系中（UI 自动化客户端可以移动到相邻控件，而这些控件是表的标题或单元格）。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableProvider.GetColumnHeaders">
<summary>返回一个表示表格中所有列标题的 UI 自动化提供程序的集合。</summary>
<returns>UI 自动化提供程序的数组。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableProvider.GetRowHeaders">
<summary>返回一个表示表格中所有行标题的 UI 自动化提供程序的集合。</summary>
<returns>UI 自动化提供程序的数组。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITableProvider.RowOrColumnMajor">
<summary>获取表格的首要遍历方向。</summary>
<returns>作为枚举值的首要遍历方向。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITextProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过这些方法和属性访问包含文本的控件。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange">
<summary>获取包含文档主文本的文本范围。 </summary>
<returns>包含文档主文本的文本范围。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.GetSelection">
<summary>检索与当前文本选择（或多个文本选择）关联的不连续文本范围的集合。 </summary>
<returns>不连续文本范围的集合。</returns>
<exception cref="T:System.InvalidOperationException">如果 UI 自动化提供程序不支持文本选择。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.GetVisibleRanges">
<summary>从文本容器中检索一个不连续文本范围的数组。每个文本范围都以第一个部分可见的行开始，以最后一个部分可见的行结束。 </summary>
<returns>容器内可见文本范围的集合或者一个空数组。此方法从不返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.RangeFromChild(System.Windows.Automation.Provider.IRawElementProviderSimple)">
<summary>检索包含子元素（例如图像、超链接或其他嵌入对象）的一个文本范围。 </summary>
<returns>涵盖子元素的一个范围。</returns>
<param name="childElement">所包含的对象。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.RangeFromPoint(System.Windows.Point)">
<summary>返回与指定屏幕坐标最接近的退化（空）文本范围。 </summary>
<returns>与指定位置最接近的退化范围。此方法从不返回 null。</returns>
<param name="screenLocation">以屏幕坐标的形式表示的位置。 </param>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection">
<summary>获取一个指定文本提供程序是否支持文本选择的值，并在支持文本选择的情况下获取所支持的选择的类型。</summary>
<returns><see cref="T:System.Windows.Automation.SupportedTextSelection"/> 的值。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITextRangeProvider">
<summary>公开一些方法和属性，以支持 UI 自动化客户端访问用于实现 <see cref="T:System.Windows.Automation.Provider.ITextProvider"/> 的文本容器中的一段连续文本。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection">
<summary>添加到突出显示文本集合中，该集合位于支持多个不连续选择的文本容器中。</summary>
<exception cref="T:System.InvalidOperationException">文本提供程序不支持多个不连续选择。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone">
<summary>返回与原始 <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider"/> 相同并且继承了其所有属性的一个新的 <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider"/>。 </summary>
<returns>新的文本范围。此方法从不返回 null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)">
<summary>返回一个值，该值指示文本范围的跨度（<see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start"/> 终结点到 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End"/> 终结点）是否与另一个文本范围相同。 </summary>
<returns>如果两个文本范围的跨度相同，则为 true；否则为 false。 </returns>
<param name="range">要比较的文本范围。</param>
<exception cref="T:System.ArgumentException">进行比较的范围不是来自同一个文本提供程序。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
<summary>返回一个指出两个文本范围是否具有相同终结点的值。</summary>
<returns>如果调用方的终结点在文本中比目标终结点先出现，则返回一个负值。如果调用方的终结点与目标终结点处于同一位置，则返回零。如果调用方的终结点在文本中比目标终结点后出现，则返回一个正值。 </returns>
<param name="endpoint">调用方的 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start"/> 或 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End"/> 终结点。</param>
<param name="targetRange">要进行比较的目标范围。</param>
<param name="targetEndpoint">目标的 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start"/> 或 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End"/> 终结点。</param>
<exception cref="T:System.ArgumentException"><paramref name="targetRange"/> 来自不同的文本提供程序。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
<summary>将文本范围扩展到指定的文本单位。</summary>
<param name="unit">文本单位。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
<summary>返回具有指定属性 ID 和属性值的文本范围子集。 </summary>
<returns>一个具有匹配属性 ID 和属性值的文本范围；否则为 null。 </returns>
<param name="attributeId">要搜索的属性 ID。</param>
<param name="value">要搜索的属性值。此值必须与指定的特性类型匹配。 </param>
<param name="backward">如果应该返回最后一个匹配的文本范围而不是第一个，则为 true；否则为 false。 </param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
<summary>返回包含指定文本的文本范围子集。</summary>
<returns>一个与指定文本匹配的文本范围；否则为 null。</returns>
<param name="text">要搜索的文本字符串。</param>
<param name="backward">如果返回最后一个匹配的文本范围而不是第一个，则为 true；否则为 false。</param>
<param name="ignoreCase">如果忽略大小写，则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
<summary>检索整个文本范围内指定属性 ID 的值。 </summary>
<returns>检索一个表示指定属性的值的对象。请参阅“备注”。</returns>
<param name="attributeId">文本属性 ID。</param>
<exception cref="T:System.ArgumentException">指定的属性 ID 无效。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles">
<summary>检索由文本范围中每个完全或部分可见的文本行的边框组成的集合。</summary>
<returns>文本范围中每个完全或部分可见的文本行的边框组成的数组。请参阅“备注”。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren">
<summary>检索文本范围内存在的所有嵌入对象的集合。 </summary>
<returns>文本范围内存在的子对象的集合。与文本范围发生重叠但是并未完全包括在文本范围内的子对象也会包括在该集合中。如果不存在任何子对象，则返回一个空集合。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement">
<summary>返回包含该文本范围的最内层元素。 </summary>
<returns>包含控件，通常是提供该文本范围的文本提供程序。但是，如果文本提供程序支持表格或超链接这样的子文本元素，则包含元素可能为文本提供程序的子代。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
<summary>检索文本范围的纯文本。 </summary>
<returns>文本范围的纯文本（可能表示在指定 <paramref name="maxLength"/> 处截断的完整字符串的一部分）。 </returns>
<param name="maxLength">要返回的字符串的最大长度。使用 -1 可指定不受限制的长度。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
<paramref name="maxLength"/> 小于 -1。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
<summary>将文本范围移动指定数量的文本单位。</summary>
<returns>实际移动的单位数。如果新的文本范围终结点大于或小于 <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange"/> 终结点，则它可能小于请求的 <paramref name="count"/>。 </returns>
<param name="unit">文本单位的边界。</param>
<param name="count">要移动的文本单位数。正值表示将文本范围向前移动；负值则表示将文本范围向后移动；如果值为 0，则不会进行任何移动。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
<summary>将文本范围的一个终结点移动到第二个文本范围的指定终结点。 </summary>
<param name="endpoint">要移动的终结点。</param>
<param name="targetRange">同一文本提供程序中的另一个范围。</param>
<param name="targetEndpoint">另一个范围中的终结点。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
<summary>在文档范围内将文本范围的一个终结点移动指定数量的文本单位。 </summary>
<returns>实际移动的单位数。如果移动终结点超出了文档的开始或末尾，则该值可能小于请求的 <paramref name="count"/>。</returns>
<param name="endpoint">要移动的终结点。</param>
<param name="unit">移动时使用的文本单位。</param>
<param name="count">要移动的单位数。正值表示将终结点向前移动；负值则表示将终结点向后移动；如果值为 0，则不会进行任何移动。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
<summary>从支持多个不连续选择的文本容器中的突出显示文本集合中，移除与调用方的 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start"/> 和 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End"/> 终结点对应的突出显示文本部分。</summary>
<exception cref="T:System.InvalidOperationException">文本提供程序不支持多个不连续选择。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
<summary>导致文本控件垂直滚动，直到文本范围在视区中可见。  </summary>
<param name="alignToTop">如果文本控件应该滚动以便文本范围与视区顶部对齐，则为 true；如果文本范围与视区的底部对齐，则为 false。 </param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Select">
<summary>突出显示文本控件中与文本范围的 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start"/> 和 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End"/> 终结点对应的文本。 </summary>
<exception cref="T:System.InvalidOperationException">文本控件不支持选择文本。</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IToggleProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过它们访问循环通过一组状态并保持某个特定状态的控件。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IToggleProvider.Toggle">
<summary>循环通过控件的多个切换状态。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IToggleProvider.ToggleState">
<summary>获取控件的切换状态。</summary>
<returns>作为枚举值的控件的切换状态。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITransformProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过这些方法和属性访问可以在二维空间中移动、调整大小或旋转的控件或元素。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanMove">
<summary>获取一个值，该值指示元素是否可移动。</summary>
<returns>如果元素可移动，则为 true；否则为 false。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanResize">
<summary>获取一个值，该值指示元素是否可以调整大小。</summary>
<returns>如果元素可调整大小，则为 true；否则为 false。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate">
<summary>获取一个值，该值指示元素是否可以旋转。</summary>
<returns>如果元素可旋转，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)">
<summary>移动控件。</summary>
<param name="x">控件左侧的绝对屏幕坐标。</param>
<param name="y">控件顶部的绝对屏幕坐标。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)">
<summary>调整控件大小。 </summary>
<param name="width">窗口的新宽度（以像素为单位）。</param>
<param name="height">窗口的新高度（以像素为单位）。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)">
<summary>旋转控件。</summary>
<param name="degrees">控件的旋转角度。正值表示顺时针旋转控件。负值表示逆时针旋转控件。</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IValueProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过这些方法和属性访问具有某个内部值的控件，该内部值不跨越某个范围而且可以表示为字符串。 </summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly">
<summary>获取一个值，该值指示控件的值是否为只读的。 </summary>
<returns>如果值为只读的，则为 true；如果可以修改它，则为 false。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
<summary>设置控件的值。</summary>
<param name="value">要设置的值。提供程序负责将该值转换为适当的数据类型。</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IValueProvider.Value">
<summary>获取控件的值。</summary>
<returns>控件的值。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IWindowProvider">
<summary>公开一些方法和属性，UI 自动化客户端可通过它们访问传统图形用户界面 (GUI) 内提供基于窗口的重要功能的控件。 </summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.Close">
<summary>关闭窗口。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState">
<summary>获取窗口的交互状态。 </summary>
<returns>作为枚举值的控件的交互状态。 </returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.IsModal">
<summary>获取一个值，该值指定窗口是否为模式窗口。</summary>
<returns>如果窗口为模式窗口，则为 true；否则为 true。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost">
<summary>获取一个值，该值指定窗口是否为布局的 z 顺序中的最顶层元素。</summary>
<returns>如果窗口为最顶层，则为 true；否则为 true。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable">
<summary>获取一个值，该值指定窗口是否可以最大化。</summary>
<returns>如果窗口可以最大化，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable">
<summary>获取一个值，该值指定窗口是否可以最小化。 </summary>
<returns>如果窗口可以最小化，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)">
<summary>更改窗口的可视状态（例如，最小化或最大化窗口）。</summary>
<param name="state">作为枚举值的窗口要更改为的可视状态。</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.VisualState">
<summary>获取窗口的可视状态。 </summary>
<returns>作为枚举值的窗口的可视状态。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
<summary>阻止调用代码指定的时间，或者一直保持在阻止状态，直到关联进程进入空闲状态（以首先达到的条件为准）。 </summary>
<returns>如果窗口已进入空闲状态，则为 true；如果发生超时。则为 false。</returns>
<param name="milliseconds">等待关联进程变为空闲的时间（以毫秒为单位）。</param>
    </member>
    <member name="T:System.Windows.Automation.Text.TextPatternRangeEndpoint">
<summary>标识 <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider"/> 的方法的文本范围终结点。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start">
<summary>范围的起点。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End">
<summary>范围的终结点。 </summary>
    </member>
    <member name="T:System.Windows.Automation.Text.TextUnit">
<summary>表示为了在文档中进行导航而预先定义的文本单位。 </summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Character">
<summary>指定文本单位的长度为一个字符。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Format">
<summary>指定文本单位的长度为单个常见格式规范（例如，粗体、斜体等）的长度。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Word">
<summary>指定文本单位的长度为一个单词。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Line">
<summary>指定文本单位的长度为一个文本行。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Paragraph">
<summary>指定文本单位的长度为一个段落。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Page">
<summary>指定文本单位的长度为特定于文档的一个页面。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Document">
<summary>指定文本单位的长度为整个文档。</summary>
    </member>
    <member name="T:System.Windows.Controls.Border">
<summary>在另一个对象的周围绘制边框、背景或同时绘制二者。</summary>
    </member>
    <member name="M:System.Windows.Controls.Border.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Border"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.Border.Background">
<summary>获取或设置填充边框背景的 <see cref="T:System.Windows.Media.Brush"/>。</summary>
<returns>填充背景的画笔。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BackgroundProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Border.Background"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Border.Background"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.BorderBrush">
<summary>获取或设置用于创建边框的 <see cref="T:System.Windows.Media.Brush"/>。</summary>
<returns>填充边框的画笔。  </returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BorderBrushProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Border.BorderBrush"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Border.BorderBrush"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.BorderThickness">
<summary>获取或设置边框的粗细。</summary>
<returns>边框的粗细，以像素为单位。默认情况下，四个边的粗细都为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BorderThicknessProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Border.BorderThickness"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Border.BorderThickness"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.Child">
<summary>获取或设置要在其周围绘制边框的子元素。</summary>
<returns>要将边框应用到的 <see cref="T:System.Windows.UIElement"/>。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.CornerRadius">
<summary>获取或设置边框的角的半径。</summary>
<returns>角变圆的程度。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.CornerRadiusProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Border.CornerRadius"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Border.CornerRadius"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.Padding">
<summary>获取或设置边框与其子对象之间的距离。</summary>
<returns>边框与其子级之间的空间尺寸，为 <see cref="T:System.Windows.Thickness"/> 值。<see cref="T:System.Windows.Thickness"/> 值以像素为单位。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.PaddingProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Border.Padding"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Border.Padding"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Button">
<summary>表示按钮控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Button"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Button.OnClick">
<summary>引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"/> 事件。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Button.OnCreateAutomationPeer">
<summary>返回 <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer"/> 以便由 Silverlight 自动化基础结构使用。</summary>
      <returns>
<see cref="T:System.Windows.Controls.Button"/> 对象的 <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer"/>。</returns>
    </member>
    <member name="T:System.Windows.Controls.Canvas">
<summary>定义一个区域，在该区域中可以使用相对于该区域的坐标显式定位子对象。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Canvas"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.ArrangeOverride(System.Windows.Size)">
<summary>提供 Silverlight 布局的“排列”处理过程的行为。</summary>
<returns>所用的实际大小。</returns>
<param name="arrangeSize">该对象为排列其子对象所应使用的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetLeft(System.Windows.UIElement)">
<summary>获取给定对象的 <see cref="P:System.Windows.Controls.Canvas.Left"/> 附加属性的值。 </summary>
<returns>指定对象的 <see cref="P:System.Windows.Controls.Canvas.Left"/> 值。</returns>
<param name="element">从中读取属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetTop(System.Windows.UIElement)">
<summary>获取给定对象的 <see cref="P:System.Windows.Controls.Canvas.Top"/> 附加属性的值。 </summary>
<returns>指定对象的 <see cref="P:System.Windows.Controls.Canvas.Top"/> 值。</returns>
<param name="element">从中读取属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetZIndex(System.Windows.UIElement)">
<summary>获取给定对象的 <see cref="P:System.Windows.Controls.Canvas.ZIndex"/> 附加属性的值。 </summary>
<returns>请求的对象的 <see cref="P:System.Windows.Controls.Canvas.ZIndex"/> 值。<see cref="P:System.Windows.Controls.Canvas.ZIndex"/> 的最大允许值为 Int16.MaxValue – 1 = 32766。</returns>
<param name="element">从中读取属性值的对象。</param>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Left">
<summary>获取或设置某对象的左边缘与其父 <see cref="T:System.Windows.Controls.Canvas"/> 的左边缘之间的距离。</summary>
<returns>相对于父 <see cref="T:System.Windows.Controls.Canvas"/> 的左边缘的偏移位置，单位为像素。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.LeftProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Canvas.Left"/> 附加属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Canvas.Left"/> 附加属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.MeasureOverride(System.Windows.Size)">
<summary>提供 Silverlight 布局的“度量”处理过程的行为。</summary>
<returns>此对象在布局过程中基于其对子对象分配大小的计算而确定的它所需的大小。</returns>
<param name="constraint">此对象可以赋给子对象的可用大小。可以指定无穷大值，这表示对象的大小将调整为可用内容的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetLeft(System.Windows.UIElement,System.Double)">
<summary>设置给定对象的 <see cref="P:System.Windows.Controls.Canvas.Left"/> 附加属性的值。 </summary>
<param name="element">向其中写入属性值的对象。</param>
<param name="length">指定元素的 <see cref="P:System.Windows.Controls.Canvas.Left"/> 值。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetTop(System.Windows.UIElement,System.Double)">
<summary>设置给定对象的 <see cref="P:System.Windows.Controls.Canvas.Top"/> 附加属性的值。 </summary>
<param name="element">向其中写入属性值的对象。</param>
<param name="length">指定对象的 <see cref="P:System.Windows.Controls.Canvas.Top"/> 值。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetZIndex(System.Windows.UIElement,System.Int32)">
<summary>设置给定对象的 <see cref="P:System.Windows.Controls.Canvas.ZIndex"/> 附加属性的值。 </summary>
<param name="element">向其中写入属性值的对象。<see cref="P:System.Windows.Controls.Canvas.ZIndex"/> 的最大允许值为 Int16.MaxValue – 1 = 32766。</param>
<param name="value">指定对象的 <see cref="P:System.Windows.Controls.Canvas.ZIndex"/> 值。</param>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Top">
<summary>获取或设置某元素的上边缘与其父 <see cref="T:System.Windows.Controls.Canvas"/> 的上边缘之间的距离。 </summary>
<returns>相对于父 <see cref="T:System.Windows.Controls.Canvas"/> 的上边缘的偏移位置，单位为像素。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.TopProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Canvas.Top"/> 附加属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Canvas.Top"/> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Canvas.ZIndex">
<summary>获取或设置 <see cref="T:System.Windows.Controls.Canvas"/> 中对象的 z 顺序呈现行为。 </summary>
<returns><see cref="T:System.Windows.Controls.Canvas"/> 中对象的 z 顺序。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.ZIndexProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Canvas.ZIndex"/> 附加属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Canvas.ZIndex"/> 附加属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.CheckBox">
<summary>表示用户可以选择（选中）或清除（不选中）的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.CheckBox"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.OnCreateAutomationPeer">
<summary>返回 <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer"/> 以便由 Silverlight 自动化基础结构使用。</summary>
<returns>复选框对象的 <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer"/>。</returns>
    </member>
    <member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs">
<summary>为 <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent"/> 事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Cancel">
<summary>获取或设置一个值，该值指示是否不应重新虚拟化此项。</summary>
<returns>若要阻止重新虚拟化此项，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.UIElement">
<summary>获取表示数据值的可见元素的实例。</summary>
<returns>表示数据值的 <see cref="T:System.Windows.UIElement"/>。</returns>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Value">
<summary>获取表示原始数据值的 <see cref="T:System.Object"/>。</summary>
<returns>获取表示原始数据值的 <see cref="T:System.Object"/>。</returns>
    </member>
    <member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent"/> 附加事件的方法。</summary>
<param name="sender">事件的源。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.ClickMode">
<summary>指定应在何时引发针对控件的 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"/> 事件。 </summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Release">
<summary>指定当按下并松开鼠标左键且鼠标指针位于控件上方时应引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"/> 事件。如果使用的是键盘，则指定在按下并松开空格键或 Enter 键且控件具有键盘焦点时应引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"/> 事件。</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Press">
<summary>指定在按下鼠标按键且鼠标指针位于控件上方时应引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"/> 事件。如果使用的是键盘，则指定在按下空格键或 Enter 且控件具有键盘焦点时应引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"/> 事件。</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Hover">
<summary>指定当鼠标指针在控件上移动时应引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"/> 事件。 </summary>
    </member>
    <member name="T:System.Windows.Controls.ColumnDefinition">
<summary>定义应用于 <see cref="T:System.Windows.Controls.Grid"/> 对象的特定于列的属性。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinition.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.ColumnDefinition"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.ActualWidth">
<summary>获取一个值，该值表示 <see cref="T:System.Windows.Controls.ColumnDefinition"/> 的实际计算宽度。 </summary>
<returns>一个 <see cref="T:System.Double"/>，表示以像素为单位的实际计算宽度。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.MaxWidth">
<summary>获取或设置一个表示 <see cref="T:System.Windows.Controls.ColumnDefinition"/> 的最大宽度的值。</summary>
<returns>一个 <see cref="T:System.Double"/>，表示以像素为单位的最大宽度。默认值为 <see cref="F:System.Double.PositiveInfinity"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.MaxWidthProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ColumnDefinition.MaxWidth"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ColumnDefinition.MaxWidth"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.MinWidth">
<summary>获取或设置一个值，该值表示 <see cref="T:System.Windows.Controls.ColumnDefinition"/> 的最小宽度。 </summary>
<returns>一个 <see cref="T:System.Double"/>，表示以像素为单位的最小宽度。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.MinWidthProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.Width">
<summary>获取 <see cref="T:System.Windows.Controls.ColumnDefinition"/> 元素的计算宽度，或设置由 <see cref="T:System.Windows.Controls.ColumnDefinition"/> 定义的列的 <see cref="T:System.Windows.GridLength"/> 值。 </summary>
<returns>表示列的宽度的 <see cref="T:System.Windows.GridLength"/>。默认值为 1.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.WidthProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ColumnDefinition.Width"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ColumnDefinition.Width"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ColumnDefinitionCollection">
<summary>提供对 <see cref="T:System.Windows.Controls.ColumnDefinition"/> 对象的有序强类型集合的访问。</summary>
    </member>
    <member name="T:System.Windows.Controls.ComboBox">
<summary>表示一个选择控件，该控件组合一个不可编辑的文本框和一个下拉项，该下拉项包含一个允许用户从列表中选择项的列表框。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.ComboBox"/> 类的新实例。 . </summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.ArrangeOverride(System.Windows.Size)">
<summary>排列组合框控件及其内容并设置其大小。</summary>
<returns>组合框的实际大小。</returns>
<param name="arrangeBounds">组合框控件允许的大小。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
<summary>移除显示为 <see cref="T:System.Windows.Controls.ComboBoxItem"/> 的对象的所有模板、样式和绑定。</summary>
<param name="element">要清除的容器元素。</param>
<param name="item">在 <see cref="T:System.Windows.Controls.ComboBoxItem"/> 中包含的项。</param>
    </member>
    <member name="E:System.Windows.Controls.ComboBox.DropDownClosed">
<summary>当关闭组合框的下拉部分时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.ComboBox.DropDownOpened">
<summary>当打开组合框的下拉部分时发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.GetContainerForItemOverride">
<summary>检索空的组合框项。</summary>
<returns>空的组合框项。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsDropDownOpen">
<summary>获取或设置一个值，该值指示组合框的下拉部分当前是否已打开。</summary>
<returns>如果下拉部分已打开，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsDropDownOpenProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsEditable">
<summary>获取或设置一个值，该值指示用户是否可以在组合框的文本框部分中编辑文本。此属性始终返回 false。</summary>
<returns>在任何情况下均为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.IsItemItsOwnContainerOverride(System.Object)">
<summary>确定指定项是否为自身的项容器，或是否可以作为其自身的项容器。 </summary>
<returns>如果此项为 <see cref="T:System.Windows.Controls.ComboBoxItem"/>，则为 true；否则为 false。默认值为 false。</returns>
<param name="item">要评估的项。</param>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsSelectionActiveProperty">
<summary>标识 IsSelectionActive 附加属性。</summary>
<returns>IsSelectionActive 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted">
<summary>获取一个指示是否突出显示 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem"/> 的值。</summary>
<returns>如果 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem"/> 突出显示，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.ItemContainerStyle">
<summary>获取或设置一个样式，该样式应用于为组合框中的每个项生成的容器。</summary>
<returns>一个样式，该样式应用于为组合框中的每个项生成的容器。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.ItemContainerStyleProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ComboBox.ItemContainerStyle"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ComboBox.ItemContainerStyle"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.MaxDropDownHeight">
<summary>获取或设置用于列出组合框项的下拉项的最大高度。</summary>
<returns>用于列出组合框项的下拉项的最大高度。默认值为无穷大。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.ComboBox"/> 的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnCreateAutomationPeer">
<summary>返回 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer"/> 以便由 Silverlight 自动化基础结构使用。</summary>
<returns><see cref="T:System.Windows.Controls.ComboBox"/> 对象的 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer"/>。</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnDropDownClosed(System.EventArgs)">
<summary>引发 <see cref="E:System.Windows.Controls.ComboBox.DropDownClosed"/> 事件。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnDropDownOpened(System.EventArgs)">
<summary>引发 <see cref="E:System.Windows.Controls.ComboBox.DropDownOpened"/> 事件。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnGotFocus(System.Windows.RoutedEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.GotFocus"/> 事件提供处理。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.KeyDown"/> 事件提供处理。</summary>
<param name="e">事件数据</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnLostFocus(System.Windows.RoutedEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.LostFocus"/> 事件提供处理。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
<summary>为当鼠标指针进入此控件时发生的 <see cref="E:System.Windows.UIElement.MouseEnter"/> 事件提供处理。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
<summary>为当鼠标指针离开组合框时发生的 <see cref="E:System.Windows.UIElement.MouseLeave"/> 事件提供处理。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
<summary>为在鼠标指针悬停在组合框上方的情况下按下鼠标左键时发生的 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> 事件提供处理。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.MouseWheel"/> 事件提供处理。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Input.MouseWheelEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
<summary>准备指定元素以显示指定项。</summary>
<param name="element">用于显示指定项的容器元素。</param>
<param name="item">要显示的项。</param>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItem">
<summary>获取在选择框中显示的项。</summary>
<returns>在选择框中显示的项。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate">
<summary>获取应用于选择框内容的模板。 </summary>
<returns>应用于选择框内容的模板。</returns>
    </member>
    <member name="T:System.Windows.Controls.ComboBoxItem">
<summary>表示 <see cref="T:System.Windows.Controls.ComboBox"/> 控件中包含的一个可选择项。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.ComboBoxItem"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> 事件提供处理。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.ContentChangedEventArgs">
<summary>为 <see cref="E:System.Windows.Controls.RichTextBox.ContentChanged"/> 事件提供数据。 </summary>
    </member>
    <member name="T:System.Windows.Controls.ContentChangedEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.Controls.RichTextBox.ContentChanged"/> 事件的方法。</summary>
<param name="sender">事件处理程序所附加到的对象。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.ContentControl">
<summary>表示包含单项内容的控件。像 <see cref="T:System.Windows.Controls.Button"/>、<see cref="T:System.Windows.Controls.CheckBox"/> 和 <see cref="T:System.Windows.Controls.ScrollViewer"/> 这样的控件直接或间接继承自该类。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.ContentControl"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.Content">
<summary>获取或设置 <see cref="T:System.Windows.Controls.ContentControl"/> 依赖项属性的值。</summary>
<returns>一个包含控件内容的对象。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ContentControl.Content"/> 依赖项属性 </summary>
<returns><see cref="P:System.Windows.Controls.ContentControl.Content"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.ContentTemplate">
<summary>获取或设置用于显示 <see cref="T:System.Windows.Controls.ContentControl"/> 内容的数据模板。</summary>
<returns>用于显示 <see cref="T:System.Windows.Controls.ContentControl"/> 内容的数据模板。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentTemplateProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate"/> 依赖项属性 </summary>
<returns><see cref="P:System.Windows.Controls.ContentControl.ContentTemplate"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
<summary>当 <see cref="P:System.Windows.Controls.ContentControl.Content"/> 属性的值更改时调用。 </summary>
<param name="oldContent"><see cref="P:System.Windows.Controls.ContentControl.Content"/> 属性的旧值。</param>
<param name="newContent"><see cref="P:System.Windows.Controls.ContentControl.Content"/> 属性的新值。</param>
    </member>
    <member name="T:System.Windows.Controls.ContentPresenter">
<summary>显示 <see cref="T:System.Windows.Controls.ContentControl"/> 的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.ContentPresenter"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.Content">
<summary>获取或设置用于生成 <see cref="T:System.Windows.Controls.ContentPresenter"/> 的子元素的数据。</summary>
<returns>用于生成子元素的数据。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.Content"/> 依赖项属性 </summary>
<returns><see cref="P:System.Windows.Controls.ContentPresenter.Content"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentTemplate">
<summary>获取或设置用于显示控件内容的模板。</summary>
<returns>一个 <see cref="T:System.Windows.DataTemplate"/>，它定义内容的可视化处理。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentTemplateProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Control">
<summary>表示用户界面元素的基类，这些元素使用 <see cref="T:System.Windows.Controls.ControlTemplate"/> 来定义其外观。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Control.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Control"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Control.ApplyTemplate">
<summary>加载相关的控件模板，以便可以引用其部件。</summary>
<returns>返回一个指示此调用是否重新构建可视化树的值。如果该值为 true，则指示重新构建可视化树；如果该值为 false，则指示保留上一个可视化树。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Background">
<summary>获取或设置一个用于提供控件背景的画笔。</summary>
<returns>用于提供控件的背景的画笔。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BackgroundProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.Background"/> 依赖项属性 </summary>
<returns><see cref="P:System.Windows.Controls.Control.Background"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.BorderBrush">
<summary>获取或设置一个用于描述控件的边框背景的画笔。</summary>
<returns>用于填充控件的边框的画笔，默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BorderBrushProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.BorderBrush"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Control.BorderBrush"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.BorderThickness">
<summary>获取或设置控件的边框宽度。 </summary>
<returns>一个宽度值；默认情况下，所有四个边的宽度为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BorderThicknessProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.BorderThickness"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Control.BorderThickness"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.CharacterSpacing">
<summary>获取或设置控件中文本字符之间的距离，测量单位为字体大小的千分之一。</summary>
<returns>控件中文本字符之间的距离，测量单位为字体大小的千分之一。默认值为 0。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Control.CharacterSpacingProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.CharacterSpacing"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Control.CharacterSpacing"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.DefaultStyleKey">
<summary>获取或设置一个键，该键引用控件的默认样式。</summary>
<returns>引用控件的默认样式的键。为了在主题样式查找中正确工作，此值应为样式化控件的 <see cref="T:System.Type"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.DefaultStyleKeyProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.DefaultStyleKey"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Control.DefaultStyleKey"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Control.Focus">
<summary>尝试设置控件的焦点。</summary>
<returns>如果焦点已设置到控件或者焦点已位于控件上，则为 true；如果无法设置控件的焦点，则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontFamily">
<summary>获取或设置用于在控件中显示文本的字体。</summary>
<returns>用于显示控件中文本的字体。默认值为“可移植的用户界面”。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontFamilyProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.FontFamily"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Control.FontFamily"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontSize">
<summary>获取或设置此控件中文本的大小。</summary>
<returns><see cref="T:System.Windows.Controls.Control"/> 中的文本的大小。默认值为 11（以像素为单位）。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontSizeProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.FontStyle"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Control.FontStyle"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontStretch">
<summary>获取或设置字体在屏幕上的压缩或扩展程度。</summary>
<returns>指定字体在屏幕上的压缩或扩展程度的值之一。默认值为 <see cref="P:System.Windows.FontStretches.Normal"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontStretchProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.FontStretch"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Control.FontStretch"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontStyle">
<summary>获取或设置呈现文本时使用的样式。</summary>
<returns>用于指定呈现文本时所用样式的值之一。默认值为 <see cref="P:System.Windows.FontStyles.Normal"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontStyleProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.FontStyle"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Control.FontStyle"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontWeight">
<summary>获取或设置指定字体的粗细。</summary>
<returns>指定特定字体的粗细的值之一。默认值为 <see cref="P:System.Windows.FontWeights.Normal"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontWeightProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.FontWeight"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Control.FontWeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Foreground">
<summary>获取或设置一个用于描述前景色的画笔。</summary>
<returns>用于绘制控件的前景的画笔。默认值为 <see cref="P:System.Windows.Media.Colors.Black"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.ForegroundProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.Foreground"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Control.Foreground"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Control.GetTemplateChild(System.String)">
<summary>在实例化的 <see cref="T:System.Windows.Controls.ControlTemplate"/> 可视化树中检索已命名的元素。</summary>
<returns>模板中的命名元素（如果已找到）。如果在模板中找不到具有名称 <paramref name="childName"/> 的元素，则可能返回 null。</returns>
<param name="childName">要查找的元素的名称。</param>
    </member>
    <member name="P:System.Windows.Controls.Control.HorizontalContentAlignment">
<summary>获取或设置控件内容的水平对齐方式。 </summary>
<returns><see cref="T:System.Windows.HorizontalAlignment"/> 值之一。默认值为 <see cref="F:System.Windows.HorizontalAlignment.Center"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.HorizontalContentAlignmentProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.IsEnabled">
<summary>获取或设置一个值，该值指示用户是否可以与控件交互。 </summary>
<returns>如果用户可以与控件交互，则为 true；否则为 false。</returns>
    </member>
    <member name="E:System.Windows.Controls.Control.IsEnabledChanged">
<summary>当 <see cref="P:System.Windows.Controls.Control.IsEnabled"/> 属性发生更改时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.Control.IsEnabledProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.IsEnabled"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Control.IsEnabled"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.IsTabStop">
<summary>获取或设置一个值，该值指示是否将某个控件包含在 Tab 导航中。 </summary>
<returns>如果将该控件包含在 Tab 导航中，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.IsTabStopProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.IsTabStop"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Control.IsTabStop"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Control.OnDoubleTap(System.Windows.Input.GestureEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.DoubleTap"/> 事件发生之前调用。</summary>
<param name="e">事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnDragEnter(System.Windows.DragEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.DragEnter"/> 事件发生之前调用。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.DragEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnDragLeave(System.Windows.DragEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.DragLeave"/> 事件发生之前调用。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.DragEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnDragOver(System.Windows.DragEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.DragOver"/> 事件发生之前调用。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.DragEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnDrop(System.Windows.DragEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.Drop"/> 事件发生之前调用。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.DragEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnGotFocus(System.Windows.RoutedEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.GotFocus"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。 </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnHold(System.Windows.Input.GestureEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.Hold"/> 事件发生之前调用。</summary>
<param name="e">事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnKeyDown(System.Windows.Input.KeyEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.KeyDown"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。 </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnKeyUp(System.Windows.Input.KeyEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.KeyUp"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。 </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnLostFocus(System.Windows.RoutedEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.LostFocus"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.LostMouseCapture"/> 事件发生之前调用，用于在不附加委托的情况下为派生类中的事件提供处理。 </summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Input.MouseEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.ManipulationCompleted"/> 事件发生之前调用。 </summary>
<param name="e">事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.ManipulationDelta"/> 事件发生之前调用。 </summary>
<param name="e">事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.ManipulationStarted"/> 事件发生之前调用。 </summary>
<param name="e">事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseEnter"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。 </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseLeave"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。 </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。 </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。 </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseMove(System.Windows.Input.MouseEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseMove"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。 </param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseRightButtonDown"/> 事件发生之前调用。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Input.MouseButtonEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseRightButtonUp"/> 事件发生之前调用。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Input.MouseButtonEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseWheel"/> 事件发生之前调用，用于在不附加委托的情况下为派生类中的事件提供处理。 </summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Input.MouseWheelEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnTap(System.Windows.Input.GestureEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.Tap"/> 事件发生之前调用。</summary>
<param name="e">事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.TextInput"/> 事件发生之前调用。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Input.TextCompositionEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnTextInputStart(System.Windows.Input.TextCompositionEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.TextInputStart"/> 事件发生之前调用。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Input.TextCompositionEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnTextInputUpdate(System.Windows.Input.TextCompositionEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.TextInputUpdate"/> 事件发生之前调用。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Input.TextCompositionEventArgs"/>。</param>
    </member>
    <member name="P:System.Windows.Controls.Control.Padding">
<summary>获取或设置控件内的边距。</summary>
<returns><see cref="T:System.Windows.Controls.Control"/> 的内容与其 <see cref="P:System.Windows.FrameworkElement.Margin"/> 或 <see cref="T:System.Windows.Controls.Border"/> 之间的空间量。默认情况下，所有四个边的宽度为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.PaddingProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.Padding"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Control.Padding"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.TabIndex">
<summary>获取或设置一个值，该值决定在用户使用 Tab 键在控件中导航时元素接收焦点的顺序。</summary>
<returns>决定设备的逻辑导航顺序的值。默认值为 <see cref="F:System.Int32.MaxValue"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TabIndexProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.TabIndex"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Control.TabIndex"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.TabNavigation">
<summary>获取或设置一个值，该值修改 Tab 键和 <see cref="P:System.Windows.Controls.Control.TabIndex"/> 针对此控件的工作方式。</summary>
<returns>枚举的一个值。默认值为 <see cref="F:System.Windows.Input.KeyboardNavigationMode.Local"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TabNavigationProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.TabNavigation"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Control.TabNavigation"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Template">
<summary>获取或设置控件模板。 </summary>
<returns>用于定义 <see cref="T:System.Windows.Controls.Control"/> 的外观的模板。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TemplateProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.Template"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Control.Template"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.VerticalContentAlignment">
<summary>获取或设置控件内容的垂直对齐方式。</summary>
<returns><see cref="T:System.Windows.VerticalAlignment"/> 值之一。默认值为 <see cref="F:System.Windows.VerticalAlignment.Center"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.VerticalContentAlignmentProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Control.VerticalContentAlignment"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Control.VerticalContentAlignment"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ControlTemplate">
<summary>定义作为控件模板应用的元素树。</summary>
    </member>
    <member name="M:System.Windows.Controls.ControlTemplate.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.ControlTemplate"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.ControlTemplate.TargetType">
<summary>获取或设置 <see cref="T:System.Windows.Controls.ControlTemplate"/> 将应用到的类型。</summary>
<returns><see cref="T:System.Windows.Controls.ControlTemplate"/> 将应用到的类型。</returns>
    </member>
    <member name="T:System.Windows.Controls.DrawEventArgs">
<summary>为 <see cref="E:System.Windows.Controls.DrawingSurface.Draw"/> 事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.Controls.DrawEventArgs.DeltaTime">
<summary>获取上一个 <see cref="E:System.Windows.Controls.DrawingSurface.Draw"/> 事件的 <see cref="P:System.Windows.Controls.DrawEventArgs.TotalTime"/> 值和 <see cref="P:System.Windows.Controls.DrawEventArgs.TotalTime"/> 值之间的差。</summary>
<returns>当前 <see cref="P:System.Windows.Controls.DrawEventArgs.TotalTime"/> 和上一个 <see cref="P:System.Windows.Controls.DrawEventArgs.TotalTime"/> 之间的增量。</returns>
    </member>
    <member name="P:System.Windows.Controls.DrawEventArgs.GraphicsDevice">
<summary>获取与此事件关联的 <see cref="T:Microsoft.Xna.Framework.Graphics.GraphicsDevice"/>。</summary>
<returns>与此事件关联的图形设备。</returns>
    </member>
    <member name="M:System.Windows.Controls.DrawEventArgs.InvalidateSurface">
<summary>使 <see cref="T:System.Windows.Controls.DrawingSurface"/> 无效并请求一个新的 <see cref="E:System.Windows.Controls.DrawingSurface.Draw"/> 事件。</summary>
    </member>
    <member name="P:System.Windows.Controls.DrawEventArgs.TotalTime">
<summary>获取自从应用程序启动以来经过的总时间。</summary>
<returns>总时间。</returns>
    </member>
    <member name="T:System.Windows.Controls.DrawingSurface">
<summary>定义可以在其中撰写和呈现 3D 内容的区域。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DrawingSurface.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.DrawingSurface"/> 类的新实例。</summary>
    </member>
    <member name="E:System.Windows.Controls.DrawingSurface.Draw">
<summary>使 <see cref="T:System.Windows.Controls.DrawingSurface"/> 无效时发生。 </summary>
    </member>
    <member name="M:System.Windows.Controls.DrawingSurface.Invalidate">
<summary>使 <see cref="T:System.Windows.Controls.DrawingSurface"/> 无效并请求一个新的 <see cref="E:System.Windows.Controls.DrawingSurface.Draw"/> 事件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Grid">
<summary>定义由列和行组成的可变网格区域。</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Grid"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)">
<summary>排列 <see cref="T:System.Windows.Controls.Grid"/> 元素的内容。</summary>
      <returns>
<see cref="T:System.Windows.Size"/>，表示此 <see cref="T:System.Windows.Controls.Grid"/> 元素及其子级的排列大小。</returns>
<param name="arrangeSize">指定此 <see cref="T:System.Windows.Controls.Grid"/> 元素在排列其子元素时使用的大小。</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.Column">
<summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Grid"/> 中的子内容应出现在哪列中。 </summary>
<returns>一个 <see cref="T:System.Int32"/> 值，表示应显示子内容的列。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.ColumnDefinitions">
<summary>获取针对此 <see cref="T:System.Windows.Controls.Grid"/> 实例定义的 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"/>。 </summary>
<returns>在此 <see cref="T:System.Windows.Controls.Grid"/> 实例上定义的 <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ColumnProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Grid.Column"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Grid.Column"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.ColumnSpan">
<summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Grid"/> 中的子内容所跨越的总列数。</summary>
<returns>一个 <see cref="T:System.Int32"/> 值，表示子内容应跨越的列数。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ColumnSpanProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Grid.ColumnSpan"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Grid.ColumnSpan"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetColumn(System.Windows.FrameworkElement)">
<summary>获取指定 <see cref="T:System.Windows.FrameworkElement"/> 的 <see cref="P:System.Windows.Controls.Grid.Column"/> 附加属性的值。</summary>
<returns><see cref="P:System.Windows.Controls.Grid.Column"/> 附加属性的值。这是从零开始的索引。</returns>
<param name="element">从中读取属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetColumnSpan(System.Windows.FrameworkElement)">
<summary>获取指定 <see cref="T:System.Windows.FrameworkElement"/> 的 <see cref="P:System.Windows.Controls.Grid.ColumnSpan"/> 附加属性的值。</summary>
<returns><see cref="P:System.Windows.Controls.Grid.ColumnSpan"/> 附加属性的值。</returns>
<param name="element">从中读取属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetRow(System.Windows.FrameworkElement)">
<summary>获取指定 <see cref="T:System.Windows.FrameworkElement"/> 的 <see cref="P:System.Windows.Controls.Grid.Row"/> 附加属性的值。 </summary>
<returns><see cref="P:System.Windows.Controls.Grid.Row"/> 附加属性的值。</returns>
<param name="element">从中读取属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetRowSpan(System.Windows.FrameworkElement)">
<summary>获取指定 <see cref="T:System.Windows.FrameworkElement"/> 的 <see cref="P:System.Windows.Controls.Grid.RowSpan"/> 附加属性的值。 </summary>
<returns><see cref="P:System.Windows.Controls.Grid.RowSpan"/> 附加属性的值。</returns>
<param name="element">从中读取属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.MeasureOverride(System.Windows.Size)">
<summary>测量 <see cref="T:System.Windows.Controls.Grid"/> 的子元素，以便准备在 <see cref="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)"/> 处理过程中排列它们。</summary>
      <returns>
<see cref="T:System.Windows.Size"/>，表示可用于布局子内容的最大区域。</returns>
<param name="constraint">指示不应超过的上限大小。</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.Row">
<summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Grid"/> 中的子内容应出现在哪行中。</summary>
<returns>一个 <see cref="T:System.Int32"/> 值，表示应显示子内容的行。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.RowDefinitions">
<summary>获取针对此 <see cref="T:System.Windows.Controls.Grid"/> 实例定义的 <see cref="T:System.Windows.Controls.RowDefinitionCollection"/>。 </summary>
<returns>在此 <see cref="T:System.Windows.Controls.Grid"/> 实例上定义的 <see cref="T:System.Windows.Controls.RowDefinitionCollection"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.RowProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Grid.Row"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Grid.Row"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.RowSpan">
<summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Grid"/> 中的子内容所跨越的总行数。</summary>
<returns>一个 <see cref="T:System.Int32"/> 值，表示子内容应跨越的行数。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.RowSpanProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Grid.RowSpan"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Grid.RowSpan"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetColumn(System.Windows.FrameworkElement,System.Int32)">
<summary>将 <see cref="P:System.Windows.Controls.Grid.Column"/> 附加属性的值设置为指定的 <see cref="T:System.Windows.FrameworkElement"/>。 </summary>
<param name="element">要设置 <see cref="P:System.Windows.Controls.Grid.Column"/> 附加属性的元素。</param>
<param name="value">要设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetColumnSpan(System.Windows.FrameworkElement,System.Int32)">
<summary>将 <see cref="P:System.Windows.Controls.Grid.ColumnSpan"/> 附加属性的值设置为指定的 <see cref="T:System.Windows.FrameworkElement"/>。 </summary>
<param name="element">要设置 <see cref="P:System.Windows.Controls.Grid.ColumnSpan"/> 附加属性的元素。</param>
<param name="value">要设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetRow(System.Windows.FrameworkElement,System.Int32)">
<summary>将 <see cref="P:System.Windows.Controls.Grid.Row"/> 附加属性的值设置为指定的 <see cref="T:System.Windows.FrameworkElement"/>。 </summary>
<param name="element">要设置 <see cref="P:System.Windows.Controls.Grid.Row"/> 附加属性的元素。</param>
<param name="value">要设置的属性值。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetRowSpan(System.Windows.FrameworkElement,System.Int32)">
<summary>将 <see cref="P:System.Windows.Controls.Grid.RowSpan"/> 附加属性的值设置为指定的 <see cref="T:System.Windows.FrameworkElement"/>。 </summary>
<param name="element">要设置 <see cref="P:System.Windows.Controls.Grid.RowSpan"/> 附加属性的元素。</param>
<param name="value">要设置的属性值。</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.ShowGridLines">
<summary>获取或设置一个值，该值指示此 <see cref="T:System.Windows.Controls.Grid"/> 中的网格线是否可见。 </summary>
<returns>如果网格线可见，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ShowGridLinesProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Grid.ShowGridLines"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Grid.ShowGridLines"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.HyperlinkButton">
<summary>表示显示超链接的按钮控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.HyperlinkButton.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.HyperlinkButton"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.HyperlinkButton.NavigateUri">
<summary>获取或设置单击 <see cref="T:System.Windows.Controls.HyperlinkButton"/> 时要导航到的 URI。 </summary>
<returns>单击 <see cref="T:System.Windows.Controls.HyperlinkButton"/> 时要导航到的 URI。</returns>
    </member>
    <member name="F:System.Windows.Controls.HyperlinkButton.NavigateUriProperty">
<summary>标识 <see cref="P:System.Windows.Controls.HyperlinkButton.NavigateUri"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.HyperlinkButton.NavigateUri"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.HyperlinkButton.OnClick">
<summary>为 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"/> 事件提供处理。</summary>
<exception cref="T:System.NotSupportedException"><see cref="P:System.Windows.Controls.HyperlinkButton.NavigateUri"/> 属性并不或无法转换为绝对 URI。</exception>
<exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Controls.HyperlinkButton.TargetName"/> 属性设置为一个包含嵌入空白的值。</exception>
    </member>
    <member name="M:System.Windows.Controls.HyperlinkButton.OnCreateAutomationPeer">
<summary>返回 <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer"/> 以便由 Silverlight 自动化基础结构使用。</summary>
<returns>超链接按钮对象的 <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer"/>。 </returns>
    </member>
    <member name="P:System.Windows.Controls.HyperlinkButton.TargetName">
<summary>获取或设置网页应在其中打开的目标窗口或框架的名称，或 Silverlight 应用程序中要导航到的对象的名称。</summary>
<returns>获取或设置网页应在其中打开的目标窗口或框架的名称，或 Silverlight 应用程序中要导航到的对象的名称。</returns>
    </member>
    <member name="F:System.Windows.Controls.HyperlinkButton.TargetNameProperty">
<summary>标识 <see cref="P:System.Windows.Controls.HyperlinkButton.TargetName"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.HyperlinkButton.TargetName"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Image">
<summary>表示显示 JPEG 或 PNG 文件格式的图像的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Image.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Image"/> 类的新实例。 </summary>
    </member>
    <member name="E:System.Windows.Controls.Image.ImageFailed">
<summary>当存在与图像检索或格式相关的错误时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Image.ImageOpened">
<summary>在成功下载和解码图像源后发生。可在呈现图像前使用此事件确定图像的大小。</summary>
    </member>
    <member name="P:System.Windows.Controls.Image.Source">
<summary>获取或设置图像的源。</summary>
<returns>已绘制图像的源对象。</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.SourceProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Image.Source"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Image.Source"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Image.Stretch">
<summary>获取或设置一个值，该值描述应如何拉伸 <see cref="T:System.Windows.Controls.Image"/> 以填充目标矩形。 </summary>
      <returns>
<see cref="T:System.Windows.Media.Stretch"/>一个枚举值，用于指定当指定了 <see cref="T:System.Windows.Controls.Image"/> 的 <see cref="P:System.Windows.FrameworkElement.Height"/> 和 <see cref="P:System.Windows.FrameworkElement.Width"/> 且它们与源图像的高度和宽度不同时，如何应用源图像。默认值为 Uniform。</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.StretchProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Image.Stretch"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Image.Stretch"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.INavigate">
<summary>定义在 Silverlight 应用程序中进行内部导航的方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.INavigate.Navigate(System.Uri)">
<summary>显示位于指定 URI 中的内容。</summary>
<returns>如果成功显示了内容，则为 true；否则为 false。</returns>
<param name="source">要显示的内容的 URI。 </param>
    </member>
    <member name="T:System.Windows.Controls.InkPresenter">
<summary>实现一个显示墨迹笔画的矩形图面。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.InkPresenter"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.InkPresenter.Strokes">
<summary>获取或设置 <see cref="T:System.Windows.Controls.InkPresenter"/> 显示的笔画。</summary>
<returns><see cref="T:System.Windows.Controls.InkPresenter"/> 所显示的墨迹笔画的集合。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkPresenter.StrokesProperty">
<summary>标识 <see cref="P:System.Windows.Controls.InkPresenter.Strokes"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.InkPresenter.Strokes"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemCollection">
<summary>保留表示 <see cref="T:System.Windows.Controls.ItemsControl"/> 内容的项的列表。</summary>
    </member>
    <member name="E:System.Windows.Controls.ItemCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
<summary>在集合的项列表已更改或集合重置时发生。</summary>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerGenerator">
<summary>提供 <see cref="T:System.Windows.Controls.ItemsControl"/> 的项与其容器元素之间的映射。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromIndex(System.Int32)">
<summary>返回 <see cref="T:System.Windows.Controls.ItemCollection"/> 中指定索引处的项的容器。</summary>
<returns>如果该项具有容器，则返回该项集合中指定索引处的项的容器；否则，返回 null。</returns>
<param name="index">要检索的项的索引。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem(System.Object)">
<summary>返回与指定的项对应的容器。</summary>
<returns>如果该项具有容器且存在于集合中，则返回对应于指定项的容器；否则，返回 null。</returns>
<param name="item">要检索其容器的项。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)">
<summary>获取项在指定索引处的生成位置。</summary>
<returns><see cref="T:System.Windows.Controls.ItemContainerGenerator"/> 生成的项的位置。</returns>
<param name="itemIndex">要检索其位置的项的索引。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject)">
<summary>返回具有指定生成的容器的项的索引。</summary>
<returns>与指定生成的容器对应的项的索引。</returns>
<param name="container">要为其检索项索引的已生成容器。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
<summary>返回映射到指定 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 的索引。</summary>
<returns>是映射到指定 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 的索引的 <see cref="T:System.Int32"/>。</returns>
<param name="position">所需索引的 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ItemFromContainer(System.Windows.DependencyObject)">
<summary>返回与指定生成的容器对应的项。</summary>
<returns>包含的项，或容器（如果它不包含项）。</returns>
<param name="container">对应于要返回的项的 <see cref="T:System.Windows.DependencyObject"/>。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="container"/> 为 null。</exception>
    </member>
    <member name="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged">
<summary>当项集合的内容更改时发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GenerateNext(System.Boolean@)">
<summary>返回用于显示下一项的容器元素，并返回其是否为新生成（实现）的容器元素。</summary>
<returns>是用于显示下一项的容器元素的 <see cref="T:System.Windows.DependencyObject"/>。</returns>
<param name="isNewlyRealized">如果返回的 <see cref="T:System.Windows.DependencyObject"/> 为新生成的（已实现），则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
<summary>返回适合由指定面板使用的 <see cref="T:System.Windows.Controls.ItemContainerGenerator"/>。 </summary>
<returns>适合由指定面板使用的 <see cref="T:System.Windows.Controls.ItemContainerGenerator"/>。</returns>
<param name="panel">为其返回适合的 <see cref="T:System.Windows.Controls.ItemContainerGenerator"/> 的面板。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#PrepareItemContainer(System.Windows.DependencyObject)">
<summary>准备指定元素作为相应项的容器。</summary>
<param name="container">要准备的容器。通常来说，<paramref name="container"/> 是 <see cref="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)"/> 的前一调用的结果。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
<summary>移除一个或多个生成（实现）项。</summary>
<param name="position">要移除的元素的 <see cref="T:System.Int32"/> 索引。<paramref name="position"/> 必须引用先前生成（实现）的项，这意味着其偏移量必须为零。</param>
<param name="count">从 <paramref name="position"/> 开始的要移除的元素的 <see cref="T:System.Int32"/> 数。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#RemoveAll">
<summary>移除所有生成（实现）项。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
<summary>准备生成器以从指定的 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 开始并以指定的 <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection"/> 来生成项，同时控制是否从生成（实现）项开始。</summary>
<returns><see cref="T:System.IDisposable"/> 对象，可跟踪生成过程的生存期。</returns>
<param name="position"><see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/>，指定从其开始生成项的项的位置。</param>
<param name="direction">指定从其开始生成项的项的位置。</param>
<param name="allowStartAtRealizedItem">指定是否从生成（实现）项开始的 <see cref="T:System.Boolean"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IRecyclingItemContainerGenerator#Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
<summary>解除项容器与其数据项的关联，并保存容器以便稍后可供其他数据项重用。</summary>
<param name="position">要重用的第一个元素从零开始的索引。<paramref name="position"/> 必须引用以前生成（实现）的项。</param>
<param name="count">从 <paramref name="position"/> 开始的要重用的元素的数。</param>
    </member>
    <member name="T:System.Windows.Controls.ItemsControl">
<summary>表示一个可用于呈现项的集合的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.ItemsControl"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
<summary>撤消 <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)"/> 方法的效果。</summary>
<param name="element">容器元素。</param>
<param name="item">项。</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.DisplayMemberPath">
<summary>获取或设置为每个数据项显示的属性的名称或路径。</summary>
<returns>为控件中的每个数据项显示的属性的名称或路径。默认值为空字符串 ("")。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.DisplayMemberPathProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetContainerForItemOverride">
<summary>创建或标识用于显示给定项的元素。</summary>
<returns>用于显示给定项的元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetItemsOwner(System.Windows.DependencyObject)">
<summary>返回 <see cref="T:System.Windows.Controls.ItemsControl"/>，指定的元素承载了它所包含的项。</summary>
<returns><see cref="T:System.Windows.Controls.ItemsControl"/>，指定元素承载了它所包含的项；或者为 null。</returns>
<param name="element">宿主元素。 </param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainerOverride(System.Object)">
<summary>确定指定项是否为其自己的容器（或者是否可以作为自己的容器）。</summary>
<returns>如果项是其自己的容器（或可以作为自己的容器），则为 true；否则为 false。</returns>
<param name="item">要检查的项。</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator">
<summary>获取与此 <see cref="T:System.Windows.Controls.ItemsControl"/> 关联的 <see cref="T:System.Windows.Controls.ItemContainerGenerator"/>。</summary>
<returns>与此 <see cref="T:System.Windows.Controls.ItemsControl"/> 关联的 <see cref="T:System.Windows.Controls.ItemContainerGenerator"/>。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.Items">
<summary>获取用于生成控件内容的集合。</summary>
<returns>如果存在用于生成控件内容的集合，则为该集合；否则为 null。默认值为空集合。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)">
<summary>返回拥有指定容器元素的 <see cref="T:System.Windows.Controls.ItemsControl"/>。</summary>
<returns>拥有指定容器元素的 <see cref="T:System.Windows.Controls.ItemsControl"/>；否则为 null。如果 <paramref name="container"/> 不是 <see cref="T:System.Windows.UIElement"/>，或者如果父级不是 <see cref="T:System.Windows.Controls.ItemsControl"/>，则 <see cref="M:System.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)"/> 将返回 null。</returns>
<param name="container">要为其返回 <see cref="T:System.Windows.Controls.ItemsControl"/> 的容器元素。</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemsPanel">
<summary>获取或设置模板，它定义了控制项的布局的面板。</summary>
<returns>一个 <see cref="T:System.Windows.Controls.ItemsPanelTemplate"/>，它定义了用于项的布局的面板。<see cref="T:System.Windows.Controls.ItemsControl"/> 的默认值是一个指定 <see cref="T:System.Windows.Controls.StackPanel"/> 的 <see cref="T:System.Windows.Controls.ItemsPanelTemplate"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemsPanelProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemsSource">
<summary>获取或设置用于生成 <see cref="T:System.Windows.Controls.ItemsControl"/> 的内容的集合。 </summary>
<returns>用于生成 <see cref="T:System.Windows.Controls.ItemsControl"/> 的内容的对象。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemsSourceProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemTemplate">
<summary>获取或设置用于显示每个项的 <see cref="T:System.Windows.DataTemplate"/>。 </summary>
<returns>指定数据对象的可视化的模板。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemTemplateProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.ItemsControl"/> 的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
<summary>当 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 属性的值更改时调用。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.TextInput"/> 事件发生之前调用。</summary>
<param name="e">提供与事件有关的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
<summary>准备指定元素以显示指定项。 </summary>
<param name="element">用于显示指定项的元素。</param>
<param name="item">要显示的项。</param>
    </member>
    <member name="T:System.Windows.Controls.ItemsPanelTemplate">
<summary>指定 <see cref="T:System.Windows.Controls.ItemsPresenter"/> 为 <see cref="T:System.Windows.Controls.ItemsControl"/> 的项的布局创建的面板。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPanelTemplate.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.ItemsPanelTemplate"/> 类的新实例。 </summary>
    </member>
    <member name="T:System.Windows.Controls.ItemsPresenter">
<summary>指定项在控件（通常是 <see cref="T:System.Windows.Controls.ItemsControl"/>）中的放置位置。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.ItemsPresenter"/> 类的新实例。 </summary>
    </member>
    <member name="T:System.Windows.Controls.ListBox">
<summary>包含可选项列表。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ListBox.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.ListBox"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ListBox.GetContainerForItemOverride">
<summary>创建或标识用于显示指定项的元素。 </summary>
<returns>与指定的项对应的 <see cref="T:System.Windows.Controls.ListBoxItem"/>。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.IsItemItsOwnContainerOverride(System.Object)">
<summary>确定指定项是否为其自己的项容器（或者是否可以作为自己的项容器）。 </summary>
<returns>如果该项是其自己的项容器，则返回 true；否则返回 false。</returns>
<param name="item">指定项。</param>
    </member>
    <member name="F:System.Windows.Controls.ListBox.IsSelectionActiveProperty">
<summary>标识 IsSelectionActive 依赖项属性。 </summary>
<returns>IsSelectionActive 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ListBox.ItemContainerStyle">
<summary>获取或设置在呈现项容器时使用的样式。 </summary>
<returns>应用于项容器的样式。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBox.ItemContainerStyleProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ListBox.ItemContainerStyle"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.ListBox.ItemContainerStyle"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.ListBox"/> 控件的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnCreateAutomationPeer">
<summary>返回 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer"/>，用于 Silverlight 自动化基础结构。</summary>
<returns><see cref="T:System.Windows.Controls.ListBox"/> 对象的 <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer"/>。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnGotFocus(System.Windows.RoutedEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.GotFocus"/> 事件提供处理。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
<summary>为 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged"/> 事件提供处理。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
<summary>为在此控件具有焦点的情况下按下某个键时发生的 <see cref="E:System.Windows.UIElement.KeyDown"/> 事件提供处理。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnLostFocus(System.Windows.RoutedEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.LostFocus"/> 事件提供处理。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.ScrollIntoView(System.Object)">
<summary>使对象滚动到视图中。 </summary>
<param name="item">要滚动的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.SelectAll">
<summary>选择 <see cref="T:System.Windows.Controls.ListBox"/> 中的所有项。</summary>
      <exception cref="T:System.NotSupportedException">
<see cref="P:System.Windows.Controls.ListBox.SelectionMode"/> 设置为 <see cref="F:System.Windows.Controls.SelectionMode.Single"/></exception>
    </member>
    <member name="P:System.Windows.Controls.ListBox.SelectedItems">
<summary>获取 <see cref="T:System.Windows.Controls.ListBox"/> 控件的当前选定项的列表。</summary>
<returns><see cref="T:System.Windows.Controls.ListBox"/> 的当前选定项的列表。</returns>
    </member>
    <member name="P:System.Windows.Controls.ListBox.SelectionMode">
<summary>获取或设置 <see cref="T:System.Windows.Controls.ListBox"/> 控件的选择行为。</summary>
<returns><see cref="T:System.Windows.Controls.SelectionMode"/> 值之一。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBox.SelectionModeProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ListBox.SelectionMode"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ListBox.SelectionMode"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ListBoxItem">
<summary>表示 <see cref="T:System.Windows.Controls.ListBox"/> 中的可选项。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.ListBoxItem"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.ListBoxItem.IsSelected">
<summary>获取或设置一个指示是否选择 <see cref="T:System.Windows.Controls.ListBoxItem"/> 的值。 </summary>
<returns>如果选定此项，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBoxItem.IsSelectedProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ListBoxItem.IsSelected"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.ListBoxItem.IsSelected"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.ListBoxItem"/> 控件的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnCreateAutomationPeer">
<summary>返回 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer"/>，用于 Silverlight 自动化基础结构。</summary>
<returns>用于 <see cref="T:System.Windows.Controls.ListBoxItem"/> 的 <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer"/>。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnGotFocus(System.Windows.RoutedEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.GotFocus"/> 事件提供处理。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnLostFocus(System.Windows.RoutedEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.LostFocus"/> 事件提供处理。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.MouseEnter"/> 事件提供处理。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.MouseLeave"/> 事件提供处理。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> 事件提供处理。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.ManipulationMode">
<summary>描述用于 <see cref="T:System.Windows.Controls.ScrollViewer"/> 行为的操作模式。</summary>
    </member>
    <member name="F:System.Windows.Controls.ManipulationMode.Control">
<summary>用于滚动的操作行为滚动控件中内容。</summary>
    </member>
    <member name="F:System.Windows.Controls.ManipulationMode.System">
<summary>用于滚动的操作行为应该不能在系统中实现。</summary>
    </member>
    <member name="T:System.Windows.Controls.MediaElement">
<summary>表示一个包含音频和/或视频的对象。</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.#ctor">
<summary>实例化 <see cref="T:System.Windows.Controls.MediaElement"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Attributes">
<summary>获取属性的集合，该集合对应于 ASX 文件中将 <see cref="P:System.Windows.Controls.MediaElement.Source"/> 设置到的当前项。</summary>
<returns>属性的集合，该集合对应于 ASX 文件中将 <see cref="P:System.Windows.Controls.MediaElement.Source"/> 设置到的当前项。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.AttributesProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.Attributes"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.Attributes"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.AudioStreamCount">
<summary>获取当前媒体文件中可用的音频流的数目。 </summary>
<returns>在源媒体文件中存在的音频流的数目。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.AudioStreamCountProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.AudioStreamCount"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.AudioStreamCount"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.AudioStreamIndex">
<summary>获取或设置与视频组件一起播放的音频流的索引。音频流的集合在运行时组合，并且表示可用于媒体文件内的所有音频流。 </summary>
<returns>与视频组件一起播放的音频组件的媒体文件内的索引。可以不指定该索引，在此情况下该值为 null。默认值为 null（请参阅“备注”部分）。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.AudioStreamIndexProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.AudioStreamIndex"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.AudioStreamIndex"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.AutoPlay">
<summary>获取或设置一个值，该值指示在设置 <see cref="P:System.Windows.Controls.MediaElement.Source"/> 属性时媒体是否将自动开始播放。 </summary>
<returns>如果自动播放，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.AutoPlayProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.AutoPlay"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.AutoPlay"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Balance">
<summary>获取或设置立体声扬声器的音量比。 </summary>
<returns>扬声器的音量比，范围为 -1 到 1。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BalanceProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.Balance"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.Balance"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.BufferingProgress">
<summary>获取指示当前缓冲进度的值。 </summary>
<returns>针对媒体内容完成的缓冲量。此值介于 0 到 1 之间。乘以 100 可得到百分比。默认值为 0。</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.BufferingProgressChanged">
<summary>当 <see cref="P:System.Windows.Controls.MediaElement.BufferingProgress"/> 属性发生更改时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BufferingProgressProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.BufferingProgress"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.BufferingProgress"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.BufferingTime">
<summary>获取或设置要缓冲的时间长度。</summary>
<returns>要缓冲的时间长度。默认值为值为 5 秒 (0:0:05) 的 <see cref="T:System.TimeSpan"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BufferingTimeProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.BufferingTime"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.BufferingTime"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.CanPause">
<summary>获取一个值，该值指示在调用 <see cref="M:System.Windows.Controls.MediaElement.Pause"/> 方法时媒体是否可暂停。 </summary>
<returns>如果可以暂停媒体，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.CanPauseProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.CanPause"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.CanPause"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.CanSeek">
<summary>获取一个值，该值指示是否可以通过设置 <see cref="P:System.Windows.Controls.MediaElement.Position"/> 属性的值来重新定位媒体。 </summary>
<returns>如果可以重新定位媒体，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.CanSeekProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.CanSeek"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.CanSeek"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.CurrentState">
<summary>获取 <see cref="T:System.Windows.Controls.MediaElement"/> 的状态。 </summary>
<returns><see cref="T:System.Windows.Controls.MediaElement"/> 的当前状态。状态可以为下列值之一（如在 <see cref="T:System.Windows.Media.MediaElementState"/> 枚举中所定义）：<see cref="F:System.Windows.Media.MediaElementState.Buffering"/>、<see cref="F:System.Windows.Media.MediaElementState.Closed"/>、<see cref="F:System.Windows.Media.MediaElementState.Opening"/>、<see cref="F:System.Windows.Media.MediaElementState.Paused"/>、<see cref="F:System.Windows.Media.MediaElementState.Playing"/> 或 <see cref="F:System.Windows.Media.MediaElementState.Stopped"/>。默认值为 <see cref="F:System.Windows.Media.MediaElementState.Closed"/>。</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.CurrentStateChanged">
<summary>当 <see cref="P:System.Windows.Controls.MediaElement.CurrentState"/> 属性的值更改时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.CurrentStateProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.CurrentState"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.CurrentState"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.DownloadProgress">
<summary>获取一个百分比值，该值指示为位于远程服务器上的内容完成的下载量。</summary>
<returns>一个值，该值指示为位于远程服务器上的内容完成的下载量。此值介于 0 到 1 之间。乘以 100 可得到百分比。默认值为 0。</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.DownloadProgressChanged">
<summary>在 <see cref="P:System.Windows.Controls.MediaElement.DownloadProgress"/> 属性更改后发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.DownloadProgressOffset">
<summary>获取下载进度的偏移量。 </summary>
<returns>下载进度的偏移量。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.DownloadProgressOffsetProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.DownloadProgressOffset"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.DownloadProgressOffset"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.DownloadProgressProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.DownloadProgress"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.DownloadProgress"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.DroppedFramesPerSecond">
<summary>获取媒体每秒正在丢弃的帧数。</summary>
<returns>媒体每秒正在丢弃的帧数。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.DroppedFramesPerSecondProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.DroppedFramesPerSecond"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.DroppedFramesPerSecond"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.IsMuted">
<summary>获取或设置一个值，该值指示是否已静音。 </summary>
<returns>如果已静音，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.IsMutedProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.IsMuted"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.IsMuted"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.LicenseAcquirer">
<summary>获取或设置与 <see cref="T:System.Windows.Controls.MediaElement"/> 关联的 <see cref="T:System.Windows.Media.LicenseAcquirer"/>。<see cref="T:System.Windows.Media.LicenseAcquirer"/> 处理为 DRM 加密内容购买许可证的事宜。</summary>
<returns>与 <see cref="T:System.Windows.Controls.MediaElement"/> 关联的 <see cref="T:System.Windows.Media.LicenseAcquirer"/>。默认值为 null。</returns>
<exception cref="T:System.ArgumentNullException"><see cref="T:System.Windows.Media.LicenseAcquirer"/> 为 null。</exception>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.LogReady">
<summary>当日志准备就绪时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MarkerReached">
<summary>在媒体播放期间遇到时间线标记时发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Markers">
<summary>获取与当前加载的媒体文件相关联的时间线标记的集合。</summary>
<returns>与当前加载的媒体文件相关联的时间线标记（表示为 <see cref="T:System.Windows.Media.TimelineMarker"/> 对象）的集合。默认值是一个空集合。</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaEnded">
<summary>当 <see cref="T:System.Windows.Controls.MediaElement"/> 不再播放音频或视频时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaFailed">
<summary>在存在与媒体 <see cref="P:System.Windows.Controls.MediaElement.Source"/> 关联的错误时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaOpened">
<summary>当媒体流已被验证和打开且已读取文件头时发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalDuration">
<summary>获取当前打开的媒体文件的持续时间。</summary>
<returns>媒体的自然持续时间。默认值为 <see cref="P:System.Windows.Duration.Automatic"/>，这是您在 <see cref="E:System.Windows.Controls.MediaElement.MediaOpened"/> 前查询此属性时保留的值。 </returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.NaturalDurationProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.NaturalDuration"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.NaturalDuration"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalVideoHeight">
<summary>获取与媒体关联的视频的高度。</summary>
<returns>与媒体关联的视频的高度，以像素为单位。音频文件将返回 0。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.NaturalVideoHeightProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.NaturalVideoHeight"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.NaturalVideoHeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalVideoWidth">
<summary>获取与媒体关联的视频的宽度。</summary>
<returns>与媒体关联的视频的宽度。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.NaturalVideoWidthProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.NaturalVideoWidth"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.NaturalVideoWidth"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Pause">
<summary>在当前位置暂停媒体。</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Play">
<summary>从当前位置播放媒体。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.PlaybackRate">
<summary>获取或设置媒体的播放速率。</summary>
<returns>播放速率。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.PlaybackRateProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.PlaybackRate"/> 属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Position">
<summary>获取或设置媒体播放时间的当前进度位置。</summary>
<returns>自媒体开始播放之后经历的时间量。默认值是值为 0:0:0 的 <see cref="T:System.TimeSpan"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.PositionProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.Position"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.Position"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.RateChanged">
<summary>当 <see cref="P:System.Windows.Controls.MediaElement.PlaybackRate"/> 属性发生更改时发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.RenderedFramesPerSecond">
<summary>获取媒体每秒正在呈现的帧数。</summary>
<returns>媒体每秒正在呈现的帧数。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.RenderedFramesPerSecondProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.RenderedFramesPerSecond"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.RenderedFramesPerSecond"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.RequestLog">
<summary>发送一个请求，以生成随后将通过 <see cref="E:System.Windows.Controls.MediaElement.LogReady"/> 事件引发的记录。</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.SetSource(System.IO.Stream)">
<summary>使用提供的流设置 <see cref="P:System.Windows.Controls.MediaElement.Source"/> 属性。</summary>
<param name="stream">包含本机支持的媒体源的流。</param>
<exception cref="T:System.ArgumentNullException"><paramref name="stream"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.SetSource(System.Windows.Media.MediaStreamSource)">
<summary>这会将 <see cref="T:System.Windows.Controls.MediaElement"/> 的源设置为 <see cref="T:System.Windows.Media.MediaStreamSource"/> 的子类。</summary>
<param name="mediaStreamSource"><see cref="T:System.Windows.Media.MediaStreamSource"/> 的一个子类。</param>
<exception cref="T:System.ArgumentNullException"><paramref name="mediaStreamSource"/> 为 null。</exception>
<exception cref="T:System.InvalidOperationException">指定的 <paramref name="mediaStreamSource"/> 无效或不存在。</exception>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Source">
<summary>获取或设置 <see cref="T:System.Windows.Controls.MediaElement"/> 上的媒体来源。 </summary>
<returns>将元素的来源指定为统一资源标识符 (URI) 的字符串。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.SourceProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.Source"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.Source"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Stop">
<summary>停止媒体并将其重设为从头播放。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Stretch">
<summary>获取或设置一个 <see cref="T:System.Windows.Media.Stretch"/> 值，该值描述 <see cref="T:System.Windows.Controls.MediaElement"/> 如何填充目标矩形。 </summary>
<returns>一个枚举值，该值指定所呈现媒体的拉伸行为。默认值是 Uniform。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.StretchProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.Stretch"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.Stretch"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Volume">
<summary>获取或设置媒体的音量。 </summary>
<returns>在 0 与 1 之间的线性标尺上所表示的媒体音量。默认值为 0.5。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.VolumeProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MediaElement.Volume"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MediaElement.Volume"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.MultiScaleImage">
<summary>使用户能够打开可放大和平移的多分辨率图像。 </summary>
    </member>
    <member name="M:System.Windows.Controls.MultiScaleImage.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.AllowDownloading">
<summary>获取或设置一个值，该值指示此 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 是否允许下载。 </summary>
<returns>如果此 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 允许下载，则为 true。如果此 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 不允许下载，则为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.AllowDownloadingProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleImage.AllowDownloading"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleImage.AllowDownloading"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.AspectRatio">
<summary>获取用作 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 的源的图像的纵横比。纵横比为图像宽度与高度之比。</summary>
<returns>用作 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 的源的图像的纵横比。纵横比为图像宽度与高度之比。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.AspectRatioProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleImage.AspectRatio"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleImage.AspectRatio"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.BlurFactor">
<summary>获取或设置在呈现时数据模糊不清的程度。</summary>
<returns>在呈现时数据模糊不清的程度。值为 2 表示数据使呈现效果的模糊程度加深一倍（较低一个级别），值为 0.5 表示数据呈现效果更明亮（更高一个级别）。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.BlurFactorProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleImage.BlurFactor"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleImage.BlurFactor"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.MultiScaleImage.ElementToLogicalPoint(System.Windows.Point)">
<summary>从 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 的一个点获取具有逻辑坐标（值介于 0 到 1 之间）的点。 </summary>
<returns>从 <paramref name="elementPoint"/> 转换的逻辑点。</returns>
<param name="elementPoint"><see cref="T:System.Windows.Controls.MultiScaleImage"/> 上的一个点，它将转换为具有逻辑坐标（值介于 0 到 1 之间）的点。</param>
    </member>
    <member name="E:System.Windows.Controls.MultiScaleImage.ImageFailed">
<summary>当下载拼块时超时或由于其他原因而失败时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.MultiScaleImage.ImageOpenFailed">
<summary>当用来打开图像的第一段元数据失败时发生。如果发生此事件，则不会成功打开图像的任何部分。</summary>
    </member>
    <member name="E:System.Windows.Controls.MultiScaleImage.ImageOpenSucceeded">
<summary>当加载剩余拼块所需的第一段元数据打开时发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.IsDownloading">
<summary>获取指示图像是否仍在下载的值。</summary>
<returns>如果图像仍在下载，则为 true。如果已下载了所有需要的图块，则为 false。如果图像已被移动，则 <see cref="P:System.Windows.Controls.MultiScaleImage.IsDownloading"/> 可能会再次变为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.IsDownloadingProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleImage.IsDownloading"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleImage.IsDownloading"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.IsIdle">
<summary>获取一个值，该值指示 Deep Zoom 是否已完成下载、解码、混合图像以及动画处理（如果正在使用弹簧）。 </summary>
<returns>如果 Deep Zoom 已完成下载、解码、混合图像以及动画处理（如果正在使用弹簧），则为 true。否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.IsIdleProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleImage.IsIdle"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleImage.IsIdle"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.MultiScaleImage.LogicalToElementPoint(System.Windows.Point)">
<summary>从逻辑点（值介于 0 - 1 之间）获取具有相对于 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 的像素坐标的点。</summary>
<returns>使用从 <paramref name="logicalPoint"/> 转换的、相对于 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 的像素坐标的点。</returns>
<param name="logicalPoint">要转换为相对于 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 的像素坐标的逻辑点。</param>
    </member>
    <member name="E:System.Windows.Controls.MultiScaleImage.MotionFinished">
<summary>当缩放或平移动画结束时发生。 </summary>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.SkipLevels">
<summary>获取或设置一个值，该值指示加载 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 时要跳过的级别。 </summary>
<returns>一个整数，表示加载 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 时跳过的级别。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.SkipLevelsProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleImage.SkipLevels"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleImage.SkipLevels"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.Source">
<summary>获取或设置用作 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 的源的 <see cref="T:System.Windows.Media.MultiScaleTileSource"/> 对象。</summary>
<returns>用作 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 的源的 <see cref="T:System.Windows.Media.MultiScaleTileSource"/> 对象。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.SourceProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleImage.Source"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleImage.Source"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.SubImages">
<summary>获取由 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 使用的多分辨率图像中的 <see cref="T:System.Windows.Controls.MultiScaleSubImage"/> 对象集合。</summary>
<returns>获取由 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 使用的多分辨率图像中的 <see cref="T:System.Windows.Controls.MultiScaleSubImage"/> 对象集合。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.SubImagesProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleImage.SubImages"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleImage.SubImages"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.UseSprings">
<summary>获取或设置一个指示 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 是否使用弹簧动画的值。</summary>
<returns>如果 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 使用弹簧动画，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.UseSpringsProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleImage.UseSprings"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleImage.UseSprings"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.MultiScaleImage.ViewportChanged">
<summary>当视区（所显示的图像区域）发生变化时发生。 </summary>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.ViewportOrigin">
<summary>获取或设置要显示的图像区域的左上角。 </summary>
<returns>要显示的图像矩形区域的左上角。 </returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.ViewportOriginProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleImage.ViewportOrigin"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleImage.ViewportOrigin"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.ViewportWidth">
<summary>获取或设置所显示的图像区域的宽度。</summary>
<returns>所显示的图像区域的宽度。 </returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.ViewportWidthProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleImage.ViewportWidth"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleImage.ViewportWidth"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.MultiScaleImage.ZoomAboutLogicalPoint(System.Double,System.Double,System.Double)">
<summary>使用户能够放大 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 的某个点。</summary>
<param name="zoomIncrementFactor">指定缩放。此数字大于 0。值为 1 表示图像正好适合所分配的页面大小。大于 1 的数字表示放大。如果使用 0 值或更小的值，则将返回失败且不应用缩放更改。  </param>
<param name="zoomCenterLogicalX"><see cref="T:System.Windows.Controls.MultiScaleImage"/> 上所放大的点的 X 坐标。这是一个逻辑点（介于 0 到 1 之间）。 </param>
<param name="zoomCenterLogicalY"><see cref="T:System.Windows.Controls.MultiScaleImage"/> 上所放大的点的 Y 坐标。这是一个逻辑点（介于 0 到 1 之间）。</param>
    </member>
    <member name="T:System.Windows.Controls.MultiScaleSubImage">
<summary>该类保留 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 中每个子图像的属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.MultiScaleSubImage.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.MultiScaleSubImage"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleSubImage.AspectRatio">
<summary>获取用作 <see cref="T:System.Windows.Controls.MultiScaleSubImage"/> 的源的图像的纵横比。纵横比为图像宽度与高度之比。</summary>
<returns>用作 <see cref="T:System.Windows.Controls.MultiScaleSubImage"/> 的源的图像的纵横比。纵横比为图像宽度与高度之比。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleSubImage.AspectRatioProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleSubImage.AspectRatio"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleSubImage.AspectRatio"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleSubImage.Opacity">
<summary>获取或设置 <see cref="T:System.Windows.Controls.MultiScaleSubImage"/> 的不透明度。</summary>
<returns>声明不透明度的值，范围为 0 到 1.0，其中 1.0 表示完全不透明，0 表示透明。默认值为 1.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleSubImage.OpacityProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleSubImage.Opacity"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleSubImage.Opacity"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleSubImage.ViewportOrigin">
<summary>获取或设置要显示的图像区域的左上角。</summary>
<returns>要显示的图像矩形区域左上角的点。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleSubImage.ViewportOriginProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleSubImage.ViewportOrigin"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleSubImage.ViewportOrigin"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleSubImage.ViewportWidth">
<summary>获取或设置所显示的图像区域的宽度。</summary>
<returns>所显示的图像区域的宽度。 </returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleSubImage.ViewportWidthProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleSubImage.ViewportWidth"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleSubImage.ViewportWidth"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleSubImage.ZIndex">
<summary>获取或设置一个表示 <see cref="T:System.Windows.Controls.MultiScaleSubImage"/> 的 Z 顺序呈现行为的值。Z 顺序决定对象的相对呈现顺序（也即一个对象位于其他哪些对象之上）。</summary>
<returns>表示 <see cref="T:System.Windows.Controls.MultiScaleSubImage"/> 的 Z 顺序呈现行为的值。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleSubImage.ZIndexProperty">
<summary>标识 <see cref="P:System.Windows.Controls.MultiScaleSubImage.ZIndex"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.MultiScaleSubImage.ZIndex"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.NotifyEventArgs">
<summary>为 <see cref="E:System.Windows.Controls.WebBrowser.ScriptNotify"/> 事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.Controls.NotifyEventArgs.Value">
<summary>获取或设置传递给 Silverlight 插件的 JavaScript 方法名称。 </summary>
<returns>传递给 Silverlight 插件的 JavaScript 方法名称。</returns>
    </member>
    <member name="T:System.Windows.Controls.OpenFileDialog">
<summary>提供一个对话框，该对话框使用户能够选择一个或多个文件。 </summary>
    </member>
    <member name="M:System.Windows.Controls.OpenFileDialog.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.OpenFileDialog"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.OpenFileDialog.File">
<summary>获取选定文件的 <see cref="T:System.IO.FileInfo"/> 对象。如果选择多个文件，则返回第一个选定文件。</summary>
<returns>选定的文件。如果选择多个文件，则返回第一个选定文件。</returns>
    </member>
    <member name="P:System.Windows.Controls.OpenFileDialog.Files">
<summary>获取选定文件的 <see cref="T:System.IO.FileInfo"/> 对象的集合。</summary>
<returns>选定文件的 <see cref="T:System.IO.FileInfo"/> 对象的集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.OpenFileDialog.Filter">
<summary>获取或设置指定要在 <see cref="T:System.Windows.Controls.OpenFileDialog"/> 中显示的文件类型和说明的筛选器字符串。</summary>
<returns>指定要在 <see cref="T:System.Windows.Controls.OpenFileDialog"/> 中显示的文件类型和说明的筛选器字符串。默认值为 <see cref="F:System.String.Empty"/>。</returns>
<exception cref="T:System.ArgumentException">筛选器字符串不包含至少一个竖线 (|)。-或- 筛选器扩展名不包含通配符 (*)。（仅限 Silverlight 4）</exception>
    </member>
    <member name="P:System.Windows.Controls.OpenFileDialog.FilterIndex">
<summary>获取或设置 <see cref="T:System.Windows.Controls.OpenFileDialog"/> 筛选器下拉列表中选定项的索引。</summary>
<returns><see cref="T:System.Windows.Controls.OpenFileDialog"/> 筛选器下拉列表中选定项的索引。默认值为 1。</returns>
<exception cref="T:System.ArgumentOutOfRangeException">筛选器索引小于 1。</exception>
    </member>
    <member name="P:System.Windows.Controls.OpenFileDialog.Multiselect">
<summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.OpenFileDialog"/> 是否允许用户选择多个文件。</summary>
<returns>如果允许多重选择，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="M:System.Windows.Controls.OpenFileDialog.ShowDialog">
<summary>显示作为 Web 浏览器窗口的模式的 <see cref="T:System.Windows.Controls.OpenFileDialog"/>。</summary>
<returns>如果用户单击“确定”，则为 true；如果用户单击“取消”或关闭对话框，则为 false。</returns>
<exception cref="T:System.InvalidOperationException">Silverlight 无法显示对话框。</exception>
<exception cref="T:System.Security.SecurityException">Internet Explorer 中禁用活动脚本。-或- 对 <see cref="M:System.Windows.Controls.OpenFileDialog.ShowDialog"/> 方法的调用不是从用户启动的代码中进行的，或者用户启动和对话框的显示之间经过了太多时间。</exception>
    </member>
    <member name="T:System.Windows.Controls.Orientation">
<summary>定义控件或布局可具有的不同方向。</summary>
    </member>
    <member name="F:System.Windows.Controls.Orientation.Vertical">
<summary>控件或布局应为垂直方向。</summary>
    </member>
    <member name="F:System.Windows.Controls.Orientation.Horizontal">
<summary>控件或布局应为水平方向。</summary>
    </member>
    <member name="T:System.Windows.Controls.Panel">
<summary>为所有 <see cref="T:System.Windows.Controls.Panel"/> 元素提供基类。在基于 Silverlight 的应用程序中使用 <see cref="T:System.Windows.Controls.Panel"/> 元素放置和排列子对象。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Panel.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Panel"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.Panel.Background">
<summary>获取或设置一个用于填充面板的 <see cref="T:System.Windows.Media.Brush"/>。 </summary>
<returns>用于填充面板的画笔。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Panel.BackgroundProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Panel.Background"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Panel.Background"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.Children">
<summary>获取面板子元素的集合。 </summary>
<returns>子对象的集合。默认值为空集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.IsItemsHost">
<summary>获取一个值，该值指示此 <see cref="T:System.Windows.Controls.Panel"/> 是否为 <see cref="T:System.Windows.Controls.ItemsControl"/> 生成的 UI 项的容器。</summary>
<returns>如果此 <see cref="T:System.Windows.Controls.Panel"/> 实例是项宿主，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Panel.IsItemsHostProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Panel.IsItemsHost"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Panel.IsItemsHost"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.PasswordBox">
<summary>表示用于输入密码的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.PasswordBox"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.BaselineOffset">
<summary>获取表示每个文本行相对于基线的偏移量的值。</summary>
<returns>每个文本行相对于基线的偏移量，以与设备无关的像素为单位。<see cref="F:System.Double.NaN"/> 指示根据当前字体特征自动计算最佳基线偏移量。默认值为 <see cref="F:System.Double.NaN"/>。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.CaretBrush">
<summary>获取或设置用于呈现指示插入点的竖线的画笔。</summary>
<returns>用于呈现指示插入点的竖线的画笔。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.CaretBrushProperty">
<summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.CaretBrush"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.PasswordBox.CaretBrush"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.FontSource">
<summary>获取或设置应用于密码框以呈现内容的字体源。</summary>
<returns>用于在文本框中呈现内容的字体源。默认值为 null。</returns>
<exception cref="T:System.ArgumentOutOfRangeException">所设置的值不是有效的源。</exception>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.MaxLength">
<summary>获取或设置要由此 <see cref="T:System.Windows.Controls.PasswordBox"/> 处理的密码的最大长度。</summary>
<returns>一个整数，用于指定要由此 <see cref="T:System.Windows.Controls.PasswordBox"/> 处理的密码的最大长度（以字符为单位）。值为零 (0) 表示没有限制。默认值为 0（没有长度限制）。</returns>
<exception cref="T:System.ArgumentOutOfRangeException">该属性设置为负值。</exception>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.MaxLengthProperty">
<summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.MaxLength"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.PasswordBox.MaxLength"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.Password">
<summary>获取或设置 <see cref="T:System.Windows.Controls.PasswordBox"/> 当前保留的密码。</summary>
<returns>一个字符串，表示 <see cref="T:System.Windows.Controls.PasswordBox"/> 当前保留的密码。默认值为 <see cref="F:System.String.Empty"/>。</returns>
<exception cref="T:System.ArgumentNullException">该属性设置为 null 值。</exception>
    </member>
    <member name="E:System.Windows.Controls.PasswordBox.PasswordChanged">
<summary>当 <see cref="P:System.Windows.Controls.PasswordBox.Password"/> 属性的值更改时发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.PasswordChar">
<summary>获取或设置 <see cref="T:System.Windows.Controls.PasswordBox"/> 的掩码字符。 </summary>
<returns>要在用户向 <see cref="T:System.Windows.Controls.PasswordBox"/> 中输入文本时回显的掩码字符。默认值为项目符号字符 (●)。 </returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.PasswordCharProperty">
<summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.PasswordChar"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.PasswordBox.PasswordChar"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.PasswordProperty">
<summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.Password"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.PasswordBox.Password"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.SelectAll">
<summary>选择 <see cref="T:System.Windows.Controls.PasswordBox"/> 中的所有字符。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionBackground">
<summary>获取或设置用于呈现选定文本的背景的画笔。</summary>
<returns>填充选定文本的背景的画笔。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionBackgroundProperty">
<summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.SelectionBackground"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.PasswordBox.SelectionBackground"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionForeground">
<summary>获取或设置用于 <see cref="T:System.Windows.Controls.PasswordBox"/> 中选定文本的画笔。</summary>
<returns>用于 <see cref="T:System.Windows.Controls.PasswordBox"/> 中选定文本的画笔。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionForegroundProperty">
<summary>标识 <see cref="P:System.Windows.Controls.PasswordBox.SelectionForeground"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.PasswordBox.SelectionForeground"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ProgressBar">
<summary>表示一个指示操作进度的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.ProgressBar"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.ProgressBar.IsIndeterminate">
<summary>获取或设置一个值，该值指示进度条是使用重复模式报告一般进度，还是基于 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> 属性报告进度。 </summary>
<returns>如果进度条使用重复模式报告一般进度，则为 true；如果进度条基于 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> 属性报告进度，则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ProgressBar.IsIndeterminateProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.ProgressBar"/> 控件的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnCreateAutomationPeer">
<summary>返回 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer"/> 以便由 Silverlight 自动化基础结构使用。</summary>
<returns><see cref="T:System.Windows.Controls.ProgressBar"/> 对象的 <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer"/>。</returns>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnMaximumChanged(System.Double,System.Double)">
<summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> 属性的值更改时调用。</summary>
<param name="oldMaximum">先前的值。</param>
<param name="newMaximum">新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnMinimumChanged(System.Double,System.Double)">
<summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> 属性的值更改时调用。</summary>
<param name="oldMinimum">先前的值。</param>
<param name="newMinimum">新值。</param>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnValueChanged(System.Double,System.Double)">
<summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> 属性的值更改时调用。</summary>
<param name="oldValue">先前的值。</param>
<param name="newValue">新值。</param>
    </member>
    <member name="T:System.Windows.Controls.RadioButton">
<summary>表示一个按钮，使用该按钮，用户可从一组选项中选择一个选项。</summary>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.RadioButton"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.RadioButton.GroupName">
<summary>获取或设置指定哪些 <see cref="T:System.Windows.Controls.RadioButton"/> 控件互相排斥的名称。</summary>
<returns>指定哪些 <see cref="T:System.Windows.Controls.RadioButton"/> 控件互相排斥的名称。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.RadioButton.GroupNameProperty">
<summary>标识 <see cref="P:System.Windows.Controls.RadioButton.GroupName"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.RadioButton.GroupName"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnCreateAutomationPeer">
<summary>返回 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer"/> 以便由 Silverlight 自动化基础结构使用。</summary>
<returns>单选按钮对象的 <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer"/>。</returns>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnToggle">
<summary>将 <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked"/> 属性设置为 true。</summary>
    </member>
    <member name="T:System.Windows.Controls.RichTextBox">
<summary>表示支持格式化文本、超链接、内联图像和其他丰富内容的多格式文本编辑控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.RichTextBox"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.AcceptsReturn">
<summary>获取或设置一个值，该值确定在按下 ENTER 或 RETURN 键时 <see cref="T:System.Windows.Controls.RichTextBox"/> 是否允许和显示换行符或回车符。</summary>
<returns>如果 <see cref="T:System.Windows.Controls.RichTextBox"/> 允许换行符，则为 true；否则为 false。默认值为 true。 </returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.AcceptsReturnProperty">
<summary>标识 <see cref="P:System.Windows.Controls.RichTextBox.AcceptsReturn"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.RichTextBox.AcceptsReturn"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.BaselineOffset">
<summary>获取一个值，该值表示从内容顶部到第一段的基线的偏移量，以像素为单位。段落的基线就是其中第一行的基线。</summary>
<returns>所计算的第一段的基线，如果 <see cref="T:System.Windows.Controls.RichTextBox"/> 为空，则为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Blocks">
<summary>获取 <see cref="T:System.Windows.Controls.RichTextBox"/> 的内容。</summary>
<returns>一个包含 <see cref="T:System.Windows.Controls.RichTextBox"/> 的内容的 <see cref="T:System.Windows.Documents.BlockCollection"/>。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.CaretBrush">
<summary>获取或设置用于呈现指示插入点的竖线的画笔。</summary>
<returns>用于呈现指示插入点的竖线的画笔。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.CaretBrushProperty">
<summary>标识 <see cref="P:System.Windows.Controls.RichTextBox.CaretBrush"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.RichTextBox.CaretBrush"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.RichTextBox.ContentChanged">
<summary>当 <see cref="T:System.Windows.Controls.RichTextBox"/> 中的内容更改时发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.ContentEnd">
<summary>获取指示 <see cref="T:System.Windows.Controls.RichTextBox"/> 中内容末尾的 <see cref="T:System.Windows.Documents.TextPointer"/>。</summary>
<returns>一个 <see cref="T:System.Windows.Documents.TextPointer"/>，它指示 <see cref="T:System.Windows.Controls.RichTextBox"/> 中内容的末尾。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.ContentStart">
<summary>获取指示 <see cref="T:System.Windows.Controls.RichTextBox"/> 中内容开头的 <see cref="T:System.Windows.Documents.TextPointer"/>。</summary>
<returns>一个 <see cref="T:System.Windows.Documents.TextPointer"/>，它指示 <see cref="T:System.Windows.Controls.RichTextBox"/> 中内容的开头。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetPositionFromPoint(System.Windows.Point)">
<summary>返回一个 <see cref="T:System.Windows.Documents.TextPointer"/>，它指示指定点的最近插入位置。</summary>
<returns>一个 <see cref="T:System.Windows.Documents.TextPointer"/>，它指示指定点的最近插入位置。</returns>
<param name="point">检索其最近插入位置的 <see cref="T:System.Windows.Controls.RichTextBox"/> 坐标空间中的一个点。</param>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.HorizontalScrollBarVisibility">
<summary>获取或设置水平滚动条的可见性。</summary>
<returns>水平滚动条的可见性。默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden"/>。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.IsReadOnly">
<summary>获取或设置一个值，该值确定用户是否可以在 <see cref="T:System.Windows.Controls.RichTextBox"/> 中更改文本。</summary>
<returns>如果 <see cref="T:System.Windows.Controls.RichTextBox"/> 为只读，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.IsReadOnlyProperty">
<summary>标识 <see cref="P:System.Windows.Controls.RichTextBox.IsReadOnly"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.RichTextBox.IsReadOnly"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.LineHeight">
<summary>获取或设置各行内容的高度。</summary>
<returns>每行的高度（以像素为单位）。值 0 指示将根据当前字体特征自动确定行高。默认值为 0。</returns>
      <exception cref="T:System.ArgumentException">
<see cref="P:System.Windows.Controls.RichTextBox.LineHeight"/> 设置为一个非正值。</exception>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.LineHeightProperty">
<summary>标识 <see cref="P:System.Windows.Controls.RichTextBox.LineHeight"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.RichTextBox.LineHeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.LineStackingStrategy">
<summary>获取或设置一个值，该值指示如何为 <see cref="T:System.Windows.Controls.RichTextBox"/> 中的每行文本确定一个行框。</summary>
<returns>指示如何为 <see cref="T:System.Windows.Controls.RichTextBox"/> 中的每行文本确定一个行框的值。默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.LineStackingStrategyProperty">
<summary>标识 <see cref="P:System.Windows.Controls.RichTextBox.LineStackingStrategy"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.RichTextBox.LineStackingStrategy"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnCreateAutomationPeer">
<summary>返回 <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer"/> 以便由 Silverlight 自动化基础结构使用。</summary>
<returns><see cref="T:System.Windows.Controls.RichTextBox"/> 对象的 <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer"/>。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnGotFocus(System.Windows.RoutedEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.GotFocus"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.KeyDown"/> 事件发生时调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnKeyUp(System.Windows.Input.KeyEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.KeyUp"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnLostFocus(System.Windows.RoutedEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.LostFocus"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.LostMouseCapture"/> 事件提供处理。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Input.MouseEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseEnter"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseLeave"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnMouseMove(System.Windows.Input.MouseEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseMove"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.TextInput"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnTextInputStart(System.Windows.Input.TextCompositionEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.TextInputStart"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnTextInputUpdate(System.Windows.Input.TextCompositionEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.TextInputUpdate"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.OverflowContentTarget">
<summary>获取或设置将使用此 <see cref="T:System.Windows.Controls.RichTextBox"/> 的溢出内容的 <see cref="T:System.Windows.Controls.RichTextBoxOverflow"/>。</summary>
<returns>使用此 <see cref="T:System.Windows.Controls.RichTextBox"/> 溢出内容的 <see cref="T:System.Windows.Controls.RichTextBoxOverflow"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.OverflowContentTargetProperty">
<summary>标识 <see cref="P:System.Windows.Controls.RichTextBox.OverflowContentTarget"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.RichTextBox.OverflowContentTarget"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.SelectAll">
<summary>选择 <see cref="T:System.Windows.Controls.RichTextBox"/> 中的全部内容。</summary>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Selection">
<summary>获取 <see cref="T:System.Windows.Controls.RichTextBox"/> 中的 <see cref="T:System.Windows.Documents.TextSelection"/>。</summary>
<returns>一个 <see cref="T:System.Windows.Documents.TextSelection"/>，它表示 <see cref="T:System.Windows.Controls.RichTextBox"/> 中的选定文本。</returns>
    </member>
    <member name="E:System.Windows.Controls.RichTextBox.SelectionChanged">
<summary>在文本选定内容更改后发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.TextAlignment">
<summary>获取或设置文本应在 <see cref="T:System.Windows.Controls.RichTextBox"/> 中进行对齐的方式。</summary>
<returns><see cref="T:System.Windows.TextAlignment"/> 枚举值之一。默认值为 Left。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.TextAlignmentProperty">
<summary>标识 <see cref="P:System.Windows.Controls.RichTextBox.TextAlignment"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.RichTextBox.TextAlignment"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.TextWrapping">
<summary>获取或设置当一行文本超过 <see cref="T:System.Windows.Controls.RichTextBox"/> 的可用宽度后如何进行换行。</summary>
<returns><see cref="T:System.Windows.TextWrapping"/> 值之一。默认值为 <see cref="F:System.Windows.TextWrapping.Wrap"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.TextWrappingProperty">
<summary>标识 <see cref="P:System.Windows.Controls.RichTextBox.TextWrapping"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.RichTextBox.TextWrapping"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.VerticalScrollBarVisibility">
<summary>获取或设置垂直滚动条的可见性。</summary>
<returns>垂直滚动条的可见性。默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto"/>。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Xaml">
<summary>获取或设置 <see cref="T:System.Windows.Controls.RichTextBox"/> 中内容的 XAML 表示形式。</summary>
<returns>一个 <see cref="T:System.String"/> 对象，它是 <see cref="T:System.Windows.Controls.RichTextBox"/> 中内容的 XAML 表示形式。</returns>
    </member>
    <member name="T:System.Windows.Controls.RichTextBoxOverflow">
<summary>显示不适合 <see cref="T:System.Windows.Controls.RichTextBox"/> 或其他 <see cref="T:System.Windows.Controls.RichTextBoxOverflow"/> 实例的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.RichTextBoxOverflow.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.RichTextBoxOverflow"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.RichTextBoxOverflow.HorizontalScrollBarVisibility">
<summary>获取或设置水平滚动条的可见性。</summary>
<returns>水平滚动条的可见性。默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden"/>。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBoxOverflow.OverflowContentTarget">
<summary>获取或设置将使用此链接容器的任何溢出内容的 <see cref="T:System.Windows.Controls.RichTextBoxOverflow"/>。</summary>
<returns>将使用此链接容器的任何溢出内容的 <see cref="T:System.Windows.Controls.RichTextBoxOverflow"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBoxOverflow.OverflowContentTargetProperty">
<summary>标识 <see cref="P:System.Windows.Controls.RichTextBoxOverflow.OverflowContentTarget"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.RichTextBoxOverflow.OverflowContentTarget"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBoxOverflow.VerticalScrollBarVisibility">
<summary>获取或设置垂直滚动条的可见性。</summary>
<returns>垂直滚动条的可见性。默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden"/>。</returns>
    </member>
    <member name="T:System.Windows.Controls.RowDefinition">
<summary>定义应用于 <see cref="T:System.Windows.Controls.Grid"/> 元素的特定于行的属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.RowDefinition.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.RowDefinition"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.ActualHeight">
<summary>获取一个值，该值表示 <see cref="T:System.Windows.Controls.RowDefinition"/> 的计算高度。</summary>
<returns>一个 <see cref="T:System.Double"/>，表示以像素为单位的计算高度。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.Height">
<summary>获取 <see cref="T:System.Windows.Controls.RowDefinition"/> 元素的计算高度，或设置由 <see cref="T:System.Windows.Controls.RowDefinition"/> 定义的行的 <see cref="T:System.Windows.GridLength"/> 值。 </summary>
<returns>表示行的高度的 <see cref="T:System.Windows.GridLength"/>。默认值为 1.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.HeightProperty">
<summary>标识 <see cref="P:System.Windows.Controls.RowDefinition.Height"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.RowDefinition.Height"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.MaxHeight">
<summary>获取或设置一个表示 <see cref="T:System.Windows.Controls.RowDefinition"/> 的最大高度的值。</summary>
<returns>一个表示最大高度的 <see cref="T:System.Double"/>。 </returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.MaxHeightProperty">
<summary>标识 <see cref="P:System.Windows.Controls.RowDefinition.MaxHeight"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.RowDefinition.MaxHeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.MinHeight">
<summary>获取或设置一个表示 <see cref="T:System.Windows.Controls.RowDefinition"/> 的允许的最小高度的值。 </summary>
<returns>表示允许的最小高度的 <see cref="T:System.Double"/>。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.MinHeightProperty">
<summary>标识 <see cref="P:System.Windows.Controls.RowDefinition.MinHeight"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.RowDefinition.MinHeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.RowDefinitionCollection">
<summary>提供对 <see cref="T:System.Windows.Controls.RowDefinition"/> 对象的有序强类型集合的访问。</summary>
    </member>
    <member name="T:System.Windows.Controls.SaveFileDialog">
<summary>提供一个对话框，用户使用该对话框可指定保存文件时使用的选项。</summary>
    </member>
    <member name="M:System.Windows.Controls.SaveFileDialog.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.SaveFileDialog"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.SaveFileDialog.DefaultExt">
<summary>获取或设置应用于通过 <see cref="T:System.Windows.Controls.SaveFileDialog"/> 保存的文件的默认文件扩展名。</summary>
<returns>应用于通过 <see cref="T:System.Windows.Controls.SaveFileDialog"/> 保存的文件的默认文件扩展名，可以包括点字符 (.)。</returns>
    </member>
    <member name="P:System.Windows.Controls.SaveFileDialog.DefaultFileName">
<summary>获取或设置使用的文件名（如果用户未指定文件名）。</summary>
<returns>使用的文件名（如果用户未指定文件名）。<see cref="T:System.String"/></returns>
<exception cref="T:System.ArgumentException">如果指定的文件名为 null 或包含以下无效字符时发生：引号 (")、小于号 (&lt;)、大于号 (&gt;)、管道符号 (|)、退格 (\b)、null (\0)、制表符 (\t)、冒号 (:)、星号 (*)、问号 (?) 以及斜杠 (\\, /)。</exception>
    </member>
    <member name="P:System.Windows.Controls.SaveFileDialog.Filter">
<summary>获取或设置指定要在 <see cref="T:System.Windows.Controls.SaveFileDialog"/> 中显示的文件类型和说明的筛选器字符串。</summary>
<returns>指定要在 <see cref="T:System.Windows.Controls.SaveFileDialog"/> 中显示的文件类型和说明的筛选器字符串。默认值为 <see cref="F:System.String.Empty"/>。</returns>
<exception cref="T:System.ArgumentException">筛选器字符串不包含至少一个竖线 (|)。</exception>
    </member>
    <member name="P:System.Windows.Controls.SaveFileDialog.FilterIndex">
<summary>获取或设置“保存类型”下拉列表中选定项的索引。</summary>
<returns>“保存类型”筛选器下拉列表中选定项的索引。默认值为 1。</returns>
<exception cref="T:System.ArgumentOutOfRangeException">筛选器索引小于 1。</exception>
    </member>
    <member name="M:System.Windows.Controls.SaveFileDialog.OpenFile">
<summary>打开由 <see cref="P:System.Windows.Controls.SaveFileDialog.SafeFileName"/> 属性指定的文件。</summary>
<returns><see cref="P:System.Windows.Controls.SaveFileDialog.SafeFileName"/> 参数指定的文件的读写流。</returns>
<exception cref="T:System.InvalidOperationException">未在对话框中选择任何文件。</exception>
    </member>
    <member name="P:System.Windows.Controls.SaveFileDialog.SafeFileName">
<summary>获取或设置与 <see cref="T:System.Windows.Controls.SaveFileDialog"/> 关联的所选文件的文件名。</summary>
<returns>与 <see cref="T:System.Windows.Controls.SaveFileDialog"/> 关联的所选文件的文件名。默认值为 <see cref="F:System.String.Empty"/>。</returns>
    </member>
    <member name="M:System.Windows.Controls.SaveFileDialog.ShowDialog">
<summary>显示作为 Web 浏览器窗口的模式的 <see cref="T:System.Windows.Controls.SaveFileDialog"/>。</summary>
<returns>如果用户单击“保存”，则为 true；如果用户单击“取消”或关闭对话框，则为 false。</returns>
<exception cref="T:System.InvalidOperationException">Silverlight 不能显示对话框，原因是筛选器的格式设置不正确、筛选器索引无效或其他原因。</exception>
<exception cref="T:System.Security.SecurityException">Internet Explorer 中禁用活动脚本。-或- 对 <see cref="M:System.Windows.Controls.OpenFileDialog.ShowDialog"/> 方法的调用不是从用户启动的代码中进行的，或者用户启动和对话框的显示之间经过了太多时间。</exception>
    </member>
    <member name="T:System.Windows.Controls.ScrollBarVisibility">
<summary>指定 <see cref="T:System.Windows.Controls.ScrollViewer"/> 控件中滚动条的可见性。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Disabled">
<summary>即使当视区无法显示所有内容时，<see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 也不会出现。将内容的维度设置为 <see cref="T:System.Windows.Controls.ScrollViewer"/> 父级的对应维度。对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>，内容的宽度设置为 <see cref="T:System.Windows.Controls.ScrollViewer"/> 的 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth"/>。对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>，内容的高度设置为 <see cref="T:System.Windows.Controls.ScrollViewer"/> 的 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight"/>。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Auto">
<summary>当视区无法显示所有内容时，<see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 会出现，并将 <see cref="T:System.Windows.Controls.ScrollViewer"/> 的维度应用于内容。对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>，内容的宽度设置为 <see cref="T:System.Windows.Controls.ScrollViewer"/> 的 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth"/>。对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>，内容的高度设置为 <see cref="T:System.Windows.Controls.ScrollViewer"/> 的 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight"/>。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Hidden">
<summary>即使当视区无法显示所有内容时，<see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 也不会出现。未将 <see cref="T:System.Windows.Controls.ScrollViewer"/> 的维度应用于内容。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Visible">
<summary><see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 始终出现。将 <see cref="T:System.Windows.Controls.ScrollViewer"/> 的维度应用于内容。对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>，内容的宽度设置为 <see cref="T:System.Windows.Controls.ScrollViewer"/> 的 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth"/>。对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>，内容的高度设置为 <see cref="T:System.Windows.Controls.ScrollViewer"/> 的 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight"/>。</summary>
    </member>
    <member name="T:System.Windows.Controls.ScrollContentPresenter">
<summary>显示 <see cref="T:System.Windows.Controls.ScrollViewer"/> 控件的内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.ScrollContentPresenter"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanHorizontallyScroll">
<summary>获取或设置一个值，该值指示能否在水平轴上滚动。</summary>
<returns>如果可以滚动，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanVerticallyScroll">
<summary>获取或设置一个值，该值指示能否在垂直轴上滚动。</summary>
<returns>如果可以滚动，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentHeight">
<summary>获取范围的垂直大小。</summary>
<returns>范围的垂直大小。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentWidth">
<summary>获取范围的水平大小。</summary>
<returns>范围的水平大小。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.HorizontalOffset">
<summary>获取或设置内容已水平滚动的距离。</summary>
<returns>内容已水平滚动的距离。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineDown">
<summary>将 <see cref="T:System.Windows.Controls.ScrollContentPresenter"/> 内容向下滚动一行。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineLeft">
<summary>将 <see cref="T:System.Windows.Controls.ScrollContentPresenter"/> 内容向左滚动预设的量。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineRight">
<summary>将 <see cref="T:System.Windows.Controls.ScrollContentPresenter"/> 内容向右滚动预设的量。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineUp">
<summary>将 <see cref="T:System.Windows.Controls.ScrollContentPresenter"/> 内容向上滚动一行。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MakeVisible(System.Windows.UIElement,System.Windows.Rect)">
<summary>强制内容滚动，直至可视对象的坐标空间可见。</summary>
<returns>表示可见区域的 <see cref="T:System.Windows.Rect"/>。 </returns>
<param name="visual">变为可见的 <see cref="T:System.Windows.UIElement"/>。</param>
<param name="rectangle">标识坐标空间使之可见的边框。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelDown">
<summary>用户单击鼠标上的滚轮按钮后向下滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelLeft">
<summary>用户单击鼠标上的滚轮按钮后向左滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelRight">
<summary>用户单击鼠标上的滚轮按钮后向右滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelUp">
<summary>用户单击鼠标上的滚轮按钮后向上滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.ScrollContentPresenter"/> 的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageDown">
<summary>将内容向下滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageLeft">
<summary>将内容向左滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageRight">
<summary>将内容向右滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageUp">
<summary>将内容向上滚动一页。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ScrollOwner">
<summary>获取或设置一个控制滚动行为的 <see cref="T:System.Windows.Controls.ScrollViewer"/> 元素。</summary>
<returns>控制滚动行为的 <see cref="T:System.Windows.Controls.ScrollViewer"/> 元素。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.SetHorizontalOffset(System.Double)">
<summary>设置内容已水平滚动的距离。</summary>
<param name="offset">内容已水平滚动的距离。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.SetVerticalOffset(System.Double)">
<summary>设置内容已垂直滚动的距离。</summary>
<param name="offset">内容已垂直滚动的距离。</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.VerticalOffset">
<summary>获取或设置内容已垂直滚动的距离。</summary>
<returns>内容已垂直滚动的距离。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportHeight">
<summary>获取视区的垂直大小。</summary>
<returns>视区的垂直大小。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportWidth">
<summary>获取视区的水平大小。</summary>
<returns>视区的水平大小。</returns>
    </member>
    <member name="T:System.Windows.Controls.ScrollViewer">
<summary>表示可包含其他可见元素的可滚动区域。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.ScrollViewer"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
<summary>获取一个值，该值指示水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 是否可见。 </summary>
<returns>一个 <see cref="T:System.Windows.Visibility"/>，该值指示水平工具栏是否可见。默认值为 <see cref="F:System.Windows.Visibility.Visible"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibilityProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
<summary>获取一个值，该值表示垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 是否可见。 </summary>
<returns>一个 <see cref="T:System.Windows.Visibility"/>，该值指示垂直工具栏是否可见。默认值为 <see cref="F:System.Windows.Visibility.Visible"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibilityProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
<summary>获取 <see cref="T:System.Windows.Controls.ScrollViewer"/> 中显示的所有内容的垂直大小。</summary>
<returns><see cref="T:System.Windows.Controls.ScrollViewer"/> 中显示的所有内容的垂直大小。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ExtentHeightProperty">
<summary><see cref="P:System.Windows.Controls.ScrollViewer.ExtentHeight"/> 依赖项属性的标识符。</summary>
<returns><see cref="P:System.Windows.Controls.ScrollViewer.ExtentHeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
<summary>获取 <see cref="T:System.Windows.Controls.ScrollViewer"/> 中显示的所有内容的水平大小。</summary>
<returns><see cref="T:System.Windows.Controls.ScrollViewer"/> 中显示的所有内容的水平大小。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ExtentWidthProperty">
<summary><see cref="P:System.Windows.Controls.ScrollViewer.ExtentWidth"/> 依赖项属性的标识符。</summary>
<returns><see cref="P:System.Windows.Controls.ScrollViewer.ExtentWidth"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetHorizontalScrollBarVisibility(System.Windows.DependencyObject)">
<summary>从指定元素获取 <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility"/> 依赖项属性的值。</summary>
<returns><see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility"/> 依赖项属性的值。</returns>
<param name="element">从中读取属性值的元素。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetManipulationMode(System.Windows.DependencyObject)">
<summary>获取 <see cref="P:System.Windows.Controls.ScrollViewer.ManipulationMode"/> 附加属性的值并支持该属性的 XAML 用法。</summary>
<returns>获取的 <see cref="P:System.Windows.Controls.ScrollViewer.ManipulationMode"/> 附加属性值。</returns>
<param name="element">从中获取属性值的对象。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetVerticalScrollBarVisibility(System.Windows.DependencyObject)">
<summary>从指定元素获取 <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility"/> 依赖项属性的值。</summary>
<returns><see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility"/> 依赖项属性的值。</returns>
<param name="element">从中读取属性值的元素。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
<summary>获取一个值，该值包含滚动内容的水平偏移量。 </summary>
<returns>可滚动内容的水平偏移量。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.HorizontalOffsetProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalOffset"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.ScrollViewer.HorizontalOffset"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility">
<summary>获取或设置一个值，该值指示是否应显示水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>。</summary>
<returns>一个 <see cref="T:System.Windows.Controls.ScrollBarVisibility"/> 值，该值指示是否应显示水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>。默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.InvalidateScrollInfo">
<summary>当用于描述滚动区域大小和位置的属性值更改时调用。 </summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ManipulationMode">
<summary>获取或设置用于 <see cref="T:System.Windows.Controls.ScrollViewer"/> 行为的操作模式。</summary>
<returns>用于 <see cref="T:System.Windows.Controls.ScrollViewer"/> 行为的操作模式。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ManipulationModeProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ManipulationMode"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.ScrollViewer.ManipulationMode"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.ScrollViewer"/> 控件的可视化树。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
<summary>获取一个表示可滚动区域的垂直大小的值，或一个表示范围高度和视区高度差别的值。</summary>
<returns>可滚动区域的垂直大小。此属性无默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollableHeightProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableHeight"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.ScrollViewer.ScrollableHeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollableWidth">
<summary>获取一个表示可滚动区域的水平大小的值，或一个表示范围宽度和视区宽度差别的值。 </summary>
<returns>可滚动区域的水平大小。此属性无默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollableWidthProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Double)">
<summary>将 <see cref="T:System.Windows.Controls.ScrollViewer"/> 内的内容滚动到指定的水平偏移量位置。</summary>
<param name="offset">内容滚动到的位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToVerticalOffset(System.Double)">
<summary>将 <see cref="T:System.Windows.Controls.ScrollViewer"/> 内的内容滚动到指定的垂直偏移量位置。</summary>
<param name="offset">内容滚动到的位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetHorizontalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
<summary>将 <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility"/> 依赖项属性的值设置为指定元素。</summary>
<param name="element">对其设置属性值的元素。</param>
<param name="horizontalScrollBarVisibility">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetManipulationMode(System.Windows.DependencyObject,System.Windows.Controls.ManipulationMode)">
<summary>设置 <see cref="P:System.Windows.Controls.ScrollViewer.ManipulationMode"/> 附加属性的值并支持该属性的 XAML 用法。</summary>
<param name="element">要在其上设置属性值的元素。</param>
<param name="manipulationMode">要设置的值。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetVerticalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
<summary>将 <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility"/> 依赖项属性的值设置为指定元素。</summary>
<param name="element">对其设置属性值的元素。</param>
<param name="verticalScrollBarVisibility">要设置的属性值。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
<summary>获取一个值，该值包含滚动内容的垂直偏移量。</summary>
<returns>滚动内容的垂直偏移。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.VerticalOffsetProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.VerticalOffset"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.ScrollViewer.VerticalOffset"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility">
<summary>获取或设置一个值，该值指示是否应显示垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>。 </summary>
<returns>一个 <see cref="T:System.Windows.Controls.ScrollBarVisibility"/> 值，该值指示是否应显示垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>。默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
<summary>获取一个值，该值包含可见内容的垂直大小。 </summary>
<returns>可见内容的垂直大小。此属性无默认值。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ViewportHeightProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
<summary>获取一个值，该值包含可见内容的水平大小。</summary>
<returns>可见内容的水平大小。默认值为 0.0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ViewportWidthProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.SelectionChangedEventArgs">
<summary>为 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged"/> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectionChangedEventArgs.#ctor(System.Collections.IList,System.Collections.IList)">
<summary>初始化 <see cref="T:System.Windows.Controls.SelectionChangedEventArgs"/> 类的新实例。 </summary>
<param name="removedItems">未选定的项。</param>
<param name="addedItems">选定的项。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="removedItems"/> 或 <paramref name="addedItems"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.SelectionChangedEventArgs.AddedItems">
<summary>获取包含选定项的列表。 </summary>
<returns>在此事件中选定的项。</returns>
    </member>
    <member name="P:System.Windows.Controls.SelectionChangedEventArgs.RemovedItems">
<summary>获取包含未选定项的列表。 </summary>
<returns>在此事件中未选定的项。</returns>
    </member>
    <member name="T:System.Windows.Controls.SelectionChangedEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged"/> 事件的方法。 </summary>
<param name="sender">事件处理程序所附加到的对象。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.SelectionMode">
<summary>定义 <see cref="T:System.Windows.Controls.ListBox"/> 的选择行为。 </summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Single">
<summary>用户一次只能选择一项。 </summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Multiple">
<summary>用户可以选择多个项而无需按修改键。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Extended">
<summary>用户可以通过按修改键选择多个项。</summary>
    </member>
    <member name="T:System.Windows.Controls.Slider">
<summary>表示一种控件，该控件使用户可以通过沿着一条轨道移动 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 控件来从一个值范围中进行选择。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Slider"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsDirectionReversed">
<summary>获取或设置指示增加值方向的值。 </summary>
<returns>如果增加值的方向向左（对于水平滑块）或向下（对于垂直滑块），则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsDirectionReversedProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Slider.IsDirectionReversed"/> 依赖项属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsFocused">
<summary>获取一个值，该值指示滑块控件是否有焦点。</summary>
<returns>如果滑块控件有焦点，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsFocusedProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Slider.IsFocused"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Slider.IsFocused"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.Slider"/> 控件的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnCreateAutomationPeer">
<summary>返回一个 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer"/> 对象，供自动化基础结构使用。</summary>
<returns>一个 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer"/> 对象，供滑块控件使用。</returns>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnGotFocus(System.Windows.RoutedEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.GotFocus"/> 事件提供类处理。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.RoutedEventArgs"/>。 </param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnKeyDown(System.Windows.Input.KeyEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.KeyDown"/> 事件提供类处理。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Input.KeyEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnLostFocus(System.Windows.RoutedEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.LostFocus"/> 事件提供类处理。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.RoutedEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.LostMouseCapture"/> 事件提供处理。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Input.MouseEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMaximumChanged(System.Double,System.Double)">
<summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> 属性发生更改时调用。</summary>
<param name="oldMaximum"><see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> 属性的旧值。</param>
<param name="newMaximum"><see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMinimumChanged(System.Double,System.Double)">
<summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> 属性发生更改时调用。</summary>
<param name="oldMinimum"><see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> 属性的旧值。</param>
<param name="newMinimum"><see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.MouseEnter"/> 事件提供类处理。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Input.MouseEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.MouseLeave"/> 事件提供类处理。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Input.MouseEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> 事件提供类处理。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnValueChanged(System.Double,System.Double)">
<summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> 属性更改时，更新 <see cref="T:System.Windows.Controls.Slider"/> 的当前位置。</summary>
<param name="oldValue"><see cref="T:System.Windows.Controls.Slider"/> 的旧 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/>。</param>
<param name="newValue"><see cref="T:System.Windows.Controls.Slider"/> 的新 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/>。</param>
    </member>
    <member name="P:System.Windows.Controls.Slider.Orientation">
<summary>获取或设置 <see cref="T:System.Windows.Controls.Slider"/> 的方向。 </summary>
<returns><see cref="T:System.Windows.Controls.Orientation"/> 值之一。默认值为 <see cref="F:System.Windows.Controls.Orientation.Horizontal"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.OrientationProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Slider.Orientation"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Slider.Orientation"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.StackPanel">
<summary>将子元素排列成一行（可沿水平或垂直方向）。 </summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.StackPanel"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)">
<summary>定位子元素并确定派生类的大小。 </summary>
<returns>所用的实际大小。</returns>
<param name="arrangeSize">父元素中的最终区域，此元素应使用它来排列自己及其子元素。</param>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)">
<summary>测量子元素在布局中所需的大小，然后确定派生类的大小。 </summary>
<returns>此元素在布局过程中所需的大小，这是由此元素根据对其子元素大小的计算而确定的。</returns>
<param name="constraint">此元素可以赋给子元素的可用大小。</param>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.Orientation">
<summary>获取或设置子元素的堆叠方向的维度。  </summary>
<returns>枚举值之一，指定子元素的方向。默认值为 <see cref="F:System.Windows.Controls.Orientation.Vertical"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.StackPanel.OrientationProperty">
<summary>标识 <see cref="P:System.Windows.Controls.StackPanel.Orientation"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.StackPanel.Orientation"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.StretchDirection">
<summary>描述内容的缩放方向。</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.UpOnly">
<summary>仅当内容小于父项时，它才会放大。如果内容大于父项，不会执行任何缩小操作。</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.DownOnly">
<summary>仅当内容大于父项时，它才会缩小。如果内容小于父项，不会执行任何放大操作。</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.Both">
<summary>内容根据 <see cref="P:System.Windows.Controls.Viewbox.Stretch"/> 属性进行拉伸以适合父项的大小。</summary>
    </member>
    <member name="T:System.Windows.Controls.TextBlock">
<summary>提供用于显示少量文本的轻量控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.TextBlock"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.BaselineOffset">
<summary>返回表示每个文本行相对于基线的偏移量的值。</summary>
<returns>每个文本行相对于基线的偏移量（以与设备无关的像素为单位）。. <see cref="F:System.Double.NaN"/> 指示根据当前的字体特征自动计算最佳基线偏移量。默认值为 <see cref="F:System.Double.NaN"/>。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.CharacterSpacing">
<summary>获取或设置控件中文本字符之间的距离，测量单位为字体大小的千分之一。</summary>
<returns>控件中文本字符之间的距离，测量单位为字体大小的千分之一。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.CharacterSpacingProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBlock.CharacterSpacing"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBlock.CharacterSpacing"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontFamily">
<summary>获取或设置此元素中文本内容的首选顶级字体系列。 </summary>
<returns>一个 <see cref="T:System.Windows.Media.FontFamily"/> 对象，指定首选字体系列，或者指定一个主要首选字体系列并附带一个或多个备用字体系列。有关默认值的信息，请参阅 <see cref="T:System.Windows.Media.FontFamily"/> 类主题。</returns>
      <exception cref="T:System.ArgumentNullException">
<paramref name="FontFamily"/> 为 null。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontFamilyProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBlock.FontFamily"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBlock.FontFamily"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontSize">
<summary>获取或设置此元素中文本内容的字号。 </summary>
<returns>一个非负值，以像素为单位指定字号。默认值为 11。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontSizeProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBlock.FontSize"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBlock.FontSize"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontSource">
<summary>获取或设置应用于文本以呈现内容的字体源。</summary>
<returns>用于在文本框中呈现内容的字体源。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontStretch">
<summary>获取或设置此元素中文本内容的字体拉伸。 </summary>
<returns>请求的字体拉伸，它是从 <see cref="T:System.Windows.FontStretches"/> 属性值之一获得的 <see cref="T:System.Windows.FontStretch"/>。默认值为 <see cref="P:System.Windows.FontStretches.Normal"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontStretchProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBlock.FontStretch"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBlock.FontStretch"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontStyle">
<summary>获取或设置此元素中内容的字形。 </summary>
<returns>请求的字体样式，它是从 <see cref="T:System.Windows.FontStyles"/> 属性值之一获得的 <see cref="T:System.Windows.FontStyle"/>。默认值为 <see cref="P:System.Windows.FontStyles.Normal"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontStyleProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBlock.FontStyle"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBlock.FontStyle"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontWeight">
<summary>获取或设置 <see cref="T:System.Windows.Controls.TextBlock"/> 的顶级字体粗细。</summary>
<returns>请求的字体粗细，它是从 <see cref="T:System.Windows.FontWeights"/> 属性值之一获得的 <see cref="T:System.Windows.FontWeight"/>。默认值为 <see cref="P:System.Windows.FontWeights.Normal"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontWeightProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBlock.FontWeight"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBlock.FontWeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Foreground">
<summary>获取或设置要应用于 <see cref="T:System.Windows.Controls.TextBlock"/> 的文本内容的 <see cref="T:System.Windows.Media.Brush"/>。 </summary>
<returns>要应用于文本内容的画笔。默认值为 <see cref="T:System.Windows.Media.SolidColorBrush"/>，其 <see cref="P:System.Windows.Media.SolidColorBrush.Color"/> 值为 <see cref="P:System.Windows.Media.Colors.Black"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.ForegroundProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBlock.Foreground"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBlock.Foreground"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Inlines">
<summary>获取 <see cref="T:System.Windows.Controls.TextBlock"/> 中内联文本元素的集合。</summary>
<returns>保留 <see cref="T:System.Windows.Controls.TextBlock"/> 中所有内联文本元素的集合。默认值是一个空集合。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LineHeight">
<summary>获取或设置各行内容的高度。 </summary>
<returns>每行的高度（以像素为单位）。值 0 指示将根据当前字体特征自动确定行高。默认值为 0。</returns>
      <exception cref="T:System.ArgumentException">
<see cref="P:System.Windows.Controls.TextBlock.LineHeight"/> 设置为一个非正值。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.LineHeightProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBlock.LineHeight"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBlock.LineHeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LineStackingStrategy">
<summary>获取或设置一个值，该值指示如何为 <see cref="T:System.Windows.Controls.TextBlock"/> 中的每行文本确定一个行框。 </summary>
<returns>指示如何为 <see cref="T:System.Windows.Controls.TextBlock"/> 中的每行文本确定一个行框的值。默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.LineStackingStrategyProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Padding">
<summary>获取或设置一个值，该值指示内容区域的边界与 <see cref="T:System.Windows.Controls.TextBlock"/> 所显示内容之间的边距的宽度。</summary>
<returns><see cref="T:System.Windows.Thickness"/> 结构，它指定要应用的填充量。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.PaddingProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBlock.Padding"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.TextBlock.Padding"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Text">
<summary>获取或设置 <see cref="T:System.Windows.Controls.TextBlock"/> 的文本内容。 </summary>
<returns>一个字符串，它指定此 <see cref="T:System.Windows.Controls.TextBlock"/> 的文本内容。默认值为空字符串。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextAlignment">
<summary>获取或设置一个值，该值指示文本内容的水平对齐方式。 </summary>
<returns>文本对齐方式。默认值为 <see cref="F:System.Windows.TextAlignment.Left"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextAlignmentProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBlock.TextAlignment"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBlock.TextAlignment"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextDecorations">
<summary>获取或设置一个值，该值指定应用于 <see cref="T:System.Windows.Controls.TextBlock"/> 元素中的内容的文本效果。 </summary>
<returns><see cref="T:System.Windows.TextDecorationCollection"/> 或 null（如果不应用任何文本效果）。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextDecorationsProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBlock.TextDecorations"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.TextBlock.TextDecorations"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBlock.Text"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBlock.Text"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextTrimming">
<summary>获取或设置当内容溢出内容区域时要采取的文本修整行为。</summary>
<returns><see cref="T:System.Windows.TextTrimming"/> 值之一，它指定要采取的文本修整行为。默认值为 <see cref="F:System.Windows.TextTrimming.None"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextTrimmingProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBlock.TextTrimming"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBlock.TextTrimming"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextWrapping">
<summary>获取或设置 <see cref="T:System.Windows.Controls.TextBlock"/> 对文本进行换行的方式。</summary>
<returns>一个指示 <see cref="T:System.Windows.Controls.TextBlock"/> 对文本进行换行的方式的值。默认值为 <see cref="F:System.Windows.TextWrapping.NoWrap"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextWrappingProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBlock.TextWrapping"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.TextBlock.TextWrapping"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.TextBox">
<summary>表示一个可用于显示单格式、多行文本的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.TextBox"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.AcceptsReturn">
<summary>获取或设置一个值，该值确定文本框是否允许和显示换行符或回车符。</summary>
<returns>如果文本框允许换行符，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.AcceptsReturnProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBox.AcceptsReturn"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBox.AcceptsReturn"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.BaselineOffset">
<summary>获取表示每个文本行相对于基线的偏移量的值。</summary>
<returns>每个文本行相对于基线的偏移量，以与设备无关的像素为单位。<see cref="F:System.Double.NaN"/> 指示根据当前字体特征自动计算最佳基线偏移量。默认值为 <see cref="F:System.Double.NaN"/>。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.CaretBrush">
<summary>获取或设置用于呈现指示插入点的竖线的画笔。</summary>
<returns>用于呈现指示插入点的竖线的画笔。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.CaretBrushProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBox.CaretBrush"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBox.CaretBrush"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.FontSource">
<summary>获取或设置应用于 <see cref="T:System.Windows.Controls.TextBox"/> 以呈现内容的字体源。</summary>
<returns>用于在文本框中呈现内容的字体源。默认值为 null。</returns>
<exception cref="T:System.ArgumentOutOfRangeException">所设置的值不是有效的源。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)">
<summary>返回指定索引处字符的前边缘的边框。</summary>
<returns>指定字符索引处字符的前边缘的边框；如果无法确定边框，则为 <see cref="P:System.Windows.Rect.Empty"/>。 </returns>
<param name="charIndex">要检索其边框的字符的字符索引，该索引从零开始。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)">
<summary>返回指定索引处字符的前边缘或后边缘的边框。</summary>
<returns>指定字符索引处字符某个边缘的边框；如果无法确定边框，则为 <see cref="P:System.Windows.Rect.Empty"/>。 </returns>
<param name="charIndex">要检索其边框的字符的字符索引，该索引从零开始。</param>
<param name="trailingEdge">如果获取字符的后边缘，则为 true；如果获取字符的前边缘，则为 false。</param>
    </member>
    <member name="P:System.Windows.Controls.TextBox.HorizontalScrollBarVisibility">
<summary>获取或设置水平滚动条的可见性。</summary>
<returns>水平滚动条的可见性。默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden"/>。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.InputScope">
<summary>获取或设置此 <see cref="T:System.Windows.Controls.TextBox"/> 使用的输入的上下文。 </summary>
<returns>解释输入范围，在该输入范围内修改从其他输入方法输入的方式。默认值为空引用（Visual Basic 中为 Nothing）。</returns>
<exception cref="T:System.NotImplementedException">当前平台的变体不支持 API。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.InputScopeProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBox.InputScope"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBox.InputScope"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.IsReadOnly">
<summary>获取或设置一个值，该值确定用户是否能够在文本框中更改文本。</summary>
<returns>如果文本框为只读，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.IsReadOnlyProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBox.IsReadOnly"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBox.IsReadOnly"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.LineHeight">
<summary>获取或设置各行内容的高度。</summary>
<returns>每行的高度（以像素为单位）。值 0 指示将根据当前字体特征自动确定行高。默认值为 0。</returns>
      <exception cref="T:System.ArgumentException">
<see cref="P:System.Windows.Controls.TextBox.LineHeight"/> 设置为一个非正值。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.LineHeightProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBox.LineHeight"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBox.LineHeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.LineStackingStrategy">
<summary>获取或设置一个值，该值指示如何为 <see cref="T:System.Windows.Controls.TextBox"/> 中的每行文本确定一个行框。</summary>
<returns>指示如何为 <see cref="T:System.Windows.Controls.TextBox"/> 中的每行文本确定一个行框的值。默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.LineStackingStrategyProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBox.LineStackingStrategy"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBox.LineStackingStrategy"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.MaxLength">
<summary>获取或设置一个值，该值确定用户输入所允许的最大字符数。</summary>
<returns>用户输入允许的最大字符数。默认值为 0。</returns>
<exception cref="T:System.ArgumentOutOfRangeException">所设置的值小于 0。</exception>
<exception cref="T:System.ArgumentNullException">该值设置为 null。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.MaxLengthProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBox.MaxLength"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBox.MaxLength"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer">
<summary>返回 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer"/> 以便由 Silverlight 自动化基础结构使用。</summary>
<returns><see cref="T:System.Windows.Controls.TextBox"/> 对象的 <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer"/>。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnGotFocus(System.Windows.RoutedEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.GotFocus"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.KeyDown"/> 事件发生时调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnKeyUp(System.Windows.Input.KeyEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.KeyUp"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnLostFocus(System.Windows.RoutedEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.LostFocus"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.LostMouseCapture"/> 事件提供处理。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Input.MouseEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseEnter"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseLeave"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。事件数据将报告已按下了鼠标左键。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。事件数据将报告已松开了鼠标左键。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnMouseMove(System.Windows.Input.MouseEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.MouseMove"/> 事件发生之前调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.TextInput"/> 事件发生之前调用。</summary>
<param name="e">提供与事件有关的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnTextInputStart(System.Windows.Input.TextCompositionEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.TextInputStart"/> 事件发生之前调用。</summary>
<param name="e">提供与事件有关的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnTextInputUpdate(System.Windows.Input.TextCompositionEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.TextInputUpdate"/> 事件发生之前调用。</summary>
<param name="e">提供与事件有关的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)">
<summary>选择文本框中的文本范围。</summary>
<param name="start">选定内容中第一个字符的从零开始的索引。</param>
<param name="length">选定内容的长度（以字符为单位）。</param>
<exception cref="T:System.ArgumentOutOfRangeException"><paramref name="start"/> 或 <paramref name="length"/> 值为负数。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.SelectAll">
<summary>选择文本框的全部内容。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectedText">
<summary>获取或设置文本框中当前选择的内容。</summary>
<returns>文本框中当前选定的文本。如果未选定任何文本，则值为 <see cref="F:System.String.Empty"/>。</returns>
<exception cref="T:System.ArgumentNullException">值设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionBackground">
<summary>获取或设置填充选定文本的背景的画笔。</summary>
<returns>填充选定文本的背景的画笔。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.SelectionBackgroundProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBox.SelectionBackground"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBox.SelectionBackground"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.TextBox.SelectionChanged">
<summary>在文本选定内容更改后发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionForeground">
<summary>获取或设置用于文本框中选定文本的画笔。</summary>
<returns>用于文本框中选定文本的画笔。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.SelectionForegroundProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBox.SelectionForeground"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBox.SelectionForeground"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionLength">
<summary>获取或设置文本框中当前选定内容的字符数。</summary>
<returns>文本框中当前选定内容的字符数，或者，如果没有选定内容，则为 0。</returns>
<exception cref="T:System.ArgumentOutOfRangeException">值小于 0。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionStart">
<summary>获取或设置文本框中选定文本的起始位置。</summary>
<returns>当前选定内容的起始位置。</returns>
<exception cref="T:System.ArgumentOutOfRangeException">值小于 0。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.Text">
<summary>获取或设置文本框的文本内容。</summary>
<returns>一个包含文本框的文本内容的字符串。默认值为空字符串 ("")。</returns>
<exception cref="T:System.ArgumentNullException">值设置为 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextAlignment">
<summary>获取或设置文本应在文本框中进行对齐的方式。</summary>
<returns><see cref="T:System.Windows.TextAlignment"/> 枚举值之一。默认值为 <see cref="F:System.Windows.TextAlignment.Left"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextAlignmentProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBox.TextAlignment"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBox.TextAlignment"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.TextBox.TextChanged">
<summary>在文本框中的内容更改时发生。</summary>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBox.Text"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBox.Text"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextWrapping">
<summary>获取或设置当一行文本超过文本框的可用宽度后如何进行换行。</summary>
<returns><see cref="T:System.Windows.TextWrapping"/> 值之一。默认值为 <see cref="F:System.Windows.TextWrapping.NoWrap"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextWrappingProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBox.TextWrapping"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBox.TextWrapping"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.VerticalScrollBarVisibility">
<summary>获取或设置垂直滚动条的可见性。</summary>
<returns>垂直滚动条的可见性。默认值为 <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden"/>。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.Watermark">
<summary>获取或设置在 <see cref="T:System.Windows.Controls.TextBox"/> 中显示为水印的内容（当它为空时）。</summary>
<returns>在 <see cref="T:System.Windows.Controls.TextBox"/> 中显示为水印的内容（当它为空时）。</returns>
<exception cref="T:System.NotImplementedException">当前平台的变体不支持 API。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.WatermarkProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextBox.Watermark"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextBox.Watermark"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventArgs">
<summary>为 <see cref="E:System.Windows.Controls.TextBox.TextChanged"/> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.Controls.TextBox.TextChanged"/> 事件的方法。</summary>
<param name="sender">事件处理程序所附加到的对象。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.TextSearch">
<summary>使用户能够使用键盘输入搜索 <see cref="T:System.Windows.Controls.ItemsControl"/> 中的项目列表。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.GetTextPath(System.Windows.DependencyObject)">
<summary>返回标识指定元素集合中项目的属性名称。</summary>
<returns>为用户标识项目的属性名称。</returns>
<param name="element">从中读取属性值的元素。</param>
    </member>
    <member name="M:System.Windows.Controls.TextSearch.SetTextPath(System.Windows.DependencyObject,System.String)">
<summary>将 <see cref="P:System.Windows.Controls.TextSearch.TextPath"/> 附加属性写入指定元素。 </summary>
<param name="element">向其中写入属性值的元素。</param>
<param name="path">标识项目的属性名称。</param>
    </member>
    <member name="P:System.Windows.Controls.TextSearch.TextPath">
<summary>获取或设置标识某个控件集合中每个项目的项目属性的名称。</summary>
<returns>包含为用户标识项目的文本的属性名称。默认值为空字符串。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextSearch.TextPathProperty">
<summary>标识 <see cref="P:System.Windows.Controls.TextSearch.TextPath"/> 附加属性。</summary>
<returns><see cref="P:System.Windows.Controls.TextSearch.TextPath"/> 附加属性的标识符</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolTip">
<summary>表示一个创建弹出窗口的控件，该弹出窗口可在用户界面中显示元素的相关信息。 </summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.ToolTip"/> 类的新实例。 </summary>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Closed">
<summary>在 <see cref="T:System.Windows.Controls.ToolTip"/> 关闭并不再可见时发生。 </summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.HorizontalOffset">
<summary>获取或设置目标原点与弹出项对齐点之间的水平距离。 </summary>
<returns>目标原点与弹出项对齐点之间的水平距离。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.HorizontalOffsetProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.IsOpen">
<summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.ToolTip"/> 是否可见。</summary>
<returns>如果 <see cref="T:System.Windows.Controls.ToolTip"/> 可见，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.IsOpenProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ToolTip.IsOpen"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ToolTip.IsOpen"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.ToolTip"/> 的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnCreateAutomationPeer">
<summary>返回 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> 以便由 Silverlight 自动化基础结构使用。</summary>
<returns>一个用于 <see cref="T:System.Windows.Controls.ToolTip"/> 对象的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> 对象。</returns>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Opened">
<summary>在 <see cref="T:System.Windows.Controls.ToolTip"/> 变得可见时发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.Placement">
<summary>获取或设置相对于 <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget"/> 应对 <see cref="T:System.Windows.Controls.ToolTip"/> 采用的定位方式。</summary>
<returns><see cref="T:System.Windows.Controls.Primitives.PlacementMode"/> 值之一。默认值为 <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Mouse"/>。 </returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ToolTip.Placement"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ToolTip.Placement"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.PlacementTarget">
<summary>获取或设置当 <see cref="T:System.Windows.Controls.ToolTipService"/> 打开工具提示时定位工具提示所相对于的可视元素或控件。</summary>
<returns>当 <see cref="T:System.Windows.Controls.ToolTipService"/> 打开工具提示时定位工具提示所相对于的可视元素或控件。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementTargetProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ToolTip.PlacementTarget"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.VerticalOffset">
<summary>获取或设置目标原点与弹出项对齐点之间的垂直距离。</summary>
<returns>目标原点与弹出项对齐点之间的垂直距离。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.VerticalOffsetProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ToolTip.VerticalOffset"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ToolTip.VerticalOffset"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolTipService">
<summary>表示一项提供静态方法以显示工具提示的服务。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacement(System.Windows.DependencyObject)">
<summary>获取指定工具提示的相对位置。</summary>
<returns>指定的工具提示的相对位置。</returns>
<param name="element">要检索其位置的工具提示。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacementTarget(System.Windows.DependencyObject)">
<summary>获取工具提示相对于其进行定位的可视元素。</summary>
<returns>工具提示相对于其进行定位的可视元素。</returns>
<param name="element">要为其检索可视元素的工具提示。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetToolTip(System.Windows.DependencyObject)">
<summary>获取对象的工具提示。</summary>
<returns>对象的工具提示值。</returns>
<param name="element">从中读取属性值的对象。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.Placement">
<summary>获取或设置工具提示相对于其目标可视元素的位置。</summary>
<returns>工具提示相对于其目标可视元素的位置。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ToolTip.Placement"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ToolTip.Placement"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.PlacementTarget">
<summary>获取或设置工具提示应相对于其进行定位的可视元素。</summary>
<returns>工具提示应相对于其进行显示的可视元素。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementTargetProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ToolTip.PlacementTarget"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacement(System.Windows.DependencyObject,System.Windows.Controls.Primitives.PlacementMode)">
<summary>使用指定的位置模式来设置指定的 <see cref="P:System.Windows.Controls.ToolTipService.ToolTip"/>。</summary>
<param name="element">要设置其位置的工具提示。</param>
<param name="value"><see cref="T:System.Windows.Controls.Primitives.PlacementMode"/> 值之一，指定工具提示相对于作为位置目标的控件的显示位置。 </param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.UIElement)">
<summary>设置指定的 <see cref="P:System.Windows.Controls.ToolTipService.ToolTip"/> 相对于指定值元素的位置。</summary>
<param name="element">要设置其位置的工具提示。</param>
<param name="value">要为其设置工具提示的可视元素。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetToolTip(System.Windows.DependencyObject,System.Object)">
<summary>设置对象的工具提示。</summary>
<param name="element">将附加属性写入到的对象。</param>
<param name="value">要设置的值。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ToolTip">
<summary>获取或设置要附加到控件的工具提示。</summary>
<returns>要为控件显示的工具提示。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipProperty">
<summary>标识 <see cref="P:System.Windows.Controls.ToolTipService.ToolTip"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.ToolTipService.ToolTip"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.UIElementCollection">
<summary>表示一个由 <see cref="T:System.Windows.UIElement"/> 对象组成的有序集合。</summary>
    </member>
    <member name="T:System.Windows.Controls.UserControl">
<summary>为定义一个封装相关的现有控件并提供其自身逻辑的新控件提供基类。</summary>
    </member>
    <member name="M:System.Windows.Controls.UserControl.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.UserControl"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.UserControl.Content">
<summary>获取或设置用户控件内包含的内容。</summary>
<returns>用户控件的内容。</returns>
    </member>
    <member name="F:System.Windows.Controls.UserControl.ContentProperty">
<summary>标识 <see cref="P:System.Windows.Controls.UserControl.Content"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.UserControl.Content"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Validation">
<summary>提供支持数据验证并管理控件的可视状态的方法和附加属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.Validation.Errors">
<summary>获取与绑定目标元素相关联的 <see cref="T:System.Windows.Controls.ValidationError"/> 对象的集合。 </summary>
<returns>与绑定目标元素相关联的 <see cref="T:System.Windows.Controls.ValidationError"/> 对象的集合。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorsProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Validation.Errors"/> 附加属性。</summary>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)">
<summary>获取指定元素的 <see cref="P:System.Windows.Controls.Validation.Errors"/> 附加属性的值。</summary>
<returns>与指定元素相关联的 <see cref="T:System.Windows.Controls.ValidationError"/> 对象的集合。 </returns>
<param name="element">要检索其错误的元素。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)">
<summary>获取指定元素的 <see cref="P:System.Windows.Controls.Validation.HasError"/> 附加属性的值。</summary>
<returns>如果指定元素的任何绑定存在验证错误，则为 true；否则为 false。 </returns>
<param name="element">要检查其错误的元素。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.Validation.HasError">
<summary>获取一个值，该值指示目标元素的绑定是否具有验证错误。 </summary>
<returns>如果目标元素的任何绑定存在验证错误，则为 true；否则为 false。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.HasErrorProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Validation.HasError"/> 附加属性。</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationError">
<summary>表示在从目标到源的更新期间出现异常时，由绑定引擎产生的验证错误。 </summary>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.ErrorContent">
<summary>获取错误消息。 </summary>
<returns>错误消息。 </returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.Exception">
<summary>获取导致了验证错误的异常。</summary>
<returns>导致了验证错误的异常。</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventAction">
<summary>描述发生 <see cref="E:System.Windows.FrameworkElement.BindingValidationError"/> 事件的原因。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Added">
<summary>出现了新的 <see cref="T:System.Windows.Controls.ValidationError"/>。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Removed">
<summary>移除了现有的 <see cref="T:System.Windows.Controls.ValidationError"/>。</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventArgs">
<summary>为 <see cref="E:System.Windows.FrameworkElement.BindingValidationError"/> 事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Action">
<summary>获取验证错误的状态。</summary>
<returns>指示验证错误状态的枚举值之一。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Error">
<summary>获取导致 <see cref="E:System.Windows.FrameworkElement.BindingValidationError"/> 事件的验证错误。</summary>
<returns>一个 <see cref="T:System.Windows.Controls.ValidationError"/> 对象，包含导致验证错误的异常。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Handled">
<summary>获取或设置将路由事件标记为已处理的值。</summary>
<returns>如果已处理该事件，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.Controls.Viewbox">
<summary>定义一个内容修饰器，该修饰器可拉伸和缩放单个子元素以填满可用空间。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Viewbox"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Child">
<summary>获取或设置 <see cref="T:System.Windows.Controls.Viewbox"/> 元素的单一子元素。</summary>
<returns><see cref="T:System.Windows.Controls.Viewbox"/> 元素的单一子元素。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Stretch">
<summary>获取或设置 <see cref="T:System.Windows.Media.Stretch"/> 模式，该模式确定内容如何适合可用空间。</summary>
<returns><see cref="T:System.Windows.Media.Stretch"/> 模式，它确定内容如何适合可用空间。默认值为 <see cref="F:System.Windows.Media.Stretch.Uniform"/>。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.StretchDirection">
<summary>获取或设置 <see cref="T:System.Windows.Controls.StretchDirection"/>，它确定缩放如何应用于 <see cref="T:System.Windows.Controls.Viewbox"/> 的内容。</summary>
<returns>一个 <see cref="T:System.Windows.Controls.StretchDirection"/>，它确定缩放如何应用于 <see cref="T:System.Windows.Controls.Viewbox"/> 的内容。默认值为 <see cref="F:System.Windows.Controls.StretchDirection.Both"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchDirectionProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Viewbox.StretchDirection"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Viewbox.StretchDirection"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Viewbox.Stretch"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Viewbox.Stretch"/> 依赖项属性的标识符。 </returns>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationMode">
<summary>指定 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 用于管理其子项虚拟化的方法。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Standard">
<summary>创建并丢弃项容器。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Recycling">
<summary>重用项容器。</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingPanel">
<summary>为虚拟化其可视子项的 <see cref="T:System.Windows.Controls.Panel"/> 元素提供一个框架。 </summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.VirtualizingPanel"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.AddInternalChild(System.Windows.UIElement)">
<summary>将指定 <see cref="T:System.Windows.UIElement"/> 添加到 <see cref="T:System.Windows.Controls.VirtualizingPanel"/> 元素的 <see cref="P:System.Windows.Controls.Panel.Children"/> 集合。</summary>
<param name="child">要添加到此集合中的 <see cref="T:System.Windows.UIElement"/> 子元素。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.BringIndexIntoView(System.Int32)">
<summary>在派生类中实现时，将生成位于指定索引位置的项并使之可见。</summary>
<param name="index">已生成并使之可见的项所在的索引位置。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.InsertInternalChild(System.Int32,System.Windows.UIElement)">
<summary>将指定 <see cref="T:System.Windows.UIElement"/> 添加到 <see cref="T:System.Windows.Controls.VirtualizingPanel"/> 元素的集合中的指定索引位置处。</summary>
<param name="index">集合中要插入子元素的索引位置。</param>
<param name="child">要添加到此集合中的 <see cref="T:System.Windows.UIElement"/> 子元素。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.ItemContainerGenerator">
<summary>获取一个值，该值标识了此 <see cref="T:System.Windows.Controls.VirtualizingPanel"/> 的 <see cref="T:System.Windows.Controls.ItemContainerGenerator"/>。</summary>
<returns>此 <see cref="T:System.Windows.Controls.VirtualizingPanel"/> 的 <see cref="T:System.Windows.Controls.ItemContainerGenerator"/>。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnClearChildren">
<summary>当 <see cref="T:System.Windows.Controls.Panel"/> 基类清除了子元素的集合时调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
<summary>当与此 <see cref="T:System.Windows.Controls.Panel"/> 的 <see cref="T:System.Windows.Controls.ItemsControl"/> 关联的 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 集合发生更改时调用。</summary>
<param name="sender">引发事件的 <see cref="T:System.Object"/>。</param>
<param name="args">为 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged"/> 事件提供数据。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.RemoveInternalChildRange(System.Int32,System.Int32)">
<summary>移除 <see cref="P:System.Windows.Controls.Panel.Children"/> 集合中的子元素。</summary>
<param name="index">集合中的起始索引位置，要移除的第一个子元素位于该位置。</param>
<param name="range">要从集合中移除的子元素总数。</param>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingStackPanel">
<summary>将内容排列和虚拟化在一行上，方向为水平或垂直。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)">
<summary>排列 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 元素的内容。</summary>
<returns><see cref="T:System.Windows.Size"/>，表示此 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 元素及其子元素的排列大小。</returns>
<param name="arrangeSize"><see cref="T:System.Windows.Size"/>，此元素应使用它来排列其子元素。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll">
<summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 能否水平滚动。</summary>
<returns>如果内容可以水平滚动，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll">
<summary>获取或设置一个值，该值指示内容能否垂直滚动。</summary>
<returns>如果内容可以垂直滚动，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent">
<summary>当重新虚拟化由 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 承载的项时发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentHeight">
<summary>获取一个值，该值包含范围的垂直大小。</summary>
<returns>一个 <see cref="T:System.Double"/>，它以像素为单位表示范围的垂直大小。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentWidth">
<summary>获取一个值，该值包含范围的水平大小。</summary>
<returns>一个 <see cref="T:System.Double"/>，它以像素为单位表示范围的水平大小。默认值为 0。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.GetIsVirtualizing(System.Windows.DependencyObject)">
<summary>获取一个值，该值确定 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 是否正在虚拟化其内容。</summary>
<returns>如果 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 正在虚拟化其内容，则为 true；否则为 false。</returns>
<param name="o">正在虚拟化的对象。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="o"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.GetVirtualizationMode(System.Windows.DependencyObject)">
<summary>返回指定对象的 <see cref="T:System.Windows.Controls.VirtualizationMode"/>。</summary>
<returns>枚举值之一，指定对象是否使用容器回收。</returns>
<param name="element">从中读取 <see cref="T:System.Windows.Controls.VirtualizationMode"/> 的对象。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset">
<summary>获取一个值，该值包含滚动内容的水平偏移量。</summary>
<returns>一个 <see cref="T:System.Double"/>，它以像素为单位表示滚动内容的水平偏移量。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing">
<summary>获取一个值，该值指示此 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 是否正在虚拟化其子集合。</summary>
<returns>如果 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 的实例正在虚拟化其子集合，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty">
<summary>一个值，该值指示 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 是否正在使用虚拟化。</summary>
<returns>一个值，该值指示 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 是否正在使用虚拟化。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineDown">
<summary>将内容向下滚动一个逻辑单位。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineLeft">
<summary>将内容向左滚动一个逻辑单位。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineRight">
<summary>将内容向右滚动一个逻辑单位。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineUp">
<summary>将内容向上滚动一个逻辑单位。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.UIElement,System.Windows.Rect)">
<summary>滚动到指定坐标并使该 <see cref="T:System.Windows.UIElement"/> 部分可见。</summary>
<returns>现在可见的 <see cref="T:System.Windows.UIElement"/> 的矩形区域。</returns>
<param name="visual">变为可见的 <see cref="T:System.Windows.UIElement"/>。</param>
<param name="rectangle"><see cref="T:System.Windows.Rect"/>，表示 <see cref="T:System.Windows.UIElement"/> 内的坐标空间。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)">
<summary>测量 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 的子元素，以便准备在 <see cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)"/> 处理过程中排列它们。</summary>
<returns><see cref="T:System.Windows.Size"/>，表示元素的所需大小。</returns>
<param name="constraint">不能超过的上限 <see cref="T:System.Windows.Size"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown">
<summary>向下逻辑滚动内容以响应鼠标滚轮按钮的向下单击操作。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft">
<summary>向左逻辑滚动内容以响应鼠标滚轮按钮的向左单击操作。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight">
<summary>向右逻辑滚动内容以响应鼠标滚轮按钮的右击操作。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp">
<summary>向上逻辑滚动内容以响应鼠标滚轮按钮的向上单击操作。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
<summary>当重新虚拟化由 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 承载的项时调用。</summary>
<param name="e">事件的相关数据。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnClearChildren">
<summary>当 <see cref="T:System.Windows.Controls.Panel"/> 基类清除了子元素的集合时调用。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
<summary>当与此 <see cref="T:System.Windows.Controls.Panel"/> 的 <see cref="T:System.Windows.Controls.ItemsControl"/> 关联的 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 集合发生更改时调用。</summary>
<param name="sender">引发事件的 <see cref="T:System.Object"/>。</param>
<param name="args">为 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged"/> 事件提供数据。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.Orientation">
<summary>获取或设置一个值，该值描述堆叠内容的水平或垂直方向。</summary>
<returns>子内容的 <see cref="T:System.Windows.Controls.Orientation"/>。默认值为 <see cref="F:System.Windows.Controls.Orientation.Vertical"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty">
<summary>标识 <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageDown">
<summary>将内容向下滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageLeft">
<summary>将内容向左滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageRight">
<summary>将内容向右滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageUp">
<summary>将内容向上滚动一页。</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner">
<summary>获取或设置一个值，该值标识控制此 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 中的滚动行为的容器。</summary>
<returns>拥有此 <see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 的滚动行为的 <see cref="T:System.Windows.Controls.ScrollViewer"/>。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(System.Double)">
<summary>设置 <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset"/> 属性的值。</summary>
<param name="offset"><see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset"/> 属性的值。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(System.Double)">
<summary>设置 <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset"/> 属性的值。</summary>
<param name="offset"><see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset"/> 属性的值。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetVirtualizationMode(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationMode)">
<summary>设置指定对象的 <see cref="T:System.Windows.Controls.VirtualizationMode"/>。</summary>
<param name="element">要设置其 <see cref="T:System.Windows.Controls.VirtualizationMode"/> 的元素。</param>
<param name="value">枚举值之一，指定 <paramref name="element"/> 是否使用容器回收。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset">
<summary>获取一个值，该值表示当前向下滚动内容的程度。</summary>
<returns>一个 <see cref="T:System.Double"/>，它以像素为单位表示滚动内容的垂直偏移量。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportHeight">
<summary>获取一个值，该值包含内容视区（可见区域）的垂直大小。</summary>
<returns>一个 <see cref="T:System.Double"/>，它以像素为单位表示内容视区（可见区域）的垂直大小。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportWidth">
<summary>获取一个值，该值包含内容视区（可见区域）的水平大小。</summary>
<returns>一个 <see cref="T:System.Double"/>，它以像素为单位表示内容视区（可见区域）的垂直大小。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.VirtualizationMode">
<summary>获取或设置 <see cref="T:System.Windows.Controls.ItemsControl"/> 中的面板虚拟化其子项的方式。</summary>
<returns><see cref="T:System.Windows.Controls.VirtualizationMode"/> 值之一。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.VirtualizationModeProperty">
<summary><see cref="T:System.Windows.Controls.VirtualizingStackPanel"/> 的当前虚拟化模式（无论它是否为 <see cref="F:System.Windows.Controls.VirtualizationMode.Recycling"/>）。</summary>
    </member>
    <member name="T:System.Windows.Controls.WebBrowser">
<summary>承载 Silverlight 插件中的 HTML 内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.WebBrowser"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String)">
<summary>执行在当前加载的 HTML 中定义的指定脚本。</summary>
<returns>脚本调用的结果。</returns>
<param name="scriptName">要执行的脚本的名称。</param>
<exception cref="T:System.Security.SecurityException">脚本目标处在跨域位置。</exception>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String,System.String[])">
<summary>使用指定的参数执行在当前加载的 HTML 中定义的指定脚本函数。</summary>
<returns>脚本调用的结果。</returns>
<param name="scriptName">要执行的脚本的名称。</param>
<param name="args">要传递给脚本函数的参数。</param>
<exception cref="T:System.Security.SecurityException">脚本目标处在跨域位置。</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.LoadCompleted">
<summary>当顶级导航完成且内容加载到 <see cref="T:System.Windows.Controls.WebBrowser"/> 控件中时发生，或在加载期间发生错误时发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri)">
<summary>加载位于指定 URI 中的 HTML 内容。</summary>
<param name="source">要加载的 HTML 内容的 URI。</param>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.NavigateToString(System.String)">
<summary>显示指定的 HTML 内容。</summary>
<param name="text">要在 <see cref="T:System.Windows.Controls.WebBrowser"/> 控件中显示的 HTML 内容。</param>
    </member>
    <member name="M:System.Windows.Controls.WebBrowser.SaveToString">
<summary>将当前显示在 <see cref="T:System.Windows.Controls.WebBrowser"/> 中的 HTML 内容的源保存为字符串。</summary>
<returns>当前显示的 HTML 内容的源的字符串表示形式。</returns>
<exception cref="T:System.Security.SecurityException">要保存的 HTML 内容来自一个跨域位置。</exception>
    </member>
    <member name="E:System.Windows.Controls.WebBrowser.ScriptNotify">
<summary>当 <see cref="T:System.Windows.Controls.WebBrowser"/> 控件中包含的内容使用 JavaScript 将一个字符串传递到 Silverlight 插件时发生。 </summary>
    </member>
    <member name="P:System.Windows.Controls.WebBrowser.Source">
<summary>获取或设置要在 <see cref="T:System.Windows.Controls.WebBrowser"/> 控件中显示的 HTML 内容的 URI 源。</summary>
<returns>要在 <see cref="T:System.Windows.Controls.WebBrowser"/> 控件中显示的 HTML 内容的 URI 源。</returns>
    </member>
    <member name="T:System.Windows.Controls.WebBrowserBrush">
<summary>提供用于呈现当前承载的 HTML 的画笔。</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowserBrush.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.WebBrowserBrush"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowserBrush.Redraw">
<summary>强制画笔以异步方式重绘自身。</summary>
    </member>
    <member name="M:System.Windows.Controls.WebBrowserBrush.SetSource(System.Windows.Controls.WebBrowser)">
<summary>设置 <see cref="T:System.Windows.Controls.WebBrowserBrush"/> 的内容的源。</summary>
<param name="source">承载作为画笔的源的 HTML 内容的 <see cref="T:System.Windows.Controls.WebBrowser"/>。</param>
    </member>
    <member name="P:System.Windows.Controls.WebBrowserBrush.SourceName">
<summary>获取提供 HTML 内容的 <see cref="T:System.Windows.Controls.WebBrowser"/> 源控件的名称。</summary>
<returns>提供 HTML 内容的 <see cref="T:System.Windows.Controls.WebBrowser"/> 的 <see cref="P:System.Windows.FrameworkElement.Name"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.WebBrowserBrush.SourceNameProperty">
<summary>标识 <see cref="P:System.Windows.Controls.WebBrowserBrush.SourceName"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.WebBrowserBrush.SourceName"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Button.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.Button"/> 的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.HyperlinkButton.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.HyperlinkButton"/> 的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.ManipulationCompleted"/> 事件发生时调用。</summary>
<param name="e">事件的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.ManipulationStarted"/> 事件发生时调用。</summary>
<param name="e">事件的数据</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.ManipulationCompleted"/> 事件发生时调用。此成员重写 <see cref="M:System.Windows.Controls.Control.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)"/>。</summary>
<param name="e">事件的事件数据。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
<summary>在 <see cref="E:System.Windows.UIElement.ManipulationStarted"/> 事件发生时调用。此成员重写 <see cref="M:System.Windows.Controls.Control.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)"/>。</summary>
<param name="e">事件的事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ButtonBase">
<summary>表示所有按钮控件的基类，例如 <see cref="T:System.Windows.Controls.Button"/>、<see cref="T:System.Windows.Controls.Primitives.RepeatButton"/> 和 <see cref="T:System.Windows.Controls.HyperlinkButton"/>。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ButtonBase"/> 类的新实例。 </summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ButtonBase.Click">
<summary>在单击 <see cref="T:System.Windows.Controls.Button"/> 时发生。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
<summary>获取或设置 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"/> 事件何时发生。</summary>
<returns><see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"/> 事件何时发生。默认值为 <see cref="F:System.Windows.Controls.ClickMode.Release"/>。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode"/> 依赖项属性 </summary>
<returns><see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.Command">
<summary>获取或设置当按此按钮时要调用的命令。 </summary>
<returns>当按此按钮时要调用的命令。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
<summary>获取或设置要传递给 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command"/> 属性的参数。</summary>
<returns>要传递给 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command"/> 属性的参数。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty">
<summary><see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter"/> 依赖项属性的标识符。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty">
<summary><see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command"/> 依赖项属性的标识符。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsFocused">
<summary>获取一个确定按钮是否具有焦点的值。</summary>
<returns>如果该控件有焦点，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.IsFocusedProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsFocused"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsFocused"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsMouseOver">
<summary>获取一个指示鼠标指针是否位于此按钮控件上的值。</summary>
<returns>如果鼠标指针位于此按钮控件上，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.IsMouseOverProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsMouseOver"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsMouseOver"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
<summary>获取一个指示 <see cref="T:System.Windows.Controls.Primitives.ButtonBase"/> 当前是否处于按下状态的值。</summary>
<returns>如果 <see cref="T:System.Windows.Controls.Primitives.ButtonBase"/> 处于按下状态，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.Slider"/> 控件的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnClick">
<summary>引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"/> 事件。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnGotFocus(System.Windows.RoutedEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.GotFocus"/> 事件提供处理。</summary>
<param name="e">事件数据。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="e"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
<summary>当 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed"/> 属性的值更改时调用。</summary>
<param name="e"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> 的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
<summary>为在此控件具有焦点的情况下用户按任意键时发生的 <see cref="E:System.Windows.UIElement.KeyDown"/> 事件提供类处理。</summary>
<param name="e">事件数据。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="e"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
<summary>为在此控件具有焦点的情况下用户松开任意键时发生的 <see cref="E:System.Windows.UIElement.KeyUp"/> 路由事件提供类处理。</summary>
<param name="e">事件数据。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="e"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostFocus(System.Windows.RoutedEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.LostFocus"/> 事件提供处理。</summary>
<param name="e"><see cref="E:System.Windows.UIElement.LostFocus"/> 事件的事件数据。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="e"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
<summary>为 <see cref="E:System.Windows.UIElement.LostMouseCapture"/> 事件提供处理。</summary>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Input.MouseEventArgs"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
<summary>为当鼠标进入此控件时发生的 <see cref="E:System.Windows.UIElement.MouseEnter"/> 事件提供类处理。 </summary>
<param name="e">事件数据。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="e"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
<summary>为当鼠标离开元素时发生的 <see cref="E:System.Windows.UIElement.MouseLeave"/> 路由事件提供类处理。 </summary>
<param name="e"><see cref="E:System.Windows.UIElement.MouseLeave"/> 事件的事件数据。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="e"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
<summary>为在鼠标指针悬停在此控件上的情况下按下鼠标左键时发生的 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> 事件提供类处理。</summary>
<param name="e">事件数据。 </param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="e"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
<summary>为在鼠标指针悬停在此控件上的情况下松开鼠标左键时发生的 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> 事件提供类处理。 </summary>
<param name="e">事件数据。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="e"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
<summary>为在鼠标指针悬停在此元素上的情况下移动鼠标指针时发生的 <see cref="E:System.Windows.UIElement.MouseMove"/> 事件提供类处理。</summary>
<param name="e">事件数据。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="e"/> 为 null。</exception>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventArgs">
<summary>为当用户使用鼠标完成 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 控件的拖动操作时发生的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted"/> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragCompletedEventArgs.#ctor(System.Double,System.Double,System.Boolean)">
<summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventArgs"/> 类的新实例。 </summary>
<param name="horizontalChange">拖动操作所导致的 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 控件的水平位置更改。</param>
<param name="verticalChange">拖动操作所导致的 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 控件的垂直位置更改。</param>
<param name="canceled">一个值，指示是否已通过调用 <see cref="M:System.Windows.Controls.Primitives.Thumb.CancelDrag"/> 方法取消了拖动操作。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.Canceled">
<summary>获取一个指示是否已取消拖动操作的值。</summary>
<returns>如果已取消拖动操作，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.HorizontalChange">
<summary>获取当前鼠标位置和 Thumb 坐标之间的水平距离。</summary>
<returns>当前鼠标位置和 Thumb 坐标之间的水平距离。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.VerticalChange">
<summary>获取当前鼠标位置和 Thumb 坐标之间的垂直距离。</summary>
<returns>当前鼠标位置和 Thumb 坐标之间的垂直距离。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventHandler">
<summary>表示将处理 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted"/> 事件的方法。 </summary>
<param name="sender">事件处理程序所附加到的对象。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventArgs">
<summary>为当用户使用鼠标拖动 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 控件时发生一次或多次的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"/> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragDeltaEventArgs.#ctor(System.Double,System.Double)">
<summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventArgs"/> 类的新实例。</summary>
<param name="horizontalChange">自上一 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"/> 事件以来在 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 位置发生的水平更改。</param>
<param name="verticalChange">自上一 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"/> 事件以来在 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 位置发生的垂直更改。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.HorizontalChange">
<summary>获取自上一 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"/> 事件以来在 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 位置发生的水平更改。</summary>
<returns>自上一 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"/> 事件以来在 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 位置发生的水平更改。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.VerticalChange">
<summary>获取自上一 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"/> 事件以来在 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 位置发生的垂直更改。</summary>
<returns>自上一 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"/> 事件以来在 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 位置发生的垂直更改。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventHandler">
<summary>表示将处理 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"/> 事件的方法。 </summary>
<param name="sender">事件处理程序所附加到的对象。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventArgs">
<summary>为当用户使用鼠标拖动 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 控件时发生的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted"/> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragStartedEventArgs.#ctor(System.Double,System.Double)">
<summary>初始化 <see cref="T:System.Windows.Controls.Primitives.DragStartedEventArgs"/> 类的新实例。</summary>
<param name="horizontalOffset">当前鼠标位置和 Thumb 坐标之间的水平距离。</param>
<param name="verticalOffset">当前鼠标位置和 Thumb 坐标之间的垂直距离。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset">
<summary>获取当前鼠标位置和 Thumb 坐标之间的水平距离。</summary>
<returns>当前鼠标位置和 Thumb 坐标之间的水平距离。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset">
<summary>获取当前鼠标位置和 Thumb 坐标之间的垂直距离。</summary>
<returns>当前鼠标位置和 Thumb 坐标之间的垂直距离。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventHandler">
<summary>表示将处理 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted"/> 事件的方法。 </summary>
<param name="sender">事件处理程序所附加到的对象。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorDirection">
<summary>指定生成项时使用的方向。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Forward">
<summary>指定以向前方向生成项。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Backward">
<summary>指定以向后方向生成项。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorPosition">
      <summary>
<see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 用于描述由 <see cref="T:System.Windows.Controls.ItemContainerGenerator"/> 管理的项的位置。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.#ctor(System.Int32,System.Int32)">
<summary>使用指定的索引和偏移量初始化 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 的新实例。</summary>
<param name="index">与已生成（已实现）项相关的 <see cref="T:System.Int32"/> 索引。-1 是表示项列表的开头或结尾处虚拟项的特殊值。</param>
<param name="offset">与已索引项旁未生成（未实现）项相关的 <see cref="T:System.Int32"/> 偏移量。偏移量为 0 表示已索引元素本身；偏移量为 1 表示下一未生成（未实现）项；偏移量为 -1 表示前一项。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.Equals(System.Object)">
<summary>比较 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 的指定实例与当前实例的值是否相等。</summary>
<returns>如果 <paramref name="o"/> 与 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 的此实例具有相同值，则为 true。</returns>
<param name="o">要进行比较的 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 实例。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode">
<summary>返回此 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 的哈希代码。</summary>
<returns>此 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 的哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Index">
<summary>获取或设置与已生成（已实现）项相关的 <see cref="T:System.Int32"/> 索引。</summary>
<returns>与已生成（已实现）项相关的 <see cref="T:System.Int32"/> 索引。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Offset">
<summary>获取或设置与已索引项旁未生成（未实现）项相关的 <see cref="T:System.Int32"/> 偏移量。</summary>
<returns>与已索引项旁未生成（未实现）项相关的 <see cref="T:System.Int32"/> 偏移量。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Equality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
<summary>比较两个 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 对象的值是否相等。</summary>
<returns>如果两个对象相等，则为 true；否则为 false。</returns>
<param name="gp1">要比较的第一个实例。</param>
<param name="gp2">要比较的第二个实例。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Inequality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
<summary>比较两个 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 对象的值是否不相等。</summary>
<returns>如果值不相等，则为 true；否则为 false。</returns>
<param name="gp1">要比较的第一个实例。</param>
<param name="gp2">要比较的第二个实例。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.ToString">
<summary>返回此 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 实例的字符串表示形式。</summary>
<returns>此 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 实例的字符串表示形式。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IItemContainerGenerator">
<summary>由负责代表主机生成 UI 内容的类所实现的接口。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)">
<summary>返回用于显示下一项的容器元素，并返回其是否为新生成（实现）的容器元素。</summary>
<returns>是用于显示下一项的容器元素的 <see cref="T:System.Windows.DependencyObject"/>。</returns>
<param name="isNewlyRealized">如果返回的 <see cref="T:System.Windows.DependencyObject"/> 为新生成的（已实现），则为 true；否则为 false。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)">
<summary>返回映射到指定索引处的项的 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 对象。</summary>
<returns>映射到指定索引处的项的 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 对象。</returns>
<param name="itemIndex">所需项的索引。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
<summary>返回适合由指定面板使用的 <see cref="T:System.Windows.Controls.ItemContainerGenerator"/>。 </summary>
<returns>适合由指定面板使用的 <see cref="T:System.Windows.Controls.ItemContainerGenerator"/>。</returns>
<param name="panel">为其返回适合的 <see cref="T:System.Windows.Controls.ItemContainerGenerator"/> 的面板。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
<summary>返回映射到指定 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 的索引。</summary>
<returns>是映射到指定 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 的索引的 <see cref="T:System.Int32"/>。</returns>
<param name="position">所需项的索引。所需项的 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/>。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer(System.Windows.DependencyObject)">
<summary>准备指定元素作为相应项的容器。</summary>
<param name="container">要准备的容器。通常来说，<paramref name="container"/> 是 <see cref="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)"/> 的前一调用的结果。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
<summary>移除一个或多个生成（实现）项。</summary>
<param name="position">要移除的元素的 <see cref="T:System.Int32"/> 索引。<paramref name="position"/> 必须引用先前生成（实现）的项，这意味着其偏移量必须为零。</param>
<param name="count">从 <paramref name="position"/> 开始的要移除的元素的 <see cref="T:System.Int32"/> 数。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll">
<summary>移除所有生成（实现）项。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
<summary>准备生成器以从指定的 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/> 开始并以指定的 <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection"/> 来生成项，同时控制是否从生成（实现）项开始。</summary>
<returns><see cref="T:System.IDisposable"/> 对象，可跟踪生成过程的生存期。</returns>
<param name="position"><see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/>，指定从其开始生成项的项的位置。</param>
<param name="direction">指定从其开始生成项的项的位置。</param>
<param name="allowStartAtRealizedItem">指定是否从生成（实现）项开始的 <see cref="T:System.Boolean"/>。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator">
<summary>扩展 <see cref="T:System.Windows.Controls.Primitives.IItemContainerGenerator"/> 接口以重用它生成的 UI 内容。负责代表宿主生成用户界面 (UI) 内容的类实现此接口。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator.Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
<summary>解除项容器与其数据项的关联，并保存容器以便稍后可供其他数据项重用。</summary>
<param name="position">要重用的第一个元素从零开始的索引。<paramref name="position"/> 必须引用以前生成（实现）的项。</param>
<param name="count">从 <paramref name="position"/> 开始的要重用的元素的数。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IScrollInfo">
<summary>表示 <see cref="T:System.Windows.Controls.ScrollViewer"/> 控件内的主要可滚动区域。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanHorizontallyScroll">
<summary>获取或设置一个值，该值指示能否在水平轴上滚动。</summary>
<returns>如果可以滚动，则为 true；否则为 false。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanVerticallyScroll">
<summary>获取或设置一个值，该值指示能否在垂直轴上滚动。</summary>
<returns>如果可以滚动，则为 true；否则为 false。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight">
<summary>获取范围的垂直大小。</summary>
<returns>一个 <see cref="T:System.Double"/>，它以与设备无关的像素为单位表示范围的垂直大小。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth">
<summary>获取范围的水平大小。</summary>
<returns>一个 <see cref="T:System.Double"/>，它以与设备无关的像素为单位表示范围的水平大小。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.HorizontalOffset">
<summary>获取滚动内容的水平偏移。</summary>
<returns>一个 <see cref="T:System.Double"/>，它以与设备无关的像素为单位表示水平偏移。有效值介于 0 和 <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth"/> 减 <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth"/> 之间。此属性无默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineDown">
<summary>在内容内向下滚动一个逻辑单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineLeft">
<summary>在内容内向左滚动一个逻辑单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineRight">
<summary>在内容内向右滚动一个逻辑单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineUp">
<summary>在内容内向上滚动一个逻辑单元。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MakeVisible(System.Windows.UIElement,System.Windows.Rect)">
<summary>强制内容滚动，直至可视对象的坐标空间可见。</summary>
<returns>可见的 <see cref="T:System.Windows.Rect"/>。</returns>
<param name="visual">变为可见的 <see cref="T:System.Windows.UIElement"/>。</param>
<param name="rectangle">标识坐标空间使之可见的边框。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelDown">
<summary>用户单击鼠标上的滚轮按钮后向下滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelLeft">
<summary>用户单击鼠标上的滚轮按钮后向左滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelRight">
<summary>用户单击鼠标上的滚轮按钮后向右滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelUp">
<summary>用户单击鼠标上的滚轮按钮后向上滚动内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageDown">
<summary>将内容向下滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageLeft">
<summary>将内容向左滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageRight">
<summary>将内容向右滚动一页。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageUp">
<summary>将内容向上滚动一页。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ScrollOwner">
<summary>获取或设置一个控制滚动行为的 <see cref="T:System.Windows.Controls.ScrollViewer"/> 元素。</summary>
<returns>控制滚动行为的 <see cref="T:System.Windows.Controls.ScrollViewer"/> 元素。此属性无默认值。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetHorizontalOffset(System.Double)">
<summary>设置水平偏移量。</summary>
<param name="offset">内容在水平方向上距包含视区的偏移量。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetVerticalOffset(System.Double)">
<summary>设置垂直偏移量。</summary>
<param name="offset">内容在垂直方向上距包含视区的偏移量。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.VerticalOffset">
<summary>获取滚动内容的垂直偏移。</summary>
<returns>一个 <see cref="T:System.Double"/>，它以与设备无关的像素为单位表示滚动内容的垂直偏移。有效值介于 0 和 <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight"/> 减 <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight"/> 之间。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight">
<summary>获取此内容的视区的垂直大小。</summary>
<returns>一个 <see cref="T:System.Double"/>，它以与设备无关的像素为单位表示此内容的视区的垂直大小。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth">
<summary>获取此内容的视区的水平大小。</summary>
<returns>一个 <see cref="T:System.Double"/>，它以与设备无关的像素为单位表示此内容的视区的水平大小。此属性无默认值。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventArgs">
<summary>为 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged"/> 事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Action">
<summary>获取对项集合发生的操作。</summary>
<returns>返回发生的操作。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemCount">
<summary>获取更改所涉及的项数。</summary>
<returns>表示更改所涉及的项数的整数。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemUICount">
<summary>获取更改所涉及的 UI 元素数。</summary>
<returns>表示更改所涉及的 UI 元素数的整数。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.OldPosition">
<summary>获取集合中更改发生之前的位置。</summary>
<returns>返回一个 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/>。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Position">
<summary>获取集合中更改发生的位置。</summary>
<returns>返回一个 <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"/>。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged"/> 事件的方法。</summary>
<param name="sender">事件的源。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.LayoutInformation">
<summary>定义提供有关元素布局的其他信息的方法。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutClip(System.Windows.FrameworkElement)">
<summary>返回指定元素的可见区域。</summary>
<returns>剪裁元素的可见区域；如果元素在布局期间未剪裁，则为 null。</returns>
<param name="element">需要其布局剪辑几何图形的元素。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutExceptionElement(System.Windows.Threading.Dispatcher)">
<summary>返回发生未处理的异常时布局系统正在处理的元素。</summary>
<returns>发生未处理的异常时正在处理的元素。</returns>
<param name="dispatcher">定义操作范围的 <see cref="T:System.Windows.Threading.Dispatcher"/> 对象。每个布局引擎实例对应一个调度程序。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutSlot(System.Windows.FrameworkElement)">
<summary>返回包含指定元素的布局槽或边界框。</summary>
<returns>分配给元素以进行布局的区域。</returns>
<param name="element">需要其布局槽的元素。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PlacementMode">
<summary>指定用于相对于可视元素定位 <see cref="T:System.Windows.Controls.ToolTip"/> 的首选位置。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Bottom">
<summary>指示工具提示的首选位置为目标元素的底部。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Right">
<summary>指示工具提示的首选位置为目标元素的右侧。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Mouse">
<summary>指示工具提示的首选位置为鼠标指针位置。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Left">
<summary>指示工具提示的首选位置为目标元素的左侧。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Top">
<summary>指示工具提示的首选位置为目标元素的顶部。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Popup">
<summary>在 Silverlight 控件的界限之内、现有 Silverlight 内容之上显示内容。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Primitives.Popup"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.Child">
<summary>获取或设置要在弹出项中承载的内容。 </summary>
<returns>要在弹出项中承载的内容。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.ChildProperty">
<summary>获取 <see cref="P:System.Windows.Controls.Primitives.Popup.Child"/> 依赖项属性的标识符。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.Popup.Child"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Closed">
<summary>当 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen"/> 属性设置为 false 时发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
<summary>获取或设置 Silverlight 控件的左边缘与弹出项的左边缘之间的距离。</summary>
<returns>Silverlight 控件的左边缘与弹出项的左边缘之间的距离（以像素为单位）。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty">
<summary>获取 <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset"/> 依赖项属性的标识符。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.IsOpen">
<summary>获取或设置指示弹出项当前是否显示在屏幕上的值。</summary>
<returns>如果当前显示了弹出项，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.IsOpenProperty">
<summary>获取 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen"/> 依赖项属性的标识符。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Opened">
<summary>当 <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen"/> 属性设置为 true 时发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
<summary>获取或设置 Silverlight 控件的上边缘与弹出项的上边缘之间的距离。 </summary>
<returns>Silverlight 控件的上边缘与弹出项的上边缘之间的距离（以像素为单位）。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty">
<summary>获取 <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset"/> 依赖项属性的标识符。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RangeBase">
<summary>表示具有特定范围内的值的元素，例如 <see cref="T:System.Windows.Controls.ProgressBar"/>、<see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 和 <see cref="T:System.Windows.Controls.Slider"/> 控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Primitives.RangeBase"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.LargeChange">
<summary>获取或设置要从 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> 控件的 <see cref="T:System.Windows.Controls.Primitives.RangeBase"/> 加上或减去的值。 </summary>
      <returns>
要从 <see cref="T:System.Windows.Controls.Primitives.RangeBase"/> 元素的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> 加上或减去的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/>。默认值为 1。 </returns>
<exception cref="T:System.ArgumentException">新值为 <see cref="F:System.Double.NaN"/>，小于 0，或者 <see cref="M:System.Double.IsInfinity(System.Double)"/> 为 true。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.LargeChangeProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Maximum">
<summary>获取或设置范围元素的最大可能的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/>。 </summary>
<returns>范围元素的最大可能的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/>。默认值为 1。</returns>
<exception cref="T:System.ArgumentException">新值为 <see cref="F:System.Double.NaN"/>；否则 <see cref="M:System.Double.IsInfinity(System.Double)"/> 为 true。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MaximumProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Minimum">
<summary>获取或设置范围元素的可能 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/>。 </summary>
      <returns>
范围元素的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> 可能 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/>。默认值为 0。</returns>
<exception cref="T:System.ArgumentException">新值为 <see cref="F:System.Double.NaN"/>；否则 <see cref="M:System.Double.IsInfinity(System.Double)"/> 为 true。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MinimumProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMaximumChanged(System.Double,System.Double)">
<summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> 属性发生更改时调用。 </summary>
<param name="oldMaximum"><see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> 属性的旧值。</param>
<param name="newMaximum"><see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMinimumChanged(System.Double,System.Double)">
<summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> 属性发生更改时调用。 </summary>
<param name="oldMinimum"><see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> 属性的旧值。</param>
<param name="newMinimum"><see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> 属性的新值。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnValueChanged(System.Double,System.Double)">
<summary>引发 <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged"/> 路由事件。 </summary>
<param name="oldValue"><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> 属性的旧值。</param>
<param name="newValue"><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> 属性的新值。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.SmallChange">
<summary>获取或设置要从 <see cref="T:System.Windows.Controls.Primitives.RangeBase"/> 控件的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> 加上或减去的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/>。 </summary>
      <returns>
要从 <see cref="T:System.Windows.Controls.Primitives.RangeBase"/> 元素的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> 加上或减去的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/>。默认值为 0.1。 </returns>
<exception cref="T:System.ArgumentException">新值为 <see cref="F:System.Double.NaN"/>，小于 0，或者 <see cref="M:System.Double.IsInfinity(System.Double)"/> 为 true。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.SmallChangeProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.ToString">
<summary>提供 <see cref="T:System.Windows.Controls.Primitives.RangeBase"/> 对象的字符串表示形式。 </summary>
<returns>返回 <see cref="T:System.Windows.Controls.Primitives.RangeBase"/> 对象的字符串表示形式。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Value">
<summary>获取或设置范围控件的当前设置，这可能是强制的。 </summary>
<returns>范围控件的当前设置，这可能是强制的。默认值为 0。</returns>
<exception cref="T:System.ArgumentException">新值为 <see cref="F:System.Double.NaN"/>；否则 <see cref="M:System.Double.IsInfinity(System.Double)"/> 为 true。</exception>
    </member>
    <member name="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged">
<summary>在范围值更改时发生。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.ValueProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RepeatButton">
<summary>表示从按下按钮到释放按钮的时间内重复引发其 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"/> 事件的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Primitives.RepeatButton"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Delay">
<summary>获取或设置 <see cref="T:System.Windows.Controls.Primitives.RepeatButton"/> 被按下后在开始重复单击操作之前等待的时间（以毫秒为单位）。</summary>
<returns><see cref="T:System.Windows.Controls.Primitives.RepeatButton"/> 被按下后在开始重复单击操作之前等待的时间（以毫秒为单位）。默认值为 250。</returns>
      <exception cref="T:System.ArgumentException">
<see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay"/> 设置为小于 0 的值。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.DelayProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Interval">
<summary>获取或设置重复开始后单击操作的重复时间间隔（以毫秒为单位）。</summary>
<returns>重复开始后单击操作的重复时间间隔（以毫秒为单位）。默认值为 250。</returns>
      <exception cref="T:System.ArgumentException">
<see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval"/> 设置为小于 0 的值。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.IntervalProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollBar">
<summary>表示一个提供滚动条的控件，该滚动条具有一个其位置对应于某个值的可滑动的 <see cref="T:System.Windows.Controls.Primitives.Thumb"/>。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 控件的可视化树。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.Orientation">
<summary>获取或设置 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 是水平显示还是垂直显示。 </summary>
<returns>定义 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 是水平显示还是垂直显示的一个 <see cref="T:System.Windows.Controls.Orientation"/> 枚举值。默认值为 <see cref="F:System.Windows.Controls.Orientation.Horizontal"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.OrientationProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ScrollBar.Scroll">
<summary>当用户通过鼠标移动 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 时，随着内容在 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 中滚动发生一次或多次。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize">
<summary>获取或设置当前可见的可滚动内容的量。 </summary>
<returns>当前可见的可滚动内容的量。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ViewportSizeProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventArgs">
<summary>为 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll"/> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollEventArgs.#ctor(System.Windows.Controls.Primitives.ScrollEventType,System.Double)">
<summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ScrollEventArgs"/> 类的新实例。 </summary>
<param name="scrollEventType">描述该事件的 <see cref="T:System.Windows.Controls.Primitives.ScrollEventType"/>。</param>
<param name="newValue"><see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 的新 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/>。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.NewValue">
<summary>获取 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 的新 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/>。</summary>
<returns>该事件后 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"/>。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.ScrollEventType">
<summary>获取描述该事件的 <see cref="T:System.Windows.Controls.Primitives.ScrollEventType"/>。</summary>
<returns>描述该事件的 <see cref="T:System.Windows.Controls.Primitives.ScrollEventType"/>。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventHandler">
<summary>表示将处理 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 的 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll"/> 事件的方法。</summary>
<param name="sender">事件的源。 </param>
<param name="e">包含事件数据的 <see cref="T:System.Windows.Controls.Primitives.ScrollEventArgs"/>。 </param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventType">
<summary>指定发生的 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll"/> 事件的类型。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.EndScroll">
<summary>指定 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 被拖到了一个新位置且现在用户不再拖动它。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.First">
<summary>指定 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 移动到了 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> 位置。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeDecrement">
<summary>指定 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 移动了指定的距离，该距离由 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"/> 的值决定。对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>，<see cref="T:System.Windows.Controls.Primitives.Thumb"/> 向左移动；对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>，则向上移动。 </summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeIncrement">
<summary>指定 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 移动了指定的距离，该距离由 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"/> 的值决定。对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>，<see cref="T:System.Windows.Controls.Primitives.Thumb"/> 向右移动；对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>，则向下移动。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.Last">
<summary>指定 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 移动到了 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> 位置。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallDecrement">
<summary>指定 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 移动了指定的距离，该距离由 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"/> 的值决定。对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>，<see cref="T:System.Windows.Controls.Primitives.Thumb"/> 向左移动；对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>，则向上移动。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallIncrement">
<summary>指定 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 移动了指定的距离，该距离由 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"/> 的值决定。对于水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>，<see cref="T:System.Windows.Controls.Primitives.Thumb"/> 向右移动；对于垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>，则向下移动。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbPosition">
<summary>指定 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 移动到了一个新位置，因为用户在 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 的快捷菜单中选择了“滚动到此处”。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbTrack">
<summary><see cref="T:System.Windows.Controls.Primitives.Thumb"/> 被拖动并导致了 <see cref="E:System.Windows.UIElement.MouseMove"/> 事件。当在 <see cref="T:System.Windows.Controls.Primitives.ScrollBar"/> 中拖动 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 时，可能多次发生此 <see cref="T:System.Windows.Controls.Primitives.ScrollEventType"/> 的 <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll"/> 事件。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Selector">
<summary>表示允许用户从项的集合中选择项的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
<summary>移除应用于指定内容的项容器的任何绑定和模板。</summary>
<param name="element">用于显示指定内容的组合框项。</param>
<param name="item">项内容。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.GetIsSelectionActive(System.Windows.DependencyObject)">
<summary>获取一个值，该值指示指定的 <see cref="T:System.Windows.Controls.Primitives.Selector"/> 是否具有焦点。</summary>
<returns>若要指示 <see cref="T:System.Windows.Controls.Primitives.Selector"/> 具有焦点，则为 true；否则为 false。 </returns>
<param name="element">要计算的 <see cref="T:System.Windows.Controls.Primitives.Selector"/>。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem">
<summary>获取或设置指示 <see cref="T:System.Windows.Controls.Primitives.Selector"/> 是否应当使 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem"/> 与 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 属性中的当前项保持同步的值。</summary>
<returns>如果 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem"/> 始终与当前项保持同步，则为 true；如果 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem"/> 从不与当前项保持同步，则为 false；如果 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem"/> 只有在 <see cref="T:System.Windows.Controls.Primitives.Selector"/> 使用 <see cref="T:System.ComponentModel.ICollectionView"/> 时才与当前项保持同步，则为 null。默认值为 null。</returns>
      <exception cref="T:System.ArgumentException">
<see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem"/> 设置为 true。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItemProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.Primitives.Selector"/> 控件的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
<summary>当 <see cref="P:System.Windows.Controls.ItemsControl.Items"/> 集合更改时更新当前选定的项。</summary>
<param name="e">包含有关项集合中的更改的数据。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
<summary>准备指定元素以显示指定项。</summary>
<param name="element">用于显示指定项的元素。</param>
<param name="item">要显示的项</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedIndex">
<summary>获取或设置选定项的索引。</summary>
<returns>选定项的索引。默认值为 -1。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedIndexProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedItem">
<summary>获取或设置选定项。</summary>
<returns>选定项。默认值为 null。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedItemProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem"/> 依赖项属性。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValue">
<summary>获取或设置通过使用 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath"/> 而获得的选定项的值。</summary>
<returns>通过使用 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath"/> 而获得的选定项的值；如果没有选择任何项，则为 null。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath">
<summary>获取或设置用于获取 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem"/> 属性的 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue"/> 属性的属性路径。 </summary>
<returns>用于获取 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem"/> 属性的 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue"/> 属性的属性路径。默认值为 <see cref="F:System.String.Empty"/>。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValuePathProperty">
<summary>获取 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath"/> 依赖项属性的标识符。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValueProperty">
<summary>获取 <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue"/> 依赖项属性的标识符。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.SelectionChanged">
<summary>在当前选定项更改时发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.System#ComponentModel#ISupportInitialize#BeginInit">
<summary>用信号通知对象初始化即将开始。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.System#ComponentModel#ISupportInitialize#EndInit">
<summary>用信号通知对象初始化已完成。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Thumb">
<summary>表示可由用户拖动的控件。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.CancelDrag">
<summary>取消对 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 的拖动操作。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragCompleted">
<summary>在 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 控件失去鼠标捕获时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragDelta">
<summary>当 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 控件具有逻辑焦点和鼠标捕获时，随着鼠标指针的移动发生一次或多次。 </summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragStarted">
<summary>在 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 控件接收逻辑焦点和鼠标捕获时发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Thumb.IsDragging">
<summary>获取指示 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 控件是否具有焦点和鼠标捕获的值。</summary>
<returns>如果 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 控件具有焦点和鼠标捕获，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.IsDraggingProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Thumb.IsFocused">
<summary>获取指示 thumb 是否具有焦点的值。</summary>
<returns>若要指示 thumb 具有焦点，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.IsFocusedProperty">
<summary>获取 <see cref="P:System.Windows.Controls.Primitives.Thumb.IsFocused"/> 依赖项属性的标识符。</summary>
<returns><see cref="P:System.Windows.Controls.Primitives.Thumb.IsFocused"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.Primitives.Thumb"/> 控件的可视化树。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToggleButton">
<summary>可切换状态的控件的基类，例如 <see cref="T:System.Windows.Controls.CheckBox"/> 和 <see cref="T:System.Windows.Controls.RadioButton"/>。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.#ctor">
<summary>初始化 <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/> 类的新实例。 </summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Checked">
<summary>在选中 <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/> 时发生。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate">
<summary>当 <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/> 的状态切换到不确定状态时发生。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked">
<summary>获取或设置是否选中 <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/>。</summary>
<returns>如果已选中 <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/>，则为 true；如果未选中 <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/>，则为 false；否则为 null。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsCheckedProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState">
<summary>获取或设置指示控件是支持两种状态还是三种状态的值。</summary>
<returns>如果控件支持三种状态，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsThreeStateProperty">
<summary>标识 <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnClick">
<summary>当通过鼠标或键盘单击 <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/> 时调用。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnContentChanged(System.Object,System.Object)">
<summary>当 <see cref="T:System.Windows.Controls.ContentControl"/> 属性发生更改时调用。</summary>
<param name="oldContent">要替换的内容。</param>
<param name="newContent">要显示的新内容。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnCreateAutomationPeer">
<summary>返回 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer"/> 以便由 Silverlight 自动化基础结构使用。</summary>
<returns><see cref="T:System.Windows.Controls.Primitives.ToggleButton"/> 对象的 <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer"/>。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnToggle">
<summary>由 <see cref="M:System.Windows.Controls.Primitives.ToggleButton.OnClick"/> 方法调用以实现切换行为。 </summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.ToString">
<summary>返回 <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/> 对象的字符串表示形式。 </summary>
<returns><see cref="T:System.Windows.Controls.Primitives.ToggleButton"/> 对象的字符串表示形式。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked">
<summary>在未选中 <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/> 时发生。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.Primitives.RepeatButton"/> 控件的可视化树。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnApplyTemplate">
<summary>当应用新模板时生成 <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/> 的可视化树。</summary>
    </member>
    <member name="T:System.Windows.Data.Binding">
<summary>定义一个绑定，该绑定对绑定目标属性和数据源进行连接。</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor">
<summary>初始化 <see cref="T:System.Windows.Data.Binding"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor(System.String)">
<summary>用数据源的初始属性路径初始化 <see cref="T:System.Windows.Data.Binding"/> 类的新实例。</summary>
<param name="path">绑定源的初始属性路径。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="path"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor(System.Windows.Data.Binding)">
<summary>初始化 <see cref="T:System.Windows.Data.Binding"/> 类的新实例，该实例具有从指定的 <see cref="T:System.Windows.Data.Binding"/> 复制的初始属性值。</summary>
<param name="original">要复制的 <see cref="T:System.Windows.Data.Binding"/>。</param>
    </member>
    <member name="P:System.Windows.Data.Binding.BindsDirectlyToSource">
<summary>获取或设置一个值，该值指示绑定是否忽略数据源上的任何 <see cref="T:System.ComponentModel.ICollectionView"/> 设置。 </summary>
<returns>如果绑定直接绑定到数据源，则为 true；否则为 false。 </returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Converter">
<summary>获取或设置转换器对象，当数据在源和目标之间（或相反方向）传递时，绑定引擎调用该对象来修改数据。</summary>
<returns>对数据进行修改的 <see cref="T:System.Windows.Data.IValueConverter"/> 对象。</returns>
<exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Data.Binding"/> 已附加到目标元素，无法修改。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterCulture">
<summary>获取或设置 <see cref="P:System.Windows.Data.Binding.Converter"/> 所使用的区域性。</summary>
<returns><see cref="P:System.Windows.Data.Binding.Converter"/> 所使用的 <see cref="T:System.Globalization.CultureInfo"/>。</returns>
<exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Data.Binding"/> 已附加到目标元素，无法修改。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterParameter">
<summary>获取或设置可以在 <see cref="P:System.Windows.Data.Binding.Converter"/> 逻辑中使用的参数。</summary>
<returns>要传递给 <see cref="P:System.Windows.Data.Binding.Converter"/> 的参数。此参数可在转换逻辑中使用。默认值为 null。</returns>
<exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Data.Binding"/> 已附加到目标元素，无法修改。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.ElementName">
<summary>获取或设置要用作绑定源对象的元素的名称。</summary>
<returns><see cref="P:System.Windows.FrameworkElement.Name"/> 属性的值或要绑定到的元素的 x:Name Attribute。默认值为 null。</returns>
<exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Data.Binding"/> 已附加到目标元素，无法修改。-或- 已设置 <see cref="P:System.Windows.Data.Binding.Source"/> 或 <see cref="P:System.Windows.Data.Binding.RelativeSource"/> 属性。</exception>
    </member>
    <member name="F:System.Windows.Data.Binding.IsDebuggingEnabled">
<summary>指示是否启用数据绑定调试。</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.Mode">
<summary>获取或设置一个值，该值指示绑定的数据流方向。</summary>
<returns><see cref="T:System.Windows.Data.BindingMode"/> 值之一。默认值为 <see cref="F:System.Windows.Data.BindingMode.OneWay"/>。</returns>
<exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Data.Binding"/> 已附加到目标元素，无法修改。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnValidationError">
<summary>获取或设置一个值，该值指示出现验证错误时是否引发 <see cref="E:System.Windows.FrameworkElement.BindingValidationError"/> 事件。</summary>
<returns>如果引发 <see cref="E:System.Windows.FrameworkElement.BindingValidationError"/> 事件，则为 true；否则为 false。默认值为 false。</returns>
<exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Data.Binding"/> 已附加到目标元素，无法修改。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.Path">
<summary>获取或设置绑定源属性的路径。</summary>
<returns>绑定源的属性路径。请参阅 <see cref="T:System.Windows.PropertyPath"/> 或属性路径语法。</returns>
<exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Data.Binding"/> 已附加到目标元素，无法修改。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.RelativeSource">
<summary>通过指定绑定源相对于绑定目标的位置，获取或设置绑定源。</summary>
<returns>要使用的绑定源的相对位置。默认值为 null。</returns>
<exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Data.Binding"/> 已附加到目标元素，无法修改。-或- 已设置 <see cref="P:System.Windows.Data.Binding.ElementName"/> 或 <see cref="P:System.Windows.Data.Binding.Source"/> 属性。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.Source">
<summary>获取或设置绑定的数据源。</summary>
<returns>包含绑定数据的源对象。</returns>
<exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Data.Binding"/> 已附加到目标元素，无法修改。-或- 已设置 <see cref="P:System.Windows.Data.Binding.ElementName"/> 或 <see cref="P:System.Windows.Data.Binding.RelativeSource"/> 属性。</exception>
    </member>
    <member name="M:System.Windows.Data.Binding.System#ComponentModel#ISupportInitialize#BeginInit">
<summary>用信号通知对象初始化即将开始。</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.System#ComponentModel#ISupportInitialize#EndInit">
<summary>用信号通知对象初始化已完成。</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.UpdateSourceTrigger">
<summary>获取或设置一个值，该值确定双向绑定的绑定源更新的执行时间。</summary>
<returns>一个值，该值确定何时更新绑定源。默认值为 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default"/>。 </returns>
<exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Data.Binding"/> 已附加到目标元素，无法修改。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
<summary>获取或设置一个值，该值指示绑定引擎是否将报告绑定数据实体上的 <see cref="T:System.ComponentModel.IDataErrorInfo"/> 实现的验证错误。</summary>
<returns>如果绑定引擎将报告 <see cref="T:System.ComponentModel.IDataErrorInfo"/> 验证错误，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnExceptions">
<summary>获取或设置一个值，该值指示绑定引擎是否将报告异常验证错误。</summary>
<returns>如果绑定引擎将报告异常验证错误，则为 true；否则为 false。默认值为 false。</returns>
<exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Data.Binding"/> 已附加到目标元素，无法修改。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
<summary>获取或设置一个值，该值指示绑定引擎是否将报告绑定数据实体上的 <see cref="T:System.ComponentModel.INotifyDataErrorInfo"/> 实现的验证错误。</summary>
<returns>如果绑定引擎将报告 <see cref="T:System.ComponentModel.INotifyDataErrorInfo"/> 验证错误，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="T:System.Windows.Data.BindingBase">
<summary>提供 <see cref="T:System.Windows.Data.Binding"/> 类的抽象基类。 </summary>
    </member>
    <member name="M:System.Windows.Data.BindingBase.#ctor">
<summary>初始化 <see cref="T:System.Windows.Data.BindingBase"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Data.BindingBase.CheckSealed">
<summary>如果绑定已经附加到绑定目标，则引发异常。</summary>
<exception cref="T:System.InvalidOperationException">该绑定已经附加到绑定目标。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingBase.FallbackValue">
<summary>获取或设置当绑定无法返回值时要使用的值。</summary>
<returns>当绑定无法返回值时要使用的值。默认值为 null。</returns>
<exception cref="T:System.InvalidOperationException">设置此属性时，该绑定已附加到绑定目标。</exception>
    </member>
    <member name="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
<summary>返回一个对象，应在应用此绑定和扩展的属性上设置该对象。</summary>
<returns>要在绑定目标属性上设置的值。</returns>
<param name="serviceProvider">可以为标记扩展提供服务的对象。可能为 null；有关更多信息，请参阅“备注”部分。</param>
    </member>
    <member name="P:System.Windows.Data.BindingBase.StringFormat">
<summary>获取或设置一个字符串，该字符串指定如果绑定值显示为字符串，应如何设置该绑定的格式。</summary>
<returns>一个字符串，该字符串指定如果绑定值显示为字符串，应如何设置该绑定的格式。默认值为 null。</returns>
<exception cref="T:System.InvalidOperationException">设置此属性时，该绑定已附加到绑定目标。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingBase.TargetNullValue">
<summary>获取或设置当源的值为 null 时在目标中使用的值。</summary>
<returns>当源的值为 null 时在目标中使用的值。</returns>
<exception cref="T:System.InvalidOperationException">设置此属性时，该绑定已附加到绑定目标。</exception>
    </member>
    <member name="T:System.Windows.Data.BindingExpression">
<summary>包含与 <see cref="T:System.Windows.Data.Binding"/> 对象内的单个绑定有关的信息。</summary>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.DataItem">
<summary>获取此 <see cref="T:System.Windows.Data.BindingExpression"/> 使用的绑定源对象。</summary>
<returns>此 <see cref="T:System.Windows.Data.BindingExpression"/> 使用的绑定源对象。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ParentBinding">
<summary>返回当前 <see cref="T:System.Windows.Data.BindingExpression"/> 的 <see cref="T:System.Windows.Data.Binding"/> 对象。</summary>
<returns>当前 <see cref="T:System.Windows.Data.BindingExpression"/> 的 <see cref="T:System.Windows.Data.Binding"/> 对象。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.UpdateSource">
<summary>将当前绑定目标值发送到 <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> 绑定中的绑定源属性。</summary>
<exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Data.BindingExpression"/> 与绑定目标分离。 </exception>
    </member>
    <member name="T:System.Windows.Data.BindingExpressionBase">
<summary>表示 <see cref="T:System.Windows.Data.BindingExpression"/> 类的基类。 </summary>
    </member>
    <member name="T:System.Windows.Data.BindingMode">
<summary>描述数据如何在绑定中传播。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneWay">
<summary>创建绑定时更新目标属性。对源对象的更改也会传播到目标。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneTime">
<summary>创建绑定时更新目标属性。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.TwoWay">
<summary>在进行任一更改时会相应更新目标或源对象。创建绑定后，目标属性从源进行更新。</summary>
    </member>
    <member name="T:System.Windows.Data.BindingOperations">
<summary>提供静态 <see cref="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)"/> 方法。 </summary>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
<summary>创建一个新的 <see cref="T:System.Windows.Data.BindingExpressionBase"/>，并将其与指定的绑定目标属性关联。</summary>
<returns>一个包含有关绑定的信息的对象。 </returns>
<param name="target">要对其设置绑定的目标。 </param>
<param name="dp">目标上要绑定的属性。 </param>
<param name="binding">要分配给目标属性的绑定。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="target"/> 为 null。-或-<paramref name="dp"/> 为 null。-或-<paramref name="binding"/> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
<paramref name="target"/> 的类型不是 <see cref="T:System.Windows.FrameworkElement"/> 或 <see cref="T:System.Windows.Data.CollectionViewSource"/>。-或- <paramref name="target"/> 的类型为 <see cref="T:System.Windows.Data.CollectionViewSource"/> 并且 <paramref name="binding"/> 具有一个为 null 的 <see cref="P:System.Windows.Data.Binding.Source"/> 值。-或- <paramref name="binding"/> 具有一个为 <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> 的 <see cref="P:System.Windows.Data.Binding.Mode"/> 值以及一个空的 <see cref="P:System.Windows.Data.Binding.Path"/> 值。 </exception>
    </member>
    <member name="T:System.Windows.Data.CollectionViewGroup">
<summary>表示 <see cref="T:System.Windows.Data.PagedCollectionView"/> 对象基于其 <see cref="P:System.Windows.Data.PagedCollectionView.GroupDescriptions"/> 创建的组。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.#ctor(System.Object)">
<summary>用指定的组名称初始化 <see cref="T:System.Windows.Data.CollectionViewGroup"/> 类的新实例。</summary>
<param name="name">组的名称。</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.IsBottomLevel">
<summary>获取一个值，该值指示此组是否有任何子组。</summary>
<returns>如果此组位于底层，且没有任何子组，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ItemCount">
<summary>获取此组下子树中的数据项数。</summary>
<returns>此组下子树中的数据项数。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Items">
<summary>获取作为组的直接子级的项。</summary>
<returns>此组中直接项的只读集合。这可能是子组的集合，如果该组没有任何子组，则为数据项的集合。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Name">
<summary>获取此组的名称。</summary>
<returns>此组的名称。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
<summary>引发带有提供的参数的 <see cref="E:System.Windows.Data.CollectionViewGroup.PropertyChanged"/> 事件。</summary>
<param name="e">事件数据。</param>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.PropertyChanged">
<summary>在更改属性值时发生。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItemCount">
<summary>获取或设置此组下子树中的数据项数。</summary>
<returns>此组下子树中的数据项数。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItems">
<summary>获取此组中包含的直接项。</summary>
<returns>此组中包含的直接项。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
<summary>有关此成员的说明，请参阅 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/>。</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionViewSource">
<summary>集合视图类的 XAML 代理。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.#ctor">
<summary>初始化 <see cref="T:System.Windows.Data.CollectionViewSource"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Culture">
<summary>获取或设置可能随区域性不同而不同的视图操作（如排序）的区域性信息。</summary>
<returns>在视图操作期间要使用的区域性。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.DeferRefresh">
<summary>进入延迟循环，该循环可用于将更改合并到视图并延迟自动刷新。</summary>
<returns>一个可用于释放调用对象的 <see cref="T:System.IDisposable"/> 对象。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionViewSource.Filter">
<summary>提供筛选逻辑。</summary>
<exception cref="T:System.InvalidOperationException">在向此事件添加处理程序时，<see cref="P:System.Windows.Data.CollectionViewSource.View"/> 属性值具有 <see cref="P:System.ComponentModel.ICollectionView.CanFilter"/> 属性值 false。 </exception>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.GroupDescriptions">
<summary>获取 <see cref="T:System.ComponentModel.GroupDescription"/> 对象的集合，这些对象描述集合中的项在视图中的分组方式。</summary>
<returns><see cref="T:System.ComponentModel.GroupDescription"/> 对象的集合，这些对象描述集合中的项在视图中的分组方式。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnCollectionViewTypeChanged(System.Type,System.Type)">
<summary>当集合视图类型发生更改时调用。</summary>
<param name="oldCollectionViewType">旧的集合视图类型。</param>
<param name="newCollectionViewType">新的集合视图类型。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnSourceChanged(System.Object,System.Object)">
<summary>当 <see cref="P:System.Windows.Data.CollectionViewSource.Source"/> 属性发生更改时调用。</summary>
<param name="oldSource"><see cref="P:System.Windows.Data.CollectionViewSource.Source"/> 属性的旧值。</param>
<param name="newSource"><see cref="P:System.Windows.Data.CollectionViewSource.Source"/> 属性的新值。</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.SortDescriptions">
<summary>获取 <see cref="T:System.ComponentModel.SortDescription"/> 对象的集合，这些对象描述集合中的项在视图中的排序方式。</summary>
<returns><see cref="T:System.ComponentModel.SortDescription"/> 对象的集合，这些对象描述集合中的项在视图中的排序方式。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Source">
<summary>获取或设置从其创建此视图的集合对象。</summary>
<returns>从其创建此视图的集合对象。默认值为 null。</returns>
<exception cref="T:System.ArgumentException">当设置此属性时，指定的值不是 null 或 <see cref="T:System.Collections.IEnumerable"/> 实现。-或- 当设置此属性时，指定的值为 <see cref="T:System.ComponentModel.ICollectionView"/> 实现。</exception>
<exception cref="T:System.InvalidOperationException">指定的值实现 <see cref="T:System.ComponentModel.ICollectionViewFactory"/>，但其 <see cref="M:System.ComponentModel.ICollectionViewFactory.CreateView"/> 方法返回 <see cref="T:System.ComponentModel.ICollectionView"/> 且具有以下一个或多个不一致：<see cref="P:System.ComponentModel.ICollectionView.CanFilter"/> 为 false，但 <see cref="P:System.ComponentModel.ICollectionView.Filter"/> 不为 null。<see cref="P:System.ComponentModel.ICollectionView.CanSort"/> 为 false，但 <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions"/> 不为空。<see cref="P:System.ComponentModel.ICollectionView.CanGroup"/> 为 false，但 <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions"/> 不为空。 </exception>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.SourceProperty">
<summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.Source"/> 依赖项属性。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#BeginInit">
<summary>用信号通知对象初始化即将开始。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#EndInit">
<summary>用信号通知对象初始化已完成。</summary>
<exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Data.CollectionViewSource.View"/> 属性值具有以下一个或多个不一致：<see cref="P:System.ComponentModel.ICollectionView.CanFilter"/> 为 false，但 <see cref="P:System.ComponentModel.ICollectionView.Filter"/> 不为 null。<see cref="P:System.ComponentModel.ICollectionView.CanSort"/> 为 false，但 <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions"/> 不为空。<see cref="P:System.ComponentModel.ICollectionView.CanGroup"/> 为 false，但 <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions"/> 不为空。 </exception>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.View">
<summary>获取当前与 <see cref="T:System.Windows.Data.CollectionViewSource"/> 的此实例关联的视图对象。</summary>
<returns>当前与 <see cref="T:System.Windows.Data.CollectionViewSource"/> 的此实例关联的视图对象。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.ViewProperty">
<summary>标识 <see cref="P:System.Windows.Data.CollectionViewSource.View"/> 依赖项属性。</summary>
    </member>
    <member name="T:System.Windows.Data.FilterEventArgs">
<summary>为 <see cref="E:System.Windows.Data.CollectionViewSource.Filter"/> 事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Accepted">
<summary>获取或设置一个值，该值指示项是否通过了筛选条件。</summary>
<returns>如果项通过了筛选器，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Item">
<summary>获取筛选器应测试的对象。</summary>
<returns>筛选器应测试的对象。默认值为 null。</returns>
    </member>
    <member name="T:System.Windows.Data.FilterEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.Data.CollectionViewSource.Filter"/> 事件的方法。</summary>
<param name="sender">引发事件的对象。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Data.IValueConverter">
<summary>公开方法，这些方法允许在通过绑定引擎传递数据时修改数据。</summary>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
<summary>在将源数据传递到目标以在 UI 中显示之前，对源数据进行修改。</summary>
<returns>要传递到目标依赖项属性的值。</returns>
<param name="value">正传递到目标的源数据。</param>
<param name="targetType">目标依赖项属性需要的数据的 <see cref="T:System.Type"/>。</param>
<param name="parameter">要在转换器逻辑中使用的可选参数。</param>
<param name="culture">转换的区域性。</param>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
<summary>在将目标数据传递到源对象之前，对目标数据进行修改。此方法仅在 <see cref="F:System.Windows.Data.BindingMode.TwoWay"/> 绑定中进行调用。</summary>
<returns>要传递到源对象的值。</returns>
<param name="value">正传递到源的目标数据。</param>
<param name="targetType">源对象需要的数据的 <see cref="T:System.Type"/>。</param>
<param name="parameter">要在转换器逻辑中使用的可选参数。</param>
<param name="culture">转换的区域性。</param>
    </member>
    <member name="T:System.Windows.Data.PropertyGroupDescription">
<summary>描述通过使用属性名作为标准对项进行分组。</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor">
<summary>初始化 <see cref="T:System.Windows.Data.PropertyGroupDescription"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String)">
<summary>用指定的属性名称初始化 <see cref="T:System.Windows.Data.PropertyGroupDescription"/> 类的新实例。</summary>
<param name="propertyName">指定项所属的组的属性名称。</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)">
<summary>用指定的属性名和转换器初始化 <see cref="T:System.Windows.Data.PropertyGroupDescription"/> 类的新实例。</summary>
<param name="propertyName">指定项所属的组的属性名称。如果此参数为 null，则项本身会传递到值转换器。</param>
<param name="converter">要应用到属性值或项以生成用于确定项所属的组的最终值的 <see cref="T:System.Windows.Data.IValueConverter"/> 对象。转换器可能返回集合，即指示项可能出现在多个组中。</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)">
<summary>用指定的属性名、转换器和字符串比较初始化 <see cref="T:System.Windows.Data.PropertyGroupDescription"/> 类的新实例。</summary>
<param name="propertyName">指定项所属的组的属性名称。如果此参数为 null，则项本身会传递到值转换器。</param>
<param name="converter">要应用到属性值或项以生成用于确定项所属的组的最终值的 <see cref="T:System.Windows.Data.IValueConverter"/> 对象。转换器可能返回集合，即指示项可能出现在多个组中。</param>
<param name="stringComparison">指定项的值与组名称之间的比较的 <see cref="T:System.StringComparison"/> 值。</param>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.Converter">
<summary>获取或设置一个要应用到属性值或项以生成用于确定项所属的组的最终值的转换器。</summary>
<returns>要应用的转换器。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
<summary>返回指定项的组名称。</summary>
<returns>指定项的组名称。</returns>
<param name="item">要返回其组名称的项。</param>
<param name="level">分组级别。</param>
<param name="culture">要提供给转换器的 <see cref="T:System.Globalization.CultureInfo"/></param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)">
<summary>返回一个值，该值指示组名称和项名称是否匹配，从而指示项是否属于组。</summary>
<returns>如果名称匹配（指示项属于组），则为 true，否则为 false。</returns>
<param name="groupName">要检查的组名称。</param>
<param name="itemName">要检查的项名称。</param>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.PropertyName">
<summary>获取或设置用于确定项所属的组的属性名称。</summary>
<returns>用于确定项所属的组的属性名称。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.StringComparison">
<summary>获取或设置一个 <see cref="T:System.StringComparison"/> 值，该值指定项的值（由 <see cref="P:System.Windows.Data.PropertyGroupDescription.PropertyName"/> 和 <see cref="P:System.Windows.Data.PropertyGroupDescription.Converter"/> 确定）和组名称之间的比较。</summary>
<returns>指定项的值与组名称之间的比较的枚举值。默认值为 <see cref="F:System.StringComparison.Ordinal"/>。</returns>
    </member>
    <member name="T:System.Windows.Data.RelativeSource">
<summary>实现标记扩展，以描述绑定源相对于绑定目标的位置。</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor">
<summary>通过使用默认相对源模式初始化 <see cref="T:System.Windows.Data.RelativeSource"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)">
<summary>通过使用指定的相对源模式初始化 <see cref="T:System.Windows.Data.RelativeSource"/> 类的新实例。 </summary>
<param name="mode">要用于相关绑定的相对源模式。</param>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.AncestorLevel">
<summary>获取或设置要在 <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor"/> 模式下查找的上级级别。使用 1 指示有一个距离绑定目标元素最近。</summary>
<returns>上级级别。使用 1 指示有一个距离绑定目标元素最近。</returns>
<exception cref="T:System.ArgumentOutOfRangeException">设置此属性时，指定的值小于 1。</exception>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.AncestorType">
<summary>获取或设置要查找的上级类型。</summary>
<returns>上级的类型。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.Mode">
<summary>获取或设置一个值，该值描述绑定源相对于绑定目标的位置。</summary>
<returns>枚举的一个值。</returns>
<exception cref="T:System.InvalidOperationException">设置此属性时，该属性已设置为其他值。</exception>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)">
<summary>返回一个对象，对于该标记扩展，应将该对象设置为目标对象属性上的值。对于 <see cref="T:System.Windows.Data.RelativeSource"/>，这是另一个 <see cref="T:System.Windows.Data.RelativeSource"/>，使用指定模式的相应源。</summary>
<returns>另一个 <see cref="T:System.Windows.Data.RelativeSource"/>。</returns>
<param name="serviceProvider">可以为标记扩展提供服务的对象。在此实现中，该参数可以为 null。</param>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#BeginInit">
<summary>用信号通知对象初始化即将开始。</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#EndInit">
<summary>用信号通知对象初始化已完成。</summary>
    </member>
    <member name="T:System.Windows.Data.RelativeSourceMode">
<summary>定义相应的常数，用以描述绑定源相对于绑定目标的位置。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.TemplatedParent">
<summary>引用应用了模板（其中有数据绑定元素）的元素。这类似于设置 TemplateBinding Markup Extension，并仅当 <see cref="T:System.Windows.Data.Binding"/> 在模板中时适用。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.Self">
<summary>引用您对其设置绑定的元素，并允许您将该元素的一个属性绑定到同一元素中的其他属性。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.FindAncestor">
<summary>请参阅数据绑定元素的父链中的上级。可以使用它绑定到特定类型或其子类的上级。如果您想指定 <see cref="P:System.Windows.Data.RelativeSource.AncestorType"/> 和/或 <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel"/>，则可以使用该模式。</summary>
    </member>
    <member name="T:System.Windows.Data.UpdateSourceTrigger">
<summary>定义相应的常数，用以指示在双向绑定中何时通过绑定目标对绑定源进行更新。 </summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Default">
<summary>当绑定目标值更改时，自动更新绑定源。</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Explicit">
<summary>仅在调用 <see cref="M:System.Windows.Data.BindingExpression.UpdateSource"/> 方法时更新绑定源。</summary>
    </member>
    <member name="T:System.Windows.Data.Debugging.BindingAction">
<summary>表示绑定可以执行的操作。</summary>
    </member>
    <member name="F:System.Windows.Data.Debugging.BindingAction.UpdatingSource">
<summary>绑定当前正在更新源。</summary>
    </member>
    <member name="F:System.Windows.Data.Debugging.BindingAction.UpdatingTarget">
<summary>绑定当前正在更新目标。</summary>
    </member>
    <member name="F:System.Windows.Data.Debugging.BindingAction.ValidationNotification">
<summary>绑定当前正在接收 <see cref="T:System.ComponentModel.INotifyDataErrorInfo"/> 通知。</summary>
    </member>
    <member name="T:System.Windows.Data.Debugging.BindingDebugState">
<summary>表示正在调试的绑定的状态。</summary>
    </member>
    <member name="P:System.Windows.Data.Debugging.BindingDebugState.Action">
<summary>获取正在调试的与绑定有关的操作。</summary>
<returns>正在调试的与绑定有关的操作。</returns>
    </member>
    <member name="P:System.Windows.Data.Debugging.BindingDebugState.Binding">
<summary>获取正在调试的绑定。</summary>
<returns>正在调试的绑定。</returns>
    </member>
    <member name="P:System.Windows.Data.Debugging.BindingDebugState.BindingExpression">
<summary>获取正在调试的绑定表达式。</summary>
<returns>正在调试的绑定表达式。</returns>
    </member>
    <member name="P:System.Windows.Data.Debugging.BindingDebugState.Error">
<summary>获取与绑定关联的错误（如果存在）。</summary>
<returns>与绑定关联的错误，如果没有错误，则为 null。</returns>
    </member>
    <member name="P:System.Windows.Data.Debugging.BindingDebugState.FinalSource">
<summary>获取正在调试的绑定将在其上操作的最终源值。</summary>
<returns>绑定将在其上操作的最终源值。</returns>
    </member>
    <member name="P:System.Windows.Data.Debugging.BindingDebugState.LastCompletedStage">
<summary>获取发生错误时正在执行的绑定的阶段。</summary>
<returns>发生错误时正在执行的绑定的阶段。</returns>
    </member>
    <member name="P:System.Windows.Data.Debugging.BindingDebugState.Pipeline">
<summary>获取一个对象，该对象包含不同绑定解析阶段的值。</summary>
<returns>一个对象，该对象包含不同绑定解析阶段的值。</returns>
    </member>
    <member name="M:System.Windows.Data.Debugging.BindingDebugState.ToString">
<summary>返回 <see cref="T:System.Windows.Data.Debugging.BindingDebugState"/> 的字符串表示形式。</summary>
<returns><see cref="T:System.Windows.Data.Debugging.BindingDebugState"/> 的字符串表示形式。</returns>
    </member>
    <member name="P:System.Windows.Data.Debugging.BindingDebugState.ValidationErrors">
<summary>获取与绑定关联的验证错误。</summary>
<returns>与绑定关联的验证错误。</returns>
    </member>
    <member name="T:System.Windows.Data.Debugging.BindingStage">
<summary>表示数据绑定解析的阶段。</summary>
    </member>
    <member name="F:System.Windows.Data.Debugging.BindingStage.SourceResolution">
<summary>绑定正在解析 <see cref="P:System.Windows.Data.Binding.Source"/> 属性值。</summary>
    </member>
    <member name="F:System.Windows.Data.Debugging.BindingStage.PathResolution">
<summary>绑定正在解析 <see cref="P:System.Windows.Data.Binding.Path"/>。</summary>
    </member>
    <member name="F:System.Windows.Data.Debugging.BindingStage.ValueConversion">
<summary>绑定正在使用 <see cref="P:System.Windows.Data.Binding.Converter"/> 属性值转换值。</summary>
    </member>
    <member name="F:System.Windows.Data.Debugging.BindingStage.StringFormatting">
<summary>绑定正在根据 <see cref="P:System.Windows.Data.BindingBase.StringFormat"/> 属性值设置值的格式。</summary>
    </member>
    <member name="F:System.Windows.Data.Debugging.BindingStage.TypeConversion">
<summary>绑定正在将值转换为目标类型。</summary>
    </member>
    <member name="F:System.Windows.Data.Debugging.BindingStage.SetSource">
<summary>绑定正在尝试设置数据源。</summary>
    </member>
    <member name="F:System.Windows.Data.Debugging.BindingStage.SetTarget">
<summary>绑定正在尝试设置绑定目标。</summary>
    </member>
    <member name="F:System.Windows.Data.Debugging.BindingStage.SetValidationResult">
<summary>绑定正在设置验证结果。</summary>
    </member>
    <member name="F:System.Windows.Data.Debugging.BindingStage.Validating">
<summary>绑定正在通过绑定源的 <see cref="T:System.ComponentModel.IDataErrorInfo"/> 接口执行验证。</summary>
    </member>
    <member name="T:System.Windows.Data.Debugging.BindingValuePipeline">
<summary>包含不同解析阶段的 <see cref="T:System.Windows.Data.Binding"/> 值。</summary>
    </member>
    <member name="P:System.Windows.Data.Debugging.BindingValuePipeline.AfterFallbackValue">
<summary>获取应用 <see cref="P:System.Windows.Data.BindingBase.FallbackValue"/> 属性值后的绑定值（如果存在）。</summary>
<returns>应用 <see cref="P:System.Windows.Data.BindingBase.FallbackValue"/> 属性值后的绑定值。</returns>
    </member>
    <member name="P:System.Windows.Data.Debugging.BindingValuePipeline.AfterStringFormat">
<summary>获取应用 <see cref="P:System.Windows.Data.BindingBase.StringFormat"/> 属性值后的绑定值（如果存在）。</summary>
<returns>应用字符串格式后的绑定值。</returns>
    </member>
    <member name="P:System.Windows.Data.Debugging.BindingValuePipeline.AfterStringFormatParse">
<summary>获取尝试分析 <see cref="P:System.Windows.Data.BindingBase.StringFormat"/> 属性值后的绑定值。</summary>
<returns>尝试分析 <see cref="P:System.Windows.Data.BindingBase.StringFormat"/> 属性值后的绑定值。</returns>
    </member>
    <member name="P:System.Windows.Data.Debugging.BindingValuePipeline.AfterTypeConversion">
<summary>获取任何必要的类型转换后将应用的最终绑定值。</summary>
<returns>类型转换后的最终绑定值。</returns>
    </member>
    <member name="P:System.Windows.Data.Debugging.BindingValuePipeline.AfterValueConversion">
<summary>获取应用 <see cref="P:System.Windows.Data.Binding.Converter"/> 属性值后的绑定值（如果存在）。</summary>
<returns>应用任何值转换后的绑定值。</returns>
    </member>
    <member name="P:System.Windows.Data.Debugging.BindingValuePipeline.InitialValue">
<summary>获取执行绑定管线前的初始绑定值。</summary>
<returns>执行绑定管线前的初始绑定值。</returns>
    </member>
    <member name="P:System.Windows.Data.Debugging.BindingValuePipeline.IsUsingTargetNullValue">
<summary>获取一个值，该值指示绑定值是否与 <see cref="P:System.Windows.Data.BindingBase.TargetNullValue"/> 属性设置匹配，从而指示管线中的下一个值将为 null。</summary>
<returns>一个值，指示绑定值是否与 <see cref="P:System.Windows.Data.BindingBase.TargetNullValue"/> 属性设置匹配，如果尚未确定，则为 null。</returns>
    </member>
    <member name="T:System.Windows.Documents.Block">
<summary>一个抽象类，它为所有的块级别内容元素提供了一个基础。</summary>
    </member>
    <member name="M:System.Windows.Documents.Block.#ctor">
<summary>初始化 <see cref="T:System.Windows.Documents.Block"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Documents.Block.LineHeight">
<summary>获取或设置各行内容的高度。</summary>
<returns>每行的高度（以像素为单位）。值 0 指示将根据当前字体特征自动确定行高。默认值为 0。</returns>
      <exception cref="T:System.ArgumentException">
<see cref="P:System.Windows.Documents.Block.LineHeight"/> 设置为一个非正值。</exception>
    </member>
    <member name="F:System.Windows.Documents.Block.LineHeightProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Block.LineHeight"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Block.LineHeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.LineStackingStrategy">
<summary>获取或设置一个值，该值指示如何为 <see cref="T:System.Windows.Documents.Block"/> 中的每行文本确定一个行框。</summary>
<returns>指示如何为 <see cref="T:System.Windows.Documents.Block"/> 中的每行文本确定一个行框的值。默认值为 <see cref="F:System.Windows.LineStackingStrategy.MaxHeight"/>。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.LineStackingStrategyProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Block.LineStackingStrategy"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Block.LineStackingStrategy"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.TextAlignment">
<summary>获取或设置文本内容的水平对齐方式。 </summary>
<returns>文本内容的水平对齐方式。默认值为 <see cref="F:System.Windows.TextAlignment.Left"/>。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.TextAlignmentProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Block.TextAlignment"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Block.TextAlignment"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.BlockCollection">
<summary>表示 <see cref="T:System.Windows.Documents.Block"/> 元素的集合。 </summary>
    </member>
    <member name="T:System.Windows.Documents.Bold">
<summary>提供一个内联级别的内容元素，该元素导致内容以粗体形式呈现。 </summary>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor">
<summary>初始化 <see cref="T:System.Windows.Documents.Bold"/> 类的新实例。 </summary>
    </member>
    <member name="T:System.Windows.Documents.FontSource">
<summary>表示从流创建的一个或多个字体。</summary>
    </member>
    <member name="M:System.Windows.Documents.FontSource.#ctor(System.IO.Stream)">
<summary>初始化 <see cref="T:System.Windows.Documents.FontSource"/> 类的新实例。 </summary>
<param name="stream">包含字体源的流。 </param>
    </member>
    <member name="M:System.Windows.Documents.FontSource.#ctor(System.Windows.Media.GlyphTypeface)">
<summary>初始化 <see cref="T:System.Windows.Documents.FontSource"/> 类的新实例。 </summary>
<param name="glyphtypeface">包含字体文件的 <see cref="T:System.Windows.Media.GlyphTypeface"/> 对象。</param>
    </member>
    <member name="T:System.Windows.Documents.Glyphs">
<summary>以特定字体和样式提供字母、字符或符号的直观表示。</summary>
    </member>
    <member name="M:System.Windows.Documents.Glyphs.#ctor">
<summary>初始化 <see cref="T:System.Windows.Documents.Glyphs"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Fill">
<summary>获取或设置用于呈现标志符号的 <see cref="T:System.Windows.Media.Brush"/>。</summary>
<returns>用于呈现标志符号的画笔。默认值为 null，对于呈现，它计算为 <see cref="P:System.Windows.Media.Colors.Transparent"/>。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FillProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Glyphs.Fill"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Glyphs.Fill"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontRenderingEmSize">
<summary>获取或设置用于呈现标志符号的字体大小。</summary>
<returns>用于呈现标志符号的字体大小。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontRenderingEmSizeProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Glyphs.FontRenderingEmSize"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Glyphs.FontRenderingEmSize"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontSource">
<summary>获取或设置应用于 <see cref="T:System.Windows.Documents.Glyphs"/> 以呈现内容的字体源。</summary>
<returns>用于在 <see cref="T:System.Windows.Documents.Glyphs"/> 中呈现内容的字体源。默认为空引用（Visual Basic 中为 Nothing）。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontUri">
<summary>获取或设置用于呈现标志符号的字体位置。</summary>
<returns>字体的 URI 源。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontUriProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Glyphs.FontUri"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Glyphs.FontUri"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Indices">
<summary>获取或设置标志符号的标志符号索引。</summary>
<returns>一个以 mini-language 定义标志符号索引和其他标志符号细节的字符串。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.IndicesProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Glyphs.Indices"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Glyphs.Indices"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginX">
<summary>获取或设置标志符号的 x 原点。</summary>
<returns><see cref="T:System.Windows.Documents.Glyphs"/> 的 x 原点，以像素为单位。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginXProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Glyphs.OriginX"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Glyphs.OriginX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginY">
<summary>获取或设置标志符号的 y 原点。</summary>
<returns><see cref="T:System.Windows.Documents.Glyphs"/> 的 y 原点，以像素为单位。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginYProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Glyphs.OriginY"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Glyphs.OriginY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.StyleSimulations">
<summary>获取或设置应用于标志符号的样式模拟。</summary>
<returns>枚举值之一，用于指定应用于标志符号的样式模拟。默认值为 None。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.StyleSimulationsProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Glyphs.StyleSimulations"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Glyphs.StyleSimulations"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.UnicodeString">
<summary>获取或设置要在标志符号中呈现的 Unicode 字符串。</summary>
<returns>使用与 XAML 兼容的编码的 Unicode 字符串。默认值为空字符串。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.UnicodeStringProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Glyphs.UnicodeString"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Glyphs.UnicodeString"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.Hyperlink">
<summary>提供一个内联级别的内容元素，该元素提供用于承载超链接的功能。 </summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor">
<summary>初始化 <see cref="T:System.Windows.Documents.Hyperlink"/> 类的新实例。 </summary>
    </member>
    <member name="E:System.Windows.Documents.Hyperlink.Click">
<summary>在 <see cref="T:System.Windows.Documents.Hyperlink"/> 上单击鼠标左键时发生。</summary>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.Command">
<summary>获取或设置要与 <see cref="T:System.Windows.Documents.Hyperlink"/> 关联的命令。 </summary>
<returns>要与 <see cref="T:System.Windows.Documents.Hyperlink"/> 关联的命令。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.CommandParameter">
<summary>获取或设置与由 <see cref="P:System.Windows.Documents.Hyperlink.Command"/> 属性指定的命令关联的命令参数。 </summary>
<returns>一个对象，指定由 <see cref="P:System.Windows.Documents.Hyperlink.Command"/> 属性指定的命令的参数。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandParameterProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.CommandParameter"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Hyperlink.CommandParameter"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.Command"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Hyperlink.Command"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.MouseOverForeground">
<summary>获取或设置当鼠标指针移到 <see cref="T:System.Windows.Documents.Hyperlink"/> 上时绘制前景色的画笔。</summary>
<returns>当鼠标指针移到 <see cref="T:System.Windows.Documents.Hyperlink"/> 上时绘制前景色的画笔。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.MouseOverForegroundProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.MouseOverForeground"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Hyperlink.MouseOverForeground"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.MouseOverTextDecorations">
<summary>获取或设置修饰 <see cref="T:System.Windows.Documents.Hyperlink"/> 的 <see cref="T:System.Windows.TextDecorationCollection"/>。</summary>
<returns>一个修饰 <see cref="T:System.Windows.Documents.Hyperlink"/> 的 <see cref="T:System.Windows.TextDecorationCollection"/>。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.MouseOverTextDecorationsProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.MouseOverTextDecorations"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Hyperlink.MouseOverTextDecorations"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.NavigateUri">
<summary>获取或设置激活 <see cref="T:System.Windows.Documents.Hyperlink"/> 时要导航到的 URI。 </summary>
<returns>激活 <see cref="T:System.Windows.Documents.Hyperlink"/> 时要导航到的 URI。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.NavigateUriProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Hyperlink.NavigateUri"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.TargetName">
<summary>获取或设置 <see cref="T:System.Windows.Documents.Hyperlink"/> 的目标窗口或框架的名称。 </summary>
<returns>一个字符串，指定 <see cref="T:System.Windows.Documents.Hyperlink"/> 的目标窗口或框架的名称。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.TargetNameProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Hyperlink.TargetName"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Hyperlink.TargetName"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.Inline">
<summary>为内联流内容元素行为提供基类。</summary>
    </member>
    <member name="M:System.Windows.Documents.Inline.#ctor">
<summary>初始化 <see cref="T:System.Windows.Documents.Inline"/> 类的新实例。</summary>
    </member>
    <member name="F:System.Windows.Documents.Inline.FontFamilyProperty">
<summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontFamily"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.TextElement.FontFamily"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FontSizeProperty">
<summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontSize"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.TextElement.FontSize"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FontStretchProperty">
<summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontStretch"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.TextElement.FontStretch"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FontStyleProperty">
<summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontStyle"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.TextElement.FontStyle"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FontWeightProperty">
<summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontWeight"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.TextElement.FontWeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.ForegroundProperty">
<summary>标识 <see cref="P:System.Windows.Documents.TextElement.Foreground"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.TextElement.Foreground"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.LanguageProperty">
<summary>标识 <see cref="P:System.Windows.Documents.TextElement.Language"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.TextElement.Language"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.TextDecorations">
<summary>获取或设置一个值，该值指定应用于 <see cref="T:System.Windows.Documents.Inline"/> 元素中的内容的文本效果。</summary>
<returns><see cref="T:System.Windows.TextDecorationCollection"/> 或 null（如果不应用任何文本效果）。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.TextDecorationsProperty">
<summary>标识 <see cref="P:System.Windows.Documents.Inline.TextDecorations"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.Inline.TextDecorations"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Documents.InlineCollection">
<summary>表示 <see cref="T:System.Windows.Documents.Inline"/> 元素的集合。</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineCollection.Add(System.String)">
<summary>向集合中添加字符串。</summary>
<param name="text">要添加的文本。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="text"/> 为 null。</exception>
    </member>
    <member name="T:System.Windows.Documents.InlineUIContainer">
<summary>提供一个使 <see cref="T:System.Windows.UIElement"/> 类型能够嵌入到内容中的内联内容元素。</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor">
<summary>初始化 <see cref="T:System.Windows.Documents.InlineUIContainer"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Documents.InlineUIContainer.Child">
<summary>获取或设置由 <see cref="T:System.Windows.Documents.InlineUIContainer"/> 承载的 <see cref="T:System.Windows.UIElement"/>。</summary>
<returns>由 <see cref="T:System.Windows.Documents.InlineUIContainer"/> 承载的 <see cref="T:System.Windows.UIElement"/>。</returns>
    </member>
    <member name="T:System.Windows.Documents.Italic">
<summary>提供一个内联级别的流内容元素，该元素导致内容以斜体样式呈现。 </summary>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor">
<summary>初始化 <see cref="T:System.Windows.Documents.Italic"/> 类的新实例。 </summary>
    </member>
    <member name="T:System.Windows.Documents.LineBreak">
<summary>表示一个内联元素，当在文本容器中呈现内容时该元素导致内容开始新行。</summary>
    </member>
    <member name="M:System.Windows.Documents.LineBreak.#ctor">
<summary>初始化 <see cref="T:System.Windows.Documents.LineBreak"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Documents.LogicalDirection">
<summary>指定执行某些文本操作所使用的逻辑方向，如在相对于指定位置（一个 <see cref="T:System.Windows.Documents.TextPointer"/>）的文本中进行插入、检索或导航等操作。</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Backward">
<summary>向后或从右到左。</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Forward">
<summary>向前或从左到右。</summary>
    </member>
    <member name="T:System.Windows.Documents.Paragraph">
<summary>提供用于将内容分组到一个段落中的块级别内容元素。 </summary>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.#ctor">
<summary>初始化 <see cref="T:System.Windows.Documents.Paragraph"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.Inlines">
<summary>获取一个 <see cref="T:System.Windows.Documents.InlineCollection"/>，其中包含含有 <see cref="T:System.Windows.Documents.Paragraph"/> 的内容的顶级 <see cref="T:System.Windows.Documents.Inline"/> 元素。</summary>
<returns>一个 <see cref="T:System.Windows.Documents.InlineCollection"/>，其中包含含有 <see cref="T:System.Windows.Documents.Paragraph"/> 的内容的 <see cref="T:System.Windows.Documents.Inline"/> 元素。</returns>
    </member>
    <member name="T:System.Windows.Documents.Run">
<summary>表示格式化文本或非格式化文本的离散区域。</summary>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor">
<summary>初始化 <see cref="T:System.Windows.Documents.Run"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Documents.Run.FlowDirection">
<summary>获取或设置文本和其他用户界面元素在控制其布局的 <see cref="T:System.Windows.Documents.Run"/> 元素中的流动方向。 </summary>
<returns>文本和其他 UI 元素在 <see cref="T:System.Windows.Documents.Run"/> 元素中的流动方向。默认值为 <see cref="F:System.Windows.FlowDirection.LeftToRight"/>。</returns>
    </member>
    <member name="F:System.Windows.Documents.Run.FlowDirectionProperty">
<summary>标识 <see cref="P:System.Windows.FrameworkElement.FlowDirection"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.FrameworkElement.FlowDirection"/> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.Run.Text">
<summary>获取或设置 <see cref="T:System.Windows.Documents.Run"/> 的文本内容。</summary>
<returns>一个字符串，它指定 <see cref="T:System.Windows.Documents.Run"/> 的文本内容。默认值为 <see cref="F:System.String.Empty"/>。</returns>
    </member>
    <member name="T:System.Windows.Documents.Section">
<summary>一个用于对其他 <see cref="T:System.Windows.Documents.Block"/> 元素进行分组的块级别元素。</summary>
    </member>
    <member name="P:System.Windows.Documents.Section.Blocks">
<summary>获取一个 <see cref="T:System.Windows.Documents.BlockCollection"/>，其中包含含有 <see cref="T:System.Windows.Documents.Section"/> 的内容的顶级 <see cref="T:System.Windows.Documents.Block"/> 元素。</summary>
<returns>一个 <see cref="T:System.Windows.Documents.BlockCollection"/>，其中包含组成 <see cref="T:System.Windows.Documents.Section"/> 的内容的 <see cref="T:System.Windows.Documents.Block"/> 元素。此属性无默认值。</returns>
    </member>
    <member name="P:System.Windows.Documents.Section.HasTrailingParagraphBreakOnPaste">
<summary>获取或设置一个值，该值指示将 <see cref="T:System.Windows.Documents.Section"/> 根元素的内容复制到剪贴板中时，是否应在最后一个段落之后插入尾随分段符。</summary>
<returns>如果应包含尾随分段符，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.Documents.Span">
<summary>对其他 <see cref="T:System.Windows.Documents.Inline"/> 内容元素进行分组。</summary>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor">
<summary>初始化 <see cref="T:System.Windows.Documents.Span"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Documents.Span.Inlines">
<summary>获取一个 <see cref="T:System.Windows.Documents.InlineCollection"/>，其中包含含有 <see cref="T:System.Windows.Documents.Span"/> 的内容的顶级内联元素。</summary>
<returns>一个 <see cref="T:System.Windows.Documents.InlineCollection"/>，其中包含含有 <see cref="T:System.Windows.Documents.Span"/> 的内容的内联元素。此属性无默认值。</returns>
    </member>
    <member name="T:System.Windows.Documents.TextElement">
<summary>用作抽象类 <see cref="T:System.Windows.Documents.Block"/> 和 <see cref="T:System.Windows.Documents.Inline"/> 的基类的抽象类。</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.CharacterSpacing">
<summary>获取或设置控件中文本字符之间的距离，测量单位为字体大小的千分之一。</summary>
<returns>控件中文本字符之间的距离，测量单位为字体大小的千分之一。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.CharacterSpacingProperty">
<summary>标识 <see cref="P:System.Windows.Documents.TextElement.CharacterSpacing"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.TextElement.CharacterSpacing"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentEnd">
<summary>获取表示元素中内容末尾的 <see cref="T:System.Windows.Documents.TextPointer"/>。</summary>
<returns>表示 <see cref="T:System.Windows.Documents.TextElement"/> 中内容末尾的 <see cref="T:System.Windows.Documents.TextPointer"/>。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentStart">
<summary>获取表示元素中内容开头的 <see cref="T:System.Windows.Documents.TextPointer"/>。</summary>
<returns>表示 <see cref="T:System.Windows.Documents.TextElement"/> 中内容开头的 <see cref="T:System.Windows.Documents.TextPointer"/>。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementEnd">
<summary>获取表示紧接元素末尾之后位置的 <see cref="T:System.Windows.Documents.TextPointer"/>。</summary>
<returns>表示紧接 <see cref="T:System.Windows.Documents.TextElement"/> 末尾之后位置的 <see cref="T:System.Windows.Documents.TextPointer"/>。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementStart">
<summary>获取表示紧接元素开头之前位置的 <see cref="T:System.Windows.Documents.TextPointer"/>。</summary>
<returns>表示紧邻 <see cref="T:System.Windows.Documents.TextElement"/> 开头之前位置的 <see cref="T:System.Windows.Documents.TextPointer"/>。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElement.FindName(System.String)">
<summary>通过引用对象的 x:Name 或 <see cref="P:System.Windows.Documents.TextElement.Name"/> 属性值来获取 Silverlight 对象模型中的对象。 </summary>
<returns>具有指定名称的对象；如果未检索任何对象，则为 null。</returns>
<param name="name">要检索的对象名。</param>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontFamily">
<summary>获取或设置元素内容的首选顶级字体系列。</summary>
<returns>首选字体系列，或者一个主要首选字体系列并附带一个或多个备用字体系列。有关默认信息，请参阅 <see cref="T:System.Windows.Media.FontFamily"/>。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontFamilyProperty">
<summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontFamily"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.TextElement.FontFamily"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontSize">
<summary>获取或设置元素内容的字号。</summary>
<returns>所需字号（以像素为单位）。默认值为 11 像素。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontSizeProperty">
<summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontSize"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.TextElement.FontSize"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStretch">
<summary>获取或设置要选择的某一系列中字体的标志符号宽度。</summary>
<returns><see cref="T:System.Windows.FontStretches"/> 属性值之一，指定所需的字体拉伸。默认值为 <see cref="P:System.Windows.FontStretches.Normal"/>。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStretchProperty">
<summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontStretch"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.TextElement.FontStretch"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStyle">
<summary>获取或设置此元素中内容的字形。</summary>
<returns><see cref="T:System.Windows.FontStyles"/> 属性值之一，指定字形。默认值为 <see cref="P:System.Windows.FontStyles.Normal"/>。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStyleProperty">
<summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontStyle"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.TextElement.FontStyle"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontWeight">
<summary>获取或设置要从此元素中内容的字体系列中选择的顶级字体粗细。</summary>
<returns><see cref="T:System.Windows.FontWeights"/> 属性值之一，指定字体粗细。默认值为 <see cref="P:System.Windows.FontWeights.Normal"/>。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontWeightProperty">
<summary>标识 <see cref="P:System.Windows.Documents.TextElement.FontWeight"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.TextElement.FontWeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Foreground">
<summary>获取或设置要应用于此元素中的内容的 <see cref="T:System.Windows.Media.Brush"/>。</summary>
<returns>应用于文本内容的画笔。默认值是 <see cref="T:System.Windows.Media.SolidColorBrush"/>，它具有 <see cref="P:System.Windows.Media.SolidColorBrush.Color"/> 值 <see cref="P:System.Windows.Media.Colors.Black"/>。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.ForegroundProperty">
<summary>标识 <see cref="P:System.Windows.Documents.TextElement.Foreground"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.TextElement.Foreground"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Language">
<summary>获取或设置 <see cref="T:System.Windows.Documents.TextElement"/> 元素中内容的语言。</summary>
<returns>一个 <see cref="T:System.Windows.Markup.XmlLanguage"/> 类型的值。默认值是使用字符串 en-US（<see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag"/> 为“en-US”）创建的 <see cref="T:System.Windows.Markup.XmlLanguage"/> 值。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.LanguageProperty">
<summary>标识 <see cref="P:System.Windows.Documents.TextElement.Language"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Documents.TextElement.Language"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Name">
<summary>获取或设置对象的唯一标识。<see cref="P:System.Windows.Documents.TextElement.Name"/> 只能从 XAML 的初始分析中设置。</summary>
<returns>对象的唯一标识符。此属性对于代码而言是只读的，但由于名为“Name”的 XAML 属性的特殊分析器处理，此属性对于 XAML 而言是只写的。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElement.OnCreateAutomationPeer">
<summary>返回一个特定于类的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> 实现，供 Silverlight 自动化基础结构使用。</summary>
<returns>针对 <see cref="T:System.Windows.Documents.TextElement"/> 对象的特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/>。</returns>
    </member>
    <member name="T:System.Windows.Documents.TextElementCollection`1">
<summary>提供标准功能，用于创建和管理 <see cref="T:System.Windows.Documents.TextElement"/> 对象的类型安全的有序集合。</summary>
<typeparam name="T">用于约束集合实现的类型安全的类型约束。</typeparam>
    </member>
    <member name="T:System.Windows.Documents.TextPointer">
<summary>表示 <see cref="T:System.Windows.Controls.RichTextBox"/> 中的一个位置。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
<summary>对当前 <see cref="T:System.Windows.Documents.TextPointer"/> 和第二个指定 <see cref="T:System.Windows.Documents.TextPointer"/> 所表示位置的顺序进行比较。</summary>
<returns>如果当前 <see cref="T:System.Windows.Documents.TextPointer"/> 位于位置之前，则为 –1；如果位置相同，则为 0；如果当前 <see cref="T:System.Windows.Documents.TextPointer"/> 位于位置之后，则为 +1。</returns>
<param name="position">一个 <see cref="T:System.Windows.Documents.TextPointer"/>，它指定要与当前位置进行比较的位置。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="position"/> 指定来自与当前位置相关联的不同 <see cref="T:System.Windows.Controls.RichTextBox"/> 的某个位置。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
<summary>返回在指定逻辑方向上的边界正好位于当前 <see cref="T:System.Windows.Documents.TextPointer"/> 处的内容的边界框。</summary>
<returns>在指定方向上的边界正好位于当前 <see cref="T:System.Windows.Documents.TextPointer"/> 处的内容的 <see cref="T:System.Windows.Rect"/>；或者，如果当前有效的布局信息不可用，则为 <see cref="P:System.Windows.Rect.Empty"/>。</returns>
<param name="direction"><see cref="T:System.Windows.Documents.LogicalDirection"/> 值之一，指定查找内容边界框时的逻辑方向。</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
<summary>返回一个指向指定逻辑方向上的下一个插入位置的 <see cref="T:System.Windows.Documents.TextPointer"/>。</summary>
<returns>一个 <see cref="T:System.Windows.Documents.TextPointer"/>，它标识所请求方向上的下一个插入位置；或者，如果找不到下一个插入位置，则为 null。</returns>
<param name="direction"><see cref="T:System.Windows.Documents.LogicalDirection"/> 值之一，指定搜索下一个插入位置时的逻辑方向。</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
<summary>返回一个 <see cref="T:System.Windows.Documents.TextPointer"/>，它指向从当前 <see cref="T:System.Windows.Documents.TextPointer"/> 的开始位置沿指定方向计算的由指定偏移量（以符号数为单位）指示的位置。</summary>
<returns>一个 <see cref="T:System.Windows.Documents.TextPointer"/>，它指向在由方向参数指定的方向上指定偏移量指示的位置，或者，如果偏移量超过了内容的结束位置，则为 null。</returns>
<param name="offset">偏移量（以符号数为单位），使用它计算并返回位置。如果偏移量为负，则返回的 <see cref="T:System.Windows.Documents.TextPointer"/> 位于当前 <see cref="T:System.Windows.Documents.TextPointer"/> 之前；否则，位于它之后。</param>
<param name="direction"><see cref="T:System.Windows.Documents.LogicalDirection"/> 值之一，它指定返回的 <see cref="T:System.Windows.Documents.TextPointer"/> 的逻辑方向。</param>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
<summary>获取一个值，该值指示当前位置是否为一个插入位置。</summary>
<returns>如果当前位置是插入位置，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.LogicalDirection">
<summary>获取与当前位置相关联的逻辑方向，用于消除与当前位置相关联内容的不确定性。</summary>
<returns>与当前位置相关联的 <see cref="T:System.Windows.Documents.LogicalDirection"/> 值。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.Parent">
<summary>获取包含当前位置的逻辑父项。</summary>
<returns>包含当前位置的逻辑父项。当位于内容堆栈的顶部时，可以返回 <see cref="T:System.Windows.Controls.RichTextBox"/>。</returns>
    </member>
    <member name="T:System.Windows.Documents.TextSelection">
<summary>封装 <see cref="T:System.Windows.Controls.RichTextBox"/> 控件的选择状态。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextSelection.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)">
<summary>将指定的格式属性和值应用于当前所选内容。</summary>
<param name="formattingProperty">要应用的格式属性。</param>
<param name="value">格式属性的值。</param>
    </member>
    <member name="P:System.Windows.Documents.TextSelection.End">
<summary>获取一个表示当前所选内容的结束位置的 <see cref="T:System.Windows.Documents.TextPointer"/>。</summary>
<returns>一个 <see cref="T:System.Windows.Documents.TextPointer"/>，它表示当前所选内容的结束位置。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextSelection.GetPropertyValue(System.Windows.DependencyProperty)">
<summary>获取对当前所选内容指定的格式属性的值。</summary>
<returns>一个对象，指示对当前所选内容指定的格式属性的值。</returns>
<param name="formattingProperty">一个要获取针对当前所选内容的值的格式属性。</param>
    </member>
    <member name="M:System.Windows.Documents.TextSelection.Insert(System.Windows.Documents.TextElement)">
<summary>将当前选定的内容插入或替换为 <see cref="T:System.Windows.Documents.TextElement"/>。</summary>
<param name="element">要插入的 <see cref="T:System.Windows.Documents.TextElement"/>。</param>
    </member>
    <member name="M:System.Windows.Documents.TextSelection.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
<summary>更新当前所选内容，使用两个 <see cref="T:System.Windows.Documents.TextPointer"/> 位置来指示更新的所选内容。</summary>
<param name="anchorPosition">标记更新的所选内容一端的固定定位点位置。</param>
<param name="movingPosition">标记更新的所选内容另一端的可移动位置。</param>
<exception cref="T:System.ArgumentException">位置指定来自与当前位置相关联的不同 <see cref="T:System.Windows.Controls.RichTextBox"/> 的某个位置。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextSelection.Start">
<summary>获取一个表示当前所选内容的开头位置的 <see cref="T:System.Windows.Documents.TextPointer"/>。</summary>
<returns>一个表示当前所选内容的开始位置的 <see cref="T:System.Windows.Documents.TextPointer"/>。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextSelection.Text">
<summary>获取或设置当前所选内容的纯文本内容。</summary>
<returns>一个字符串，其中包含当前所选内容的纯文本内容。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextSelection.Xaml">
<summary>获取或设置当前选择内容的 XAML 表示形式。 </summary>
<returns>一个 <see cref="T:System.String"/>，它是当前所选内容的 XAML 表示形式。此 XAML 表示形式与在复制操作中应用到剪贴板的 XAML 相同。</returns>
    </member>
    <member name="T:System.Windows.Documents.Underline">
<summary>提供一个内联级别的内容元素，该元素导致内容以带下划线的文本修饰呈现。</summary>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor">
<summary>初始化 <see cref="T:System.Windows.Documents.Underline"/> 类的新实例。 </summary>
    </member>
    <member name="T:System.Windows.Ink.DrawingAttributes">
<summary>指定用于绘制 <see cref="T:System.Windows.Ink.Stroke"/> 的绘制属性。</summary>
    </member>
    <member name="M:System.Windows.Ink.DrawingAttributes.#ctor">
<summary>初始化 <see cref="T:System.Windows.Ink.DrawingAttributes"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Ink.DrawingAttributes.Color">
<summary>获取或设置用于绘制 <see cref="T:System.Windows.Ink.Stroke"/> 的颜色。</summary>
<returns>用于绘制 <see cref="T:System.Windows.Ink.Stroke"/> 的颜色。默认值为 Black。</returns>
    </member>
    <member name="P:System.Windows.Ink.DrawingAttributes.Height">
<summary>获取或设置用于绘制 <see cref="T:System.Windows.Ink.Stroke"/> 的触笔的高度。</summary>
<returns>用于绘制 <see cref="T:System.Windows.Ink.Stroke"/> 的触笔的高度。默认值为 2 像素。</returns>
    </member>
    <member name="P:System.Windows.Ink.DrawingAttributes.OutlineColor">
<summary>获取或设置用于绘制 <see cref="T:System.Windows.Ink.Stroke"/> 的轮廓颜色。</summary>
<returns>用于绘制 <see cref="T:System.Windows.Ink.Stroke"/> 的触笔的轮廓颜色。默认值为 Black。</returns>
    </member>
    <member name="P:System.Windows.Ink.DrawingAttributes.Width">
<summary>获取或设置用于绘制 <see cref="T:System.Windows.Ink.Stroke"/> 的触笔的宽度。</summary>
<returns>用于绘制 <see cref="T:System.Windows.Ink.Stroke"/> 的触笔的宽度。默认值为 2 像素。</returns>
    </member>
    <member name="T:System.Windows.Ink.Stroke">
<summary>表示对应于触笔向下、移动和触笔向上序列的点的集合。</summary>
    </member>
    <member name="M:System.Windows.Ink.Stroke.#ctor">
<summary>初始化 <see cref="T:System.Windows.Ink.Stroke"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
<summary>使用指定的 <see cref="T:System.Windows.Input.StylusPointCollection"/> 初始化 <see cref="T:System.Windows.Ink.Stroke"/> 类的新实例。</summary>
<param name="stylusPoints">表示 <see cref="T:System.Windows.Ink.Stroke"/> 的 <see cref="T:System.Windows.Input.StylusPointCollection"/>。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="stylusPoints"/> 不包括任何触笔点。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="stylusPoints"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Ink.Stroke.DrawingAttributes">
<summary>获取或设置笔画的属性，例如 <see cref="P:System.Windows.Ink.DrawingAttributes.Height"/>、<see cref="P:System.Windows.Ink.DrawingAttributes.Width"/>、<see cref="P:System.Windows.Ink.DrawingAttributes.Color"/> 或 <see cref="P:System.Windows.Ink.DrawingAttributes.OutlineColor"/>。 </summary>
<returns>笔画的 <see cref="T:System.Windows.Ink.DrawingAttributes"/>。</returns>
    </member>
    <member name="M:System.Windows.Ink.Stroke.GetBounds">
<summary>检索 <see cref="T:System.Windows.Ink.Stroke"/> 对象的边界框。</summary>
<returns>定义 <see cref="T:System.Windows.Ink.Stroke"/> 对象的边界框的 <see cref="T:System.Windows.Rect"/> 结构。</returns>
    </member>
    <member name="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Input.StylusPointCollection)">
<summary>指示指定的 <see cref="T:System.Windows.Input.StylusPointCollection"/> 是否与 <see cref="T:System.Windows.Ink.Stroke"/> 对象相交。</summary>
<returns>如果指定的 <see cref="T:System.Windows.Input.StylusPointCollection"/> 与 <see cref="T:System.Windows.Ink.Stroke"/> 对象相交，则为 true；否则为 false。</returns>
<param name="stylusPointCollection"><see cref="T:System.Windows.Input.StylusPointCollection"/> 用于检查是否与 <see cref="T:System.Windows.Ink.Stroke"/> 对象相交。</param>
    </member>
    <member name="P:System.Windows.Ink.Stroke.StylusPoints">
<summary>获取或设置 <see cref="T:System.Windows.Ink.Stroke"/> 的触笔接触点。</summary>
<returns>包含表示当前 <see cref="T:System.Windows.Ink.Stroke"/> 的触笔接触点的 <see cref="T:System.Windows.Input.StylusPointCollection"/>。</returns>
    </member>
    <member name="T:System.Windows.Ink.StrokeCollection">
<summary>表示 <see cref="T:System.Windows.Ink.Stroke"/> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.Ink.StrokeCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Ink.StrokeCollection"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Ink.StrokeCollection.GetBounds">
<summary>返回集合中笔画的边界。</summary>
<returns>包含 <see cref="T:System.Windows.Ink.StrokeCollection"/> 中笔画的边界的 <see cref="T:System.Windows.Rect"/>。</returns>
    </member>
    <member name="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Input.StylusPointCollection)">
<summary>指示指定的 <see cref="T:System.Windows.Input.StylusPointCollection"/> 是否与 <see cref="T:System.Windows.Ink.StrokeCollection"/> 对象相交。</summary>
<returns>一个 <see cref="T:System.Windows.Ink.StrokeCollection"/>，它包含与指定的 <see cref="T:System.Windows.Input.StylusPointCollection"/> 中的点相交的笔画。</returns>
<param name="stylusPointCollection"><see cref="T:System.Windows.Input.StylusPointCollection"/> 用于检查是否与 <see cref="T:System.Windows.Ink.Stroke"/> 对象相交。</param>
    </member>
    <member name="T:System.Windows.Input.Cursor">
<summary>代表用于鼠标指针的图像。</summary>
    </member>
    <member name="M:System.Windows.Input.Cursor.ToString">
<summary>返回 <see cref="T:System.Windows.Input.Cursor"/> 的字符串表示形式。 </summary>
<returns>光标的字符串表示形式。这与活动的 <see cref="T:System.Windows.Input.Cursors"/> 属性名称相对应。</returns>
    </member>
    <member name="T:System.Windows.Input.Cursors">
<summary>为 Silverlight 定义一组默认鼠标指针图像。</summary>
    </member>
    <member name="P:System.Windows.Input.Cursors.Arrow">
<summary>表示 Arrow <see cref="T:System.Windows.Input.Cursor"/>。 </summary>
<returns>Arrow <see cref="T:System.Windows.Input.Cursor"/>。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.Eraser">
<summary>表示 Eraser <see cref="T:System.Windows.Input.Cursor"/>。 </summary>
<returns>Eraser <see cref="T:System.Windows.Input.Cursor"/>。 </returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.Hand">
<summary>表示 Hand <see cref="T:System.Windows.Input.Cursor"/>。 </summary>
<returns>Hand <see cref="T:System.Windows.Input.Cursor"/>。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.IBeam">
<summary>表示 IBeam <see cref="T:System.Windows.Input.Cursor"/>，它通常用于显示单击鼠标时文本光标的出现位置。 </summary>
<returns>IBeam <see cref="T:System.Windows.Input.Cursor"/>。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.None">
<summary>表示一个不可见的特殊 <see cref="T:System.Windows.Input.Cursor"/>。 </summary>
<returns>None <see cref="T:System.Windows.Input.Cursor"/>。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.SizeNESW">
<summary>表示 SizeNESW <see cref="T:System.Windows.Input.Cursor"/>。</summary>
<returns>SizeNESW <see cref="T:System.Windows.Input.Cursor"/>。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.SizeNS">
<summary>表示 SizeNS <see cref="T:System.Windows.Input.Cursor"/>。</summary>
<returns>SizeNS <see cref="T:System.Windows.Input.Cursor"/>。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.SizeNWSE">
<summary>表示 SizeNWSE <see cref="T:System.Windows.Input.Cursor"/>。</summary>
<returns>SizeNWSE <see cref="T:System.Windows.Input.Cursor"/>。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.SizeWE">
<summary>表示 SizeWE <see cref="T:System.Windows.Input.Cursor"/>。</summary>
<returns>SizeWE <see cref="T:System.Windows.Input.Cursor"/>。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.Stylus">
<summary>表示 Stylus <see cref="T:System.Windows.Input.Cursor"/>。</summary>
<returns>Stylus <see cref="T:System.Windows.Input.Cursor"/>。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.Wait">
<summary>表示 Wait<see cref="T:System.Windows.Input.Cursor"/>。 </summary>
<returns>Wait <see cref="T:System.Windows.Input.Cursor"/>。</returns>
    </member>
    <member name="T:System.Windows.Input.FocusManager">
<summary>无需处理与焦点相关的事件，即提供与元素焦点相关的实用工具方法。</summary>
    </member>
    <member name="M:System.Windows.Input.FocusManager.GetFocusedElement">
<summary>查询 Silverlight 焦点系统以确定具有焦点的对象。 </summary>
<returns>当前具有焦点的对象。通常为 <see cref="T:System.Windows.Controls.Control"/> 类。 </returns>
    </member>
    <member name="M:System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)">
<summary>获取具有指定焦点范围内焦点的元素。</summary>
<returns>指定焦点范围中具有当前焦点的元素。</returns>
<param name="element">声明此范围。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 不能为 null</exception>
    </member>
    <member name="T:System.Windows.Input.GestureEventArgs">
<summary>为手势事件（如 <see cref="E:System.Windows.UIElement.DoubleTap"/>）提供事件数据。</summary>
    </member>
    <member name="M:System.Windows.Input.GestureEventArgs.#ctor">
<summary>初始化 <see cref="T:System.Windows.Input.GestureEventArgs"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Input.GestureEventArgs.GetPosition(System.Windows.UIElement)">
<summary>返回指针位置的 x 坐标和 y 坐标，并且可以选择根据提供的 T:System.Windows.UIElement 的坐标原点进行评估。</summary>
<returns>一个 <see cref="T:System.Windows.Point"/>，表示鼠标指针位置的当前 x 坐标和 y 坐标。如果 null 作为 <paramref name="relativeTo"/> 传递，则此坐标针对整个 Silverlight 插件内容区域。如果传递非 null <paramref name="relativeTo"/>，则此坐标相对于 <paramref name="relativeTo"/> 引用的对象。</returns>
<param name="relativeTo">被 Silverlight 插件包含并且连接到对象树的任何 <see cref="T:System.Windows.UIElement"/> 派生对象。若要指定相对于整个 Silverlight 坐标系的对象，请传递 null。</param>
    </member>
    <member name="P:System.Windows.Input.GestureEventArgs.Handled">
<summary>获取或设置将路由事件标记为已处理的值。如果 <see cref="P:System.Windows.Input.GestureEventArgs.Handled"/> 的值为 true，则可以防止事件路由路径上的大多数处理程序再次处理同一事件。</summary>
<returns>如果为 true，则将路由事件标记为已处理；如果为 false，则将路由事件保留为未处理，这可能允许该事件进一步路由。默认值为 false。</returns>
    </member>
    <member name="T:System.Windows.Input.ICommand">
<summary>为命令定义协定。</summary>
    </member>
    <member name="M:System.Windows.Input.ICommand.CanExecute(System.Object)">
<summary>定义用于确定此命令是否可以在其当前状态下执行的方法。</summary>
<returns>如果此命令可以执行，则为 true；否则为 false。</returns>
<param name="parameter">此命令使用的数据。如果此命令不需要传递数据，则该对象可以设置为 null。 </param>
    </member>
    <member name="E:System.Windows.Input.ICommand.CanExecuteChanged">
<summary>当出现影响是否应执行该命令的更改时发生。</summary>
    </member>
    <member name="M:System.Windows.Input.ICommand.Execute(System.Object)">
<summary>定义在调用此命令时调用的方法。</summary>
<param name="parameter">此命令使用的数据。如果此命令不需要传递数据，则该对象可以设置为 null。 </param>
    </member>
    <member name="T:System.Windows.Input.ImeConversionModeValues">
<summary>描述与基于 Silverlight 的应用程序交互的输入法编辑器要执行的输入转换的模式。</summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Alphanumeric">
<summary>输入法使用字母数字转换模式。 </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Native">
<summary>输入法使用本机字符（平假名、朝鲜文和中文）转换模式。 </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Katakana">
<summary>输入法使用片假名转换模式。 </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.FullShape">
<summary>输入法使用全形转换模式。 </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Roman">
<summary>输入法使用罗马字符转换模式。 </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.CharCode">
<summary>输入法使用字符代码转换模式。 </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.NoConversion">
<summary>输入法不会执行任何输入转换。 </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Eudc">
<summary>输入法使用 EUDC（最终用户定义的字符）转换模式。 </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Symbol">
<summary>输入法使用符号转换模式。 </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Fixed">
<summary>输入法使用固定转换模式。 </summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.DoNotCare">
<summary>输入法不考虑使用何种输入转换方法；实际的转换方法不确定。 </summary>
    </member>
    <member name="T:System.Windows.Input.InputMethod">
<summary>指定在与基于 Silverlight 的应用程序一起使用时影响输入法编辑器 (IME) 的功能和支持的附加属性。</summary>
    </member>
    <member name="M:System.Windows.Input.InputMethod.GetIsInputMethodEnabled(System.Windows.DependencyObject)">
<summary>获取指定对象的 <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled"/> 附加属性的值。</summary>
<returns><see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled"/> 附加属性值。</returns>
<param name="target">从中获取 <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled"/> 附加属性值的对象。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="target"/> 不是 <see cref="T:System.Windows.Controls.TextBox"/>。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="target"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.InputMethod.GetPreferredImeConversionMode(System.Windows.DependencyObject)">
<summary>获取指定对象的 <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode"/> 附加属性的值。</summary>
<returns><see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode"/> 附加属性值。</returns>
<param name="target">从中获取 <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode"/> 附加属性值的对象。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="target"/> 不是 <see cref="T:System.Windows.Controls.TextBox"/>。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="target"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.InputMethod.GetPreferredImeState(System.Windows.DependencyObject)">
<summary>获取指定对象的 <see cref="P:System.Windows.Input.InputMethod.PreferredImeState"/> 附加属性的值。</summary>
<returns><see cref="P:System.Windows.Input.InputMethod.PreferredImeState"/> 附加属性值。</returns>
<param name="target">从中获取 <see cref="P:System.Windows.Input.InputMethod.PreferredImeState"/> 附加属性值的对象。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="target"/> 不是 <see cref="T:System.Windows.Controls.TextBox"/>。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="target"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Input.InputMethod.IsInputMethodEnabled">
<summary>获取或设置一个值，该值确定是否可将输入法编辑器用于为附加了属性的控件提供输入。</summary>
<returns>如果输入法编辑器可用于提供输入，则为 true，否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Input.InputMethod.IsInputMethodEnabledProperty">
<summary>标识 <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled"/> 附加属性。</summary>
<returns><see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled"/> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Input.InputMethod.PreferredImeConversionMode">
<summary>获取或设置某个指定依赖项对象的首选 <see cref="T:System.Windows.Input.ImeConversionModeValues"/> 值。</summary>
<returns>某个指定依赖项对象的首选 <see cref="T:System.Windows.Input.ImeConversionModeValues"/> 值。</returns>
    </member>
    <member name="F:System.Windows.Input.InputMethod.PreferredImeConversionModeProperty">
<summary>标识 <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode"/> 附加属性。</summary>
<returns><see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode"/> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Input.InputMethod.PreferredImeState">
<summary>获取或设置某个指定依赖项对象的首选输入法状态。</summary>
<returns>某个指定依赖项对象的首选输入法状态。</returns>
    </member>
    <member name="F:System.Windows.Input.InputMethod.PreferredImeStateProperty">
<summary>标识 <see cref="P:System.Windows.Input.InputMethod.PreferredImeState"/> 附加属性。</summary>
<returns><see cref="P:System.Windows.Input.InputMethod.PreferredImeState"/> 附加属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Input.InputMethod.SetIsInputMethodEnabled(System.Windows.DependencyObject,System.Boolean)">
<summary>设置指定对象的 <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled"/> 附加属性的值。</summary>
<param name="target">要设置其 <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled"/> 附加属性值的对象。</param>
<param name="value">要设置的值。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="target"/> 不是 <see cref="T:System.Windows.Controls.TextBox"/>。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="target"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.InputMethod.SetPreferredImeConversionMode(System.Windows.DependencyObject,System.Windows.Input.ImeConversionModeValues)">
<summary>设置指定对象的 <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode"/> 附加属性的值。</summary>
<param name="target">要设置其 <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode"/> 附加属性值的对象。</param>
<param name="value">要设置的值。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="target"/> 不是 <see cref="T:System.Windows.Controls.TextBox"/>。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="target"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Input.InputMethod.SetPreferredImeState(System.Windows.DependencyObject,System.Windows.Input.InputMethodState)">
<summary>设置指定对象的 <see cref="P:System.Windows.Input.InputMethod.PreferredImeState"/> 附加属性的值。</summary>
<param name="target">要设置其 <see cref="P:System.Windows.Input.InputMethod.PreferredImeState"/> 附加属性值的对象。</param>
<param name="value">要设置的值。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="target"/> 不是 <see cref="T:System.Windows.Controls.TextBox"/>。</exception>
      <exception cref="T:System.ArgumentNullException">
<paramref name="target"/> 为 null。</exception>
    </member>
    <member name="T:System.Windows.Input.InputMethodState">
<summary>描述输入法编辑器在与基于 Silverlight 的应用程序交互时所处的状态。</summary>
    </member>
    <member name="F:System.Windows.Input.InputMethodState.Off">
<summary>输入法编辑器为了生成独立于设备的输入而处于关闭状态。 </summary>
    </member>
    <member name="F:System.Windows.Input.InputMethodState.On">
<summary>输入法编辑器处于打开状态。 </summary>
    </member>
    <member name="F:System.Windows.Input.InputMethodState.DoNotCare">
<summary>输入法处于不确定状态。 </summary>
    </member>
    <member name="T:System.Windows.Input.InputScope">
<summary>表示与输入法提供的数据范围相关的信息。</summary>
    </member>
    <member name="M:System.Windows.Input.InputScope.#ctor">
<summary>初始化 <see cref="T:System.Windows.Input.InputScope"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Input.InputScope.Names">
<summary>获取或设置字符串列表形式的输入范围名称。</summary>
<returns>字符串列表形式的输入范围名称。</returns>
    </member>
    <member name="T:System.Windows.Input.InputScopeConverter">
<summary>为 <see cref="T:System.Windows.Input.InputScope"/> 类提供类型转换支持。</summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeConverter.#ctor">
<summary>初始化 <see cref="T:System.Windows.Input.InputScopeConverter"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
<summary>返回此转换器是否可以将一种类型的对象转换为 <see cref="T:System.Windows.Input.InputScope"/> 类型。 </summary>
<returns>如果 <paramref name="sourceType"/> 的类型为 <see cref="T:System.String"/>，则为 true；否则为 false。</returns>
<param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>。 </param>
<param name="sourceType">一个 <see cref="T:System.Type"/>，表示要转换的类型。 </param>
    </member>
    <member name="M:System.Windows.Input.InputScopeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
<summary>确定是否可从 <see cref="T:System.Windows.Input.InputScope"/> 对象转换到指定的类型。</summary>
<returns>此实现总是返回 false。</returns>
<param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>。 </param>
<param name="destinationType">转换的预期目标类型。</param>
    </member>
    <member name="M:System.Windows.Input.InputScopeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
<summary>将指定对象转换为 <see cref="T:System.Windows.Input.InputScope"/> 对象。 </summary>
<returns>从转换源创建的 <see cref="T:System.Windows.Input.InputScope"/>。</returns>
<param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>。 </param>
<param name="culture">描述转换的预期 <see cref="T:System.Globalization.CultureInfo"/>。</param>
<param name="source">转换器应该转换的对象。</param>
    </member>
    <member name="M:System.Windows.Input.InputScopeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
<summary>将指定的值对象转换为指定的类型。 </summary>
<returns>转换后的对象。</returns>
<param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>。 </param>
<param name="culture">描述转换的预期 <see cref="T:System.Globalization.CultureInfo"/>。</param>
<param name="value">要转换的对象。</param>
<param name="destinationType">转换的预期目标类型。</param>
    </member>
    <member name="T:System.Windows.Input.InputScopeName">
<summary>定义文本输入模式的名称。</summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeName.#ctor">
<summary>初始化 <see cref="T:System.Windows.Input.InputScopeName"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeName.#ctor(System.Windows.Input.InputScopeNameValue)">
<summary>使用初始化的 <see cref="T:System.Windows.Input.InputScopeNameValue"/> 初始化 <see cref="T:System.Windows.Input.InputScopeName"/> 类的新实例。</summary>
<param name="nameValue">以 <see cref="T:System.Windows.Input.InputScopeNameValue"/> 枚举值的形式显示的输入范围名称值。</param>
    </member>
    <member name="P:System.Windows.Input.InputScopeName.NameValue">
<summary>获取或设置输入范围名称值，该值修改解释其他输入法输入的方式。</summary>
<returns>枚举的一个值。</returns>
    </member>
    <member name="T:System.Windows.Input.InputScopeNameConverter">
<summary>为 <see cref="T:System.Windows.Input.InputScopeName"/> 类提供类型转换支持。</summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeNameConverter.#ctor">
<summary>初始化 <see cref="T:System.Windows.Input.InputScopeNameConverter"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
<summary>返回此转换器是否可以将一种类型的对象转换为 <see cref="T:System.Windows.Input.InputScopeName"/> 类型。 </summary>
<returns>如果 <paramref name="sourceType"/> 的类型为 <see cref="T:System.String"/>，则为 true；否则为 false。</returns>
<param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>。 </param>
<param name="sourceType">一个 <see cref="T:System.Type"/>，表示要转换的类型。 </param>
    </member>
    <member name="M:System.Windows.Input.InputScopeNameConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
<summary>确定是否可从 <see cref="T:System.Windows.Input.InputScopeName"/> 对象转换到指定的类型。</summary>
<returns>如果 <paramref name="destinationType"/> 是此转换器可以转换为 <see cref="T:System.Windows.Input.InputScopeName"/> 的一种类型，则为 true；否则为 false。</returns>
<param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>。 </param>
<param name="destinationType">转换的预期目标类型。</param>
    </member>
    <member name="M:System.Windows.Input.InputScopeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
<summary>将指定对象转换为 <see cref="T:System.Windows.Input.InputScopeName"/> 对象。 </summary>
<returns>从转换源创建的 <see cref="T:System.Windows.Input.InputScopeName"/>。</returns>
<param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>。 </param>
<param name="culture">描述转换的预期 <see cref="T:System.Globalization.CultureInfo"/>。</param>
<param name="source">转换器应该转换的对象。</param>
    </member>
    <member name="M:System.Windows.Input.InputScopeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
<summary>将指定的值对象转换为指定的类型。 </summary>
<returns>转换后的对象。</returns>
<param name="context">提供格式上下文的 <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>。 </param>
<param name="culture">描述转换的预期 <see cref="T:System.Globalization.CultureInfo"/>。</param>
<param name="value">要转换的对象。</param>
<param name="destinationType">转换的预期目标类型。</param>
    </member>
    <member name="T:System.Windows.Input.InputScopeNameValue">
<summary>指定修改解释其他输入法输入的方式的输入范围名称。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AddressCity">
<summary>城市地址的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AddressCountryName">
<summary>国家/地区的名称的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AddressCountryShortName">
<summary>国家/地区的缩写名称的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AddressStateOrProvince">
<summary>省/市/自治区的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AddressStreet">
<summary>街道地址的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AlphanumericFullWidth">
<summary>字母数字全角字符的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AlphanumericHalfWidth">
<summary>字母数字半角字符的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.ApplicationEnd">
<summary>不支持。仅限在 Silverlight for Windows Phone 中内部使用。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Bopomofo">
<summary>汉语拼音语音转换系统的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Chat">
<summary>用于文本消息传递的 SIP 布局，可识别预定义的缩写。仅在 Silverlight for Windows Phone 中受支持。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.CurrencyAmount">
<summary>货币数量的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.CurrencyAmountAndSymbol">
<summary>货币数量和符号的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.CurrencyChinese">
<summary>中国货币的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Date">
<summary>日历日期的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.DateDay">
<summary>日历日期中数字日期的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.DateDayName">
<summary>日历日期中日期名称的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.DateMonth">
<summary>日历日期中数字月份的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.DateMonthName">
<summary>日历日期中月份名称的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.DateYear">
<summary>日历日期中年份的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Default">
<summary>输入命令的默认处理。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Digits">
<summary>数字的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.EmailNameOrAddress">
<summary>用于电子邮件名称或地址的 SIP 布局。仅在 Silverlight for Windows Phone 中受支持。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.EmailSmtpAddress">
<summary>简单邮件传输协议 (SMTP) 电子邮件地址的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.EmailUserName">
<summary>电子邮件用户名的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.EnumString">
<summary>不支持。仅限在 Silverlight for Windows Phone 中内部使用。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.FileName">
<summary>文件名的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Formula">
<summary>要计算的公式的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.FullFilePath">
<summary>文件完整路径的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Hanja">
<summary>朝鲜文汉字字符的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Hiragana">
<summary>平假名书写体系的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.KatakanaFullWidth">
<summary>全角片假名字符的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.KatakanaHalfWidth">
<summary>半角片假名字符的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.LogOnName">
<summary>登录名的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Maps">
<summary>用于输入地图位置的 SIP 布局。仅在 Silverlight for Windows Phone 中受支持。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.NameOrPhoneNumber">
<summary>用于 SMS“至”字段的 SIP 布局。仅在 Silverlight for Windows Phone 中受支持。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Number">
<summary>数字的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.NumberFullWidth">
<summary>全角数字的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.NumericPassword">
<summary>数字密码的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.OneChar">
<summary>某个字符的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Password">
<summary>密码的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalFullName">
<summary>个人的全名的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalGivenName">
<summary>个人的名字的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalMiddleName">
<summary>个人的中间名的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalNamePrefix">
<summary>个人姓名前缀的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalNameSuffix">
<summary>个人姓名后缀的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalSurname">
<summary>个人的姓的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PhraseList">
<summary>词组列表的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PostalAddress">
<summary>邮寄地址的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PostalCode">
<summary>邮政编码的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Private">
<summary>不支持。仅限在 Silverlight for Windows Phone 中内部使用。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.RegularExpression">
<summary>正则表达式的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Search">
<summary>用于搜索查询的 SIP 布局。仅在 Silverlight for Windows Phone 中受支持。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Srgs">
<summary>语音识别语法规范 (SRGS) 的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TelephoneAreaCode">
<summary>区号的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TelephoneCountryCode">
<summary>电话的国家/地区代码的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TelephoneLocalNumber">
<summary>本地电话号码的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TelephoneNumber">
<summary>电话号码的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Text">
<summary>用于标准文本输入的软件输入面板 (SIP) 布局。仅在 Silverlight for Windows Phone 中受支持。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Time">
<summary>时间的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TimeHour">
<summary>小时的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TimeMinorSec">
<summary>时间的分钟或秒的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Url">
<summary>统一资源定位符 (URL) 的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Xml">
<summary>XML 的文本输入模式。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Yomi">
<summary>不支持。仅限在 Silverlight for Windows Phone 中内部使用。</summary>
    </member>
    <member name="T:System.Windows.Input.Key">
<summary>指定键盘上可能的键值。 </summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
<summary>一个指示没有键的特殊值。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
<summary>Backspace 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
<summary>Tab 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
<summary>Enter 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Shift">
<summary>Shift 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Ctrl">
<summary>Ctrl（控制）键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Alt">
<summary>Alt 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
<summary>Caps Lock 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
<summary>Esc（也称作 Escape）键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
<summary>空格键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
<summary>Page Up 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
<summary>Page Down 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
<summary>End 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
<summary>Home 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
<summary>向左键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
<summary>向上键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
<summary>向右键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
<summary>向下键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
<summary>Insert 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
<summary>Del（也称作 Delete）键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
<summary>0（零）键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
<summary>1 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
<summary>2 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
<summary>3 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
<summary>4 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
<summary>5 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
<summary>6 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
<summary>7 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
<summary>8 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
<summary>9 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
<summary>A 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
<summary>B 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
<summary>C 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
<summary>D 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
<summary>E 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
<summary>F 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
<summary>G 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
<summary>H 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
<summary>I 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
<summary>J 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
<summary>K 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
<summary>L 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
<summary>M 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
<summary>N 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
<summary>O 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
<summary>P 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
<summary>Q 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
<summary>R 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
<summary>S 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
<summary>T 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
<summary>U 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
<summary>V 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
<summary>W 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
<summary>X 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
<summary>Y 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
<summary>Z 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
<summary>F1 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
<summary>F2 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
<summary>F3 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
<summary>F4 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
<summary>F5 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
<summary>F6 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
<summary>F7 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
<summary>F8 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
<summary>F9 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
<summary>F10 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
<summary>F11 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
<summary>F12 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
<summary>数字键盘上的 0 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
<summary>数字键盘上的 1 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
<summary>数字键盘上的 2 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
<summary>数字键盘上的 3 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
<summary>数字键盘上的 4 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
<summary>数字键盘上的 5 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
<summary>数字键盘上的 6 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
<summary>数字键盘上的 7 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
<summary>数字键盘上的 8 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
<summary>数字键盘上的 9 键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
<summary>*（乘号）键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
<summary>+（加号）键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
<summary>-（减号）键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
<summary>.（句点）键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
<summary>/（除号）键。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Unknown">
<summary>一个指示键超出此枚举范围的特殊值。</summary>
    </member>
    <member name="T:System.Windows.Input.Keyboard">
<summary>表示键盘设备。 </summary>
    </member>
    <member name="P:System.Windows.Input.Keyboard.Modifiers">
<summary>获取当前按下的 <see cref="T:System.Windows.Input.ModifierKeys"/> 集。 </summary>
<returns>枚举值的按位组合。</returns>
    </member>
    <member name="T:System.Windows.Input.KeyboardNavigationMode">
<summary>在容器内通过 Silverlight Tab 键序列的制表位指定 Tab 键行为。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Local">
<summary>只有 Tab 索引位于此容器内时，才会在本地子树上考虑这些索引。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Cycle">
<summary>当到达容器内的第一个或最后一个键盘导航位时，焦点返回到第一个或最后一个键盘导航位。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Once">
<summary>容器及其所有子元素整个只能接收焦点一次。 </summary>
    </member>
    <member name="T:System.Windows.Input.KeyEventArgs">
<summary>为 <see cref="E:System.Windows.UIElement.KeyUp"/> 和 <see cref="E:System.Windows.UIElement.KeyDown"/> 事件提供事件数据。</summary>
    </member>
    <member name="P:System.Windows.Input.KeyEventArgs.Handled">
<summary>获取或设置将路由事件标记为已处理的值。如果 Handled 的值为 true，则可以防止事件路由路径上的大多数处理程序再次处理同一事件。</summary>
<returns>如果为 true，则将路由事件标记为已处理；如果为 false，则将路由事件保留为未处理，这可能允许该事件进一步路由。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Input.KeyEventArgs.Key">
<summary>获取与事件关联的键盘键。 </summary>
<returns>枚举值之一，它指示事件引用的键。</returns>
    </member>
    <member name="P:System.Windows.Input.KeyEventArgs.PlatformKeyCode">
<summary>获取一个整数值，该值表示已按下或已释放的键（取决于引发的事件）。该值是不可移植的键代码，这一点特定于操作系统。</summary>
<returns>键代码值。</returns>
    </member>
    <member name="T:System.Windows.Input.KeyEventHandler">
<summary>表示处理 <see cref="E:System.Windows.UIElement.KeyUp"/> 和 <see cref="E:System.Windows.UIElement.KeyDown"/> 事件的方法。</summary>
<param name="sender">事件处理程序所附加到的对象。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Input.ManipulationCompletedEventArgs">
<summary>为 <see cref="E:System.Windows.UIElement.ManipulationCompleted"/> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationCompletedEventArgs.#ctor">
<summary>初始化 <see cref="T:System.Windows.Input.ManipulationCompletedEventArgs"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.FinalVelocities">
<summary>获取用于操作的速度。</summary>
<returns>用于操作的速度。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.Handled">
<summary>获取或设置将路由事件标记为已处理的值。如果设置为 true，则可以防止事件路由路径上的大多数处理程序再次处理同一事件。</summary>
<returns>如果为 true，则将路由事件标记为已处理；如果为 false，则将路由事件保留为未处理，这可能允许该事件进一步路由。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.IsInertial">
<summary>获取是否在惯性运动期间发生 <see cref="E:System.Windows.UIElement.ManipulationCompleted"/> 事件。</summary>
<returns>如果在惯性运动期间发生 <see cref="E:System.Windows.UIElement.ManipulationCompleted"/> 事件，则为 true；如果在用户的输入设备接触该元素的过程中发生该事件，则为 false。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationContainer">
<summary>获取定义操作坐标的容器。</summary>
<returns>容器元素。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin">
<summary>获取操作的起源点。</summary>
<returns>操作的起源点。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation">
<summary>获取当前操作期间发生的总转换。</summary>
<returns>当前操作期间发生的总转换。</returns>
    </member>
    <member name="T:System.Windows.Input.ManipulationDelta">
<summary>包含操作事件发生时聚合的转换数据。</summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Point,System.Windows.Point)">
<summary>使用初始数据初始化 <see cref="T:System.Windows.Input.ManipulationDelta"/> 类的新实例。 </summary>
<param name="translation">要报告的平移转换。</param>
<param name="scale">要报告的初始缩放转换。</param>
    </member>
    <member name="P:System.Windows.Input.ManipulationDelta.Scale">
<summary>获取操作已调整的作为乘数的量。</summary>
<returns>操作已调整的作为乘数的量。</returns>
    </member>
    <member name="F:System.Windows.Input.ManipulationDelta.ScaleProperty">
<summary>标识 <see cref="P:System.Windows.Input.ManipulationDelta.Scale"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Input.ManipulationDelta.Scale"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDelta.Translation">
<summary>获取操作的线性运动。</summary>
<returns>操作的线性运动。</returns>
    </member>
    <member name="F:System.Windows.Input.ManipulationDelta.TranslationProperty">
<summary>标识 <see cref="P:System.Windows.Input.ManipulationDelta.Translation"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Input.ManipulationDelta.Translation"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Input.ManipulationDeltaEventArgs">
<summary>为 <see cref="E:System.Windows.UIElement.ManipulationDelta"/> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationDeltaEventArgs.#ctor">
<summary>初始化 <see cref="T:System.Windows.Input.ManipulationDeltaEventArgs"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationDeltaEventArgs.Complete">
<summary>完成操作而不发生惯性。</summary>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation">
<summary>以 <see cref="T:System.Windows.Input.ManipulationDelta"/> 形式获取当前操作的累积更改。</summary>
<returns>当前操作的累积更改。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation">
<summary>以 <see cref="T:System.Windows.Input.ManipulationDelta"/> 形式获取当前操作的最近更改。</summary>
<returns>当前操作的最近更改。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.Handled">
<summary>获取或设置将路由事件标记为已处理的值。如果设置为 true，则可以防止事件路由路径上的大多数处理程序再次处理同一事件。</summary>
<returns>如果为 true，则将路由事件标记为已处理；如果为 false，则将路由事件保留为未处理，这可能允许该事件进一步路由。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial">
<summary>获取是否在惯性运动期间发生 <see cref="E:System.Windows.UIElement.ManipulationDelta"/> 事件。</summary>
<returns>如果在惯性运动期间发生 <see cref="E:System.Windows.UIElement.ManipulationDelta"/> 事件，则为 true；如果在用户的输入设备接触该元素的过程中发生该事件，则为 false。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer">
<summary>获取定义操作坐标的容器。</summary>
<returns>容器元素。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin">
<summary>获取操作的起源点。</summary>
<returns>操作的起源点。</returns>
    </member>
    <member name="M:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia">
<summary>通过忽略后来的接触运动对操作启动惯性。</summary>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.Velocities">
<summary>获取对操作进行的最近更改的速率。</summary>
<returns>对操作进行的最近更改的速率。</returns>
    </member>
    <member name="T:System.Windows.Input.ManipulationStartedEventArgs">
<summary>为 <see cref="E:System.Windows.UIElement.ManipulationStarted"/> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationStartedEventArgs.#ctor">
<summary>初始化 <see cref="T:System.Windows.Input.ManipulationStartedEventArgs"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationStartedEventArgs.Complete">
<summary>完成操作而不发生惯性。</summary>
    </member>
    <member name="P:System.Windows.Input.ManipulationStartedEventArgs.Handled">
<summary>获取或设置将路由事件标记为已处理的值。如果设置为 true，则可以防止事件路由路径上的大多数处理程序再次处理同一事件。</summary>
<returns>如果为 true，则将路由事件标记为已处理；如果为 false，则将路由事件保留为未处理，这可能允许该事件进一步路由。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer">
<summary>获取定义操作坐标的容器。</summary>
<returns>容器元素。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin">
<summary>获取操作的起源点。</summary>
<returns>操作的起源点。</returns>
    </member>
    <member name="T:System.Windows.Input.ManipulationVelocities">
<summary>描述操作发生的速度。</summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationVelocities.#ctor(System.Windows.Point,System.Windows.Point)">
<summary>使用初始值初始化 <see cref="T:System.Windows.Input.ManipulationVelocities"/> 类的新实例。 </summary>
<param name="linear">要报告的线性速率。</param>
<param name="expansion">要报告的延伸速率。</param>
    </member>
    <member name="P:System.Windows.Input.ManipulationVelocities.ExpansionVelocity">
<summary>获取操作调整的速率。 </summary>
<returns>操作调整的速率。 </returns>
    </member>
    <member name="F:System.Windows.Input.ManipulationVelocities.ExpansionVelocityProperty">
<summary>标识 <see cref="P:System.Windows.Input.ManipulationVelocities.ExpansionVelocity"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Input.ManipulationVelocities.ExpansionVelocity"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationVelocities.LinearVelocity">
<summary>获取线性运动的速度。</summary>
<returns>线性运动的速度。</returns>
    </member>
    <member name="F:System.Windows.Input.ManipulationVelocities.LinearVelocityProperty">
<summary>标识 <see cref="P:System.Windows.Input.ManipulationVelocities.LinearVelocity"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Input.ManipulationVelocities.LinearVelocity"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
<summary>指定修饰符集。 </summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
<summary>没有按下任何修饰符。 </summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
<summary>Alt 键已按下。</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
<summary>Ctrl 键已按下。</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
<summary>Shift 键已按下。</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
<summary>Windows 徽标键已按下。</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Apple">
<summary>Apple 键（也称作“Open Apple 键”）已按下。</summary>
    </member>
    <member name="T:System.Windows.Input.MouseButtonEventArgs">
<summary>为鼠标按钮输入事件（如 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> 和 <see cref="E:System.Windows.UIElement.MouseRightButtonUp"/>）提供事件数据。 </summary>
    </member>
    <member name="P:System.Windows.Input.MouseButtonEventArgs.ClickCount">
<summary>获取单击按钮的次数。 </summary>
<returns>单击鼠标按钮的次数。</returns>
    </member>
    <member name="P:System.Windows.Input.MouseButtonEventArgs.Handled">
<summary>获取或设置将路由事件标记为已处理的值。如果 Handled 的值为 true，则可以防止事件路由路径上的大多数处理程序再次处理同一事件。</summary>
<returns>如果为 true，则将路由事件标记为已处理。如果为 false，则将路由事件保留为未处理，这可以允许该事件进一步路由并由其他处理程序进行处理。默认值为 false。</returns>
    </member>
    <member name="T:System.Windows.Input.MouseButtonEventHandler">
<summary>表示处理 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> 和 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> 事件的方法。 </summary>
<param name="sender">事件处理程序所附加到的对象。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Input.MouseEventArgs">
<summary>为与鼠标相关且并不具体涉及鼠标按钮的事件（如 <see cref="E:System.Windows.UIElement.MouseMove"/>）提供数据。</summary>
    </member>
    <member name="M:System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.UIElement)">
<summary>返回鼠标指针位置的 x 坐标和 y 坐标，并且可以选择根据提供的 <see cref="T:System.Windows.UIElement"/> 的坐标原点进行评估。</summary>
<returns>一个 <see cref="T:System.Windows.Point"/>，表示鼠标指针位置的当前 x 坐标和 y 坐标。如果 null 作为 <paramref name="relativeTo"/> 传递，则此坐标针对整个 Silverlight 插件内容区域。如果传递非 null <paramref name="relativeTo"/>，则此坐标相对于 <paramref name="relativeTo"/> 引用的对象。</returns>
<param name="relativeTo">被 Silverlight 插件包含并且连接到对象树的任何 <see cref="T:System.Windows.UIElement"/> 派生对象。若要指定相对于整个 Silverlight 坐标系的对象，请使用 null 的 <paramref name="relativeTo"/> 值。</param>
    </member>
    <member name="P:System.Windows.Input.MouseEventArgs.StylusDevice">
<summary>获取报告触笔设备信息（如与输入关联的触笔接触点的集合）的对象。</summary>
<returns>触笔设备信息对象。</returns>
    </member>
    <member name="T:System.Windows.Input.MouseEventHandler">
<summary>表示将处理与鼠标相关且并不具体涉及鼠标按钮的路由事件的方法；例如 <see cref="E:System.Windows.UIElement.MouseMove"/>。</summary>
<param name="sender">事件处理程序所附加到的对象。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Input.MouseWheelEventArgs">
<summary>为 <see cref="E:System.Windows.UIElement.MouseWheel"/> 路由事件提供数据。 </summary>
    </member>
    <member name="P:System.Windows.Input.MouseWheelEventArgs.Delta">
<summary>获取一个值，该值指示鼠标轮旋转的量（相对于其起始状态或上次发生的事件）。 </summary>
<returns>一个提供鼠标轮转动量的因数的整数值。此值可以是负整数；请参阅“备注”。</returns>
    </member>
    <member name="P:System.Windows.Input.MouseWheelEventArgs.Handled">
<summary>获取或设置一个值，该值将路由事件标记为已处理，并防止事件路由路径上的大多数处理程序重新处理同一事件。</summary>
<returns>如果将路由事件标记为已处理，则为 true。如果将路由事件保留为未处理（这样就允许该事件进一步路由并由其他处理程序进行处理），则为 false。默认值为 false。</returns>
    </member>
    <member name="T:System.Windows.Input.MouseWheelEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.UIElement.MouseWheel"/> 路由事件的方法。</summary>
<param name="sender">事件处理程序所附加到的对象。 </param>
<param name="e">事件的事件数据。</param>
    </member>
    <member name="T:System.Windows.Input.StylusDevice">
<summary>报告触笔设备信息，如与输入关联的触笔接触点的集合。</summary>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.DeviceType">
<summary>获取 Tablet 设备的类型。</summary>
<returns>Tablet 设备的类型。</returns>
    </member>
    <member name="M:System.Windows.Input.StylusDevice.GetStylusPoints(System.Windows.UIElement)">
<summary>返回自上一个鼠标事件以来收集的触笔接触点。</summary>
<returns>自上一个鼠标事件以来收集的触笔接触点的复本的集合。</returns>
<param name="relativeTo">指定应该应用于捕获的点的对象（通常为 <see cref="T:System.Windows.Controls.InkPresenter"/>）的偏移量。</param>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.Inverted">
<summary>获取或设置一个指示触笔是否反转的值。</summary>
<returns>如果触笔反转，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="T:System.Windows.Input.StylusPoint">
<summary>表示在用户使用触笔或鼠标输入墨迹笔画时收集的单个点。</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double)">
<summary>初始化 <see cref="T:System.Windows.Input.StylusPoint"/> 类的新实例。 </summary>
<param name="x">像素网格中 <see cref="T:System.Windows.Input.StylusPoint"/> 的 x 坐标。</param>
<param name="y">像素网格中 <see cref="T:System.Windows.Input.StylusPoint"/> 的 y 坐标。</param>
    </member>
    <member name="P:System.Windows.Input.StylusPoint.PressureFactor">
<summary>获取或设置触笔在屏幕上的压力因子。</summary>
<returns>触笔在屏幕上的压力因子。默认值为 0.5。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
<see cref="P:System.Windows.Input.StylusPoint.PressureFactor"/> 被设置为小于 0 或大于 1.0 的值。</exception>
    </member>
    <member name="P:System.Windows.Input.StylusPoint.X">
<summary>获取或设置 <see cref="T:System.Windows.Input.StylusPoint"/> 的 x 坐标值。</summary>
<returns>像素网格中 <see cref="T:System.Windows.Input.StylusPoint"/> 的 x 坐标。默认值为 0。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
<see cref="P:System.Windows.Input.StylusPoint.X"/> 被设置为计算结果无限大的值或不是数字的值。</exception>
    </member>
    <member name="P:System.Windows.Input.StylusPoint.Y">
<summary>获取或设置 <see cref="T:System.Windows.Input.StylusPoint"/> 的 y 坐标值。</summary>
<returns>像素网格中 <see cref="T:System.Windows.Input.StylusPoint"/> 的 y 坐标。默认值为 0。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
<see cref="P:System.Windows.Input.StylusPoint.Y"/> 被设置为计算结果无限大的值或不是数字的值。</exception>
    </member>
    <member name="T:System.Windows.Input.StylusPointCollection">
<summary>表示相关 <see cref="T:System.Windows.Input.StylusPoint"/> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Input.StylusPointCollection"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.Add(System.Windows.Input.StylusPointCollection)">
<summary>向集合添加一组 <see cref="T:System.Windows.Input.StylusPoint"/> 对象。 </summary>
<param name="stylusPoints">要添加到集合中的 <see cref="T:System.Windows.Input.StylusPoint"/> 对象的集合。</param>
    </member>
    <member name="T:System.Windows.Input.TabletDeviceType">
<summary>定义 Tablet 设备所使用的设备类型的值。</summary>
    </member>
    <member name="F:System.Windows.Input.TabletDeviceType.Mouse">
<summary>指示 Tablet 设备为鼠标。</summary>
    </member>
    <member name="F:System.Windows.Input.TabletDeviceType.Stylus">
<summary>指示 Tablet 设备为触笔。</summary>
    </member>
    <member name="F:System.Windows.Input.TabletDeviceType.Touch">
<summary>指示 Tablet 设备为触摸屏。</summary>
    </member>
    <member name="T:System.Windows.Input.TextComposition">
<summary>表示与包含撰写文本本身的文本输入相关的撰写。</summary>
    </member>
    <member name="P:System.Windows.Input.TextComposition.CompositionText">
<summary>获取此文本撰写的撰写文本。</summary>
<returns>此文本撰写的撰写文本。</returns>
    </member>
    <member name="T:System.Windows.Input.TextCompositionEventArgs">
<summary>为 <see cref="E:System.Windows.UIElement.TextInput"/> 路由事件提供数据。 </summary>
    </member>
    <member name="P:System.Windows.Input.TextCompositionEventArgs.Handled">
<summary>获取或设置一个值，该值将路由事件标记为已处理，并防止事件路由路径上的大多数处理程序再次处理同一事件。</summary>
<returns>如果为 true，则将路由事件标记为已处理。如果为 false，则将路由事件保留为未处理，这可以允许该事件进一步路由并由其他处理程序进行处理。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Input.TextCompositionEventArgs.Text">
<summary>获取或设置文本撰写的文本字符串。</summary>
<returns>文本撰写的文本字符串。</returns>
    </member>
    <member name="P:System.Windows.Input.TextCompositionEventArgs.TextComposition">
<summary>以 <see cref="T:System.Windows.Input.TextComposition"/> 对象的形式获取或设置撰写中的文本。</summary>
<returns>以 <see cref="T:System.Windows.Input.TextComposition"/> 对象的形式显示的撰写中的文本。</returns>
    </member>
    <member name="T:System.Windows.Input.TextCompositionEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.UIElement.TextInput"/> 路由事件的方法。</summary>
<param name="sender">事件处理程序所附加到的对象。 </param>
<param name="e">事件的事件数据。</param>
    </member>
    <member name="T:System.Windows.Input.Touch">
<summary>提供应用程序级服务，用以处理来自操作系统的触控输入并引发 <see cref="E:System.Windows.Input.Touch.FrameReported"/> 事件。</summary>
    </member>
    <member name="E:System.Windows.Input.Touch.FrameReported">
<summary>当输入系统为 Silverlight 提升 Windows 7 触控消息时发生。</summary>
    </member>
    <member name="T:System.Windows.Input.TouchAction">
<summary>描述特定触控点的操作。</summary>
    </member>
    <member name="F:System.Windows.Input.TouchAction.Down">
<summary>来自 TOUCHEVENTF_DOWN 消息的触控操作。</summary>
    </member>
    <member name="F:System.Windows.Input.TouchAction.Move">
<summary>来自 TOUCHEVENTF_MOVE 消息的触控操作。</summary>
    </member>
    <member name="F:System.Windows.Input.TouchAction.Up">
<summary>来自 TOUCHEVENTF_UP 消息的触控操作。</summary>
    </member>
    <member name="T:System.Windows.Input.TouchDevice">
<summary>标识生成触控点的“设备”。这不是文本设备，而是用来通过向下/移动/向上序列来区分触控点的工具。</summary>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.#ctor">
<summary>初始化 <see cref="T:System.Windows.Input.TouchDevice"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Input.TouchDevice.DirectlyOver">
<summary>获取在生成此触控点时鼠标悬停在其上的最顶层 <see cref="T:System.Windows.UIElement"/> 对象。</summary>
<returns>获取在生成此触控点时鼠标悬停在其上的最顶层（按 Z 顺序）<see cref="T:System.Windows.UIElement"/> 对象。</returns>
    </member>
    <member name="F:System.Windows.Input.TouchDevice.DirectlyOverProperty">
<summary>标识 <see cref="P:System.Windows.Input.TouchDevice.DirectlyOver"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Input.TouchDevice.DirectlyOver"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Input.TouchDevice.Id">
<summary>获取由操作系统为特定触控设备提供的唯一 ID。</summary>
<returns>特定触控设备的唯一 ID。</returns>
    </member>
    <member name="F:System.Windows.Input.TouchDevice.IdProperty">
<summary>标识 <see cref="P:System.Windows.Input.TouchDevice.Id"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Input.TouchDevice.Id"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Input.TouchFrameEventArgs">
<summary>为 <see cref="E:System.Windows.Input.Touch.FrameReported"/> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.UIElement)">
<summary>返回报告的帧的主触控点，作为 <see cref="T:System.Windows.Input.TouchPoint"/> 值。可根据坐标参考点而非根据绝对 Silverlight 坐标计算触控点。</summary>
<returns>报告的帧的主触控点。</returns>
<param name="relativeTo">可用于偏移返回值 <see cref="T:System.Windows.Input.TouchPoint"/> 的坐标的坐标参考点。如果您希望参考基于 Silverlight 绝对坐标，则将 <paramref name="relativeTo"/> 指定为 null。</param>
    </member>
    <member name="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.UIElement)">
<summary>返回报告的帧中所有 <see cref="T:System.Windows.Input.TouchPoint"/> 值的集合。可根据坐标参考点而非根据绝对 Silverlight 坐标计算触控点。</summary>
<returns><see cref="T:System.Windows.Input.TouchPoint"/> 值的集合。</returns>
<param name="relativeTo">可用于偏移返回集合中的所有 <see cref="T:System.Windows.Input.TouchPoint"/> 项的坐标的坐标参考点。如果您希望参考基于 Silverlight 绝对坐标，则将 <paramref name="relativeTo"/> 指定为 null。</param>
    </member>
    <member name="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp">
<summary>禁用主触控点的自动鼠标事件提升，直到所有触控点报告为 <see cref="F:System.Windows.Input.TouchAction.Up"/>。</summary>
<exception cref="T:System.InvalidOperationException">未记录任何主触控点。-或- 主触控点具有 <see cref="F:System.Windows.Input.TouchAction.Down"/> 之外的操作。</exception>
    </member>
    <member name="P:System.Windows.Input.TouchFrameEventArgs.Timestamp">
<summary>获取事件的整数时间戳值。</summary>
<returns>事件的整数时间戳值。</returns>
    </member>
    <member name="T:System.Windows.Input.TouchFrameEventHandler">
<summary>表示将处理 <see cref="T:System.Windows.Input.Touch"/> 的 <see cref="E:System.Windows.Input.Touch.FrameReported"/> 事件的方法。</summary>
<param name="sender">在其中处理此事件的对象。</param>
<param name="e">事件的数据。</param>
    </member>
    <member name="T:System.Windows.Input.TouchPoint">
<summary>表示来自触控消息源的单个触控点。</summary>
    </member>
    <member name="M:System.Windows.Input.TouchPoint.#ctor">
<summary>初始化 <see cref="T:System.Windows.Input.TouchPoint"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.Action">
<summary>获取 <see cref="T:System.Windows.Input.TouchPoint"/> 表示的操作类型（向上、向下、移动）。</summary>
<returns><see cref="T:System.Windows.Input.TouchAction"/> 枚举的一个值。</returns>
    </member>
    <member name="F:System.Windows.Input.TouchPoint.ActionProperty">
<summary>标识 <see cref="P:System.Windows.Input.TouchPoint.Action"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Input.TouchPoint.Action"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.Position">
<summary>获取作为 <see cref="T:System.Windows.Point"/> 的触控点的 X,Y 坐标位置。</summary>
<returns>一个 <see cref="T:System.Windows.Point"/> 值，报告触控点的坐标位置。</returns>
    </member>
    <member name="F:System.Windows.Input.TouchPoint.PositionProperty">
<summary>标识 <see cref="P:System.Windows.Input.TouchPoint.Position"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Input.TouchPoint.Position"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.Size">
<summary>将所报告的矩形区域视为触控点接触区域。</summary>
<returns>一个 <see cref="T:System.Windows.Size"/> 值。如果用于触控输入的设备不支持报告触控大小区域，则此属性会报告一个值为 -1 而不是 null 的 <see cref="T:System.Windows.Size"/>。</returns>
    </member>
    <member name="F:System.Windows.Input.TouchPoint.SizeProperty">
<summary>标识 <see cref="P:System.Windows.Input.TouchPoint.Size"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Input.TouchPoint.Size"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.TouchDevice">
<summary>获取生成触控点的具体设备类型。</summary>
<returns>一个报告有关生成设备的具体信息的 <see cref="P:System.Windows.Input.TouchPoint.TouchDevice"/> 值。</returns>
    </member>
    <member name="F:System.Windows.Input.TouchPoint.TouchDeviceProperty">
<summary>标识 <see cref="P:System.Windows.Input.TouchPoint.TouchDevice"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Input.TouchPoint.TouchDevice"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Input.TouchPointCollection">
<summary>包含 <see cref="T:System.Windows.Input.TouchPoint"/> 值的集合。</summary>
    </member>
    <member name="T:System.Windows.Interop.Content">
<summary>报告与基于 Silverlight 的应用程序的实例化设置有关的详细信息，并且为承载的 Silverlight 插件实例公开某些 HTML DOM 值。<see cref="T:System.Windows.Interop.Content"/> 对象包含一些 API，这些 API 专门与 Silverlight 内容区域（实例化中宽度和高度声明的区域）相关。</summary>
    </member>
    <member name="M:System.Windows.Interop.Content.#ctor">
<summary>初始化 <see cref="T:System.Windows.Interop.Content"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Interop.Content.ActualHeight">
<summary>获取 Silverlight 插件内容区域的浏览器确定的高度。</summary>
<returns>Silverlight 插件内容区域的浏览器确定的高度，以像素为单位。默认值为 Silverlight 插件的高度（以像素为单位），由实例化该值的 HTML 对象元素指定。 </returns>
    </member>
    <member name="P:System.Windows.Interop.Content.ActualWidth">
<summary>获取 Silverlight 插件内容区域的浏览器确定的宽度。</summary>
<returns>Silverlight 插件内容区域的浏览器确定的宽度，以像素为单位。默认值为 Silverlight 插件的宽度，由实例化该值的 HTML 对象元素指定。 </returns>
    </member>
    <member name="E:System.Windows.Interop.Content.FullScreenChanged">
<summary>在承载的 Silverlight 插件进入或退出全屏模式时发生。</summary>
    </member>
    <member name="P:System.Windows.Interop.Content.FullScreenOptions">
<summary>获取或设置指示全屏模式的行为的值。</summary>
<returns>一个指示全屏模式的行为的值。 </returns>
    </member>
    <member name="P:System.Windows.Interop.Content.IsFullScreen">
<summary>获取或设置一个值，该值指示 Silverlight 插件是否正以全屏模式显示。</summary>
<returns>如果 Silverlight 插件显示为全屏插件，则为 true；如果 Silverlight 插件显示为嵌入式插件，则为 false。</returns>
    </member>
    <member name="E:System.Windows.Interop.Content.Resized">
<summary>在 Silverlight 插件的 <see cref="P:System.Windows.Interop.Content.ActualHeight"/> 或 <see cref="P:System.Windows.Interop.Content.ActualWidth"/> 更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Interop.Content.Zoomed">
<summary>当宿主浏览器窗口中的缩放设置更改或初始化时发生。 </summary>
    </member>
    <member name="P:System.Windows.Interop.Content.ZoomFactor">
<summary>获取一个系数，当前浏览器窗口将按照该系数来调整其内容大小。  </summary>
<returns>当前浏览器窗口的缩放设置。 </returns>
    </member>
    <member name="T:System.Windows.Interop.FullScreenOptions">
<summary>定义指示全屏模式的行为的常数。 </summary>
    </member>
    <member name="F:System.Windows.Interop.FullScreenOptions.None">
<summary>该应用程序使用默认全屏行为。</summary>
    </member>
    <member name="F:System.Windows.Interop.FullScreenOptions.StaysFullScreenWhenUnfocused">
<summary>在其他应用程序获取焦点时该应用程序不会退出全屏模式。 </summary>
    </member>
    <member name="T:System.Windows.Interop.HostingRenderTargetBitmap">
<summary>允许本机 Silverlight 宿主（如 Expression Blend 或 Visual Studio）将某一 <see cref="T:System.Windows.UIElement"/> 对象转换为位图。</summary>
    </member>
    <member name="M:System.Windows.Interop.HostingRenderTargetBitmap.#ctor(System.Int32,System.Int32,System.IntPtr)">
<summary>[SECURITY CRITICAL] 初始化 <see cref="T:System.Windows.Interop.HostingRenderTargetBitmap"/> 类的新实例。 </summary>
<param name="width">要转换的 <see cref="T:System.Windows.UIElement"/> 的宽度。</param>
<param name="height">要转换的 <see cref="T:System.Windows.UIElement"/> 的高度。</param>
<param name="bitmap">指向目标位图的指针。</param>
    </member>
    <member name="M:System.Windows.Interop.HostingRenderTargetBitmap.Render(System.Windows.UIElement)">
<summary>将 <see cref="T:System.Windows.UIElement"/> 对象呈现给在构造函数中指定的位图指针。</summary>
<returns>已更新矩形。 </returns>
<param name="visual">要呈现的对象。</param>
    </member>
    <member name="T:System.Windows.Interop.NavigationStateChangedEventArgs">
<summary>为 <see cref="E:System.Windows.Interop.SilverlightHost.NavigationStateChanged"/> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Interop.NavigationStateChangedEventArgs.#ctor(System.String,System.String)">
<summary>初始化 <see cref="T:System.Windows.Interop.NavigationStateChangedEventArgs"/> 类的新实例。 </summary>
<param name="previousNavigationState">表示前一导航状态的 URI 片段。 </param>
<param name="newNavigationState">表示新导航状态的 URI 片段。</param>
    </member>
    <member name="P:System.Windows.Interop.NavigationStateChangedEventArgs.NewNavigationState">
<summary>获取表示新导航状态的 URI 片段。 </summary>
<returns>表示新导航状态的 URI 片段。 </returns>
    </member>
    <member name="P:System.Windows.Interop.NavigationStateChangedEventArgs.PreviousNavigationState">
<summary>获取表示前一导航状态的 URI 片段。 </summary>
<returns>表示前一导航状态的 URI 片段。 </returns>
    </member>
    <member name="T:System.Windows.Interop.Settings">
<summary>报告与基于 Silverlight 的应用程序的实例化设置有关的详细信息，并且为承载的 Silverlight 插件实例公开某些 HTML DOM 值。 </summary>
    </member>
    <member name="M:System.Windows.Interop.Settings.#ctor">
<summary>初始化 <see cref="T:System.Windows.Interop.Settings"/> 对象的新实例。</summary>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableAutoZoom">
<summary>获取或设置一个值，该值指示 Silverlight 插件是否将基于当前浏览器缩放设置调整其内容大小。 </summary>
<returns>如果 Silverlight 响应浏览器缩放设置，则为 true；否则为 false。如果没有 <see cref="E:System.Windows.Interop.Content.Zoomed"/> 事件的处理程序，则默认值为 true；否则，默认值为 false。 </returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableCacheVisualization">
<summary>获取或设置一个值，该值指示是否使用非生产分析可视化模式，显示页面中未使用彩色覆盖进行 GPU 加速的部分。不要在成品代码中使用。</summary>
<returns>如果启用缓存可视化，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableFrameRateCounter">
<summary>获取或设置一个值，该值指示是否在承载浏览器的状态栏中显示当前的帧速率（仅适用于 Microsoft Internet Explorer）。</summary>
<returns>如果将在承载浏览器的状态栏中显示当前呈现的 Silverlight 内容的每秒帧数 (fps)，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableGPUAcceleration">
<summary>获取一个值，该值指示是否对缓存的组合使用图形处理器单元 (GPU) 硬件加速（这可能导致图形优化）。 </summary>
<returns>如果启用硬件加速，则为 true；否则为 false。 </returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableHTMLAccess">
<summary>获取一个值，该值指示 Silverlight 插件是否允许承载的内容或其运行时访问 HTML DOM。</summary>
<returns>如果承载的内容可以访问浏览器 DOM，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableRedrawRegions">
<summary>获取或设置一个值，该值指示是否显示重新绘制每个帧的 Silverlight 插件的区域。</summary>
<returns>如果显示重新绘制每个帧的 Silverlight 插件的区域，则为 true；否则为 false。</returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.MaxFrameRate">
<summary>获取或设置每秒要呈现的最大帧数。</summary>
<returns>一个整数值，指定每秒要呈现的最大帧数。默认值为 60。</returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.Windowless">
<summary>获取一个值，该值指示 Silverlight 插件是否显示为无窗口插件（仅适用于 Windows 版本的 Silverlight）。</summary>
<returns>如果 Silverlight 插件显示为无窗口插件，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.Interop.SilverlightHost">
<summary>报告与基于 Silverlight 的应用程序的实例化设置有关的详细信息，并且为承载的 Silverlight 插件实例公开某些 HTML DOM 值。</summary>
    </member>
    <member name="M:System.Windows.Interop.SilverlightHost.#ctor">
<summary>初始化 <see cref="T:System.Windows.Interop.SilverlightHost"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.Background">
<summary>获取作为实例化设置的一部分应用于 Silverlight 插件的背景色的值。</summary>
<returns>Silverlight 插件的背景色。</returns>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.Content">
<summary>获取此 <see cref="T:System.Windows.Interop.SilverlightHost"/> 的“Content”子对象。</summary>
<returns>“Content”子对象。</returns>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.InitParams">
<summary>获取作为 Silverlight 插件的 HTML 初始化的一部分传递的初始化参数。</summary>
<returns>初始化参数集，形式为带有键字符串和值字符串的字典。</returns>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.IsLoaded">
<summary>获取一个值，该值指示承载的 Silverlight 插件是否已完成加载。</summary>
<returns>如果该插件已完成加载，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Interop.SilverlightHost.IsVersionSupported(System.String)">
<summary>返回一个值，该值指示安装的 Silverlight 插件是否支持指定版本。 </summary>
<returns>如果安装支持该版本，则为 true；否则为 false。</returns>
<param name="versionStr">要检查的版本，其格式为 major.minor.build.revision。有关字符串格式的更多信息，请参阅“备注”。</param>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.NavigationState">
<summary>获取或设置表示当前导航状态的 URI 片段。</summary>
<returns>表示当前导航状态的 URI 片段。</returns>
<exception cref="T:System.ArgumentNullException">当设置此属性时，指定的值为 null。</exception>
    </member>
    <member name="E:System.Windows.Interop.SilverlightHost.NavigationStateChanged">
<summary>当 <see cref="P:System.Windows.Interop.SilverlightHost.NavigationState"/> 属性值更改时发生。</summary>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.Settings">
<summary>获取此 <see cref="T:System.Windows.Interop.SilverlightHost"/> 的“Settings”子对象。</summary>
<returns>“Settings”子对象。</returns>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.Source">
<summary>获取指定要呈现的 XAML 内容的包或 XAML 文件的 URI。</summary>
<returns>包含要加载到 Silverlight 插件的内容的包、XAML 文件或 XAML 脚本标记的 URI。</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentPropertyAttribute">
<summary>指定在通过 XAML 处理器分析某个类时，可以将该类的哪个属性解释为内容属性。</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor">
<summary>初始化 <see cref="T:System.Windows.Markup.ContentPropertyAttribute"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)">
<summary>使用指定的内容属性名称初始化 <see cref="T:System.Windows.Markup.ContentPropertyAttribute"/> 类的新实例。</summary>
<param name="name">内容属性名称。</param>
    </member>
    <member name="P:System.Windows.Markup.ContentPropertyAttribute.Name">
<summary>获取作为声明的内容属性的属性的名称。</summary>
<returns>一个字符串，它包含作为内容属性的属性的名称。</returns>
    </member>
    <member name="T:System.Windows.Markup.IProvideValueTarget">
<summary>表示一个服务，该服务报告环境对象与属性之间的关系以进行标记扩展计算。</summary>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
<summary>获取正在报告的目标对象。</summary>
<returns>正在报告的目标对象。</returns>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
<summary>获取正在报告的目标对象的标识符。</summary>
<returns>正在报告的目标对象的标识符。</returns>
    </member>
    <member name="T:System.Windows.Markup.IXamlTypeResolver">
<summary>表示一个服务，该服务将 XAML 标记中的命名元素解析为相应的 CLR 类型。</summary>
    </member>
    <member name="M:System.Windows.Markup.IXamlTypeResolver.Resolve(System.String)">
<summary>将命名的 XAML 类型解析为相应的 CLR <see cref="T:System.Type"/>。</summary>
<returns><paramref name="qualifiedTypeName"/> 解析到的 <see cref="T:System.Type"/>。</returns>
<param name="qualifiedTypeName">要解析的 XAML 类型名称。可以选择类型名称由 XAML 命名空间的前缀限定。否则，将采用当前默认的 XAML 命名空间。</param>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtension">
<summary>为可以由 Silverlight XAML 处理器支持的 XAML 标记扩展实现提供基类。</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.#ctor">
<summary>初始化 <see cref="T:System.Windows.Markup.MarkupExtension"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
<summary>当在派生类中实现时，返回一个作为标记扩展目标属性值提供的对象。 </summary>
<returns>要在应用扩展的属性上设置的对象值。</returns>
<param name="serviceProvider">可以为标记扩展提供服务的服务提供商帮助程序。</param>
    </member>
    <member name="T:System.Windows.Markup.XamlParseException">
<summary>当发生 XAML 分析异常时引发的异常。</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LineNumber">
<summary>获取发生异常的行号。</summary>
<returns>发生了 XAML 分析异常的行号。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LinePosition">
<summary>获取行中发生异常的位置。</summary>
<returns>发生了 XAML 分析异常的行上的位置。</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlReader">
<summary>为分析 XAML 和创建相应的 Silverlight 对象树提供 XAML 处理器引擎。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.String)">
<summary>分析格式良好的 XAML 片段并创建相应的 Silverlight 对象树，然后返回该对象树的根。</summary>
<returns>Silverlight 对象树的根对象。</returns>
<param name="xaml">包含有效 XAML 片断的字符串。</param>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.LoadWithInitialTemplateValidation(System.String)">
<summary>[SECURITY CRITICAL] 无法被调用。</summary>
<returns>无法被调用。</returns>
<param name="xaml">无法被调用。</param>
    </member>
    <member name="T:System.Windows.Markup.XmlLanguage">
<summary>表示要在 XML 和 XAML 标记中使用的区域性信息。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.Equals(System.Object)">
<summary>检查对象是否与当前对象相等。</summary>
<returns>如果这些对象为同一对象，则为 true；否则为 false。</returns>
<param name="obj">要与调用对象进行比较的 <see cref="T:System.Object"/>。</param>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.GetHashCode">
<summary>用作 <see cref="T:System.Windows.Markup.XmlLanguage"/> 类的一个哈希函数。</summary>
<returns>整数哈希值。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.GetLanguage(System.String)">
<summary>根据按 RFC 3066 表示语言的字符串，返回一个 <see cref="T:System.Windows.Markup.XmlLanguage"/> 实例。</summary>
<returns>一个新的 <see cref="T:System.Windows.Markup.XmlLanguage"/>，使用提供的字符串作为其 <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag"/> 值。</returns>
<param name="ietfLanguageTag">一个 RFC 3066 语言字符串或一个空字符串 ("")。</param>
      <exception cref="T:System.ArgumentException">
<paramref name="ietfLanguageTag"/> 无法作为有效 IETF 语言进行处理。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag">
<summary>获取语言标记的字符串表示形式。</summary>
<returns>表示语言标记的字符串。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.op_Equality(System.Windows.Markup.XmlLanguage,System.Windows.Markup.XmlLanguage)">
<summary>确定两个指定的 <see cref="T:System.Windows.Markup.XmlLanguage"/> 对象是否具有相同的值。 </summary>
<returns>如果 <paramref name="xmlLanguage1"/> 的值与 <paramref name="xmlLanguage2"/> 的值相同，则为 true；否则为 false。</returns>
<param name="xmlLanguage1">要进行比较的第一个 <see cref="T:System.Windows.Markup.XmlLanguage"/>。</param>
<param name="xmlLanguage2">要进行比较的第二个 <see cref="T:System.Windows.Markup.XmlLanguage"/>。</param>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.op_Inequality(System.Windows.Markup.XmlLanguage,System.Windows.Markup.XmlLanguage)">
<summary>确定两个指定的 <see cref="T:System.Windows.Markup.XmlLanguage"/> 对象是否具有不同的值。 </summary>
<returns>如果 <paramref name="xmlLanguage1"/> 的值不同于 <paramref name="xmlLanguage2"/> 的值，则为 true；否则为 false。</returns>
<param name="xmlLanguage1">要进行比较的第一个 <see cref="T:System.Windows.Markup.XmlLanguage"/>。</param>
<param name="xmlLanguage2">要进行比较的第二个 <see cref="T:System.Windows.Markup.XmlLanguage"/>。</param>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDefinitionAttribute">
<summary>指定程序集中 XML 命名空间标识符与 CLR 命名空间之间的映射。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
<summary>初始化 <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute"/> 类的新实例。</summary>
<param name="xmlNamespace">指定 <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace"/> 值。</param>
<param name="clrNamespace">指定 <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace"/> 值。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="xmlNamespace"/> 或 <paramref name="clrNamespace"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.AssemblyName">
<summary>获取或设置包含 <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace"/> 的程序集的名称。</summary>
<returns>包含 <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace"/> 的程序集的名称。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace">
<summary>获取通过该属性映射到 <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace"/> 的 CLR 命名空间。 </summary>
<returns>通过该属性映射到 <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace"/> 的 CLR 命名空间。 </returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace">
<summary>获取通过该属性映射到 <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace"/> 的 XML 命名空间 (xmlns)。</summary>
<returns>通过该属性映射到 <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace"/> 的 XML 命名空间 ( xmlns)。</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsPrefixAttribute">
<summary>指定在 XAML 文件中写入元素和属性时，要与 XML 命名空间关联的建议前缀。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
<summary>初始化 <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute"/> 类的新实例。</summary>
<param name="xmlNamespace">相关 XML 命名空间的标识符（使用字符串，而非真正的 <see cref="T:System.Uri"/> 类型）。</param>
<param name="prefix">在映射 XML 命名空间时要使用的建议前缀。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="xmlNamespace"/> 或 <paramref name="prefix"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
<summary>获取要与 XML 命名空间关联的建议前缀。</summary>
<returns>一个字符串，它提供在映射 <see cref="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace"/> 命名空间时要使用的建议前缀。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
<summary>获取 XML 命名空间标识符。</summary>
<returns>为相关 XML 命名空间提供标识符的字符串。按惯例，这通常是 URI 字符串。</returns>
    </member>
    <member name="T:System.Windows.Media.AcquireLicenseCompletedEventArgs">
<summary>为 <see cref="E:System.Windows.Media.LicenseAcquirer.AcquireLicenseCompleted"/> 事件提供数据。 </summary>
    </member>
    <member name="P:System.Windows.Media.AcquireLicenseCompletedEventArgs.ResponseCustomData">
<summary>获取服务器对许可证进行响应时返回的所有自定义数据。</summary>
<returns>服务器对许可证进行响应时返回的所有自定义数据。如果没有要返回的自定义数据，则返回空字符串。 </returns>
<exception cref="T:System.InvalidOperationException">如果在已取消许可证获取时访问此属性，或者，如果出现了一个错误。</exception>
    </member>
    <member name="T:System.Windows.Media.AlignmentX">
<summary>描述如何在容器中水平放置内容。 </summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentX.Left">
<summary>内容与容器的左侧对齐。 </summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentX.Center">
<summary>内容与容器的中心对齐。 </summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentX.Right">
<summary>内容与容器的右侧对齐。 </summary>
    </member>
    <member name="T:System.Windows.Media.AlignmentY">
<summary>描述如何在容器中垂直放置内容。 </summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentY.Top">
<summary>内容与容器的上边缘对齐。 </summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentY.Center">
<summary>内容与容器的中心对齐。</summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentY.Bottom">
<summary>内容与容器的下边缘对齐。 </summary>
    </member>
    <member name="T:System.Windows.Media.ArcSegment">
<summary>表示两点之间的一条椭圆弧。 </summary>
    </member>
    <member name="M:System.Windows.Media.ArcSegment.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.ArcSegment"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.IsLargeArc">
<summary>获取或设置一个值，该值指示弧是否应大于 180 度。</summary>
<returns>如果弧应大于 180 度，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.IsLargeArcProperty">
<summary>标识 <see cref="P:System.Windows.Media.ArcSegment.IsLargeArc"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.ArcSegment.IsLargeArc"/> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.Point">
<summary>获取或设置椭圆弧的终点。</summary>
<returns>弧线将绘制到的点。默认值是值为 0,0 的 <see cref="T:System.Windows.Point"/>。 </returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.PointProperty">
<summary>标识 <see cref="P:System.Windows.Media.ArcSegment.Point"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.ArcSegment.Point"/> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.RotationAngle">
<summary>获取或设置椭圆围绕 X 轴旋转的量（以度为单位）。  </summary>
<returns>椭圆围绕 X 轴旋转的量（以度为单位）。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.RotationAngleProperty">
<summary>标识 <see cref="P:System.Windows.Media.ArcSegment.RotationAngle"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.ArcSegment.RotationAngle"/> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.Size">
<summary>获取或设置弧的 X 轴半径和 Y 轴半径作为 <see cref="T:System.Windows.Size"/> 结构。 </summary>
<returns>描述椭圆弧的 X 轴半径和 Y 轴半径的 <see cref="T:System.Windows.Size"/> 结构。<see cref="T:System.Windows.Size"/> 结构的 <see cref="P:System.Windows.Size.Width"/> 属性指定弧的 X 轴半径；它的 <see cref="P:System.Windows.Size.Height"/> 属性指定弧的 Y 轴半径。默认值是值为 0,0 的 <see cref="T:System.Windows.Size"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.SizeProperty">
<summary>标识 <see cref="P:System.Windows.Media.ArcSegment.Size"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.ArcSegment.Size"/> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.SweepDirection">
<summary>获取或设置一个值，该值指定是以 <see cref="F:System.Windows.Media.SweepDirection.Clockwise"/> 方向还是以 <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise"/> 方向绘制弧。</summary>
<returns>用于指定弧的绘制方向的枚举值之一。默认值为 <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.SweepDirectionProperty">
<summary>标识 <see cref="P:System.Windows.Media.ArcSegment.SweepDirection"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.ArcSegment.SweepDirection"/> 依赖项属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.AudioCaptureDevice">
<summary>描述音频捕获设备（如麦克风）需要的或支持的格式。</summary>
    </member>
    <member name="P:System.Windows.Media.AudioCaptureDevice.AudioFrameSize">
<summary>获取或设置预期的音频帧大小。</summary>
<returns>音频帧大小（以毫秒为单位）。默认值为 1000 毫秒。请参阅“备注”。</returns>
    </member>
    <member name="F:System.Windows.Media.AudioCaptureDevice.AudioFrameSizeProperty">
<summary>标识 <see cref="P:System.Windows.Media.AudioCaptureDevice.AudioFrameSize"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.AudioCaptureDevice.AudioFrameSize"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.AudioCaptureDevice.DesiredFormat">
<summary>获取或设置您需要的此音频捕获设备将要使用音频格式。</summary>
<returns>您需要的并且由此音频捕获设备使用的音频格式，用 <see cref="T:System.Windows.Media.AudioFormat"/> 对象表示。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Media.AudioCaptureDevice.SupportedFormats">
<summary>获取此音频捕获设备支持的音频格式的泛型集合。</summary>
<returns><see cref="T:System.Windows.Media.AudioFormat"/> 对象的泛型集合，它表示此音频捕获设备支持的音频格式。</returns>
    </member>
    <member name="T:System.Windows.Media.AudioCaptureDeviceCollection">
<summary>指定 <see cref="T:System.Windows.Media.AudioCaptureDevice"/> 对象的集合。</summary>
    </member>
    <member name="T:System.Windows.Media.AudioFormat">
<summary>提供有关音频捕获设备使用的音频格式的特定技术信息。</summary>
    </member>
    <member name="P:System.Windows.Media.AudioFormat.BitsPerSample">
<summary>获取用于存储某种音频格式的单个采样的音频信息的位数。</summary>
<returns>用于存储某种音频格式的单个采样的音频信息的位数。</returns>
    </member>
    <member name="P:System.Windows.Media.AudioFormat.Channels">
<summary>获取这种音频格式所提供的声道数。</summary>
<returns>这种音频格式所提供的声道数。</returns>
    </member>
    <member name="P:System.Windows.Media.AudioFormat.SamplesPerSecond">
<summary>获取这种音频格式所提供的每秒采样数。</summary>
<returns>这种音频格式所提供的每秒采样数。</returns>
    </member>
    <member name="P:System.Windows.Media.AudioFormat.WaveFormat">
<summary>获取这种音频格式的编码格式，以 <see cref="T:System.Windows.Media.WaveFormatType"/> 值表示。</summary>
<returns>这种音频格式的编码格式。</returns>
    </member>
    <member name="T:System.Windows.Media.AudioSink">
<summary>公开音频设备的捕获图形。从此类派生，以便接收音频信息以及通过 <see cref="P:System.Windows.Media.AudioSink.CaptureSource"/> 获取捕获图形。</summary>
    </member>
    <member name="M:System.Windows.Media.AudioSink.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.AudioSink"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.AudioSink.CaptureSource">
<summary>获取或设置一个与此 <see cref="T:System.Windows.Media.AudioSink"/> 关联的捕获源。</summary>
<returns>一个与此 <see cref="T:System.Windows.Media.AudioSink"/> 关联的捕获源。</returns>
    </member>
    <member name="M:System.Windows.Media.AudioSink.Finalize">
<summary>释放 <see cref="T:System.Windows.Media.AudioSink"/> 类所使用的资源。</summary>
    </member>
    <member name="M:System.Windows.Media.AudioSink.OnCaptureStarted">
<summary>在派生类中重写后，当音频设备开始捕获音频数据时调用。 </summary>
    </member>
    <member name="M:System.Windows.Media.AudioSink.OnCaptureStopped">
<summary>在派生类中重写后，当音频设备停止捕获音频数据时调用。 </summary>
    </member>
    <member name="M:System.Windows.Media.AudioSink.OnFormatChange(System.Windows.Media.AudioFormat)">
<summary>在派生类中重写后，当音频设备报告音频格式更改时调用。 </summary>
<param name="audioFormat">新的音频格式。</param>
    </member>
    <member name="M:System.Windows.Media.AudioSink.OnSamples(System.Int64,System.Int64,System.Byte[])">
<summary>在派生类中重写后，当音频设备捕获了一个完整的音频采样时调用。 </summary>
<param name="sampleTimeInHundredNanoseconds">采样被捕获时的时间（以 100 纳秒为单位）。</param>
<param name="sampleDurationInHundredNanoseconds">采样持续时间（以 100 纳秒为单位）。</param>
<param name="sampleData">一个字节流，其中包含要根据相关的音频格式信息进行解释的音频数据。</param>
    </member>
    <member name="T:System.Windows.Media.BezierSegment">
<summary>表示在两个点之间绘制的一条三次贝塞尔曲线。 </summary>
    </member>
    <member name="M:System.Windows.Media.BezierSegment.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.BezierSegment"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.BezierSegment.Point1">
<summary>获取或设置曲线的第一个控制点。 </summary>
<returns>曲线的第一个控制点。默认值是值为 0,0 的 <see cref="T:System.Windows.Point"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.BezierSegment.Point1Property">
<summary>标识 <see cref="P:System.Windows.Media.BezierSegment.Point1"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.BezierSegment.Point1"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.BezierSegment.Point2">
<summary>获取或设置曲线的第二个控制点。</summary>
<returns>曲线的第二个控制点。</returns>
    </member>
    <member name="F:System.Windows.Media.BezierSegment.Point2Property">
<summary>标识 <see cref="P:System.Windows.Media.BezierSegment.Point2"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.BezierSegment.Point2"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.BezierSegment.Point3">
<summary>获取或设置曲线的终点。</summary>
<returns>曲线的终点。</returns>
    </member>
    <member name="F:System.Windows.Media.BezierSegment.Point3Property">
<summary>标识 <see cref="P:System.Windows.Media.BezierSegment.Point3"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.BezierSegment.Point3"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.BitmapCache">
<summary>表示将可视元素或元素的可视化树缓存为位图图面的行为。这可能为某些方案带来重大的性能改进。</summary>
    </member>
    <member name="M:System.Windows.Media.BitmapCache.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.BitmapCache"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.BitmapCache.RenderAtScale">
<summary>获取或设置将对象呈现在缓存位图图面上所使用的缩放比例。此属性用于为提高性能而缩放的缓存对象。 </summary>
<returns>将对象呈现为已缓存位图时所使用的缩放比例。如果您指定负数，则将引发错误。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Media.BitmapCache.RenderAtScaleProperty">
<summary>标识 <see cref="P:System.Windows.Media.BitmapCache.RenderAtScale"/> 依赖项属性。</summary>
    </member>
    <member name="T:System.Windows.Media.Brush">
<summary>定义用于绘制图形对象的对象。从 <see cref="T:System.Windows.Media.Brush"/> 派生的类描述了绘制区域的方式。</summary>
    </member>
    <member name="M:System.Windows.Media.Brush.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Brush"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.Brush.Opacity">
<summary>获取或设置 <see cref="T:System.Windows.Media.Brush"/> 的不透明度。  </summary>
<returns><see cref="P:System.Windows.Media.Brush.Opacity"/> 属性的值以 0 和 1.0 之间的值表示。默认值为 1.0。 </returns>
    </member>
    <member name="F:System.Windows.Media.Brush.OpacityProperty">
<summary>标识 <see cref="P:System.Windows.Media.Brush.Opacity"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.Brush.Opacity"/> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Brush.RelativeTransform">
<summary>获取或设置要使用相对坐标应用于画笔的变换。 </summary>
<returns>使用相对坐标应用于画笔的变换。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Brush.RelativeTransformProperty">
<summary>标识 <see cref="P:System.Windows.Media.Brush.RelativeTransform"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.Brush.RelativeTransform"/> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Brush.Transform">
<summary>获取或设置应用于画笔的变换。</summary>
<returns>要应用于画笔的变换。</returns>
    </member>
    <member name="F:System.Windows.Media.Brush.TransformProperty">
<summary>标识 <see cref="P:System.Windows.Media.Brush.Transform"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.Brush.Transform"/> 依赖项属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.BrushMappingMode">
<summary>指定 <see cref="T:System.Windows.Media.Brush"/> 使用的坐标系。 </summary>
    </member>
    <member name="F:System.Windows.Media.BrushMappingMode.Absolute">
<summary>坐标系与边界框无关。值直接在本地坐标系中解释。  </summary>
    </member>
    <member name="F:System.Windows.Media.BrushMappingMode.RelativeToBoundingBox">
<summary>坐标系与边界框相关：0 指示边界框的 0%，1 指示边界框的 100%。例如，(0.5, 0.5) 描述位于边界框中间的一个点，(1, 1) 描述位于边界框右下方的点。 </summary>
    </member>
    <member name="T:System.Windows.Media.CacheMode">
<summary>表示缓存的内容。 </summary>
    </member>
    <member name="M:System.Windows.Media.CacheMode.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.CacheMode"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.CaptureDevice">
<summary>为 <see cref="T:System.Windows.Media.AudioCaptureDevice"/> 和 <see cref="T:System.Windows.Media.VideoCaptureDevice"/> 提供公共属性。</summary>
    </member>
    <member name="P:System.Windows.Media.CaptureDevice.FriendlyName">
<summary>获取捕获设备的 UI 显示名称。</summary>
<returns>捕获设备的 UI 显示名称。</returns>
    </member>
    <member name="F:System.Windows.Media.CaptureDevice.FriendlyNameProperty">
<summary>标识 <see cref="P:System.Windows.Media.CaptureDevice.FriendlyName"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.CaptureDevice.FriendlyName"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.CaptureDevice.IsDefaultDevice">
<summary>获取一个值，该值指示该捕获设备是否为其所属类型（音频或视频）的默认设备。</summary>
<returns>如果此 <see cref="T:System.Windows.Media.CaptureDevice"/> 表示其所属类型的默认设备，则为 true；否则为 false。</returns>
    </member>
    <member name="F:System.Windows.Media.CaptureDevice.IsDefaultDeviceProperty">
<summary>标识 <see cref="P:System.Windows.Media.CaptureDevice.IsDefaultDevice"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.CaptureDevice.IsDefaultDevice"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.CaptureDeviceConfiguration">
<summary>表示一个帮助器类，该类用来获取有关可用的捕获设备（音频或视频设备）的信息，然后用来请求访问可用设备的捕获操作的客户端用户权限。</summary>
    </member>
    <member name="P:System.Windows.Media.CaptureDeviceConfiguration.AllowedDeviceAccess">
<summary>获取一个值，该值报告用户以前是否根据存储的对设备访问 UI 提示的响应授予了设备访问权限。</summary>
<returns>如果用户以前根据他们对访问请求对话框中的提示做出的响应授予了设备访问权限，或者如果在某些情况下自动准许了访问请求，则为 true。如果用户未授予访问权限或者由于其他因素而拒绝了访问请求，则为 false。请参阅“备注”。</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureDeviceConfiguration.GetAvailableAudioCaptureDevices">
<summary>返回表示客户端系统上的可用音频捕获设备的 <see cref="T:System.Windows.Media.AudioCaptureDevice"/> 对象的集合。</summary>
<returns>表示客户端系统上的可用音频捕获设备的 <see cref="T:System.Windows.Media.AudioCaptureDevice"/> 对象的泛型只读集合。</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureDeviceConfiguration.GetAvailableVideoCaptureDevices">
<summary>返回表示客户端系统上的可用视频捕获设备的 <see cref="T:System.Windows.Media.VideoCaptureDevice"/> 对象的集合。</summary>
<returns>表示客户端系统上的可用视频捕获设备的 <see cref="T:System.Windows.Media.VideoCaptureDevice"/> 对象的泛型只读集合。</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultAudioCaptureDevice">
<summary>返回表示客户端系统上的默认音频捕获设备的 <see cref="T:System.Windows.Media.AudioCaptureDevice"/> 对象。</summary>
<returns>返回表示客户端系统上的默认音频捕获设备的 <see cref="T:System.Windows.Media.AudioCaptureDevice"/> 对象。在 Mac OSX 上，如果应用程序调用 <see cref="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultAudioCaptureDevice"/> 或 <see cref="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultVideoCaptureDevice"/>，而用户此前从未设置默认音频和视频设备，则 Silverlight 将返回找到的第一个设备。如果某一物理设备未连接到此 <see cref="T:System.Windows.Media.CaptureDevice"/>，则在调用 <see cref="M:System.Windows.Media.CaptureSource.Start"/> 时将引发 <see cref="T:System.InvalidOperationException"/>。此预期值应该由应用程序捕获，然后，可以通知用户手动在“配置设置”对话框的“Webcam/Mic”部分中设置其默认设备。</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultVideoCaptureDevice">
<summary>返回表示客户端系统上的默认视频捕获设备的 <see cref="T:System.Windows.Media.VideoCaptureDevice"/> 对象。</summary>
<returns>返回表示客户端系统上的默认视频捕获设备的 <see cref="T:System.Windows.Media.VideoCaptureDevice"/> 对象。在 Mac OSX 上，如果应用程序调用 <see cref="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultAudioCaptureDevice"/> 或 <see cref="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultVideoCaptureDevice"/>，而用户此前从未设置默认音频和视频设备，则 Silverlight 将返回找到的第一个设备。如果某一物理设备未连接到此 <see cref="T:System.Windows.Media.CaptureDevice"/>，则在调用 <see cref="M:System.Windows.Media.CaptureSource.Start"/> 时将引发 <see cref="T:System.InvalidOperationException"/>。此预期值应该由应用程序捕获，然后，可以通知用户手动在“配置设置”对话框的“Webcam/Mic”部分中设置其默认设备。</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureDeviceConfiguration.RequestDeviceAccess">
<summary>请求访问客户端系统上提供的所有可能的捕获设备（音频或视频设备）。</summary>
<returns>如果用户根据他们对访问请求对话框中的提示做出的响应授予设备访问权限，或者如果在某些情况下自动准许了访问请求，则为 true。如果用户未授予访问权限或者由于其他因素而拒绝了访问请求，则为 false。请参阅“备注”。</returns>
    </member>
    <member name="T:System.Windows.Media.CaptureImageCompletedEventArgs">
<summary>为 <see cref="T:System.Windows.Media.CaptureSource"/> 类的 <see cref="E:System.Windows.Media.CaptureSource.CaptureImageCompleted"/> 事件提供事件数据。</summary>
    </member>
    <member name="M:System.Windows.Media.CaptureImageCompletedEventArgs.#ctor(System.Windows.Media.Imaging.WriteableBitmap)">
<summary>使用要在事件数据中报告的图像源初始化 <see cref="T:System.Windows.Media.CaptureImageCompletedEventArgs"/> 的新实例。</summary>
<param name="image">要报告的图像源。</param>
    </member>
    <member name="P:System.Windows.Media.CaptureImageCompletedEventArgs.Result">
<summary>获取要在事件数据中报告的 <see cref="T:System.Windows.Media.Imaging.WriteableBitmap"/> 图像源。</summary>
<returns>通过此事件数据异步返回的图像源，它是 <see cref="M:System.Windows.Media.CaptureSource.CaptureImageAsync"/> 调用的结果。</returns>
    </member>
    <member name="T:System.Windows.Media.CaptureSource">
<summary>提供用来处理来自关联捕获设备的特定音频或视频捕获的方法。</summary>
    </member>
    <member name="M:System.Windows.Media.CaptureSource.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.CaptureSource"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.CaptureSource.AudioCaptureDevice">
<summary>获取或设置与此捕获操作相关的关联音频捕获设备。</summary>
<returns>与此捕获操作相关的关联音频捕获设备。</returns>
    </member>
    <member name="F:System.Windows.Media.CaptureSource.AudioCaptureDeviceProperty">
<summary>标识 <see cref="P:System.Windows.Media.CaptureSource.AudioCaptureDevice"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.CaptureSource.AudioCaptureDevice"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Media.CaptureSource.CaptureFailed">
<summary>当请求的捕获操作没有产生捕获的采样时发生。</summary>
    </member>
    <member name="M:System.Windows.Media.CaptureSource.CaptureImageAsync">
<summary>启动一个异步图像捕获请求。通过处理此 <see cref="T:System.Windows.Media.CaptureSource"/> 上的 <see cref="E:System.Windows.Media.CaptureSource.CaptureImageCompleted"/> 事件来检索返回的图像。</summary>
    </member>
    <member name="E:System.Windows.Media.CaptureSource.CaptureImageCompleted">
<summary>当异步图像捕获请求已返回捕获的图像时发生。</summary>
    </member>
    <member name="M:System.Windows.Media.CaptureSource.Start">
<summary>启动与此 <see cref="T:System.Windows.Media.CaptureSource"/> 相关的所有捕获设备的捕获操作。</summary>
    </member>
    <member name="P:System.Windows.Media.CaptureSource.State">
<summary>获取此捕获操作的 <see cref="T:System.Windows.Media.CaptureState"/>。状态可能指示出该捕获操作仍在进行或者已经失败。</summary>
<returns>此捕获操作的 <see cref="T:System.Windows.Media.CaptureState"/>。 </returns>
    </member>
    <member name="M:System.Windows.Media.CaptureSource.Stop">
<summary>停止与此 <see cref="T:System.Windows.Media.CaptureSource"/> 相关的所有捕获设备的捕获操作。</summary>
    </member>
    <member name="P:System.Windows.Media.CaptureSource.VideoCaptureDevice">
<summary>获取或设置与此捕获操作相关的关联视频捕获设备。</summary>
<returns>与此捕获操作相关的关联视频捕获设备。</returns>
    </member>
    <member name="F:System.Windows.Media.CaptureSource.VideoCaptureDeviceProperty">
<summary>标识 <see cref="P:System.Windows.Media.CaptureSource.VideoCaptureDevice"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.CaptureSource.VideoCaptureDevice"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.CaptureState">
<summary>描述设备捕获操作与捕获源的当前操作状态。</summary>
    </member>
    <member name="F:System.Windows.Media.CaptureState.Stopped">
      <summary>
<see cref="M:System.Windows.Media.CaptureSource.Stop"/> 已被调用，并且捕获操作已完成。</summary>
    </member>
    <member name="F:System.Windows.Media.CaptureState.Started">
      <summary>
<see cref="M:System.Windows.Media.CaptureSource.Start"/> 已被调用，并且捕获操作仍处于活动状态。</summary>
    </member>
    <member name="F:System.Windows.Media.CaptureState.Failed">
<summary>捕获操作失败，或者尚未尝试执行任何操作。</summary>
    </member>
    <member name="T:System.Windows.Media.Color">
<summary>用 Alpha 通道、红色通道、绿色通道和蓝色通道描述颜色。 </summary>
    </member>
    <member name="P:System.Windows.Media.Color.A">
<summary>获取或设置颜色的 sRGB alpha 通道值。 </summary>
<returns>颜色的 sRGB alpha 通道值，该值介于 0 和 255 之间。</returns>
    </member>
    <member name="P:System.Windows.Media.Color.B">
<summary>获取或设置颜色的 sRGB 蓝色通道值。 </summary>
<returns>sRGB 蓝色通道值，该值介于 0 和 255 之间。</returns>
    </member>
    <member name="M:System.Windows.Media.Color.Equals(System.Object)">
<summary>测试指定的对象是否为 <see cref="T:System.Windows.Media.Color"/> 结构并等同于当前颜色。 </summary>
<returns>如果指定的对象是 <see cref="T:System.Windows.Media.Color"/> 结构并与当前的 <see cref="T:System.Windows.Media.Color"/> 结构相同，则为 true；否则为 false。</returns>
<param name="o">要与当前 <see cref="T:System.Windows.Media.Color"/> 结构进行比较的对象。</param>
    </member>
    <member name="M:System.Windows.Media.Color.Equals(System.Windows.Media.Color)">
<summary>测试指定的 <see cref="T:System.Windows.Media.Color"/> 结构是否与当前颜色相同。</summary>
<returns>如果指定的 <see cref="T:System.Windows.Media.Color"/> 结构与当前的 <see cref="T:System.Windows.Media.Color"/> 结构相同，则为 true；否则为 false。</returns>
<param name="color">要与当前 <see cref="T:System.Windows.Media.Color"/> 结构进行比较的 <see cref="T:System.Windows.Media.Color"/> 结构。</param>
    </member>
    <member name="M:System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
<summary>使用指定的 sRGB Alpha 通道和颜色通道值创建一个新的 <see cref="T:System.Windows.Media.Color"/> 结构。 </summary>
<returns>具有指定值的 <see cref="T:System.Windows.Media.Color"/> 结构。</returns>
<param name="a">新颜色的 Alpha 通道 <see cref="P:System.Windows.Media.Color.A"/>。该值必须介于 0 和 255 之间。</param>
<param name="r">新颜色的红色通道 <see cref="P:System.Windows.Media.Color.R"/>。该值必须介于 0 和 255 之间。</param>
<param name="g">新颜色的绿色通道 <see cref="P:System.Windows.Media.Color.G"/>。该值必须介于 0 和 255 之间。</param>
<param name="b">新颜色的蓝色通道 <see cref="P:System.Windows.Media.Color.B"/>。该值必须介于 0 和 255 之间。</param>
    </member>
    <member name="P:System.Windows.Media.Color.G">
<summary>获取或设置颜色的 sRGB 绿色通道值。 </summary>
<returns>sRGB 绿色通道值，该值介于 0 和 255 之间。</returns>
    </member>
    <member name="M:System.Windows.Media.Color.GetHashCode">
<summary>获取当前 <see cref="T:System.Windows.Media.Color"/> 结构的哈希代码。 </summary>
<returns>当前 <see cref="T:System.Windows.Media.Color"/> 结构的哈希代码。</returns>
    </member>
    <member name="M:System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)">
<summary>测试两个 <see cref="T:System.Windows.Media.Color"/> 结构是否相同。 </summary>
<returns>如果 <paramref name="color1"/> 与 <paramref name="color2"/> 完全相同，则为 true；否则为 false。</returns>
<param name="color1">要进行比较的第一个 <see cref="T:System.Windows.Media.Color"/> 结构。</param>
<param name="color2">要进行比较的第二个 <see cref="T:System.Windows.Media.Color"/> 结构。</param>
    </member>
    <member name="M:System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)">
<summary>测试两个 <see cref="T:System.Windows.Media.Color"/> 结构是否不相同。 </summary>
<returns>如果 <paramref name="color1"/> 和 <paramref name="color2"/> 不相等，则为 true；否则为 false。</returns>
<param name="color1">要进行比较的第一个 <see cref="T:System.Windows.Media.Color"/> 结构。</param>
<param name="color2">要进行比较的第二个 <see cref="T:System.Windows.Media.Color"/> 结构。</param>
    </member>
    <member name="P:System.Windows.Media.Color.R">
<summary>获取或设置颜色的 sRGB 红色通道值。 </summary>
<returns>sRGB 红色通道值，该值介于 0 和 255 之间。</returns>
    </member>
    <member name="M:System.Windows.Media.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)"/>。</summary>
<returns>一个字符串，包含采用指定格式的当前实例的值。</returns>
<param name="format">指定要使用的格式的字符串。-或- null，表示使用为 IFormattable 实现的类型定义的默认格式。 </param>
<param name="provider">用于格式化该值的 IFormatProvider。-或- null，表示从操作系统的当前区域设置中获取数字格式信息。 </param>
    </member>
    <member name="M:System.Windows.Media.Color.ToString">
<summary>以十六进制表示法使用 ARGB 通道创建颜色的字符串表示形式。 </summary>
<returns>颜色的字符串表示形式。</returns>
    </member>
    <member name="M:System.Windows.Media.Color.ToString(System.IFormatProvider)">
<summary>使用 ARGB 通道和指定的格式提供程序创建颜色的字符串表示形式。 </summary>
<returns>颜色的字符串表示形式。</returns>
<param name="provider">区域性特定的格式设置信息。</param>
    </member>
    <member name="T:System.Windows.Media.ColorInterpolationMode">
<summary>确定插入渐变颜色的方式。 </summary>
    </member>
    <member name="F:System.Windows.Media.ColorInterpolationMode.ScRgbLinearInterpolation">
<summary>在 scRGB 颜色空间中插入颜色。 </summary>
    </member>
    <member name="F:System.Windows.Media.ColorInterpolationMode.SRgbLinearInterpolation">
<summary>在 sRGB 颜色空间中插入颜色。 </summary>
    </member>
    <member name="T:System.Windows.Media.Colors">
<summary>实现一组预定义的颜色。 </summary>
    </member>
    <member name="P:System.Windows.Media.Colors.Black">
<summary>获取 ARGB 值为 #FF000000 的系统定义颜色。 </summary>
<returns>ARGB 值为 #FF000000 的 <see cref="T:System.Windows.Media.Color"/>。 </returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Blue">
<summary>获取 ARGB 值为 #FF0000FF 的系统定义颜色。</summary>
<returns>ARGB 值为 #FF0000FF 的 <see cref="T:System.Windows.Media.Color"/>。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Brown">
<summary>获取 ARGB 值为 #FFA52A2A 的系统定义颜色。</summary>
<returns>ARGB 值为 #FFA52A2A 的 <see cref="T:System.Windows.Media.Color"/>。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Cyan">
<summary>获取 ARGB 值为 #FF00FFFF 的系统定义颜色。</summary>
<returns>ARGB 值为 #FF00FFFF 的 <see cref="T:System.Windows.Media.Color"/>。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkGray">
<summary>获取 ARGB 值为 #FFA9A9A9 的系统定义颜色。</summary>
<returns>ARGB 值为 #FFA9A9A9 的 <see cref="T:System.Windows.Media.Color"/>。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Gray">
<summary>获取 ARGB 值为 #FF808080 的系统定义颜色。</summary>
<returns>ARGB 值为 #FF808080 的 <see cref="T:System.Windows.Media.Color"/>。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Green">
<summary>获取 ARGB 值为 #FF008000 的系统定义颜色。</summary>
<returns>ARGB 值为 #FF008000 的 <see cref="T:System.Windows.Media.Color"/>。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightGray">
<summary>获取 ARGB 值为 #FFD3D3D3 的系统定义颜色。</summary>
<returns>ARGB 值为 #FFD3D3D3 的 <see cref="T:System.Windows.Media.Color"/>。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Magenta">
<summary>获取 ARGB 值为 #FFFF00FF 的系统定义颜色。</summary>
<returns>ARGB 值为 #FFFF00FF 的 <see cref="T:System.Windows.Media.Color"/>。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Orange">
<summary>获取 ARGB 值为 #FFFFA500 的系统定义颜色。</summary>
<returns>ARGB 值为 #FFFFA500 的 <see cref="T:System.Windows.Media.Color"/>。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Purple">
<summary>获取 ARGB 值为 #FF800080 的系统定义颜色。</summary>
<returns>ARGB 值为 #FF800080 的 <see cref="T:System.Windows.Media.Color"/>。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Red">
<summary>获取 ARGB 值为 #FFFF0000 的系统定义颜色。</summary>
<returns>ARGB 值为 #FFFF0000 的 <see cref="T:System.Windows.Media.Color"/>。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Transparent">
<summary>获取 ARGB 值为 #00FFFFFF 的系统定义颜色。</summary>
<returns>ARGB 值为 #00FFFFFF 的 <see cref="T:System.Windows.Media.Color"/>。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.White">
<summary>获取 ARGB 值为 #FFFFFFFF 的系统定义颜色。</summary>
<returns>ARGB 值为 #FFFFFFFF 的 <see cref="T:System.Windows.Media.Color"/>。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Yellow">
<summary>获取 ARGB 值为 #FFFFFF00 的系统定义颜色。</summary>
<returns>ARGB 值为 #FFFFFF00 的 <see cref="T:System.Windows.Media.Color"/>。</returns>
    </member>
    <member name="T:System.Windows.Media.CompositeTransform">
<summary>可以使用此类向对象应用多种不同的转换。 </summary>
    </member>
    <member name="M:System.Windows.Media.CompositeTransform.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.CompositeTransform"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.CenterX">
<summary>获取或设置 <see cref="T:System.Windows.Media.CompositeTransform"/> 指定的所有转换的中心点的 x 坐标。 </summary>
<returns><see cref="T:System.Windows.Media.CompositeTransform"/> 指定的所有转换的中心点的 x 坐标。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.CenterXProperty">
<summary>标识 <see cref="P:System.Windows.Media.CompositeTransform.CenterX"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.CompositeTransform.CenterX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.CenterY">
<summary>获取或设置 <see cref="T:System.Windows.Media.CompositeTransform"/> 指定的所有转换的中心点的 y 坐标。 </summary>
<returns><see cref="T:System.Windows.Media.CompositeTransform"/> 指定的所有转换的中心点的 y 坐标。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.CenterYProperty">
<summary>标识 <see cref="P:System.Windows.Media.CompositeTransform.CenterY"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.CompositeTransform.CenterY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.Rotation">
<summary>获取或设置顺时针旋转角度（以度为单位）。</summary>
<returns>顺时针旋转角度，以度为单位。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.RotationProperty">
<summary>标识 <see cref="P:System.Windows.Media.CompositeTransform.Rotation"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.CompositeTransform.Rotation"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.ScaleX">
<summary>获取或设置 x 轴的缩放比例。可以使用此属性沿水平方向拉伸或收缩对象。</summary>
<returns>x 轴的缩放比例。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.ScaleXProperty">
<summary>标识 <see cref="P:System.Windows.Media.CompositeTransform.ScaleX"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.CompositeTransform.ScaleX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.ScaleY">
<summary>获取或设置 y 轴的缩放比例。可以使用此属性沿垂直方向拉伸或收缩对象。</summary>
<returns>y 轴的缩放比例。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.ScaleYProperty">
<summary>标识 <see cref="P:System.Windows.Media.CompositeTransform.ScaleY"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.CompositeTransform.ScaleY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.SkewX">
<summary>获取或设置 x 轴扭曲角度，该角度从 y 轴开始沿逆时针方向测量，以度为单位。扭曲转换可用于在二维对象中创建三维深度幻觉。</summary>
<returns>扭曲角度，该角度从 y 轴开始沿逆时针方向测量，以度为单位。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.SkewXProperty">
<summary>标识 <see cref="P:System.Windows.Media.CompositeTransform.SkewX"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.CompositeTransform.SkewX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.SkewY">
<summary>获取或设置 y 轴扭曲角度，该角度从 x 轴开始沿逆时针方向测量，以度为单位。扭曲转换可用于在二维对象中创建三维深度幻觉。</summary>
<returns>扭曲角度，该角度从 x 轴开始沿逆时针方向测量，以度为单位。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.SkewYProperty">
<summary>标识 <see cref="P:System.Windows.Media.CompositeTransform.SkewY"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.CompositeTransform.SkewY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.TranslateX">
<summary>获取或设置沿 x 轴平移的距离。</summary>
<returns>沿 x 轴平移（移动）对象的距离（以像素为单位）。此属性是可读/写的。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.TranslateXProperty">
<summary>标识 <see cref="P:System.Windows.Media.CompositeTransform.TranslateX"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.CompositeTransform.TranslateX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.TranslateY">
<summary>获取或设置沿 y 轴平移（移动）对象的距离。</summary>
<returns>沿 y 轴平移（移动）对象的距离（以像素为单位）。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.TranslateYProperty">
<summary>标识 <see cref="P:System.Windows.Media.CompositeTransform.TranslateY"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.CompositeTransform.TranslateY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.CompositionTarget">
<summary>表示基于 Silverlight 的应用程序的显示图面。</summary>
    </member>
    <member name="E:System.Windows.Media.CompositionTarget.Rendering">
<summary>在核心 Silverlight 呈现过程呈现某一帧时发生。</summary>
    </member>
    <member name="T:System.Windows.Media.ContentKeyType">
<summary>表示内容密钥类型。</summary>
    </member>
    <member name="F:System.Windows.Media.ContentKeyType.Aes128Bit">
<summary>用于根许可证 (AES-ECB) 的内容密钥类型。</summary>
    </member>
    <member name="F:System.Windows.Media.ContentKeyType.Cocktail">
<summary>在 PlayReady 生态系统中用于 Cocktail 的内容密钥类型。</summary>
    </member>
    <member name="T:System.Windows.Media.DeepZoomImageTileSource">
<summary>用于指定某一 <see cref="T:System.Windows.Controls.MultiScaleImage"/> 的源。 </summary>
    </member>
    <member name="M:System.Windows.Media.DeepZoomImageTileSource.#ctor">
<summary>创建 <see cref="T:System.Windows.Media.DeepZoomImageTileSource"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.DeepZoomImageTileSource.#ctor(System.Uri)">
<summary>使用指定的源 URI 创建 <see cref="T:System.Windows.Media.DeepZoomImageTileSource"/> 类的新实例。</summary>
<param name="sourceUri">源 URI。</param>
    </member>
    <member name="P:System.Windows.Media.DeepZoomImageTileSource.UriSource">
<summary>获取或设置 <see cref="T:System.Windows.Media.DeepZoomImageTileSource"/> 的源 URI。</summary>
<returns><see cref="T:System.Windows.Media.DeepZoomImageTileSource"/> 的源 URI。</returns>
    </member>
    <member name="F:System.Windows.Media.DeepZoomImageTileSource.UriSourceProperty">
<summary>标识 <see cref="P:System.Windows.Media.DeepZoomImageTileSource.UriSource"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.DeepZoomImageTileSource.UriSource"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.DomainAcquirer">
<summary>处理加入域请求。</summary>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.DomainAcquirer"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.CancelAsync">
<summary>调用以取消一个正在进行的域操作。</summary>
<exception cref="T:System.InvalidOperationException">如果没有正在进行的域操作。</exception>
    </member>
    <member name="P:System.Windows.Media.DomainAcquirer.ChallengeCustomData">
<summary>获取或设置一个包含要传送到域服务器的服务特定的数据而不用实现手动域加入/退出操作的字符串。 </summary>
<returns>一个包含要传送到域服务器的服务特定的数据而不用实现手动域加入/退出操作的字符串。默认值为 null。</returns>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.JoinDomainAsync(System.Guid,System.Guid,System.Uri,System.String)">
<summary>启动一个异步加入域操作。</summary>
<param name="serviceId">此域的服务标识符。</param>
<param name="accountId">此域的帐户标识符。</param>
<param name="domainServerUrl">用来管理域的域控制器服务器的 URL。</param>
<param name="friendlyName">在客户端应用程序的域证书枚举过程中可以向用户显示的帐户的友好名称。</param>
    </member>
    <member name="E:System.Windows.Media.DomainAcquirer.JoinDomainCompleted">
<summary>加入域操作完成时发生。</summary>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.LeaveDomainAsync(System.Guid,System.Guid,System.Uri)">
<summary>用来启动一个异步退出域操作的方法。</summary>
<param name="serviceId">此域的服务标识符。</param>
<param name="accountId">此域的帐户标识符。</param>
<param name="domainServerUrl">用来管理域的域控制器服务器的 URL。</param>
    </member>
    <member name="E:System.Windows.Media.DomainAcquirer.LeaveDomainCompleted">
<summary>退出域操作完成时发生。</summary>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.OnCancel">
<summary>在派生类中重写，以便在手动域操作过程中实现取消操作。  </summary>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.OnJoinDomain(System.IO.Stream,System.Uri)">
<summary>在派生类中重写，以便实现手动加入域操作。  </summary>
<param name="joinChallenge">您希望添加到加入域操作中的自定义身份验证信息。</param>
<param name="domainServerUri">用来管理域的域控制器服务器的 URI。</param>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.OnLeaveDomain(System.IO.Stream,System.Uri)">
<summary>在派生类中重写，以便实现手动退出域操作。  </summary>
<param name="leaveChallenge">您希望添加到退出域操作中的自定义身份验证信息。</param>
<param name="domainServerUri">用来管理域的域控制器服务器的 URI。</param>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.SetJoinDomainResponse(System.IO.Stream)">
<summary>用来在手动加入域操作过程中在派生的 <see cref="T:System.Windows.Media.DomainAcquirer"/> 中设置加入域操作响应。</summary>
<param name="domainResponse">由域控制器服务器发送回客户端的加入域操作响应。</param>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.SetLeaveDomainResponse(System.IO.Stream)">
<summary>用来在手动退出域操作过程中在派生的 <see cref="T:System.Windows.Media.DomainAcquirer"/> 中设置退出域操作响应。</summary>
<param name="domainResponse">由域控制器服务器发送回客户端的退出域操作响应。</param>
    </member>
    <member name="T:System.Windows.Media.DomainOperationCompletedEventArgs">
<summary>为加入和离开域事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.Media.DomainOperationCompletedEventArgs.AccountId">
<summary>获取此域的帐户标识符。</summary>
<returns>此域的帐户标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.DomainOperationCompletedEventArgs.ResponseCustomData">
<summary>获取从域操作返回的自定义数据字符串。</summary>
<returns>从域操作返回的自定义数据字符串。</returns>
    </member>
    <member name="P:System.Windows.Media.DomainOperationCompletedEventArgs.ServiceId">
<summary>获取此域的服务标识符。</summary>
<returns>此域的服务标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.DoubleCollection">
<summary>表示一个由 <see cref="T:System.Double"/> 值组成的有序集合。</summary>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.DoubleCollection"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.EllipseGeometry">
<summary>表示圆或椭圆的几何图形。 </summary>
    </member>
    <member name="M:System.Windows.Media.EllipseGeometry.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.EllipseGeometry"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.EllipseGeometry.Center">
<summary>获取或设置 <see cref="T:System.Windows.Media.EllipseGeometry"/> 的中心点。 </summary>
<returns><see cref="T:System.Windows.Media.EllipseGeometry"/> 的中心点。</returns>
    </member>
    <member name="F:System.Windows.Media.EllipseGeometry.CenterProperty">
<summary>标识 <see cref="P:System.Windows.Media.EllipseGeometry.Center"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.EllipseGeometry.Center"/> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.EllipseGeometry.RadiusX">
<summary>获取或设置 <see cref="T:System.Windows.Media.EllipseGeometry"/> 的 x 轴半径值。  </summary>
<returns><see cref="T:System.Windows.Media.EllipseGeometry"/> 的 x 轴半径值。 </returns>
    </member>
    <member name="F:System.Windows.Media.EllipseGeometry.RadiusXProperty">
<summary>标识 <see cref="P:System.Windows.Media.EllipseGeometry.RadiusX"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.EllipseGeometry.RadiusX"/> 依赖项属性标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.EllipseGeometry.RadiusY">
<summary>获取或设置 <see cref="T:System.Windows.Media.EllipseGeometry"/> 的 y 轴半径值。 </summary>
<returns><see cref="T:System.Windows.Media.EllipseGeometry"/> 的 y 轴半径值。</returns>
    </member>
    <member name="F:System.Windows.Media.EllipseGeometry.RadiusYProperty">
<summary>标识 <see cref="P:System.Windows.Media.EllipseGeometry.RadiusY"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.EllipseGeometry.RadiusY"/> 依赖项属性标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.FillRule">
<summary>指定如何组合 <see cref="T:System.Windows.Media.Geometry"/> 中包含的 <see cref="T:System.Windows.Media.PathFigure"/> 对象的相交区域，以便形成 <see cref="T:System.Windows.Media.Geometry"/> 的区域。</summary>
    </member>
    <member name="F:System.Windows.Media.FillRule.EvenOdd">
<summary>确定一个点是否位于填充区域内的规则，具体方法是从该点沿任意方向画一条无限长的射线，然后计算该射线在给定形状中因交叉而形成的路径段数。如果该数为奇数，则点在内部；如果为偶数，则点在外部。</summary>
    </member>
    <member name="F:System.Windows.Media.FillRule.Nonzero">
<summary>确定一个点是否位于路径填充区域内的规则，具体方法是从该点沿任意方向画一条无限长的射线，然后检查形状段与该射线的交点。从 0 开始计数，每当线段从左向右穿过该射线时加 1，而每当路径段从右向左穿过该射线时减 1。计算交点的数目后，如果结果为 0，则说明该点位于路径外部。否则，它位于路径内部。</summary>
    </member>
    <member name="T:System.Windows.Media.FontFamily">
<summary>表示一系列相关字体。</summary>
    </member>
    <member name="M:System.Windows.Media.FontFamily.#ctor(System.String)">
<summary>从指定的字体系列字符串初始化 <see cref="T:System.Windows.Media.FontFamily"/> 类的一个新实例。</summary>
<param name="familyName">构成新 <see cref="T:System.Windows.Media.FontFamily"/> 的一个或多个系列名称。请参阅“备注”中的“字体系列语法”。</param>
    </member>
    <member name="M:System.Windows.Media.FontFamily.Equals(System.Object)">
<summary>获取一个值，该值指示当前的字体系列对象是否与指定的字体系列对象相同。</summary>
<returns>如果 <paramref name="o"/> 等于当前 <see cref="T:System.Windows.Media.FontFamily"/> 对象，则为 true；否则为 false。如果 <paramref name="o"/> 不是 <see cref="T:System.Windows.Media.FontFamily"/> 对象，则返回 false。</returns>
<param name="o">要比较的对象。</param>
    </member>
    <member name="M:System.Windows.Media.FontFamily.GetHashCode">
<summary>作为 <see cref="T:System.Windows.Media.FontFamily"/> 的哈希函数。</summary>
<returns>整数哈希值。</returns>
    </member>
    <member name="P:System.Windows.Media.FontFamily.Source">
<summary>获取用于构造 <see cref="T:System.Windows.Media.FontFamily"/> 对象的字体系列名称。</summary>
<returns><see cref="T:System.Windows.Media.FontFamily"/> 对象的字体系列名称。</returns>
    </member>
    <member name="M:System.Windows.Media.FontFamily.ToString">
<summary>返回此 <see cref="T:System.Windows.Media.FontFamily"/> 的字符串表示形式。</summary>
<returns>输入字体系列字符串。</returns>
    </member>
    <member name="T:System.Windows.Media.Fonts">
<summary>为 <see cref="T:System.Windows.Media.FontFamily"/> 和 <see cref="T:System.Windows.Media.Typeface"/> 对象提供枚举支持。</summary>
    </member>
    <member name="P:System.Windows.Media.Fonts.SystemTypefaces">
<summary>从默认的系统字体位置获取 <see cref="T:System.Windows.Media.Typeface"/> 对象的集合。</summary>
<returns><see cref="T:System.Windows.Media.Typeface"/> 对象的集合，这些对象表示系统字体集合中的字体。</returns>
    </member>
    <member name="T:System.Windows.Media.GeneralTransform">
<summary>为点和矩形之类的对象提供通用的变换支持。</summary>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.GeneralTransform"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.GeneralTransform.Inverse">
<summary>如果可能，获取此 <see cref="T:System.Windows.Media.GeneralTransform"/> 的逆变换。</summary>
<returns>如果可能，则为此实例的逆实例；否则为 null。</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.Transform(System.Windows.Point)">
<summary>变换指定的点并返回结果。</summary>
<returns>变换 <paramref name="point"/> 的结果。</returns>
<param name="point">要变换的点。</param>
<exception cref="T:System.InvalidOperationException">变换未成功。</exception>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.TransformBounds(System.Windows.Rect)">
<summary>在派生的类中重写时，变换指定的边界框，并返回一个正好能容纳它的与坐标轴对齐的边界框。</summary>
<returns>能容纳所变换的 <paramref name="rect"/> 的最小的与坐标轴对齐的边界框。</returns>
<param name="rect">要变换的边界框。</param>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.TryTransform(System.Windows.Point,System.Windows.Point@)">
<summary>在派生的类中重写时，尝试变换指定的点，并返回一个指示变换是否成功的值。</summary>
<returns>如果 <paramref name="inPoint"/> 已变换，则为 true；否则为 false。</returns>
<param name="inPoint">要变换的点。</param>
<param name="outPoint">变换 <paramref name="inPoint"/> 的结果。</param>
    </member>
    <member name="T:System.Windows.Media.Geometry">
<summary>为用于定义几何形状的对象提供基类。<see cref="T:System.Windows.Media.Geometry"/> 对象可用于剪裁区域以及用作将二维图形数据呈现为 <see cref="T:System.Windows.Shapes.Path"/> 的几何图形定义。</summary>
    </member>
    <member name="P:System.Windows.Media.Geometry.Bounds">
<summary>获取一个 <see cref="T:System.Windows.Rect"/>，它指定 <see cref="T:System.Windows.Media.Geometry"/> 的与坐标轴对齐的边界框。</summary>
<returns><see cref="T:System.Windows.Media.Geometry"/> 的与坐标轴对齐的边界框。</returns>
    </member>
    <member name="P:System.Windows.Media.Geometry.Empty">
<summary>获取空的几何图形对象。</summary>
<returns>空的几何图形对象。</returns>
    </member>
    <member name="P:System.Windows.Media.Geometry.StandardFlatteningTolerance">
<summary>获取用于多边形近似的标准公差。</summary>
<returns>标准公差。默认值为 0.25。</returns>
    </member>
    <member name="P:System.Windows.Media.Geometry.Transform">
<summary>获取或设置应用于 <see cref="T:System.Windows.Media.Geometry"/> 的 <see cref="T:System.Windows.Media.Transform"/> 对象。 </summary>
<returns>应用于 <see cref="T:System.Windows.Media.Geometry"/> 的转换。请注意，此值可以是单个 <see cref="T:System.Windows.Media.Transform"/>，也可以是强制转换为 <see cref="T:System.Windows.Media.Transform"/> 的 <see cref="T:System.Windows.Media.TransformCollection"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.Geometry.TransformProperty">
<summary>标识 <see cref="P:System.Windows.Media.Geometry.Transform"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.Geometry.Transform"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.GeometryCollection">
<summary>表示 <see cref="T:System.Windows.Media.Geometry"/> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.GeometryCollection"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.GeometryGroup">
<summary>表示由其他 <see cref="T:System.Windows.Media.Geometry"/> 对象组成的复合几何图形。 </summary>
    </member>
    <member name="M:System.Windows.Media.GeometryGroup.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.GeometryGroup"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.GeometryGroup.Children">
<summary>获取或设置包含定义此 <see cref="T:System.Windows.Media.GeometryGroup"/> 的对象的 <see cref="T:System.Windows.Media.GeometryCollection"/>。  </summary>
<returns>包含此 <see cref="T:System.Windows.Media.GeometryGroup"/> 的子级的集合。</returns>
    </member>
    <member name="F:System.Windows.Media.GeometryGroup.ChildrenProperty">
<summary>标识 <see cref="P:System.Windows.Media.GeometryGroup.Children"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.GeometryGroup.Children"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.GeometryGroup.FillRule">
<summary>获取或设置如何组合此 <see cref="T:System.Windows.Media.GeometryGroup"/> 中所包含对象的相交区域。  </summary>
<returns>枚举值之一，指定如何组合相交区域以形成结果区域。默认值为 <see cref="F:System.Windows.Media.FillRule.EvenOdd"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.GeometryGroup.FillRuleProperty">
<summary>标识 <see cref="P:System.Windows.Media.GeometryGroup.FillRule"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.GeometryGroup.FillRule"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.GlyphTypeface">
<summary>指定与磁盘上的字体文件相对应的物理字体。</summary>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.FontFileName">
<summary>获取或设置 <see cref="T:System.Windows.Media.GlyphTypeface"/> 对象的字体文件名。</summary>
<returns><see cref="T:System.Windows.Media.GlyphTypeface"/> 对象的字体文件名。</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.Version">
<summary>获取字体的“NAME”表中解释的字体版本。</summary>
<returns>一个表示版本的 <see cref="T:System.Double"/> 值。</returns>
    </member>
    <member name="T:System.Windows.Media.GradientBrush">
<summary>一个描述由渐变停止点组成的渐变的抽象类。从 <see cref="T:System.Windows.Media.GradientBrush"/> 派生的类描述了解释渐变停止点的不同方式。 </summary>
    </member>
    <member name="M:System.Windows.Media.GradientBrush.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.GradientBrush"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.ColorInterpolationMode">
<summary>获取或设置一个 <see cref="T:System.Windows.Media.ColorInterpolationMode"/> 枚举值，该值指定内插渐变颜色的方式。  </summary>
<returns>指定如何内插渐变中的颜色。默认值为 <see cref="F:System.Windows.Media.ColorInterpolationMode.SRgbLinearInterpolation"/>。 </returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.ColorInterpolationModeProperty">
<summary>标识 <see cref="P:System.Windows.Media.GradientBrush.ColorInterpolationMode"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.GradientBrush.ColorInterpolationMode"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.GradientStops">
<summary>获取或设置画笔的渐变停止点。 </summary>
<returns>一个与画笔相关联的 <see cref="T:System.Windows.Media.GradientStop"/> 对象的集合，其中每个对象指定一种颜色和一个沿画笔渐变轴的偏移量。默认值为空 <see cref="T:System.Windows.Media.GradientStopCollection"/>。 </returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.GradientStopsProperty">
<summary>标识 <see cref="P:System.Windows.Media.GradientBrush.GradientStops"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.GradientBrush.GradientStops"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.MappingMode">
<summary>获取或设置一个 <see cref="T:System.Windows.Media.BrushMappingMode"/> 枚举值，该值指定渐变画笔的定位坐标相对于输出区域是绝对的还是相对的。</summary>
<returns>一个 <see cref="T:System.Windows.Media.BrushMappingMode"/> 值，指定如何解释渐变画笔的定位坐标。默认值为 <see cref="F:System.Windows.Media.BrushMappingMode.RelativeToBoundingBox"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.MappingModeProperty">
<summary>标识 <see cref="P:System.Windows.Media.GradientBrush.MappingMode"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.GradientBrush.MappingMode"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.SpreadMethod">
<summary>获取或设置扩展方法的类型，该类型指定如何在要绘制对象的边界内绘制开始或结束的渐变。 </summary>
<returns>用于绘制渐变的扩展方法的类型。默认值为 <see cref="F:System.Windows.Media.GradientSpreadMethod.Pad"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.SpreadMethodProperty">
<summary>标识 <see cref="P:System.Windows.Media.GradientBrush.SpreadMethod"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.GradientBrush.SpreadMethod"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.GradientSpreadMethod">
<summary>指定如何在渐变画笔的渐变向量或空间外部绘制渐变。  </summary>
    </member>
    <member name="F:System.Windows.Media.GradientSpreadMethod.Pad">
<summary>渐变向量末端的颜色值填充剩余的空间。 </summary>
    </member>
    <member name="F:System.Windows.Media.GradientSpreadMethod.Reflect">
<summary>按相反方向重复渐变，直至充满空间。 </summary>
    </member>
    <member name="F:System.Windows.Media.GradientSpreadMethod.Repeat">
<summary>按原始方向重复渐变，直至充满空间。 </summary>
    </member>
    <member name="T:System.Windows.Media.GradientStop">
<summary>描述渐变中过渡点的位置和颜色。 </summary>
    </member>
    <member name="M:System.Windows.Media.GradientStop.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.GradientStop"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.GradientStop.Color">
<summary>获取或设置渐变停止点的颜色。 </summary>
<returns>渐变停止点的颜色。默认值为 <see cref="P:System.Windows.Media.Colors.Transparent"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.GradientStop.ColorProperty">
<summary>标识 <see cref="P:System.Windows.Media.GradientStop.Color"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.GradientStop.Color"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.GradientStop.Offset">
<summary>获取渐变停止点在渐变向量中的位置。 </summary>
<returns>此渐变停止点沿渐变向量的相对位置。默认值为 0。 </returns>
    </member>
    <member name="F:System.Windows.Media.GradientStop.OffsetProperty">
<summary>标识 <see cref="P:System.Windows.Media.GradientStop.Offset"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.GradientStop.Offset"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.GradientStopCollection">
<summary>表示可按照索引单独访问的 <see cref="T:System.Windows.Media.GradientStop"/> 对象的集合。 </summary>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.GradientStopCollection"/> 类的新实例。 </summary>
    </member>
    <member name="T:System.Windows.Media.ImageBrush">
<summary>使用图像绘制区域。 </summary>
    </member>
    <member name="M:System.Windows.Media.ImageBrush.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.ImageBrush"/> 类的新实例。 </summary>
    </member>
    <member name="E:System.Windows.Media.ImageBrush.ImageFailed">
<summary>当存在与图像检索或格式相关的错误时发生。</summary>
    </member>
    <member name="E:System.Windows.Media.ImageBrush.ImageOpened">
<summary>在成功下载和解码图像源后发生。可在呈现图像前使用此事件确定图像的大小。</summary>
    </member>
    <member name="P:System.Windows.Media.ImageBrush.ImageSource">
<summary>获取或设置由此 <see cref="T:System.Windows.Media.ImageBrush"/> 显示的图像。</summary>
<returns>由此 <see cref="T:System.Windows.Media.ImageBrush"/> 显示的图像。</returns>
    </member>
    <member name="F:System.Windows.Media.ImageBrush.ImageSourceProperty">
<summary>标识 <see cref="P:System.Windows.Media.ImageBrush.ImageSource"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.ImageBrush.ImageSource"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.ImageSource">
<summary>为 <see cref="P:System.Windows.Controls.Image.Source"/>、<see cref="P:System.Windows.Controls.MultiScaleImage.Source"/> 和 <see cref="P:System.Windows.Media.ImageBrush.ImageSource"/> 提供对象源类型。</summary>
    </member>
    <member name="T:System.Windows.Media.ImageSourceConverter">
<summary>在 <see cref="T:System.Windows.Media.ImageSource"/> 与其他数据类型之间进行相互转换。</summary>
    </member>
    <member name="M:System.Windows.Media.ImageSourceConverter.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.ImageSourceConverter"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.ImageSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
<summary>确定转换器是否能将给定类型的对象转换为 <see cref="T:System.Windows.Media.ImageSource"/> 实例。</summary>
<returns>如果转换器可以将提供的类型转换为 <see cref="T:System.Windows.Media.ImageSource"/> 实例，则为 true；否则为 false。</returns>
<param name="context">键入用于计算转换的上下文信息。</param>
<param name="sourceType">正被计算用于转换的源类型。</param>
    </member>
    <member name="M:System.Windows.Media.ImageSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
<summary>试图将指定对象转换为 <see cref="T:System.Windows.Media.ImageSource"/> 实例。</summary>
<returns><see cref="T:System.Windows.Media.ImageSource"/> 的新实例。</returns>
<param name="context">键入用于转换的上下文信息。</param>
<param name="culture">转换过程中需要考虑的区域性信息。</param>
<param name="value">正在转换的对象。</param>
      <exception cref="T:System.NotSupportedException">
<paramref name="value"/> 为 null 或者是无效类型。</exception>
    </member>
    <member name="T:System.Windows.Media.ImplicitInputBrush">
<summary>表示着色器的输入位图。</summary>
    </member>
    <member name="M:System.Windows.Media.ImplicitInputBrush.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.ImplicitInputBrush"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.JoinDomainCompletedEventArgs">
<summary>为 <see cref="T:System.Windows.Media.DomainAcquirer.JoinDomainCompleted"/> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Media.LeaveDomainCompletedEventArgs">
<summary>为 <see cref="T:System.Windows.Media.DomainAcquirer.LeaveDomainCompleted"/> 事件提供数据。</summary>
    </member>
    <member name="T:System.Windows.Media.LicenseAcquirer">
<summary>此类处理为 DRM 加密内容购买许可证的事宜。</summary>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.LicenseAcquirer"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.AcquireLicenseAsync(System.Byte[])">
<summary>启动许可证获取过程。</summary>
<param name="mediaHeader">用于许可证获取操作的标头。</param>
<exception cref="T:System.InvalidOperationException">如果在现有许可证获取已经正在类的该实例上尝试时调用此方法。</exception>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.AcquireLicenseAsync(System.Guid,System.Windows.Media.ContentKeyType,System.Guid)">
<summary>启动许可证获取过程。</summary>
<param name="keyId">您正在尝试为其获取许可证的文件的密钥标识符。</param>
<param name="keyType">密钥标识符使用的加密标准的类型。</param>
<param name="serviceId">服务 ID。只有在您希望获取域绑定的许可证的情况下才需要此参数。</param>
<exception cref="T:System.InvalidOperationException">如果在现有许可证获取已经正在类的该实例上尝试时调用此方法。</exception>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.AcquireLicenseAsync(System.IO.Stream)">
<summary>通过指定媒体流来启动许可证获取过程。</summary>
<param name="mediaStream">用于许可证获取操作的流。</param>
<exception cref="T:System.InvalidOperationException">如果在现有许可证获取已经正在类的该实例上尝试时调用此方法。</exception>
    </member>
    <member name="E:System.Windows.Media.LicenseAcquirer.AcquireLicenseCompleted">
<summary>当许可证获取操作完成时发生。</summary>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.CancelAsync">
<summary>取消许可证获取。</summary>
<exception cref="T:System.InvalidOperationException">如果没有正在进行的许可证获取。</exception>
    </member>
    <member name="P:System.Windows.Media.LicenseAcquirer.ChallengeCustomData">
<summary>获取或设置一个包含要传送到许可证服务器的服务特定的数据而不用实现手动许可证获取操作的字符串。</summary>
<returns>一个包含要传送到许可证服务器的服务特定的数据而不用实现手动许可证获取操作的字符串。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Media.LicenseAcquirer.DomainAcquirer">
<summary>获取或设置一个 <see cref="T:System.Windows.Media.DomainAcquirer"/>，以便处理由许可证服务器异常触发的加入域请求（DomainRequired 或 RenewDomain）。</summary>
<returns>一个 <see cref="T:System.Windows.Media.DomainAcquirer"/>，用于处理由许可证服务器异常触发的加入域请求（DomainRequired 或 RenewDomain）。</returns>
    </member>
    <member name="P:System.Windows.Media.LicenseAcquirer.LicenseServerUriOverride">
<summary>获取或设置一个统一资源标识符 (URI) 值，该值重写处于内容标头中的任何许可证服务器 URI。</summary>
<returns>重写在内容标头中提供的 URI（如果有）的 URI。如果该值是 null，则系统将使用处于内容标头中的任何许可证服务器 URI。默认值为 null。 </returns>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.OnAcquireLicense(System.IO.Stream,System.Uri)">
<summary>此方法的默认实现调用 <see cref="T:System.Windows.Controls.MediaElement"/> 以获取某一许可证。如果开发人员想要自己处理许可证获取，则应该重写该方法。</summary>
<param name="licenseChallenge">SOAP 许可证质询。</param>
<param name="licenseServerUri">许可证服务器的 URI。对于具有许可证服务器的 PlayReady 内容，此值将是 PlayReady 标头中的值。对于在标头中未指定许可证服务器的 WMDRM 内容和 PlayReady 内容，该值将为 null，除非已设置 <see cref="P:System.Windows.Media.LicenseAcquirer.LicenseServerUriOverride"/> 属性。如果设置了 <see cref="P:System.Windows.Media.LicenseAcquirer.LicenseServerUriOverride"/> 属性，则其值将作为 <paramref name="licenseServerUri"/> 传入。</param>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.OnCancel">
<summary>此方法在派生类中重写，以便在手动许可证获取操作过程中提供一种标准的取消方式。</summary>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.SetLicenseResponse(System.IO.Stream)">
<summary>设置通过将 SOAP 主体从 HTTP 响应传递到许可证质询来设置许可证响应。 </summary>
<param name="licenseResponse">从 HTTP 响应到许可证质询的 SOAP 主体。该 SOAP 主体作为流传入，并且包含整个 SOAP 响应。</param>
<exception cref="T:System.ArgumentNullException"><paramref name="licenseResponse"/> 为 null。</exception>
<exception cref="T:System.InvalidOperationException">指定的 <paramref name="licenseResponse"/> 无效。</exception>
    </member>
    <member name="T:System.Windows.Media.LicenseManagement">
<summary>一个用来返回持久性许可证存储区内的许可证的静态类。</summary>
    </member>
    <member name="M:System.Windows.Media.LicenseManagement.SelectLicenses(System.Guid)">
<summary>基于提供的密钥标识符返回客户端上的持久性许可证存储区内的许可证。</summary>
<returns>客户端上的持久性许可证存储区内基于所提供的密钥标识符的许可证。如果系统中没有 IBX，则假定用户没有许可证，并且此方法调用会返回空枚举器。</returns>
<param name="keyId">要返回的许可证的密钥 ID。</param>
    </member>
    <member name="M:System.Windows.Media.LicenseManagement.SelectLicenses(System.IO.Stream)">
<summary>基于媒体流（其中包含内容标头）返回客户端上的持久性许可证存储区内的许可证。</summary>
<returns>客户端上的持久性许可证存储区内基于媒体流（其中包含内容标头）的许可证。如果系统中没有 IBX，则假定用户没有许可证，并且此方法调用会返回空枚举器。</returns>
<param name="mediaStream">要返回的许可证的流。</param>
    </member>
    <member name="P:System.Windows.Media.LicenseManagement.VideoOutputConnectors">
<summary>从图形卡中获取有关连接器类型的所有数据，并且还获取 Silverlight 可参与每个视频输出的输出保护方案。 </summary>
<returns>有关连接器类型的数据以及针对每个视频输出 Silverlight 可参与的输出保护方案。在此列表中返回的每个捕获设备可具有多个配置。</returns>
    </member>
    <member name="T:System.Windows.Media.LinearGradientBrush">
<summary>使用线性渐变绘制区域。 </summary>
    </member>
    <member name="M:System.Windows.Media.LinearGradientBrush.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.LinearGradientBrush"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Media.LinearGradientBrush.#ctor(System.Windows.Media.GradientStopCollection,System.Double)">
<summary>初始化 <see cref="T:System.Windows.Media.LinearGradientBrush"/> 类的一个新实例，该实例具有指定的 <see cref="T:System.Windows.Media.GradientStopCollection"/> 和角度。</summary>
<param name="gradientStopCollection">要在此画笔上设置的 <see cref="P:System.Windows.Media.GradientBrush.GradientStops"/>。</param>
<param name="angle">一个表示渐变角度的 <see cref="T:System.Double"/>，以度为单位。如果值为 0，则创建水平渐变，如果值为 90，则创建垂直渐变。可以为负值，就好像是超过 360 的值（被视为 mod 360）。</param>
    </member>
    <member name="P:System.Windows.Media.LinearGradientBrush.EndPoint">
<summary>获取或设置线性渐变的二维终止坐标。 </summary>
<returns>线性渐变的二维终止坐标。默认值是值为 1.1 的 <see cref="T:System.Windows.Point"/>。  </returns>
    </member>
    <member name="F:System.Windows.Media.LinearGradientBrush.EndPointProperty">
<summary>标识 <see cref="P:System.Windows.Media.LinearGradientBrush.EndPoint"/> 依赖项属性。  </summary>
<returns><see cref="P:System.Windows.Media.LinearGradientBrush.EndPoint"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.LinearGradientBrush.StartPoint">
<summary>获取或设置线性渐变的二维起始坐标。 </summary>
<returns>线性渐变的二维起始坐标。默认值是值为 0,0 的 <see cref="T:System.Windows.Point"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.LinearGradientBrush.StartPointProperty">
<summary>标识 <see cref="P:System.Windows.Media.LinearGradientBrush.StartPoint"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.LinearGradientBrush.StartPoint"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.LineGeometry">
<summary>表示线条的几何图形。 </summary>
    </member>
    <member name="M:System.Windows.Media.LineGeometry.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.LineGeometry"/> 类的一个长度为零的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.LineGeometry.EndPoint">
<summary>获取或设置线条的终点。 </summary>
<returns>直线的终点。默认值是值为 0,0 的 <see cref="T:System.Windows.Point"/>。 </returns>
    </member>
    <member name="F:System.Windows.Media.LineGeometry.EndPointProperty">
<summary>标识 <see cref="P:System.Windows.Media.LineGeometry.EndPoint"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.LineGeometry.EndPoint"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.LineGeometry.StartPoint">
<summary>获取或设置线条的起点。 </summary>
<returns>线条的起点。默认值是值为 0,0 的 <see cref="T:System.Windows.Point"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.LineGeometry.StartPointProperty">
<summary>标识 <see cref="P:System.Windows.Media.LineGeometry.StartPoint"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.LineGeometry.StartPoint"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.LineSegment">
<summary>表示在两个点之间绘制的一条线，它可能是 <see cref="T:System.Windows.Shapes.Path"/> 数据内的 <see cref="T:System.Windows.Media.PathFigure"/> 的一部分。</summary>
    </member>
    <member name="M:System.Windows.Media.LineSegment.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.LineSegment"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.LineSegment.Point">
<summary>获取或设置线段的终点。 </summary>
<returns>线段的终点。默认值是值为 0,0 的 <see cref="T:System.Windows.Point"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.LineSegment.PointProperty">
<summary>标识 <see cref="P:System.Windows.Media.LineSegment.Point"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.LineSegment.Point"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.LogReadyRoutedEventArgs">
<summary>为 <see cref="E:System.Windows.Controls.MediaElement.LogReady"/> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Media.LogReadyRoutedEventArgs.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.LogReadyRoutedEventArgs"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.LogReadyRoutedEventArgs.Log">
<summary>获取一个 Windows 媒体日志格式的 XML 字符串，该字符串包含 LogFields 部分中列出的字段。</summary>
<returns>Windows 媒体日志格式的 XML 字符串，该字符串包含 LogFields 部分中列出的字段。</returns>
    </member>
    <member name="P:System.Windows.Media.LogReadyRoutedEventArgs.LogSource">
<summary>获取一个值，该值指示生成日志的原因。</summary>
<returns>指示生成日志的原因的枚举值之一。</returns>
    </member>
    <member name="T:System.Windows.Media.LogReadyRoutedEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.Controls.MediaElement.LogReady"/> 事件的方法。</summary>
<param name="sender">事件处理程序所附加到的对象。</param>
<param name="e">事件数据。 </param>
    </member>
    <member name="T:System.Windows.Media.LogSource">
<summary>指示生成媒体日志的原因。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.RequestLog">
<summary>已调用 <see cref="M:System.Windows.Controls.MediaElement.RequestLog"/> 方法。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.Stop">
<summary>媒体已停止。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.Seek">
<summary>在媒体上执行了查找操作；即，播放已前进或后退。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.Pause">
<summary>媒体已暂停。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.SourceChanged">
<summary>媒体源已发生变化。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.EndOfStream">
<summary>媒体已到达流的末尾。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.MediaElementShutdown">
<summary>运行时已关闭。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.RuntimeShutdown">
<summary>运行时已关闭。</summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
<summary> 表示用于二维空间中的变换的 3x3 仿射变换矩阵。 </summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
<summary>初始化 <see cref="T:System.Windows.Media.Matrix"/> 结构。 </summary>
<param name="m11"><see cref="T:System.Windows.Media.Matrix"/> 结构的 <see cref="P:System.Windows.Media.Matrix.M11"/> 系数。</param>
<param name="m12"><see cref="T:System.Windows.Media.Matrix"/> 结构的 <see cref="P:System.Windows.Media.Matrix.M12"/> 系数。</param>
<param name="m21"><see cref="T:System.Windows.Media.Matrix"/> 结构的 <see cref="P:System.Windows.Media.Matrix.M21"/> 系数。</param>
<param name="m22"><see cref="T:System.Windows.Media.Matrix"/> 结构的 <see cref="P:System.Windows.Media.Matrix.M22"/> 系数。</param>
<param name="offsetX"><see cref="T:System.Windows.Media.Matrix"/> 结构的 <see cref="P:System.Windows.Media.Matrix.OffsetX"/> 系数。</param>
<param name="offsetY"><see cref="T:System.Windows.Media.Matrix"/> 结构的 <see cref="P:System.Windows.Media.Matrix.OffsetY"/> 系数。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
<summary>确定指定的 <see cref="T:System.Object"/> 是否为与此 <see cref="T:System.Windows.Media.Matrix"/> 相同的 <see cref="T:System.Windows.Media.Matrix"/> 结构。 </summary>
<returns>如果 <paramref name="o"/> 是与此 <see cref="T:System.Windows.Media.Matrix"/> 结构相同的 <see cref="T:System.Windows.Media.Matrix"/> 结构，则为 true；否则为 false。</returns>
<param name="o">要进行比较的 <see cref="T:System.Object"/>。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
<summary>确定指定的 <see cref="T:System.Windows.Media.Matrix"/> 结构是否与此实例相同。 </summary>
<returns>如果实例相同，则为 true；否则为 false。 </returns>
<param name="value">要与此实例比较的 <see cref="T:System.Windows.Media.Matrix"/> 的实例。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
<summary>返回此 <see cref="T:System.Windows.Media.Matrix"/> 结构的哈希代码。 </summary>
<returns>此实例的哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
<summary>获取一个恒等 <see cref="T:System.Windows.Media.Matrix"/>。 </summary>
<returns>一个恒等矩阵。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
<summary>获取一个值，该值指示此 <see cref="T:System.Windows.Media.Matrix"/> 结构是否为恒等矩阵。 </summary>
<returns>如果 <see cref="T:System.Windows.Media.Matrix"/> 结构为恒等矩阵，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Matrix"/> 结构中第一行与第一列相交处的值。 </summary>
<returns>此 <see cref="T:System.Windows.Media.Matrix"/> 中第一行与第一列相交处的值。默认值为 1。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Matrix"/> 结构中第一行与第二列相交处的值。 </summary>
<returns>此 <see cref="T:System.Windows.Media.Matrix"/> 中第一行与第二列相交处的值。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Matrix"/> 结构中第二行、第一列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Matrix"/> 中第二行与第一列相交处的值。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Matrix"/> 结构中第二行与第二列相交处的值。 </summary>
<returns>此 <see cref="T:System.Windows.Media.Matrix"/> 结构中第二行与第二列相交处的值。默认值为 1。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Matrix"/> 结构中第三行与第一列相交处的值。  </summary>
<returns>此 <see cref="T:System.Windows.Media.Matrix"/> 结构中第三行与第一列相交处的值。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Matrix"/> 结构中第三行与第二列相交处的值。 </summary>
<returns>此 <see cref="T:System.Windows.Media.Matrix"/> 结构中第三行与第二列相交处的值。默认值为 0。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
<summary>确定两个指定的 <see cref="T:System.Windows.Media.Matrix"/> 结构是否相同。</summary>
<returns>如果 <paramref name="matrix1"/> 和 <paramref name="matrix2"/> 相同，则为 true；否则为 false。</returns>
<param name="matrix1">要进行比较的第一个 <see cref="T:System.Windows.Media.Matrix"/> 结构。</param>
<param name="matrix2">要进行比较的第二个 <see cref="T:System.Windows.Media.Matrix"/> 结构。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
<summary>确定两个指定的 <see cref="T:System.Windows.Media.Matrix"/> 结构是否步相同。</summary>
<returns>如果 <paramref name="matrix1"/> 和 <paramref name="matrix2"/> 不相同，则为 true；否则为 false。</returns>
<param name="matrix1">要进行比较的第一个 <see cref="T:System.Windows.Media.Matrix"/> 结构。</param>
<param name="matrix2">要进行比较的第二个 <see cref="T:System.Windows.Media.Matrix"/> 结构。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)"/>。</summary>
<returns>一个字符串，包含采用指定格式的当前实例的值。</returns>
<param name="format">指定要使用的格式的字符串。-或- null，表示使用为 IFormattable 实现的类型定义的默认格式。 </param>
<param name="provider">用于格式化该值的 IFormatProvider。-或- null，表示从操作系统的当前区域设置中获取数字格式信息。 </param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
<summary>创建此 <see cref="T:System.Windows.Media.Matrix"/> 结构的 <see cref="T:System.String"/> 表示形式。 </summary>
<returns>一个 <see cref="T:System.String"/>，其中包含此 <see cref="T:System.Windows.Media.Matrix"/> 的 <see cref="P:System.Windows.Media.Matrix.M11"/>、<see cref="P:System.Windows.Media.Matrix.M12"/>、<see cref="P:System.Windows.Media.Matrix.M21"/>、<see cref="P:System.Windows.Media.Matrix.M22"/>、<see cref="P:System.Windows.Media.Matrix.OffsetX"/> 和 <see cref="P:System.Windows.Media.Matrix.OffsetY"/> 值。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
<summary>使用区域性特定的格式设置信息创建此 <see cref="T:System.Windows.Media.Matrix"/> 结构的 <see cref="T:System.String"/> 表示形式。 </summary>
<returns>一个 <see cref="T:System.String"/>，其中包含此 <see cref="T:System.Windows.Media.Matrix"/> 的 <see cref="P:System.Windows.Media.Matrix.M11"/>、<see cref="P:System.Windows.Media.Matrix.M12"/>、<see cref="P:System.Windows.Media.Matrix.M21"/>、<see cref="P:System.Windows.Media.Matrix.M22"/>、<see cref="P:System.Windows.Media.Matrix.OffsetX"/> 和 <see cref="P:System.Windows.Media.Matrix.OffsetY"/> 值。</returns>
<param name="provider">特定于区域的格式设置信息。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
<summary>用 <see cref="T:System.Windows.Media.Matrix"/> 变换指定的点并返回结果。</summary>
<returns>用此 <see cref="T:System.Windows.Media.Matrix"/> 变换 <paramref name="point"/> 的结果。</returns>
<param name="point">要变换的点。</param>
    </member>
    <member name="T:System.Windows.Media.Matrix3DProjection">
<summary>可用于将 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 应用于对象。</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix3DProjection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Matrix3DProjection"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Matrix3DProjection.ProjectionMatrix">
<summary>获取或设置供应用于对象的投影使用的 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/>。</summary>
<returns>供应用于对象的投影使用的 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.Matrix3DProjection.ProjectionMatrixProperty">
<summary>标识 <see cref="P:System.Windows.Media.Matrix3DProjection.ProjectionMatrix"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Matrix3DProjection.ProjectionMatrix"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.MatrixTransform">
<summary>创建一个任意仿射矩阵变换，用于操作二维平面中的对象或坐标系。</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixTransform.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.MatrixTransform"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.MatrixTransform.Matrix">
<summary>获取或设置定义此变换的 <see cref="T:System.Windows.Media.Matrix"/>。 </summary>
<returns>定义此变换的 <see cref="T:System.Windows.Media.Matrix"/> 结构。默认值为恒等 <see cref="T:System.Windows.Media.Matrix"/>。恒等矩阵的 [1,1]、[2,2] 和 [3,3] 系数值为 1，其他系数值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.MatrixTransform.MatrixProperty">
<summary>标识 <see cref="P:System.Windows.Media.MatrixTransform.Matrix"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.MatrixTransform.Matrix"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.MediaElementState">
<summary>定义 <see cref="T:System.Windows.Controls.MediaElement"/> 对象的可能状态。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Closed">
<summary><see cref="T:System.Windows.Controls.MediaElement"/> 不包含媒体。<see cref="T:System.Windows.Controls.MediaElement"/> 显示透明帧。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Opening">
<summary><see cref="T:System.Windows.Controls.MediaElement"/> 正在进行验证，并尝试打开由其 <see cref="P:System.Windows.Controls.MediaElement.Source"/> 属性指定的统一资源标识符 (URI)。当处于此状态时，<see cref="T:System.Windows.Controls.MediaElement"/> 对其接收的任何 <see cref="M:System.Windows.Controls.MediaElement.Play"/>、<see cref="M:System.Windows.Controls.MediaElement.Pause"/> 或 <see cref="M:System.Windows.Controls.MediaElement.Stop"/> 命令进行排队，并对它们进行处理（如果成功打开媒体）。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Individualizing">
<summary><see cref="T:System.Windows.Controls.MediaElement"/> 处于确保正确的个性化组件（仅在播放 DRM 受保护的内容时适用）安装在用户的计算机上的过程中。有关更多信息，请参阅数字版权管理 (DRM)。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.AcquiringLicense">
<summary><see cref="T:System.Windows.Controls.MediaElement"/> 正在获取播放 DRM 受保护的内容所需的许可证。一旦调用 <see cref="M:System.Windows.Media.LicenseAcquirer.OnAcquireLicense(System.IO.Stream,System.Uri)"/> 后，<see cref="T:System.Windows.Controls.MediaElement"/> 将保持在此状态下，直到调用了 <see cref="M:System.Windows.Media.LicenseAcquirer.SetLicenseResponse(System.IO.Stream)"/>。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Buffering">
<summary><see cref="T:System.Windows.Controls.MediaElement"/> 正在加载要播放的媒体。在此状态中，它的 <see cref="P:System.Windows.Controls.MediaElement.Position"/> 不前进。如果 <see cref="T:System.Windows.Controls.MediaElement"/> 已经在播放视频，则它将继续以显示所显示的上一帧。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Playing">
<summary><see cref="T:System.Windows.Controls.MediaElement"/> 正在播放其源属性指定的媒体。它的 <see cref="P:System.Windows.Controls.MediaElement.Position"/> 向前推进。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Paused">
<summary><see cref="T:System.Windows.Controls.MediaElement"/> 不会使它的 <see cref="P:System.Windows.Controls.MediaElement.Position"/> 前进。如果 <see cref="T:System.Windows.Controls.MediaElement"/> 正在播放视频，则它将继续以显示当前帧。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Stopped">
<summary><see cref="T:System.Windows.Controls.MediaElement"/> 包含媒体，但未播放或已暂停。它的 <see cref="P:System.Windows.Controls.MediaElement.Position"/> 为 0，并且不前进。如果加载的媒体为视频，则 <see cref="T:System.Windows.Controls.MediaElement"/> 显示第一帧。</summary>
    </member>
    <member name="T:System.Windows.Media.MediaLicense">
<summary>一个表示逻辑许可证的许可证类的实例。  </summary>
    </member>
    <member name="P:System.Windows.Media.MediaLicense.ExpirationDate">
<summary>获取 <see cref="T:System.Windows.Media.MediaLicense"/> 类实例的到期日期。</summary>
<returns><see cref="T:System.Windows.Media.MediaLicense"/> 类实例的到期日期。 </returns>
    </member>
    <member name="P:System.Windows.Media.MediaLicense.KeyId">
<summary>获取 <see cref="T:System.Windows.Media.MediaLicense"/> 的内容密钥标识符。 </summary>
<returns><see cref="T:System.Windows.Media.MediaLicense"/> 的内容密钥标识符。如果 <see cref="T:System.Windows.Media.MediaLicense"/> 实例表示一个许可证，则此属性将返回该许可证本身的内容密钥标识符。如果该类实例表示一个许可证链，则返回的是叶许可证的内容密钥标识符。有关许可证链和叶许可证的更多信息，请参阅数字版权管理 (DRM)。由于内容中还包含了对内容进行解密时要用的密钥的密钥标识符，因此此值用来将许可证与内容配对以进行解密。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaLicense.UplinkKeyId">
<summary>获取具有上行密钥标识符的许可证链中处于最高位置的许可证的上行密钥标识符。</summary>
<returns>具有上行密钥标识符的许可证链中处于最高位置的许可证的上行密钥标识符。如果 <see cref="T:System.Windows.Media.MediaLicense"/> 类包含一个根许可证或简单许可证，则此属性将返回 Guid.Empty。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaLicense.Usable">
<summary>获取一个值，该值指示许可证或许可证链是否可用来播放。</summary>
<returns>指示许可证或许可证链是否可用来播放的值。</returns>
    </member>
    <member name="T:System.Windows.Media.MediaSampleAttributeKeys">
<summary>在用于媒体采样的属性字典中使用该枚举。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.KeyFrameFlag">
<summary>对于视频采样，存在该属性表示该采样是关键帧。Silverlight for Windows Phone 音频采样，存在该属性表示不连续（仅限 Silverlight for Windows Phone）。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.DRMInitializationVector">
<summary> 提供与需要解密的媒体采样有关的数据。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.FrameWidth">
<summary>视频帧的宽度。如果未指定该属性，则假定采样的宽度为在传递给 <see cref="M:System.Windows.Media.MediaStreamSource.ReportOpenMediaCompleted(System.Collections.Generic.IDictionary{System.Windows.Media.MediaSourceAttributesKeys,System.String},System.Collections.Generic.IEnumerable{System.Windows.Media.MediaStreamDescription})"/> 方法的 <see cref="T:System.Windows.Media.MediaStreamAttributeKeys"/> 上定义的宽度值。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.FrameHeight">
<summary>视频帧的高度。如果未指定该属性，则假定采样的宽度为在传递给 <see cref="M:System.Windows.Media.MediaStreamSource.ReportOpenMediaCompleted(System.Collections.Generic.IDictionary{System.Windows.Media.MediaSourceAttributesKeys,System.String},System.Collections.Generic.IEnumerable{System.Windows.Media.MediaStreamDescription})"/> 方法的 <see cref="T:System.Windows.Media.MediaStreamAttributeKeys"/> 上定义的高度值。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.DRMSubSampleMapping">
<summary> 提供有关媒体采样的哪部分被加密的数据。该值是一个由一个或多个 32 位对组成的 B64 编码的数组。对中的第一个值为加密数据的长度，第二个值为明文（未加密）数据的长度。如果提供，数组值必须为整个采样的长度。如果未提供，则假定任何加密都涉及整个采样。H264 媒体采样中加密数据和明文数据（未加密）的长度。对于 Windows Phone 7 和 Silverlight 4 上的 H.264，都支持该属性。</summary>
    </member>
    <member name="T:System.Windows.Media.MediaSourceAttributesKeys">
<summary>描述媒体源。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSourceAttributesKeys.CanSeek">
<summary>一个布尔值，该值指示此源是否可查找。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSourceAttributesKeys.Duration">
<summary>此源的整数形式的播放时间长度，以 100 纳秒为增量单位。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSourceAttributesKeys.DRMHeader">
<summary>管线需要正确初始化和解密的 DRM 数据。这是表示为某一字符串的 DRM 标头。</summary>
    </member>
    <member name="T:System.Windows.Media.MediaStreamAttributeKeys">
<summary>在用于媒体流的属性字典中使用该枚举。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamAttributeKeys.CodecPrivateData">
<summary>管线需要正确初始化和呈现的编码解码器数据。对于视频，这是标头信息。对于音频，这是 base16 编码的 WaveFormatEx 结构。有关 CodecPrivateDate 的详细信息，请参阅“在 Silverlight for Windows Phone 中实现 MediaStream 源和媒体”。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamAttributeKeys.VideoFourCC">
<summary>实例化视频编码解码器所需的数据。这是一个由四个字符构成的值，也称作 FourCC。有关 VideoFourCC CodecPrivateDate 的详细信息，请参阅“在 Silverlight for Windows Phone 中实现 MediaStream 源和媒体”。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamAttributeKeys.Width">
<summary>为此流报告的视频帧的最大宽度以及呈现它们的默认宽度。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamAttributeKeys.Height">
<summary>为此流报告的视频帧的最大高度以及呈现它们的默认宽度。</summary>
    </member>
    <member name="T:System.Windows.Media.MediaStreamDescription">
<summary>此类详尽描述媒体流，以便初始化 <see cref="T:System.Windows.Controls.MediaElement"/> 和基础媒体管线。</summary>
    </member>
    <member name="M:System.Windows.Media.MediaStreamDescription.#ctor(System.Windows.Media.MediaStreamType,System.Collections.Generic.IDictionary{System.Windows.Media.MediaStreamAttributeKeys,System.String})">
<summary>使用指定的值初始化 <see cref="T:System.Windows.Media.MediaStreamDescription"/> 类的新实例。</summary>
<param name="type">来自枚举的值，可以是音频或视频。</param>
<param name="mediaStreamAttributes">描述整个媒体流的其他属性的对的集合。</param>
<exception cref="T:System.InvalidOperationException">指定的 <paramref name="type"/> 不是音频或视频。</exception>
    </member>
    <member name="P:System.Windows.Media.MediaStreamDescription.MediaAttributes">
<summary>获取与媒体流有关的属性的集合。此集合仅包含用于初始化媒体管线和 <see cref="T:System.Windows.Controls.MediaElement"/> 的属性。</summary>
<returns>与媒体流有关的属性的集合。默认值为 Empty IDictionary&lt;MediaStreamAttributeKeys, string&gt;。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamDescription.StreamId">
<summary>获取要描述的流的流 ID。</summary>
<returns>要描述的流的流 ID。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamDescription.Type">
<summary>获取要描述的流的类型，可以是 <see cref="F:System.Windows.Media.MediaStreamType.Audio"/> 或 <see cref="F:System.Windows.Media.MediaStreamType.Video"/>。</summary>
<returns>要描述的流的类型，可以是 <see cref="F:System.Windows.Media.MediaStreamType.Audio"/> 或 <see cref="F:System.Windows.Media.MediaStreamType.Video"/>。默认值为 <see cref="F:System.Windows.Media.MediaStreamType.Video"/>。</returns>
    </member>
    <member name="T:System.Windows.Media.MediaStreamSample">
<summary>此类详尽描述媒体采样，以便允许 <see cref="T:System.Windows.Controls.MediaElement"/> 和基础管线呈现该采样。</summary>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSample.#ctor(System.Windows.Media.MediaStreamDescription,System.IO.Stream,System.Int64,System.Int64,System.Int64,System.Collections.Generic.IDictionary{System.Windows.Media.MediaSampleAttributeKeys,System.String})">
<summary>实例化 <see cref="T:System.Windows.Media.MediaStreamSample"/> 类的新实例。</summary>
<param name="mediaStreamDescription">此采样从其拉入的流的说明。</param>
<param name="stream">包含所需媒体采样的流。设置为 null 可报告流的结束。</param>
<param name="offset">实际采样数据从其开始的流的偏移量。</param>
<param name="count">构成采样数据的字节数。</param>
<param name="timestamp">距此采样应在其呈现的媒体文件的开头的时间，使用 100 纳秒增量表示。</param>
<param name="attributes">描述整个媒体采样的其他属性的对的集合。</param>
<exception cref="T:System.InvalidOperationException">一个或多个参数无效。</exception>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSample.#ctor(System.Windows.Media.MediaStreamDescription,System.IO.Stream,System.Int64,System.Int64,System.Int64,System.Int64,System.Collections.Generic.IDictionary{System.Windows.Media.MediaSampleAttributeKeys,System.String})">
<summary>实例化 <see cref="T:System.Windows.Media.MediaStreamSample"/> 类的新实例。</summary>
<param name="mediaStreamDescription">此采样从其拉入的流的说明。</param>
<param name="stream">包含所需媒体采样的流。设置为 null 可报告流的结束。</param>
<param name="offset">实际采样数据从其开始的流的偏移量。</param>
<param name="count">构成采样数据的字节数。</param>
<param name="timestamp">距此采样应在其呈现的媒体文件的开头的时间，使用 100 纳秒增量表示。</param>
<param name="duration">采样的持续时间。</param>
<param name="attributes">描述整个媒体采样的其他属性的对的集合。</param>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Attributes">
<summary>获取一个属性集合，这些属性描述 <see cref="T:System.Windows.Controls.MediaElement"/> 和媒体管线如何呈现此采样。</summary>
<returns>一个属性集合，这些属性描述 <see cref="T:System.Windows.Controls.MediaElement"/> 和媒体管线如何呈现此采样。默认值为 Empty IDictionary&lt;MediaSampleAttributeKeys, string&gt;。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Count">
<summary>获取采样结束的流的字节数。</summary>
<returns>采样结束的流的字节数。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Duration">
<summary>获取采样的持续时间。</summary>
<returns>采样持续时间（以 10 纳秒为单位）。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.MediaStreamDescription">
<summary>获取此采样来自的流的说明。</summary>
<returns>此采样来自的流的说明。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Offset">
<summary>获取采样来自的流的字节偏移量。对于也包含标头的采样流，这设置为实际采样开始的位置。</summary>
<returns>采样来自的流的字节偏移量。默认值为 0。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Stream">
<summary>获取表示采样的数据流。 </summary>
<returns>表示采样的数据流。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Timestamp">
<summary>获取应呈现某一采样的时间，以 100 纳秒增量度量。</summary>
<returns>应呈现某一采样的时间，以 100 纳秒增量度量。默认值为 0。</returns>
    </member>
    <member name="T:System.Windows.Media.MediaStreamSource">
<summary>MediaStreamSource 直接向媒体管道提供媒体采样，并且通常用于启用 <see cref="T:System.Windows.Controls.MediaElement"/> 来使用 Silverlight 本身不支持的容器格式。</summary>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.MediaStreamSource"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSource.AudioBufferLength">
<summary>获取或设置音频缓冲区的长度。</summary>
<returns>音频缓冲区的长度（以毫秒为单位）。该值必须介于 15 和 1000 之间。默认值为 1000，这是一个辅助缓冲区。</returns>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.CloseMedia">
<summary><see cref="T:System.Windows.Controls.MediaElement"/> 可以在经历正常关闭或由于某一错误而关闭时调用此方法。此方法允许开发人员对 <see cref="T:System.Windows.Media.MediaStreamSource"/> 执行任何所需的清理。</summary>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ErrorOccurred(System.String)">
<summary>只要在 <see cref="T:System.Windows.Media.MediaStreamSource"/> 中发生了不可恢复的错误，开发人员就调用此方法。这将导致引发 <see cref="E:System.Windows.Controls.MediaElement.MediaFailed"/> 事件。</summary>
<param name="errorDescription">描述错误的字符串。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.GetDiagnosticAsync(System.Windows.Media.MediaStreamSourceDiagnosticKind)">
<summary><see cref="T:System.Windows.Controls.MediaElement"/> 可以调用此方法来请求有关 <see cref="T:System.Windows.Media.MediaStreamSource"/> 的信息。开发人员通过调用 <see cref="M:System.Windows.Media.MediaStreamSource.ReportGetDiagnosticCompleted(System.Windows.Media.MediaStreamSourceDiagnosticKind,System.Int64)"/> 来响应此方法。</summary>
<param name="diagnosticKind"><see cref="T:System.Windows.Media.MediaStreamSourceDiagnosticKind"/> 枚举的一个成员，描述所需信息的类型。 </param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.GetSampleAsync(System.Windows.Media.MediaStreamType)">
<summary><see cref="T:System.Windows.Controls.MediaElement"/> 调用此方法来要求 <see cref="T:System.Windows.Media.MediaStreamSource"/> 为媒体管道准备所请求流类型的下一个 <see cref="T:System.Windows.Media.MediaStreamSample"/>。开发人员可以通过调用 <see cref="M:System.Windows.Media.MediaStreamSource.ReportGetSampleCompleted(System.Windows.Media.MediaStreamSample)"/> 或 <see cref="M:System.Windows.Media.MediaStreamSource.ReportGetSampleProgress(System.Double)"/> 来响应此方法。</summary>
<param name="mediaStreamType">下一个采样应来自的将是 <see cref="F:System.Windows.Media.MediaStreamType.Audio"/> 或 <see cref="F:System.Windows.Media.MediaStreamType.Video"/> 的流媒体的描述。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.OpenMediaAsync">
<summary><see cref="T:System.Windows.Controls.MediaElement"/> 调用此方法来要求 <see cref="T:System.Windows.Media.MediaStreamSource"/> 打开媒体。</summary>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportGetDiagnosticCompleted(System.Windows.Media.MediaStreamSourceDiagnosticKind,System.Int64)">
<summary>作为对 <see cref="M:System.Windows.Media.MediaStreamSource.GetDiagnosticAsync(System.Windows.Media.MediaStreamSourceDiagnosticKind)"/> 的响应，开发人员调用此方法将请求的诊断信息传递到 <see cref="T:System.Windows.Controls.MediaElement"/>。</summary>
<param name="diagnosticKind">您正在为其返回值的诊断的类型。</param>
<param name="diagnosticValue">与返回的诊断信息关联的值。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportGetSampleCompleted(System.Windows.Media.MediaStreamSample)">
<summary>作为对 <see cref="M:System.Windows.Media.MediaStreamSource.GetSampleAsync(System.Windows.Media.MediaStreamType)"/> 的响应，开发人员调用此方法为 <see cref="T:System.Windows.Controls.MediaElement"/> 提供要呈现的下一个媒体采样或报告流的结束。</summary>
<param name="mediaStreamSample">此采样来自的媒体流的说明。传递 null<see cref="T:System.Windows.Media.MediaStreamSample"/> 对象指示流已结束。 </param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportGetSampleProgress(System.Double)">
<summary>作为对 <see cref="M:System.Windows.Media.MediaStreamSource.GetSampleAsync(System.Windows.Media.MediaStreamType)"/> 的响应，开发人员调用此方法通知 <see cref="T:System.Windows.Controls.MediaElement"/>，它将不会立即返回采样，因为 <see cref="T:System.Windows.Media.MediaStreamSource"/> 需要重新填充其缓冲区并且需要允许 <see cref="T:System.Windows.Controls.MediaElement"/> 过渡到 <see cref="F:System.Windows.Media.MediaElementState.Buffering"/> 状态。</summary>
<param name="bufferingProgress">介于 0 和 1 之间的一个值，用于指示填充缓冲区的百分比。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportOpenMediaCompleted(System.Collections.Generic.IDictionary{System.Windows.Media.MediaSourceAttributesKeys,System.String},System.Collections.Generic.IEnumerable{System.Windows.Media.MediaStreamDescription})">
<summary>作为对 <see cref="M:System.Windows.Media.MediaStreamSource.OpenMediaAsync"/> 的响应，开发人员调用此方法通知 <see cref="T:System.Windows.Controls.MediaElement"/>， <see cref="T:System.Windows.Media.MediaStreamSource"/> 已打开并提供有关它包含的流的信息。</summary>
<param name="mediaStreamAttributes">描述整个媒体源的功能的属性的集合。<see cref="T:System.Windows.Media.MediaSourceAttributesKeys"/> 中列出了当前支持的属性。</param>
<param name="availableMediaStreams">包含在内容中的每个音频和视频流的说明。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportSeekCompleted(System.Int64)">
<summary>作为对 <see cref="M:System.Windows.Media.MediaStreamSource.SeekAsync(System.Int64)"/> 的响应，开发人员调用此方法通知 <see cref="T:System.Windows.Controls.MediaElement"/>，<see cref="T:System.Windows.Media.MediaStreamSource"/> 已完成请求的位置更改并且 <see cref="M:System.Windows.Media.MediaStreamSource.ReportGetSampleCompleted(System.Windows.Media.MediaStreamSample)"/> 的将来调用将返回从媒体中该点开始的采样。</summary>
<param name="timeSeekedTo">发生实际查找的时间，用 100 纳秒的增量表示。这通常是从媒体文件的开始测量的。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportSetPlaybackRateCompleted(System.Single)">
<summary>通知 <see cref="T:System.Windows.Controls.MediaElement"/> 播放速率已设置为指定的值。</summary>
<param name="rate">新的播放速率</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportSwitchMediaStreamCompleted(System.Windows.Media.MediaStreamDescription)">
<summary> 作为对 <see cref="M:System.Windows.Media.MediaStreamSource.SwitchMediaStreamAsync(System.Windows.Media.MediaStreamDescription)"/> 的响应，开发人员调用此方法通知 <see cref="T:System.Windows.Controls.MediaElement"/>，<see cref="T:System.Windows.Media.MediaStreamSource"/> 已完成请求的流切换并且现在将会从请求的流返回采样，而不是从原始流返回。请注意，这对于多个音频流的情况（如语言跟踪）有意义，对于自适应流的情况则没有意义。</summary>
<param name="mediaStreamDescription">实际切换到的流的说明。这应是与 <see cref="M:System.Windows.Media.MediaStreamSource.SwitchMediaStreamAsync(System.Windows.Media.MediaStreamDescription)"/> 请求的流相同的流。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.SeekAsync(System.Int64)">
<summary> <see cref="T:System.Windows.Controls.MediaElement"/> 调用此方法来要求 <see cref="T:System.Windows.Media.MediaStreamSource"/> 在指定时间之前查找最近可随机访问的点。开发人员通过调用 <see cref="M:System.Windows.Media.MediaStreamSource.ReportSeekCompleted(System.Int64)"/> 以及通过确保 <see cref="M:System.Windows.Media.MediaStreamSource.ReportGetSampleCompleted(System.Windows.Media.MediaStreamSample)"/> 的将来调用将从媒体中的该点返回采样来响应此方法。</summary>
<param name="seekToTime">要查找的时间，用 100 纳秒增量表示。这通常是从媒体文件的开始测量的。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.SetPlaybackRateAsync(System.Single,System.Boolean,System.Boolean)">
<summary>请求 <see cref="T:System.Windows.Media.MediaStreamSource"/> 将播放速率设置为指定的值。</summary>
<param name="rate">新的播放速率。</param>
<param name="thin">指定是否使流变细。</param>
<param name="audio">指定是否启用音频。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.SwitchMediaStreamAsync(System.Windows.Media.MediaStreamDescription)">
<summary>在 <see cref="T:System.Windows.Controls.MediaElement"/> 上请求某一流切换时调用。</summary>
<param name="mediaStreamDescription">要切换到的流。</param>
    </member>
    <member name="T:System.Windows.Media.MediaStreamSourceDiagnosticKind">
<summary>描述媒体使用的诊断信息的类型。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamSourceDiagnosticKind.BufferLevelInMilliseconds">
<summary>以毫秒为单位表示下载缓冲区。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamSourceDiagnosticKind.BufferLevelInBytes">
<summary>以字节为单位表示下载缓冲区。</summary>
    </member>
    <member name="T:System.Windows.Media.MediaStreamType">
<summary>用于指定流类型的枚举。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamType.Audio">
<summary>该流是音频流。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamType.Video">
<summary>该流是视频流。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamType.Script">
<summary>该流是脚本流。注意：当前 <see cref="T:System.Windows.Media.MediaStreamSource"/> 中不支持脚本命令。</summary>
    </member>
    <member name="T:System.Windows.Media.MultiScaleTileSource">
<summary>用于指定 Deep Zoom 图像的源。 </summary>
    </member>
    <member name="M:System.Windows.Media.MultiScaleTileSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
<summary>使用指定的参数创建 <see cref="T:System.Windows.Media.MultiScaleTileSource"/> 类的新实例。</summary>
<param name="imageWidth">Deep Zoom 图像的宽度。</param>
<param name="imageHeight">Deep Zoom 图像的高度。</param>
<param name="tileWidth">Deep Zoom 图像中图块的宽度。</param>
<param name="tileHeight">Deep Zoom 图像中图块的高度。</param>
<param name="tileOverlap">Deep Zoom 图像中图块的重叠程度。</param>
<exception cref="T:System.ArgumentException">一个或多个参数无效。</exception>
    </member>
    <member name="M:System.Windows.Media.MultiScaleTileSource.#ctor(System.Int64,System.Int64,System.Int32,System.Int32,System.Int32)">
<summary>使用指定的参数创建 <see cref="T:System.Windows.Media.MultiScaleTileSource"/> 类的新实例。</summary>
<param name="imageWidth">Deep Zoom 图像的宽度。</param>
<param name="imageHeight">Deep Zoom 图像的高度。</param>
<param name="tileWidth">Deep Zoom 图像中图块的宽度。</param>
<param name="tileHeight">Deep Zoom 图像中图块的高度。</param>
<param name="tileOverlap">Deep Zoom 图像中图块的重叠程度。</param>
<exception cref="T:System.ArgumentException">一个或多个参数无效。</exception>
    </member>
    <member name="M:System.Windows.Media.MultiScaleTileSource.GetTileLayers(System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList{System.Object})">
<summary>获取构成 Deep Zoom 图像的 URI 的集合。</summary>
<param name="tileLevel">图块的级别。</param>
<param name="tilePositionX">图块的 X 坐标位置。</param>
<param name="tilePositionY">图块的 Y 坐标位置。</param>
<param name="tileImageLayerSources">图块图像层的源，即为 URI 的集合。</param>
    </member>
    <member name="M:System.Windows.Media.MultiScaleTileSource.InvalidateTileLayer(System.Int32,System.Int32,System.Int32,System.Int32)">
<summary>使指定的图块层无效。</summary>
<param name="level">图块级别。</param>
<param name="tilePositionX">图块的 X 位置。</param>
<param name="tilePositionY">图块的 Y 位置。</param>
<param name="tileLayer">图块的层。</param>
    </member>
    <member name="P:System.Windows.Media.MultiScaleTileSource.TileBlendTime">
<summary>获取或设置当图块在新的详细信息级别可用时混合该级别所用的时间量。</summary>
<returns>图块在新的详细信息级别可用时混合该级别所用的时间量。</returns>
    </member>
    <member name="T:System.Windows.Media.PathFigure">
<summary>表示几何图形的一个子部分、一系列单独连接的二维几何线段。 </summary>
    </member>
    <member name="M:System.Windows.Media.PathFigure.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.PathFigure"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.PathFigure.IsClosed">
<summary>获取或设置一个值，该值指示是否连接该图形的第一条线段和最后一条线段。</summary>
<returns>如果该图形的第一条线段和最后一条线段连接，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.IsClosedProperty">
<summary>标识 <see cref="P:System.Windows.Media.PathFigure.IsClosed"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.PathFigure.IsClosed"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PathFigure.IsFilled">
<summary>获取或设置一个值，该值指示此 <see cref="T:System.Windows.Media.PathFigure"/> 的包含区域是否用于命中测试、呈现和剪辑。  </summary>
<returns>如果此 <see cref="T:System.Windows.Media.PathFigure"/> 的包含区域要用于命中测试、呈现和剪辑，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.IsFilledProperty">
<summary>标识 <see cref="P:System.Windows.Media.PathFigure.IsFilled"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.PathFigure.IsFilled"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PathFigure.Segments">
<summary>获取或设置线段集合，这些线段定义该 <see cref="T:System.Windows.Media.PathFigure"/> 对象的形状。 </summary>
<returns>定义该 <see cref="T:System.Windows.Media.PathFigure"/> 对象形状的线段集合。默认值为空集合。</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.SegmentsProperty">
<summary>标识 <see cref="P:System.Windows.Media.PathFigure.Segments"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.PathFigure.Segments"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PathFigure.StartPoint">
<summary>获取或设置 <see cref="T:System.Windows.Media.PathFigure"/> 开始处的 <see cref="T:System.Windows.Point"/>。 </summary>
<returns><see cref="T:System.Windows.Media.PathFigure"/> 开始处的 <see cref="T:System.Windows.Point"/>。默认值是值为 0,0 的 <see cref="T:System.Windows.Point"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.StartPointProperty">
<summary>标识 <see cref="P:System.Windows.Media.PathFigure.StartPoint"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.PathFigure.StartPoint"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.PathFigureCollection">
<summary>表示 <see cref="T:System.Windows.Media.PathFigure"/> 对象的集合，这些对象共同构成了 <see cref="T:System.Windows.Media.PathGeometry"/> 的几何图形。 </summary>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.PathFigureCollection"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.PathGeometry">
<summary>表示一个可能由弧、曲线、椭圆、直线和矩形组成的复杂形状。 </summary>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.PathGeometry"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.PathGeometry.Figures">
<summary>获取或设置 <see cref="T:System.Windows.Media.PathFigure"/> 对象的集合，这些对象描述路径的内容。 </summary>
<returns><see cref="T:System.Windows.Media.PathFigure"/> 对象的集合，这些对象描述路径的内容。每个单独的 <see cref="T:System.Windows.Media.PathFigure"/> 描述一个形状。</returns>
    </member>
    <member name="F:System.Windows.Media.PathGeometry.FiguresProperty">
<summary>标识 <see cref="P:System.Windows.Media.PathGeometry.Figures"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.PathGeometry.Figures"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PathGeometry.FillRule">
<summary>获取或设置一个值，该值确定如何组合 <see cref="T:System.Windows.Media.PathGeometry"/> 中包含的相交区域。 </summary>
<returns>一个 <see cref="T:System.Windows.Media.FillRule"/> 枚举值，该值指示如何组合 <see cref="T:System.Windows.Media.PathGeometry"/> 的相交区域。默认值为 <see cref="F:System.Windows.Media.FillRule.EvenOdd"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.PathGeometry.FillRuleProperty">
<summary>标识 <see cref="P:System.Windows.Media.PathGeometry.FillRule"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.PathGeometry.FillRule"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.ToString">
<summary>返回此 <see cref="T:System.Windows.Media.PathGeometry"/> 的字符串表示形式。</summary>
<returns>此 <see cref="T:System.Windows.Media.PathGeometry"/> 的字符串表示形式。</returns>
    </member>
    <member name="T:System.Windows.Media.PathSegment">
<summary>表示 <see cref="T:System.Windows.Media.PathFigure"/> 对象的一段。</summary>
    </member>
    <member name="T:System.Windows.Media.PathSegmentCollection">
<summary>表示可按照索引单独访问的 <see cref="T:System.Windows.Media.PathSegment"/> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.PathSegmentCollection"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.PenLineCap">
<summary>描述直线或线段末端的形状。 </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Flat">
<summary>一个未超出直线上最后一点的线帽。等同于无线帽。</summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Square">
<summary>一个高度等于直线粗细、长度等于直线粗细一半的矩形。 </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Round">
<summary>一个直径等于直线粗细的半圆形。 </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Triangle">
<summary>一个底边长度等于直线粗细的等腰直角三角形。 </summary>
    </member>
    <member name="T:System.Windows.Media.PenLineJoin">
<summary>描述联接两条线或线段的形状。 </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineJoin.Miter">
<summary>线条联接使用常规角顶点。 </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineJoin.Bevel">
<summary>线条联接使用斜角顶点。 </summary>
    </member>
    <member name="F:System.Windows.Media.PenLineJoin.Round">
<summary>线条联接使用圆角顶点。 </summary>
    </member>
    <member name="T:System.Windows.Media.PixelFormatType">
<summary>描述报告视频格式的各像素图形格式的格式信息。</summary>
    </member>
    <member name="F:System.Windows.Media.PixelFormatType.Unknown">
<summary>格式未知。</summary>
    </member>
    <member name="F:System.Windows.Media.PixelFormatType.Format32bppArgb">
<summary>这种格式在每个像素上使用 32 位颜色信息，并使用 alpha、红色、蓝色和绿色通道来报告颜色信息。</summary>
    </member>
    <member name="F:System.Windows.Media.PixelFormatType.Format8bppGrayscale">
<summary>该格式使用 8 位/像素灰度颜色。</summary>
    </member>
    <member name="T:System.Windows.Media.PlaneProjection">
<summary>表示对象的透视转换（类似三维效果）。</summary>
    </member>
    <member name="M:System.Windows.Media.PlaneProjection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.PlaneProjection"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.CenterOfRotationX">
<summary>获取或设置所旋转对象的旋转中心 X 坐标。 </summary>
<returns>所旋转对象的旋转中心 X 坐标。典型值介于 0 和 1 之间，值为 0 对应于对象的一个边缘，值为 1 对应于相对边缘。允许使用超出此范围的值，此时将相应移动旋转中心。默认值为 0.5（对象的中心）。 </returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.CenterOfRotationXProperty">
<summary>标识 <see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationX"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.CenterOfRotationY">
<summary>获取或设置所旋转对象的旋转中心 Y 坐标。</summary>
<returns>所旋转对象的旋转中心的 y 坐标。典型值介于 0 和 1 之间，值为 0 对应于对象的一个边缘，值为 1 对应于相对边缘。允许使用超出此范围的值，此时将相应移动旋转中心。默认值为 0.5（对象的中心）。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.CenterOfRotationYProperty">
<summary>标识 <see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationY"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.CenterOfRotationZ">
<summary>获取或设置所旋转对象的旋转中心 Z 坐标。</summary>
<returns>所旋转对象的旋转中心 Z 坐标。默认值为 0。值大于 0 对应于高于对象平面的坐标，负值对应于低于对象平面的坐标。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.CenterOfRotationZProperty">
<summary>标识 <see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationZ"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationZ"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.GlobalOffsetX">
<summary>获取或设置沿屏幕的 X 轴平移对象的距离。 </summary>
<returns>沿屏幕的 X 轴平移对象的距离。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.GlobalOffsetXProperty">
<summary>标识 <see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetX"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.GlobalOffsetY">
<summary>获取或设置沿屏幕的 Y 轴平移对象的距离。 </summary>
<returns>沿屏幕的 Y 轴平移对象的距离。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.GlobalOffsetYProperty">
<summary>标识 <see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetY"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.GlobalOffsetZ">
<summary>获取或设置沿屏幕的 Z 轴平移对象的距离。</summary>
<returns>沿屏幕的 Z 轴平移对象的距离。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.GlobalOffsetZProperty">
<summary>标识 <see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetZ"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetZ"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.LocalOffsetX">
<summary>获取或设置沿对象平面的 X 轴平移对象的距离。 </summary>
<returns>沿对象平面的 X 轴平移对象的距离。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.LocalOffsetXProperty">
<summary>标识 <see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetX"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.LocalOffsetY">
<summary>获取或设置沿对象平面的 Y 轴平移对象的距离。</summary>
<returns>沿对象平面的 Y 轴平移对象的距离。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.LocalOffsetYProperty">
<summary>标识 <see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetY"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.LocalOffsetZ">
<summary>获取或设置沿对象平面的 Z 轴平移对象的距离。</summary>
<returns>沿对象平面的 Z 轴平移对象的距离。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.LocalOffsetZProperty">
<summary>标识 <see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetZ"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetZ"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.ProjectionMatrix">
<summary>获取 <see cref="T:System.Windows.Media.PlaneProjection"/> 的投影矩阵。</summary>
<returns><see cref="T:System.Windows.Media.PlaneProjection"/> 的投影矩阵。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.ProjectionMatrixProperty">
<summary>标识 <see cref="P:System.Windows.Media.PlaneProjection.ProjectionMatrix"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.PlaneProjection.ProjectionMatrix"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.RotationX">
<summary>获取或设置围绕旋转的 X 轴旋转对象的角度。</summary>
<returns>围绕旋转的 X 轴旋转对象的角度。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.RotationXProperty">
<summary>标识 <see cref="P:System.Windows.Media.PlaneProjection.RotationX"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.PlaneProjection.RotationX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.RotationY">
<summary>获取或设置围绕旋转的 Y 轴旋转对象的角度。</summary>
<returns>围绕旋转的 Y 轴旋转对象的角度。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.RotationYProperty">
<summary>标识 <see cref="P:System.Windows.Media.PlaneProjection.RotationY"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.PlaneProjection.RotationY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.RotationZ">
<summary>获取或设置围绕旋转的 Z 轴旋转对象的角度。</summary>
<returns>围绕旋转的 Z 轴旋转对象的角度。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.RotationZProperty">
<summary>标识 <see cref="P:System.Windows.Media.PlaneProjection.RotationZ"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.PlaneProjection.RotationZ"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.PointCollection">
<summary>表示可按照索引单独访问的 <see cref="T:System.Windows.Point"/> 值的集合。</summary>
    </member>
    <member name="M:System.Windows.Media.PointCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.PointCollection"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.PolyBezierSegment">
<summary>表示一条或多条三次方贝塞尔曲线。</summary>
    </member>
    <member name="M:System.Windows.Media.PolyBezierSegment.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.PolyBezierSegment"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.PolyBezierSegment.Points">
<summary>获取或设置定义此 <see cref="T:System.Windows.Media.PolyBezierSegment"/> 对象的 <see cref="T:System.Windows.Media.PointCollection"/>。  </summary>
<returns>定义该 <see cref="T:System.Windows.Media.PolyBezierSegment"/> 对象的点集合。</returns>
    </member>
    <member name="F:System.Windows.Media.PolyBezierSegment.PointsProperty">
<summary>标识 <see cref="P:System.Windows.Media.PolyBezierSegment.Points"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.PolyBezierSegment.Points"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.PolyLineSegment">
<summary>‎‎表示由 <see cref="T:System.Windows.Media.PointCollection"/> 定义的线段集合，每个 <see cref="T:System.Windows.Point"/> 指定线段的终点。 </summary>
    </member>
    <member name="M:System.Windows.Media.PolyLineSegment.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.PolyLineSegment"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.PolyLineSegment.Points">
<summary>获取或设置 <see cref="T:System.Windows.Point"/> 值的集合，该集合定义了此 <see cref="T:System.Windows.Media.PolyLineSegment"/> 对象。 </summary>
<returns>定义此 <see cref="T:System.Windows.Media.PolyLineSegment"/> 对象的点。</returns>
    </member>
    <member name="F:System.Windows.Media.PolyLineSegment.PointsProperty">
<summary>标识 <see cref="P:System.Windows.Media.PolyLineSegment.Points"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.PolyLineSegment.Points"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.PolyQuadraticBezierSegment">
<summary>表示一系列二次贝塞尔线段。 </summary>
    </member>
    <member name="M:System.Windows.Media.PolyQuadraticBezierSegment.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.PolyQuadraticBezierSegment"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.PolyQuadraticBezierSegment.Points">
<summary>获取或设置定义此 <see cref="T:System.Windows.Media.PolyQuadraticBezierSegment"/> 对象的 <see cref="T:System.Windows.Media.PointCollection"/>。 </summary>
<returns>点的集合，用于定义此 <see cref="T:System.Windows.Media.PolyQuadraticBezierSegment"/> 对象的形状。默认值是一个空集合。</returns>
    </member>
    <member name="F:System.Windows.Media.PolyQuadraticBezierSegment.PointsProperty">
<summary>标识 <see cref="P:System.Windows.Media.PolyQuadraticBezierSegment.Points"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.PolyQuadraticBezierSegment.Points"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Projection">
<summary>为投影提供基类，投影描述如何使用透视转换来转换 3-D 空间中的对象。</summary>
    </member>
    <member name="M:System.Windows.Media.Projection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Projection"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.QuadraticBezierSegment">
<summary>在 <see cref="T:System.Windows.Media.PathFigure"/> 的两点之间创建一条二次贝塞尔曲线。 </summary>
    </member>
    <member name="M:System.Windows.Media.QuadraticBezierSegment.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.QuadraticBezierSegment"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.QuadraticBezierSegment.Point1">
<summary>获取或设置曲线的控制点。 </summary>
<returns>此 <see cref="T:System.Windows.Media.QuadraticBezierSegment"/> 的控制点。默认值是值为 0,0 的 <see cref="T:System.Windows.Point"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.QuadraticBezierSegment.Point1Property">
<summary>标识 <see cref="P:System.Windows.Media.QuadraticBezierSegment.Point1"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.QuadraticBezierSegment.Point1"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.QuadraticBezierSegment.Point2">
<summary>获取或设置此 <see cref="T:System.Windows.Media.QuadraticBezierSegment"/> 的终 <see cref="T:System.Windows.Point"/>。 </summary>
<returns>此 <see cref="T:System.Windows.Media.QuadraticBezierSegment"/> 的终点。默认值是值为 0,0 的 <see cref="T:System.Windows.Point"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.QuadraticBezierSegment.Point2Property">
<summary>标识 <see cref="P:System.Windows.Media.QuadraticBezierSegment.Point2"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.QuadraticBezierSegment.Point2"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.RadialGradientBrush">
<summary>使用径向渐变绘制区域。焦点定义渐变的开始，而圆定义渐变的终点。 </summary>
    </member>
    <member name="M:System.Windows.Media.RadialGradientBrush.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.RadialGradientBrush"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Media.RadialGradientBrush.#ctor(System.Windows.Media.Color,System.Windows.Media.Color)">
<summary>使用指定的起点和终点颜色初始化 <see cref="T:System.Windows.Media.RadialGradientBrush"/> 类的新实例。 </summary>
<param name="startColor">径向渐变的焦点 (<see cref="P:System.Windows.Media.RadialGradientBrush.GradientOrigin"/>) 处的颜色值。</param>
<param name="endColor">径向渐变的外边缘处的颜色值。</param>
    </member>
    <member name="M:System.Windows.Media.RadialGradientBrush.#ctor(System.Windows.Media.GradientStopCollection)">
<summary>初始化 <see cref="T:System.Windows.Media.RadialGradientBrush"/> 类的新实例，该实例具有指定的渐变停止点。 </summary>
<param name="gradientStopCollection">要在此画笔上设置的渐变停止点。</param>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.Center">
<summary>获取或设置径向渐变外部圆的圆心。 </summary>
<returns>位于径向渐变中心处的二维点。默认值是值为 0.5,0.5 的 <see cref="T:System.Windows.Point"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.CenterProperty">
<summary>标识 <see cref="P:System.Windows.Media.RadialGradientBrush.Center"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.RadialGradientBrush.Center"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.GradientOrigin">
<summary>获取或设置定义渐变开始的焦点的位置。 </summary>
<returns>位于径向渐变中心处的二维点。默认值是值为 0.5,0.5 的 <see cref="T:System.Windows.Point"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.GradientOriginProperty">
<summary>标识 <see cref="P:System.Windows.Media.RadialGradientBrush.GradientOrigin"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.RadialGradientBrush.GradientOrigin"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.RadiusX">
<summary>获取或设置径向渐变的外部圆的水平半径。 </summary>
<returns>径向渐变最外面的圆的水平半径。默认值为 0.5。</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.RadiusXProperty">
<summary>标识 <see cref="P:System.Windows.Media.RadialGradientBrush.RadiusX"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.RadialGradientBrush.RadiusX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.RadiusY">
<summary>获取或设置径向渐变的外部圆的垂直半径。 </summary>
<returns>径向渐变的外部圆的垂直半径。默认值为 0.5。</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.RadiusYProperty">
<summary>标识 <see cref="P:System.Windows.Media.RadialGradientBrush.RadiusY"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.RadialGradientBrush.RadiusY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.RateChangedRoutedEventArgs">
<summary>为 <see cref="E:System.Windows.Controls.MediaElement.RateChanged"/> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Media.RateChangedRoutedEventArgs.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.RateChangedRoutedEventArgs"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.RateChangedRoutedEventArgs.NewRate">
<summary>获取新速度</summary>
<returns>新速度。</returns>
    </member>
    <member name="T:System.Windows.Media.RateChangedRoutedEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.Controls.MediaElement.RateChanged"/> 的方法。</summary>
    </member>
    <member name="T:System.Windows.Media.RectangleGeometry">
<summary>描述二维矩形这一几何图形。 </summary>
    </member>
    <member name="M:System.Windows.Media.RectangleGeometry.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.RectangleGeometry"/> 类的新实例，并创建零区域的矩形。 </summary>
    </member>
    <member name="P:System.Windows.Media.RectangleGeometry.RadiusX">
<summary>获取或设置用于使矩形的角变圆的椭圆的 x 半径。</summary>
<returns>用于使矩形几何图形的角变圆的椭圆的 x 半径。默认值为 0。 </returns>
    </member>
    <member name="F:System.Windows.Media.RectangleGeometry.RadiusXProperty">
<summary>标识 <see cref="P:System.Windows.Media.RectangleGeometry.RadiusX"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.RectangleGeometry.RadiusX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.RectangleGeometry.RadiusY">
<summary>获取或设置用于使矩形的角变圆的椭圆的 y 半径。  </summary>
<returns>用于使矩形几何图形的角变圆的椭圆的 y 半径。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.RectangleGeometry.RadiusYProperty">
<summary>标识 <see cref="P:System.Windows.Media.RectangleGeometry.RadiusY"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.RectangleGeometry.RadiusY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.RectangleGeometry.Rect">
<summary>获取或设置矩形的尺寸。 </summary>
<returns>描述椭矩形的位置和大小的 <see cref="T:System.Windows.Rect"/> 结构。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.RectangleGeometry.RectProperty">
<summary>标识 <see cref="P:System.Windows.Media.RectangleGeometry.Rect"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.RectangleGeometry.Rect"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.RenderingEventArgs">
<summary>为 <see cref="E:System.Windows.Media.CompositionTarget.Rendering"/> 事件提供事件数据。</summary>
    </member>
    <member name="P:System.Windows.Media.RenderingEventArgs.RenderingTime">
<summary>获取呈现帧时的日期/时间。</summary>
<returns>呈现帧时的日期/时间。</returns>
    </member>
    <member name="T:System.Windows.Media.RotateTransform">
<summary>在二维 x-y 坐标系内围绕指定点顺时针旋转对象。 </summary>
    </member>
    <member name="M:System.Windows.Media.RotateTransform.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.RotateTransform"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.RotateTransform.Angle">
<summary>获取或设置顺时针旋转角度（以度为单位）。</summary>
<returns>顺时针旋转角度，以度为单位。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.RotateTransform.AngleProperty">
<summary>标识 <see cref="P:System.Windows.Media.RotateTransform.Angle"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.RotateTransform.Angle"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.RotateTransform.CenterX">
<summary>获取或设置旋转中心点的 x 坐标。</summary>
<returns>旋转中心的 x 坐标。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.RotateTransform.CenterXProperty">
<summary>标识 <see cref="P:System.Windows.Media.RotateTransform.CenterX"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.RotateTransform.CenterX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.RotateTransform.CenterY">
<summary>获取或设置旋转中心点的 y 坐标。 </summary>
<returns>旋转中心的 y 坐标。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.RotateTransform.CenterYProperty">
<summary>标识 <see cref="P:System.Windows.Media.RotateTransform.CenterY"/> 依赖项属性。</summary>
    </member>
    <member name="T:System.Windows.Media.ScaleTransform">
<summary>在二维 x-y 坐标系内缩放对象。 </summary>
    </member>
    <member name="M:System.Windows.Media.ScaleTransform.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.ScaleTransform"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.CenterX">
<summary>获取或设置此 <see cref="T:System.Windows.Media.ScaleTransform"/> 的中心点的 x 坐标。 </summary>
<returns>此 <see cref="T:System.Windows.Media.ScaleTransform"/> 的中心点的 x 坐标。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.CenterXProperty">
<summary>标识 <see cref="P:System.Windows.Media.ScaleTransform.CenterX"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.ScaleTransform.CenterX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.CenterY">
<summary>获取或设置此 <see cref="T:System.Windows.Media.ScaleTransform"/> 的中心点的 y 坐标。</summary>
<returns>此 <see cref="T:System.Windows.Media.ScaleTransform"/> 的中心点的 y 坐标。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.CenterYProperty">
<summary>标识 <see cref="P:System.Windows.Media.ScaleTransform.CenterY"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.ScaleTransform.CenterY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.ScaleX">
<summary>获取或设置 x 轴的缩放比例。</summary>
<returns>x 轴的缩放比例。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.ScaleXProperty">
<summary>标识 <see cref="P:System.Windows.Media.ScaleTransform.ScaleX"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.ScaleTransform.ScaleX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.ScaleY">
<summary>获取或设置 y 轴的缩放比例。</summary>
<returns>y 轴的缩放比例。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.ScaleYProperty">
<summary>标识 <see cref="P:System.Windows.Media.ScaleTransform.ScaleY"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.ScaleTransform.ScaleY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.SkewTransform">
<summary>表示二维扭曲。 </summary>
    </member>
    <member name="M:System.Windows.Media.SkewTransform.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.SkewTransform"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.AngleX">
<summary>获取或设置 x 轴扭曲角度，该角度从 y 轴开始沿逆时针方向测量，以度为单位。 </summary>
<returns>扭曲角度，该角度从 y 轴开始沿逆时针方向测量，以度为单位。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.AngleXProperty">
<summary>标识 <see cref="P:System.Windows.Media.SkewTransform.AngleX"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.SkewTransform.AngleX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.AngleY">
<summary>获取或设置 y 轴扭曲角度，该角度从 x 轴开始沿逆时针方向测量，以度为单位。</summary>
<returns>扭曲角度，该角度从 x 轴开始沿逆时针方向测量，以度为单位。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.AngleYProperty">
<summary>标识 <see cref="P:System.Windows.Media.SkewTransform.AngleY"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.SkewTransform.AngleY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.CenterX">
<summary>获取或设置变换中心的 x 坐标。 </summary>
<returns>变换中心的 x 坐标。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.CenterXProperty">
<summary>标识 <see cref="P:System.Windows.Media.SkewTransform.CenterX"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.SkewTransform.CenterX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.CenterY">
<summary>获取或设置变换中心的 y 坐标。</summary>
<returns>变换中心的 y 坐标。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.CenterYProperty">
<summary>标识 <see cref="P:System.Windows.Media.SkewTransform.CenterY"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.SkewTransform.CenterY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.SolidColorBrush">
<summary>使用纯色绘制区域。 </summary>
    </member>
    <member name="M:System.Windows.Media.SolidColorBrush.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.SolidColorBrush"/> 类的新实例，但不使用任何颜色。 </summary>
    </member>
    <member name="M:System.Windows.Media.SolidColorBrush.#ctor(System.Windows.Media.Color)">
<summary>使用指定的 <see cref="T:System.Windows.Media.Color"/> 初始化 <see cref="T:System.Windows.Media.SolidColorBrush"/> 类的新实例。 </summary>
<param name="color">要应用于画笔的颜色。</param>
    </member>
    <member name="P:System.Windows.Media.SolidColorBrush.Color">
<summary>获取或设置此 <see cref="T:System.Windows.Media.SolidColorBrush"/> 的颜色。</summary>
<returns>画笔的颜色。默认值为 <see cref="P:System.Windows.Media.Colors.Transparent"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.SolidColorBrush.ColorProperty">
<summary>标识 <see cref="P:System.Windows.Media.SolidColorBrush.Color"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.SolidColorBrush.Color"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Stretch">
<summary>描述如何调整内容的大小以填充为其分配的空间。</summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.None">
<summary>内容保持其原始大小。 </summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.Fill">
<summary>调整内容的大小以填充目标尺寸。不保留纵横比。 </summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.Uniform">
<summary>在保留内容原有纵横比的同时调整内容的大小，以适合目标尺寸。 </summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.UniformToFill">
<summary>在保留内容原有纵横比的同时调整内容的大小，以填充目标尺寸。如果目标矩形的纵横比不同于源矩形的纵横比，则对源内容进行剪裁以适合目标尺寸。</summary>
    </member>
    <member name="T:System.Windows.Media.StyleSimulations">
<summary>描述字体的模拟样式。</summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.None">
<summary>无字体样式模拟。 </summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.BoldSimulation">
<summary>粗体样式模拟。 </summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.ItalicSimulation">
<summary>斜体样式模拟。 </summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.BoldItalicSimulation">
<summary>粗体和斜体样式模拟。 </summary>
    </member>
    <member name="T:System.Windows.Media.SweepDirection">
<summary>指定椭圆弧的绘制方向。</summary>
    </member>
    <member name="F:System.Windows.Media.SweepDirection.Counterclockwise">
<summary>圆弧是按逆时针（负角）方向绘制的。</summary>
    </member>
    <member name="F:System.Windows.Media.SweepDirection.Clockwise">
<summary>圆弧是按顺时针（正角）方向绘制的。</summary>
    </member>
    <member name="T:System.Windows.Media.TextHintingMode">
<summary>指定是对文本呈现进行优化以提高可读性还是用于动态展示。</summary>
    </member>
    <member name="F:System.Windows.Media.TextHintingMode.Fixed">
<summary>默认文本呈现模式。</summary>
    </member>
    <member name="F:System.Windows.Media.TextHintingMode.Animated">
<summary>关闭文本呈现优化。</summary>
    </member>
    <member name="T:System.Windows.Media.TextOptions">
<summary>提供用于控制文本的呈现行为的选项，这些选项可以通过很多 Silverlight 类型的附加属性用法来设置。</summary>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextHintingMode(System.Windows.FrameworkElement)">
<summary>获取此 <see cref="T:System.Windows.FrameworkElement"/> 的 <see cref="T:System.Windows.Media.TextHintingMode"/>。</summary>
<returns>此 <see cref="T:System.Windows.FrameworkElement"/> 的 <see cref="T:System.Windows.Media.TextHintingMode"/>。</returns>
<param name="target">用于打开此属性的 <see cref="T:System.Windows.FrameworkElement"/>。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="target"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextHintingMode(System.Windows.FrameworkElement,System.Windows.Media.TextHintingMode)">
<summary>设置此 <see cref="T:System.Windows.FrameworkElement"/> 的 <see cref="T:System.Windows.Media.TextHintingMode"/>。</summary>
<param name="target">用于将此属性设置为打开的 <see cref="T:System.Windows.FrameworkElement"/>。</param>
<param name="textHintingMode">要将 <see cref="T:System.Windows.FrameworkElement"/> 设置成的 <see cref="T:System.Windows.Media.TextHintingMode"/>。</param>
<exception cref="T:System.ArgumentNullException"><paramref name="target"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextHintingMode">
<summary>获取或设置一个值，该值指示是对文本呈现进行优化以提高可读性还是用于动画。</summary>
<returns>一个值，该值指示是对文本呈现进行优化以提高可读性还是用于动画。</returns>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextHintingModeProperty">
<summary>标识 <see cref="P:System.Windows.Media.TextOptions.TextHintingMode"/> 附加属性。</summary>
<returns><see cref="P:System.Windows.Media.TextOptions.TextHintingMode"/> 附加属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.TileBrush">
<summary>描述绘制区域的方法的基类。 </summary>
    </member>
    <member name="M:System.Windows.Media.TileBrush.#ctor">
<summary>在由派生类的构造函数调用时，提供基类值的初始化。  </summary>
    </member>
    <member name="P:System.Windows.Media.TileBrush.AlignmentX">
<summary>获取或设置 <see cref="T:System.Windows.Media.TileBrush"/> 基本图块中内容的水平对齐。 </summary>
<returns>一个值，指定 <see cref="T:System.Windows.Media.TileBrush"/> 内容在其基本图块中的水平位置。默认值为 <see cref="F:System.Windows.Media.AlignmentX.Center"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.AlignmentXProperty">
<summary>标识 <see cref="P:System.Windows.Media.TileBrush.AlignmentX"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.TileBrush.AlignmentX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.TileBrush.AlignmentY">
<summary>获取或设置 <see cref="T:System.Windows.Media.TileBrush"/> 基本图块中内容的垂直对齐。 </summary>
<returns>一个值，指定 <see cref="T:System.Windows.Media.TileBrush"/> 内容在其基本图块中的垂直位置。默认值为 <see cref="F:System.Windows.Media.AlignmentY.Center"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.AlignmentYProperty">
<summary>标识 <see cref="P:System.Windows.Media.TileBrush.AlignmentY"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.TileBrush.AlignmentY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.TileBrush.Stretch">
<summary>获取或设置一个值，该值指定此 <see cref="T:System.Windows.Media.TileBrush"/> 的内容如何拉伸以适合其图块。</summary>
<returns>一个值，指定此 <see cref="T:System.Windows.Media.TileBrush"/> 内容如何投影到其基本图块上。默认值为 <see cref="F:System.Windows.Media.Stretch.Fill"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.StretchProperty">
<summary>标识 <see cref="P:System.Windows.Media.TileBrush.Stretch"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.TileBrush.Stretch"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.TimelineMarker">
<summary>表示与媒体文件中的特定点关联的元数据。</summary>
    </member>
    <member name="M:System.Windows.Media.TimelineMarker.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.TimelineMarker"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.TimelineMarker.Text">
<summary>获取或设置 <see cref="T:System.Windows.Media.TimelineMarker"/> 的文本值。</summary>
<returns><see cref="T:System.Windows.Media.TimelineMarker"/> 的文本值。默认值为空字符串。</returns>
    </member>
    <member name="F:System.Windows.Media.TimelineMarker.TextProperty">
<summary>标识 <see cref="P:System.Windows.Media.TimelineMarker.Text"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.TimelineMarker.Text"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.TimelineMarker.Time">
<summary>获取或设置到达 <see cref="T:System.Windows.Media.TimelineMarker"/> 的时间。</summary>
<returns>到达 TimelineMarker 的时间。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.TimelineMarker.TimeProperty">
<summary>标识 <see cref="P:System.Windows.Media.TimelineMarker.Time"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.TimelineMarker.Time"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.TimelineMarker.Type">
<summary>获取或设置 <see cref="T:System.Windows.Media.TimelineMarker"/> 的标记类型。</summary>
<returns>一个字符串，描述此 TimelineMarker 的类型。默认值为空字符串。</returns>
    </member>
    <member name="F:System.Windows.Media.TimelineMarker.TypeProperty">
<summary>标识 <see cref="P:System.Windows.Media.TimelineMarker.Type"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.TimelineMarker.Type"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.TimelineMarkerCollection">
<summary>表示可按照索引单独访问的 <see cref="T:System.Windows.Media.TimelineMarker"/> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.Media.TimelineMarkerCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.TimelineMarkerCollection"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.TimelineMarkerRoutedEventArgs">
<summary>为 <see cref="E:System.Windows.Controls.MediaElement.MarkerReached"/> 事件提供事件数据。</summary>
    </member>
    <member name="M:System.Windows.Media.TimelineMarkerRoutedEventArgs.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.TimelineMarkerRoutedEventArgs"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.TimelineMarkerRoutedEventArgs.Marker">
<summary>获取触发了此事件的 <see cref="T:System.Windows.Media.TimelineMarker"/>。</summary>
<returns>触发了该事件的 <see cref="T:System.Windows.Media.TimelineMarker"/>。</returns>
    </member>
    <member name="T:System.Windows.Media.TimelineMarkerRoutedEventHandler">
<summary>表示将处理与时间线标记有关的各种路由事件的方法。</summary>
<param name="sender">事件处理程序所附加到的对象。</param>
<param name="e">事件数据。 </param>
    </member>
    <member name="T:System.Windows.Media.Transform">
<summary>定义实现二维平面中的变换的功能。 </summary>
    </member>
    <member name="P:System.Windows.Media.Transform.Inverse">
<summary>获取此变换的逆变换（如果存在）。</summary>
<returns>此变换的逆变换（如果存在）；否则为 null。</returns>
    </member>
    <member name="M:System.Windows.Media.Transform.TransformBounds(System.Windows.Rect)">
<summary>变换指定的边界框，并返回一个正好能容纳它的轴对齐的边界框。</summary>
<returns>能容纳所变换的 <paramref name="rect"/> 的最小轴对齐边界框。</returns>
<param name="rect">要变换的边界框。</param>
    </member>
    <member name="M:System.Windows.Media.Transform.TryTransform(System.Windows.Point,System.Windows.Point@)">
<summary>尝试变换指定的点，并返回指示变换是否成功的值。</summary>
<returns>如果 <paramref name="inPoint"/> 已变换，则为 true；否则为 false。</returns>
<param name="inPoint">要变换的点。</param>
<param name="outPoint">变换 <paramref name="inPoint"/> 的结果。</param>
    </member>
    <member name="T:System.Windows.Media.TransformCollection">
<summary>表示可按照索引单独访问的 <see cref="T:System.Windows.Media.Transform"/> 对象的集合。 </summary>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.TransformCollection"/> 类的新实例。 </summary>
    </member>
    <member name="T:System.Windows.Media.TransformGroup">
<summary>表示由其他 <see cref="T:System.Windows.Media.Transform"/> 对象组成的复合 <see cref="T:System.Windows.Media.Transform"/>。 </summary>
    </member>
    <member name="M:System.Windows.Media.TransformGroup.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.TransformGroup"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.TransformGroup.Children">
<summary>获取或设置子 <see cref="T:System.Windows.Media.Transform"/> 对象的集合。</summary>
<returns>子 <see cref="T:System.Windows.Media.Transform"/> 对象的集合。默认值为空集合。 </returns>
    </member>
    <member name="F:System.Windows.Media.TransformGroup.ChildrenProperty">
<summary>标识 <see cref="P:System.Windows.Media.TransformGroup.Children"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.TransformGroup.Children"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.TransformGroup.Value">
<summary>获取 <see cref="T:System.Windows.Media.Matrix"/> 结构，该结构描述由此 <see cref="T:System.Windows.Media.TransformGroup"/> 表示的变换。</summary>
<returns>此 <see cref="T:System.Windows.Media.TransformGroup"/> 中 <see cref="T:System.Windows.Media.Transform"/> 对象的复合。</returns>
    </member>
    <member name="T:System.Windows.Media.TranslateTransform">
<summary>在二维 x-y 坐标系内平移（移动）对象。 </summary>
    </member>
    <member name="M:System.Windows.Media.TranslateTransform.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.TranslateTransform"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.TranslateTransform.X">
<summary>获取或设置沿 x 轴平移的距离。</summary>
<returns>沿 x 轴平移（移动）对象的距离（以像素为单位）。此属性是可读/写的。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.TranslateTransform.XProperty">
<summary>标识 <see cref="P:System.Windows.Media.TranslateTransform.X"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.TranslateTransform.X"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.TranslateTransform.Y">
<summary>获取或设置沿 y 轴平移（移动）对象的距离。</summary>
<returns>沿 y 轴平移（移动）对象的距离（以像素为单位）。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.TranslateTransform.YProperty">
<summary>标识 <see cref="P:System.Windows.Media.TranslateTransform.Y"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.TranslateTransform.Y"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Typeface">
<summary>表示 <see cref="T:System.Windows.Media.FontFamily"/>、<see cref="T:System.Windows.FontWeight"/>、<see cref="T:System.Windows.FontStyle"/> 和 <see cref="T:System.Windows.FontStretch"/> 类的组合。</summary>
    </member>
    <member name="M:System.Windows.Media.Typeface.TryGetGlyphTypeface(System.Windows.Media.GlyphTypeface@)">
<summary>检索与 <see cref="T:System.Windows.Media.Typeface"/> 对应的 <see cref="T:System.Windows.Media.GlyphTypeface"/>。</summary>
<returns>如果将输出参数设置为 <see cref="T:System.Windows.Media.GlyphTypeface"/> 对象，则为 true；否则为 false。</returns>
<param name="glyphTypeface">与此字样对应的 <see cref="T:System.Windows.Media.GlyphTypeface"/> 对象；如果该字样是通过复合字体构造的，则为空引用（在 Visual Basic 中为 Nothing）。</param>
    </member>
    <member name="T:System.Windows.Media.Typography">
<summary>未实现。</summary>
    </member>
    <member name="T:System.Windows.Media.VideoBrush">
<summary>使用视频内容绘制一个区域。</summary>
    </member>
    <member name="M:System.Windows.Media.VideoBrush.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.VideoBrush"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.VideoBrush.SetSource(System.Windows.Controls.MediaElement)">
<summary>使用来自 <see cref="T:System.Windows.Controls.MediaElement"/> 中介控件的媒体文件源设置 <see cref="T:System.Windows.Media.VideoBrush"/> 的源。</summary>
<param name="source">用作 <see cref="T:System.Windows.Media.VideoBrush"/> 的源的 <see cref="T:System.Windows.Controls.MediaElement"/> 中介控件。</param>
    </member>
    <member name="M:System.Windows.Media.VideoBrush.SetSource(System.Windows.Media.CaptureSource)">
<summary>使用视频捕获源设置 <see cref="T:System.Windows.Media.VideoBrush"/> 的源。 </summary>
<param name="source">从 <see cref="T:System.Windows.Media.VideoSink"/> 之外的视频捕获获取的 <see cref="T:System.Windows.Media.CaptureSource"/>。</param>
    </member>
    <member name="P:System.Windows.Media.VideoBrush.SourceName">
<summary>获取或设置要用作 <see cref="T:System.Windows.Media.VideoBrush"/> 的源的 <see cref="T:System.Windows.Controls.MediaElement"/> 的名称。</summary>
<returns>要用作 <see cref="T:System.Windows.Media.VideoBrush"/> 的源的 <see cref="T:System.Windows.Controls.MediaElement"/> 的名称。</returns>
    </member>
    <member name="F:System.Windows.Media.VideoBrush.SourceNameProperty">
<summary>标识 <see cref="P:System.Windows.Media.VideoBrush.SourceName"/> 依赖项属性。</summary>
    </member>
    <member name="T:System.Windows.Media.VideoCaptureDevice">
<summary>描述视频捕获设备（如网络摄相机）需要的和支持的视频格式信息。</summary>
    </member>
    <member name="P:System.Windows.Media.VideoCaptureDevice.DesiredFormat">
<summary>获取或设置您需要的并且要在此视频捕获设备上使用的视频格式。</summary>
<returns>您需要的并且要在此视频捕获设备上使用的视频格式，是一个 <see cref="T:System.Windows.Media.VideoFormat"/> 对象。默认值为 null。在 Mac OSX 上，<see cref="P:System.Windows.Media.VideoCaptureDevice.SupportedFormats"/> 始终为空。若要设置 <see cref="P:System.Windows.Media.VideoCaptureDevice.DesiredFormat"/>，您可以实例化新的 <see cref="T:System.Windows.Media.VideoFormat"/> 对象且 <see cref="T:System.Windows.Media.PixelFormat"/> 为 <see cref="F:System.Windows.Media.PixelFormatType.Unknown"/>。</returns>
    </member>
    <member name="P:System.Windows.Media.VideoCaptureDevice.SupportedFormats">
<summary>获取此视频捕获设备支持的视频格式的泛型集合。</summary>
<returns><see cref="T:System.Windows.Media.VideoFormat"/> 对象的泛型集合，它表示此视频捕获设备支持的视频格式。在 Mac OSX 上，<see cref="P:System.Windows.Media.VideoCaptureDevice.SupportedFormats"/> 始终为空。若要设置 <see cref="P:System.Windows.Media.VideoCaptureDevice.DesiredFormat"/>，您可以实例化新的 <see cref="T:System.Windows.Media.VideoFormat"/> 对象且 <see cref="T:System.Windows.Media.PixelFormat"/> 为 <see cref="F:System.Windows.Media.PixelFormatType.Unknown"/>。</returns>
    </member>
    <member name="T:System.Windows.Media.VideoCaptureDeviceCollection">
<summary>指定 <see cref="T:System.Windows.Media.VideoCaptureDevice"/> 对象的集合。</summary>
    </member>
    <member name="T:System.Windows.Media.VideoFormat">
<summary>提供有关视频捕获设备使用的视频格式的特定技术信息。</summary>
    </member>
    <member name="M:System.Windows.Media.VideoFormat.#ctor(System.Windows.Media.PixelFormatType,System.Int32,System.Int32,System.Single)">
<summary>初始化 <see cref="T:System.Windows.Media.VideoFormat"/> 类的新实例。 </summary>
<param name="pixelFormat">初始 <see cref="P:System.Windows.Media.VideoFormat.PixelFormat"/> 值。</param>
<param name="width">初始 <see cref="P:System.Windows.Media.VideoFormat.PixelWidth"/> 值。</param>
<param name="height">初始 <see cref="P:System.Windows.Media.VideoFormat.PixelHeight"/> 值。</param>
<param name="framesPerSecond">初始 <see cref="P:System.Windows.Media.VideoFormat.FramesPerSecond"/> 值。</param>
    </member>
    <member name="P:System.Windows.Media.VideoFormat.FramesPerSecond">
<summary>获取所表示的视频格式的每秒帧数。</summary>
<returns>所表示的视频格式的每秒帧数。</returns>
    </member>
    <member name="P:System.Windows.Media.VideoFormat.PixelFormat">
<summary>获取视频格式的各像素的图形格式信息。</summary>
<returns>一个 <see cref="T:System.Windows.Media.PixelFormatType"/> 值，该值报告视频格式的各像素的格式。</returns>
    </member>
    <member name="P:System.Windows.Media.VideoFormat.PixelHeight">
<summary>获取所表示的视频格式的摄像机帧区域的高度。</summary>
<returns>所表示的视频格式的摄像机帧区域的高度（以像素为单位）。</returns>
    </member>
    <member name="P:System.Windows.Media.VideoFormat.PixelWidth">
<summary>获取所表示的视频格式的摄像机帧区域的宽度。</summary>
<returns>所表示的视频格式的摄像机帧区域的宽度（以像素为单位）。</returns>
    </member>
    <member name="P:System.Windows.Media.VideoFormat.Stride">
<summary>获取视频格式中使用的数组跨距。</summary>
<returns>视频格式中使用的数组跨距。</returns>
    </member>
    <member name="T:System.Windows.Media.VideoOutputConnector">
<summary>提供有关连接器类型的实际数据并且指定 Silverlight 可参与的输出保护方案。 </summary>
    </member>
    <member name="P:System.Windows.Media.VideoOutputConnector.CanEnableCgmsa">
<summary>获取一个值，该值指示此连接器是否支持 Copy Generation Management System—Analog，这是一个模拟复制管理系统。</summary>
<returns>一个值，该值指示此连接器是否支持 Copy Generation Management System—Analog，这是一个模拟复制管理系统。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.VideoOutputConnector.CanEnableHdcp">
<summary>获取一个值，该值指示此连接器是否可参与高带宽数字内容保护的输出保护方案。 </summary>
<returns>一个值，该值指示此连接器是否可参与高带宽数字内容保护的输出保护方案。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Media.VideoOutputConnector.ConnectorType">
<summary>获取输出设备与图形卡连接所使用的连接器类型。 </summary>
<returns>输出设备与图形卡连接所使用的连接器类型。默认值为 <see cref="F:System.Windows.Media.VideoOutputConnectorType.Other"/>。</returns>
    </member>
    <member name="T:System.Windows.Media.VideoOutputConnectorType">
<summary>定义通常可用的所有输出连接器类型。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Other">
<summary>未知的连接器类型。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Vga">
<summary>视频图形阵列 (VGA) 连接器。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.SVideo">
<summary>S-视频连接器。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.CompositeVideo">
<summary>复合视频连接器。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.ComponentVideo">
<summary>组件视频连接器。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Dvi">
<summary>数字视频接口 (DVI) 连接器。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Hdmi">
<summary>高分辨率多媒体界面 (HDMI) 连接器。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Llvds">
<summary>低压差分信号 (LVDS) 连接器。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Tmds">
<summary>TMDS 连接器。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.JapaneseDConnector">
<summary>日式 D 连接器，一种符合日本电子工业协会 (EIAJ) RC-5237 标准的连接器。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Sdi">
<summary>SDI（串行数字图像）连接器。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.DisplayPortExternal">
<summary>外部显示端口连接器。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.DisplayPortInternal">
<summary>嵌入式显示端口连接器。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.UdiExternal">
<summary>外部统一显示接口 (UDI)。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.UdiInternal">
<summary>嵌入式统一显示接口 (UDI)。</summary>
    </member>
    <member name="F:System.Windows.Media.VideoOutputConnectorType.Internal">
<summary>内部连接器。图形适配器与显示设备之间的连接是永久的且对用户不可用。</summary>
    </member>
    <member name="T:System.Windows.Media.VideoSink">
<summary>公开视频设备的捕获图形。从此类派生，以便接收视频信息以及通过 <see cref="P:System.Windows.Media.VideoSink.CaptureSource"/> 获取捕获图形。</summary>
    </member>
    <member name="M:System.Windows.Media.VideoSink.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.VideoSink"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.VideoSink.CaptureSource">
<summary>获取或设置一个与此 <see cref="T:System.Windows.Media.VideoSink"/> 关联的捕获源。</summary>
<returns>一个与此 <see cref="T:System.Windows.Media.VideoSink"/> 关联的捕获源。</returns>
    </member>
    <member name="M:System.Windows.Media.VideoSink.Finalize">
<summary>释放 <see cref="T:System.Windows.Media.VideoSink"/> 类所使用的资源。</summary>
    </member>
    <member name="M:System.Windows.Media.VideoSink.OnCaptureStarted">
<summary>在派生类中重写后，当视频设备开始捕获视频数据时调用。 </summary>
    </member>
    <member name="M:System.Windows.Media.VideoSink.OnCaptureStopped">
<summary>在派生类中重写后，当视频设备停止捕获视频数据时调用。 </summary>
    </member>
    <member name="M:System.Windows.Media.VideoSink.OnFormatChange(System.Windows.Media.VideoFormat)">
<summary>在派生类中重写后，当视频设备报告视频格式更改时调用。 </summary>
<param name="videoFormat">新的视频格式。</param>
    </member>
    <member name="M:System.Windows.Media.VideoSink.OnSample(System.Int64,System.Int64,System.Byte[])">
<summary>在派生类中重写后，当视频设备捕获了一个完整的视频采样时调用。 </summary>
<param name="sampleTimeInHundredNanoseconds">采样被捕获时的时间（以 100 纳秒为单位）。</param>
<param name="frameDurationInHundredNanoseconds">采样持续时间（以 100 纳秒为单位）。</param>
<param name="sampleData">包含视频数据的字节流。应根据相关的视频格式信息将字节流处理成采样。</param>
    </member>
    <member name="T:System.Windows.Media.VisualTreeHelper">
<summary>提供可用于在 Silverlight 可视化树中遍历对象关系（以及子对象或父对象轴）的实用工具方法。</summary>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.FindElementsInHostCoordinates(System.Windows.Point,System.Windows.UIElement)">
<summary>检索一组对象，这些对象位于某一对象的坐标空间的指定点内。</summary>
<returns>一组可枚举的 <see cref="T:System.Windows.UIElement"/> 对象，这些对象被确定位于指定点处和指定子树内的可视化树组合中。</returns>
<param name="intersectingPoint">要用作确定点的点。</param>
<param name="subtree">要在其内进行搜索的对象。 </param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.FindElementsInHostCoordinates(System.Windows.Rect,System.Windows.UIElement)">
<summary>检索一组对象，这些对象位于某一对象的坐标空间的指定 <see cref="T:System.Windows.Rect"/> 内。</summary>
<returns>一组可枚举的 <see cref="T:System.Windows.UIElement"/> 对象，这些对象被确定位于指定点处和指定子树内的可视化树组合中。</returns>
<param name="intersectingRect">要用作确定区域的 <see cref="T:System.Windows.Rect"/>。</param>
<param name="subtree">要在其内进行搜索的对象。</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
<summary>使用提供的索引，通过检查可视化树获取所提供对象的特定子对象。</summary>
<returns>被 <paramref name="childIndex"/> 引用的子对象。</returns>
<param name="reference">容纳子集合的对象。</param>
<param name="childIndex">请求的子对象在 <paramref name="reference"/> 子集合中的索引。</param>
<exception cref="T:System.ArgumentOutOfRangeException">指定了一个无效子索引。</exception>
      <exception cref="T:System.InvalidOperationException">
<paramref name="reference"/> 为 null，或者不是有效的 <see cref="T:System.Windows.UIElement"/>。</exception>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
<summary>返回在可视化树中在某一对象的子集合中存在的子级的数目。</summary>
<returns>提供的源可视化的可视化子级的数目。</returns>
<param name="reference">源可视化。</param>
      <exception cref="T:System.InvalidOperationException">
<paramref name="reference"/> 为 null，或者不是有效的 <see cref="T:System.Windows.UIElement"/>。</exception>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetOpenPopups">
<summary>获取所有打开的 <see cref="T:System.Windows.Controls.Primitives.Popup"/> 控件。</summary>
<returns>所有打开的 <see cref="T:System.Windows.Controls.Primitives.Popup"/> 控件的 <see cref="T:System.Collections.Generic.IEnumerable`1"/>。</returns>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)">
<summary>返回可视化树中某一对象的父对象。</summary>
<returns>可视化树中 <paramref name="reference"/> 对象的父对象。</returns>
<param name="reference">要获取其父对象的对象。</param>
      <exception cref="T:System.InvalidOperationException">
<paramref name="reference"/> 为 null，或者不是有效的 <see cref="T:System.Windows.UIElement"/>。</exception>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetRoot(System.Windows.DependencyObject)">
<summary>返回可视化树中某一对象的根对象。</summary>
<returns>可视化树中 <paramref name="reference"/> 对象的根对象。</returns>
<param name="reference">要获取其根对象的对象。</param>
    </member>
    <member name="T:System.Windows.Media.WaveFormatType">
<summary>报告音频格式的数字信号编码格式。</summary>
    </member>
    <member name="F:System.Windows.Media.WaveFormatType.Pcm">
<summary>音频格式使用脉冲编码调制 (PCM) 编码。</summary>
    </member>
    <member name="T:System.Windows.Media.FileSink">
<summary>用于将 Silverlight for Windows Phone 上的视频捕获保存到文件。</summary>
    </member>
    <member name="M:System.Windows.Media.FileSink.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.FileSink"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.FileSink.CaptureSource">
<summary>获取或设置一个与此 <see cref="T:System.Windows.Media.FileSink"/> 关联的捕获源。</summary>
<returns>一个与此 <see cref="T:System.Windows.Media.FileSink"/> 关联的捕获源。</returns>
    </member>
    <member name="P:System.Windows.Media.FileSink.IsolatedStorageFileName">
<summary>获取关联的独立存储文件的名称。</summary>
<returns>与此 <see cref="T:System.Windows.Media.FileSink"/> 关联的独立存储文件的名称。</returns>
    </member>
    <member name="T:System.Windows.Media.SampleAllocationMode">
<summary>提供用于指定如何在 Silverlight for Windows Phone 上维护相机视频缓冲区的值。</summary>
    </member>
    <member name="F:System.Windows.Media.SampleAllocationMode.NewBuffer">
<summary>为每个捕获的采样创建新缓冲区。该行为与用于桌面的 Silverlight 相同。</summary>
    </member>
    <member name="F:System.Windows.Media.SampleAllocationMode.ReuseBuffer">
<summary>为每个采样捕获创建新缓冲区。这在 Silverlight for Windows Phone 上可以通过减少所需的垃圾回收量来提高性能。</summary>
    </member>
    <member name="P:System.Windows.Media.VideoSink.AllocationMode">
<summary>指定如何在 Silverlight for Windows Phone 上维护相机视频缓冲区。</summary>
<returns>采样分配模式。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.BackEase">
<summary>表示缓动函数，该函数在开始在指示的路径中进行动画处理之前略微收回动画的动作。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BackEase.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.BackEase"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BackEase.Amplitude">
<summary>获取或设置与 <see cref="T:System.Windows.Media.Animation.BackEase"/> 动画相关联的收回幅度。</summary>
<returns>与 <see cref="T:System.Windows.Media.Animation.BackEase"/> 动画相关联的收回幅度。该值必须大于或等于 0。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BackEase.AmplitudeProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.BackEase.Amplitude"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.BackEase.Amplitude"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)">
<summary>提供缓动函数的逻辑部分，您可重写该部分以生成自定义缓动函数的 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn"/> 模式。</summary>
<returns>表示转换进度的双精度值。</returns>
<param name="normalizedTime">动画的规范化时间（进度）。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.BeginStoryboard">
<summary>一个触发器操作，该操作可启动 <see cref="T:System.Windows.Media.Animation.Storyboard"/> 并将其动画分发给动画的目标对象和属性。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BeginStoryboard.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.BeginStoryboard"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Animation.BeginStoryboard"/> 启动的 <see cref="T:System.Windows.Media.Animation.Storyboard"/>。 </summary>
<returns><see cref="T:System.Windows.Media.Animation.BeginStoryboard"/> 启动的 <see cref="T:System.Windows.Media.Animation.Storyboard"/>。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BeginStoryboard.StoryboardProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.BounceEase">
<summary>表示用于创建动画弹跳效果的缓动函数。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BounceEase.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.BounceEase"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BounceEase.Bounces">
<summary>获取或设置弹跳次数。</summary>
<returns>弹跳次数。值必须大于或等于零。负值将解析为零。默认值为 3。 </returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BounceEase.BouncesProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.BounceEase.Bounces"/> 依赖项属性。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BounceEase.Bounciness">
<summary>获取或设置用于指定弹跳动画的弹跳程度的值。如果此属性的值较低，则下次弹跳的弹跳高度略比上次弹跳的弹跳高度略有降低（更具弹性），而值较高会导致弹跳减弱（弹性降低）。</summary>
<returns>用于指定弹跳动画的弹跳程度的值。该值必须是正数。默认值为 2。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BounceEase.BouncinessProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.BounceEase.Bounciness"/> 依赖项属性。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BounceEase.EaseInCore(System.Double)">
<summary>提供缓动函数的逻辑部分，您可重写该部分以生成自定义缓动函数的 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn"/> 模式。</summary>
<returns>表示转换进度的双精度值。</returns>
<param name="normalizedTime">动画的规范化时间（进度）。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.CircleEase">
<summary>表示缓动函数，该函数使用循环函数创建加速和/或减速的动画。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CircleEase.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.CircleEase"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CircleEase.EaseInCore(System.Double)">
<summary>提供缓动函数的逻辑部分，您可重写该部分以生成自定义缓动函数的 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn"/> 模式。</summary>
<returns>表示转换进度的双精度值。</returns>
<param name="normalizedTime">动画的规范化时间（进度）。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.ClockState">
<summary>描述某一动画可能具有的状态。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.ClockState.Active">
<summary>当前动画的变化与其父级动画的变化直接相关。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.ClockState.Filling">
<summary>动画继续进行，并且不会随着其父级动画的变化而变化。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.ClockState.Stopped">
<summary>动画停止。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorAnimation">
<summary>在指定的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration"/> 内使用线性内插对两个目标值之间的 <see cref="T:System.Windows.Media.Color"/> 属性值进行动画处理。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimation.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.ColorAnimation"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.By">
<summary>获取或设置动画更改其起始值时所依据的总量。</summary>
<returns>动画更改其起始值时所依据的总量。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.ByProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.ColorAnimation.By"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.Animation.ColorAnimation.By"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.EasingFunction">
<summary>获取或设置应用于此动画的缓动函数。</summary>
<returns>应用于此动画的缓动函数。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.EasingFunctionProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.ColorAnimation.EasingFunction"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.Animation.ColorAnimation.EasingFunction"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.From">
<summary>获取或设置动画的起始值。 </summary>
<returns>动画的起始值。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.FromProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.ColorAnimation.From"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.Animation.ColorAnimation.From"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.To">
<summary>获取或设置动画的结束值。 </summary>
<returns>动画的结束值。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.ToProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.ColorAnimation.To"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.Animation.ColorAnimation.To"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames">
<summary>对指定 <see cref="T:System.Windows.Duration"/> 内的一组 <see cref="P:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames"/> 中的 <see cref="T:System.Windows.Media.Color"/> 属性值进行动画处理。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames">
<summary>获取用于定义动画的 <see cref="T:System.Windows.Media.Animation.ColorKeyFrame"/> 对象的集合。 </summary>
<returns>用于定义动画的 <see cref="T:System.Windows.Media.Animation.ColorKeyFrame"/> 对象的集合。默认值为空集合。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorKeyFrame">
<summary>为特定的动画关键帧技术提供基类，这些技术用于定义具有 <see cref="T:System.Windows.Media.Color"/> 目标值的动画段。每个派生类为针对 <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames"/> 动画提供的 <see cref="T:System.Windows.Media.Color"/> 值提供一种不同的关键帧内插方法。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.ColorKeyFrame"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime">
<summary>获取或设置应到达关键帧的目标 <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value"/> 的时间。 </summary>
<returns>关键帧的当前值所在的时间应等于它的 <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value"/> 属性。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorKeyFrame.KeyTimeProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrame.Value">
<summary>获取或设置关键帧的目标值。 </summary>
<returns>关键帧的目标值，这是在其指定 <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime"/> 的值。默认值为 <see cref="T:System.Windows.Media.Color"/>，其 ARGB 值为 #00000000。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorKeyFrame.ValueProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorKeyFrameCollection">
<summary>表示可按照索引单独访问的 <see cref="T:System.Windows.Media.Animation.ColorKeyFrame"/> 对象的集合。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.CubicEase">
<summary>表示缓动函数，使用公式 f(t) = t3 创建加速和/或减速的动画。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CubicEase.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.CubicEase"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)">
<summary>提供缓动函数的逻辑部分，您可重写该部分以生成自定义缓动函数的 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn"/> 模式。</summary>
<returns>表示转换进度的双精度值。</returns>
<param name="normalizedTime">动画的规范化时间（进度）。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteColorKeyFrame">
<summary>通过使用离散值，可以在前一个关键帧的 <see cref="T:System.Windows.Media.Color"/> 值及其自己的 <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value"/> 之间进行动画处理。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteColorKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.DiscreteColorKeyFrame"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteDoubleKeyFrame">
<summary>通过使用离散值，可以在前一个关键帧的 <see cref="T:System.Double"/> 值及其自己的 <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value"/> 之间进行动画处理。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteDoubleKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.DiscreteDoubleKeyFrame"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteObjectKeyFrame">
<summary>通过使用离散值，可以在前一个关键帧的 <see cref="T:System.Object"/> 值及其自己的 <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value"/> 之间进行动画处理。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteObjectKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.DiscreteObjectKeyFrame"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscretePointKeyFrame">
<summary>通过使用离散帧，可以在前一个关键帧的 <see cref="T:System.Windows.Point"/> 值及其自己的 <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value"/> 之间进行动画处理。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscretePointKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.DiscretePointKeyFrame"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleAnimation">
<summary>在指定的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration"/> 内使用线性内插对两个目标值之间的 <see cref="T:System.Double"/> 属性值进行动画处理。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimation.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.DoubleAnimation"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.By">
<summary>获取或设置动画更改其起始值时所依据的总量。</summary>
<returns>动画更改其起始值时所依据的总量。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.ByProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.DoubleAnimation.By"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.Animation.DoubleAnimation.By"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.EasingFunction">
<summary>获取或设置应用于此动画的缓动函数。</summary>
<returns>应用于此动画的缓动函数。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.EasingFunctionProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.DoubleAnimation.EasingFunction"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.DoubleAnimation.EasingFunction"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.From">
<summary>获取或设置动画的起始值。</summary>
<returns>动画的起始值。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.FromProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.DoubleAnimation.From"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.Animation.DoubleAnimation.From"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.To">
<summary>获取或设置动画的结束值。</summary>
<returns>动画的结束值。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.ToProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.DoubleAnimation.To"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.Animation.DoubleAnimation.To"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames">
<summary>对一组 <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames"/> 中的 <see cref="T:System.Double"/> 属性的值进行动画处理。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames">
<summary>获取用于定义动画的 <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame"/> 对象的集合。 </summary>
<returns>用于定义动画的 <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame"/> 对象的集合。默认值为空集合。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleKeyFrame">
<summary>一个抽象类，该类可以用它自己的目标值和 <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames"/> 的内插方法来定义一个动画段。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime">
<summary>获取或设置应到达关键帧的目标 <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value"/> 的时间。</summary>
<returns>关键帧的当前值所在的时间应等于它的 <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value"/> 属性。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleKeyFrame.KeyTimeProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrame.Value">
<summary>获取或设置关键帧的目标值。 </summary>
<returns>关键帧的目标值，这是此关键帧在其指定 <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime"/> 的值。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleKeyFrame.ValueProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleKeyFrameCollection">
<summary>表示可按照索引单独访问的 <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame"/> 对象的集合。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingColorKeyFrame">
<summary>一个类，通过它可以将缓动函数与 <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames"/> 关键帧动画相关联。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingColorKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.EasingColorKeyFrame"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunction">
<summary>获取或设置应用于关键帧的缓动函数。</summary>
<returns>应用于关键帧的缓动函数。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunctionProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunction"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunction"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingDoubleKeyFrame">
<summary>定义一个通过其可将缓动函数与 <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames"/> 关键帧动画相关联的属性。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingDoubleKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.EasingDoubleKeyFrame"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunction">
<summary>获取或设置应用于关键帧的缓动函数。</summary>
<returns>应用于关键帧的缓动函数。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunctionProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunction"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunction"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingFunctionBase">
<summary>为所有缓动函数提供基类。您可以通过从此类继承来创建自己的自定义缓动函数。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingFunctionBase.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.EasingFunctionBase"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)">
<summary>转换规范化时间以控制动画的节奏。</summary>
<returns>表示转换进度的双精度值。</returns>
<param name="normalizedTime">动画的规范化时间（进度）。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingFunctionBase.EaseInCore(System.Double)">
<summary>提供缓动函数的逻辑部分，您可重写该部分以生成自定义缓动函数的 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn"/> 模式。 </summary>
<returns>表示转换进度的双精度值。</returns>
<param name="normalizedTime">动画的规范化时间（进度）。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingFunctionBase.EasingMode">
<summary>获取或设置用于指定动画内插方式的值。</summary>
<returns>用于指定动画内插方式的枚举值之一。默认值为 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseOut"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.EasingFunctionBase.EasingMode"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.EasingFunctionBase.EasingMode"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingMode">
<summary>指定与缓动函数关联的动画的内插方式。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingMode.EaseOut">
<summary>内插时使用 100% 内插值减去与缓动函数关联的公式输出结果之后的值。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingMode.EaseIn">
<summary>内插时使用与缓动函数关联的数学公式。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingMode.EaseInOut">
<summary>内插将 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn"/> 用于动画的前半部分，将 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseOut"/> 用于动画的后半部分。    </summary>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingPointKeyFrame">
<summary>定义一个通过其可将缓动函数与 <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames"/> 关键帧动画相关联的属性。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingPointKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.EasingPointKeyFrame"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunction">
<summary>获取或设置应用于关键帧的缓动函数。</summary>
<returns>应用于关键帧的缓动函数。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunctionProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunction"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunction"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ElasticEase">
<summary>表示缓动函数，创建一个类似于弹簧来回振动直到停止的动画。  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ElasticEase.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.ElasticEase"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)">
<summary>提供缓动函数的逻辑部分，您可重写该部分以生成自定义缓动函数的 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn"/> 模式。</summary>
<returns>表示转换进度的双精度值。</returns>
<param name="normalizedTime">动画的规范化时间（进度）。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ElasticEase.Oscillations">
<summary>获取或设置目标在动画目标位置来回滑动的次数。</summary>
<returns>目标在动画目标位置来回滑动的次数。该值必须大于或等于 0。默认值为 3。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ElasticEase.OscillationsProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.ElasticEase.Oscillations"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.ElasticEase.Oscillations"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ElasticEase.Springiness">
<summary>获取或设置弹簧的刚度。弹性值越小，弹簧就越硬，且每次振动时弹力在强度方面会减小得越快。</summary>
<returns>一个正数，指定弹簧的刚度。默认值为 3。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ElasticEase.SpringinessProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.ElasticEase.Springiness"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.ElasticEase.Springiness"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ExponentialEase">
<summary>表示缓动函数，该函数使用指数公式创建加速和/或减速的动画（请参阅“备注”）。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ExponentialEase.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.ExponentialEase"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ExponentialEase.EaseInCore(System.Double)">
<summary>提供缓动函数的逻辑部分，您可重写该部分以生成自定义缓动函数的 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn"/> 模式。</summary>
<returns>表示转换进度的双精度值。</returns>
<param name="normalizedTime">动画的规范化时间（进度）。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ExponentialEase.Exponent">
<summary>获取或设置用于确定动画的内插的指数。</summary>
<returns>用于确定动画的内插的指数。默认值为 2。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ExponentialEase.ExponentProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.ExponentialEase.Exponent"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.ExponentialEase.Exponent"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.FillBehavior">
<summary>指定 <see cref="T:System.Windows.Media.Animation.Timeline"/> 在超出活动期但其父级仍在活动期或保持期内时的行为方式。 </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.FillBehavior.HoldEnd">
<summary>在达到活动期的终点后，时间线将保持其进度，直至其父级的活动期和保持期结束为止。 </summary>
    </member>
    <member name="F:System.Windows.Media.Animation.FillBehavior.Stop">
<summary>如果时间线超出活动期，而其父级在活动期内，则该时间线将停止。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.IEasingFunction">
<summary>定义缓动函数的基本功能。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.IEasingFunction.Ease(System.Double)">
<summary>转换规范化时间以控制动画的节奏。</summary>
<returns>转换的进度。</returns>
<param name="normalizedTime">动画的规范化时间（进度）。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.KeySpline">
<summary>样条关键帧使用此类定义动画进度。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.KeySpline"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.KeySpline.ControlPoint1">
<summary>获取或设置用于定义描述 <see cref="T:System.Windows.Media.Animation.KeySpline"/> 的贝塞尔曲线的第一个控制点。</summary>
<returns>第一个控制点用于定义描述 <see cref="T:System.Windows.Media.Animation.KeySpline"/> 的贝塞尔曲线。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.KeySpline.ControlPoint2">
<summary>获取或设置用于定义描述 <see cref="T:System.Windows.Media.Animation.KeySpline"/> 的贝塞尔曲线的第二个控制点。</summary>
<returns>第二个控制点用于定义描述 <see cref="T:System.Windows.Media.Animation.KeySpline"/> 的贝塞尔曲线。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.KeyTime">
<summary>指定在动画运行期间某一特定关键帧是否应发生。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.Equals(System.Object)">
<summary>指示某一 <see cref="T:System.Windows.Media.Animation.KeyTime"/> 是否等于此 <see cref="T:System.Windows.Media.Animation.KeyTime"/>。</summary>
<returns>如果 <paramref name="value"/> 是一个表示与此 <see cref="T:System.Windows.Media.Animation.KeyTime"/> 的时间长度相同的 <see cref="T:System.Windows.Media.Animation.KeyTime"/>，则为 true；否则为 false。</returns>
<param name="value">要与此 <see cref="T:System.Windows.Media.Animation.KeyTime"/> 进行比较的 <see cref="T:System.Windows.Media.Animation.KeyTime"/>。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.Equals(System.Windows.Media.Animation.KeyTime)">
<summary>指示指定的 <see cref="T:System.Windows.Media.Animation.KeyTime"/> 是否等于此 <see cref="T:System.Windows.Media.Animation.KeyTime"/>。</summary>
<returns>如果 <paramref name="value"/> 等于此 <see cref="T:System.Windows.Media.Animation.KeyTime"/>，则为 true；否则为 false。</returns>
<param name="value">要与此 <see cref="T:System.Windows.Media.Animation.KeyTime"/> 进行比较的 <see cref="T:System.Windows.Media.Animation.KeyTime"/>。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.Equals(System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeyTime)">
<summary>指示两个 <see cref="T:System.Windows.Media.Animation.KeyTime"/> 值是否相等。</summary>
<returns>如果 <paramref name="keyTime1"/> 和 <paramref name="keyTime2"/> 的值相等，则为 true；否则为 false。</returns>
<param name="keyTime1">要比较的第一个值。</param>
<param name="keyTime2">要比较的第二个值。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.FromTimeSpan(System.TimeSpan)">
<summary>使用提供的 <see cref="T:System.TimeSpan"/> 创建一个新的 <see cref="T:System.Windows.Media.Animation.KeyTime"/>。</summary>
<returns>一个新的 <see cref="T:System.Windows.Media.Animation.KeyTime"/>，将初始化为 <paramref name="timeSpan"/> 的值。</returns>
<param name="timeSpan">新的 <see cref="T:System.Windows.Media.Animation.KeyTime"/> 的值。</param>
<exception cref="T:System.ArgumentOutOfRangeException">指定的 <paramref name="timeSpan"/> 在允许范围之外。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.GetHashCode">
<summary>返回表示此 <see cref="T:System.Windows.Media.Animation.KeyTime"/> 的哈希代码。</summary>
<returns>一个哈希标识符。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.op_Equality(System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeyTime)">
<summary>比较两个 <see cref="T:System.Windows.Media.Animation.KeyTime"/> 值是否相等。</summary>
<returns>如果 <paramref name="keyTime1"/> 和 <paramref name="keyTime2"/> 相等，则为 true；否则为 false。</returns>
<param name="keyTime1">要比较的第一个值。</param>
<param name="keyTime2">要比较的第二个值。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.op_Implicit(System.TimeSpan)~System.Windows.Media.Animation.KeyTime">
<summary>隐式将 <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan"/> 转换为 <see cref="T:System.Windows.Media.Animation.KeyTime"/>。</summary>
<returns>创建的 <see cref="T:System.Windows.Media.Animation.KeyTime"/>。</returns>
<param name="timeSpan">要转换的 <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan"/> 值。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.op_Inequality(System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeyTime)">
<summary>比较两个 <see cref="T:System.Windows.Media.Animation.KeyTime"/> 值是否不相等。</summary>
<returns>如果 <paramref name="keyTime1"/> 和 <paramref name="keyTime2"/> 不相等，则为 true；否则为 false。 </returns>
<param name="keyTime1">要比较的第一个值。</param>
<param name="keyTime2">要比较的第二个值。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.KeyTime.TimeSpan">
<summary>获取关键帧结束的时间，该时间表示为相对于动画开始时间的时间。</summary>
<returns>关键帧结束的时间，该时间表示为相对于动画开始时间的时间。</returns>
<exception cref="T:System.InvalidOperationException">如果此实例的类型不是 <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan"/>。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.ToString">
<summary>返回此 <see cref="T:System.Windows.Media.Animation.KeyTime"/> 的字符串表示形式。 </summary>
<returns>此 <see cref="T:System.Windows.Media.Animation.KeyTime"/> 的字符串表示形式。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.KeyTime.Type">
<summary>获取此实例表示的 <see cref="T:System.Windows.Media.Animation.KeyTimeType"/> 值。 </summary>
<returns>枚举值之一。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.KeyTime.Uniform">
<summary>获取统一值，该值在关键帧之间均匀划分所分配的动画时间。</summary>
<returns>统一值，该值在关键帧之间均匀划分所分配的动画时间。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.KeyTimeType">
<summary>表示可用来表示 <see cref="T:System.Windows.Media.Animation.KeyTime"/> 实例的不同类型。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.KeyTimeType.Uniform">
<summary>将为动画序列分配的总时间均匀划分到每个关键帧。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.KeyTimeType.TimeSpan">
<summary>将每个 <see cref="T:System.Windows.Media.Animation.KeyTime"/> 表示为一个相对于动画序列的 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime"/> 的 <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan"/> 值。 </summary>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearColorKeyFrame">
<summary>通过使用线性内插，可以在前一个关键帧的 <see cref="T:System.Windows.Media.Color"/> 值及其自己的 <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value"/> 之间进行动画处理。  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearColorKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.LinearColorKeyFrame"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearDoubleKeyFrame">
<summary>通过使用线性内插，可以在前一个关键帧的 <see cref="T:System.Double"/> 值及其自己的 <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value"/> 之间进行动画处理。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearDoubleKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.LinearDoubleKeyFrame"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearPointKeyFrame">
<summary>通过使用线性内插，可以在前一个关键帧的 <see cref="T:System.Windows.Point"/> 值及其自己的 <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value"/> 之间进行动画处理。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearPointKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.LinearPointKeyFrame"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames">
<summary>对指定 <see cref="T:System.Windows.Duration"/> 内的一组 <see cref="P:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames"/> 中的 <see cref="T:System.Object"/> 属性值进行动画处理。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames">
<summary>获取用于定义动画的 <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame"/> 对象的集合。 </summary>
<returns>用于定义动画的 <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame"/> 对象的集合。默认值为空集合。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectKeyFrame">
<summary>用它自己的目标值和 <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames"/> 的内插方法定义一个动画段。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime">
<summary>获取或设置应到达关键帧的目标 <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value"/> 的时间。 </summary>
<returns>关键帧的当前值所在的时间应等于它的 <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value"/> 属性。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ObjectKeyFrame.KeyTimeProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrame.Value">
<summary>获取或设置关键帧的目标值。 </summary>
<returns>关键帧的目标值，这是此关键帧在其指定 <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime"/> 的值。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ObjectKeyFrame.ValueProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectKeyFrameCollection">
<summary>表示可按照索引单独访问的 <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame"/> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.PointAnimation">
<summary>在指定的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration"/> 内使用线性内插对两个目标值之间的 <see cref="T:System.Windows.Point"/> 属性值进行动画处理。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.PointAnimation"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.By">
<summary>获取或设置动画更改其起始值时所依据的总量。</summary>
<returns>动画更改其起始值时所依据的总量。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.ByProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.PointAnimation.By"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.Animation.PointAnimation.By"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.EasingFunction">
<summary>获取或设置应用于动画的缓动函数。</summary>
<returns>应用于动画的缓动函数。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.EasingFunctionProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.PointAnimation.EasingFunction"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.PointAnimation.EasingFunction"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.From">
<summary>获取或设置动画的起始值。</summary>
<returns>动画的起始值。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.FromProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.PointAnimation.From"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.Animation.PointAnimation.From"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.To">
<summary>获取或设置动画的结束值。</summary>
<returns>动画的结束值。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.ToProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.PointAnimation.To"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Media.Animation.PointAnimation.To"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames">
<summary>对一组 <see cref="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames"/> 中的 <see cref="T:System.Windows.Point"/> 属性的值进行动画处理。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames">
<summary>获取用于定义动画的 <see cref="T:System.Windows.Media.Animation.PointKeyFrame"/> 对象的集合。 </summary>
<returns>用于定义动画的 <see cref="T:System.Windows.Media.Animation.PointKeyFrame"/> 对象的集合。默认值为空集合。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointKeyFrame">
<summary>用它自己的目标值和 <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames"/> 的内插方法定义一个动画段。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.PointKeyFrame"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime">
<summary>获取或设置应到达关键帧的目标 <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value"/> 的时间。 </summary>
<returns>关键帧的当前值所在的时间应等于它的 <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value"/> 属性。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointKeyFrame.KeyTimeProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrame.Value">
<summary>获取或设置关键帧的目标值。</summary>
<returns>关键帧的目标值，这是此关键帧在其指定 <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime"/> 的值。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointKeyFrame.ValueProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointKeyFrameCollection">
<summary>表示可按照索引单独访问的 <see cref="T:System.Windows.Media.Animation.PointKeyFrame"/> 对象的集合。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.PowerEase">
<summary>表示缓动函数，该函数使用公式 f(t) = tp 创建加速和/或减速的动画，其中 p 等于 <see cref="P:System.Windows.Media.Animation.PowerEase.Power"/> 属性。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PowerEase.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.PowerEase"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PowerEase.EaseInCore(System.Double)">
<summary>提供缓动函数的逻辑部分，您可重写该部分以生成自定义缓动函数的 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn"/> 模式。</summary>
<returns>表示转换进度的双精度值。</returns>
<param name="normalizedTime">动画的规范化时间（进度）。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PowerEase.Power">
<summary>获取或设置动画内插的指数幂。例如，值为 7 时将创建符合公式 f(t) = t7 的动画内插曲线。</summary>
<returns>动画内插的指数幂。该值必须大于或等于 0。默认值为 2。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PowerEase.PowerProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.PowerEase.Power"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.PowerEase.Power"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.QuadraticEase">
<summary>表示缓动函数，使用公式 f(t) = t2 创建加速和/或减速的动画</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuadraticEase.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.QuadraticEase"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuadraticEase.EaseInCore(System.Double)">
<summary>提供缓动函数的逻辑部分，您可重写该部分以生成自定义缓动函数的 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn"/> 模式。</summary>
<returns>表示转换进度的双精度值。</returns>
<param name="normalizedTime">动画的规范化时间（进度）。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.QuarticEase">
<summary>表示缓动函数，使用公式 f(t) = t4 创建加速和/或减速的动画。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuarticEase.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.QuarticEase"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuarticEase.EaseInCore(System.Double)">
<summary>提供缓动函数的逻辑部分，您可重写该部分以生成自定义缓动函数的 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn"/> 模式。</summary>
<returns>表示转换进度的双精度值。</returns>
<param name="normalizedTime">动画的规范化时间（进度）。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.QuinticEase">
<summary>表示缓动函数，使用公式 f(t) = t5 创建加速和/或减速的动画。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuinticEase.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.QuinticEase"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuinticEase.EaseInCore(System.Double)">
<summary>提供缓动函数的逻辑部分，您可重写该部分以生成自定义缓动函数的 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn"/> 模式。</summary>
<returns>表示转换进度的双精度值。</returns>
<param name="normalizedTime">动画的规范化时间（进度）。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.RepeatBehavior">
<summary>描述 <see cref="T:System.Windows.Media.Animation.Timeline"/> 如何重复其简单持续时间。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.#ctor(System.Double)">
<summary>使用指定的迭代次数初始化 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 结构的新实例。 </summary>
<param name="count">一个大于等于 0 的数，指定用于动画的迭代次数。 </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
<paramref name="count"/> 计算结果无限大、不是数字值或者为负数。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.#ctor(System.TimeSpan)">
<summary>使用指定的重复持续时间初始化 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 结构的新实例。 </summary>
<param name="duration"><see cref="T:System.Windows.Media.Animation.Timeline"/> 要播放的总时间长度（其活动持续时间）。 </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
<paramref name="duration"/> 计算结果为负数。</exception>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.Count">
<summary>获取 <see cref="T:System.Windows.Media.Animation.Timeline"/> 要重复的次数。 </summary>
<returns>要重复的迭代次数。</returns>
<exception cref="T:System.InvalidOperationException">此 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 描述重复持续时间，而不是迭代次数。</exception>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.Duration">
<summary>获取 <see cref="T:System.Windows.Media.Animation.Timeline"/> 要播放的总时间长度。 </summary>
<returns>时间线要播放的总时间长度。 </returns>
<exception cref="T:System.InvalidOperationException">此 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 描述迭代次数，而不是重复持续时间。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Object)">
<summary>指示指定的对象是否等于此 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/>。 </summary>
<returns>如果 <paramref name="value"/> 为表示与此 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 的重复行为相同的 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/>，则为 true；否则为 false。</returns>
<param name="value">要与此 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 进行比较的对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior)">
<summary>回一个值，该值指示指定的 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 是否与此 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 相等。 </summary>
<returns>如果 <paramref name="repeatBehavior"/> 和此 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 的类型和重复行为相等，则为 true；否则为 false。</returns>
<param name="repeatBehavior">要与此 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 进行比较的值。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)">
<summary>指示两个指定的 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 值是否相等。 </summary>
<returns>如果 <paramref name="repeatBehavior1"/> 和 <paramref name="repeatBehavior2"/> 的类型和重复行为相等，则为 true；否则为 false。</returns>
<param name="repeatBehavior1">要比较的第一个值。</param>
<param name="repeatBehavior2">要比较的第二个值。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.Forever">
<summary>获取指定无限次重复的 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/>。  </summary>
<returns>指定无限次重复的 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/>。   </returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.GetHashCode">
<summary>返回此实例的哈希代码。</summary>
<returns>一个哈希代码。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.HasCount">
<summary>获取指示重复行为是否具有指定的迭代次数的值。</summary>
<returns>如果实例表示迭代次数，则为 true；否则为 false。 </returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.HasDuration">
<summary>获取指示重复行为是否具有指定的重复持续时间的值。 </summary>
<returns>如果实例表示重复持续时间，则为 true；否则为 false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.op_Equality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)">
<summary>指示两个指定的 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 值是否相等。 </summary>
<returns>如果 <paramref name="repeatBehavior1"/> 和 <paramref name="repeatBehavior2"/> 的类型和重复行为相等，则为 true；否则为 false。</returns>
<param name="repeatBehavior1">要比较的第一个值。</param>
<param name="repeatBehavior2">要比较的第二个值。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.op_Inequality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)">
<summary>指示两个 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 值是否不相等。 </summary>
<returns>如果 <paramref name="repeatBehavior1"/> 和 <paramref name="repeatBehavior2"/> 的类型不同或者重复行为属性不同，则为 true，否则为 false。</returns>
<param name="repeatBehavior1">要比较的第一个值。</param>
<param name="repeatBehavior2">要比较的第二个值。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.System#IFormattable#ToString(System.String,System.IFormatProvider)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)"/>。</summary>
<returns>一个字符串，包含采用指定格式的当前实例的值。</returns>
<param name="format">指定要使用格式的字符串，若为 null 则表示使用为 IFormattable 实现的类型定义的默认格式。 </param>
<param name="formatProvider">要用于为值设置格式的 IFormatProvider。或为 null，则表示从操作系统的当前区域设置中获取数值格式信息。 </param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.ToString">
<summary>返回此 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 的字符串表示形式。 </summary>
<returns>此 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 的字符串表示形式。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.ToString(System.IFormatProvider)">
<summary>使用指定的格式返回此 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 的字符串表示形式。 </summary>
<returns>此 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/> 的字符串表示形式。</returns>
<param name="formatProvider">用于构造返回值的格式。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.SineEase">
<summary>表示缓动函数，使用正弦公式创建加速和/或减速的动画（请参阅“备注”）。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SineEase.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.SineEase"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SineEase.EaseInCore(System.Double)">
<summary>提供缓动函数的逻辑部分，您可重写该部分以生成自定义缓动函数的 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn"/> 模式。</summary>
<returns>表示转换进度的双精度值。</returns>
<param name="normalizedTime">动画的规范化时间（进度）。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineColorKeyFrame">
<summary>通过使用样条内插，可以在前一个关键帧的 <see cref="T:System.Windows.Media.Color"/> 值及其自己的 <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value"/> 之间进行动画处理。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineColorKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.SplineColorKeyFrame"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineColorKeyFrame.KeySpline">
<summary>获取或设置用于定义此关键帧的动画进度的两个控制点。 </summary>
<returns>两个控制点，用来指定定义关键帧进度的三次方贝塞尔曲线。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineColorKeyFrame.KeySplineProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.SplineColorKeyFrame.KeySpline"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.SplineColorKeyFrame.KeySpline"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineDoubleKeyFrame">
<summary>通过使用样条内插，可以在前一个关键帧的 <see cref="T:System.Double"/> 值及其自己的 <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value"/> 之间进行动画处理。  </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineDoubleKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.SplineDoubleKeyFrame"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySpline">
<summary>获取或设置用于定义此关键帧的动画进度的两个控制点。</summary>
<returns>两个控制点，用来指定定义关键帧进度的三次方贝塞尔曲线。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySplineProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySpline"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySpline"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplinePointKeyFrame">
<summary>通过使用样条内插，可以在前一个关键帧的 <see cref="T:System.Windows.Point"/> 值及其自己的 <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value"/> 之间进行动画处理。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplinePointKeyFrame.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.SplinePointKeyFrame"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SplinePointKeyFrame.KeySpline">
<summary>获取或设置用于定义此关键帧的动画进度的两个控制点。 </summary>
<returns>两个控制点，指定用于定义关键帧进度的三次方贝塞尔曲线。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplinePointKeyFrame.KeySplineProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.SplinePointKeyFrame.KeySpline"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.SplinePointKeyFrame.KeySpline"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Storyboard">
<summary>通过时间线控制动画，并为其子动画提供对象和属性目标信息。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.Storyboard"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin">
<summary>启动与演示图板关联的那组动画。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.Children">
<summary>获取子 <see cref="T:System.Windows.Media.Animation.Timeline"/> 对象的集合。</summary>
<returns>子 <see cref="T:System.Windows.Media.Animation.Timeline"/> 对象的集合。默认值为空集合。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState">
<summary>获取演示图板的时钟状态。</summary>
<returns>枚举值之一：<see cref="F:System.Windows.Media.Animation.ClockState.Active"/>、<see cref="F:System.Windows.Media.Animation.ClockState.Filling"/> 或 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped"/>。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime">
<summary>获取演示图板的当前时间。</summary>
<returns>演示图板的当前时间，如果此演示图板的时钟为 <see cref="F:System.Windows.Media.Animation.ClockState.Stopped"/>，则为 null。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.Media.Animation.Timeline)">
<summary>获取指定 <see cref="T:System.Windows.Media.Animation.Timeline"/> 对象的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"/>。</summary>
<returns>目标对象的字符串名称。</returns>
<param name="element">要从其获取目标名称的 <see cref="T:System.Windows.Media.Animation.Timeline"/> 对象。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.Media.Animation.Timeline)">
<summary>获取指定 <see cref="T:System.Windows.Media.Animation.Timeline"/> 对象的 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty"/>。 </summary>
<returns>进行动画处理的属性的属性路径信息。</returns>
<param name="element">要从其获取目标属性的 <see cref="T:System.Windows.Media.Animation.Timeline"/> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause">
<summary>暂停与演示图板关联的动画时钟。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume">
<summary>使与演示图板关联的动画时钟（或称运行时状态）继续运行。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
<summary>将演示图板移动到指定动画位置。演示图板在时钟下一次走动时执行请求的定位操作。 </summary>
<param name="offset">一个正或负的时间值，描述时间线应从动画开始处向前或向后移动的量。通过使用 <see cref="T:System.TimeSpan"/> Parse 行为，<see cref="T:System.TimeSpan"/> 可指定为以下格式的字符串（在此语法中，[] 字符指示字符串的可选部分，而引号、冒号和句点全都是语法的文本部分）：“[days.]hours:minutes:seconds[.fractionalSeconds]”-或-“days”</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
<summary>立即（以同步方式）将演示图板移动到指定动画位置。 </summary>
<param name="offset">一个正或负的时间值，描述时间线应从动画开始处向前或向后移动的量。通过使用 <see cref="T:System.TimeSpan"/> Parse 行为，<see cref="T:System.TimeSpan"/> 可指定为以下格式的字符串（在此语法中，[] 字符指示字符串的可选部分，而引号、冒号和句点全都是语法的文本部分）：“[days.]hours:minutes:seconds[.fractionalSeconds]”-或-“days”</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.Media.Animation.Timeline,System.Windows.DependencyObject)">
<summary>导致指定的 <see cref="T:System.Windows.Media.Animation.Timeline"/> 以指定对象为目标。</summary>
<param name="timeline">以指定的依赖项对象为目标的时间线。</param>
<param name="target">要作为目标的对象的实际实例。</param>
<exception cref="T:System.ArgumentNullException">其中一个或多个参数为 null。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.Media.Animation.Timeline,System.String)">
<summary>使指定的 <see cref="T:System.Windows.Media.Animation.Timeline"/> 以具有指定名称的对象为目标。</summary>
<param name="element">以指定的依赖项对象为目标的时间线。</param>
<param name="name">充当目标的对象的名称。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.Media.Animation.Timeline,System.Windows.PropertyPath)">
<summary>使指定的 <see cref="T:System.Windows.Media.Animation.Timeline"/> 以指定的依赖项属性为目标。</summary>
<param name="element">要将指定的依赖项属性与之关联的时间线。</param>
<param name="path">说明要进行动画处理的依赖项属性的路径。</param>
<exception cref="T:System.ArgumentNullException">其中一个或多个参数为 null。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill">
<summary>将演示图板的时钟的当前时间后调至其活动期结束时间。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop">
<summary>停止演示图板。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.TargetName">
<summary>获取或设置要进行动画处理的对象的名称。</summary>
<returns>要进行动画处理的对象的名称。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"/> 附加属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"/> 附加属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.TargetProperty">
<summary>获取或设置应进行动画处理的属性的名称。 </summary>
<returns>要进行动画处理的属性。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty"/> 附加属性。 </summary>
<returns><see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty"/> 附加属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Timeline">
<summary>定义时间段。 </summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.Timeline"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.AutoReverse">
<summary>获取或设置一个值，该值指示时间线在完成向前迭代后是否按相反的顺序播放。</summary>
<returns>如果时间线在每次迭代结束时按相反的顺序播放，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.AutoReverseProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.BeginTime">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Animation.Timeline"/> 将要开始的时间。 </summary>
<returns>时间线的开始时间。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.BeginTimeProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.Timeline.BeginTime"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Media.Animation.Timeline.Completed">
<summary>当 <see cref="T:System.Windows.Media.Animation.Storyboard"/> 对象完成播放时发生。 </summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.Duration">
<summary>获取或设置此时间线播放的时间长度，而不是计数重复。</summary>
<returns>时间线的简单持续时间：此时间线完成一次向前迭代所花费的时间。默认值为 <see cref="P:System.Windows.Duration.Automatic"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.DurationProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.Timeline.Duration"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.Timeline.Duration"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.FillBehavior">
<summary>获取或设置一个值，该值指定动画在其活动期结束后的行为方式。</summary>
<returns>一个值，用于指定时间线在其活动周期结束后但其父时间线仍处于活动周期或填充周期时的行为方式。默认值为 <see cref="F:System.Windows.Media.Animation.FillBehavior.HoldEnd"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.FillBehaviorProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.RepeatBehavior">
<summary>获取或设置此时间线的重复行为。 </summary>
<returns>一个迭代 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count"/>，指定时间线将要播放的次数；一个 <see cref="T:System.TimeSpan"/> 值，指定此时间线活动周期的总长度；或者特殊值 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Forever"/>，指定时间线应该无限重复。默认值是 <see cref="T:System.Windows.Media.Animation.RepeatBehavior"/>，<see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count"/> 为 1，该值指示时间线播放一次。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty">
<summary>标识 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.SpeedRatio">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Animation.Timeline"/> 的时间相对于其父级的前进速率。 </summary>
<returns>一个大于 0 的有限值，指定此时间线的时间相对于其父级速度的前进速率。如果此时间线为根时间线，则指定默认时间线速度。该值用因子表示，其中 1 表示正常速度，2 表示双倍速度，0.5 为半速，依此类推。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.SpeedRatioProperty">
<summary><see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio"/> 依赖项属性的标识。</summary>
<returns><see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.TimelineCollection">
<summary>表示 <see cref="T:System.Windows.Media.Animation.Timeline"/> 对象的集合。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Animation.TimelineCollection"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Media.Effects.BlurEffect">
<summary>表示可以应用到对象的效果，该效果模拟通过焦外镜头查看对象的情形。</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.BlurEffect.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Effects.BlurEffect"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Effects.BlurEffect.Radius">
<summary>获取或设置 <see cref="T:System.Windows.Media.Effects.BlurEffect"/> 应用的模糊量。</summary>
<returns>用于模糊的半径（作为基于像素的因子）。默认值为 5。</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.BlurEffect.RadiusProperty">
<summary>标识 <see cref="P:System.Windows.Media.Effects.BlurEffect.Radius"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Effects.BlurEffect.Radius"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.DropShadowEffect">
<summary>以微小偏移量在可视对象之后应用阴影。通过模拟虚构光源的投影来确定偏移量。</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.DropShadowEffect.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Effects.DropShadowEffect"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.BlurRadius">
<summary>获取或设置阴影边缘的分明程度（阴影的模糊程度）。</summary>
<returns>阴影的模糊程度。默认值为 5。</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.BlurRadiusProperty">
<summary>标识 <see cref="P:System.Windows.Media.Effects.DropShadowEffect.BlurRadius"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Effects.DropShadowEffect.BlurRadius"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.Color">
<summary>获取或设置阴影的颜色。</summary>
<returns>阴影的颜色。默认值为 ARGB 值是 FF000000 的颜色（黑色）。</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.ColorProperty">
<summary>标识 <see cref="P:System.Windows.Media.Effects.DropShadowEffect.Color"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Effects.DropShadowEffect.Color"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.Direction">
<summary>获取或设置投影角度。</summary>
<returns>投影角度，其中 0 位于对象紧右侧，正值以逆时针方向移动阴影。默认值为 315。</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.DirectionProperty">
<summary>标识 <see cref="P:System.Windows.Media.Effects.DropShadowEffect.Direction"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Effects.DropShadowEffect.Direction"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.Opacity">
<summary>获取或设置阴影的不透明度。</summary>
<returns>不透明度。值的有效范围为 0 到 1。如果值为 0，则表示完全透明；如果值为 1，则表示完全不透明。默认值为 1。</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.OpacityProperty">
<summary>标识 <see cref="P:System.Windows.Media.Effects.DropShadowEffect.Opacity"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Effects.DropShadowEffect.Opacity"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.DropShadowEffect.ShadowDepth">
<summary>获取或设置对象与其投影间的距离。</summary>
<returns>投影对象的平面与阴影平面之间的距离，以设备像素为度量单位。值的有效范围为 0 到 300。默认值为 5。</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.DropShadowEffect.ShadowDepthProperty">
<summary>标识 <see cref="P:System.Windows.Media.Effects.DropShadowEffect.ShadowDepth"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Effects.DropShadowEffect.ShadowDepth"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.Effect">
<summary>为所有位图效果提供基类。</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.Effect.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Effects.Effect"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Effects.Effect.EffectMapping">
<summary>当在派生类中重写时，通过效果转换鼠标输入和坐标系。</summary>
<returns>要应用的转换。默认为标识转换。</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.Effect.ImplicitInput">
<summary>获取一个 <see cref="T:System.Windows.Media.Brush"/>，当它用作 <see cref="T:System.Windows.Media.Effects.Effect"/> 的输入时，可导致应用 <see cref="T:System.Windows.Media.Effects.Effect"/> 的 <see cref="T:System.Windows.UIElement"/> 的位图成为该输入。 </summary>
<returns>充当输入的 <see cref="T:System.Windows.Media.Brush"/>。</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.PixelShader">
<summary>提供围绕高级着色语言 (HLSL) 像素着色器的托管包装。</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.PixelShader.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Effects.PixelShader"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Effects.PixelShader.UriSource">
<summary>获取或设置对程序集中 HLSL 字节码的 URI 引用。</summary>
<returns>对程序集中 HLSL 字节码的 URI 引用。</returns>
    </member>
    <member name="F:System.Windows.Media.Effects.PixelShader.UriSourceProperty">
<summary>标识 <see cref="P:System.Windows.Media.Effects.PixelShader.UriSource"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Effects.PixelShader.UriSource"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Media.Effects.SamplingMode">
<summary>指定在自定义着色器效果中对 <see cref="T:System.Windows.Media.Brush"/> 值的依赖项属性进行取样的方式。</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.SamplingMode.Auto">
<summary>系统选择最适合的取样模式。</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.SamplingMode.NearestNeighbor">
<summary>使用最近邻域取样。</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.SamplingMode.Bilinear">
<summary>使用双线性取样。</summary>
    </member>
    <member name="T:System.Windows.Media.Effects.ShaderEffect">
<summary>通过使用 <see cref="T:System.Windows.Media.Effects.PixelShader"/> 提供自定义位图效果。</summary>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Effects.ShaderEffect"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex">
<summary>获取或设置一个值，该值指示要用于纹理坐标对屏幕空间的偏导数的着色器寄存器。</summary>
<returns>包含偏导数的寄存器的索引。 </returns>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.PaddingBottom">
<summary>获取或设置一个数量，沿效果下边缘的效果输出纹理比其输入纹理大该数量。</summary>
<returns>沿效果下边缘的填充。</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.PaddingLeft">
<summary>获取或设置一个数量，沿左边缘的效果输出纹理比其输入纹理大该数量。</summary>
<returns>沿效果左边缘的填充。</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.PaddingRight">
<summary>获取或设置一个数量，沿右边缘的效果输出纹理比其输入纹理大该数量。</summary>
<returns>沿效果右边缘的填充。</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.PaddingTop">
<summary>获取或设置一个数量，沿上边缘方向的效果输出纹理比其输入纹理大该数量。</summary>
<returns>沿效果上边缘的填充。</returns>
    </member>
    <member name="P:System.Windows.Media.Effects.ShaderEffect.PixelShader">
<summary>获取或设置要用于该效果的 <see cref="T:System.Windows.Media.Effects.PixelShader"/>。</summary>
<returns>该效果的 <see cref="T:System.Windows.Media.Effects.PixelShader"/>。</returns>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)">
<summary>将依赖项属性值与像素着色器的浮点常量寄存器相关联。</summary>
<returns>一个 <see cref="T:System.Windows.PropertyChangedCallback"/> 委托，该委托将依赖项属性与 <paramref name="register"/> 指定的着色器常量寄存器相关联。</returns>
<param name="register">与依赖项属性关联的着色器寄存器的索引。</param>
    </member>
    <member name="F:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty">
<summary>标识 <see cref="P:System.Windows.Media.Effects.ShaderEffect.PixelShader"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Effects.ShaderEffect.PixelShader"/> 依赖项属性的标识符。 </returns>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)">
<summary>将依赖项属性值与像素着色器的采样器寄存器相关联。</summary>
<returns>一个 <see cref="T:System.Windows.PropertyChangedCallback"/> 委托，该委托将依赖项属性与 <paramref name="register"/> 指定的着色器的采样器寄存器相关联。</returns>
<param name="register">与依赖项属性关联的着色器采样器的索引。</param>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)">
<summary>将依赖项属性值与像素着色器的采样器寄存器以及 <see cref="T:System.Windows.Media.Effects.SamplingMode"/> 相关联。</summary>
<returns>一个 <see cref="T:System.Windows.PropertyChangedCallback"/> 委托，该委托将依赖项属性与 <paramref name="register"/> 指定的着色器的采样器寄存器相关联。</returns>
<param name="register">与依赖项属性关联的着色器采样器的索引。</param>
<param name="samplingMode">着色器采样器的 <see cref="T:System.Windows.Media.Effects.SamplingMode"/>。</param>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)">
<summary>将依赖项属性与着色器的采样器寄存器相关联。</summary>
<returns>与 <paramref name="samplerRegisterIndex"/> 指定的着色器采样器关联的依赖项属性。</returns>
<param name="dpName">依赖项属性的名称。</param>
<param name="ownerType">具有该依赖项属性的效果的类型。</param>
<param name="samplerRegisterIndex">与依赖项属性关联的着色器采样器的索引。</param>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)">
<summary>将依赖项属性与着色器的采样器寄存器以及取样模式相关联。</summary>
<returns>与 <paramref name="samplerRegisterIndex"/> 指定的着色器采样器关联的依赖项属性。 </returns>
<param name="dpName">依赖项属性的名称。</param>
<param name="ownerType">具有该依赖项属性的效果的类型。</param>
<param name="samplerRegisterIndex">与依赖项属性关联的着色器采样器的索引。</param>
<param name="samplingMode">指定着色器的取样模式的枚举值之一。</param>
    </member>
    <member name="M:System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)">
<summary>通知效果应当更新与指定依赖项属性对应的着色器常量或采样器。</summary>
<param name="dp">要更新的依赖项属性。</param>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapCreateOptions">
<summary>指定位图图像的初始化选项。</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.None">
<summary>未指定任何选项。这不是 Silverlight 中的 <see cref="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions"/> 属性的默认值（<see cref="F:System.Windows.Media.Imaging.BitmapCreateOptions.DelayCreation"/> 是默认值）。</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.DelayCreation">
<summary>使 <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> 对象的初始化延迟到必要时才执行。在处理图像集合时，这十分有用。这是 Silverlight 中的 <see cref="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions"/> 属性的默认值。</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.IgnoreImageCache">
<summary>在不使用现有图像缓存的情况下加载图像。仅在需要刷新缓存中的图像时才可选择此选项。</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.BackgroundCreation">
<summary>使对象的初始化延迟到必要时才执行，对于相同的 URI 使用图像缓存、在后台下载图像以及在后台对其进行解码。请参阅“版本说明”部分。</summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapImage">
<summary>为 <see cref="P:System.Windows.Controls.Image.Source"/> 和 <see cref="P:System.Windows.Media.ImageBrush.ImageSource"/> 属性提供实际的对象源类型。</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapImage.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Imaging.BitmapImage"/> 类的新实例。 </summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapImage.#ctor(System.Uri)">
<summary>使用提供的 URI 初始化 <see cref="T:System.Windows.Media.Imaging.BitmapImage"/> 类的新实例。 </summary>
<param name="uriSource">引用图像的源图形文件的 URI。</param>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions">
<summary>获取或设置 <see cref="T:System.Windows.Media.Imaging.BitmapImage"/> 的 <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions"/>。</summary>
<returns>用于此 <see cref="T:System.Windows.Media.Imaging.BitmapImage"/> 的 <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions"/>。默认值为 <see cref="F:System.Windows.Media.Imaging.BitmapCreateOptions.None"/>。</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.CreateOptionsProperty">
<summary>标识 <see cref="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapImage.DownloadProgress">
<summary>在 <see cref="T:System.Windows.Media.Imaging.BitmapImage"/> 内容的下载进度中已出现显著更改时发生。</summary>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapImage.ImageFailed">
<summary>当存在与图像检索或格式相关的错误时发生。</summary>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapImage.ImageOpened">
<summary>在成功下载和解码图像源后发生。可在呈现图像前使用此事件确定图像的大小。</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.UriSource">
<summary>获取或设置生成此 <see cref="T:System.Windows.Media.Imaging.BitmapImage"/> 的图形源文件的 URI。</summary>
<returns>生成此 <see cref="T:System.Windows.Media.Imaging.BitmapImage"/> 的图形源文件的 URI。</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.UriSourceProperty">
<summary>标识 <see cref="P:System.Windows.Media.Imaging.BitmapImage.UriSource"/> 依赖项属性。</summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapSource">
<summary>为使用位图的属性提供源对象。</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.#ctor">
<summary>初始化 <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.PixelHeight">
<summary>获取位图的高度（以像素为单位）。</summary>
<returns>位图的高度（以像素为单位）。</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapSource.PixelHeightProperty">
<summary>标识 <see cref="P:System.Windows.Media.Imaging.BitmapSource.PixelHeight"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Imaging.BitmapSource.PixelHeight"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.PixelWidth">
<summary>获取位图的宽度（以像素为单位）。</summary>
<returns>位图的宽度（以像素为单位）。</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapSource.PixelWidthProperty">
<summary>标识 <see cref="P:System.Windows.Media.Imaging.BitmapSource.PixelWidth"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Media.Imaging.BitmapSource.PixelWidth"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.SetSource(System.IO.Stream)">
<summary>设置 <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> 的源。</summary>
<param name="streamSource">要将源设置为的流。</param>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapSourceExtensions">
<summary>为 <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> 类提供扩展方法，以支持 3D 图形纹理创建。</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSourceExtensions.CopyTo(System.Windows.Media.Imaging.BitmapSource,Microsoft.Xna.Framework.Graphics.Texture2D)">
<summary>将位图图像复制到纹理。</summary>
<param name="bitmap">位图图像对象。</param>
<param name="dest">纹理。</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSourceExtensions.CopyTo(System.Windows.Media.Imaging.BitmapSource,Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Nullable{Microsoft.Xna.Framework.Rectangle},System.Int32,System.Int32)">
<summary>将位图的子区域复制到纹理的子区域。</summary>
<param name="bitmap">位图图像对象。</param>
<param name="dest">纹理。</param>
<param name="level">映射级别。</param>
<param name="srcRect">要使用的位图图像的区域。</param>
<param name="destX">要将位图的子区域复制到的纹理位置的 x 坐标。</param>
<param name="destY">要将位图的子区域复制到的纹理位置的 y 坐标。</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSourceExtensions.CopyTo(System.Windows.Media.Imaging.BitmapSource,Microsoft.Xna.Framework.Graphics.TextureCube,Microsoft.Xna.Framework.Graphics.CubeMapFace)">
<summary>将位图图像复制到立方体图面。</summary>
<param name="bitmap">位图图像对象。</param>
<param name="dest">纹理。</param>
<param name="face">立方体面。</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSourceExtensions.CopyTo(System.Windows.Media.Imaging.BitmapSource,Microsoft.Xna.Framework.Graphics.TextureCube,Microsoft.Xna.Framework.Graphics.CubeMapFace,System.Int32,System.Nullable{Microsoft.Xna.Framework.Rectangle},System.Int32,System.Int32)">
<summary>将位图的子区域复制到立方体图面的子区域。</summary>
<param name="bitmap">位图图像对象。</param>
<param name="dest">纹理。</param>
<param name="face">立方体的面。</param>
<param name="level">映射级别。</param>
<param name="srcRect">要使用的位图图像的区域。</param>
<param name="destX">要将位图的子区域复制到的位置的 x 坐标。</param>
<param name="destY">要将位图的子区域复制到的纹理位置的 y 坐标。</param>
    </member>
    <member name="T:System.Windows.Media.Imaging.DownloadProgressEventArgs">
<summary>为 <see cref="E:System.Windows.Media.Imaging.BitmapImage.DownloadProgress"/> 事件提供事件数据。</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.DownloadProgressEventArgs.Progress">
<summary>获取表示下载进度的值（介于 0 和 100 之间）。</summary>
<returns>下载进度。值为 0 表示没有进度；值为 100 表示已完成下载。 </returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.WriteableBitmap">
<summary>提供一个可写入并可更新的 <see cref="T:System.Windows.Media.Imaging.BitmapSource"/>。</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32)">
<summary>使用提供的维度初始化 <see cref="T:System.Windows.Media.Imaging.WriteableBitmap"/> 类的新实例。</summary>
<param name="pixelWidth">位图的宽度。</param>
<param name="pixelHeight">位图的高度。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
<paramref name="pixelWidth"/> 或 <paramref name="pixelHeight"/> 小于等于零。</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)">
<summary>使用提供的 <see cref="T:System.Windows.Media.Imaging.BitmapSource"/> 初始化 <see cref="T:System.Windows.Media.Imaging.WriteableBitmap"/> 类的新实例。</summary>
<param name="source">要用于初始化的 <see cref="T:System.Windows.Media.Imaging.BitmapSource"/>。 </param>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.UIElement,System.Windows.Media.Transform)">
<summary>使用提供的元素和变换初始化 <see cref="T:System.Windows.Media.Imaging.WriteableBitmap"/> 类的新实例。</summary>
<param name="element">要在位图中呈现的所需元素。 </param>
<param name="transform">用户要在绘制到位图中之前的最后一步中应用到元素的变换。如果您希望位图将它的变换考虑在内，则这对于您特别有意义。此值可以为 null。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
<exception cref="T:System.ArgumentException">元素大小无效。当像素宽度或像素高度不大于零时，发生这种情况。</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.Invalidate">
<summary>请求绘制或重绘整个位图。</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.WriteableBitmap.Pixels">
<summary>获取表示位图 2D 纹理的数组。</summary>
<returns>表示位图 2D 纹理的整数数组。</returns>
<exception cref="T:System.Security.SecurityException"><see cref="T:System.Windows.Media.Imaging.WriteableBitmap"/> 创建自受保护的内容。<see cref="P:System.Windows.Media.Imaging.WriteableBitmap.Pixels"/> 数组在这种情况下不可访问。</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.Render(System.Windows.UIElement,System.Windows.Media.Transform)">
<summary>在位图中呈现元素。</summary>
<param name="element">要在位图中呈现的元素。</param>
<param name="transform">在绘制到位图中之前应用到元素的变换。如果提供了空变换，则表示该元素的位会在同一偏移位置显示，就像将它们放置在其父级中一样。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="element"/> 为 null。</exception>
    </member>
    <member name="T:System.Windows.Media.Media3D.Matrix3D">
<summary>表示用于三维 (3-D) 空间中的变换的 4 × 4 矩阵。</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
<summary>初始化 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 类的新实例。 </summary>
<param name="m11">新矩阵的 (1.1) 字段的值。</param>
<param name="m12">新矩阵的 (1.2) 字段的值。</param>
<param name="m13">新矩阵的 (1.3) 字段的值。</param>
<param name="m14">新矩阵的 (1.4) 字段的值。</param>
<param name="m21">新矩阵的 (2.1) 字段的值。</param>
<param name="m22">新矩阵的 (2.2) 字段的值。</param>
<param name="m23">新矩阵的 (2.3) 字段的值。</param>
<param name="m24">新矩阵的 (2.4) 字段的值。</param>
<param name="m31">新矩阵的 (3.1) 字段的值。</param>
<param name="m32">新矩阵的 (3.2) 字段的值。</param>
<param name="m33">新矩阵的 (3.3) 字段的值。</param>
<param name="m34">新矩阵的 (3.4) 字段的值。</param>
<param name="offsetX">新矩阵的 X 偏移量字段的值。</param>
<param name="offsetY">新矩阵的 Y 偏移量字段的值。</param>
<param name="offsetZ">新矩阵的 Z 偏移量字段的值。</param>
<param name="m44">新矩阵的 (4,4) 字段的值。</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Equals(System.Object)">
<summary>测试两个矩阵是否相等。</summary>
<returns>如果矩阵相等，则为 true；否则为 false。</returns>
<param name="o">要测试相等的对象。</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Equals(System.Windows.Media.Media3D.Matrix3D)">
<summary>测试两个矩阵是否相等。</summary>
<returns>如果矩阵相等，则为 true；否则为 false。</returns>
<param name="value">要进行比较的 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/>。</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.GetHashCode">
<summary>返回此矩阵的哈希代码。</summary>
<returns>一个指定此矩阵的哈希代码的整数。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.HasInverse">
<summary>获取指示是否可反转此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的值。</summary>
<returns>如果 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 存在逆矩阵，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.Identity">
<summary>将 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 结构更改为标识 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/>。</summary>
<returns>标识 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/>。</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Invert">
<summary>反转此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 结构。</summary>
<exception cref="T:System.InvalidOperationException">该矩阵不可逆。</exception>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.IsIdentity">
<summary>确定此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 结构是否为标识 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/>。</summary>
<returns>如果 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 为标识 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/>，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M11">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第一行、第一列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 结构的第一行、第一列中的值。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M12">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第一行、第二列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第一行与第二列相交处的值。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M13">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第一行、第三列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的第一行、第三列的值。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M14">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第一行、第四列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第一行、第四列的值。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M21">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第二行、第一列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第二行与第一列相交处的值。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M22">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第二行、第二列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的第二行、第二列的值。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M23">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第二行、第三列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的第二行、第三列的值。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M24">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第二行、第四列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的第二行、第四列的值。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M31">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第三行、第一列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的第三行、第一列的值。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M32">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第三行、第二列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的第三行、第二列的值。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M33">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第三行、第三列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的第三行、第三列的值。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M34">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第三行、第四列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的第三行、第四列的值。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M44">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第四行、第四列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的第四行、第四列的值。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.OffsetX">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第四行、第一列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第四行、第一列的值。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.OffsetY">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第四行、第二列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的第四行、第二列的值。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.OffsetZ">
<summary>获取或设置此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 中第四行、第三列的值。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的第四行、第三列的值。</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.op_Equality(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
<summary>比较两个 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 实例是否完全相等。</summary>
<returns>如果矩阵相等，则为 true；否则为 false。</returns>
<param name="matrix1">要比较的第一个矩阵。</param>
<param name="matrix2">要比较的第二个矩阵。</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.op_Inequality(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
<summary>比较两个 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 实例是否不相等。</summary>
<returns>如果矩阵不相等，则为 true；否则为 false。</returns>
<param name="matrix1">要比较的第一个矩阵。</param>
<param name="matrix2">要比较的第二个矩阵。</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.op_Multiply(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
<summary>将指定的矩阵相乘。</summary>
<returns><see cref="T:System.Windows.Media.Media3D.Matrix3D"/>，它是相乘的结果。</returns>
<param name="matrix1">要相乘的矩阵。</param>
<param name="matrix2">与第一个矩阵相乘的矩阵。</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
<summary>有关此成员的说明，请参阅 <see cref="M:System.IFormattable.ToString"/>。</summary>
<returns>使用指定格式的当前实例的值。</returns>
<param name="format">要使用的格式。</param>
<param name="provider">要使用的提供程序。</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.ToString">
<summary>创建此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的字符串表示形式。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的字符串表示形式。</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.ToString(System.IFormatProvider)">
<summary>创建此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的字符串表示形式。</summary>
<returns>此 <see cref="T:System.Windows.Media.Media3D.Matrix3D"/> 的字符串表示形式。</returns>
<param name="provider">特定于区域的格式设置信息。</param>
    </member>
    <member name="T:System.Windows.Messaging.ListenFailedException">
<summary>表示无法注册 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 时发生的异常。 </summary>
    </member>
    <member name="T:System.Windows.Messaging.LocalMessageReceiver">
<summary>表示两个基于 Silverlight 的应用程序之间的本地消息传递通道的接收端。 </summary>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageReceiver.#ctor(System.String)">
<summary>初始化 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 类的新实例，并使用指定的名称配置它。</summary>
<param name="receiverName">接收方的名称。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="receiverName"/> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
<paramref name="receiverName"/> 的长度超过 256 个字符。</exception>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageReceiver.#ctor(System.String,System.Windows.Messaging.ReceiverNameScope,System.Collections.Generic.IEnumerable{System.String})">
<summary>初始化 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 类的新实例，并使用指定的名称、名称范围要求和允许的发送方域配置它。</summary>
<param name="receiverName">接收方的名称，该名称在全局名称范围或接收方的域中必须是唯一的，具体取决于 <paramref name="nameScope"/> 参数的值。 </param>
<param name="nameScope">一个值，该值指示 <paramref name="receiverName"/> 的范围是限定为全局名称范围还是限定为接收方的特定域。 </param>
<param name="allowedSenderDomains">接收方可从中接收消息的域，或用来从任何域进行接收的 <see cref="F:System.Windows.Messaging.LocalMessageReceiver.AnyDomain"/>。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="receiverName"/> 为 null。-或- <paramref name="allowedSenderDomains"/> 为 null。-或- <paramref name="allowedSenderDomains"/> 包含一个或多个 null 条目。</exception>
      <exception cref="T:System.ArgumentException">
<paramref name="receiverName"/> 的长度超过 256 个字符。-或- <paramref name="allowedSenderDomains"/> 包含一个或多个长度超过 256 个字符的条目。-或- <paramref name="allowedSenderDomains"/> 包含一个或多个具有无效字符（“,”和“:”）的条目。</exception>
    </member>
    <member name="P:System.Windows.Messaging.LocalMessageReceiver.AllowedSenderDomains">
<summary>获取接收方可从中接收消息的域。</summary>
<returns>接收方可从中接收消息的域；如果接收方可以接收来自任何域的消息，则为 <see cref="F:System.Windows.Messaging.LocalMessageReceiver.AnyDomain"/>。</returns>
    </member>
    <member name="F:System.Windows.Messaging.LocalMessageReceiver.AnyDomain">
<summary>一个表示任何域的值。</summary>
    </member>
    <member name="P:System.Windows.Messaging.LocalMessageReceiver.DisableSenderTrustCheck">
<summary>获取或设置一个值，该值指示此接收方是否可以接收来自具有不同保护模式设置的发送方的消息。 </summary>
<returns>如果接收方可以接收消息而不考虑发送方的保护模式设置，则为 true；否则为 false。</returns>
<exception cref="T:System.InvalidOperationException">设置此属性时，已调用了 <see cref="M:System.Windows.Messaging.LocalMessageReceiver.Listen"/> 方法。</exception>
<exception cref="T:System.ObjectDisposedException">设置此属性时，已调用了 <see cref="M:System.Windows.Messaging.LocalMessageReceiver.Dispose"/> 方法。</exception>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageReceiver.Dispose">
<summary>使接收方停止接收消息，并释放由接收方使用的所有资源。 </summary>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageReceiver.Listen">
<summary>开始监听来自 <see cref="T:System.Windows.Messaging.LocalMessageSender"/> 的消息。</summary>
<exception cref="T:System.InvalidOperationException">已调用 <see cref="M:System.Windows.Messaging.LocalMessageReceiver.Listen"/> 方法。</exception>
<exception cref="T:System.ObjectDisposedException">已调用 <see cref="M:System.Windows.Messaging.LocalMessageReceiver.Dispose"/> 方法。</exception>
<exception cref="T:System.Windows.Messaging.ListenFailedException">已有一个接收方通过相同名称和名称范围注册。</exception>
    </member>
    <member name="E:System.Windows.Messaging.LocalMessageReceiver.MessageReceived">
<summary>接收来自 <see cref="T:System.Windows.Messaging.LocalMessageSender"/> 的消息时发生。</summary>
    </member>
    <member name="P:System.Windows.Messaging.LocalMessageReceiver.NameScope">
<summary>获取一个值，该值指示 <see cref="P:System.Windows.Messaging.LocalMessageReceiver.ReceiverName"/> 的范围是限定为全局名称范围还是限定为接收方的特定域。 </summary>
<returns>一个值，该值指示 <see cref="P:System.Windows.Messaging.LocalMessageReceiver.ReceiverName"/> 的范围是限定为全局名称范围还是限定为接收方的特定域。 </returns>
    </member>
    <member name="P:System.Windows.Messaging.LocalMessageReceiver.ReceiverName">
<summary>获取接收方的名称。 </summary>
<returns>接收方的名称。 </returns>
    </member>
    <member name="T:System.Windows.Messaging.LocalMessageSender">
<summary>表示两个基于 Silverlight 的应用程序之间的本地消息传递通道的发送端。</summary>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageSender.#ctor(System.String)">
<summary>初始化 <see cref="T:System.Windows.Messaging.LocalMessageSender"/> 类的新实例，并使用指定的名称配置它以向接收方发送消息。</summary>
<param name="receiverName">此发送方会将消息发送到的 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 的 <see cref="P:System.Windows.Messaging.LocalMessageReceiver.ReceiverName"/> 属性值。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="receiverName"/> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
<paramref name="receiverName"/> 的长度超过 256 个字符。</exception>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageSender.#ctor(System.String,System.String)">
<summary>初始化 <see cref="T:System.Windows.Messaging.LocalMessageSender"/> 类的新实例，并使用指定的名称和域配置它以向接收方发送消息。 </summary>
<param name="receiverName">此发送方会将消息发送到的 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 的 <see cref="P:System.Windows.Messaging.LocalMessageReceiver.ReceiverName"/> 属性值。</param>
<param name="receiverDomain">此发送方会将消息发送到的 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 的域；如果接收方的范围未限制在某个域，则为 <see cref="F:System.Windows.Messaging.LocalMessageSender.Global"/>。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="receiverName"/> 为 null。-或- <paramref name="receiverDomain"/> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
<paramref name="receiverName"/> 的长度超过 256 个字符。-或- <paramref name="receiverDomain"/> 的长度超过 256 个字符。-或- <paramref name="receiverDomain"/> 包含一个或多个无效的字符（“,”和“:”）。</exception>
    </member>
    <member name="F:System.Windows.Messaging.LocalMessageSender.Global">
<summary>一个表示全局域的值。 </summary>
    </member>
    <member name="P:System.Windows.Messaging.LocalMessageSender.ReceiverDomain">
<summary>获取此发送方会将消息发送到的 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 的域。</summary>
<returns>此发送方会将消息发送到的 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 的域，具体取决于接收方的 <see cref="P:System.Windows.Messaging.LocalMessageReceiver.NameScope"/> 属性值。</returns>
    </member>
    <member name="P:System.Windows.Messaging.LocalMessageSender.ReceiverName">
<summary>获取此发送方会将消息发送到的 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 的名称。</summary>
<returns>此发送方会将消息发送到的 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 的名称。</returns>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageSender.SendAsync(System.String)">
<summary>通过异步方式向配置的接收方发送指定的消息。</summary>
<param name="message">要发送的消息。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="message"/> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
<paramref name="message"/> 的长度超过 40,960 个字符。</exception>
    </member>
    <member name="M:System.Windows.Messaging.LocalMessageSender.SendAsync(System.String,System.Object)">
<summary>通过异步方式向配置的接收方发送指定的消息。</summary>
<param name="message">要发送的消息。</param>
<param name="userState">用作消息传输的任务 ID 的唯一用户状态对象。 </param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="message"/> 为 null。</exception>
      <exception cref="T:System.ArgumentException">
<paramref name="message"/> 的长度超过 40,960 个字符。</exception>
    </member>
    <member name="E:System.Windows.Messaging.LocalMessageSender.SendCompleted">
<summary>当消息成功发送时发生。 </summary>
    </member>
    <member name="T:System.Windows.Messaging.MessageReceivedEventArgs">
<summary>为 <see cref="E:System.Windows.Messaging.LocalMessageReceiver.MessageReceived"/> 事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.Messaging.MessageReceivedEventArgs.Message">
<summary>获取从 <see cref="T:System.Windows.Messaging.LocalMessageSender"/> 发送到 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 的消息。 </summary>
<returns>已发送的消息。 </returns>
    </member>
    <member name="P:System.Windows.Messaging.MessageReceivedEventArgs.NameScope">
<summary>获取一个值，该值指示是否已配置 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 以接收来自全局名称范围或特定域的消息。</summary>
<returns>一个指示是否已为全局或域名称范围配置接收方的值。</returns>
    </member>
    <member name="P:System.Windows.Messaging.MessageReceivedEventArgs.ReceiverName">
<summary>获取接收消息的 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 的名称。</summary>
<returns>消息接收方的名称。 </returns>
    </member>
    <member name="P:System.Windows.Messaging.MessageReceivedEventArgs.Response">
<summary>获取或设置一条要发送到发送原始消息的 <see cref="T:System.Windows.Messaging.LocalMessageSender"/> 的响应消息。</summary>
<returns>要发送到原始消息发送方的响应消息。 </returns>
    </member>
    <member name="P:System.Windows.Messaging.MessageReceivedEventArgs.SenderDomain">
<summary>获取发送消息的 <see cref="T:System.Windows.Messaging.LocalMessageSender"/> 的域。</summary>
<returns>发送消息的 <see cref="T:System.Windows.Messaging.LocalMessageSender"/> 的域。</returns>
    </member>
    <member name="T:System.Windows.Messaging.ReceiverNameScope">
<summary>定义一些值，这些值指示 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 名称的范围是限定为全局域还是限定为特定域。 </summary>
    </member>
    <member name="F:System.Windows.Messaging.ReceiverNameScope.Domain">
<summary>接收方名称的范围限定为接收方的域。 </summary>
    </member>
    <member name="F:System.Windows.Messaging.ReceiverNameScope.Global">
<summary>接收方名称的范围限定为全局域。</summary>
    </member>
    <member name="T:System.Windows.Messaging.SendCompletedEventArgs">
<summary>为 <see cref="E:System.Windows.Messaging.LocalMessageSender.SendCompleted"/> 事件提供数据。</summary>
    </member>
    <member name="P:System.Windows.Messaging.SendCompletedEventArgs.Message">
<summary>获取从 <see cref="T:System.Windows.Messaging.LocalMessageSender"/> 发送到 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 的消息。 </summary>
<returns>已发送的消息。 </returns>
    </member>
    <member name="P:System.Windows.Messaging.SendCompletedEventArgs.ReceiverDomain">
<summary>获取接收消息的 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 的域。</summary>
<returns>接收消息的 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 的域。</returns>
    </member>
    <member name="P:System.Windows.Messaging.SendCompletedEventArgs.ReceiverName">
<summary>获取接收消息的 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 的名称。</summary>
<returns>消息接收方的名称。 </returns>
    </member>
    <member name="P:System.Windows.Messaging.SendCompletedEventArgs.Response">
<summary>获取从接收原始消息的 <see cref="T:System.Windows.Messaging.LocalMessageReceiver"/> 发送到 <see cref="T:System.Windows.Messaging.LocalMessageSender"/> 的响应消息。</summary>
<returns>发送到原始消息发送方的响应消息。 </returns>
    </member>
    <member name="T:System.Windows.Messaging.SendFailedException">
<summary>表示在 <see cref="T:System.Windows.Messaging.LocalMessageSender"/> 未能发送消息时可能发生的异常。</summary>
    </member>
    <member name="T:System.Windows.Navigation.LoadCompletedEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.Controls.WebBrowser.LoadCompleted"/> 事件的方法。 </summary>
<param name="sender">事件的源。</param>
<param name="e">事件数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatedEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.Navigation.NavigationService.Navigated"/> 事件的方法。 </summary>
<param name="sender">事件的源。</param>
<param name="e">事件的数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventArgs">
<summary>为 <see cref="M:System.Windows.Controls.Page.OnNavigatingFrom(System.Windows.Navigation.NavigatingCancelEventArgs)"/> 方法和 <see cref="E:System.Windows.Navigation.NavigationService.Navigating"/> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigatingCancelEventArgs.#ctor(System.Uri,System.Windows.Navigation.NavigationMode)">
<summary>基于 URI 和模式初始化 <see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs"/> 类的新实例。 </summary>
<param name="uri">要导航到的内容的统一资源标识符 (URI)。</param>
<param name="mode">一个指示所发生导航的类型的值。</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigatingCancelEventArgs.#ctor(System.Uri,System.Windows.Navigation.NavigationMode,System.Boolean,System.Boolean)">
<summary>初始化 <see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs"/> 类的新实例，设置所有初始属性值。</summary>
<param name="uri">要导航到的内容的统一资源标识符 (URI)。</param>
<param name="mode">一个指示所发生导航的类型的值。</param>
<param name="IsCancelable">设置初始 <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.IsCancelable"/> 值。</param>
<param name="IsNavigationInitiator">设置初始 <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.IsNavigationInitiator"/> 值。</param>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.IsCancelable">
<summary>获取一个值，该值指示是否可以取消导航。</summary>
<returns>如果可以取消导航，则为 true；否则为 false。 </returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.IsNavigationInitiator">
<summary>获取一个值，该值指示当前应用程序是否为导航的原点和目标。</summary>
<returns>如果导航在当前应用程序中开始和结束，则为 true；如果导航在外部位置开始或结束，则为 false。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode">
<summary>获取一个值，该值指示所发生导航的类型。</summary>
<returns>指示所发生的导航类型的值（<see cref="F:System.Windows.Navigation.NavigationMode.Back"/>、<see cref="F:System.Windows.Navigation.NavigationMode.Forward"/> 或 <see cref="F:System.Windows.Navigation.NavigationMode.New"/>）。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri">
<summary>获取要导航到的内容的统一资源标识符 (URI)。</summary>
<returns>表示内容的 URI 的值。</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventHandler">
<summary>表示将处理 <see cref="E:System.Windows.Navigation.NavigationService.Navigating"/> 事件的方法，该事件是可取消事件。 </summary>
<param name="sender">事件的源。</param>
<param name="e">事件的数据。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationEventArgs">
<summary>为导航方法以及无法取消导航请求的事件处理程序提供数据。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationEventArgs.#ctor(System.Object,System.Uri)">
<summary>基于内容和 URI 初始化 <see cref="T:System.Windows.Navigation.NavigationEventArgs"/> 类的新实例。</summary>
<param name="content">初始化 <see cref="P:System.Windows.Navigation.NavigationEventArgs.Content"/> 属性。</param>
<param name="uri">初始化 <see cref="P:System.Windows.Navigation.NavigationEventArgs.Uri"/> 属性。</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationEventArgs.#ctor(System.Object,System.Uri,System.Windows.Navigation.NavigationMode,System.Boolean)">
<summary>初始化 <see cref="T:System.Windows.Navigation.NavigationEventArgs"/> 类的新实例，为所有属性设置初始值。</summary>
<param name="content">初始化 <see cref="P:System.Windows.Navigation.NavigationEventArgs.Content"/> 属性。</param>
<param name="uri">初始化 <see cref="P:System.Windows.Navigation.NavigationEventArgs.Uri"/> 属性。</param>
<param name="NavigationMode">初始化 <see cref="P:System.Windows.Navigation.NavigationEventArgs.NavigationMode"/> 属性。</param>
<param name="IsNavigationInitiator">初始化 <see cref="P:System.Windows.Navigation.NavigationEventArgs.IsNavigationInitiator"/> 属性。</param>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Content">
<summary>获取正在导航到的目标的内容。</summary>
<returns>表示目标内容的对象。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.IsNavigationInitiator">
<summary>获取一个值，该值指示当前应用程序是否为导航的原点和目标。</summary>
<returns>如果导航在当前应用程序中开始和结束，则为 true；如果导航在外部位置开始或结束，则为 false。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.NavigationMode">
<summary>获取一个值，该值指示所发生导航的类型。</summary>
<returns>指示所发生的导航类型的值（<see cref="F:System.Windows.Navigation.NavigationMode.Back"/>、<see cref="F:System.Windows.Navigation.NavigationMode.Forward"/> 或 <see cref="F:System.Windows.Navigation.NavigationMode.New"/>）。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Uri">
<summary>获取目标的统一资源标识符 (URI)。</summary>
<returns>一个表示 URI 的值。</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationMode">
<summary>指定所发生的导航类型。 </summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.New">
<summary>导航到新内容。当调用 <see cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)"/> 方法或设置 <see cref="P:System.Windows.Navigation.NavigationService.Source"/> 属性时使用此值。它还用于用户从 Web 浏览器启动的任何导航请求（包括 Web 浏览器中的前进或后退按钮）。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Back">
<summary>导航到后退导航历史记录中的最新内容。当调用 <see cref="M:System.Windows.Navigation.NavigationService.GoBack"/> 方法时使用此值。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Forward">
<summary>导航到前进导航历史记录中的最新内容。当调用 <see cref="M:System.Windows.Navigation.NavigationService.GoForward"/> 方法时使用此值。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Refresh">
<summary>重新加载当前内容。当调用 <see cref="M:System.Windows.Navigation.NavigationService.Refresh"/> 方法时使用此值。</summary>
    </member>
    <member name="T:System.Windows.Printing.BeginPrintEventArgs">
<summary>为 <see cref="E:System.Windows.Printing.PrintDocument.BeginPrint"/> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Printing.BeginPrintEventArgs.#ctor">
<summary>初始化 <see cref="T:System.Windows.Printing.BeginPrintEventArgs"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Printing.EndPrintEventArgs">
<summary>为 <see cref="E:System.Windows.Printing.PrintDocument.EndPrint"/> 事件提供数据。 </summary>
    </member>
    <member name="M:System.Windows.Printing.EndPrintEventArgs.#ctor">
<summary>初始化 <see cref="T:System.Windows.Printing.EndPrintEventArgs"/> 类的新实例。  </summary>
    </member>
    <member name="P:System.Windows.Printing.EndPrintEventArgs.Error">
<summary>获取一个异常，该异常指示在打印期间发生的错误的种类（如果发生错误）。 </summary>
<returns>一个指示在打印期间发生的错误的种类（如果发生错误）的异常。默认值为 null。</returns>
    </member>
    <member name="T:System.Windows.Printing.PrintDocument">
<summary>为 Silverlight 应用程序提供打印功能。</summary>
    </member>
    <member name="M:System.Windows.Printing.PrintDocument.#ctor">
<summary>初始化 <see cref="T:System.Windows.Printing.PrintDocument"/> 类的新实例。 </summary>
    </member>
    <member name="E:System.Windows.Printing.PrintDocument.BeginPrint">
<summary>在调用 <see cref="M:System.Windows.Printing.PrintDocument.Print(System.String)"/> 方法并且打印对话框成功返回之后，但 <see cref="E:System.Windows.Printing.PrintDocument.PrintPage"/> 事件引发之前发生。</summary>
    </member>
    <member name="E:System.Windows.Printing.PrintDocument.EndPrint">
<summary>当打印操作传递给打印后台程序或者应用程序作者取消打印操作时发生。 </summary>
    </member>
    <member name="M:System.Windows.Printing.PrintDocument.Print(System.String)">
<summary>通过打开打印对话框启动指定文档的打印过程。</summary>
<param name="documentName">要打印的文档的名称。</param>
<exception cref="T:System.Security.SecurityException">打印操作不是用户启动的。</exception>
    </member>
    <member name="P:System.Windows.Printing.PrintDocument.PrintedPageCount">
<summary>获取已打印的页数。</summary>
<returns>已打印的页数。</returns>
    </member>
    <member name="F:System.Windows.Printing.PrintDocument.PrintedPageCountProperty">
<summary>获取 <see cref="P:System.Windows.Printing.PrintDocument.PrintedPageCount"/> 依赖项属性的标识符。</summary>
<returns><see cref="P:System.Windows.Printing.PrintDocument.PrintedPageCount"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="E:System.Windows.Printing.PrintDocument.PrintPage">
<summary>在打印每一页时发生。</summary>
    </member>
    <member name="T:System.Windows.Printing.PrintPageEventArgs">
<summary>为 <see cref="E:System.Windows.Printing.PrintDocument.PrintPage"/> 事件提供数据。</summary>
    </member>
    <member name="M:System.Windows.Printing.PrintPageEventArgs.#ctor">
<summary>初始化 <see cref="T:System.Windows.Printing.PrintPageEventArgs"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Printing.PrintPageEventArgs.HasMorePages">
<summary>获取或设置是否有更多页要打印。</summary>
<returns>如果没有更多页要打印，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:System.Windows.Printing.PrintPageEventArgs.PageMargins">
<summary>获取当前打印的页的边距。</summary>
<returns>当前打印的页的边距。</returns>
    </member>
    <member name="P:System.Windows.Printing.PrintPageEventArgs.PageVisual">
<summary>获取或设置要打印的可视元素。</summary>
<returns>要打印的可视元素。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Printing.PrintPageEventArgs.PrintableArea">
<summary>获取可打印区域的大小。</summary>
<returns>可打印区域的大小（以屏幕像素为单位）。默认值为 0.0F。</returns>
    </member>
    <member name="T:System.Windows.Resources.StreamResourceInfo">
<summary>为通过 <see cref="M:System.Windows.Application.GetResourceStream(System.Windows.Resources.StreamResourceInfo,System.Uri)"/> 方法获得的应用程序资源或其他包提供资源流信息。 </summary>
    </member>
    <member name="M:System.Windows.Resources.StreamResourceInfo.#ctor(System.IO.Stream,System.String)">
<summary>初始化 <see cref="T:System.Windows.Resources.StreamResourceInfo"/> 类的新实例。</summary>
<param name="stream">用于创建资源的流。</param>
<param name="contentType">内容的 MIME 类型。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="stream"/> 为 null。</exception>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.ContentType">
<summary>获取流中内容的 MIME 类型。</summary>
<returns>流中内容的 MIME 类型，格式为字符串。</returns>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.Stream">
<summary>获取资源中包含的流。</summary>
<returns>资源中包含的流。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Ellipse">
<summary>绘制一个椭圆。 </summary>
    </member>
    <member name="M:System.Windows.Shapes.Ellipse.#ctor">
<summary>初始化 <see cref="T:System.Windows.Shapes.Ellipse"/> 类的新实例。</summary>
    </member>
    <member name="T:System.Windows.Shapes.Line">
<summary>在两个点之间绘制一条直线。 </summary>
    </member>
    <member name="M:System.Windows.Shapes.Line.#ctor">
<summary>初始化 <see cref="T:System.Windows.Shapes.Line"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Shapes.Line.X1">
<summary>获取或设置 <see cref="T:System.Windows.Shapes.Line"/> 起点的 x 坐标。</summary>
<returns>直线起点的 x 坐标（以像素为单位）。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X1Property">
<summary>标识 <see cref="P:System.Windows.Shapes.Line.X1"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Line.X1"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.X2">
<summary>获取或设置 <see cref="T:System.Windows.Shapes.Line"/> 终点的 x 坐标。  </summary>
<returns>直线终点的 x 坐标（以像素为单位）。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X2Property">
<summary>标识 <see cref="P:System.Windows.Shapes.Line.X2"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Line.X2"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y1">
<summary>获取或设置 <see cref="T:System.Windows.Shapes.Line"/> 起点的 y 坐标。 </summary>
<returns>直线起点的 y 坐标（以像素为单位）。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y1Property">
<summary>标识 <see cref="P:System.Windows.Shapes.Line.Y1"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Line.Y1"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y2">
<summary>获取或设置 <see cref="T:System.Windows.Shapes.Line"/> 终点的 y 坐标。 </summary>
<returns>直线终点的 y 坐标（以像素为单位）。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y2Property">
<summary>标识 <see cref="P:System.Windows.Shapes.Line.Y2"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Line.Y2"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Path">
<summary>绘制一系列相互连接的直线和曲线。直线和曲线维度通过 <see cref="P:System.Windows.Shapes.Path.Data"/> 属性声明，并且可以使用特定于 Path 的微型语言或使用对象模型来指定。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Path.#ctor">
<summary>初始化 <see cref="T:System.Windows.Shapes.Path"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Path.Data">
<summary>获取或设置指定要绘制的形状的 <see cref="T:System.Windows.Media.Geometry"/>。</summary>
<returns>要绘制的形状的说明。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Path.DataProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Path.Data"/> 依赖项属性。  </summary>
<returns><see cref="P:System.Windows.Shapes.Path.Data"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Polygon">
<summary>绘制一个多边形，它是形成闭合形状的一系列相互连接的直接。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Polygon.#ctor">
<summary>初始化 <see cref="T:System.Windows.Shapes.Polygon"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.FillRule">
<summary>获取或设置一个值，该值指定如何确定形状的内部填充。</summary>
<returns>枚举的一个值。默认值为 <see cref="F:System.Windows.Media.FillRule.EvenOdd"/>。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.FillRuleProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Polygon.FillRule"/> 依赖项属性。  </summary>
<returns><see cref="P:System.Windows.Shapes.Polygon.FillRule"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.Points">
<summary>获取或设置一个集合，其中包含多边形的顶点。</summary>
<returns>描述多边形顶点的 <see cref="T:System.Windows.Point"/> 结构的集合。默认值为 null。该值可表示为在下面的“pointSet 语法”中描述的字符串。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.PointsProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Polygon.Points"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Polygon.Points"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Polyline">
<summary>绘制一系列相互连接的直线。 </summary>
    </member>
    <member name="M:System.Windows.Shapes.Polyline.#ctor">
<summary>初始化 <see cref="T:System.Windows.Shapes.Polyline"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.FillRule">
<summary>获取或设置一个值，该值指定如何确定形状的内部填充。</summary>
<returns>用于指定填充行为的枚举值。默认值为 <see cref="F:System.Windows.Media.FillRule.EvenOdd"/>。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.FillRuleProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Polyline.FillRule"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Polyline.FillRule"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.Points">
<summary>获取或设置一个集合，其中包含 <see cref="T:System.Windows.Shapes.Polyline"/> 的顶点。</summary>
<returns>描述 <see cref="T:System.Windows.Shapes.Polyline"/> 顶点的 <see cref="T:System.Windows.Point"/> 结构的集合。默认值为 null。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.PointsProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Polyline.Points"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Polyline.Points"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Rectangle">
<summary>绘制一个矩形形状，该形状可以具有笔画和填充。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Rectangle.#ctor">
<summary>初始化 <see cref="T:System.Windows.Shapes.Rectangle"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusX">
<summary>获取或设置用于使矩形的角变圆的椭圆的 x 轴半径。</summary>
<returns>用于使矩形的角变圆的椭圆的 x 轴半径。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusXProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Rectangle.RadiusX"/> 依赖项属性。  </summary>
<returns><see cref="P:System.Windows.Shapes.Rectangle.RadiusX"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusY">
<summary>获取或设置用于使矩形的角变圆的椭圆的 y 轴半径。 </summary>
<returns>用于使矩形的角变圆的椭圆的 y 轴半径。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusYProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Rectangle.RadiusY"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Rectangle.RadiusY"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Shape">
<summary>为 <see cref="T:System.Windows.Shapes.Ellipse"/>、<see cref="T:System.Windows.Shapes.Polygon"/> 和 <see cref="T:System.Windows.Shapes.Rectangle"/> 之类的形状元素提供基类。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Shape.#ctor">
<summary>初始化 <see cref="T:System.Windows.Shapes.Shape"/> 类的新实例。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Fill">
<summary>获取或设置指定形状内部绘制方式的 <see cref="T:System.Windows.Media.Brush"/>。</summary>
<returns>说明形状内部绘制方式的 <see cref="T:System.Windows.Media.Brush"/>。默认值为 null。请参阅“备注”。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.FillProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Shape.Fill"/> 依赖项属性。</summary>
<returns><see cref="P:System.Windows.Shapes.Shape.Fill"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.GeometryTransform">
<summary>获取一个表示 <see cref="T:System.Windows.Media.Transform"/> 的值，该值在绘制形状之前应用于 <see cref="T:System.Windows.Shapes.Shape"/> 的几何图形。</summary>
<returns>一个 <see cref="T:System.Windows.Media.Transform"/>，它在绘制形状之前应用于 <see cref="T:System.Windows.Shapes.Shape"/> 的几何图形。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stretch">
<summary>获取或设置一个 <see cref="T:System.Windows.Media.Stretch"/> 枚举值，该值描述形状如何填充为它分配的空间。</summary>
<returns><see cref="T:System.Windows.Media.Stretch"/> 枚举值之一。运行时的默认值取决于 <see cref="T:System.Windows.Shapes.Shape"/> 的类型。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StretchProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Shape.Stretch"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Shape.Stretch"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stroke">
<summary>获取或设置指定 <see cref="T:System.Windows.Shapes.Shape"/> 轮廓绘制方式的 <see cref="T:System.Windows.Media.Brush"/>。</summary>
<returns>一个 <see cref="T:System.Windows.Media.Brush"/>，指定 <see cref="T:System.Windows.Shapes.Shape"/> 轮廓的绘制方式。默认值为 null。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashArray">
<summary>获取或设置 <see cref="T:System.Double"/> 值的集合，这些值指示用于勾勒形状轮廓的虚线和间隙样式。 </summary>
<returns>指定虚线和间隙样式的 <see cref="T:System.Double"/> 值的集合。 </returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashArrayProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeDashArray"/> 依赖项属性。  </summary>
<returns><see cref="P:System.Windows.Shapes.Shape.StrokeDashArray"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashCap">
<summary>获取或设置一个 <see cref="T:System.Windows.Media.PenLineCap"/> 枚举值，该值指定如何绘制虚线的两端。 </summary>
<returns><see cref="T:System.Windows.Media.PenLineCap"/> 的枚举值之一。默认值为 <see cref="F:System.Windows.Media.PenLineCap.Flat"/>。 </returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashCapProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeDashCap"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Shape.StrokeDashCap"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashOffset">
<summary>获取或设置一个 <see cref="T:System.Double"/>，它指定虚线样式内虚线开始处的距离。</summary>
<returns>一个 <see cref="T:System.Double"/>，表示虚线样式内虚线开始处的距离。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashOffsetProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeEndLineCap">
<summary>获取或设置一个 <see cref="T:System.Windows.Media.PenLineCap"/> 枚举值，该值描述位于直线末端的 <see cref="T:System.Windows.Shapes.Shape"/>。 </summary>
<returns><see cref="T:System.Windows.Media.PenLineCap"/> 的枚举值之一。默认值为 <see cref="F:System.Windows.Media.PenLineCap.Flat"/>。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeEndLineCapProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeLineJoin">
<summary>获取或设置一个 <see cref="T:System.Windows.Media.PenLineJoin"/> 枚举值，该值指定在 <see cref="T:System.Windows.Shapes.Shape"/> 的顶点处使用的联接类型。</summary>
<returns>一个 <see cref="T:System.Windows.Media.PenLineJoin"/> 枚举值，它指定联接外观。默认值为 <see cref="F:System.Windows.Media.PenLineJoin.Miter"/>。 </returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeLineJoinProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeMiterLimit">
<summary>获取或设置对斜接长度与 <see cref="T:System.Windows.Shapes.Shape"/> 元素的 <see cref="P:System.Windows.Shapes.Shape.StrokeThickness"/> 的一半之比的限制。 </summary>
<returns>对斜接长度与 <see cref="T:System.Windows.Shapes.Shape"/> 元素的 <see cref="P:System.Windows.Shapes.Shape.StrokeThickness"/> 之比的限制。此值始终是大于或等于 1 的正数。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeMiterLimitProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Shape.Stroke"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Shape.Stroke"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeStartLineCap">
<summary>获取或设置一个 <see cref="T:System.Windows.Media.PenLineCap"/> 枚举值，该值描述在 <see cref="P:System.Windows.Shapes.Shape.Stroke"/> 开始处的 <see cref="T:System.Windows.Shapes.Shape"/>。 </summary>
<returns>一个 <see cref="T:System.Windows.Media.PenLineCap"/> 枚举值，它指定在 <see cref="P:System.Windows.Shapes.Shape.Stroke"/> 开始处的形状。默认值为 <see cref="F:System.Windows.Media.PenLineCap.Flat"/>。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeStartLineCapProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeThickness">
<summary>获取或设置 <see cref="T:System.Windows.Shapes.Shape"/> 笔画轮廓的宽度。 </summary>
<returns><see cref="T:System.Windows.Shapes.Shape"/> 轮廓的宽度（以像素为单位）。默认值为 0。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeThicknessProperty">
<summary>标识 <see cref="P:System.Windows.Shapes.Shape.StrokeThickness"/> 依赖项属性。 </summary>
<returns><see cref="P:System.Windows.Shapes.Shape.StrokeThickness"/> 依赖项属性的标识符。</returns>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
<summary>提供用于管理线程工作项队列的服务。 </summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Action)">
<summary>在与 <see cref="T:System.Windows.Threading.Dispatcher"/> 关联的线程上异步执行指定的委托。</summary>
<returns>在调用 <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke"/> 后立即返回的一个对象，表示已发布到 <see cref="T:System.Windows.Threading.Dispatcher"/> 队列的操作。</returns>
<param name="a">对不采用任何参数并且不返回某一值的方法的委托，该委托将被推送到 <see cref="T:System.Windows.Threading.Dispatcher"/> 事件队列中。</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
<summary>用与 <see cref="T:System.Windows.Threading.Dispatcher"/> 关联的线程上的指定参数数组以异步方式执行指定委托。</summary>
<returns>在调用 <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke"/> 后立即返回的一个对象，表示已发布到 <see cref="T:System.Windows.Threading.Dispatcher"/> 队列的操作。</returns>
<param name="d">对采用多个参数的方法的委托，该委托将被推送到 <see cref="T:System.Windows.Threading.Dispatcher"/> 事件队列中。</param>
<param name="args">作为指定方法的参数传递的对象数组。</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
<summary>确定调用线程是否为与此 <see cref="T:System.Windows.Threading.Dispatcher"/> 关联的线程。 </summary>
<returns>如果调用线程是与此 <see cref="T:System.Windows.Threading.Dispatcher"/> 关联的线程，则为 true；否则为 false。</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
<summary>表示已发布到 <see cref="T:System.Windows.Threading.Dispatcher"/> 队列的一个操作。 </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
<summary>为 Silverlight 提供同步上下文。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
<summary>使用当前的 <see cref="T:System.Windows.Threading.Dispatcher"/> 初始化 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext"/> 类的新实例。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
<summary>使用指定的 <see cref="T:System.Windows.Threading.Dispatcher"/> 初始化 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext"/> 类的新实例。</summary>
<param name="dispatcher">要与此 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext"/> 关联的 <see cref="T:System.Windows.Threading.Dispatcher"/>。</param>
      <exception cref="T:System.ArgumentNullException">
<paramref name="dispatcher"/> 为 null。</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
<summary>创建此 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext"/> 的副本。</summary>
<returns>此同步上下文的副本。</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
<summary>异步调用同步上下文中的回调。</summary>
<param name="d">要调用的委托。</param>
<param name="state">传递给委托的对象。</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
<summary>同步调用同步上下文中的回调。 </summary>
<param name="d">要调用的委托。</param>
<param name="state">传递给委托的对象。</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
<summary>集成到按指定时间间隔和指定优先级处理的 <see cref="T:System.Windows.Threading.Dispatcher"/> 队列中的计时器。 </summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
<summary>初始化 <see cref="T:System.Windows.Threading.DispatcherTimer"/> 类的新实例。 </summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
<summary>获取或设置计时器刻度之间的时间量。 </summary>
<returns>刻度之间的时间量。默认值是 00:00:00。</returns>
<exception cref="T:System.ArgumentOutOfRangeException">设置此属性时指定的值表示负的时间间隔。 </exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
<summary>获取一个指示是否正在运行计时器的值。 </summary>
<returns>如果启用计时器，则为 true；否则为 false。  </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
<summary>启动 <see cref="T:System.Windows.Threading.DispatcherTimer"/>。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
<summary>停止 <see cref="T:System.Windows.Threading.DispatcherTimer"/>。 </summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
<summary>超过计时器间隔时发生。 </summary>
    </member>
    <member name="T:System.Xaml.IMarkupExtension`1">
<summary>为可以由 Silverlight XAML 处理器支持的 XAML 标记扩展实现提供接口基础。</summary>
<typeparam name="T">由 <see cref="M:System.Xaml.IMarkupExtension`1.ProvideValue(System.IServiceProvider)"/> 实现返回的对象类型。该类型参数是协变的。即可以使用指定的类型或派生程度更高的类型。有关协变和逆变的更多信息，请参阅 2678dc63-c7f9-4590-9ddc-0a4df684d42e。</typeparam>
    </member>
    <member name="M:System.Xaml.IMarkupExtension`1.ProvideValue(System.IServiceProvider)">
<summary>返回一个作为标记扩展目标属性值提供的对象。</summary>
<returns>要在应用扩展的属性上设置的值。</returns>
<param name="serviceProvider">可以为标记扩展提供服务的服务提供商帮助程序。</param>
    </member>
    <member name="T:System.Xaml.IRootObjectProvider">
<summary>描述一个可以返回正在分析的标记的根对象的服务。</summary>
    </member>
    <member name="P:System.Xaml.IRootObjectProvider.RootObject">
<summary>从标记或从对象图获取根对象。</summary>
<returns>根对象。</returns>
    </member>
  </members>
</doc>