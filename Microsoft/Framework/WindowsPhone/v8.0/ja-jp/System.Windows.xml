<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Internal.IManagedFrameworkInternalHelper">
      <summary>これはコードで使用または実装するための型ではありません。</summary>
    </member>
    <member name="T:System.ComponentModel.AlternateContentPropertyAttribute">
      <summary>非コンテンツ プロパティをオブジェクト ツリーに表示する必要があるかどうかを示します。</summary>
    </member>
    <member name="M:System.ComponentModel.AlternateContentPropertyAttribute.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.AlternateContentPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
      <summary>
        <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> クラスの新しいインスタンスを初期化し、<see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> プロパティを true に設定します。</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary>
        <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> クラスの新しいインスタンスを初期化し、<see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> プロパティを指定した値に設定します。</summary>
      <param name="isCancelable">
        <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> の変更を取り消す機能を無効にする場合は true、取り消しを有効にする場合は false。</param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <summary>
        <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> の変更を取り消す必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>イベントを取り消す必要がある場合は true、それ以外の場合は false。既定値は false です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> プロパティの値が false です。</exception>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <summary>
        <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> の変更を取り消すことができるかどうかを示す値を取得します。</summary>
      <returns>イベントを取り消すことができる場合は true。イベントを取り消すことができない場合は false。</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
      <summary>
        <see cref="T:System.ComponentModel.ICollectionView" /> 実装の<see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> イベントを処理できるメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.ComponentModel.DesignerProperties">
      <summary>デザイナーとのやり取りに使用できる添付プロパティを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
      <summary>指定された <see cref="T:System.Windows.UIElement" /> の <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> 添付プロパティの値を取得します。</summary>
      <returns>要素の <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> プロパティ値。</returns>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="P:System.ComponentModel.DesignerProperties.IsInDesignMode">
      <summary>
        <see cref="T:System.Windows.DependencyObject" /> がデザイナーのコンテキストで実行されているかどうかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.DependencyObject" /> がデザイナーのコンテキストで実行されているかどうかを示す <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerProperties.IsInDesignModeProperty">
      <summary>
        <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="P:System.ComponentModel.DesignerProperties.IsInDesignTool">
      <summary>要素がデザイナーのコンテキストで実行されているかどうかを示す値を取得します。</summary>
      <returns>要素がデザイナーのコンテキストで実行されている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerProperties.RefreshOnlyXmlnsDefinitionsOnAssemblyReplace">
      <summary>アセンブリを再コンパイルしたとき、アセンブリに関連するすべてのメタデータまたは xmlns 名前空間定義のみのいずれがデザイナーで更新されるのかを示す値を取得または設定します。</summary>
      <returns>名前空間の定義のみが更新される場合は true。それ以外の場合は false。 </returns>
    </member>
    <member name="M:System.ComponentModel.DesignerProperties.SetIsInDesignMode(System.Windows.DependencyObject,System.Boolean)">
      <summary>
        <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode" /> 添付プロパティの値を、指定された要素に設定します。</summary>
      <param name="element">添付プロパティの書き込み先の要素。</param>
      <param name="value">必要な <see cref="T:System.Boolean" /> 値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
      <summary>コレクション内の項目をグループに分類する方法を示す基本クラスを提供します。</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.GroupDescription" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>指定された項目の 1 つ以上のグループ名を返します。</summary>
      <returns>1 つ以上のグループ名を表すオブジェクト。</returns>
      <param name="item">グループ名を返す対象の項目。</param>
      <param name="level">グループ階層内のグループのレベル。</param>
      <param name="culture">グループ化に影響を与えるカルチャ情報。</param>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
      <summary>グループ名のコレクションを取得します。</summary>
      <returns>グループ名のコレクション。 </returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>指定された項目が、指定されたグループに属しているかどうかを示します。</summary>
      <returns>項目がグループに属している場合は true。それ以外の場合は false。</returns>
      <param name="groupName">確認するグループの名前。</param>
      <param name="itemName">確認する項目の名前。</param>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <summary>プロパティ値が変更された場合に発生します。</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
      <summary>グループ名をシリアル化する必要があるかどうかを示します。</summary>
      <returns>グループ名をシリアル化する必要がある場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>このメンバーについては、<see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> を参照してください。</summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
      <summary>コレクションで、現在のレコード管理、カスタムの並べ替え、フィルター処理、およびグループ化の機能を有効にします。</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
      <summary>ビューで <see cref="P:System.ComponentModel.ICollectionView.Filter" /> プロパティによるフィルター処理がサポートされているかどうかを示す値を取得します。</summary>
      <returns>ビューでフィルター処理がサポートされている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
      <summary>ビューで <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" /> プロパティによるグループ分けがサポートされているかどうかを示す値を取得します。</summary>
      <returns>ビューでグループ分けがサポートされている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
      <summary>ビューで <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" /> プロパティによる並べ替えがサポートされているかどうかを示す値を取得します。</summary>
      <returns>ビューで並べ替えがサポートされている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <summary>指定された項目がコレクション ビューに属しているかどうかを示します。</summary>
      <returns>項目がコレクション ビューに属している場合は true。それ以外の場合は false。</returns>
      <param name="item">確認する対象のオブジェクト。</param>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
      <summary>並べ替えなど、カルチャに依存するビュー操作のカルチャ情報を取得または設定します。</summary>
      <returns>カルチャに依存する操作のときに使用されるカルチャ情報。</returns>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <summary>現在の項目が変更された後に発生します。</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <summary>現在の項目が変更される前に発生します。</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
      <summary>ビュー内の現在の項目を取得します。</summary>
      <returns>ビューの現在の項目。現在の項目がない場合は null。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <summary>ビュー内の <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> の位置を示す序数を取得します。</summary>
      <returns>ビュー内の <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> の位置を示す序数。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <summary>ビューに対する変更をマージし、自動更新を遅延させるために使用できる延期サイクルを入力します。</summary>
      <returns>一般的な使用方法は、このメソッドを実装して使用スコープを作成し、ビューを変更する複数の呼び出しをそのスコープ内に含めます。これにより、使用スコープが終了するまで自動更新が遅延されます。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
      <summary>項目をビューに含めることが適切であるかどうかを決定するために使用されるコールバックを取得または設定します。</summary>
      <returns>項目をビューに含めることが適切かどうかを決定するために使用されるメソッド。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <summary>コレクション内の項目をビュー内でどのようにグループ分けするかを説明する <see cref="T:System.ComponentModel.GroupDescription" /> オブジェクトのコレクションを取得します。</summary>
      <returns>コレクション内の項目をビュー内でどのようにグループ分けするかを説明するオブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
      <summary>トップレベル グループを取得します。</summary>
      <returns>トップレベル グループの読み取り専用のコレクション。グループがない場合は null。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <summary>ビューの <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> がコレクションの末尾を越えるかどうかを示す値を取得します。</summary>
      <returns>ビューの <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> がコレクションの末尾を越える場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <summary>ビューの <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> がコレクションの先頭を越えるかどうかを示す値を取得します。</summary>
      <returns>ビューの <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> がコレクションの先頭を越える場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
      <summary>ビューが空かどうかを示す値を取得します。</summary>
      <returns>ビューが空の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <summary>ビュー内の指定された項目を <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> として設定します。</summary>
      <returns>結果として得られる <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> がビュー内の項目の場合は true。それ以外の場合は false。</returns>
      <param name="item">現在の項目として設定する項目。</param>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <summary>ビュー内の最初の項目を <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> として設定します。</summary>
      <returns>結果として得られる <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> がビュー内の項目の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <summary>ビュー内の最後の項目を <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> として設定します。</summary>
      <returns>結果として得られる <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> がビュー内の項目の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <summary>ビュー内の <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> の後にある項目を <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> として設定します。</summary>
      <returns>結果として得られる <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> がビュー内の項目の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary>指定したインデックス位置にある項目を、ビュー内の <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> として設定します。</summary>
      <returns>結果として得られる <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> がビュー内の項目の場合は true。それ以外の場合は false。</returns>
      <param name="position">
        <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> に設定するインデックス。</param>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <summary>ビュー内の <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> の前にある項目を <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> に設定します。</summary>
      <returns>結果として得られる <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> がビュー内の項目の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
      <summary>ビューを再作成します。</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <summary>コレクション内の項目をビュー内でどのように並べ替えるかを説明する <see cref="T:System.ComponentModel.SortDescription" /> インスタンスのコレクションを取得します。</summary>
      <returns>コレクション内の項目をビュー内でどのように並べ替えるかを説明する値のコレクション。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
      <summary>基になるコレクションを取得します。</summary>
      <returns>基になるコレクション。</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
      <summary>コレクションで、特別な並べ替え、フィルター処理、グループ化、および通貨のカスタム ビューの提供を有効にするメソッドを定義します。</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <summary>特別な並べ替え、フィルター処理、グループ化、および通貨のためのカスタム ビューを返します。</summary>
      <returns>特別な並べ替え、フィルター処理、グループ化、および通貨のためのカスタム ビュー。</returns>
    </member>
    <member name="T:System.ComponentModel.IDataErrorInfo">
      <summary>カスタムの検証サポートを提供するためにデータ エンティティ クラスに実装できるメンバーを定義します。</summary>
    </member>
    <member name="P:System.ComponentModel.IDataErrorInfo.Error">
      <summary>オブジェクトの検証エラーを説明するメッセージを取得します。</summary>
      <returns>オブジェクトの検証エラー。エラーが存在しない場合は null または <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="P:System.ComponentModel.IDataErrorInfo.Item(System.String)">
      <summary>指定されたプロパティまたは列の名前の検証エラーを説明するメッセージを取得します。</summary>
      <returns>指定されたプロパティの検証エラー。エラーが存在しない場合は null または <see cref="F:System.String.Empty" />。</returns>
      <param name="columnName">検証エラーを取得するプロパティまたは列の名前。</param>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
      <summary>コレクションに編集機能を提供するためにコレクション ビューに実装されるメソッドとプロパティを定義します。</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <summary>基になるコレクションに新しい項目を追加します。</summary>
      <returns>コレクションに追加された新しい項目。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <summary>新しい項目をコレクションに追加できるかどうかを示す値を取得します。</summary>
      <returns>新しい項目をコレクションに追加できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <summary>コレクション ビューが保留中の変更を破棄して、編集されたオブジェクトの元の値を復元できるかどうかを示す値を取得します。</summary>
      <returns>コレクション ビューが保留中の変更を破棄して、編集されたオブジェクトの元の値を復元できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <summary>編集トランザクションを終了し、可能な場合は項目の元の値を復元します。</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <summary>追加トランザクションを終了し、保留中の新しい項目を破棄します。</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <summary>コレクションから項目を削除できるかどうかを示す値を取得します。</summary>
      <returns>コレクションから項目を削除できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <summary>編集トランザクションを終了し、保留中の変更を保存します。</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <summary>追加トランザクションを終了し、保留中の新しい項目を保存します。</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <summary>現在の追加トランザクション処理中に追加される項目を取得します。</summary>
      <returns>
        <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> が true の場合は、追加される項目。それ以外の場合は null。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <summary>編集されているコレクション内の項目を取得します。</summary>
      <returns>
        <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> が true の場合は、編集される項目。それ以外の場合は null。</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <summary>指定した項目の編集トランザクションを開始します。</summary>
      <param name="item">編集する項目。</param>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <summary>追加トランザクションが実行中かどうかを示す値を取得します。</summary>
      <returns>追加トランザクションが実行中の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <summary>編集トランザクションが実行中かどうかを示す値を取得します。</summary>
      <returns>編集トランザクションが実行中の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <summary>コレクション ビューにある新しい項目のプレースホルダーの位置を取得または設定します。</summary>
      <returns>コレクション ビューにある新しい項目のプレースホルダーの位置を指定する列挙値。</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <summary>指定した項目をコレクションから削除します。</summary>
      <param name="item">削除する項目。</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <summary>コレクション内の指定した位置にある項目を削除します。</summary>
      <param name="index">削除する項目のインデックス。</param>
    </member>
    <member name="T:System.ComponentModel.ISupportInitialize">
      <summary>初期化をバッチ処理するための単純な処理通知をオブジェクトがサポートすることを指定します。</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.BeginInit">
      <summary>初期化の開始を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.EndInit">
      <summary>初期化の完了を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
      <summary>新しい項目のプレースホルダーが表示される <see cref="T:System.ComponentModel.IEditableCollectionView" /> 内の位置を指定します。</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <summary>コレクションは、新しい項目のプレースホルダーを使用しません。追加される項目の位置は、基になるコレクションに応じて決まります。通常、それらはコレクションの末尾に追加されます。</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <summary>新しい項目のプレースホルダーがコレクションの末尾に表示されます。新しい項目は、コレクションの末尾で、新しい項目のプレースホルダーの前に追加されます。</summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
      <summary>コレクションを並べ替える際の基準として使用される方向およびプロパティ名を定義します。</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <summary>
        <see cref="T:System.ComponentModel.SortDescription" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="propertyName">リストの並べ替えに使用するプロパティの名前。</param>
      <param name="direction">並べ替え順序。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyName" /> パラメーターが null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="propertyName" /> パラメーターが空です。または<paramref name="direction" /> パラメーターが有効な値を指定していません。</exception>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
      <summary>昇順と降順のどちらで並べ替えるかを示す値を取得または設定します。</summary>
      <returns>並べ替え方向を示す値。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.SortDescription.IsSealed" /> が true です。</exception>
      <exception cref="T:System.ArgumentException">指定された値が有効な並べ替え方向ではありません。</exception>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <summary>指定されたインスタンスと <see cref="T:System.ComponentModel.SortDescription" /> の現在のインスタンスの値が等しいかどうか比較します。</summary>
      <returns>
        <paramref name="obj" /> とこの <see cref="T:System.ComponentModel.SortDescription" /> インスタンスの <see cref="P:System.ComponentModel.SortDescription.PropertyName" /> および <see cref="P:System.ComponentModel.SortDescription.Direction" /> の値が等しい場合は true。それ以外の場合は false。</returns>
      <param name="obj">比較する <see cref="T:System.ComponentModel.SortDescription" /> インスタンス。</param>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
      <summary>現在のインスタンスのハッシュ コードを返します。</summary>
      <returns>現在のインスタンスのハッシュ コード。</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
      <summary>この構造体が不変の状態であるかどうかを示す値を取得します。</summary>
      <returns>このオブジェクトが使用される場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary>2 つの <see cref="T:System.ComponentModel.SortDescription" /> インスタンスを比較し、値が等しいかどうかを確認します。</summary>
      <returns>2 つの<see cref="T:System.ComponentModel.SortDescription" /> インスタンスの <see cref="P:System.ComponentModel.SortDescription.PropertyName" /> および <see cref="P:System.ComponentModel.SortDescription.Direction" /> の値が等しい場合は true。それ以外の場合は false。</returns>
      <param name="sd1">比較する最初の <see cref="T:System.ComponentModel.SortDescription" /> インスタンス。</param>
      <param name="sd2">比較する 2 番目の <see cref="T:System.ComponentModel.SortDescription" /> インスタンス。</param>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary>2 つの <see cref="T:System.ComponentModel.SortDescription" /> インスタンスを比較し、値が等しくないかどうかを確認します。</summary>
      <returns>2 つの<see cref="T:System.ComponentModel.SortDescription" /> インスタンスの <see cref="P:System.ComponentModel.SortDescription.PropertyName" /> および <see cref="P:System.ComponentModel.SortDescription.Direction" /> の値が等しくない場合は true。それ以外の場合は false。</returns>
      <param name="sd1">比較する最初の <see cref="T:System.ComponentModel.SortDescription" /> インスタンス。</param>
      <param name="sd2">比較する 2 番目の <see cref="T:System.ComponentModel.SortDescription" /> インスタンス。</param>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
      <summary>並べ替えの基準として使用されるプロパティ名を取得または設定します。</summary>
      <returns>並べ替えに使用するプロパティの名前。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.ComponentModel.SortDescription.IsSealed" /> が true です。</exception>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
      <summary>
        <see cref="T:System.ComponentModel.SortDescription" /> インスタンスのコレクションを表します。</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <summary>
        <see cref="T:System.ComponentModel.SortDescriptionCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <summary>すべての <see cref="T:System.ComponentModel.SortDescription" /> インスタンスをコレクションから削除します。</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <summary>
        <see cref="T:System.ComponentModel.SortDescription" /> が追加または削除されたときに発生します。</summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <summary>空で変更できない <see cref="T:System.ComponentModel.SortDescriptionCollection" /> を取得します。</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary>
        <see cref="T:System.ComponentModel.SortDescription" /> をコレクション内の指定されたインデックス位置に挿入します。</summary>
      <param name="index">
        <see cref="T:System.ComponentModel.SortDescription" /> が挿入された、0 から始まるインデックス。</param>
      <param name="item">挿入する <see cref="T:System.ComponentModel.SortDescription" />。</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <summary>コレクション内の指定したインデックス位置の <see cref="T:System.ComponentModel.SortDescription" /> を削除します。</summary>
      <param name="index">削除する <see cref="T:System.ComponentModel.SortDescription" /> の、0 から始まるインデックス。</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary>指定したインデックス位置の <see cref="T:System.ComponentModel.SortDescription" /> を置換します。</summary>
      <param name="index">置換する <see cref="T:System.ComponentModel.SortDescription" /> の、0 から始まるインデックス。</param>
      <param name="item">指定したインデックス位置にある <see cref="T:System.ComponentModel.SortDescription" /> の新しい値。</param>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>このメンバーについては、<see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> を参照してください。</summary>
    </member>
    <member name="T:System.IO.IsolatedStorage.IsolatedStorageSettings">
      <summary>分離ストレージにキーと値のペアを格納する <see cref="T:System.Collections.Generic.Dictionary`2" /> を提供します。</summary>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が null です。この例外は、インデクサーを使用してクラスのインスタンスを参照しようとしたとき、キー値に指定した変数が null であった場合にスローされます。</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Add(System.String,System.Object)">
      <summary>キーと値のペアのディクショナリにエントリを追加します。</summary>
      <param name="key">格納されるエントリのキー。</param>
      <param name="value">格納される値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> はディクショナリに既に存在します。</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.ApplicationSettings">
      <summary>スコープがアプリケーション レベルで、アプリケーションの <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> の内容を格納している <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings" /> のインスタンスを取得します。インスタンスが存在しない場合は、<see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings" /> の新しいインスタンスを作成します。</summary>
      <returns>スコープがアプリケーション レベルで、アプリケーションの <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> の内容を格納している <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings" /> オブジェクト。インスタンスがまだ存在していない場合は、新規インスタンスが作成されます。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Clear">
      <summary>
        <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings" /> 内に格納されている項目の数を 0 にリセットし、コレクション内の要素への参照をすべて解放します。</summary>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Contains(System.String)">
      <summary>指定したキーがアプリケーション設定ディクショナリに格納されているかどうかを判断します。</summary>
      <returns>指定したキーがディクショナリに格納されている場合は true。それ以外の場合は false。</returns>
      <param name="key">位置を指定するエントリのキー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が null です。</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Count">
      <summary>ディクショナリに格納されているキーと値のペアの数を取得します。</summary>
      <returns>ディクショナリに格納されているキーと値のペアの数。</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Item(System.String)">
      <summary>指定したキーに関連付けられている値を取得または設定します。</summary>
      <returns>指定したキーに関連付けられている値。指定したキーが見つからなかった場合、取得操作は <see cref="T:System.Collections.Generic.KeyNotFoundException" /> をスローし、設定操作は指定したキーを持つ新しい要素を作成します。</returns>
      <param name="key">取得または設定する項目のキー。</param>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Keys">
      <summary>ディクショナリ内のキーが格納されているコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.Dictionary`2" /> 内のキーが格納されている <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Remove(System.String)">
      <summary>指定したキーを持つエントリを削除します。</summary>
      <returns>指定したキーが削除された場合は true。それ以外の場合は false。</returns>
      <param name="key">削除するエントリのキー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が null です。</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.Save">
      <summary>現在の <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings" /> オブジェクトに書き込まれたデータを保存します。</summary>
      <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">
        <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> に十分な空き容量がありません。</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.ICollection`1.Add(`0)" /> のトピックを参照してください。</summary>
      <param name="item">追加される <see cref="T:System.Collections.Generic.KeyValuePair`2" />。</param>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#Clear">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.ICollection`1.Clear" /> のトピックを参照してください。</summary>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.ICollection`1.Contains(`0)" /> のトピックを参照してください。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.ICollection`1" /> で <paramref name="item" /> が見つかった場合は true、見つからなかった場合は false。</returns>
      <param name="item">検索するエントリのキーと値のペア。</param>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" /> のトピックを参照してください。</summary>
      <param name="array">
        <see cref="T:System.Collections.Generic.ICollection`1" /> から要素がコピーされる 1 次元の <see cref="T:System.Array" />。配列のインデックスは 0 から始まっている必要があります。</param>
      <param name="arrayIndex">コピーの開始位置となる、<paramref name="array" /> の 0 から始まるインデックス。</param>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" /> のトピックを参照してください。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> が読み取り専用の場合は true。それ以外の場合は false。<see cref="T:System.Collections.Generic.Dictionary`2" /> の既定の実装では、このプロパティから必ず false が戻されます。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.ICollection`1.Remove(`0)" /> のトピックを参照してください。</summary>
      <returns>
        <paramref name="item" /> が <see cref="T:System.Collections.Generic.ICollection`1" /> から正常に削除された場合は true。それ以外の場合は false。このメソッドは、<paramref name="item" /> が元の <see cref="T:System.Collections.Generic.ICollection`1" /> 内で見つからない場合にも false を返します。</returns>
      <param name="item">削除するエントリのキー。</param>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#IDictionary{TKey@TValue}#ContainsKey(System.String)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" /> のトピックを参照してください。</summary>
      <returns>指定した <paramref name="key" /> を持つ要素が <see cref="T:System.Collections.Generic.IDictionary`2" /> に含まれている場合は true。それ以外の場合は false。</returns>
      <param name="key">位置を指定するエントリのキー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が null です。</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.Generic.IDictionary`2.Keys" /> のトピックを参照してください。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> を実装するオブジェクトのキーを格納している <see cref="T:System.Collections.Generic.ICollection`1" /> を返します。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#IDictionary{TKey@TValue}#TryGetValue(System.String,System.Object@)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)" /> のトピックを参照してください。</summary>
      <returns>指定した <paramref name="key" /> を持つ要素が <see cref="T:System.Collections.Generic.IDictionary`2" /> に含まれている場合は true。それ以外の場合は false。</returns>
      <param name="key">取得する値のキー。</param>
      <param name="value">このメソッドから制御が戻ったときに、キーが見つかった場合は、指定したキーに関連付けられている値。それ以外の場合は <paramref name="value" /> パラメーターの型に対する既定の値。このパラメーターは初期化されずに渡されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が null です。</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.Generic.IDictionary`2.Values" /> のトピックを参照してください。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IDictionary`2" /> を実装するオブジェクトの値が格納されている <see cref="T:System.Collections.Generic.ICollection`1" />。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" /> のトピックを参照してください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.Generic.IEnumerator`1" /> オブジェクト。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> のトピックを参照してください。</summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" /> から要素がコピーされる 1 次元の <see cref="T:System.Array" />。配列のインデックスは 0 から始まっている必要があります。</param>
      <param name="index">コピーの開始位置となる、<paramref name="array" /> の 0 から始まるインデックス。</param>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#ICollection#Count">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.ICollection.Count" /> のトピックを参照してください。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> に含まれる要素の数。</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#ICollection#IsSynchronized">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.ICollection.IsSynchronized" /> のトピックを参照してください。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> へのアクセスが同期されている (スレッド セーフである) 場合は true。それ以外の場合は false。<see cref="T:System.Collections.Generic.Dictionary`2" /> の既定の実装では、このプロパティから必ず false が戻されます。</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#ICollection#SyncRoot">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.ICollection.SyncRoot" /> のトピックを参照してください。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> へのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> のトピックを参照してください。</summary>
      <param name="key">追加する要素のキーとして使用するオブジェクト。</param>
      <param name="value">追加する要素の値として使用するオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が null です。</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#Clear">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IDictionary.Clear" /> のトピックを参照してください。</summary>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#Contains(System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IDictionary.Contains(System.Object)" /> のトピックを参照してください。</summary>
      <returns>指定した <paramref name="key" /> を持つ要素が <see cref="T:System.Collections.IDictionary" /> に格納されている場合は true。それ以外の場合は false。</returns>
      <param name="key">
        <see cref="T:System.Collections.IDictionary" /> 内で検索されるキー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が null です。</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#GetEnumerator">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IDictionary.GetEnumerator" /> のトピックを参照してください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.Generic.IEnumerator`1" /> オブジェクト。</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#IsFixedSize">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.IDictionary.IsFixedSize" /> のトピックを参照してください。</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> が固定サイズの場合は true。それ以外の場合は false。<see cref="T:System.Collections.IDictionary" /> の既定の実装では、このプロパティから必ず false が戻されます。</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#IsReadOnly">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.IDictionary.IsReadOnly" /> のトピックを参照してください。</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> が読み取り専用の場合は true。それ以外の場合は false。<see cref="T:System.Collections.IDictionary" /> の既定の実装では、このプロパティから必ず false が戻されます。</returns>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#Item(System.Object)">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.IDictionary.Item(System.Object)" /> のトピックを参照してください。</summary>
      <returns>指定した <paramref name="key" /> に関連付けられている値。</returns>
      <param name="key">取得または設定する値のキー。</param>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IDictionary#Remove(System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IDictionary.Remove(System.Object)" /> のトピックを参照してください。</summary>
      <param name="key">削除するエントリのキー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が null です。</exception>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IEnumerable.GetEnumerator" /> のトピックを参照してください。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.Generic.IEnumerator`1" /> オブジェクト。</returns>
    </member>
    <member name="M:System.IO.IsolatedStorage.IsolatedStorageSettings.TryGetValue``1(System.String,``0@)">
      <summary>指定したキーの値を取得します。</summary>
      <returns>指定したキーが見つかった場合は true。それ以外の場合は false。</returns>
      <param name="key">取得する値のキー。</param>
      <param name="value">このメソッドから制御が戻ったときに、キーが見つかった場合は、指定したキーに関連付けられている値。それ以外の場合は <paramref name="value" /> パラメーターの型に対する既定の値。このパラメーターは初期化されずに渡されます。</param>
      <typeparam name="T">
        <paramref name="value" /> パラメーターの <see cref="T:System.Type" />。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が null です。</exception>
    </member>
    <member name="P:System.IO.IsolatedStorage.IsolatedStorageSettings.Values">
      <summary>辞書に値が含まれているコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.Dictionary`2" /> 内に値を格納している <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />。</returns>
    </member>
    <member name="T:System.Net.HttpUtility">
      <summary>HTML 文字列と URL 文字列のエンコードとデコードを行うメソッドを提供します。</summary>
    </member>
    <member name="M:System.Net.HttpUtility.HtmlDecode(System.String)">
      <summary>HTTP 転送用に HTML エンコードされた文字列を、デコードされた文字列に変換します。</summary>
      <returns>デコードされた文字列。</returns>
      <param name="html">デコードする HTML エンコードされた文字列。</param>
    </member>
    <member name="M:System.Net.HttpUtility.HtmlEncode(System.String)">
      <summary>テキスト文字列を HTML エンコードされた文字列に変換します。</summary>
      <returns>HTML エンコードされた文字列。</returns>
      <param name="html">HTML エンコードするテキスト。</param>
    </member>
    <member name="M:System.Net.HttpUtility.UrlDecode(System.String)">
      <summary>URL 伝送用にエンコードされた文字列を、デコードされた文字列に変換します。</summary>
      <returns>デコードされた文字列。</returns>
      <param name="url">デコードする URL エンコードされた文字列。</param>
    </member>
    <member name="M:System.Net.HttpUtility.UrlEncode(System.String)">
      <summary>テキスト文字列を URL エンコードされた文字列に変換します。</summary>
      <returns>URL エンコードされた文字列。</returns>
      <param name="url">URL エンコードするテキスト。</param>
    </member>
    <member name="T:System.Net.Browser.WebRequestCreator">
      <summary>ブラウザーとクライアントのどちらが HTTP の要求と応答を処理するかを示すオブジェクトを提供します。</summary>
    </member>
    <member name="P:System.Net.Browser.WebRequestCreator.ClientHttp">
      <summary>Web 要求と応答に対してクライアントでの HTTP 処理を指定するオブジェクトを取得します。</summary>
      <returns>Web ブラウザーの外部で実行される Windows Phone ベース アプリケーションで使用される <see cref="T:System.Net.IWebRequestCreate" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.Automation.AutomationEvent">
      <summary>オートメーション イベントを表します。</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Automation.AutomationEvent.AddEventHandler(System.Delegate)">
      <summary>指定したデリゲートをオートメーション イベントに添付します。</summary>
      <param name="handler">イベントに添付するデリゲート。</param>
    </member>
    <member name="E:System.Runtime.InteropServices.Automation.AutomationEvent.EventRaised">
      <summary>オートメーション イベントが発生したときに発生します。</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.Automation.AutomationEvent.RemoveEventHandler(System.Delegate)">
      <summary>指定したデリゲートをオートメーション イベントからデタッチします。</summary>
      <param name="handler">イベントからデタッチするデリゲート。</param>
    </member>
    <member name="T:System.Runtime.InteropServices.Automation.AutomationEventArgs">
      <summary>
        <see cref="E:System.Runtime.InteropServices.Automation.AutomationEvent.EventRaised" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Runtime.InteropServices.Automation.AutomationEventArgs.Arguments">
      <summary>オートメーション イベントからイベント引数を取得します。</summary>
      <returns>オートメーション イベントのイベント引数。</returns>
    </member>
    <member name="T:System.Windows.Application">
      <summary>Windows Phone アプリケーションをカプセル化します。</summary>
    </member>
    <member name="M:System.Windows.Application.#ctor">
      <summary>
        <see cref="T:System.Windows.Application" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Application.ApplicationLifetimeObjects">
      <summary>このアプリケーション用に登録されたアプリケーション拡張サービスを取得します。</summary>
      <returns>登録済みサービス。</returns>
    </member>
    <member name="P:System.Windows.Application.Current">
      <summary>現在のアプリケーションの <see cref="T:System.Windows.Application" /> オブジェクトを取得します。</summary>
      <returns>現在のアプリケーションの <see cref="T:System.Windows.Application" /> オブジェクト。</returns>
    </member>
    <member name="E:System.Windows.Application.Exit">
      <summary>このイベントは、Windows Phone アプリケーションでは発生しません。</summary>
    </member>
    <member name="M:System.Windows.Application.GetResourceStream(System.Uri)">
      <summary>アプリケーション パッケージ内の場所からリソース ファイルを返します。</summary>
      <returns>必要なリソース ファイルのストリームが格納されている <see cref="T:System.Windows.Resources.StreamResourceInfo" />。指定したリソースが見つからない場合は null。</returns>
      <param name="uriResource">読み込み対象のリソース ファイルを指定する相対 URI。ファイルにコンテンツのビルド アクションが含まれる場合、URI はアプリケーション パッケージに相対的であり、先頭にスラッシュを使用することはできません。ファイルにリソースのビルド アクションが含まれる場合、先頭にスラッシュを使用することはできますが、必須ではありません。</param>
      <exception cref="T:System.ArgumentException">アプリケーション クラスが初期化されていません。または<paramref name="uriResource" /> が絶対 URI です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriResource" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Application.GetResourceStream(System.Windows.Resources.StreamResourceInfo,System.Uri)">
      <summary>指定した zip パッケージ内の場所からリソース ファイルを返します。</summary>
      <returns>必要なリソース ファイルのストリームが格納されている <see cref="T:System.Windows.Resources.StreamResourceInfo" />。指定したリソースが見つからない場合は null。</returns>
      <param name="zipPackageStreamResourceInfo">指定したリソース ファイルのある zip パッケージ ストリームを含む <see cref="T:System.Windows.Resources.StreamResourceInfo" />。</param>
      <param name="uriResource">zip パッケージから抽出するリソース ファイルを指定する相対 URI。URI は、アプリケーション パッケージに相対的であり、先頭にスラッシュは必要ありません。</param>
      <exception cref="T:System.ArgumentException">アプリケーション クラスが初期化されていません。または<paramref name="uriResource" /> が絶対 URI です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="zipPackageStreamResourceInfo" /> が null です。または<paramref name="uriResource" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Application.Host">
      <summary>Windows Phone アプリケーションのホストに関するさまざまな詳細情報を取得します。</summary>
      <returns>Windows Phone ホスト アプリケーションに関するさまざまな詳細情報を提供する <see cref="T:System.Windows.Interop.SilverlightHost" />。</returns>
    </member>
    <member name="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
      <summary>特定の URI (Uniform Resource Identifier) にある XAML ファイルを読み込み、その XAML ファイルのルート要素で指定されているオブジェクトのインスタンスに変換します。</summary>
      <param name="component">読み込み対象の XAML ファイルのルート要素と同じ種類のオブジェクト。</param>
      <param name="resourceLocator">読み込み対象の XAML ファイルを識別する相対 URI。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="resourceLocator" /> が絶対 URI です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> が null です。または<paramref name="resourceLocator" /> が null です。</exception>
      <exception cref="T:System.Windows.Markup.XamlParseException">XAML ファイルの解析中にエラーが発生しました。</exception>
    </member>
    <member name="P:System.Windows.Application.Resources">
      <summary>スタイル、テンプレート、ブラシなど、スコープがアプリケーションであるリソースのコレクションを取得します。</summary>
      <returns>スコープがアプリケーションである 0 個以上のリソースを含む <see cref="T:System.Windows.ResourceDictionary" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Application.RootVisual">
      <summary>メイン アプリケーション UI を取得または設定します。</summary>
      <returns>メイン アプリケーション UI である <see cref="T:System.Windows.UIElement" />。</returns>
      <exception cref="T:System.InvalidOperationException">このプロパティの設定時に指定した値が、<see cref="T:System.Windows.UIElement" /> から派生したクラスのインスタンスではありません。</exception>
    </member>
    <member name="E:System.Windows.Application.Startup">
      <summary>アプリケーションの起動時に発生します。</summary>
    </member>
    <member name="M:System.Windows.Application.Terminate">
      <summary>現在のプロセスを終了します。</summary>
    </member>
    <member name="E:System.Windows.Application.UnhandledException">
      <summary>Windows Phone で発生した例外が処理されないときに発生します。</summary>
    </member>
    <member name="T:System.Windows.ApplicationServiceContext">
      <summary>アプリケーション拡張サービス開始時の Windows Phone アプリケーションの初期状態を表します。</summary>
    </member>
    <member name="P:System.Windows.ApplicationServiceContext.ApplicationInitParams">
      <summary>Windows Phone プラグインの埋め込み時に、ホスト Web ページで指定された初期化パラメーターを取得します。</summary>
      <returns>キー/値ペアのディクショナリとして返される初期化パラメーター。</returns>
    </member>
    <member name="T:System.Windows.ApplicationUnhandledExceptionEventArgs">
      <summary>
        <see cref="E:System.Windows.Application.UnhandledException" /> イベントにデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.ApplicationUnhandledExceptionEventArgs.#ctor(System.Exception,System.Boolean)">
      <summary>
        <see cref="T:System.Windows.ApplicationUnhandledExceptionEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="ex">未処理としてスローされる例外。</param>
      <param name="handled">例外が処理済みで、それ以上の処理は必要ないかどうかを示す値。</param>
    </member>
    <member name="P:System.Windows.ApplicationUnhandledExceptionEventArgs.ExceptionObject">
      <summary>未処理の例外を取得または設定します。</summary>
      <returns>未処理の例外。</returns>
    </member>
    <member name="P:System.Windows.ApplicationUnhandledExceptionEventArgs.Handled">
      <summary>例外が処理済みかどうかを示す値を取得または設定します。</summary>
      <returns>例外が処理済みで、Windows Phone でさらに処理する必要はないことを示す場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:System.Windows.AssemblyPart">
      <summary>アセンブリ部分は、Windows Phone ベースのアプリケーション パッケージ (.xap) に含まれるアセンブリです。</summary>
    </member>
    <member name="M:System.Windows.AssemblyPart.#ctor">
      <summary>
        <see cref="T:System.Windows.AssemblyPart" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.AssemblyPart.Source">
      <summary>アセンブリをアセンブリ部分として識別する <see cref="T:System.Uri" /> を取得します。</summary>
      <returns>アセンブリである <see cref="T:System.String" />。アセンブリ部分として識別されます。</returns>
    </member>
    <member name="F:System.Windows.AssemblyPart.SourceProperty">
      <summary>
        <see cref="P:System.Windows.AssemblyPart.Source" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.AssemblyPart.Source" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.AssemblyPartCollection">
      <summary>
        <see cref="T:System.Windows.AssemblyPart" /> オブジェクトのコレクションを格納します。<see cref="P:System.Windows.Deployment.Parts" /> プロパティのコレクションをサポートします。</summary>
    </member>
    <member name="M:System.Windows.AssemblyPartCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.AssemblyPartCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Clipboard">
      <summary>システム クリップボートへのデータ転送を容易にする静的メソッドを提供します。このアクセスは Unicode テキスト文字列に限定されます。</summary>
    </member>
    <member name="M:System.Windows.Clipboard.ContainsText">
      <summary>UnicodeText 形式のデータがクリップボードに存在するかどうかを照会します。</summary>
      <returns>システム クリップボードに Unicode テキスト データが含まれる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Clipboard.GetText">
      <summary>Windows Phone は、このメソッドをサポートしていません。このメソッドを呼び出すと、<see cref="T:System.Security.SecurityException" /> が発生します。</summary>
    </member>
    <member name="M:System.Windows.Clipboard.SetText(System.String)">
      <summary>後で <see cref="M:System.Windows.Clipboard.GetText" /> でアクセスするために、クリップボード上に格納する Unicode テキスト データを設定します。</summary>
      <param name="text">クリップボードに格納する Unicode テキスト データを含む文字列。</param>
    </member>
    <member name="T:System.Windows.CornerRadius">
      <summary>
        <see cref="T:System.Windows.Controls.Border" /> に適用できるなど、丸い角の特性を示します。</summary>
    </member>
    <member name="M:System.Windows.CornerRadius.#ctor(System.Double)">
      <summary>新しい <see cref="T:System.Windows.CornerRadius" /> 構造体を初期化し、均一の半径をそのすべての角に適用します。</summary>
      <param name="uniformRadius">4 つすべての <see cref="T:System.Windows.CornerRadius" /> プロパティ (<see cref="P:System.Windows.CornerRadius.TopLeft" />、<see cref="P:System.Windows.CornerRadius.TopRight" />、<see cref="P:System.Windows.CornerRadius.BottomRight" />、および <see cref="P:System.Windows.CornerRadius.BottomLeft" />) に適用する均一の半径。</param>
    </member>
    <member name="M:System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.CornerRadius" /> 構造体の新しいインスタンスを初期化し、特定の均一半径をその角に適用します。</summary>
      <param name="topLeft">
        <see cref="P:System.Windows.CornerRadius.TopLeft" /> の初期値を設定します。</param>
      <param name="topRight">
        <see cref="P:System.Windows.CornerRadius.TopRight" /> の初期値を設定します。</param>
      <param name="bottomRight">
        <see cref="P:System.Windows.CornerRadius.BottomLeft" /> の初期値を設定します。</param>
      <param name="bottomLeft">
        <see cref="P:System.Windows.CornerRadius.BottomRight" /> の初期値を設定します。</param>
    </member>
    <member name="P:System.Windows.CornerRadius.BottomLeft">
      <summary>
        <see cref="T:System.Windows.CornerRadius" /> が適用されるオブジェクトの左下隅の弧の半径 (ピクセル単位) を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.CornerRadius" /> を適用するオブジェクトの左下角の丸め半径をピクセル単位で表す <see cref="T:System.Double" />。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.BottomRight">
      <summary>
        <see cref="T:System.Windows.CornerRadius" /> が適用されるオブジェクトの右下隅の弧の半径 (ピクセル単位) を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.CornerRadius" /> を適用するオブジェクトの右下角の丸め半径をピクセル単位で表す <see cref="T:System.Double" />。既定値は 0 です。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.Equals(System.Object)">
      <summary>この <see cref="T:System.Windows.CornerRadius" /> 構造体を別のオブジェクトと比較して、等しいかどうかを確認します。</summary>
      <returns>2 つのオブジェクトが同じである場合は true、異なる場合は false。</returns>
      <param name="obj">比較対象のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)">
      <summary>この <see cref="T:System.Windows.CornerRadius" /> 構造体を別の <see cref="T:System.Windows.CornerRadius" /> 構造体と比較して、等しいかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Windows.CornerRadius" /> の 2 つのインスタンスが等しい場合は true。それ以外の場合は false。</returns>
      <param name="cornerRadius">等しいかどうかを比較する <see cref="T:System.Windows.CornerRadius" /> のインスタンス。</param>
    </member>
    <member name="M:System.Windows.CornerRadius.GetHashCode">
      <summary>構造体のハッシュ コードを返します。</summary>
      <returns>この <see cref="T:System.Windows.CornerRadius" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
      <summary>2 つの <see cref="T:System.Windows.CornerRadius" /> 構造体の値を比較して、等しいかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Windows.CornerRadius" /> の 2 つのインスタンスが等しい場合は true。それ以外の場合は false。</returns>
      <param name="cr1">比較対象の第 1 構造体。</param>
      <param name="cr2">比較対象の、もう一方の構造体。</param>
    </member>
    <member name="M:System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
      <summary>2 つの <see cref="T:System.Windows.CornerRadius" /> 構造体を比較し、等しくないかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Windows.CornerRadius" /> の 2 つのインスタンスが等しくない場合は true。それ以外の場合は false。</returns>
      <param name="cr1">比較対象の第 1 構造体。</param>
      <param name="cr2">比較対象の、もう一方の構造体。</param>
    </member>
    <member name="P:System.Windows.CornerRadius.TopLeft">
      <summary>
        <see cref="T:System.Windows.CornerRadius" /> が適用されるオブジェクトの左上隅の弧の半径 (ピクセル単位) を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.CornerRadius" /> を適用するオブジェクトの左上角の丸め半径をピクセル単位で表す <see cref="T:System.Double" />。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.CornerRadius.TopRight">
      <summary>
        <see cref="T:System.Windows.CornerRadius" /> が適用されるオブジェクトの右上隅の弧の半径 (ピクセル単位) を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.CornerRadius" /> を適用するオブジェクトの右上角の丸め半径をピクセル単位で表す <see cref="T:System.Double" />。既定値は 0 です。</returns>
    </member>
    <member name="M:System.Windows.CornerRadius.ToString">
      <summary>
        <see cref="T:System.Windows.CornerRadius" /> 構造体の文字列形式を返します。</summary>
      <returns>
        <see cref="T:System.Windows.CornerRadius" /> の値を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Windows.DataTemplate">
      <summary>データ オブジェクトのビジュアル構造を記述します。</summary>
    </member>
    <member name="M:System.Windows.DataTemplate.#ctor">
      <summary>
        <see cref="T:System.Windows.DataTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.DataTemplate.LoadContent">
      <summary>
        <see cref="T:System.Windows.DataTemplate" /> で <see cref="T:System.Windows.UIElement" /> オブジェクトを作成します。</summary>
      <returns>
        <see cref="T:System.Windows.DataTemplate" /> のルート <see cref="T:System.Windows.UIElement" />。</returns>
    </member>
    <member name="T:System.Windows.DependencyObject">
      <summary>Windows Phone 依存関係プロパティ システムに関連するオブジェクトを表します。<see cref="T:System.Windows.DependencyObject" /> は、<see cref="T:System.Windows.UIElement" />、<see cref="T:System.Windows.Media.Geometry" />、<see cref="T:System.Windows.FrameworkTemplate" />、<see cref="T:System.Windows.Style" />、<see cref="T:System.Windows.ResourceDictionary" /> など、他のいくつかの重要な Windows Phone クラスの直接の基本クラスです。</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
      <summary>
        <see cref="T:System.Windows.DependencyObject" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.CheckAccess">
      <summary>呼び出しスレッドが、このオブジェクトにアクセスできるかどうかを判断します。</summary>
      <returns>呼び出しスレッドがこのオブジェクトにアクセスできる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <summary>依存関係プロパティのローカル値をクリアします。</summary>
      <param name="dp">値を消去する対象のプロパティの <see cref="T:System.Windows.DependencyProperty" /> 識別子。</param>
    </member>
    <member name="P:System.Windows.DependencyObject.Dispatcher">
      <summary>このオブジェクトに関連付けられている <see cref="T:System.Windows.Threading.Dispatcher" /> を取得します。</summary>
      <returns>このオブジェクトが関連付けられている <see cref="T:System.Windows.Threading.Dispatcher" />。</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetAnimationBaseValue(System.Windows.DependencyProperty)">
      <summary>アニメーションがアクティブでない場合に適用される、Windows Phone 依存関係プロパティに対し設定されている基本値を返します。</summary>
      <returns>返されるベース値。</returns>
      <param name="dp">必要な依存関係プロパティの識別子。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dp" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <summary>
        <see cref="T:System.Windows.DependencyObject" /> から依存関係プロパティの現在の有効値を返します。</summary>
      <returns>現在の有効値を返します。</returns>
      <param name="dp">値を取得する対象のプロパティの <see cref="T:System.Windows.DependencyProperty" /> 識別子。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dp" /> は null です。</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <summary>ローカル値が設定されている場合、依存関係プロパティのローカル値を返します。</summary>
      <returns>ローカル値を返します。ローカル値が設定されていない場合は sentinel 値 <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> を返します。</returns>
      <param name="dp">ローカル値を取得する対象のプロパティの <see cref="T:System.Windows.DependencyProperty" /> 識別子。</param>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary>
        <see cref="T:System.Windows.DependencyObject" /> で依存関係プロパティのローカル値を設定します。</summary>
      <param name="dp">設定する依存関係プロパティの識別子。</param>
      <param name="value">新しいローカル値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> が、<paramref name="dp" /> プロパティに登録されている正しい型ではありません。</exception>
    </member>
    <member name="T:System.Windows.DependencyObjectCollection`1">
      <summary>指定した型の <see cref="T:System.Windows.DependencyObject" /> インスタンスのコレクションを表します。</summary>
      <typeparam name="T">コレクション内の項目の型。</typeparam>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.#ctor">
      <summary>
        <see cref="T:System.Windows.DependencyObjectCollection`1" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.Add(`0)">
      <summary>指定したオブジェクトをコレクションの末尾に追加します。</summary>
      <param name="item">コレクションに追加するオブジェクト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> が <see cref="T:System.Windows.DependencyObject" /> ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> イベント ハンドラーでメソッドが呼び出されています。</exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.Clear">
      <summary>コレクションからすべてのオブジェクトを削除します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> イベント ハンドラーでメソッドが呼び出されています。</exception>
    </member>
    <member name="E:System.Windows.DependencyObjectCollection`1.CollectionChanged">
      <summary>コレクション内の項目が追加、削除、または置換されたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.Contains(`0)">
      <summary>コレクション内に指定したオブジェクトがあるかどうかを示す値を取得します。</summary>
      <returns>コレクション内にオブジェクトがある場合は true。それ以外の場合は false。</returns>
      <param name="item">コレクション内にあるかどうかを確認する対象のオブジェクト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> が <see cref="T:System.Windows.DependencyObject" /> ではありません。</exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.CopyTo(`0[],System.Int32)">
      <summary>コレクション内のオブジェクトを、指定した配列内の指定したインデックスの位置へコピーします。</summary>
      <param name="array">コピー先の配列。</param>
      <param name="arrayIndex">コピーする最初のオブジェクトのインデックス。</param>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.Count">
      <summary>コレクション内のオブジェクトの数を取得します。</summary>
      <returns>コレクション内のオブジェクトの数。</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.GetEnumerator">
      <summary>コレクションを反復処理する列挙子を取得します。</summary>
      <returns>コレクションの列挙子。</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.IndexOf(`0)">
      <summary>コレクション内の指定したオブジェクトのインデックスを取得します。コレクション内にオブジェクトがない場合は -1 を返します。</summary>
      <returns>コレクション内で最初に見つかった <paramref name="item" /> のインデックス。コレクション内で <paramref name="item" /> が見つからない場合は -1。</returns>
      <param name="item">コレクション内で検索するオブジェクト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> が <see cref="T:System.Windows.DependencyObject" /> ではありません。</exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.Insert(System.Int32,`0)">
      <summary>指定したインデックスの位置にあるコレクションに、指定したオブジェクトを追加します。</summary>
      <param name="index">オブジェクトを追加する位置のインデックス。</param>
      <param name="item">追加するオブジェクト。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満であるか、またはコレクション内の項目数を上回っています。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> が <see cref="T:System.Windows.DependencyObject" /> ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> イベント ハンドラーでメソッドが呼び出されています。</exception>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.IsReadOnly">
      <summary>コレクションを変更できるかどうかを示す値を取得します。</summary>
      <returns>コレクションを変更できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.Item(System.Int32)">
      <summary>指定したインデックスの位置にあるオブジェクトを取得または設定します。</summary>
      <returns>指定したインデックスの位置にあるオブジェクト。</returns>
      <param name="index">取得または設定するオブジェクトのインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満であるか、またはコレクション内の項目数を上回っています。</exception>
      <exception cref="T:System.ArgumentException">このプロパティの設定時に指定した値が <see cref="T:System.Windows.DependencyObject" /> ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">プロパティが <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> イベント ハンドラーで設定されます。</exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.Remove(`0)">
      <summary>指定したオブジェクトをコレクションから削除します。</summary>
      <returns>オブジェクトが削除された場合は true。オブジェクトがコレクション内に見つからなかった場合は false。</returns>
      <param name="item">削除するオブジェクト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> が <see cref="T:System.Windows.DependencyObject" /> ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> イベント ハンドラーでメソッドが呼び出されています。</exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.RemoveAt(System.Int32)">
      <summary>指定したインデックスの位置にあるオブジェクトをコレクションから削除します。</summary>
      <param name="index">削除するオブジェクトのインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満であるか、またはコレクション内の最高インデックスを超えています。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> イベント ハンドラーでメソッドが呼び出されています。</exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>コレクション内のオブジェクトを、指定した配列内の指定したインデックスの位置へコピーします。</summary>
      <param name="array">コピー先の配列。</param>
      <param name="index">コピーする最初のオブジェクトのインデックス。</param>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#Count">
      <summary>コレクション内のオブジェクトの数を取得します。</summary>
      <returns>コレクション内のオブジェクトの数。</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns>コレクションへのアクセスが同期されている (スレッド セーフである) 場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>コレクションへのアクセスの同期に使用できるオブジェクトを取得します。</summary>
      <returns>コレクションへのアクセスの同期に使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>コレクションを反復処理する列挙子を取得します。</summary>
      <returns>コレクションの列挙子。</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>指定したオブジェクトをコレクションの末尾に追加します。</summary>
      <returns>オブジェクトが追加された位置のインデックス。</returns>
      <param name="value">コレクションに追加するオブジェクト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> が <see cref="T:System.Windows.DependencyObject" /> ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> イベント ハンドラーでメソッドが呼び出されています。</exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Clear">
      <summary>コレクションからすべてのオブジェクトを削除します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> イベント ハンドラーでメソッドが呼び出されています。</exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>コレクション内に指定したオブジェクトがあるかどうかを示す値を取得します。</summary>
      <returns>コレクション内にオブジェクトがある場合は true。それ以外の場合は false。</returns>
      <param name="value">コレクション内にあるかどうかを確認する対象のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>コレクション内の指定したオブジェクトのインデックスを取得します。コレクション内にオブジェクトがない場合は -1 を返します。</summary>
      <returns>コレクション内で最初に見つかった <paramref name="item" /> のインデックス。コレクション内で <paramref name="item" /> が見つからない場合は -1。</returns>
      <param name="value">コレクション内で検索するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>指定したインデックスの位置にあるコレクションに、指定したオブジェクトを追加します。</summary>
      <param name="index">オブジェクトを追加する位置のインデックス。</param>
      <param name="value">追加するオブジェクト。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満であるか、またはコレクション内の項目数を上回っています。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> が <see cref="T:System.Windows.DependencyObject" /> ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> イベント ハンドラーでメソッドが呼び出されています。</exception>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IsFixedSize">
      <summary>コレクション作成後にオブジェクトの追加または削除を許可するかどうかを示す値を取得します。</summary>
      <returns>コレクションが固定サイズの場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#IsReadOnly">
      <summary>コレクションを変更できるかどうかを示す値を取得します。</summary>
      <returns>コレクションを変更できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>指定したインデックスの位置にあるオブジェクトを取得または設定します。</summary>
      <returns>指定したインデックスの位置にあるオブジェクト。</returns>
      <param name="index">取得または設定するオブジェクトのインデックス。</param>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>指定したオブジェクトをコレクションから削除します。</summary>
      <param name="value">削除するオブジェクト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> が <see cref="T:System.Windows.DependencyObject" /> ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> イベント ハンドラーでメソッドが呼び出されています。</exception>
    </member>
    <member name="M:System.Windows.DependencyObjectCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>指定したインデックスの位置にあるオブジェクトをコレクションから削除します。</summary>
      <param name="index">削除するオブジェクトのインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が 0 未満であるか、またはコレクション内の最高インデックスを超えています。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="E:System.Windows.DependencyObjectCollection`1.CollectionChanged" /> イベント ハンドラーでメソッドが呼び出されています。</exception>
    </member>
    <member name="T:System.Windows.DependencyProperty">
      <summary>Windows Phone プロパティ システムに登録される依存関係プロパティを表します。依存関係プロパティは、値式、データ バインディング、アニメーション、プロパティ変更通知をサポートします。</summary>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <summary>指定された <see cref="T:System.Type" /> に登録されている依存関係プロパティに対してプロパティ メタデータ値を取得します。</summary>
      <returns>プロパティ メタデータ オブジェクト。</returns>
      <param name="forType">依存関係プロパティ メタデータの取得対象となる型。</param>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>プロパティ名、プロパティ型、所有者型、およびプロパティに対するプロパティ メタデータを指定して、依存関係プロパティを登録します。</summary>
      <returns>クラス内のパブリック静的読み取り専用フィールドの値を設定するために使用される依存関係プロパティ識別子。後で、プログラムで値を設定したり、コードで <see cref="T:System.Windows.Data.Binding" /> をアタッチしたりするときに、この識別子を独自のコードとサードパーティのユーザー コードで使用して依存関係プロパティを参照できます。</returns>
      <param name="name">登録する依存関係プロパティの名前。</param>
      <param name="propertyType">プロパティの型。</param>
      <param name="ownerType">依存関係プロパティを登録している所有者型。</param>
      <param name="typeMetadata">プロパティ メタデータ インスタンス。<see cref="T:System.Windows.PropertyChangedCallback" /> 実装参照を含めることができます。</param>
      <exception cref="T:System.ArgumentNullException">要求したパラメーターが null です (不足しているパラメーター名の例外を確認してください)。</exception>
      <exception cref="T:System.ArgumentException">パラメーターが範囲外です。たとえば、<paramref name="name" /> が空の文字列になっています。または<paramref name="typeMetadata" /> に指定された既定値と一致しない <paramref name="propertyType" /> で登録を試みました。</exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary>プロパティ名、プロパティ型、所有者型、およびプロパティに対するプロパティ メタデータを指定して、添付依存関係プロパティを登録します。</summary>
      <returns>クラス内のパブリック静的読み取り専用フィールドの値を設定するために使用される依存関係プロパティ識別子。値をプログラムで設定する、<see cref="T:System.Windows.Data.Binding" /> をアタッチするなどの操作のために、その識別子を使用して、後で添付プロパティを参照します。</returns>
      <param name="name">登録する依存関係プロパティの名前。</param>
      <param name="propertyType">プロパティの型。</param>
      <param name="ownerType">依存関係プロパティを登録している所有者型。</param>
      <param name="defaultMetadata">プロパティ メタデータ インスタンス。<see cref="T:System.Windows.PropertyChangedCallback" /> 実装参照を含めることができます。</param>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
      <summary>プロパティは存在するが、その値がプロパティ システムによって設定されていないことを示すために、プロパティ システムが null の代わりに使用する静的な値を指定します。</summary>
      <returns>未設定の値の sentinel 値。</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
      <summary>
        <see cref="T:System.Windows.PropertyChangedCallback" /> 実装用のデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <summary>変更後のプロパティの値を取得します。</summary>
      <returns>変更後のプロパティの値。</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <summary>変更前のプロパティの値を取得します。</summary>
      <returns>変更前のプロパティの値。</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <summary>値が変更された依存関係プロパティの識別子を取得します。</summary>
      <returns>値が変更された依存関係プロパティの識別子フィールド。</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
      <summary>特定の <see cref="T:System.Windows.DependencyObject" /> の実装で <see cref="T:System.Windows.DependencyProperty" /> が変更されたときに発生するイベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース (通常はプロパティが変更されたオブジェクト)。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Deployment">
      <summary>Windows Phone アプリケーションを配置する場合、アプリケーション マニフェストのアプリケーション パーツ情報およびローカリゼーション情報を提供します。</summary>
    </member>
    <member name="M:System.Windows.Deployment.#ctor">
      <summary>
        <see cref="T:System.Windows.Deployment" /> クラスの新しいインスタンスを初期化します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Deployment.Current" /> プロパティは既に初期化済みです。</exception>
    </member>
    <member name="P:System.Windows.Deployment.Current">
      <summary>現在の <see cref="T:System.Windows.Deployment" /> オブジェクトを取得します。</summary>
      <returns>現在の <see cref="T:System.Windows.Deployment" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Deployment.EntryPointAssembly">
      <summary>
        <see cref="T:System.Windows.Deployment" /> のどのパーツがエントリ ポイント アセンブリかを示す文字列名を取得します。</summary>
      <returns>エントリ ポイント アセンブリとして使用されるアセンブリの名前を示す文字列。<see cref="T:System.Windows.AssemblyPart" /> として指定したいずれかのアセンブリの名前になります。</returns>
    </member>
    <member name="F:System.Windows.Deployment.EntryPointAssemblyProperty">
      <summary>
        <see cref="P:System.Windows.Deployment.EntryPointAssembly" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Deployment.EntryPointAssembly" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Deployment.EntryPointType">
      <summary>アプリケーションの <see cref="T:System.Windows.Application" /> エントリ ポイントを含むクラスの名前空間および型名を示す文字列を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Application" /> エントリ ポイントを含むクラスの名前空間および型名。</returns>
    </member>
    <member name="F:System.Windows.Deployment.EntryPointTypeProperty">
      <summary>
        <see cref="P:System.Windows.Deployment.EntryPointType" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Deployment.EntryPointType" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Deployment.ExternalParts">
      <summary>アプリケーションによって返される外部アセンブリを表す <see cref="T:System.Windows.ExternalPart" /> インスタンスのコレクションを取得します。</summary>
      <returns>外部アセンブリ パーツのコレクション。既定値は空のコレクションです。</returns>
    </member>
    <member name="F:System.Windows.Deployment.ExternalPartsProperty">
      <summary>
        <see cref="P:System.Windows.Deployment.ExternalParts" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Deployment.ExternalParts" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Deployment.Parts">
      <summary>配置に含まれるアセンブリ パーツのコレクションを取得します。</summary>
      <returns>アセンブリ パーツのコレクション。既定値は空のコレクションです。</returns>
    </member>
    <member name="F:System.Windows.Deployment.PartsProperty">
      <summary>
        <see cref="P:System.Windows.Deployment.Parts" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Deployment.Parts" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Deployment.RuntimeVersion">
      <summary>この配置がサポートする XAML ランタイム バージョンを取得します。</summary>
      <returns>この配置がサポートする XAML ランタイム バージョン。</returns>
    </member>
    <member name="F:System.Windows.Deployment.RuntimeVersionProperty">
      <summary>
        <see cref="P:System.Windows.Deployment.RuntimeVersion" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Deployment.RuntimeVersion" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.DragEventArgs">
      <summary>Windows Phone のドラッグ アンド ドロップ イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.DragEventArgs.Data">
      <summary>対応するドラッグ イベントに関連付けられているデータを含むデータ オブジェクトを取得 (<see cref="T:System.Windows.IDataObject" /> を実装) します。この値は、すべてのイベント ケースで有用なわけではありません。「解説」を参照してください。</summary>
      <returns>対応するドラッグ イベントに関連付けられたデータを含むデータ オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.DragEventArgs.GetPosition(System.Windows.UIElement)">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> に対する相対的なドロップ位置を返します。</summary>
      <returns>
        <paramref name="relativeTo" /> で指定した要素に対する相対的なドロップ位置。</returns>
      <param name="relativeTo">相対的なドロップ位置の取得対象となる <see cref="T:System.Windows.UIElement" />。</param>
    </member>
    <member name="P:System.Windows.DragEventArgs.Handled">
      <summary>ルーティング イベントがルートをたどる際のイベント処理の現在の状態を示す値を取得または設定します。</summary>
      <returns>イベントが処理済みとマークされている場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="T:System.Windows.Duration">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Timeline" /> がアクティブである期間を表します。</summary>
    </member>
    <member name="M:System.Windows.Duration.#ctor(System.TimeSpan)">
      <summary>指定した <see cref="T:System.TimeSpan" /> 値を使用して、<see cref="T:System.Windows.Duration" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="timeSpan">この期間の初期時間間隔を表します。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="timeSpan" /> は <see cref="F:System.TimeSpan.Zero" /> 未満であると評価されます。</exception>
    </member>
    <member name="M:System.Windows.Duration.Add(System.Windows.Duration)">
      <summary>指定した <see cref="T:System.Windows.Duration" /> の値をこの <see cref="T:System.Windows.Duration" /> に加算します。</summary>
      <returns>関連する各 <see cref="T:System.Windows.Duration" /> に値がある場合、合計値を表す <see cref="T:System.Windows.Duration" />。それ以外の場合、このメソッドは null を返します。</returns>
      <param name="duration">現在のインスタンスに <paramref name="duration" /> を加えた値を表す <see cref="T:System.Windows.Duration" /> のインスタンス。</param>
    </member>
    <member name="P:System.Windows.Duration.Automatic">
      <summary>自動的に決定される <see cref="T:System.Windows.Duration" /> 値を取得します。</summary>
      <returns>自動値に初期化された <see cref="T:System.Windows.Duration" />。</returns>
    </member>
    <member name="M:System.Windows.Duration.Compare(System.Windows.Duration,System.Windows.Duration)">
      <summary>一方の <see cref="T:System.Windows.Duration" /> 値をもう一方の値と比較します。</summary>
      <returns>
        <paramref name="t1" /> が <paramref name="t2" /> より小さい場合は、その差を表す負の値です。<paramref name="t1" /> が <paramref name="t2" /> と等しい場合、0 の値。<paramref name="t1" /> が <paramref name="t2" /> より大きい場合、差異を表す正の値。</returns>
      <param name="t1">比較対象の <see cref="T:System.Windows.Duration" /> の第 1 インスタンス。</param>
      <param name="t2">比較対象の <see cref="T:System.Windows.Duration" /> の第 2 インスタンス。</param>
    </member>
    <member name="M:System.Windows.Duration.Equals(System.Object)">
      <summary>指定したオブジェクトが <see cref="T:System.Windows.Duration" /> と等しいかどうかを判断します。</summary>
      <returns>値がこの <see cref="T:System.Windows.Duration" /> と等しい場合は true。それ以外の場合は false。</returns>
      <param name="value">等しいかどうかを確認するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Duration.Equals(System.Windows.Duration)">
      <summary>指定した <see cref="T:System.Windows.Duration" /> が、この <see cref="T:System.Windows.Duration" /> と等しいかどうかを判断します。</summary>
      <returns>
        <paramref name="duration" /> がこの <see cref="T:System.Windows.Duration" /> と等しい場合は true。それ以外の場合は false。</returns>
      <param name="duration">等しいかどうかを確認する <see cref="T:System.Windows.Duration" />。</param>
    </member>
    <member name="M:System.Windows.Duration.Equals(System.Windows.Duration,System.Windows.Duration)">
      <summary>2 つの <see cref="T:System.Windows.Duration" /> 値が等しいかどうかを判断します。</summary>
      <returns>
        <paramref name="t1" /> が <paramref name="t2" /> と等しい場合は true。それ以外の場合は false。</returns>
      <param name="t1">比較対象の第 1 <see cref="T:System.Windows.Duration" />。</param>
      <param name="t2">比較対象の第 2 <see cref="T:System.Windows.Duration" />。</param>
    </member>
    <member name="P:System.Windows.Duration.Forever">
      <summary>無限の間隔を表す <see cref="T:System.Windows.Duration" /> 値を取得します。</summary>
      <returns>永久値に初期化された <see cref="T:System.Windows.Duration" />。</returns>
    </member>
    <member name="M:System.Windows.Duration.GetHashCode">
      <summary>このオブジェクトのハッシュ コードを取得します。</summary>
      <returns>ハッシュ コード識別子。</returns>
    </member>
    <member name="P:System.Windows.Duration.HasTimeSpan">
      <summary>この <see cref="T:System.Windows.Duration" /> が <see cref="T:System.TimeSpan" /> 値を表すかどうかを示す値を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Duration" /> が <see cref="T:System.TimeSpan" /> 値の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Duration.op_Addition(System.Windows.Duration,System.Windows.Duration)">
      <summary>2 つの <see cref="T:System.Windows.Duration" /> 値を加算します。</summary>
      <returns>両方の <see cref="T:System.Windows.Duration" /> 値が <see cref="T:System.TimeSpan" /> 値を持つ場合、このメソッドはこれら 2 つの値の合計を返します。いずれかの値が <see cref="P:System.Windows.Duration.Automatic" /> に設定されている場合、メソッドは <see cref="P:System.Windows.Duration.Automatic" /> を返します。いずれかの値が <see cref="P:System.Windows.Duration.Forever" /> に設定されている場合、メソッドは <see cref="P:System.Windows.Duration.Forever" /> を返します。<paramref name="t1" /> または <paramref name="t2" /> のいずれかが値を持たない場合、このメソッドは null を返します。</returns>
      <param name="t1">最初に加算する <see cref="T:System.Windows.Duration" />。</param>
      <param name="t2">2 番目に加算する <see cref="T:System.Windows.Duration" />。</param>
    </member>
    <member name="M:System.Windows.Duration.op_Equality(System.Windows.Duration,System.Windows.Duration)">
      <summary>2 つの <see cref="T:System.Windows.Duration" /> の大文字と小文字が等しいかどうかを判断します。</summary>
      <returns>両方の <see cref="T:System.Windows.Duration" /> 値が同じプロパティ値を持つ場合、またはすべての <see cref="T:System.Windows.Duration" /> 値が null の場合は true。それ以外の場合、このメソッドは false を返します。</returns>
      <param name="t1">比較対象の第 1 <see cref="T:System.Windows.Duration" />。</param>
      <param name="t2">比較対象の第 2 <see cref="T:System.Windows.Duration" />。</param>
    </member>
    <member name="M:System.Windows.Duration.op_GreaterThan(System.Windows.Duration,System.Windows.Duration)">
      <summary>一方の <see cref="T:System.Windows.Duration" /> が、もう一方より大きいかどうかを判断します。</summary>
      <returns>
        <paramref name="t1" /> と <paramref name="t2" /> の両方が値を持ち、<paramref name="t1" /> が <paramref name="t2" /> より大きい場合は true。それ以外の場合は false。</returns>
      <param name="t1">比較する <see cref="T:System.Windows.Duration" /> 値。</param>
      <param name="t2">比較する 2 番目の <see cref="T:System.Windows.Duration" /> 値。</param>
    </member>
    <member name="M:System.Windows.Duration.op_GreaterThanOrEqual(System.Windows.Duration,System.Windows.Duration)">
      <summary>
        <see cref="T:System.Windows.Duration" /> がもう一方の値以上であるかどうかを判断します。</summary>
      <returns>
        <paramref name="t1" /> と <paramref name="t2" /> の両方が値を持ち、<paramref name="t1" /> が <paramref name="t2" /> 以上である場合は true。それ以外の場合は false。</returns>
      <param name="t1">比較対象の <see cref="T:System.Windows.Duration" /> の第 1 インスタンス。</param>
      <param name="t2">比較対象の <see cref="T:System.Windows.Duration" /> の第 2 インスタンス。</param>
    </member>
    <member name="M:System.Windows.Duration.op_Implicit(System.TimeSpan)~System.Windows.Duration">
      <summary>指定した <see cref="T:System.TimeSpan" /> から <see cref="T:System.Windows.Duration" /> を暗黙的に作成します。</summary>
      <returns>作成された <see cref="T:System.Windows.Duration" />。</returns>
      <param name="timeSpan">
        <see cref="T:System.Windows.Duration" /> の暗黙の作成元となる <see cref="T:System.TimeSpan" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="timeSpan" /> は <see cref="F:System.TimeSpan.Zero" /> 未満であると評価されます。</exception>
    </member>
    <member name="M:System.Windows.Duration.op_Inequality(System.Windows.Duration,System.Windows.Duration)">
      <summary>2 つの <see cref="T:System.Windows.Duration" /> の大文字と小文字が等しくないかどうかを判断します。</summary>
      <returns>
        <paramref name="t1" /> または <paramref name="t2" /> のいずれか 1 つだけが値を表す場合、または両方が値を表し、その値が異なる場合は true。それ以外の場合は false。</returns>
      <param name="t1">比較対象の第 1 <see cref="T:System.Windows.Duration" />。</param>
      <param name="t2">比較対象の第 2 <see cref="T:System.Windows.Duration" />。</param>
    </member>
    <member name="M:System.Windows.Duration.op_LessThan(System.Windows.Duration,System.Windows.Duration)">
      <summary>
        <see cref="T:System.Windows.Duration" /> が、もう一方のインスタンスの値より小さいかどうかを判断します。</summary>
      <returns>
        <paramref name="t1" /> と <paramref name="t2" /> の両方が値を持ち、<paramref name="t1" /> が <paramref name="t2" /> より小さい場合は true。それ以外の場合は false。</returns>
      <param name="t1">比較対象の第 1 <see cref="T:System.Windows.Duration" />。</param>
      <param name="t2">比較対象の第 2 <see cref="T:System.Windows.Duration" />。</param>
    </member>
    <member name="M:System.Windows.Duration.op_LessThanOrEqual(System.Windows.Duration,System.Windows.Duration)">
      <summary>
        <see cref="T:System.Windows.Duration" /> がもう一方の値以下であるかどうかを判断します。</summary>
      <returns>
        <paramref name="t1" /> と <paramref name="t2" /> の両方が値を持ち、<paramref name="t1" /> が <paramref name="t2" /> 以下である場合は true。それ以外の場合は false。</returns>
      <param name="t1">比較対象の <see cref="T:System.Windows.Duration" />。</param>
      <param name="t2">比較対象の <see cref="T:System.Windows.Duration" />。</param>
    </member>
    <member name="M:System.Windows.Duration.op_Subtraction(System.Windows.Duration,System.Windows.Duration)">
      <summary>一方の <see cref="T:System.Windows.Duration" /> の値をもう一方の値から減算します。</summary>
      <returns>各 <see cref="T:System.Windows.Duration" /> が値を持つ場合、<paramref name="t1" /> から <paramref name="t2" /> を除算した値を表す <see cref="T:System.Windows.Duration" />。<paramref name="t1" /> が <see cref="P:System.Windows.Duration.Forever" /> の値を持ち、<paramref name="t2" /> が <see cref="P:System.Windows.Duration.TimeSpan" /> の値を持つ場合、このメソッドは <see cref="P:System.Windows.Duration.Forever" /> を返します。それ以外の場合、このメソッドは null を返します。</returns>
      <param name="t1">第 1 の <see cref="T:System.Windows.Duration" />。</param>
      <param name="t2">減算する <see cref="T:System.Windows.Duration" />。</param>
    </member>
    <member name="M:System.Windows.Duration.op_UnaryPlus(System.Windows.Duration)">
      <summary>指定された <see cref="T:System.Windows.Duration" /> を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Duration" /> 操作の結果。</returns>
      <param name="duration">取得する <see cref="T:System.Windows.Duration" />。</param>
    </member>
    <member name="M:System.Windows.Duration.Plus(System.Windows.Duration)">
      <summary>1 つの <see cref="T:System.Windows.Duration" /> をこの <see cref="T:System.Windows.Duration" /> に加算します。</summary>
      <returns>合計した <see cref="T:System.Windows.Duration" />。</returns>
      <param name="duration">追加する <see cref="T:System.Windows.Duration" />。</param>
    </member>
    <member name="M:System.Windows.Duration.Subtract(System.Windows.Duration)">
      <summary>この <see cref="T:System.Windows.Duration" /> から、指定した <see cref="T:System.Windows.Duration" /> を減算します。</summary>
      <returns>減算した <see cref="T:System.Windows.Duration" />。</returns>
      <param name="duration">この <see cref="T:System.Windows.Duration" /> から減算する <see cref="T:System.Windows.Duration" />。</param>
    </member>
    <member name="P:System.Windows.Duration.TimeSpan">
      <summary>この <see cref="T:System.Windows.Duration" /> が表す <see cref="T:System.TimeSpan" /> 値を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Duration" /> が表す <see cref="T:System.TimeSpan" /> 値。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Duration" /> は <see cref="T:System.TimeSpan" /> を表しません。</exception>
    </member>
    <member name="M:System.Windows.Duration.ToString">
      <summary>
        <see cref="T:System.Windows.Duration" /> を <see cref="T:System.String" /> 表現に変換します。</summary>
      <returns>この <see cref="T:System.Windows.Duration" /> の <see cref="T:System.String" /> 表現。</returns>
    </member>
    <member name="T:System.Windows.DurationConverter">
      <summary>
        <see cref="T:System.Windows.Duration" /> 構造体の型変換を提供します。</summary>
    </member>
    <member name="M:System.Windows.DurationConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.DurationConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.DurationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバーターが、特定の型のオブジェクトを <see cref="T:System.Windows.Duration" /> 型に変換できるかどうかを示す値を返します。</summary>
      <returns>コンバーターが変換を実行できる場合は true。それ以外の場合は false。</returns>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換前の型を表す <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Windows.DurationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定した値を <see cref="T:System.Windows.Duration" /> 型に変換します。</summary>
      <returns>返された <see cref="T:System.Windows.Duration" />。</returns>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換対象のオブジェクト。</param>
    </member>
    <member name="T:System.Windows.ElevatedPermissions">
      <summary>アクセス許可の昇格が必要かどうかを示す定数を定義します。</summary>
    </member>
    <member name="F:System.Windows.ElevatedPermissions.NotRequired">
      <summary>アクセス許可の昇格は必要ではありません。</summary>
    </member>
    <member name="F:System.Windows.ElevatedPermissions.Required">
      <summary>アクセス許可の昇格は必要です。</summary>
    </member>
    <member name="T:System.Windows.EventTrigger">
      <summary>イベントに応答して、一連のアクション (アニメーション ストーリーボード) を適用するトリガーを表します。</summary>
    </member>
    <member name="M:System.Windows.EventTrigger.#ctor">
      <summary>
        <see cref="T:System.Windows.EventTrigger" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.EventTrigger.Actions">
      <summary>この <see cref="T:System.Windows.EventTrigger" /> が保持する <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> オブジェクトのコレクションを取得します。</summary>
      <returns>既存の <see cref="T:System.Windows.TriggerActionCollection" />。</returns>
    </member>
    <member name="P:System.Windows.EventTrigger.RoutedEvent">
      <summary>トリガーを初期化するイベントの名前を取得または設定します。</summary>
      <returns>イベントの識別子の名前。解説を参照してください。</returns>
    </member>
    <member name="T:System.Windows.ExceptionRoutedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.MediaElement.MediaFailed" />、<see cref="E:System.Windows.Controls.MultiScaleImage.ImageFailed" /> など、非同期操作によりイベントとして発生する例外のイベント データを提供します。</summary>
    </member>
    <member name="P:System.Windows.ExceptionRoutedEventArgs.ErrorException">
      <summary>イベントにより報告される、基になる例外またはネイティブ レベルのエラーを取得します。</summary>
      <returns>報告される例外。</returns>
    </member>
    <member name="T:System.Windows.ExceptionRoutedEventHandler">
      <summary>例外を報告する特定のイベントを処理するメソッドを表します。これらの例外は、多くの場合、例外確認のために UI スレッドを停止するオプションを持たない非同期処理が原因で発生します。</summary>
      <param name="sender">ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Expression">
      <summary>この型は、コードで直接使用したり派生したりするためのものではありません。</summary>
    </member>
    <member name="T:System.Windows.ExtensionPart">
      <summary>アプリケーション ライブラリ キャッシュによって使用されるアセンブリを含む zip ファイルを表します。</summary>
    </member>
    <member name="M:System.Windows.ExtensionPart.#ctor">
      <summary>
        <see cref="T:System.Windows.ExtensionPart" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.ExtensionPart.Source">
      <summary>外部ライブラリ パッケージのファイル名または URI を取得または設定します。</summary>
      <returns>外部ライブラリ パッケージのファイル名または URI。</returns>
    </member>
    <member name="F:System.Windows.ExtensionPart.SourceProperty">
      <summary>
        <see cref="P:System.Windows.ExtensionPart.Source" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.ExtensionPart.Source" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.ExternalPart">
      <summary>アプリケーション パッケージ (.xap ファイル) には含まれない、Windows Phone アプリケーションのパーツを指定するための基本クラスを定義します。</summary>
    </member>
    <member name="M:System.Windows.ExternalPart.#ctor">
      <summary>
        <see cref="T:System.Windows.ExternalPart" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.ExternalPart.Source">
      <summary>外部パートの URI を取得または設定します。</summary>
      <returns>外部パートの URI。</returns>
    </member>
    <member name="T:System.Windows.ExternalPartCollection">
      <summary>アプリケーション パッケージ (.xap ファイル) には含まれない、Windows Phone アプリケーションのパーツを示す <see cref="T:System.Windows.ExternalPart" /> インスタンスのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.ExternalPartCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.ExternalPartCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.FlowDirection">
      <summary>テキストおよび UI 要素のコンテンツのフロー方向を指定する定数を定義します。</summary>
    </member>
    <member name="F:System.Windows.FlowDirection.LeftToRight">
      <summary>コンテンツが左から右にフローすることを示します。</summary>
    </member>
    <member name="F:System.Windows.FlowDirection.RightToLeft">
      <summary>コンテンツが右から左にフローすることを示します。</summary>
    </member>
    <member name="T:System.Windows.FontCapitals">
      <summary>
        <see cref="T:System.Windows.Documents.Typography" /> オブジェクトの大文字スタイルを記述します。</summary>
    </member>
    <member name="F:System.Windows.FontCapitals.Normal">
      <summary>大文字が標準で描画されます。</summary>
    </member>
    <member name="F:System.Windows.FontCapitals.AllSmallCaps">
      <summary>小文字が、ほぼ同等の高さを持つ大文字のグリフ フォームに置き換えられます。</summary>
    </member>
    <member name="F:System.Windows.FontCapitals.SmallCaps">
      <summary>小文字が、ほぼ同等の高さを持つ大文字のグリフ フォームに置き換えられます。</summary>
    </member>
    <member name="F:System.Windows.FontCapitals.AllPetiteCaps">
      <summary>小文字が、ほぼ同等の高さを持つ大文字のグリフ フォームに置き換えられます。超小型大文字は、小型大文字より小さい文字です。</summary>
    </member>
    <member name="F:System.Windows.FontCapitals.PetiteCaps">
      <summary>小文字が、ほぼ同等の高さを持つ大文字のグリフ フォームに置き換えられます。超小型大文字は、小型大文字より小さい文字です。</summary>
    </member>
    <member name="F:System.Windows.FontCapitals.Unicase">
      <summary>大文字はユニケースで表示されます。ユニケース フォントは、タイプ デザイナーによって決定された大文字と小文字のグリフを混在させた形式で、大文字と小文字の両方を描画します。</summary>
    </member>
    <member name="F:System.Windows.FontCapitals.Titling">
      <summary>グリフ フォームは、タイトル用にデザインされたタイポグラフィ形式に置き換えられます。</summary>
    </member>
    <member name="T:System.Windows.FontEastAsianLanguage">
      <summary>指定した東アジアの書記体系または言語に使用されるグリフのフォント固有のバージョンをユーザーが選択するための機構を提供します。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianLanguage.Normal">
      <summary>フォント固有のグリフのバージョンは適用されていません。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianLanguage.HojoKanji">
      <summary>既定のグリフを補助漢字仕様の対応する形式に置き換えます。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianLanguage.Jis04">
      <summary>既定の日本語グリフを JIS04 仕様の対応する形式に置き換えます。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianLanguage.Jis78">
      <summary>既定の日本語グリフを JIS78 仕様の対応する形式に置き換えます。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianLanguage.Jis83">
      <summary>既定の日本語グリフを JIS83 仕様の対応する形式に置き換えます。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianLanguage.Jis90">
      <summary>既定の日本語グリフを JIS90 仕様の対応する形式に置き換えます。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianLanguage.NlcKanji">
      <summary>既定のグリフを国語審議会 (NLC) による仕様の対応する形式に置き換えます。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianLanguage.Simplified">
      <summary>繁体字の中国語形式または日本語形式をそれぞれ対応する簡体字形式に置き換えます。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianLanguage.Traditional">
      <summary>簡体字の中国語形式または日本語形式をそれぞれ対応する繁体字形式に置き換えます。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianLanguage.TraditionalNames">
      <summary>簡体字の漢字形式をそれぞれ対応する繁体字形式に置き換えます。このグリフ セットは、人名での使用が適切と見なされている繁体字形式に明示的に制限されています。</summary>
    </member>
    <member name="T:System.Windows.FontEastAsianWidths">
      <summary>さまざまな幅のスタイルのグリフをユーザーが選択するための機構を提供します。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianWidths.Normal">
      <summary>既定の幅のスタイル。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianWidths.Full">
      <summary>文字幅が固定のグリフを全幅 (通常は全角) のグリフで置き換えます。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianWidths.Half">
      <summary>文字幅が固定のグリフを半幅 (半角) のグリフで置き換えます。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianWidths.Proportional">
      <summary>文字幅が固定のグリフを、文字に応じて幅が異なるプロポーショナル グリフで置き換えます。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianWidths.Quarter">
      <summary>文字幅が固定のグリフを 4 分の 1 幅 (全角の 4 分の 1) のグリフで置き換えます。</summary>
    </member>
    <member name="F:System.Windows.FontEastAsianWidths.Third">
      <summary>文字幅が固定のグリフを 3 分の 1 幅 (全角の 3 分の 1) のグリフで置き換えます。</summary>
    </member>
    <member name="T:System.Windows.FontFraction">
      <summary>
        <see cref="T:System.Windows.Documents.Typography" /> オブジェクトの分数のスタイルを記述します。</summary>
    </member>
    <member name="F:System.Windows.FontFraction.Normal">
      <summary>既定のスタイルが使用されます。</summary>
    </member>
    <member name="F:System.Windows.FontFraction.Stacked">
      <summary>数字を上下に重ねた分数のスタイルが使用されます。</summary>
    </member>
    <member name="F:System.Windows.FontFraction.Slashed">
      <summary>スラッシュを使用した分数のスタイルが使用されます。</summary>
    </member>
    <member name="T:System.Windows.FontNumeralAlignment">
      <summary>
        <see cref="T:System.Windows.Documents.Typography" /> オブジェクトの数字の配置を示します。</summary>
    </member>
    <member name="F:System.Windows.FontNumeralAlignment.Normal">
      <summary>既定の数字の配置を使用します。</summary>
    </member>
    <member name="F:System.Windows.FontNumeralAlignment.Proportional">
      <summary>プロポーショナル数字 (比例幅) の配置を使用します。</summary>
    </member>
    <member name="F:System.Windows.FontNumeralAlignment.Tabular">
      <summary>表形式の配置を使用します。</summary>
    </member>
    <member name="T:System.Windows.FontNumeralStyle">
      <summary>
        <see cref="T:System.Windows.Documents.Typography" /> オブジェクトの数字形式を示します。</summary>
    </member>
    <member name="F:System.Windows.FontNumeralStyle.Normal">
      <summary>既定の数字形式を使用します。</summary>
    </member>
    <member name="F:System.Windows.FontNumeralStyle.Lining">
      <summary>ライニング数字形式を使用します。既定のグリフを、高さがすべて揃っている数字形式に置き換えます。</summary>
    </member>
    <member name="F:System.Windows.FontNumeralStyle.OldStyle">
      <summary>古いスタイルの数字形式を使用します。既定のグリフを、高さおよび色が小文字と調和しやすい数字形式に置き換えます。</summary>
    </member>
    <member name="T:System.Windows.FontStretch">
      <summary>フォントの通常の縦横比に対して、フォントがどのくらい伸縮されているかを表します。</summary>
    </member>
    <member name="M:System.Windows.FontStretch.Equals(System.Object)">
      <summary>オブジェクトと現在の <see cref="T:System.Windows.FontStretch" /> オブジェクトを比較します。</summary>
      <returns>2 つのインスタンスが等しい場合は true。それ以外の場合は false。</returns>
      <param name="obj">等しいかどうかを比較するオブジェクトのインスタンス。</param>
    </member>
    <member name="M:System.Windows.FontStretch.GetHashCode">
      <summary>このオブジェクトのハッシュ コードを取得します。</summary>
      <returns>整数ハッシュ値。</returns>
    </member>
    <member name="M:System.Windows.FontStretch.op_Equality(System.Windows.FontStretch,System.Windows.FontStretch)">
      <summary>
        <see cref="T:System.Windows.FontStretch" /> の 2 つのインスタンスを比較し、等しいかどうかを確認します。</summary>
      <returns>指定した <see cref="T:System.Windows.FontStretch" /> オブジェクトが等しい場合は true。それ以外の場合は false。</returns>
      <param name="left">最初に比較する <see cref="T:System.Windows.FontStretch" /> のインスタンス。</param>
      <param name="right">比較対象の <see cref="T:System.Windows.FontStretch" /> の第 2 インスタンス。</param>
    </member>
    <member name="M:System.Windows.FontStretch.op_Inequality(System.Windows.FontStretch,System.Windows.FontStretch)">
      <summary>
        <see cref="T:System.Windows.FontStretch" /> の 2 つのインスタンスを評価して、両者が等しくないかどうかを確認します。</summary>
      <returns>
        <paramref name="left" /> が <paramref name="right" /> と等しい場合は true。それ以外の場合は false。</returns>
      <param name="left">比較対象の <see cref="T:System.Windows.FontStretch" /> の第 1 インスタンス。</param>
      <param name="right">比較対象の <see cref="T:System.Windows.FontStretch" /> の第 2 インスタンス。</param>
    </member>
    <member name="M:System.Windows.FontStretch.ToString">
      <summary>現在の <see cref="T:System.Windows.FontStretch" /> オブジェクトの <see cref="T:System.String" /> 表現を作成します。</summary>
      <returns>オブジェクトの <see cref="T:System.String" /> 値表現。</returns>
    </member>
    <member name="T:System.Windows.FontStretches">
      <summary>一連の定義済みのフォント伸縮を静的プロパティ値として提供します。</summary>
    </member>
    <member name="P:System.Windows.FontStretches.Condensed">
      <summary>縮小したフォント伸縮を指定します。</summary>
      <returns>縮小したフォント伸縮を表す値。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.Expanded">
      <summary>拡大したフォント伸縮を指定します。</summary>
      <returns>拡大したフォント伸縮を表す値。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.ExtraCondensed">
      <summary>大幅に縮小したフォント伸縮を指定します。</summary>
      <returns>大幅に縮小したフォント伸縮を表す値。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.ExtraExpanded">
      <summary>大幅に拡大したフォント伸縮を指定します。</summary>
      <returns>大幅に拡大したフォント伸縮を表す値。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.Normal">
      <summary>通常のフォント伸縮を指定します。</summary>
      <returns>通常のフォント伸縮を表す値。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.SemiCondensed">
      <summary>半分縮小したフォント伸縮を指定します。</summary>
      <returns>半分縮小したフォント伸縮を表す値。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.SemiExpanded">
      <summary>半分拡大したフォント伸縮を指定します。</summary>
      <returns>半分拡大したフォント伸縮を表す値。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.UltraCondensed">
      <summary>超縮小したフォント伸縮を指定します。</summary>
      <returns>超縮小したフォント伸縮を表す値。</returns>
    </member>
    <member name="P:System.Windows.FontStretches.UltraExpanded">
      <summary>超拡大したフォント伸縮を指定します。</summary>
      <returns>超拡大したフォント伸縮を表す値。</returns>
    </member>
    <member name="T:System.Windows.FontStyle">
      <summary>フォント フェイスのスタイル (標準、斜体など) を表します。</summary>
    </member>
    <member name="M:System.Windows.FontStyle.Equals(System.Object)">
      <summary>オブジェクトと現在の <see cref="T:System.Windows.FontStyle" /> インスタンスが等しいかどうかを比較します。</summary>
      <returns>2 つのインスタンスが等しい場合は true。それ以外の場合は false。</returns>
      <param name="obj">等しいかどうかを比較する <see cref="T:System.Windows.FontStyle" /> を表すオブジェクト。</param>
    </member>
    <member name="M:System.Windows.FontStyle.GetHashCode">
      <summary>このオブジェクトのハッシュ コードを取得します。</summary>
      <returns>整数ハッシュ値。</returns>
    </member>
    <member name="M:System.Windows.FontStyle.op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)">
      <summary>
        <see cref="T:System.Windows.FontStyle" /> の 2 つのインスタンスを比較し、等しいかどうかを確認します。</summary>
      <returns>指定した <see cref="T:System.Windows.FontStyle" /> オブジェクトが等しい場合は true。それ以外の場合は false。</returns>
      <param name="left">比較対象の <see cref="T:System.Windows.FontStyle" /> の第 1 インスタンス。</param>
      <param name="right">比較対象の <see cref="T:System.Windows.FontStyle" /> の第 2 インスタンス。</param>
    </member>
    <member name="M:System.Windows.FontStyle.op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)">
      <summary>
        <see cref="T:System.Windows.FontStyle" /> の 2 つのインスタンスを評価して、両者が等しくないかどうかを確認します。</summary>
      <returns>
        <paramref name="left" /> が <paramref name="right" /> と等しい場合は false。それ以外の場合は true。</returns>
      <param name="left">比較対象の <see cref="T:System.Windows.FontStyle" /> の第 1 インスタンス。</param>
      <param name="right">比較対象の <see cref="T:System.Windows.FontStyle" /> の第 2 インスタンス。</param>
    </member>
    <member name="M:System.Windows.FontStyle.ToString">
      <summary>現在の <see cref="T:System.Windows.FontStyle" /> オブジェクトを表す文字列を作成します。</summary>
      <returns>
        <see cref="T:System.Windows.FontStyle" /> オブジェクトの値を表す文字列。</returns>
    </member>
    <member name="T:System.Windows.FontStyles">
      <summary>一連の定義済みフォント スタイルを静的プロパティ値として提供します。</summary>
    </member>
    <member name="P:System.Windows.FontStyles.Italic">
      <summary>斜体のフォント スタイルを指定します。</summary>
      <returns>斜体のフォント スタイルを表すフォント スタイル。</returns>
    </member>
    <member name="P:System.Windows.FontStyles.Normal">
      <summary>標準またはローマン フォント スタイルを指定します。</summary>
      <returns>標準またはローマン フォント スタイルを表すフォント スタイル。</returns>
    </member>
    <member name="T:System.Windows.FontVariants">
      <summary>登録済みの OpenType フォント バリアントへのアクセスを定義します。</summary>
    </member>
    <member name="F:System.Windows.FontVariants.Normal">
      <summary>OpenType フォント バリアントが有効になっていません。</summary>
    </member>
    <member name="F:System.Windows.FontVariants.Superscript">
      <summary>OpenType 機能の Superscript を有効にします。</summary>
    </member>
    <member name="F:System.Windows.FontVariants.Subscript">
      <summary>OpenType 機能の Subscript を有効にします。</summary>
    </member>
    <member name="F:System.Windows.FontVariants.Ordinal">
      <summary>OpenType 機能の Ordinals を有効にします。</summary>
    </member>
    <member name="F:System.Windows.FontVariants.Inferior">
      <summary>OpenType 機能の Scientific Inferiors を有効にします。</summary>
    </member>
    <member name="F:System.Windows.FontVariants.Ruby">
      <summary>OpenType 機能の Ruby を有効にします。</summary>
    </member>
    <member name="T:System.Windows.FontWeight">
      <summary>ストロークの細さまたは太さでタイプフェイスの濃さを示します。</summary>
    </member>
    <member name="M:System.Windows.FontWeight.Equals(System.Object)">
      <summary>現在の <see cref="T:System.Windows.FontWeight" /> オブジェクトが、指定したオブジェクトと等しいかどうかを判断します。</summary>
      <returns>2 つの値が等しい場合は true。それ以外の場合は false。</returns>
      <param name="obj">等しいかどうかを比較するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.FontWeight.GetHashCode">
      <summary>このオブジェクトのハッシュ コードを取得します。</summary>
      <returns>整数ハッシュ値。</returns>
    </member>
    <member name="M:System.Windows.FontWeight.op_Equality(System.Windows.FontWeight,System.Windows.FontWeight)">
      <summary>
        <see cref="T:System.Windows.FontWeight" /> の 2 つのインスタンスを比較し、等しいかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Windows.FontWeight" /> の値が等しい場合は true。それ以外の場合は false。</returns>
      <param name="left">比較対象の <see cref="T:System.Windows.FontWeight" /> の第 1 インスタンス。</param>
      <param name="right">比較対象の <see cref="T:System.Windows.FontWeight" /> の第 2 インスタンス。</param>
    </member>
    <member name="M:System.Windows.FontWeight.op_Inequality(System.Windows.FontWeight,System.Windows.FontWeight)">
      <summary>
        <see cref="T:System.Windows.FontWeight" /> の 2 つのインスタンスを評価して、両者が等しくないかどうかを確認します。</summary>
      <returns>
        <paramref name="left" /> の値が <paramref name="right" /> と等しい場合は false。それ以外の場合は true。</returns>
      <param name="left">比較対象の <see cref="T:System.Windows.FontWeight" /> の第 1 インスタンス。</param>
      <param name="right">比較対象の <see cref="T:System.Windows.FontWeight" /> の第 2 インスタンス。</param>
    </member>
    <member name="M:System.Windows.FontWeight.ToString">
      <summary>
        <see cref="T:System.Windows.FontWeight" /> オブジェクトの値を表すテキスト文字列を返します。</summary>
      <returns>"Light"、"Normal" などの <see cref="T:System.Windows.FontWeight" /> オブジェクトの値を表す文字列。</returns>
    </member>
    <member name="T:System.Windows.FontWeights">
      <summary>一連の定義済みのフォントの太さを静的プロパティ値として提供します。</summary>
    </member>
    <member name="P:System.Windows.FontWeights.Black">
      <summary>"Black" のフォントの太さを指定します。</summary>
      <returns>"Black" のフォントの太さを表す <see cref="T:System.Windows.FontWeight" /> 値。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.Bold">
      <summary>"Bold" のフォントの太さを指定します。</summary>
      <returns>"Bold" のフォントの太さを表す <see cref="T:System.Windows.FontWeight" /> 値。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.ExtraBlack">
      <summary>"ExtraBlack" のフォントの太さを指定します。</summary>
      <returns>「ExtraBlack」フォントの太さを表す <see cref="T:System.Windows.FontWeight" /> 値。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.ExtraBold">
      <summary>"ExtraBold" のフォントの太さを指定します。</summary>
      <returns>「ExtraBlack」フォントの太さを表す <see cref="T:System.Windows.FontWeight" /> 値。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.ExtraLight">
      <summary>"ExtraLight" のフォントのを指定します。</summary>
      <returns>"ExtraLight" のフォントの太さを表す <see cref="T:System.Windows.FontWeight" /> 値。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.Light">
      <summary>"Light" のフォントの太さを指定します。</summary>
      <returns>"Light" のフォントの太さを表す <see cref="T:System.Windows.FontWeight" /> 値。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.Medium">
      <summary>"Medium" のフォントの太さを指定します。</summary>
      <returns>"Medium" のフォントの太さを表す <see cref="T:System.Windows.FontWeight" /> 値。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.Normal">
      <summary>"Normal" のフォントの太さを指定します。</summary>
      <returns>"Normal" のフォントの太さを表す <see cref="T:System.Windows.FontWeight" /> 値。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.SemiBold">
      <summary>"SemiBold" のフォントの太さを指定します。</summary>
      <returns>"SemiBold" のフォントの太さを表す <see cref="T:System.Windows.FontWeight" /> 値。</returns>
    </member>
    <member name="P:System.Windows.FontWeights.Thin">
      <summary>"Thin" のフォントの太さを指定します。</summary>
      <returns>"Thin" のフォントの太さを表す <see cref="T:System.Windows.FontWeight" /> 値。</returns>
    </member>
    <member name="T:System.Windows.FrameworkElement">
      <summary>Windows Phone レイアウトに関与するオブジェクトに共通する API のフレームワークを提供します。また、<see cref="T:System.Windows.FrameworkElement" /> は、Windows Phone のデータ バインディング、オブジェクト ツリー、およびオブジェクト有効期間の各機能領域に関連する API を定義します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkElement.#ctor">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.ActualHeight">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> の描画時の高さを取得します。</summary>
      <returns>オブジェクトの高さ (ピクセル単位)。既定値は 0 です。既定値は、オブジェクトがロードされておらず、レイアウトが渡されていない場合に使用されることがあります。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ActualHeightProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.ActualWidth">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> の描画時の幅を取得します。</summary>
      <returns>オブジェクトのピクセル単位の幅。既定値は 0 です。既定値は、オブジェクトがロードされておらず、レイアウトが渡されていない場合に使用されることがあります。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.ActualWidthProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
      <summary>Windows Phone レイアウトの配置パスの動作を提供します。クラスはこのメソッドをオーバーライドして、独自の配置パス動作を定義できます。</summary>
      <returns>要素がレイアウトに配置された後に使用される実際のサイズ。</returns>
      <param name="finalSize">このオブジェクトがオブジェクト自体と子を配置するために使用する親の末尾の領域。</param>
    </member>
    <member name="E:System.Windows.FrameworkElement.BindingValidationError">
      <summary>バインディング ソースによってデータ検証エラーが報告されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Cursor">
      <summary>ポインターが <see cref="T:System.Windows.FrameworkElement" /> の上にあるときに表示されるカーソル イメージを取得または設定します。</summary>
      <returns>表示するカーソル イメージ。既定値は、コード アクセスのために null と定義されています。ただし、実行時の UI におけるカーソル イメージの外観は、さまざまな要因によって決定されます。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.CursorProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Cursor" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Cursor" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.DataContext">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> がデータ バインディングに関与するときにそのデータ コンテキストを取得または設定します。</summary>
      <returns>データ コンテキストとして使用するオブジェクト。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.DataContextProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.DataContext" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.DataContext" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.FindName(System.String)">
      <summary>指定した識別名を持つオブジェクトを取得します。</summary>
      <returns>要求されたオブジェクト。一致するオブジェクトが現在の XAML 名前スコープで見つからなかった場合は、null になります。</returns>
      <param name="name">要求されたオブジェクトの名前。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.FlowDirection">
      <summary>レイアウトを制御する親要素内でのテキストやその他のユーザー インターフェイス要素のフロー方向を取得または設定します。</summary>
      <returns>列挙の値として表した、親要素内でのテキストやその他の UI 要素のフロー方向。既定値は <see cref="F:System.Windows.FlowDirection.LeftToRight" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.FlowDirectionProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
      <summary>バインディングが確立された依存関係プロパティの <see cref="T:System.Windows.Data.BindingExpression" /> を取得します。</summary>
      <returns>ローカル値がデータ バインド値を表す場合は、バインディングの <see cref="T:System.Windows.Data.BindingExpression" />。プロパティがデータ バインド値でない場合は、null を返すことがあります。</returns>
      <param name="dp">
        <see cref="T:System.Windows.Data.BindingExpression" /> を取得する対象である、この <see cref="T:System.Windows.FrameworkElement" /> の特定のプロパティに対する依存関係プロパティ識別子。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.Height">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> の高さの推奨値を取得または設定します。</summary>
      <returns>オブジェクトの高さ (ピクセル単位)。既定値は、<see cref="F:System.Double.NaN" /> です。特殊な <see cref="F:System.Double.NaN" /> 値を除いて、この値は 0 以上である必要があります。上限については、「解説」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.HeightProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Height" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Height" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.HorizontalAlignment">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> がレイアウトの親 (パネル コントロールや項目コントロールなど) の一部となる場合に適用される水平方向の配置の特性を取得または設定します。</summary>
      <returns>水平方向の配置の設定を表す列挙値。既定値は、<see cref="F:System.Windows.HorizontalAlignment.Stretch" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.HorizontalAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Language">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> に適用されるローカリゼーション/グローバリゼーション言語情報を取得または設定します。</summary>
      <returns>このオブジェクトの言語情報。既定値は <see cref="T:System.Windows.Markup.XmlLanguage" /> オブジェクトで、"en-US" という文字列に設定した <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> 値です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.LanguageProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Language" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Language" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.LayoutUpdated">
      <summary>Windows Phone のビジュアル ツリーのレイアウトが変化したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.FrameworkElement.Loaded">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> が構築されてオブジェクト ツリーに追加されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.FrameworkElement.LoadedEvent">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.Loaded" /> ルーティング イベントを識別します。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.Loaded" /> ルーティング イベントの識別子。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Margin">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> の外側の余白を取得または設定します。</summary>
      <returns>オブジェクトの余白値を提供します。既定値は、すべてのプロパティ (寸法) が 0 に等しい既定の <see cref="T:System.Windows.Thickness" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MarginProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Margin" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Margin" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MaxHeight">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> の高さの上限を取得または設定します。</summary>
      <returns>オブジェクトの高さの上限 (ピクセル単位)。既定値は <see cref="F:System.Double.PositiveInfinity" /> です。この値には、0 以上の値を設定できます。<see cref="F:System.Double.PositiveInfinity" /> も有効です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MaxHeightProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.MaxHeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.MaxHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MaxWidth">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> の幅の上限を取得または設定します。</summary>
      <returns>オブジェクトの幅の上限 (ピクセル単位)。既定値は、<see cref="F:System.Double.PositiveInfinity" /> です。この値には、0 以上の値を設定できます。<see cref="F:System.Double.PositiveInfinity" /> も有効です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MaxWidthProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.MaxWidth" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.MaxWidth" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
      <summary>Windows Phone レイアウトの測定パスの動作を提供します。クラスはこのメソッドをオーバーライドして、独自の測定パス動作を定義できます。</summary>
      <returns>子オブジェクトの割り当てサイズの計算、固定コンテナー サイズなど他の考慮事項に基づいて、このオブジェクトでレイアウト時に必要と判断されたサイズ。</returns>
      <param name="availableSize">このオブジェクトが子オブジェクトに与えることができる使用可能なサイズ。値として無限大 (<see cref="F:System.Double.PositiveInfinity" />) を指定し、このオブジェクトがあらゆるコンテンツにサイズを合わせられるようにすることができます。</param>
    </member>
    <member name="P:System.Windows.FrameworkElement.MinHeight">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> の高さの下限を取得または設定します。</summary>
      <returns>オブジェクトの高さの下限 (ピクセル単位)。既定値は 0 です。この値には、0 以上の値を設定できます。ただし <see cref="F:System.Double.PositiveInfinity" /> は無効です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MinHeightProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.MinHeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.MinHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.MinWidth">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> の幅の下限を取得または設定します。</summary>
      <returns>オブジェクトの幅の下限 (ピクセル単位)。既定値は 0 です。この値には、0 以上の値を設定できます。ただし <see cref="F:System.Double.PositiveInfinity" /> は無効です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.MinWidthProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.MinWidth" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.MinWidth" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Name">
      <summary>オブジェクトの識別名を取得または設定します。XAML プロセッサが XAML マークアップからオブジェクト ツリーを作成すると、ランタイム コードでは、XAML で宣言されたオブジェクトをこの名前で参照できます。</summary>
      <returns>オブジェクトの名前は、XamlName の文法で有効な文字列でなければなりません。既定値は空の文字列です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.NameProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Name" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Name" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.OnApplyTemplate">
      <summary>派生クラスでオーバーライドされると、アプリケーション コードや内部プロセス (再構築レイアウト パスなど) で <see cref="M:System.Windows.Controls.Control.ApplyTemplate" /> が呼び出されるたびに呼び出されます。簡単に言えば、メソッドは、アプリケーションに UI 要素が表示される直前に呼び出されることになります。詳細については、「解説」を参照してください。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Parent">
      <summary>オブジェクト ツリーにおけるこの <see cref="T:System.Windows.FrameworkElement" /> の親オブジェクトを取得します。</summary>
      <returns>オブジェクト ツリーでの、このオブジェクトの親オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Resources">
      <summary>ローカルで定義されたリソース ディクショナリを取得します。XAML では、XAML の暗黙的なコレクション構文を使用して、frameworkElement.Resources プロパティ要素の子オブジェクト要素としてリソース項目を設定できます。</summary>
      <returns>ローカルで定義された現在のリソース ディクショナリ。各リソースはキーでアクセスできます。</returns>
    </member>
    <member name="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.Binding)">
      <summary>指定されたバインディング オブジェクトを使用して <see cref="T:System.Windows.FrameworkElement" /> にバインディングをアタッチし、後で使用できるように <see cref="T:System.Windows.Data.BindingExpressionBase" /> を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingExpressionBase" /> オブジェクト。解説を参照してください。</returns>
      <param name="dp">データ バインドされるプロパティの依存関係プロパティ識別子。</param>
      <param name="binding">プロパティに使用するバインディング。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="binding" /> が <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> として指定されていますが、<see cref="P:System.Windows.Data.Binding.Path" /> が空です。または<paramref name="dp" /> または <paramref name="binding" /> パラメーターが null です。</exception>
    </member>
    <member name="E:System.Windows.FrameworkElement.SizeChanged">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> の <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> プロパティまたは <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.Style">
      <summary>レンダリング中にこのオブジェクトに適用される <see cref="T:System.Windows.Style" /> インスタンスを取得または設定します。</summary>
      <returns>適用されるオブジェクトのスタイル (存在する場合)。それ以外の場合は null。既定の構築 <see cref="T:System.Windows.FrameworkElement" /> の既定値が null です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.StyleProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Style" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Style" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Tag">
      <summary>このオブジェクトに関するカスタム情報を格納するために使用できる任意のオブジェクト値を取得または設定します。</summary>
      <returns>任意の値。このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.TagProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Tag" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Tag" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Triggers">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> に対して定義されたアニメーションのトリガーのコレクションを取得します。</summary>
      <returns>このオブジェクトに定義されたアニメーションのトリガーのコレクション。</returns>
    </member>
    <member name="E:System.Windows.FrameworkElement.Unloaded">
      <summary>このオブジェクトがメイン オブジェクト ツリーに接続されていない状態になると発生します。</summary>
    </member>
    <member name="P:System.Windows.FrameworkElement.UseOptimizedManipulationRouting">
      <summary>システムが入力イベントを処理するか、<see cref="T:System.Windows.FrameworkElement" /> が入力イベントを処理するかを示す値を取得または設定します。</summary>
      <returns>システムが入力イベントを処理する場合は true、<see cref="T:System.Windows.FrameworkElement" /> が入力イベントを処理する場合は false。既定値は true です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.UseOptimizedManipulationRoutingProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.UseOptimizedManipulationRouting" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.UseOptimizedManipulationRouting" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.VerticalAlignment">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> が親オブジェクト (パネル コントロールや項目コントロールなど) の一部となる場合に適用される垂直方向の配置の特性を取得または設定します。</summary>
      <returns>垂直方向の配置の設定。既定値は、<see cref="F:System.Windows.VerticalAlignment.Stretch" /> です。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.VerticalAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.FrameworkElement.Width">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> の幅を取得または設定します。</summary>
      <returns>オブジェクトの幅 (ピクセル単位)。既定値は、<see cref="F:System.Double.NaN" /> です。特殊な <see cref="F:System.Double.NaN" /> 値を除いて、この値は 0 以上である必要があります。上限については、「解説」を参照してください。</returns>
    </member>
    <member name="F:System.Windows.FrameworkElement.WidthProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.Width" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.Width" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.FrameworkTemplate">
      <summary>要素の要素ツリーを作成します。</summary>
    </member>
    <member name="M:System.Windows.FrameworkTemplate.#ctor">
      <summary>
        <see cref="T:System.Windows.FrameworkTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.GridLength">
      <summary>
        <see cref="F:System.Windows.GridUnitType.Star" /> 単位型を明示的にサポートする要素の長さを表します。</summary>
    </member>
    <member name="M:System.Windows.GridLength.#ctor(System.Double)">
      <summary>指定した絶対値 (ピクセル単位) を使用して、<see cref="T:System.Windows.GridLength" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="pixels">値として設定される絶対ピクセル数。</param>
    </member>
    <member name="M:System.Windows.GridLength.#ctor(System.Double,System.Windows.GridUnitType)">
      <summary>
        <see cref="T:System.Windows.GridLength" /> 構造体の新しいインスタンスを初期化して、保持する値の種類を指定します。</summary>
      <param name="value">
        <see cref="T:System.Windows.GridLength" /> のこのインスタンスの初期値。</param>
      <param name="type">
        <see cref="T:System.Windows.GridLength" /> のこのインスタンスに保持された <see cref="T:System.Windows.GridUnitType" />。</param>
      <exception cref="T:System.ArgumentException">値が 0 より小さいか、数値ではありません。または型が有効な <see cref="T:System.Windows.GridUnitType" /> ではありません。</exception>
    </member>
    <member name="P:System.Windows.GridLength.Auto">
      <summary>サイズがコンテンツ オブジェクトのサイズ プロパティによって決まる値を保持する <see cref="T:System.Windows.GridLength" /> のインスタンスを取得します。</summary>
      <returns>
        <see cref="P:System.Windows.GridLength.GridUnitType" /> プロパティが <see cref="F:System.Windows.GridUnitType.Auto" /> に設定された <see cref="T:System.Windows.GridLength" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Windows.GridLength.Equals(System.Object)">
      <summary>指定したオブジェクトが現在の <see cref="T:System.Windows.GridLength" /> インスタンスと等しいかどうかを判断します。</summary>
      <returns>指定したオブジェクトが、現在のインスタンスと同じ値および <see cref="T:System.Windows.GridUnitType" /> を持つ場合は true。それ以外の場合は false。</returns>
      <param name="oCompare">現在のインスタンスと比較するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.GridLength.Equals(System.Windows.GridLength)">
      <summary>指定した <see cref="T:System.Windows.GridLength" /> が、現在の <see cref="T:System.Windows.GridLength" /> と等しいかどうかを判断します。</summary>
      <returns>指定した <see cref="T:System.Windows.GridLength" /> が現在のインスタンスと同じ値および <see cref="P:System.Windows.GridLength.GridUnitType" /> を保持している場合は true。それ以外の場合は false。</returns>
      <param name="gridLength">現在のインスタンスと比較する <see cref="T:System.Windows.GridLength" /> 構造体。</param>
    </member>
    <member name="M:System.Windows.GridLength.GetHashCode">
      <summary>
        <see cref="T:System.Windows.GridLength" /> のハッシュ コードを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.GridLength" /> のハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.GridLength.GridUnitType">
      <summary>
        <see cref="T:System.Windows.GridLength" /> の関連付けられている <see cref="T:System.Windows.GridUnitType" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.GridUnitType" /> 値の 1 つ。既定値は、<see cref="F:System.Windows.GridUnitType.Auto" /> です。</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsAbsolute">
      <summary>
        <see cref="T:System.Windows.GridLength" /> がピクセルで表される値を保持するかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.GridLength.GridUnitType" /> プロパティが <see cref="F:System.Windows.GridUnitType.Pixel" /> である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsAuto">
      <summary>サイズがコンテンツ オブジェクトのサイズ プロパティによって決まる値を <see cref="T:System.Windows.GridLength" /> が保持するかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.GridLength.GridUnitType" /> プロパティが <see cref="F:System.Windows.GridUnitType.Auto" /> である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.GridLength.IsStar">
      <summary>
        <see cref="T:System.Windows.GridLength" /> が使用可能なスペースの加重比率で表される値を保持するかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.GridLength.GridUnitType" /> プロパティが <see cref="F:System.Windows.GridUnitType.Star" /> である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.GridLength.op_Equality(System.Windows.GridLength,System.Windows.GridLength)">
      <summary>2 つの <see cref="T:System.Windows.GridLength" /> 構造体を比較して、等しいかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Windows.GridLength" /> の 2 つのインスタンスが同じ値および <see cref="T:System.Windows.GridUnitType" /> を持つ場合は true。それ以外の場合は false。</returns>
      <param name="gl1">比較対象の <see cref="T:System.Windows.GridLength" /> の第 1 インスタンス。</param>
      <param name="gl2">比較対象の <see cref="T:System.Windows.GridLength" /> の第 2 インスタンス。</param>
    </member>
    <member name="M:System.Windows.GridLength.op_Inequality(System.Windows.GridLength,System.Windows.GridLength)">
      <summary>2 つの <see cref="T:System.Windows.GridLength" /> 構造体を比較し、それらが等しくないかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Windows.GridLength" /> の 2 つのインスタンスが同じ値および <see cref="T:System.Windows.GridUnitType" /> を持たない場合は true。それ以外の場合は false。</returns>
      <param name="gl1">比較対象の <see cref="T:System.Windows.GridLength" /> の第 1 インスタンス。</param>
      <param name="gl2">比較対象の <see cref="T:System.Windows.GridLength" /> の第 2 インスタンス。</param>
    </member>
    <member name="M:System.Windows.GridLength.ToString">
      <summary>
        <see cref="T:System.Windows.GridLength" /> の <see cref="T:System.String" /> 表現を返します。</summary>
      <returns>現在の <see cref="T:System.Windows.GridLength" /> 構造体の <see cref="T:System.String" /> 表現。</returns>
    </member>
    <member name="P:System.Windows.GridLength.Value">
      <summary>
        <see cref="T:System.Windows.GridLength" /> の値を表す <see cref="T:System.Double" /> を取得します</summary>
      <returns>現在のインスタンスの値を表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="T:System.Windows.GridUnitType">
      <summary>
        <see cref="T:System.Windows.GridLength" /> オブジェクトが保持している値の種類について説明します。</summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Auto">
      <summary>サイズは、コンテンツ オブジェクトのサイズ プロパティによって決まります。</summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Pixel">
      <summary>値は、ピクセルで表されます。</summary>
    </member>
    <member name="F:System.Windows.GridUnitType.Star">
      <summary>値は、使用可能なスペースの加重比率で表されます。 </summary>
    </member>
    <member name="T:System.Windows.HorizontalAlignment">
      <summary>親要素の割り当てられているレイアウト スロットに対する水平軸上で、要素が表示される位置を示します。</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Left">
      <summary>親要素のレイアウト スロットの左側に配置された要素。</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Center">
      <summary>親要素のレイアウト スロットの中央に配置された要素。</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Right">
      <summary>親要素のレイアウト スロットの右側に配置された要素。</summary>
    </member>
    <member name="F:System.Windows.HorizontalAlignment.Stretch">
      <summary>親要素のレイアウト スロット全体に引き伸ばして配置された要素。</summary>
    </member>
    <member name="T:System.Windows.IApplicationLifetimeAware">
      <summary>アプリケーションの有効期間イベントに対して応答するためにアプリケーション拡張サービスでオプションで実装できるメソッドを定義します。</summary>
    </member>
    <member name="M:System.Windows.IApplicationLifetimeAware.Exited">
      <summary>
        <see cref="E:System.Windows.Application.Exit" /> イベントの発生直後にアプリケーションによって呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.IApplicationLifetimeAware.Exiting">
      <summary>
        <see cref="E:System.Windows.Application.Exit" /> イベントの発生直前にアプリケーションによって呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.IApplicationLifetimeAware.Started">
      <summary>
        <see cref="E:System.Windows.Application.Startup" /> イベントの発生直後にアプリケーションによって呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.IApplicationLifetimeAware.Starting">
      <summary>
        <see cref="E:System.Windows.Application.Startup" /> イベントの発生直前にアプリケーションによって呼び出されます。</summary>
    </member>
    <member name="T:System.Windows.IApplicationService">
      <summary>アプリケーションでサービスを開始および停止できるようにするためにアプリケーション拡張サービスで実装する必要のあるメソッドを定義します。</summary>
    </member>
    <member name="M:System.Windows.IApplicationService.StartService(System.Windows.ApplicationServiceContext)">
      <summary>アプリケーション拡張サービスを初期化するために、アプリケーションによって呼び出されます。</summary>
      <param name="context">アプリケーションの状態に関する情報を提供します。</param>
    </member>
    <member name="M:System.Windows.IApplicationService.StopService">
      <summary>アプリケーション拡張サービスを停止するためにアプリケーションによって呼び出されます。</summary>
    </member>
    <member name="T:System.Windows.Icon">
      <summary>オフライン アプリケーションの識別に使用されるアイコンを表します。</summary>
    </member>
    <member name="M:System.Windows.Icon.#ctor">
      <summary>
        <see cref="T:System.Windows.Icon" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Icon.Size">
      <summary>アイコンのサイズを取得します。</summary>
      <returns>アイコンのサイズ。</returns>
    </member>
    <member name="F:System.Windows.Icon.SizeProperty">
      <summary>
        <see cref="P:System.Windows.Icon.Size" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Icon.Size" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Icon.Source">
      <summary>アイコンの PNG ソース ファイルのパスとファイル名を取得します。</summary>
      <returns>アイコンの PNG ソース ファイルのパス。</returns>
    </member>
    <member name="F:System.Windows.Icon.SourceProperty">
      <summary>
        <see cref="P:System.Windows.Icon.Source" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Icon.Source" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.IconCollection">
      <summary>
        <see cref="T:System.Windows.Icon" /> インスタンスのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.IconCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.IconCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.IDataObject">
      <summary>形式に依存しないデータ転送機構を提供します。</summary>
    </member>
    <member name="M:System.Windows.IDataObject.GetData(System.String)">
      <summary>指定された形式のデータ オブジェクトを取得します。データ形式は文字列で指定します。</summary>
      <returns>指定した形式のデータを含むデータ オブジェクト。指定した形式のデータが使用できない場合は null。</returns>
      <param name="format">取得するデータの形式を指定する文字列。定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスのトピックを参照してください。</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetData(System.String,System.Boolean)">
      <summary>指定した形式のデータ オブジェクトを取得し、オプションで、データを指定した形式に変換します。</summary>
      <returns>指定した形式のデータを含むデータ オブジェクト。指定した形式のデータが使用できない場合は null。</returns>
      <param name="format">取得するデータの形式を指定する文字列。定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスのトピックを参照してください。</param>
      <param name="autoConvert">指定した形式へのデータの自動変換を試行する場合は true。データ形式を変換しない場合は false。このパラメーターが false の場合、データが指定した形式で使用可能であれば、メソッドはデータを指定した形式で返します。データが指定した形式で使用可能でなければ、null を返します。</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetData(System.Type)">
      <summary>データ オブジェクトを指定したデータ形式で取得します。データ形式は <see cref="T:System.Type" /> オブジェクトで指定します。</summary>
      <returns>指定した形式のデータを含むデータ オブジェクト。指定した形式のデータが使用できない場合は null。</returns>
      <param name="format">取得するデータの形式を指定する <see cref="T:System.Type" /> オブジェクト。定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスのトピックを参照してください。</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetDataPresent(System.String)">
      <summary>指定した形式のデータが使用可能かどうかを確認します。または指定した形式にデータを変換できるかどうかを確認します。データ形式は文字列で指定します。</summary>
      <returns>データが指定した形式であるか、またはその形式に変換できる場合は true。それ以外の場合は false。</returns>
      <param name="format">確認対象の形式を指定する文字列。定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスのトピックを参照してください。</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)">
      <summary>データが指定した形式で使用可能かどうか、または指定した形式に変換可能かどうかを確認します。指定した形式のデータが使用可能でない場合、Boolean フラグは、指定した形式にデータを変換できるかどうかを確認するかどうかを示します。</summary>
      <returns>データが指定した形式であるか、またはその形式に変換できる場合は true。それ以外の場合は false。</returns>
      <param name="format">確認対象の形式を指定する文字列。定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスのトピックを参照してください。</param>
      <param name="autoConvert">指定した形式の存在のみを確認する場合は false。該当するデータ オブジェクトに格納されているデータを指定した形式に変換できるかどうかも合わせて確認する場合は true。</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetDataPresent(System.Type)">
      <summary>データが指定した形式で使用可能かどうか、または指定した形式に変換可能かどうかを確認します。データ形式は <see cref="T:System.Type" /> オブジェクトで指定します。</summary>
      <returns>データが指定した形式であるか、またはその形式に変換できる場合は true。それ以外の場合は false。</returns>
      <param name="format">確認対象の形式を指定する <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Windows.IDataObject.GetFormats">
      <summary>このデータ オブジェクト内のデータを保存する形式、または変換後の形式として指定できる形式がすべてリストされます。</summary>
      <returns>文字列の配列。各文字列はこのデータ オブジェクトでサポートされる形式の名前を指定します。</returns>
    </member>
    <member name="M:System.Windows.IDataObject.GetFormats(System.Boolean)">
      <summary>このデータ オブジェクトのデータが格納されるすべての形式のリストを返します。Boolean フラグは、データを自動的に変換できる形式も含めるかどうかを示します。</summary>
      <returns>文字列の配列。各文字列はこのデータ オブジェクトでサポートされる形式の名前を指定します。</returns>
      <param name="autoConvert">このデータ オブジェクトのデータが格納されるすべての形式、およびこのデータの変換先として有効なすべての形式を取得する場合は true。このデータ オブジェクトのデータが格納される形式のみ (データは格納されないが、自動的に変換することは可能な形式は除く) を取得する場合は false。</param>
    </member>
    <member name="M:System.Windows.IDataObject.SetData(System.Object)">
      <summary>指定したデータをこのデータ オブジェクトに格納し、データ形式をソース オブジェクトの型から自動的に変換します。</summary>
      <param name="data">このデータ オブジェクト内に格納するデータ。</param>
    </member>
    <member name="M:System.Windows.IDataObject.SetData(System.String,System.Object)">
      <summary>指定したデータを、1 つ以上の指定したデータ形式を使用して、このデータ オブジェクト内に格納します。データ形式は文字列で指定します。</summary>
      <param name="format">格納するデータの形式を指定する文字列。定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスのトピックを参照してください。</param>
      <param name="data">このデータ オブジェクト内に格納するデータ。</param>
    </member>
    <member name="M:System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)">
      <summary>指定したデータを、1 つ以上の指定したデータ形式を使用して、このデータ オブジェクト内に格納します。このオーバーロードは、データが取得時に別の形式に変換されることがあるかどうかを示す Boolean フラグを含みます。</summary>
      <param name="format">格納するデータの形式を指定する文字列。定義済みのデータ形式のセットについては、<see cref="T:System.Windows.DataFormats" /> クラスのトピックを参照してください。</param>
      <param name="data">このデータ オブジェクト内に格納するデータ。</param>
      <param name="autoConvert">データの取得時に、データを別の形式に変換できるようにする場合は true。変換できないようにする場合は false。</param>
    </member>
    <member name="M:System.Windows.IDataObject.SetData(System.Type,System.Object)">
      <summary>指定したデータを、1 つ以上の指定したデータ形式を使用して、このデータ オブジェクト内に格納します。データ形式は <see cref="T:System.Type" /> クラスで指定します。</summary>
      <param name="format">格納するデータの形式を指定する <see cref="T:System.Type" />。</param>
      <param name="data">このデータ オブジェクト内に格納するデータ。</param>
    </member>
    <member name="T:System.Windows.LayoutCycleException">
      <summary>レイアウト サイクルによってスローされた例外。</summary>
    </member>
    <member name="T:System.Windows.LineStackingStrategy">
      <summary>各行の行ボックスを決定する際に使用する機構を表します。</summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.MaxHeight">
      <summary>スタックの高さは、その行にあるすべてのインライン要素の拡張されたブロック進行状況の表示サイズを収容できる最小値です (これらの要素が適切に配置されている場合)。これは、既定の設定です。</summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.BlockLineHeight">
      <summary>スタックの高さは、ブロック要素の "行の高さ" プロパティの値によって決定されます。</summary>
    </member>
    <member name="F:System.Windows.LineStackingStrategy.BaselineToBaseline">
      <summary>スタックの高さは、<see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> を前の行のベースラインにたすことで決まります。</summary>
    </member>
    <member name="T:System.Windows.MediaFailedRoutedEventArgs">
      <summary>メディアが失敗したイベントのイベント データを提供します。</summary>
    </member>
    <member name="P:System.Windows.MediaFailedRoutedEventArgs.ErrorTrace">
      <summary>メディアが失敗したイベントのトレース情報を取得します。</summary>
      <returns>失敗したメディア イベントのエラー トレース。</returns>
    </member>
    <member name="T:System.Windows.MediaFailedRoutedEventHandler">
      <summary>メディアが失敗したイベントを処理するメソッドを表します。</summary>
      <param name="sender">ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.MessageBox">
      <summary>ユーザーにメッセージを表示し、必要に応じて応答を求めます。</summary>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String)">
      <summary>指定したテキストと [OK] ボタンを含むメッセージ ボックスを表示します。</summary>
      <returns>常に <see cref="F:System.Windows.MessageBoxResult.OK" />。</returns>
      <param name="messageBoxText">表示するメッセージ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageBoxText" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)">
      <summary>指定したテキスト、タイトル バー キャプション、および応答ボタンを表示するメッセージ ボックスを表示します。</summary>
      <returns>メッセージに対するユーザーの応答を示す値。</returns>
      <param name="messageBoxText">表示するメッセージ。</param>
      <param name="caption">メッセージ ボックスのタイトル。</param>
      <param name="button">表示する 1 つ以上のボタンを指定する値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageBoxText" /> が null です。または<paramref name="caption" /> が null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="button" /> が有効な <see cref="T:System.Windows.MessageBoxButton" /> 値ではありません。</exception>
    </member>
    <member name="T:System.Windows.MessageBoxButton">
      <summary>メッセージ ボックスを表示するときに含めるボタンを指定します。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.OK">
      <summary>[OK] ボタンのみを表示します。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxButton.OKCancel">
      <summary>[OK] ボタンと [キャンセル] ボタンを両方を表示します。</summary>
    </member>
    <member name="T:System.Windows.MessageBoxResult">
      <summary>メッセージ ボックスへのユーザーの応答を表します。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.None">
      <summary>現在、この値は使用されません。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.OK">
      <summary>ユーザーが [OK] をクリックしました。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.Cancel">
      <summary>ユーザーが [キャンセル] をクリックしたか、Esc キーを押しました。</summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.Yes">
      <summary>現在、この値は使用されません。 </summary>
    </member>
    <member name="F:System.Windows.MessageBoxResult.No">
      <summary>現在、この値は使用されません。</summary>
    </member>
    <member name="T:System.Windows.NullableBoolConverter">
      <summary>文字列から <see cref="T:System.Nullable`1" /> 型への変換を行います (ジェネリックの <see cref="T:System.Boolean" /> 型の制約を使用)。</summary>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.NullableBoolConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>対象のコンバーターが、指定した型のオブジェクトを <see cref="T:System.Nullable`1" /> 型に変換できるかどうかを確認します (ジェネリックの <see cref="T:System.Boolean" /> 型の制約を使用)。</summary>
      <returns>
        <paramref name="sourceType" /> が <see cref="T:System.String" />、<see cref="T:System.Boolean" />、または <paramref name="sourceType" /> から代入可能な <see cref="T:System.Nullable`1" /> 型 (ジェネリックの <see cref="T:System.Boolean" /> 型の制約を使用) である場合は true。それ以外の場合は false。</returns>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換する元の型。</param>
    </member>
    <member name="M:System.Windows.NullableBoolConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したオブジェクトを <see cref="T:System.Nullable`1" /> 型に変換します (ジェネリックの <see cref="T:System.Boolean" /> 型の制約を使用)。</summary>
      <returns>変換したオブジェクトを表す <see cref="T:System.Nullable`1" /> 型 (ジェネリックの <see cref="T:System.Boolean" /> 型制限を使用)。</returns>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">
        <see cref="T:System.Nullable`1" /> 型に変換するオブジェクト (ジェネリックの <see cref="T:System.Boolean" /> 型の制約を使用)。</param>
      <exception cref="T:System.NotSupportedException">変換に失敗しました。<paramref name="value" /> は、<see cref="T:System.String" />、<see cref="T:System.Boolean" />、または <see cref="T:System.Nullable`1" /> (ジェネリックの <see cref="T:System.Boolean" /> 型制限を使用) ではありません。</exception>
    </member>
    <member name="T:System.Windows.Point">
      <summary>2 次元空間での x 座標と y 座標のペアを表します。特定のプロパティの使用について、論理点を表すこともできます。</summary>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <summary>指定した値を含む <see cref="T:System.Windows.Point" /> 構造体を初期化します。</summary>
      <param name="x">
        <see cref="T:System.Windows.Point" /> 構造体の x 座標の値。</param>
      <param name="y">
        <see cref="T:System.Windows.Point" /> 構造体の y 座標の値。</param>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
      <summary>指定したオブジェクトが <see cref="T:System.Windows.Point" /> であり、この <see cref="T:System.Windows.Point" /> と同じ値が含まれているかどうかを判断します。</summary>
      <returns>
        <paramref name="obj" /> が <see cref="T:System.Windows.Point" /> であり、この <see cref="T:System.Windows.Point" /> と同じ <see cref="P:System.Windows.Point.X" /> 値および <see cref="P:System.Windows.Point.Y" /> 値を含む場合は true。それ以外の場合は false。</returns>
      <param name="o">比較対象のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
      <summary>2 つの <see cref="T:System.Windows.Point" /> 構造体を比較して、等しいかどうかを確認します。</summary>
      <returns>両方の <see cref="T:System.Windows.Point" /> 構造体が、同じ <see cref="P:System.Windows.Point.X" /> 値および <see cref="P:System.Windows.Point.Y" /> 値を含む場合は true。それ以外の場合は false。</returns>
      <param name="value">このインスタンスと比較するポイント。</param>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
      <summary>この <see cref="T:System.Windows.Point" /> のハッシュ コードを返します。</summary>
      <returns>この <see cref="T:System.Windows.Point" /> 構造体のハッシュ コード。</returns>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <summary>2 つの <see cref="T:System.Windows.Point" /> 構造体を比較して、等しいかどうかを確認します。</summary>
      <returns>
        <paramref name="point1" /> および <paramref name="point2" /> の <see cref="P:System.Windows.Point.X" /> 値と <see cref="P:System.Windows.Point.Y" /> 値の両方が等しい場合は true。それ以外の場合は false。</returns>
      <param name="point1">比較する最初の <see cref="T:System.Windows.Point" /> 構造体。</param>
      <param name="point2">比較する 2 番目の <see cref="T:System.Windows.Point" /> 構造体。</param>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <summary>2 つの <see cref="T:System.Windows.Point" /> 構造体を比較し、等しくないかどうかを確認します。</summary>
      <returns>
        <paramref name="point1" /> および <paramref name="point2" /> の <see cref="P:System.Windows.Point.X" /> 値または <see cref="P:System.Windows.Point.Y" /> 値が異なる場合は true。<paramref name="point1" /> および <paramref name="point2" /> の <see cref="P:System.Windows.Point.X" /> 値と <see cref="P:System.Windows.Point.Y" /> 値が同じである場合は false。</returns>
      <param name="point1">比較する最初のポイント。</param>
      <param name="point2">比較する 2 番目のポイント。</param>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>このメンバーの説明については、<see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> のトピックを参照してください。</summary>
      <returns>指定した書式で現在のインスタンスの値を格納する文字列。</returns>
      <param name="format">使用する書式を指定する文字列。またはIFormattable 実装の型に対して定義されている既定の書式を使用する場合は、null。</param>
      <param name="provider">値の書式設定に使用する IFormatProvider。またはオペレーティング システムの現在のロケール設定から数値の書式情報を取得する場合は null。</param>
    </member>
    <member name="M:System.Windows.Point.ToString">
      <summary>この <see cref="T:System.Windows.Point" /> の <see cref="T:System.String" /> 表現を作成します。</summary>
      <returns>この <see cref="T:System.Windows.Point" /> 構造体の <see cref="P:System.Windows.Point.X" /> 値および <see cref="P:System.Windows.Point.Y" /> 値を格納する <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <summary>この <see cref="T:System.Windows.Point" /> の <see cref="T:System.String" /> 表現を作成します。</summary>
      <returns>この <see cref="T:System.Windows.Point" /> 構造体の <see cref="P:System.Windows.Point.X" /> 値および <see cref="P:System.Windows.Point.Y" /> 値を格納する <see cref="T:System.String" />。</returns>
      <param name="provider">カルチャ固有の書式設定情報。</param>
    </member>
    <member name="P:System.Windows.Point.X">
      <summary>この <see cref="T:System.Windows.Point" /> 構造体の <see cref="P:System.Windows.Point.X" /> 座標値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Point" /> 構造体の <see cref="P:System.Windows.Point.X" /> 座標値。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Point.Y">
      <summary>この <see cref="T:System.Windows.Point" /> の <see cref="P:System.Windows.Point.Y" /> 座標値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Point" /> 構造体の <see cref="P:System.Windows.Point.Y" /> 座標値。既定値は 0 です。</returns>
    </member>
    <member name="T:System.Windows.PresentationFrameworkCollection`1">
      <summary>Windows Phone コレクションの共通のコレクション クラスを提供します。</summary>
      <typeparam name="T">制約付きのコレクション実装の型セーフの型制約。</typeparam>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.Add(`0)">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> に項目を追加します。</summary>
      <param name="value">追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.Clear">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> からすべての項目を削除します。</summary>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.Contains(`0)">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> に特定の値が格納されているかどうかを判断します。</summary>
      <returns>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> 内でオブジェクトが見つかった場合は true。それ以外の場合は false。</returns>
      <param name="value">
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> 内で検索するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> の要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。</summary>
      <param name="array">
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> からの要素のコピー先となる 1 次元の <see cref="T:System.Array" />。<see cref="T:System.Array" /> には 0 から始まるインデックスが必要です。</param>
      <param name="index">コピーの開始位置となる、<paramref name="array" /> の 0 から始まるインデックス。</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.CopyTo(`0[],System.Int32)">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> の要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。</summary>
      <param name="array">
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> からの要素のコピー先となる 1 次元の <see cref="T:System.Array" />。<see cref="T:System.Array" /> には 0 から始まるインデックスが必要です。</param>
      <param name="index">コピーの開始位置となる、<paramref name="array" /> の 0 から始まるインデックス。</param>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.Count">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> に格納されている要素の数を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> に格納されている要素の数。</returns>
    </member>
    <member name="F:System.Windows.PresentationFrameworkCollection`1.CountProperty">
      <summary>
        <see cref="P:System.Windows.PresentationFrameworkCollection`1.Count" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.PresentationFrameworkCollection`1.Count" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。</summary>
      <returns>コレクションの反復処理に使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクトを返します。</returns>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.IndexOf(`0)">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> 内での指定した項目のインデックスを調べます。</summary>
      <returns>リスト内で <paramref name="value" /> が見つかった場合は、そのインデックス。それ以外の場合は例外。</returns>
      <param name="value">
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> 内で検索するオブジェクト。</param>
      <exception cref="T:System.ArgumentException">リストにオブジェクトが見つかりませんでした。</exception>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.Insert(System.Int32,`0)">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> の指定したインデックスの位置に項目を挿入します。</summary>
      <param name="index">
        <paramref name="value" /> を挿入する位置の 0 から始まるインデックス。</param>
      <param name="value">
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> に挿入するオブジェクト。</param>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.IsFixedSize">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> が固定サイズかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> が固定サイズの場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.IsReadOnly">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> が読み取り専用かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> が読み取り専用の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.IsSynchronized">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> へのアクセスが同期されている (スレッド セーフである) 場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.Item(System.Int32)">
      <summary>指定したインデックスの位置にある要素を取得または設定します。</summary>
      <returns>指定したインデックスの位置にある要素。</returns>
      <param name="index">取得または設定する要素の 0 から始まるインデックス。</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.Remove(`0)">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> 内で最初に見つかった特定のオブジェクトを削除します。</summary>
      <returns>オブジェクトが削除された場合は true。それ以外の場合は false。</returns>
      <param name="value">
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> から削除するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.RemoveAt(System.Int32)">
      <summary>指定したインデックスにある項目を削除します。</summary>
      <param name="index">削除する項目の 0 から始まるインデックス。</param>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.SyncRoot">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> へのアクセスを同期するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。</summary>
      <returns>コレクションの反復処理に使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクトを返します。</returns>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> に項目を追加します。</summary>
      <returns>新しい要素が挿入された位置。</returns>
      <param name="value">追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> に特定の値が格納されているかどうかを判断します。</summary>
      <returns>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> 内でオブジェクトが見つかった場合は true。それ以外の場合は false。</returns>
      <param name="value">
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> 内で検索するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> 内での指定した項目のインデックスを調べます。</summary>
      <returns>リスト内で <paramref name="value" /> が見つかった場合は、そのインデックス。それ以外の場合は -1。</returns>
      <param name="value">
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> 内で検索するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> の指定したインデックスの位置に項目を挿入します。</summary>
      <param name="index">
        <paramref name="value" /> を挿入する位置の 0 から始まるインデックス。</param>
      <param name="value">
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> に挿入するオブジェクト。</param>
    </member>
    <member name="P:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>指定したインデックスの位置にある要素を取得または設定します。</summary>
      <returns>指定したインデックスの位置にある要素。</returns>
      <param name="index">取得または設定する要素の 0 から始まるインデックス。</param>
    </member>
    <member name="M:System.Windows.PresentationFrameworkCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> 内で最初に見つかった特定のオブジェクトを削除します。</summary>
      <param name="value">
        <see cref="T:System.Windows.PresentationFrameworkCollection`1" /> から削除するオブジェクト。</param>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
      <summary>依存関係プロパティの有効なプロパティ値が変更されたときに呼び出されるコールバックを表します。</summary>
      <param name="d">プロパティの値が変更された <see cref="T:System.Windows.DependencyObject" />。</param>
      <param name="e">このプロパティの有効値に対する変更を追跡するイベントによって発行されるイベント データ。</param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
      <summary>登録時の条件など、依存関係プロパティの動作を定義します。</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <summary>プロパティの既定値を使用して、<see cref="T:System.Windows.PropertyMetadata" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="defaultValue">この <see cref="T:System.Windows.PropertyMetadata" /> が適用されるプロパティの既定値。</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary>プロパティの既定値とコールバック参照を使用して、<see cref="T:System.Windows.PropertyMetadata" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="defaultValue">この <see cref="T:System.Windows.PropertyMetadata" /> が適用されるプロパティの既定値。</param>
      <param name="propertyChangedCallback">プロパティで変更された動作を要求するコールバックの参照。</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary>コールバック参照を使用して、<see cref="T:System.Windows.PropertyMetadata" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyChangedCallback">プロパティで変更された動作を要求するコールバックの参照。</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
      <summary>依存関係プロパティの既定値を取得します。</summary>
      <returns>依存関係プロパティの既定値。</returns>
    </member>
    <member name="T:System.Windows.PropertyPath">
      <summary>プロパティを、別のプロパティまたは所有する型の下位のパスとして記述するためのデータ構造を実装します。プロパティ パスは、オブジェクトへのデータ バインディングと、アニメーションのストーリーボードおよびタイムラインに使用されます。</summary>
    </member>
    <member name="M:System.Windows.PropertyPath.#ctor(System.Object)">
      <summary>
        <see cref="T:System.Windows.PropertyPath" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="parameter">依存関係プロパティ識別子、つまりプロパティ パス文字列。</param>
    </member>
    <member name="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
      <summary>
        <see cref="T:System.Windows.PropertyPath" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path">この <see cref="T:System.Windows.PropertyPath" /> のパス文字列。</param>
      <param name="pathParameters">使用しないでください。解説を参照してください。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pathParameters" /> として長さが 0 よりも大きい配列が指定されました。</exception>
    </member>
    <member name="P:System.Windows.PropertyPath.Path">
      <summary>この <see cref="T:System.Windows.PropertyPath" /> で保持されるパス値を取得します。</summary>
      <returns>この <see cref="T:System.Windows.PropertyPath" /> で保持されているパスの値。</returns>
    </member>
    <member name="T:System.Windows.PropertyPathConverter">
      <summary>
        <see cref="T:System.Windows.PropertyPath" /> 型の型変換をサポートします。</summary>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.PropertyPathConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバーターが、特定の型のオブジェクトを <see cref="T:System.Windows.PropertyPath" /> 型に変換できるかどうかを示す値を返します。</summary>
      <returns>コンバーターが変換を実行できる場合は true。それ以外の場合は false。</returns>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換前の型を表す <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定した値を <see cref="T:System.Windows.PropertyPath" /> 型に変換します。</summary>
      <returns>返された <see cref="T:System.Windows.PropertyPath" />。</returns>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> が文字列ではなく、既存の <see cref="T:System.Windows.PropertyPath" /> ではありません。</exception>
    </member>
    <member name="T:System.Windows.Rect">
      <summary>四角形の幅、高さ、および原点を示します。</summary>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>指定した x 座標、y 座標、幅、および高さを持つ <see cref="T:System.Windows.Rect" /> 構造体を初期化します。</summary>
      <param name="x">四角形の左上隅の x 座標。</param>
      <param name="y">四角形の左上隅の y 座標。</param>
      <param name="width">四角形の幅。</param>
      <param name="height">四角形の高さ。</param>
      <exception cref="T:System.ArgumentException">width または height が 0 未満です。</exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary>指定した 2 つの点をちょうど格納できる大きさを持つ、<see cref="T:System.Windows.Rect" /> 構造体を初期化します。</summary>
      <param name="point1">新しい四角形に格納する必要がある最初の点。</param>
      <param name="point2">新しい四角形に格納する必要がある 2 番目の点。</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <summary>原点とサイズに基づいて <see cref="T:System.Windows.Rect" /> 構造体を初期化します。</summary>
      <param name="location">新しい <see cref="T:System.Windows.Rect" /> の原点。</param>
      <param name="size">新しい <see cref="T:System.Windows.Rect" /> のサイズ。</param>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
      <summary>四角形の底辺の y 軸の値を取得します。</summary>
      <returns>四角形の底辺の y 軸の値。四角形が空の場合、値は <see cref="F:System.Double.NegativeInfinity" /> になります。</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <summary>指定した点が、<see cref="T:System.Windows.Rect" /> で表される四角形に含まれているかどうかを示します。</summary>
      <returns>指定した点が、<see cref="T:System.Windows.Rect" /> で表される四角形に含まれている場合は true。それ以外の場合は false。</returns>
      <param name="point">確認対象の点。</param>
    </member>
    <member name="P:System.Windows.Rect.Empty">
      <summary>位置や領域を持たない四角形を表す特殊な値を取得します。</summary>
      <returns>
        <see cref="F:System.Double.PositiveInfinity" /> の <see cref="P:System.Windows.Rect.X" /> 値および <see cref="P:System.Windows.Rect.Y" /> 値を持ち、<see cref="F:System.Double.NegativeInfinity" /> の <see cref="P:System.Windows.Rect.Width" /> および <see cref="P:System.Windows.Rect.Height" /> 値を持つ空の四角形。</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
      <summary>指定したオブジェクトが、現在の <see cref="T:System.Windows.Rect" /> と等しいかどうかを示します。</summary>
      <returns>
        <paramref name="o" /> が <see cref="T:System.Windows.Rect" /> で、現在の <see cref="T:System.Windows.Rect" /> と同じ x、y、width、height の各値を持つ場合は true。それ以外の場合は false。</returns>
      <param name="o">現在の四角形と比較するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <summary>指定した <see cref="T:System.Windows.Rect" /> が、現在の <see cref="T:System.Windows.Rect" /> と等しいかどうかを示します。</summary>
      <returns>指定した <see cref="T:System.Windows.Rect" /> が、現在の <see cref="T:System.Windows.Rect" /> と同じ x、y、width、height の各プロパティ値を持つ場合は true。それ以外の場合は false。</returns>
      <param name="value">現在の四角形と比較する対象の四角形。</param>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
      <summary>
        <see cref="T:System.Windows.Rect" /> のハッシュ コードを作成します。</summary>
      <returns>現在の <see cref="T:System.Windows.Rect" /> 構造体のハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
      <summary>四角形の高さを取得または設定します。</summary>
      <returns>四角形の高さを表す値。既定値は 0 です。</returns>
      <exception cref="T:System.ArgumentException">0 未満の値が指定されました。</exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <summary>現在の <see cref="T:System.Windows.Rect" /> で表される四角形と指定した <see cref="T:System.Windows.Rect" /> で表される四角形の交差部分を求め、結果を現在の <see cref="T:System.Windows.Rect" /> として保存します。</summary>
      <param name="rect">現在の四角形と交差する四角形。</param>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
      <summary>四角形が <see cref="P:System.Windows.Rect.Empty" /> の四角形かどうかを示す値を取得します。</summary>
      <returns>四角形が <see cref="P:System.Windows.Rect.Empty" /> の四角形である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
      <summary>四角形の左辺の x 軸の値を取得します。</summary>
      <returns>四角形の左辺の x 軸の値。</returns>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <summary>2 つの <see cref="T:System.Windows.Rect" /> 構造体を比較して、等しいかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Windows.Rect" /> 構造体が、同じ x、y、width、height の各プロパティ値を持つ場合は true。それ以外の場合は false。</returns>
      <param name="rect1">最初に比較する四角形。</param>
      <param name="rect2">比較する 2 番目の四角形。</param>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <summary>2 つの <see cref="T:System.Windows.Rect" /> 構造体を比較し、等しくないかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Windows.Rect" /> 構造体が、同じ x、y、width、height の各プロパティ値を持たない場合は true。それ以外の場合は false。</returns>
      <param name="rect1">最初に比較する四角形。</param>
      <param name="rect2">比較する 2 番目の四角形。</param>
    </member>
    <member name="P:System.Windows.Rect.Right">
      <summary>四角形の右辺の x 軸の値を取得します。</summary>
      <returns>四角形の右辺の x 軸の値。</returns>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>このメンバーの説明については、<see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> のトピックを参照してください。</summary>
      <returns>指定した書式で現在のインスタンスの値を格納する文字列。</returns>
      <param name="format">使用する書式を指定する文字列。またはIFormattable 実装の型に対して定義されている既定の書式を使用する場合は、null。</param>
      <param name="provider">値の書式設定に使用する IFormatProvider。またはオペレーティング システムの現在のロケール設定から数値の書式情報を取得する場合は null。</param>
    </member>
    <member name="P:System.Windows.Rect.Top">
      <summary>四角形の上辺の y 軸の位置を取得します。</summary>
      <returns>四角形の上辺の y 軸の位置。</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
      <summary>
        <see cref="T:System.Windows.Rect" /> 構造体の文字列形式を返します。</summary>
      <returns>現在の <see cref="T:System.Windows.Rect" /> 構造体の文字列形式。文字列の形式は、次のとおりです。"<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <summary>指定した書式プロバイダーを使用して、四角形の文字列形式を返します。</summary>
      <returns>指定した書式プロバイダーにより決定される現在の四角形の文字列形式を返します。</returns>
      <param name="provider">カルチャ固有の書式設定情報。</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
      <summary>指定した点をちょうど格納できる大きさになるように、現在の <see cref="T:System.Windows.Rect" /> で表される四角形を拡大します。</summary>
      <param name="point">格納対象の点。</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <summary>指定した四角形をちょうど格納できる大きさになるように、現在の<see cref="T:System.Windows.Rect" /> で表される四角形を拡大します。</summary>
      <param name="rect">格納する四角形。</param>
    </member>
    <member name="P:System.Windows.Rect.Width">
      <summary>四角形の幅を取得または設定します。</summary>
      <returns>四角形の幅を表すピクセル単位の値。既定値は 0 です。</returns>
      <exception cref="T:System.ArgumentException">0 未満の値が指定されました。</exception>
    </member>
    <member name="P:System.Windows.Rect.X">
      <summary>四角形の左辺の x 軸の値を取得または設定します。</summary>
      <returns>四角形の左辺の x 軸の値。この値は座標空間内のピクセルとして解釈されます。</returns>
    </member>
    <member name="P:System.Windows.Rect.Y">
      <summary>四角形の上辺の y 軸の値を取得または設定します。</summary>
      <returns>四角形の上辺の y 軸の値。この値は座標空間内のピクセルとして解釈されます。</returns>
    </member>
    <member name="T:System.Windows.ResourceDictionary">
      <summary>XAML アプリケーションのコンポーネントで使用されるリソースを含むディクショナリを提供します。</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.#ctor">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" /> に項目を追加します。</summary>
      <param name="key">追加する項目の文字列キー。</param>
      <param name="value">追加する項目値。</param>
      <exception cref="T:System.NotSupportedException">値として null を追加しようとしました。</exception>
      <exception cref="T:System.ArgumentException">この <see cref="T:System.Windows.ResourceDictionary" /> に既に存在する <paramref name="key" /> を持つアイテムを追加しようとしました。または文字列ではない <paramref name="key" /> を使用しようとしました。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Add(System.String,System.Object)">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" /> に項目を追加します。</summary>
      <param name="key">追加する項目の文字列キー。</param>
      <param name="value">追加する項目値。</param>
      <exception cref="T:System.NotSupportedException">値として null を追加しようとしました。</exception>
      <exception cref="T:System.ArgumentException">この <see cref="T:System.Windows.ResourceDictionary" /> に既に存在する <paramref name="key" /> を持つアイテムを追加しようとしました。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Clear">
      <summary>この <see cref="T:System.Windows.ResourceDictionary" /> からすべての項目を削除します。</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Contains(System.Object)">
      <summary>指定したキーが <see cref="T:System.Windows.ResourceDictionary" /> に存在するかどうか示す値を返します。</summary>
      <returns>そのキーを持つ項目が <see cref="T:System.Windows.ResourceDictionary" /> に存在する場合は true。それ以外の場合は false。</returns>
      <param name="key">
        <see cref="T:System.Windows.ResourceDictionary" /> 内で確認するキー。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" /> の要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。</summary>
      <param name="array">
        <see cref="T:System.Windows.ResourceDictionary" /> から要素がコピーされる 1 次元の <see cref="T:System.Array" />。<see cref="T:System.Array" /> には 0 から始まるインデックスが必要です。</param>
      <param name="index">コピーの開始位置となる、<paramref name="array" /> の 0 から始まるインデックス。</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Count">
      <summary>コレクションに含まれている要素の数を取得します。</summary>
      <returns>コレクションに格納されている要素の数。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.GetEnumerator">
      <summary>非ジェネリック コレクションに対する単純な反復処理をサポートする列挙子を公開します。</summary>
      <returns>コレクションの反復処理に使用できる列挙子。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.IsFixedSize">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" /> が固定サイズかどうかを示す値を取得します。</summary>
      <returns>常に false を返します。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.IsReadOnly">
      <summary>コレクションが読み取り専用であるかどうかを示す値を取得します。</summary>
      <returns>常に false を返します。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Item(System.Object)">
      <summary>指定したインデックスの位置にある要素を取得します。</summary>
      <returns>存在する場合はオブジェクト。それ以外の場合は null。</returns>
      <param name="key">取得する要素のキー。</param>
      <exception cref="T:System.NotImplementedException">インデクサーを使用して値を設定しようとしました。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="key" /> は文字列ではありません。</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Keys">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" /> のキーを保持している <see cref="T:System.Collections.ICollection" /> オブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Windows.ResourceDictionary" /> にあるすべてのキーの <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.MergedDictionaries">
      <summary>マージされたディクショナリ内のさまざまなリソース ディクショナリを構成する、<see cref="T:System.Windows.ResourceDictionary" /> ディクショナリのコレクションを取得します。</summary>
      <returns>結合したディクショナリにあるさまざまなリソース ディクショナリを構成する <see cref="T:System.Windows.ResourceDictionary" /> ディクショナリのコレクション。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Remove(System.Object)">
      <summary>特定の項目を <see cref="T:System.Windows.ResourceDictionary" /> から削除します。</summary>
      <param name="key">削除する項目の文字列キー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が null です。</exception>
      <exception cref="T:System.ArgumentException">文字列ではない <paramref name="key" /> を使用しようとしました。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.Remove(System.String)">
      <summary>特定の項目を <see cref="T:System.Windows.ResourceDictionary" /> から削除します。</summary>
      <param name="key">削除する項目の文字列キー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Source">
      <summary>結合したリソース ディクショナリのソースの場所を示す URI を取得または設定します。</summary>
      <returns>結合したリソース ディクショナリのソースの場所を示す URI。これは、通常、コンパイル済み DLL 内の XAML リソースを参照するパス、または XAP 内の Loose XAML ファイルへの相対参照です。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.ICollection`1.Add(`0)" /> のトピックを参照してください。</summary>
      <param name="item">コレクションに追加するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#Clear">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.ICollection`1.Clear" /> のトピックを参照してください。</summary>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.ICollection`1.Contains(`0)" /> のトピックを参照してください。</summary>
      <returns>コレクション内で <paramref name="item" /> が見つかった場合は true。それ以外の場合は false。</returns>
      <param name="item">コレクション内で検索するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.Object,System.Object}[],System.Int32)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" /> のトピックを参照してください。</summary>
      <param name="array">コレクション要素のコピー先となる 1 次元配列。配列のインデックスは 0 から始まっている必要があります。</param>
      <param name="arrayIndex">コピーの開始位置となる、<paramref name="array" /> の 0 から始まるインデックス。</param>
      <exception cref="T:System.NotImplementedException">この実装ではあらゆる場合にスローされます。</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#Count">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.Generic.ICollection`1.Count" /> のトピックを参照してください。</summary>
      <returns>コレクションに格納されている要素の数。</returns>
      <exception cref="T:System.NotImplementedException">この実装ではあらゆる場合にスローされます。</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" /> のトピックを参照してください。</summary>
      <returns>コレクションが読み取り専用の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.ICollection`1.Remove(`0)" /> のトピックを参照してください。</summary>
      <returns>
        <paramref name="item" /> がコレクションから削除された場合は true。それ以外の場合は false。また、このメソッドは、元のコレクション内で <paramref name="item" /> が見つからない場合にも false を返します。</returns>
      <param name="item">コレクションから削除するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Add(System.Object,System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" /> のトピックを参照してください。</summary>
      <param name="key">追加する要素のキーとして使用するオブジェクト。</param>
      <param name="value">追加する要素の値として使用するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#ContainsKey(System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" /> のトピックを参照してください。</summary>
      <returns>指定したキーを持つ要素がディクショナリに含まれている場合は true。それ以外の場合は false。</returns>
      <param name="key">ディクショナリ内で検索するキー。</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Item(System.Object)">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.Generic.IDictionary`2.Item(`0)" /> のトピックを参照してください。</summary>
      <returns>指定したキーを持つ要素。</returns>
      <param name="key">取得または設定する要素のキー。</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.Generic.IDictionary`2.Keys" /> のトピックを参照してください。</summary>
      <returns>ディクショナリ内の要素のキーを格納するコレクション。</returns>
      <exception cref="T:System.NotImplementedException">常にスローされます。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Remove(System.Object)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.IDictionary`2.Remove(`0)" /> のトピックを参照してください。</summary>
      <returns>要素がコレクションから正常に削除された場合は true。それ以外の場合は false。また、このメソッドは、元のコレクション内で <paramref name="key" /> が見つからない場合にも false を返します。</returns>
      <param name="key">削除する要素のキー。</param>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#TryGetValue(System.Object,System.Object@)">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)" /> のトピックを参照してください。</summary>
      <returns>指定したキーを持つオブジェクトがディクショナリに含まれている場合は true。それ以外の場合は false。</returns>
      <param name="key">取得する値を持つキー。</param>
      <param name="value">このメソッドから制御が戻ったときに、キーが見つかった場合は、指定したキーに関連付けられている値。それ以外の場合は、値パラメーターの型に対する既定の値。このパラメーターは初期化されずに渡されます。</param>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.Generic.IDictionary`2.Values" /> のトピックを参照してください。</summary>
      <returns>ディクショナリ内の要素の値を格納するコレクション。</returns>
      <exception cref="T:System.NotImplementedException">常にスローされます。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" /> のトピックを参照してください。</summary>
      <returns>コレクションの反復処理に使用できる列挙子。</returns>
      <exception cref="T:System.NotImplementedException">常にスローされます。</exception>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.ICollection.IsSynchronized" /> のトピックを参照してください。</summary>
      <returns>常に false を返します。</returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot">
      <summary>このメンバーの説明については、<see cref="P:System.Collections.ICollection.SyncRoot" /> のトピックを参照してください。</summary>
      <returns>常に null が返されます。<see cref="T:System.Windows.ResourceDictionary" /> は同期されません。</returns>
      <exception cref="T:System.NotImplementedException">常にスローされます。</exception>
    </member>
    <member name="M:System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>このメンバーの説明については、<see cref="M:System.Collections.IEnumerable.GetEnumerator" /> のトピックを参照してください。</summary>
      <returns>コレクションの反復処理に使用できる列挙子。 </returns>
    </member>
    <member name="P:System.Windows.ResourceDictionary.Values">
      <summary>
        <see cref="T:System.Windows.ResourceDictionary" /> の値を格納している <see cref="T:System.Collections.ICollection" /> オブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Windows.ResourceDictionary" /> にあるすべての値の <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="T:System.Windows.RoutedEvent">
      <summary>Windows Phone イベント システムへのルーティング イベントを表します。</summary>
    </member>
    <member name="M:System.Windows.RoutedEvent.ToString">
      <summary>ルーティング イベントの文字列形式を返します。</summary>
      <returns>ルーティングされたイベントの名前。</returns>
    </member>
    <member name="T:System.Windows.RoutedEventArgs">
      <summary>ルーティング イベントに関連付けられている状態情報とイベント データを格納します。</summary>
    </member>
    <member name="M:System.Windows.RoutedEventArgs.#ctor">
      <summary>
        <see cref="T:System.Windows.RoutedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.RoutedEventArgs.OriginalSource">
      <summary>イベントを発生させたオブジェクトへの参照を取得します。</summary>
      <returns>イベントを発生させたオブジェクト。</returns>
    </member>
    <member name="T:System.Windows.RoutedEventHandler">
      <summary>ルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。 </param>
    </member>
    <member name="T:System.Windows.RoutedPropertyChangedEventArgs`1">
      <summary>特定のルーティング イベントからの報告に従って、変更されたプロパティの前の値と現在の値など、値の変更に関するデータを依存関係プロパティに提供します。</summary>
      <typeparam name="T">変更された依存関係プロパティの型。</typeparam>
    </member>
    <member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)">
      <summary>指定された古い値と新しい値を使用して、<see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="oldValue">イベントが発生する前の、プロパティの以前の値。</param>
      <param name="newValue">イベント発生時のプロパティの現在値。</param>
    </member>
    <member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue">
      <summary>プロパティ変更イベントで報告されたプロパティの新しい値を取得します。</summary>
      <returns>ジェネリック値。<see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> の実際の実装では、このプロパティのジェネリック型は実装の制約型に置き換えられます。</returns>
    </member>
    <member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue">
      <summary>プロパティ変更イベントで報告されたプロパティの以前の値を取得します。</summary>
      <returns>ジェネリック値。<see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> の実際の実装では、このプロパティのジェネリック型は実装の制約型に置き換えられます。</returns>
    </member>
    <member name="T:System.Windows.RoutedPropertyChangedEventHandler`1">
      <summary>プロパティ値の変更を追跡するさまざまなルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。個別のイベント定義では、<see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> は特定の型に制約され、制約の型パラメーターはデリゲート実装の型パラメーター制約と一致します。</param>
      <typeparam name="T">値の変更が報告されるプロパティ値の型。</typeparam>
    </member>
    <member name="T:System.Windows.Setter">
      <summary>
        <see cref="T:System.Windows.Style" /> のプロパティに値を適用します。</summary>
    </member>
    <member name="M:System.Windows.Setter.#ctor">
      <summary>
        <see cref="T:System.Windows.Setter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object)">
      <summary>指定したプロパティと値を使用して、<see cref="T:System.Windows.Setter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="property">値を適用する依存関係プロパティ。</param>
      <param name="value">プロパティに適用する値。</param>
    </member>
    <member name="P:System.Windows.Setter.Property">
      <summary>
        <see cref="P:System.Windows.Setter.Value" /> を適用するプロパティを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Setter.Value" /> の適用対象の <see cref="T:System.Windows.DependencyProperty" />。既定値は null です。</returns>
    </member>
    <member name="P:System.Windows.Setter.Value">
      <summary>
        <see cref="T:System.Windows.Setter" /> で指定されたプロパティに適用する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Setter" /> で指定されたプロパティに適用する値。</returns>
    </member>
    <member name="T:System.Windows.SetterBase">
      <summary>値 setter の基本クラスを表します。</summary>
    </member>
    <member name="P:System.Windows.SetterBase.IsSealed">
      <summary>このオブジェクトが不変の状態であるかどうかを示す値を取得します。</summary>
      <returns>このオブジェクトが不変の状態である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:System.Windows.SetterBaseCollection">
      <summary>
        <see cref="T:System.Windows.SetterBase" /> から継承するオブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.SetterBaseCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.SetterBaseCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.SetterBaseCollection.IsSealed">
      <summary>コレクションが読み取り専用状態であるかどうかを示す値を取得します。</summary>
      <returns>このオブジェクトが読み取り専用状態である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:System.Windows.Size">
      <summary>オブジェクトの幅と高さを記述します。</summary>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.Size" /> 構造体の新しいインスタンスを初期化し、<paramref name="width" /> および <paramref name="height" /> の初期値を割り当てます。</summary>
      <param name="width">
        <see cref="T:System.Windows.Size" /> のインスタンスの初期幅。</param>
      <param name="height">
        <see cref="T:System.Windows.Size" /> のインスタンスの初期高さ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="width" /> または <paramref name="height" /> が 0 より小さいです。</exception>
    </member>
    <member name="P:System.Windows.Size.Empty">
      <summary>静的で空の <see cref="T:System.Windows.Size" /> を表す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Size" /> の空のインスタンス。</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
      <summary>オブジェクトが <see cref="T:System.Windows.Size" /> のインスタンスと等しいかどうかを比較します。</summary>
      <returns>サイズが等しい場合は true。それ以外の場合は false。</returns>
      <param name="o">比較する <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
      <summary>値が <see cref="T:System.Windows.Size" /> のインスタンスと等しいかどうかを比較します。</summary>
      <returns>
        <see cref="T:System.Windows.Size" /> のインスタンスが等しい場合は true。それ以外の場合は false。</returns>
      <param name="value">
        <see cref="T:System.Windows.Size" /> の現在のインスタンスと比較するサイズ。</param>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
      <summary>
        <see cref="T:System.Windows.Size" /> のこのインスタンスのハッシュ コードを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Size" /> のインスタンスのハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Size.Height">
      <summary>
        <see cref="T:System.Windows.Size" /> のこのインスタンスの高さを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Size" /> のこのインスタンスの <see cref="P:System.Windows.Size.Height" /> (ピクセル単位)。既定値は 0 です。この値を負にすることはできません。</returns>
      <exception cref="T:System.ArgumentException">0 未満の値が指定されました。</exception>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
      <summary>
        <see cref="T:System.Windows.Size" /> のこのインスタンスが <see cref="P:System.Windows.Size.Empty" /> かどうかを示す値を取得します。</summary>
      <returns>Size のこのインスタンスが <see cref="P:System.Windows.Size.Empty" /> である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Size" /> の 2 つのインスタンスを比較し、等しいかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Windows.Size" /> の 2 つのインスタンスが等しい場合は true。それ以外の場合は false。</returns>
      <param name="size1">比較対象の <see cref="T:System.Windows.Size" /> の第 1 インスタンス。</param>
      <param name="size2">比較対象の <see cref="T:System.Windows.Size" /> の第 2 インスタンス。</param>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Size" /> の 2 つのインスタンスを比較し、等しくないかどうかを判断します。</summary>
      <returns>
        <see cref="T:System.Windows.Size" /> のインスタンスが等しくない場合は true。それ以外の場合は false。</returns>
      <param name="size1">比較対象の <see cref="T:System.Windows.Size" /> の第 1 インスタンス。</param>
      <param name="size2">比較対象の <see cref="T:System.Windows.Size" /> の第 2 インスタンス。</param>
    </member>
    <member name="M:System.Windows.Size.ToString">
      <summary>この <see cref="T:System.Windows.Size" /> の文字列形式を返します。</summary>
      <returns>この <see cref="T:System.Windows.Size" /> の文字列形式。</returns>
    </member>
    <member name="P:System.Windows.Size.Width">
      <summary>
        <see cref="T:System.Windows.Size" /> のこのインスタンスの幅を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Size" /> のこのインスタンスの <see cref="P:System.Windows.Size.Width" /> (ピクセル単位)。既定値は 0 です。この値を負にすることはできません。</returns>
      <exception cref="T:System.ArgumentException">0 未満の値が指定されました。</exception>
    </member>
    <member name="T:System.Windows.SizeChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> イベントに関連するデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.NewSize">
      <summary>サイズ変更を報告するオブジェクトの新しいサイズを取得します。</summary>
      <returns>新しいサイズ。<see cref="T:System.Windows.Size" /> 構造体は新しい高さと幅を格納します。</returns>
    </member>
    <member name="P:System.Windows.SizeChangedEventArgs.PreviousSize">
      <summary>サイズ変更を報告するオブジェクトの以前のサイズを取得します。</summary>
      <returns>前のサイズ。 </returns>
    </member>
    <member name="T:System.Windows.SizeChangedEventHandler">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.StartupEventArgs">
      <summary>
        <see cref="E:System.Windows.Application.Startup" /> イベントのイベント データを格納します。</summary>
    </member>
    <member name="P:System.Windows.StartupEventArgs.InitParams">
      <summary>Windows Phone アプリの HTML 初期化の一環として渡された初期化パラメーターを取得します。</summary>
      <returns>キー文字列および値文字列が含まれたディクショナリである初期化パラメーターのセット。</returns>
    </member>
    <member name="T:System.Windows.StartupEventHandler">
      <summary>
        <see cref="E:System.Windows.Application.Startup" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Style">
      <summary>型のインスタンスの間で共有できるプロパティの set アクセス操作子を格納します。</summary>
    </member>
    <member name="M:System.Windows.Style.#ctor">
      <summary>
        <see cref="T:System.Windows.Style" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Style.#ctor(System.Type)">
      <summary>指定した <see cref="T:System.Type" /> で使用する <see cref="T:System.Windows.Style" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="targetType">スタイルの適用対象の型。</param>
    </member>
    <member name="P:System.Windows.Style.BasedOn">
      <summary>現在のスタイルの基になる定義済みのスタイルを取得または設定します。</summary>
      <returns>現在のスタイルの基になる定義済みのスタイル。既定値は null です。</returns>
    </member>
    <member name="P:System.Windows.Style.IsSealed">
      <summary>スタイルが読み取り専用で変更できないかどうかを示す値を取得します。</summary>
      <returns>スタイルが読み取り専用の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Style.Seal">
      <summary>
        <see cref="P:System.Windows.Style.TargetType" /> プロパティまたは <see cref="P:System.Windows.Style.Setters" /> コレクション内の <see cref="T:System.Windows.Setter" /> を変更できないように、このスタイルをロックします。</summary>
    </member>
    <member name="P:System.Windows.Style.Setters">
      <summary>
        <see cref="T:System.Windows.Setter" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Setter" /> オブジェクトのコレクション。既定値は空のコレクションです。</returns>
    </member>
    <member name="P:System.Windows.Style.TargetType">
      <summary>このスタイルの対象となる型を取得または設定します。</summary>
      <returns>スタイルを適用するオブジェクトの型。</returns>
    </member>
    <member name="T:System.Windows.StyleTypedPropertyAttribute">
      <summary>クラス定義に適用される属性を表し、<see cref="T:System.Windows.Style" /> 型のプロパティの <see cref="P:System.Windows.Style.TargetType" /> を報告します。</summary>
    </member>
    <member name="M:System.Windows.StyleTypedPropertyAttribute.#ctor">
      <summary>
        <see cref="T:System.Windows.StyleTypedPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.StyleTypedPropertyAttribute.Property">
      <summary>
        <see cref="T:System.Windows.Style" /> 型のプロパティの名前を取得または設定します。</summary>
      <returns>プロパティの名前。</returns>
    </member>
    <member name="P:System.Windows.StyleTypedPropertyAttribute.StyleTargetType">
      <summary>この属性が指定している <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property" /> の <see cref="P:System.Windows.Style.TargetType" /> を取得または設定します。</summary>
      <returns>この属性が指定している <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property" /> の <see cref="P:System.Windows.Style.TargetType" />。</returns>
    </member>
    <member name="T:System.Windows.SystemColors">
      <summary>システムの表示要素に対応したシステム カラー、システム ブラシ、およびシステム リソース キーを格納します。</summary>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveBorderColor">
      <summary>アクティブなウィンドウの境界線の色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>アクティブなウィンドウの境界線の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionColor">
      <summary>アクティブなウィンドウのタイトル バーの背景色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ActiveCaptionTextColor">
      <summary>アクティブなウィンドウのタイトル バーのテキストの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>アクティブなウィンドウのタイトル バーの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.AppWorkspaceColor">
      <summary>アプリケーション作業領域の色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>アプリケーション作業領域の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlColor">
      <summary>3 次元表示要素の表面の色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>3 次元表示要素の表面の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkColor">
      <summary>3 次元表示要素の影の色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>3 次元表示要素の影の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlDarkDarkColor">
      <summary>3 次元表示要素の暗い影の色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>3 次元表示要素の暗い影の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightColor">
      <summary>3 次元表示要素の明るい色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>3 次元表示要素の明るい色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlLightLightColor">
      <summary>3 次元表示要素の強調表示色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>3 次元表示要素の強調表示色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ControlTextColor">
      <summary>3 次元表示要素のテキストの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>3 次元表示要素のテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.DesktopColor">
      <summary>デスクトップの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>デスクトップの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.GrayTextColor">
      <summary>無効なテキストの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>無効なテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightColor">
      <summary>選択した項目の背景色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>選択した項目の背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.HighlightTextColor">
      <summary>選択した項目のテキストの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>選択した項目のテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveBorderColor">
      <summary>アクティブでないウィンドウの境界線の色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>アクティブでないウィンドウの境界線の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionColor">
      <summary>アクティブでないウィンドウのタイトル バーの背景色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InactiveCaptionTextColor">
      <summary>アクティブでないウィンドウのタイトル バーのテキストの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>アクティブでないウィンドウのタイトル バーのテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoColor">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> コントロールの背景色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> コントロールの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.InfoTextColor">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> コントロールのテキストの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> コントロールのテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuColor">
      <summary>メニューの背景の色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>メニューの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.MenuTextColor">
      <summary>メニューのテキストの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>メニューのテキストの色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.ScrollBarColor">
      <summary>スクロール バーの背景色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>スクロール バーの背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowColor">
      <summary>ウィンドウのクライアント領域の背景色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>ウィンドウのクライアント領域の背景色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowFrameColor">
      <summary>ウィンドウの枠の色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>ウィンドウ枠の色。</returns>
    </member>
    <member name="P:System.Windows.SystemColors.WindowTextColor">
      <summary>ウィンドウのクライアント領域のテキストの色を表す <see cref="T:System.Windows.Media.Color" /> 構造体を取得します。</summary>
      <returns>ウィンドウのクライアント領域のテキストの色。</returns>
    </member>
    <member name="T:System.Windows.SystemParameters">
      <summary>システム設定を照会するために使用できるプロパティを格納します。</summary>
    </member>
    <member name="P:System.Windows.SystemParameters.HighContrast">
      <summary>クライアント コンピューターがハイコントラスト モードであるかどうか示す値を取得します。</summary>
      <returns>クライアント コンピューターがハイコントラスト モードである場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:System.Windows.TemplateBindingExpression">
      <summary>テンプレートのバインドをサポートします。</summary>
    </member>
    <member name="T:System.Windows.TemplatePartAttribute">
      <summary>コントロール テンプレートに使用される名前付きパーツの型を識別するためにクラス定義に適用される属性を表します。</summary>
    </member>
    <member name="M:System.Windows.TemplatePartAttribute.#ctor">
      <summary>
        <see cref="T:System.Windows.TemplatePartAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.TemplatePartAttribute.Name">
      <summary>テンプレート パーツのオブジェクト モデル名を報告する文字列を取得または設定します。</summary>
      <returns>テンプレートでテンプレート パーツの名前として使用される文字列。</returns>
    </member>
    <member name="P:System.Windows.TemplatePartAttribute.Type">
      <summary>テンプレート パーツの <see cref="T:System.Type" /> を報告する文字列を取得または設定します。</summary>
      <returns>テンプレート パーツの型を報告する <see cref="T:System.Type" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.TemplateVisualStateAttribute">
      <summary>コントロールが取ることのできる状態と、そのコントロールの <see cref="T:System.Windows.Controls.ControlTemplate" /> に <see cref="T:System.Windows.VisualState" /> を追加できることを指定します。</summary>
    </member>
    <member name="M:System.Windows.TemplateVisualStateAttribute.#ctor">
      <summary>
        <see cref="T:System.Windows.TemplateVisualStateAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.TemplateVisualStateAttribute.GroupName">
      <summary>状態が属するグループの名前を取得または設定します。</summary>
      <returns>状態が属するグループの名前。</returns>
    </member>
    <member name="P:System.Windows.TemplateVisualStateAttribute.Name">
      <summary>コントロールが取ることのできる状態の名前を取得または設定します。</summary>
      <returns>コントロールが取ることのできる状態の名前。</returns>
    </member>
    <member name="T:System.Windows.TextAlignment">
      <summary>テキストが中央揃え、左揃え、右揃えのいずれであるかを指定します。</summary>
    </member>
    <member name="F:System.Windows.TextAlignment.Center">
      <summary>テキストはコンテナー内で中央揃えで配置されます。</summary>
    </member>
    <member name="F:System.Windows.TextAlignment.Left">
      <summary>テキストはコンテナーの左端に揃えて配置されます。</summary>
    </member>
    <member name="F:System.Windows.TextAlignment.Right">
      <summary>テキストはコンテナーの右端に揃えて配置されます。</summary>
    </member>
    <member name="F:System.Windows.TextAlignment.Justify">
      <summary>テキストはコンテナー内で両端揃えで配置されます。</summary>
    </member>
    <member name="T:System.Windows.TextDecorationCollection">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> プロパティと <see cref="P:System.Windows.Documents.Inline.TextDecorations" /> プロパティの値を指定します。</summary>
    </member>
    <member name="T:System.Windows.TextDecorations">
      <summary>一連の定義済みの文字装飾を実装します。</summary>
    </member>
    <member name="P:System.Windows.TextDecorations.Underline">
      <summary>下線の文字装飾を指定します。</summary>
      <returns>下線の文字装飾を表す <see cref="T:System.Windows.TextDecorationCollection" />。</returns>
    </member>
    <member name="T:System.Windows.TextTrimming">
      <summary>テキストを格納しているボックスの幅にテキストが収まりきらない場合に、テキストをトリミングする方法を示します。</summary>
    </member>
    <member name="F:System.Windows.TextTrimming.None">
      <summary>テキストはトリミングされません。</summary>
    </member>
    <member name="F:System.Windows.TextTrimming.WordEllipsis">
      <summary>テキストは単語境界でトリミングされます。省略記号 (...) が残りのテキストの代わりに描画されます。</summary>
    </member>
    <member name="T:System.Windows.TextWrapping">
      <summary>コンテナーの端に達したときにテキストを折り返すかどうかを指定します。</summary>
    </member>
    <member name="F:System.Windows.TextWrapping.NoWrap">
      <summary>行の折り返しは行われません。</summary>
    </member>
    <member name="F:System.Windows.TextWrapping.Wrap">
      <summary>テキスト行が長すぎてコンテナーの利用可能な幅に収まらない場合は、改行が行われます。スクロールできない固定幅のコンテナーのテキスト行に非常に長い単語が表示されている場合など、標準の改行アルゴリズムで改行の挿入位置を判断できない場合でも改行されます。</summary>
    </member>
    <member name="T:System.Windows.Thickness">
      <summary>四角形の枠の太さを示します。4 つの <see cref="T:System.Double" /> 値は、それぞれ四角形の 4 つの辺 (<see cref="P:System.Windows.Thickness.Left" />、<see cref="P:System.Windows.Thickness.Top" />、<see cref="P:System.Windows.Thickness.Right" />、<see cref="P:System.Windows.Thickness.Bottom" />) を示します。</summary>
    </member>
    <member name="M:System.Windows.Thickness.#ctor(System.Double)">
      <summary>各辺に均一な長さを指定して <see cref="T:System.Windows.Thickness" /> 構造体を初期化します。</summary>
      <param name="uniformLength">外接する四角形の 4 つの辺すべてに均一に適用される長さ。</param>
    </member>
    <member name="M:System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>四角形の各辺に対して特定の長さ (<see cref="T:System.Double" /> として指定) が適用される <see cref="T:System.Windows.Thickness" /> 構造体を初期化します。</summary>
      <param name="left">四角形の左辺の太さ。</param>
      <param name="top">四角形の上辺の太さ。</param>
      <param name="right">四角形の右辺の太さ。</param>
      <param name="bottom">四角形の底辺の太さ。</param>
    </member>
    <member name="P:System.Windows.Thickness.Bottom">
      <summary>外接する四角形の底辺の幅 (ピクセル単位) を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Thickness" /> のインスタンスについて、外接する四角形の底辺の幅 (ピクセル単位) を表す <see cref="T:System.Double" />。既定値は 0 です。</returns>
    </member>
    <member name="M:System.Windows.Thickness.Equals(System.Object)">
      <summary>この <see cref="T:System.Windows.Thickness" /> 構造体を別の <see cref="T:System.Object" /> と比較して、等しいかどうかを確認します。</summary>
      <returns>2 つのオブジェクトが同じである場合は true、異なる場合は false。</returns>
      <param name="obj">比較対象のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Thickness.Equals(System.Windows.Thickness)">
      <summary>この <see cref="T:System.Windows.Thickness" /> 構造体を別の <see cref="T:System.Windows.Thickness" /> 構造体と比較して、等しいかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Windows.Thickness" /> の 2 つのインスタンスが等しい場合は true。それ以外の場合は false。</returns>
      <param name="thickness">等しいかどうかを比較する <see cref="T:System.Windows.Thickness" /> のインスタンス。</param>
    </member>
    <member name="M:System.Windows.Thickness.GetHashCode">
      <summary>構造体のハッシュ コードを返します。</summary>
      <returns>
        <see cref="T:System.Windows.Thickness" /> のこのインスタンスのハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Thickness.Left">
      <summary>外接する四角形の左辺の幅 (ピクセル単位) を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Thickness" /> のインスタンスについて、外接する四角形の左辺の幅 (ピクセル単位) を表す <see cref="T:System.Double" />。既定値は 0 です。</returns>
    </member>
    <member name="M:System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)">
      <summary>2 つの <see cref="T:System.Windows.Thickness" /> 構造体の値を比較して、等しいかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Windows.Thickness" /> の 2 つのインスタンスが等しい場合は true。それ以外の場合は false。</returns>
      <param name="t1">比較対象の第 1 構造体。</param>
      <param name="t2">比較対象の、もう一方の構造体。</param>
    </member>
    <member name="M:System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)">
      <summary>2 つの <see cref="T:System.Windows.Thickness" /> 構造体を比較し、等しくないかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Windows.Thickness" /> の 2 つのインスタンスが等しくない場合は true。それ以外の場合は false。</returns>
      <param name="t1">比較対象の第 1 構造体。</param>
      <param name="t2">比較対象の、もう一方の構造体。</param>
    </member>
    <member name="P:System.Windows.Thickness.Right">
      <summary>外接する四角形の右辺の幅 (ピクセル単位) を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Thickness" /> のインスタンスについて、外接する四角形の右辺の幅 (ピクセル単位) を表す <see cref="T:System.Double" />。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Thickness.Top">
      <summary>外接する四角形の上辺の幅 (ピクセル単位) を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Thickness" /> のインスタンスについて、外接する四角形の上辺の幅 (ピクセル単位) を表す <see cref="T:System.Double" />。既定値は 0 です。</returns>
    </member>
    <member name="M:System.Windows.Thickness.ToString">
      <summary>
        <see cref="T:System.Windows.Thickness" /> 構造体の文字列表現を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Thickness" /> 値を表す <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Windows.TriggerAction">
      <summary>
        <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> の基本クラスとして機能します。</summary>
    </member>
    <member name="T:System.Windows.TriggerActionCollection">
      <summary>
        <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.TriggerActionCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.TriggerActionCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.TriggerBase">
      <summary>
        <see cref="T:System.Windows.EventTrigger" /> の基本クラスとして機能します。</summary>
    </member>
    <member name="T:System.Windows.TriggerCollection">
      <summary>
        <see cref="T:System.Windows.EventTrigger" /> オブジェクトのコレクションを表します。 </summary>
    </member>
    <member name="T:System.Windows.UIElement">
      <summary>
        <see cref="T:System.Windows.UIElement" /> は、視覚的な外観を備え、基本的な入力を処理できる、ほとんどのオブジェクトの基本クラスです。</summary>
    </member>
    <member name="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
      <summary>指定したルーティング イベントのルーティング イベント ハンドラーを、現在の要素のハンドラー コレクションに追加します。イベント ルート上の他の要素により既に処理済みとしてマークされているルーティング イベントに対し、指定したハンドラーが呼び出されるようにするには、<paramref name="handledEventsToo" /> を true に指定します。</summary>
      <param name="routedEvent">処理するルーティング イベントの識別子。</param>
      <param name="handler">ハンドラー実装への参照。</param>
      <param name="handledEventsToo">イベント データ内でルーティング イベントが処理済みとしてマークされている場合に呼び出されるようにハンドラーを登録する場合は true。ルーティング イベントが既に処理済みとしてマークされている場合はハンドラーを呼び出さないという既定の条件を使用してハンドラーを登録する場合は false。既定値は false です。ルーティング イベントの再処理を日常的に要求しないでください。詳細については、「解説」を参照してください。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routedEvent" /> または <paramref name=" handler" /> が null<paramref name="." /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="routedEvent" /> が、サポートされているルーティング イベントを表していません。または<paramref name="handler" /> が、サポートされているデリゲートを実装していません。</exception>
      <exception cref="T:System.NotImplementedException">現在のプラットフォーム バリエーションではサポートされていないイベントのハンドラーを追加しようとしました。</exception>
    </member>
    <member name="P:System.Windows.UIElement.AllowDrop">
      <summary>この <see cref="T:System.Windows.UIElement" /> をドラッグ アンド ドロップ操作の対象として使用できるかどうかを判断する値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.UIElement" /> をドラッグ アンド ドロップ操作の対象として使用できる場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.UIElement.AllowDropProperty">
      <summary>
        <see cref="P:System.Windows.UIElement.AllowDrop" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.UIElement.AllowDrop" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.UIElement.Arrange(System.Windows.Rect)">
      <summary>子オブジェクトを配置し、<see cref="T:System.Windows.UIElement" /> のサイズを決定します。子要素に対してカスタム レイアウトを実装する親オブジェクトは、それらのレイアウトのオーバーライド実装からこのメソッドを呼び出し、レイアウトを再帰的に更新する必要があります。</summary>
      <param name="finalRect">親がレイアウトの子に対して計算する最終的なサイズ。<see cref="T:System.Windows.Rect" /> 値を指定します。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="finalRect" /> に <see cref="F:System.Double.NaN" /> または無限値が含まれていました。解説を参照してください。</exception>
    </member>
    <member name="P:System.Windows.UIElement.CacheMode">
      <summary>レンダリングされたコンテンツを可能な場合にキャッシュするように指示する値を取得または設定します。</summary>
      <returns>レンダリングされたコンテンツを可能な場合にキャッシュするように指示する値。GPU (Graphics Processing Unit) がある場合、<see cref="T:System.Windows.Media.CacheMode" /> の値を指定すると、<see cref="P:System.Windows.UIElement.RenderTransform" /> および <see cref="P:System.Windows.UIElement.Opacity" /> からのレンダリング処理が GPU で実行されます。既定値は null で、キャッシュ構成モードを有効にしません。</returns>
    </member>
    <member name="F:System.Windows.UIElement.CacheModeProperty">
      <summary>
        <see cref="P:System.Windows.UIElement.CacheMode" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.UIElement.CacheMode" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.UIElement.CaptureMouse">
      <summary>
        <see cref="T:System.Windows.UIElement" /> にタッチ キャプチャを設定します。</summary>
      <returns>オブジェクトがタッチ キャプチャを保持している場合は true、それ以外の場合は false を返します。</returns>
    </member>
    <member name="P:System.Windows.UIElement.Clip">
      <summary>
        <see cref="T:System.Windows.UIElement" /> のコンテンツのアウトラインの定義に使用する <see cref="T:System.Windows.Media.Geometry" /> を取得または設定します。</summary>
      <returns>クリッピング領域のサイズ設定に使用するジオメトリ。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.UIElement.ClipProperty">
      <summary>
        <see cref="P:System.Windows.UIElement.Clip" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.UIElement.Clip" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.UIElement.DesiredSize">
      <summary>レイアウト処理の測定パスの実行中にこの <see cref="T:System.Windows.UIElement" /> が計算したサイズを取得します。</summary>
      <returns>レイアウト処理の測定パスの実行中にこの <see cref="T:System.Windows.UIElement" /> が計算したサイズ。</returns>
    </member>
    <member name="E:System.Windows.UIElement.DoubleTap">
      <summary>DoubleTap ジェスチャがこの <see cref="T:System.Windows.UIElement" /> 上にある間にコミットされたときに発生します。Windows Phone でのジェスチャの使用方法については、「[c79a8c3d-2e5b-4ca4-b9d5-f470420c232d]」を参照してください。</summary>
    </member>
    <member name="F:System.Windows.UIElement.DoubleTapEvent">
      <summary>
        <see cref="E:System.Windows.UIElement.DoubleTap" /> ルーティング イベントを識別します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.DoubleTap" /> ルーティング イベントの識別子。</returns>
    </member>
    <member name="E:System.Windows.UIElement.GotFocus">
      <summary>
        <see cref="T:System.Windows.UIElement" /> がフォーカスを受け取ったときに発生します。</summary>
    </member>
    <member name="E:System.Windows.UIElement.Hold">
      <summary>Hold ジェスチャがこの <see cref="T:System.Windows.UIElement" /> 上にある間にコミットされたときに発生します。Windows Phone でのジェスチャの使用方法については、「[c79a8c3d-2e5b-4ca4-b9d5-f470420c232d]」を参照してください。</summary>
    </member>
    <member name="F:System.Windows.UIElement.HoldEvent">
      <summary>
        <see cref="E:System.Windows.UIElement.Hold" /> ルーティング イベントを識別します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.Hold" /> ルーティング イベントの識別子。</returns>
    </member>
    <member name="M:System.Windows.UIElement.InvalidateArrange">
      <summary>
        <see cref="T:System.Windows.UIElement" /> の配置状態 (レイアウト) を無効にします。無効にした後、<see cref="T:System.Windows.UIElement" /> のレイアウトが更新されます。更新は非同期で行われます。</summary>
    </member>
    <member name="M:System.Windows.UIElement.InvalidateMeasure">
      <summary>
        <see cref="T:System.Windows.UIElement" /> の測定状態 (レイアウト) を無効にします。</summary>
    </member>
    <member name="P:System.Windows.UIElement.IsHitTestVisible">
      <summary>この <see cref="T:System.Windows.UIElement" /> に含まれる領域が、ヒット テストに対して true 値を返すことができるかどうかを示す値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.UIElement" /> に含まれる領域をヒット テストに使用できる場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="F:System.Windows.UIElement.IsHitTestVisibleProperty">
      <summary>
        <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="E:System.Windows.UIElement.KeyDown">
      <summary>
        <see cref="T:System.Windows.UIElement" /> にフォーカスがあるときにキーボード キーが押されると発生します。</summary>
    </member>
    <member name="F:System.Windows.UIElement.KeyDownEvent">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> ルーティング イベントを識別します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.KeyDown" /> ルーティング イベントの識別子。</returns>
    </member>
    <member name="E:System.Windows.UIElement.KeyUp">
      <summary>
        <see cref="T:System.Windows.UIElement" /> にフォーカスがあるときにキーボード キーが離されると発生します。</summary>
    </member>
    <member name="F:System.Windows.UIElement.KeyUpEvent">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyUp" /> ルーティング イベントを識別します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.KeyUp" /> ルーティング イベントの識別子。</returns>
    </member>
    <member name="E:System.Windows.UIElement.LostFocus">
      <summary>
        <see cref="T:System.Windows.UIElement" /> がフォーカスを失ったときに発生します。</summary>
    </member>
    <member name="E:System.Windows.UIElement.LostMouseCapture">
      <summary>
        <see cref="T:System.Windows.UIElement" /> でタッチのキャプチャを失ったときに発生します。</summary>
    </member>
    <member name="E:System.Windows.UIElement.ManipulationCompleted">
      <summary>
        <see cref="T:System.Windows.UIElement" /> の操作および慣性による処理が完了すると発生します。 操作方法については、「[c79a8c3d-2e5b-4ca4-b9d5-f470420c232d]」を参照してください。</summary>
    </member>
    <member name="F:System.Windows.UIElement.ManipulationCompletedEvent">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> ルーティング イベントを識別します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> ルーティング イベントの識別子。</returns>
    </member>
    <member name="E:System.Windows.UIElement.ManipulationDelta">
      <summary>操作中に入力デバイスが位置を変更したときに発生します。 操作方法については、「[c79a8c3d-2e5b-4ca4-b9d5-f470420c232d]」を参照してください。</summary>
    </member>
    <member name="F:System.Windows.UIElement.ManipulationDeltaEvent">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationDelta" /> ルーティング イベントを識別します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.ManipulationDelta" /> ルーティング イベントの識別子。</returns>
    </member>
    <member name="E:System.Windows.UIElement.ManipulationStarted">
      <summary>入力デバイスで <see cref="T:System.Windows.UIElement" /> の操作を開始すると発生します。 操作方法については、「[c79a8c3d-2e5b-4ca4-b9d5-f470420c232d]」を参照してください。</summary>
    </member>
    <member name="F:System.Windows.UIElement.ManipulationStartedEvent">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationStarted" /> ルーティング イベントを識別します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.ManipulationStarted" /> ルーティング イベントの識別子。</returns>
    </member>
    <member name="M:System.Windows.UIElement.Measure(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.UIElement" /> の <see cref="P:System.Windows.UIElement.DesiredSize" /> を更新します。通常、レイアウトの子のカスタム レイアウトを実装するオブジェクトは、独自の <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /> 実装からこのメソッドを呼び出し、レイアウトを再帰的に更新します。</summary>
      <param name="availableSize">親が子オブジェクトを割り当てることができる、使用可能な領域。子オブジェクトは、使用可能な領域よりも広い領域を要求できます。その特定のコンテナーでスクロールまたはその他のサイズ変更動作を使用できる場合は、要求されたサイズが受け入れられることがあります。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="availableSize" /> に <see cref="F:System.Double.NaN" /> 値が含まれていました。解説を参照してください。</exception>
    </member>
    <member name="E:System.Windows.UIElement.MouseEnter">
      <summary>
        <see cref="T:System.Windows.UIElement" /> の境界領域内で画面のタップが発生したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.UIElement.MouseLeave">
      <summary>
        <see cref="T:System.Windows.UIElement" /> の境界領域外でタッチ イベントが発生したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.UIElement.MouseLeftButtonDown">
      <summary>
        <see cref="T:System.Windows.UIElement" /> がタップされたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.UIElement.MouseLeftButtonDownEvent">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> ルーティング イベントを識別します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> ルーティング イベントの識別子。</returns>
    </member>
    <member name="E:System.Windows.UIElement.MouseLeftButtonUp">
      <summary>
        <see cref="T:System.Windows.UIElement" /> から指を離したときに (つまり、<see cref="T:System.Windows.UIElement" /> タッチ キャプチャを保持している間) 発生します。</summary>
    </member>
    <member name="F:System.Windows.UIElement.MouseLeftButtonUpEvent">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> ルーティング イベントを識別します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> ルーティング イベントの識別子。</returns>
    </member>
    <member name="E:System.Windows.UIElement.MouseMove">
      <summary>画面上で指の座標位置が <see cref="T:System.Windows.UIElement" /> をタッチしているときに (つまり、<see cref="T:System.Windows.UIElement" /> がタッチ キャプチャを保持している間) 発生します。</summary>
    </member>
    <member name="E:System.Windows.UIElement.MouseWheel">
      <summary>マウス ポインターが <see cref="T:System.Windows.UIElement" /> 上にあるとき、または <see cref="T:System.Windows.UIElement" /> にフォーカスがあるときに、ユーザーがマウス ホイールを回転させると発生します。</summary>
    </member>
    <member name="M:System.Windows.UIElement.OnCreateAutomationPeer">
      <summary>派生クラスで実装された場合、Windows Phone オートメーション インフラストラクチャの、クラス固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装を返します。</summary>
      <returns>返されるクラス固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> サブクラス。</returns>
    </member>
    <member name="P:System.Windows.UIElement.Opacity">
      <summary>オブジェクトの不透明度を取得または設定します。</summary>
      <returns>不透明率を表す 0 ～ 1.0 の値。1.0 は完全な不透明を表し、0 は透明を表します。既定値は 1.0 です。</returns>
    </member>
    <member name="P:System.Windows.UIElement.OpacityMask">
      <summary>このオブジェクトの領域の不透明度を変更する場合に使用するブラシを取得または設定します。</summary>
      <returns>このオブジェクトに適用される不透明度を表すブラシ。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.UIElement.OpacityMaskProperty">
      <summary>
        <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.UIElement.Clip" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.UIElement.OpacityProperty">
      <summary>
        <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.UIElement.Projection">
      <summary>
        <see cref="T:System.Windows.UIElement" /> のレンダリング時に適用されるパースペクティブ射影 (3-D 効果) を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> のレンダリング時に適用されるパースペクティブ射影。既定値は null (パースペクティブは適用されない) です。</returns>
    </member>
    <member name="F:System.Windows.UIElement.ProjectionProperty">
      <summary>
        <see cref="P:System.Windows.UIElement.Projection" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.UIElement.Projection" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.UIElement.ReleaseMouseCapture">
      <summary>
        <see cref="T:System.Windows.UIElement" /> からタッチ キャプチャを削除します。この呼び出しの後には、通常、タッチ キャプチャを保持しているオブジェクトがなくなります。</summary>
    </member>
    <member name="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
      <summary>指定したルーティング イベント ハンドラーをこの <see cref="T:System.Windows.UIElement" /> から削除します。</summary>
      <param name="routedEvent">ハンドラーがアタッチされているルーティング イベントの識別子。</param>
      <param name="handler">この <see cref="T:System.Windows.UIElement" /> のイベント ハンドラー コレクションから削除する特定のハンドラー実装。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="routedEvent" /> または <paramref name=" handler" /> が null<paramref name="." /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="routedEvent" /> が、サポートされているルーティング イベントを表していません。または<paramref name="handler" /> が、サポートされているデリゲートを実装していません。</exception>
      <exception cref="T:System.NotImplementedException">現在のプラットフォーム バリエーションではサポートされていないイベントのハンドラーを削除しようとしました。</exception>
    </member>
    <member name="P:System.Windows.UIElement.RenderSize">
      <summary>
        <see cref="T:System.Windows.UIElement" /> の最終的な描画サイズを取得します。</summary>
      <returns>このオブジェクトの描画サイズ。既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.UIElement.RenderTransform">
      <summary>
        <see cref="T:System.Windows.UIElement" /> の描画位置に影響する変換情報を取得または設定します。</summary>
      <returns>目的の描画変換の詳細を記述します。既定値は null です。</returns>
    </member>
    <member name="P:System.Windows.UIElement.RenderTransformOrigin">
      <summary>
        <see cref="P:System.Windows.UIElement.RenderTransform" /> によって宣言された任意の描画変換の、<see cref="T:System.Windows.UIElement" /> の境界に対する原点を取得または設定します。</summary>
      <returns>描画変換の原点。既定値は値 0,0 の点です。</returns>
    </member>
    <member name="F:System.Windows.UIElement.RenderTransformOriginProperty">
      <summary>
        <see cref="P:System.Windows.UIElement.RenderTransformOrigin" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.UIElement.RenderTransformOrigin" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.UIElement.RenderTransformProperty">
      <summary>
        <see cref="P:System.Windows.UIElement.RenderTransform" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.UIElement.RenderTransform" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="E:System.Windows.UIElement.Tap">
      <summary>Tap ジェスチャがこの <see cref="T:System.Windows.UIElement" /> 上にある間にコミットされたときに発生します。Windows Phone でのジェスチャの使用方法については、「[c79a8c3d-2e5b-4ca4-b9d5-f470420c232d]」を参照してください。</summary>
    </member>
    <member name="F:System.Windows.UIElement.TapEvent">
      <summary>
        <see cref="E:System.Windows.UIElement.Tap" /> ルーティング イベントを識別します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.Tap" /> ルーティング イベントの識別子。</returns>
    </member>
    <member name="E:System.Windows.UIElement.TextInput">
      <summary>デバイスに依存しない方法で UI 要素がテキストを取得すると発生します。</summary>
    </member>
    <member name="F:System.Windows.UIElement.TextInputEvent">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInput" /> ルーティング イベントを識別します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.TextInput" /> ルーティング イベントの識別子。</returns>
    </member>
    <member name="E:System.Windows.UIElement.TextInputStart">
      <summary>デバイスに依存しない方法で UI 要素が最初にテキストを取得すると発生します。</summary>
    </member>
    <member name="F:System.Windows.UIElement.TextInputStartEvent">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInputStart" /> ルーティング イベントを識別します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.TextInputStart" /> ルーティング イベントの識別子。</returns>
    </member>
    <member name="E:System.Windows.UIElement.TextInputUpdate">
      <summary>入力方式エディター (IME) を使用してテキストが引き続き作成されるときに発生します。</summary>
    </member>
    <member name="F:System.Windows.UIElement.TextInputUpdateEvent">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInputUpdate" /> ルーティング イベントを識別します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.TextInputUpdate" /> ルーティング イベントの識別子。</returns>
    </member>
    <member name="M:System.Windows.UIElement.TransformToVisual(System.Windows.UIElement)">
      <summary>
        <see cref="T:System.Windows.UIElement" /> から指定したオブジェクトに座標を変換するために使用できる変換オブジェクトを返します。</summary>
      <returns>オブジェクトとしての変換情報。このオブジェクトで <see cref="M:System.Windows.Media.GeneralTransform.Transform(System.Windows.Point)" /> を呼び出して、実際の変換結果を取得します。</returns>
      <param name="visual">変換の取得を目的として現在のオブジェクトと比較するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.UIElement.UpdateLayout">
      <summary>
        <see cref="T:System.Windows.UIElement" /> の子オブジェクトのすべての位置がレイアウトに対して適切に更新されるようにします。</summary>
    </member>
    <member name="P:System.Windows.UIElement.UseLayoutRounding">
      <summary>オブジェクトとそのビジュアル サブツリーの描画で、描画をピクセル単位に揃える丸め処理を使用するかどうかを決定する値を取得または設定します。</summary>
      <returns>描画とレイアウトでピクセル単位に揃えるレイアウトの丸め処理を使用する場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="F:System.Windows.UIElement.UseLayoutRoundingProperty">
      <summary>
        <see cref="P:System.Windows.UIElement.UseLayoutRounding" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.UIElement.UseLayoutRounding" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.UIElement.Visibility">
      <summary>
        <see cref="T:System.Windows.UIElement" /> の可視性を取得または設定します。表示されない <see cref="T:System.Windows.UIElement" /> は描画されず、レイアウトに対して必要サイズも伝達されません。</summary>
      <returns>列挙体の値。既定値は <see cref="F:System.Windows.Visibility.Visible" /> です。</returns>
    </member>
    <member name="F:System.Windows.UIElement.VisibilityProperty">
      <summary>
        <see cref="P:System.Windows.UIElement.Visibility" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.UIElement.Visibility" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.VerticalAlignment">
      <summary>親のレイアウト スロット内での子要素の縦方向の配置方法または拡大方法を表します。</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Top">
      <summary>要素は親のレイアウト スロットの上端に揃えて配置されます。</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Center">
      <summary>要素は親のレイアウト スロットの中央に揃えて配置されます。</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Bottom">
      <summary>要素を、親のレイアウト スロットの下端に揃えて配置します。</summary>
    </member>
    <member name="F:System.Windows.VerticalAlignment.Stretch">
      <summary>要素は親要素のレイアウト スロット全体に引き伸ばして配置されます。</summary>
    </member>
    <member name="T:System.Windows.Visibility">
      <summary>要素の表示状態を指定します。</summary>
    </member>
    <member name="F:System.Windows.Visibility.Visible">
      <summary>要素を表示します。</summary>
    </member>
    <member name="F:System.Windows.Visibility.Collapsed">
      <summary>要素を表示しません。また、その要素の領域もレイアウト内に予約しません。</summary>
    </member>
    <member name="T:System.Windows.VisualState">
      <summary>コントロールが特定の状態のときの外観を表します。</summary>
    </member>
    <member name="M:System.Windows.VisualState.#ctor">
      <summary>
        <see cref="T:System.Windows.VisualState" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.VisualState.Name">
      <summary>
        <see cref="T:System.Windows.VisualState" /> の名前を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.VisualState" /> の名前。</returns>
    </member>
    <member name="P:System.Windows.VisualState.Storyboard">
      <summary>コントロールが <see cref="T:System.Windows.VisualState" /> で表される状態のときに、コントロールの外観を定義する <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得または設定します。</summary>
      <returns>コントロールが <see cref="T:System.Windows.VisualState" /> で表される状態のときに、コントロールの外観を定義する Storyboard。</returns>
    </member>
    <member name="T:System.Windows.VisualStateChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> イベントと <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanged" /> イベントにデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.VisualStateChangedEventArgs.#ctor">
      <summary>
        <see cref="T:System.Windows.VisualStateChangedEventArgs" /> クラスの新しいインスタンスを初期化します。 </summary>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.Control">
      <summary>状態を遷移している <see cref="T:System.Windows.Controls.Control" /> を取得します。</summary>
      <returns>状態が遷移している <see cref="T:System.Windows.Controls.Control" />。</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.NewState">
      <summary>
        <see cref="T:System.Windows.Controls.Control" /> の遷移先または遷移後の状態を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Control" /> の遷移先または遷移後の状態。</returns>
    </member>
    <member name="P:System.Windows.VisualStateChangedEventArgs.OldState">
      <summary>
        <see cref="T:System.Windows.Controls.Control" /> の遷移元または遷移前の状態を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Control" /> の遷移元または遷移前の状態。</returns>
    </member>
    <member name="T:System.Windows.VisualStateGroup">
      <summary>同時には指定できない <see cref="T:System.Windows.VisualState" /> オブジェクト、および別の状態に遷移するために使用する <see cref="T:System.Windows.VisualTransition" /> オブジェクトを格納します。</summary>
    </member>
    <member name="M:System.Windows.VisualStateGroup.#ctor">
      <summary>
        <see cref="T:System.Windows.VisualStateGroup" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.VisualStateGroup.CurrentState">
      <summary>正常に終了した <see cref="M:System.Windows.VisualStateManager.GoToState(System.Windows.Controls.Control,System.String,System.Boolean)" /> メソッドの呼び出しから、最後に設定された <see cref="T:System.Windows.VisualState" /> を取得します。</summary>
      <returns>正常に終了した <see cref="M:System.Windows.VisualStateManager.GoToState(System.Windows.Controls.Control,System.String,System.Boolean)" /> メソッドの呼び出しからの最後に設定された <see cref="T:System.Windows.VisualState" />。</returns>
    </member>
    <member name="E:System.Windows.VisualStateGroup.CurrentStateChanged">
      <summary>コントロールが別の状態に遷移した後に発生します。</summary>
    </member>
    <member name="E:System.Windows.VisualStateGroup.CurrentStateChanging">
      <summary>コントロールが別の状態への遷移を開始したときに発生します。</summary>
    </member>
    <member name="P:System.Windows.VisualStateGroup.Name">
      <summary>
        <see cref="T:System.Windows.VisualStateGroup" /> の名前を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.VisualStateGroup" /> の名前。</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.States">
      <summary>一度に 1 つしか選択できない <see cref="T:System.Windows.VisualState" /> オブジェクトのコレクションを取得します。</summary>
      <returns>一度に 1 つしか選択できない <see cref="T:System.Windows.VisualState" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Windows.VisualStateGroup.Transitions">
      <summary>
        <see cref="T:System.Windows.VisualTransition" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.VisualTransition" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="T:System.Windows.VisualStateManager">
      <summary>コントロールの状態を遷移させるための状態とロジックを管理します。</summary>
    </member>
    <member name="M:System.Windows.VisualStateManager.#ctor">
      <summary>
        <see cref="T:System.Windows.VisualStateManager" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.VisualStateManager.CustomVisualStateManager">
      <summary>コントロールの状態を遷移する <see cref="T:System.Windows.VisualStateManager" /> を取得または設定します。</summary>
      <returns>コントロールの状態が推移する <see cref="T:System.Windows.VisualStateManager" />。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty">
      <summary>
        <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)">
      <summary>
        <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 添付プロパティの値を取得します。</summary>
      <returns>コントロールの状態が推移する <see cref="T:System.Windows.VisualStateManager" />。</returns>
      <param name="obj">
        <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> の取得元の要素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)">
      <summary>VisualStateManager.VisualStateGroups 添付プロパティの値を取得します。</summary>
      <returns>指定したオブジェクトに関連付けられた <see cref="T:System.Windows.VisualStateGroup" /> オブジェクトのコレクション。</returns>
      <param name="obj">VisualStateManager.VisualStateGroups の取得元の要素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToState(System.Windows.Controls.Control,System.String,System.Boolean)">
      <summary>コントロールを 2 つの状態の間で遷移させます。</summary>
      <returns>コントロールが新しい状態に正常に遷移した場合は true。それ以外の場合は false。</returns>
      <param name="control">状態を遷移するコントロール。</param>
      <param name="stateName">遷移先の状態。</param>
      <param name="useTransitions">
        <see cref="T:System.Windows.VisualTransition" /> を使用して状態を遷移する場合は true。それ以外の場合は false。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> が null です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateName" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.Controls.Control,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)">
      <summary>コントロールの状態を遷移させます。</summary>
      <returns>コントロールが新しい状態に正常に遷移した場合は true。それ以外の場合は false。</returns>
      <param name="control">状態を遷移するコントロール。</param>
      <param name="templateRoot">コントロールの <see cref="T:System.Windows.Controls.ControlTemplate" /> のルート要素。</param>
      <param name="stateName">遷移先の状態の名前。</param>
      <param name="group">状態が属する <see cref="T:System.Windows.VisualStateGroup" />。</param>
      <param name="state">遷移先の状態の表現。</param>
      <param name="useTransitions">
        <see cref="T:System.Windows.VisualTransition" /> を使用して状態を遷移する場合は true。それ以外の場合は false。</param>
    </member>
    <member name="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.Controls.Control)">
      <summary>指定された <see cref="T:System.Windows.VisualStateGroup" /> で <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanged" /> イベントを発生させます。</summary>
      <param name="stateGroup">
        <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> イベントを発生させるオブジェクト</param>
      <param name="oldState">コントロールの遷移元の状態。</param>
      <param name="newState">コントロールの遷移先の状態。</param>
      <param name="control">状態が遷移したコントロール。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroup" /> が null です。または<paramref name="newState" /> が null です。または<paramref name="control" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.Controls.Control)">
      <summary>指定された <see cref="T:System.Windows.VisualStateGroup" /> で <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> イベントを発生させます。</summary>
      <param name="stateGroup">
        <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> イベントを発生させるオブジェクト</param>
      <param name="oldState">コントロールの遷移元の状態。</param>
      <param name="newState">コントロールの遷移先の状態。</param>
      <param name="control">状態が遷移しているコントロール。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stateGroup" /> が null です。または<paramref name="newState" /> が null です。または<paramref name="control" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)">
      <summary>
        <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 添付プロパティの値を設定します。</summary>
      <param name="obj">プロパティを設定する対象のオブジェクト。</param>
      <param name="value">コントロールの状態が推移する <see cref="T:System.Windows.VisualStateManager" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> が null です。</exception>
    </member>
    <member name="T:System.Windows.VisualTransition">
      <summary>コントロールの状態が遷移するときに発生する視覚的な動作を表します。</summary>
    </member>
    <member name="M:System.Windows.VisualTransition.#ctor">
      <summary>
        <see cref="T:System.Windows.VisualTransition" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.VisualTransition.From">
      <summary>遷移元の <see cref="T:System.Windows.VisualState" /> の名前を取得または設定します。</summary>
      <returns>遷移元の <see cref="T:System.Windows.VisualState" /> の名前。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.GeneratedDuration">
      <summary>状態の遷移に必要な時間を取得または設定します。</summary>
      <returns>状態の遷移に必要な時間。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.GeneratedEasingFunction">
      <summary>生成されたアニメーションに適用されるイージング関数を取得または設定します。</summary>
      <returns>生成されたアニメーションに適用される <see cref="T:System.Windows.Media.Animation.IEasingFunction" />。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.Storyboard">
      <summary>遷移が行われたときに発生する <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得または設定します。</summary>
      <returns>遷移が行われたときに発生する <see cref="T:System.Windows.Media.Animation.Storyboard" />。</returns>
    </member>
    <member name="P:System.Windows.VisualTransition.To">
      <summary>遷移先の <see cref="T:System.Windows.VisualState" /> の名前を取得または設定します。</summary>
      <returns>遷移先の <see cref="T:System.Windows.VisualState" /> の名前。</returns>
    </member>
    <member name="T:System.Windows.Automation.AutomationElementIdentifiers">
      <summary>UI オートメーション プロバイダーおよび UI オートメーション クライアントによってオートメーション プロパティ識別子として使用される値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.AcceleratorKeyProperty">
      <summary>ショートカット キー (アクセラレータ キー) のオートメーション プロパティを識別します。ショートカット キー プロパティの値は、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.AccessKeyProperty">
      <summary>アクセス キーのオートメーション プロパティを識別します。アクセス キー プロパティの値は、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.AutomationIdProperty">
      <summary>オートメーション要素の識別子のオートメーション プロパティを識別します。オートメーション要素の識別子の値は、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.BoundingRectangleProperty">
      <summary>外接する四角形のオートメーション プロパティを識別します。外接する四角形のプロパティの値は、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.ClassNameProperty">
      <summary>クラス名のオートメーション プロパティを識別します。クラス名プロパティの値は、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.ClickablePointProperty">
      <summary>クリック可能なポイントのオートメーション プロパティを識別します。有効なクリック可能なポイントのプロパティの値は、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.ControlTypeProperty">
      <summary>コントロール型のオートメーション プロパティを識別します。コントロール型プロパティの値は、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.HasKeyboardFocusProperty">
      <summary>キーボード フォーカスのオートメーション プロパティを識別します。キーボード フォーカスの状態は、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.HelpTextProperty">
      <summary>ヘルプ テキストのオートメーション プロパティを識別します。ヘルプ テキスト プロパティの値は、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsContentElementProperty">
      <summary>コンテンツ要素判別オートメーション プロパティを識別します。コンテンツ要素のステータスは、エンド ユーザーにとって有用なコンテンツが要素に含まれているかどうかを示します。現在のステータスは、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsControlElementProperty">
      <summary>コントロール要素判別オートメーション プロパティを識別します。コントロール要素のステータスは、操作できるユーザー インターフェイス コンポーネントが要素に含まれているかどうかを示します。現在のステータスは、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsEnabledProperty">
      <summary>有効な項目の判別オートメーション プロパティを識別します。有効化のステータスは、オートメーション ピアによって参照された項目が有効であるかどうかを示します。現在のステータスは、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsKeyboardFocusableProperty">
      <summary>キーボード フォーカスの取得可能性判別オートメーション プロパティを識別します。キーボード フォーカスのステータスは、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsOffscreenProperty">
      <summary>オフスクリーン判別オートメーション プロパティを識別します。オフスクリーン ステータスは、オートメーション ピアによって参照された項目が画面から外れているかどうかを示します。現在のステータスは、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsPasswordProperty">
      <summary>パスワード判別オートメーション プロパティを識別します。パスワード ステータスは、オートメーション ピアによって参照された項目にパスワードが含まれているかどうかを示します。現在のステータスは、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.IsRequiredForFormProperty">
      <summary>フォーム必須要素判別オートメーション プロパティを識別します。フォームの必須要素ステータスは、フォーム上の要素の入力が必須であるかどうかを示します。現在のステータスは、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.ItemStatusProperty">
      <summary>項目ステータスのオートメーション プロパティを識別します。現在の項目ステータスは、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.ItemTypeProperty">
      <summary>項目の種類のオートメーション プロパティを識別します。項目の種類の値は、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.LabeledByProperty">
      <summary>ラベルを提供しているピアのオートメーション プロパティを識別します。現在のラベル ピアは、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.LocalizedControlTypeProperty">
      <summary>ローカライズされたコントロール型のオートメーション プロパティを識別します。現在のローカライズされたコントロール型は、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlTypeCore" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.NameProperty">
      <summary>要素名のオートメーション プロパティを識別します。現在の名前は、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationElementIdentifiers.OrientationProperty">
      <summary>向きのオートメーション プロパティを識別します。現在の向きの値は、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" /> メソッドによって返されます。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.AutomationProperties">
      <summary>オートメーション プロパティのインスタンス レベルの値を取得または設定するためのサポートを提供します。これらのプロパティ値は、(通常は XAML で) 添付プロパティとして設定され、コントロールの <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> のオートメーション プロパティの値を補足またはオーバーライドします。</summary>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.AcceleratorKey">
      <summary>要素のアクセラレータ キーの文字列を取得または設定します。</summary>
      <returns>要素のアクセラレータ キーの文字列。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.AcceleratorKeyProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey" /> 添付プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.AccessKey">
      <summary>要素のアクセス キーを取得または設定します。</summary>
      <returns>要素のアクセス キー。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.AccessKeyProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationProperties.AccessKey" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Automation.AutomationProperties.AccessKey" /> 添付プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.AutomationId">
      <summary>UI オートメーションの要素を一意に識別する文字列を取得または設定します。</summary>
      <returns>UI オートメーションの要素を一意に識別する文字列。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.AutomationIdProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> 添付プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetAcceleratorKey(System.Windows.DependencyObject)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey" /> 添付プロパティの値を取得します。</summary>
      <returns>アクセラレータ キーの文字列。</returns>
      <param name="element">確認する <see cref="T:System.Windows.DependencyObject" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetAccessKey(System.Windows.DependencyObject)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.AccessKey" /> 添付プロパティの値を取得します。</summary>
      <returns>アクセス キーの文字列。</returns>
      <param name="element">確認する <see cref="T:System.Windows.DependencyObject" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetAutomationId(System.Windows.DependencyObject)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> 添付プロパティの値を取得します。</summary>
      <returns>指定した要素の UI オートメーション 識別子。</returns>
      <param name="element">確認する <see cref="T:System.Windows.DependencyObject" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetHelpText(System.Windows.DependencyObject)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.HelpText" /> 添付プロパティの値を取得します。</summary>
      <returns>指定された要素のヘルプ テキスト。</returns>
      <param name="element">確認する <see cref="T:System.Windows.DependencyObject" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetIsRequiredForForm(System.Windows.DependencyObject)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm" /> 添付プロパティの値を取得します。</summary>
      <returns>指定した要素がフォームの入力必須要素である場合は true。それ以外の場合は false。</returns>
      <param name="element">確認する <see cref="T:System.Windows.DependencyObject" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetItemStatus(System.Windows.DependencyObject)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus" /> 添付プロパティの値を取得します。</summary>
      <returns>要素の項目のステータス。</returns>
      <param name="element">確認する <see cref="T:System.Windows.DependencyObject" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetItemType(System.Windows.DependencyObject)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.ItemType" /> 添付プロパティの値を取得します。</summary>
      <returns>要素の項目の種類。</returns>
      <param name="element">確認する <see cref="T:System.Windows.DependencyObject" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetLabeledBy(System.Windows.DependencyObject)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy" /> 添付プロパティの値を取得します。</summary>
      <returns>ラベルが対象とする要素。</returns>
      <param name="element">確認する <see cref="T:System.Windows.DependencyObject" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.GetName(System.Windows.DependencyObject)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> 添付プロパティの値を取得します。</summary>
      <returns>指定した要素の名前。</returns>
      <param name="element">確認する <see cref="T:System.Windows.DependencyObject" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.HelpText">
      <summary>要素のヘルプ テキストを取得または設定します。</summary>
      <returns>指定された要素のヘルプ テキスト。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.HelpTextProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationProperties.HelpText" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Automation.AutomationProperties.HelpText" /> 添付プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm">
      <summary>要素がフォームの入力必須要素かどうかを示す値を取得または設定します。</summary>
      <returns>要素がフォームの入力必須要素である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.IsRequiredForFormProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm" /> 添付プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.ItemStatus">
      <summary>要素内の項目のステータスの説明を取得または設定します。</summary>
      <returns>要素内の項目のステータス。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.ItemStatusProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus" /> 添付プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.ItemType">
      <summary>指定した要素の種類の説明を取得または設定します。</summary>
      <returns>指定した要素の種類の説明。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.ItemTypeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationProperties.ItemType" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Automation.AutomationProperties.ItemType" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.LabeledBy">
      <summary>要素のテキスト ラベルを格納する要素を取得または設定します。</summary>
      <returns>要素のテキスト ラベルを格納する要素。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.LabeledByProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy" /> 添付プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Automation.AutomationProperties.Name">
      <summary>要素のオートメーション名を取得または設定します。</summary>
      <returns>要素の名前。</returns>
    </member>
    <member name="F:System.Windows.Automation.AutomationProperties.NameProperty">
      <summary>
        <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> 添付プロパティの識別子。 </returns>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetAcceleratorKey(System.Windows.DependencyObject,System.String)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey" /> 添付プロパティの値を設定します。</summary>
      <param name="element">プロパティを設定する <see cref="T:System.Windows.DependencyObject" />。</param>
      <param name="value">設定するアクセラレータ キーの値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetAccessKey(System.Windows.DependencyObject,System.String)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.AccessKey" /> 添付プロパティの値を設定します。</summary>
      <param name="element">プロパティを設定する <see cref="T:System.Windows.DependencyObject" />。</param>
      <param name="value">設定するアクセス キーの値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetAutomationId(System.Windows.DependencyObject,System.String)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> 添付プロパティの値を設定します。</summary>
      <param name="element">プロパティを設定する <see cref="T:System.Windows.DependencyObject" />。</param>
      <param name="value">設定する UI オートメーション識別子の値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetHelpText(System.Windows.DependencyObject,System.String)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.HelpText" /> 添付プロパティの値を設定します。</summary>
      <param name="element">プロパティを設定する <see cref="T:System.Windows.DependencyObject" />。</param>
      <param name="value">ヘルプ テキスト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetIsRequiredForForm(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm" /> 添付プロパティの値を設定します。</summary>
      <param name="element">プロパティを設定する <see cref="T:System.Windows.DependencyObject" />。</param>
      <param name="value">要素をフォームの必須要素として指定する場合は true。それ以外の場合は false。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetItemStatus(System.Windows.DependencyObject,System.String)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus" /> 添付プロパティの値を設定します。</summary>
      <param name="element">プロパティを設定する <see cref="T:System.Windows.DependencyObject" />。</param>
      <param name="value">項目のステータス。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetItemType(System.Windows.DependencyObject,System.String)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.ItemType" /> 添付プロパティの値を設定します。</summary>
      <param name="element">プロパティを設定する <see cref="T:System.Windows.DependencyObject" />。</param>
      <param name="value">項目の種類。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetLabeledBy(System.Windows.DependencyObject,System.Windows.UIElement)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy" /> 添付プロパティの値を設定します。</summary>
      <param name="element">プロパティを設定する <see cref="T:System.Windows.DependencyObject" />。</param>
      <param name="value">
        <paramref name="element" /> のラベルを表す UI 要素。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.AutomationProperties.SetName(System.Windows.DependencyObject,System.String)">
      <summary>指定された <see cref="T:System.Windows.DependencyObject" /> の <see cref="P:System.Windows.Automation.AutomationProperties.Name" /> 添付プロパティの値を設定します。</summary>
      <param name="element">プロパティを設定する <see cref="T:System.Windows.DependencyObject" />。</param>
      <param name="value">オブジェクト名。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />  は無効な値です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="T:System.Windows.Automation.AutomationProperty">
      <summary>
        <see cref="T:System.Windows.Automation.AutomationElementIdentifiers" /> のプロパティを識別します。 </summary>
    </member>
    <member name="T:System.Windows.Automation.AutomationTextAttribute">
      <summary>UI オートメーション テキスト属性を識別します。</summary>
    </member>
    <member name="T:System.Windows.Automation.DockPatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IDockProvider" /> パターンのプロパティ専用のオートメーション プロパティ識別子として使用される値が格納されます。</summary>
    </member>
    <member name="F:System.Windows.Automation.DockPatternIdentifiers.DockPositionProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IDockProvider.DockPosition" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.DockPosition">
      <summary>ドッキング コンテナー内のオブジェクトのドッキング位置を指定する値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.Top">
      <summary>UI オートメーション要素がドッキング コンテナーの上端に沿ってドッキングされることを示します。</summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.Left">
      <summary>UI オートメーション要素がドッキング コンテナーの左端に沿ってドッキングされることを示します。</summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.Bottom">
      <summary>UI オートメーション要素がドッキング コンテナーの下端に沿ってドッキングされることを示します。</summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.Right">
      <summary>UI オートメーション要素がドッキング コンテナーの右端に沿ってドッキングされることを示します。</summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.Fill">
      <summary>UI オートメーション要素がドッキング コンテナーのすべての端に沿ってドッキングされ、コンテナー内の使用可能なすべての領域を占めることを示します。 </summary>
    </member>
    <member name="F:System.Windows.Automation.DockPosition.None">
      <summary>UI オートメーション要素がドッキング コンテナーの端に沿ってドッキングされないことを示します。</summary>
    </member>
    <member name="T:System.Windows.Automation.ElementNotAvailableException">
      <summary>使用できなくなったユーザー インターフェイスの一部に対応する、UI オートメーション要素にアクセスしようとしたときにスローされる例外。</summary>
    </member>
    <member name="M:System.Windows.Automation.ElementNotAvailableException.#ctor">
      <summary>
        <see cref="T:System.Windows.Automation.ElementNotAvailableException" /> クラスの新しいインスタンスを初期化します。 </summary>
    </member>
    <member name="T:System.Windows.Automation.ElementNotEnabledException">
      <summary>UI オートメーションを使用して有効ではないコントロールを操作しようとしたときにスローされる例外。</summary>
    </member>
    <member name="M:System.Windows.Automation.ElementNotEnabledException.#ctor">
      <summary>
        <see cref="T:System.Windows.Automation.ElementNotEnabledException" /> クラスの新しいインスタンスを初期化します。 </summary>
    </member>
    <member name="T:System.Windows.Automation.ExpandCollapsePatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IExpandCollapseProvider" /> パターンのプロパティ専用のオートメーション プロパティ識別子として使用される値が格納されます。</summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapsePatternIdentifiers.ExpandCollapseStateProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.ExpandCollapseState">
      <summary>UI オートメーション要素の <see cref="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState" /> オートメーション プロパティ値を指定する値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapseState.Collapsed">
      <summary>UI オートメーション要素の子ノード、コントロール、またはコンテンツは表示されません。</summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapseState.Expanded">
      <summary>UI オートメーション要素の子ノード、コントロール、またはコンテンツがすべて表示されます。</summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapseState.PartiallyExpanded">
      <summary>UI オートメーション要素の一部の子ノード、コントロール、またはコンテンツが表示されます。ただし、すべてが表示されるわけではありません。 </summary>
    </member>
    <member name="F:System.Windows.Automation.ExpandCollapseState.LeafNode">
      <summary>UI オートメーション要素は、表示する子ノード、コントロール、またはコンテンツを保持していません。</summary>
    </member>
    <member name="T:System.Windows.Automation.GridItemPatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IGridItemProvider" /> パターンのプロパティ専用のオートメーション プロパティ識別子として使用される値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.GridItemPatternIdentifiers.ColumnProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.Column" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.GridItemPatternIdentifiers.ColumnSpanProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.GridItemPatternIdentifiers.ContainingGridProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.GridItemPatternIdentifiers.RowProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.Row" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.GridItemPatternIdentifiers.RowSpanProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IGridItemProvider.RowSpan" /> プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.GridPatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> パターンのプロパティ専用のオートメーション プロパティ識別子として使用される値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.GridPatternIdentifiers.ColumnCountProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.GridPatternIdentifiers.RowCountProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IGridProvider.RowCount" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.MultipleViewPatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IMultipleViewProvider" /> パターンのプロパティ専用のオートメーション プロパティ識別子として使用される値が格納されます。</summary>
    </member>
    <member name="F:System.Windows.Automation.MultipleViewPatternIdentifiers.CurrentViewProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.MultipleViewPatternIdentifiers.SupportedViewsProperty">
      <summary>ビューのコントロール固有のコレクションを取得するオートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.RangeValuePatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IRangeValueProvider" /> パターンのプロパティ専用のオートメーション プロパティ識別子として使用される値が格納されます。</summary>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.IsReadOnlyProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.LargeChangeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.MaximumProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.MinimumProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.SmallChangeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.RangeValuePatternIdentifiers.ValueProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.RowOrColumnMajor">
      <summary>テーブル内のデータが、主に行と列のどちらによって読み取られる必要があるかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.RowOrColumnMajor.RowMajor">
      <summary>テーブルのデータが行ごとに読み取られるように指定します。 </summary>
    </member>
    <member name="F:System.Windows.Automation.RowOrColumnMajor.ColumnMajor">
      <summary>テーブルのデータが列ごとに読み取られるように指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.RowOrColumnMajor.Indeterminate">
      <summary>データが不確定であることを示すのに最適な方法。</summary>
    </member>
    <member name="T:System.Windows.Automation.ScrollAmount">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IScrollProvider" /> パターンがスクロールの方向および距離を示すために使用する値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollAmount.LargeDecrement">
      <summary>大きなデクリメントでスクロールするように指定します。これは、PageUp キーを押すか、またはスクロール バーの空白部分をクリックすることと同じです。PageUp キーで表される距離がコントロールに関連する量ではない場合、またはスクロール バーが存在しない場合、この値は表示中のウィンドウのサイズに等しい量を表します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollAmount.SmallDecrement">
      <summary>小さなデクリメントでスクロールするように指定します。これは、方向キーを押すか、またはスクロール バーの矢印ボタンをクリックすることと同じです。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollAmount.NoAmount">
      <summary>スクロールしないように指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollAmount.LargeIncrement">
      <summary>大きなインクリメントでスクロールするように指定します。これは、PageDown キーを押すか、またはスクロール バーの空白部分をクリックすることと同じです。PageDown キーで表される距離がコントロールに関連する量ではない場合、またはスクロール バーが存在しない場合、この値は表示中の領域のサイズに等しい量を表します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollAmount.SmallIncrement">
      <summary>小さなインクリメントでスクロールするように指定します。これは、方向キーを押すか、またはスクロール バーの矢印ボタンをクリックすることと同じです。 </summary>
    </member>
    <member name="T:System.Windows.Automation.ScrollPatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IScrollProvider" /> パターンのプロパティ専用のオートメーション プロパティ識別子として使用される値、および <see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> 定数を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.HorizontallyScrollableProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontallyScrollable" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.HorizontalScrollPercentProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.HorizontalViewSizeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalViewSize" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll">
      <summary>スクロールしないように指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.VerticallyScrollableProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticallyScrollable" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.VerticalScrollPercentProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.ScrollPatternIdentifiers.VerticalViewSizeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalViewSize" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.SelectionItemPatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" /> パターンのプロパティ専用のオートメーション プロパティ識別子として使用される値が格納されます。</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPatternIdentifiers.IsSelectedProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.SelectionItemPatternIdentifiers.SelectionContainerProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.SelectionPatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> パターンのプロパティ専用のオートメーション プロパティ識別子として使用される値が格納されます。</summary>
    </member>
    <member name="F:System.Windows.Automation.SelectionPatternIdentifiers.CanSelectMultipleProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.SelectionPatternIdentifiers.IsSelectionRequiredProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.SelectionPatternIdentifiers.SelectionProperty">
      <summary>コンテナー内の選択項目を取得するプロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.SupportedTextSelection">
      <summary>テキスト プロバイダーが選択をサポートするかどうかを指定する値を格納します。選択をサポートする場合は、単一の連続選択をサポートするか、または複数の非結合選択をサポートするかを指定する値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.SupportedTextSelection.None">
      <summary>テキスト選択をサポートしません。</summary>
    </member>
    <member name="F:System.Windows.Automation.SupportedTextSelection.Single">
      <summary>単一の連続テキスト選択をサポートします。</summary>
    </member>
    <member name="F:System.Windows.Automation.SupportedTextSelection.Multiple">
      <summary>複数の非結合テキスト選択をサポートします。</summary>
    </member>
    <member name="T:System.Windows.Automation.TableItemPatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ITableProvider" /> パターンのプロパティ専用のオートメーション プロパティ識別子として使用される値が格納されます。</summary>
    </member>
    <member name="F:System.Windows.Automation.TableItemPatternIdentifiers.ColumnHeaderItemsProperty">
      <summary>テーブルの項目またはセルに関連付けられた、すべての列ヘッダーを取得するオートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.TableItemPatternIdentifiers.RowHeaderItemsProperty">
      <summary>テーブルの項目またはセルに関連付けられた、すべての行ヘッダーを取得するオートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.TablePatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ITableProvider" /> パターンのプロパティ専用のオートメーション プロパティ識別子として使用される値が格納されます。</summary>
    </member>
    <member name="F:System.Windows.Automation.TablePatternIdentifiers.ColumnHeadersProperty">
      <summary>
        <see cref="M:System.Windows.Automation.Provider.ITableProvider.GetColumnHeaders" /> メソッドからアクセスされるオートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.TablePatternIdentifiers.RowHeadersProperty">
      <summary>
        <see cref="M:System.Windows.Automation.Provider.ITableProvider.GetRowHeaders" /> メソッドからアクセスされるオートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.TablePatternIdentifiers.RowOrColumnMajorProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.ITableProvider.RowOrColumnMajor" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.TextPatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> クラスの識別子として使用される値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.AnimationStyleAttribute">
      <summary>テキスト範囲の AnimationStyle 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.BackgroundColorAttribute">
      <summary>テキスト範囲の BackgroundColor 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.BulletStyleAttribute">
      <summary>テキスト範囲の <see cref="T:System.Windows.Automation.Text.BulletStyle" /> 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.CapStyleAttribute">
      <summary>テキスト範囲の CapStyle 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.CultureAttribute">
      <summary>テキスト範囲の Culture (<see cref="T:System.Globalization.CultureInfo" />) 属性を識別します。サブ言語レベルを含みます。たとえば、フランス語 (fr) の代わりに、フランス語 (スイス) (fr-CH) を指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.FontNameAttribute">
      <summary>テキスト範囲の FontName 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.FontSizeAttribute">
      <summary>テキスト範囲の FontSize 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.FontWeightAttribute">
      <summary>テキスト範囲の FontWeight 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.ForegroundColorAttribute">
      <summary>テキスト範囲の ForegroundColor 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.HorizontalTextAlignmentAttribute">
      <summary>テキスト範囲の HorizontalTextAlignment 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IndentationFirstLineAttribute">
      <summary>テキスト範囲の IndentationFirstLine 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IndentationLeadingAttribute">
      <summary>テキスト範囲の IndentationLeading 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IndentationTrailingAttribute">
      <summary>テキスト範囲の IndentationTrailing 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IsHiddenAttribute">
      <summary>テキスト範囲の IsHidden 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IsItalicAttribute">
      <summary>テキスト範囲の IsItalic 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IsReadOnlyAttribute">
      <summary>テキスト範囲の IsReadOnly 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IsSubscriptAttribute">
      <summary>テキスト範囲の IsSubscript 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.IsSuperscriptAttribute">
      <summary>テキスト範囲の IsSuperscript 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.MarginBottomAttribute">
      <summary>テキスト範囲の MarginBottom 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.MarginLeadingAttribute">
      <summary>テキスト範囲の MarginLeading 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.MarginTopAttribute">
      <summary>テキスト範囲の MarginTop 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.MarginTrailingAttribute">
      <summary>テキスト範囲の MarginTrailing 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.OutlineStylesAttribute">
      <summary>テキスト範囲の OutlineStyles 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.OverlineColorAttribute">
      <summary>テキスト範囲の OverlineColor 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.OverlineStyleAttribute">
      <summary>テキスト範囲の OverlineStyle 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.StrikethroughColorAttribute">
      <summary>テキスト範囲の StrikethroughColor 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.StrikethroughStyleAttribute">
      <summary>テキスト範囲の StrikethroughStyle 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.TabsAttribute">
      <summary>テキスト範囲の Tabs 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.TextFlowDirectionsAttribute">
      <summary>テキスト範囲の TextFlowDirections 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.UnderlineColorAttribute">
      <summary>テキスト範囲の UnderlineColor 属性を識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TextPatternIdentifiers.UnderlineStyleAttribute">
      <summary>テキスト範囲の UnderlineStyle 属性を識別します。 </summary>
    </member>
    <member name="T:System.Windows.Automation.TogglePatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IToggleProvider" /> パターンのプロパティ専用のオートメーション プロパティ識別子として使用される値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.TogglePatternIdentifiers.ToggleStateProperty">
      <summary>
        <see cref="T:System.Windows.Automation.ToggleState" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.ToggleState">
      <summary>UI オートメーション要素の <see cref="T:System.Windows.Automation.ToggleState" /> を指定する値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ToggleState.Off">
      <summary>UI オートメーション要素は、選択、チェック、マーク、またはその他の方法でアクティブ化されていません。</summary>
    </member>
    <member name="F:System.Windows.Automation.ToggleState.On">
      <summary>UI オートメーション要素は、選択、チェック、マーク、またはその他の方法でアクティブ化されています。</summary>
    </member>
    <member name="F:System.Windows.Automation.ToggleState.Indeterminate">
      <summary>UI オートメーション要素は中間状態です。</summary>
    </member>
    <member name="T:System.Windows.Automation.TransformPatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ITransformProvider" /> パターンのプロパティ専用のオートメーション プロパティ識別子として使用される値が格納されます。</summary>
    </member>
    <member name="F:System.Windows.Automation.TransformPatternIdentifiers.CanMoveProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.TransformPatternIdentifiers.CanResizeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.TransformPatternIdentifiers.CanRotateProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.ValuePatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IValueProvider" /> パターンのプロパティ専用のオートメーション プロパティ識別子として使用される値が格納されます。</summary>
    </member>
    <member name="F:System.Windows.Automation.ValuePatternIdentifiers.IsReadOnlyProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly" /> プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.ValuePatternIdentifiers.ValueProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IValueProvider.Value" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.WindowInteractionState">
      <summary>ユーザーまたはプログラムの対話のための、ウィンドウの現在の状態を指定する値を定義します。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowInteractionState.Running">
      <summary>ウィンドウは実行中です。この場合、ウィンドウが応答しているか、ユーザー操作を受け付ける状態になっているとは限りません。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowInteractionState.Closing">
      <summary>ウィンドウは閉じています。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowInteractionState.ReadyForUserInteraction">
      <summary>ウィンドウはユーザー操作を受け付ける状態になっています。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowInteractionState.BlockedByModalWindow">
      <summary>ウィンドウはモーダル ウィンドウによってブロックされています。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowInteractionState.NotResponding">
      <summary>ウィンドウは応答していません。 </summary>
    </member>
    <member name="T:System.Windows.Automation.WindowPatternIdentifiers">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IWindowProvider" /> パターンのプロパティ専用のオートメーション プロパティ識別子として使用される値が格納されます。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.CanMaximizeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.CanMinimizeProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.IsModalProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IWindowProvider.IsModal" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.IsTopmostProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.WindowInteractionStateProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="F:System.Windows.Automation.WindowPatternIdentifiers.WindowVisualStateProperty">
      <summary>
        <see cref="P:System.Windows.Automation.Provider.IWindowProvider.VisualState" /> オートメーション プロパティを識別します。</summary>
      <returns>オートメーション プロパティ識別子。</returns>
    </member>
    <member name="T:System.Windows.Automation.WindowVisualState">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IWindowProvider" /> パターンのウィンドウの表示状態を指定する値を格納します。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowVisualState.Normal">
      <summary>ウィンドウを標準にする (元に戻す) ことを指定します。 </summary>
    </member>
    <member name="F:System.Windows.Automation.WindowVisualState.Maximized">
      <summary>ウィンドウを最大化することを指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.WindowVisualState.Minimized">
      <summary>ウィンドウが最小化されるように指定します。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.AutomationControlType">
      <summary>UI オートメーション クライアントに公開されるコントロール型を指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Button">
      <summary>ボタン コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Calendar">
      <summary>日付選択などのカレンダー コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.CheckBox">
      <summary>チェック ボックス コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ComboBox">
      <summary>コンボ ボックス コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Edit">
      <summary>テキスト ボックスなどのエディット コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Hyperlink">
      <summary>ハイパーリンク コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Image">
      <summary>イメージ コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ListItem">
      <summary>リスト コントロールの子項目であるリスト項目コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.List">
      <summary>リスト ボックスなどのリスト コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Menu">
      <summary>アプリケーション ウィンドウのトップレベル メニューなどのメニュー コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.MenuBar">
      <summary>メニュー バー コントロール。通常、トップレベルの一連のメニューが含まれます。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.MenuItem">
      <summary>メニュー項目コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ProgressBar">
      <summary>時間のかかる操作の進行状況を視覚的に示す進行状況バー コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.RadioButton">
      <summary>ラジオ ボタン コントロール。グループ内の項目を 1 つだけ選択できる選択方式です。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ScrollBar">
      <summary>アプリケーション ウィンドウのスクロール バーなどのスクロール バー コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Slider">
      <summary>スライダー コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Spinner">
      <summary>スピン ボタン コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.StatusBar">
      <summary>ステータス バー コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Tab">
      <summary>タブ コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.TabItem">
      <summary>タブ項目コントロール。タブ コントロールのページを表します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Text">
      <summary>テキスト ボックスやリッチ テキスト ボックスなどのエディット コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ToolBar">
      <summary>ツール バー (アプリケーション ウィンドウ内にある一連のコマンド ボタンを含むコントロールなど)。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.ToolTip">
      <summary>ツールヒント コントロール。ツールヒントは、コントロールの上にポインターを置くと表示される情報ウィンドウです。キーボードの Tab キーを使用してコントロールに移動した場合に表示されることもあります。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Tree">
      <summary>ツリー コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.TreeItem">
      <summary>ツリー コントロールのノード。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Custom">
      <summary>定義済みのコントロール型に該当しないコントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Group">
      <summary>グループ コントロール。他のコントロールのコンテナーとして動作します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Thumb">
      <summary>別の位置にドラッグすることができるスクロール バー内のコントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.DataGrid">
      <summary>データ グリッド コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.DataItem">
      <summary>データ項目コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Document">
      <summary>ドキュメント コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.SplitButton">
      <summary>分割ボタン。分割ボタンは既定のアクションを実行するボタンであり、展開してその他の実行可能なアクションのリストを表示することもできます。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Window">
      <summary>子オブジェクトを含むウィンドウ枠。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Pane">
      <summary>ペイン コントロール。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Header">
      <summary>ヘッダー コントロール。情報の行および列のラベルのコンテナーです。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.HeaderItem">
      <summary>ヘッダー項目。情報の行または列のラベルです。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Table">
      <summary>テーブル。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.TitleBar">
      <summary>ウィンドウのキャプション バー。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationControlType.Separator">
      <summary>メニューやツール バーなどのコントロールを視覚的に区切る区分線。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.AutomationEvents">
      <summary>関連付けられた <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を通じて要素が発生させるイベントを指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.ToolTipOpened">
      <summary>ツールヒントを開いたときに発生するイベントです。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.ToolTipClosed">
      <summary>ツールヒントを閉じたときに発生するイベントです。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.MenuOpened">
      <summary>メニューを開いたときに発生するイベントです。.</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.MenuClosed">
      <summary>メニューを閉じたときに発生するイベントです。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.AutomationFocusChanged">
      <summary>フォーカスが変更されたときに発生するイベントです。<see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" /> を参照してください。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.InvokePatternOnInvoked">
      <summary>コントロールがアクティブにされたときに発生するイベントです。<see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" /> を参照してください。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.SelectionItemPatternOnElementAddedToSelection">
      <summary>選択した項目のコレクションに項目が追加されるときに発生するイベントです。<see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection" /> を参照してください。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.SelectionItemPatternOnElementRemovedFromSelection">
      <summary>選択した項目のコレクションから項目が削除されるときに発生するイベントです。<see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection" /> を参照してください。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.SelectionItemPatternOnElementSelected">
      <summary>単一の項目が選択される (これにより、以前の選択内容がクリアされる) ときに発生するイベントです。<see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select" /> を参照してください。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.SelectionPatternOnInvalidated">
      <summary>コンテナー内の選択が著しく変わった場合に発生するイベント。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.TextPatternOnTextSelectionChanged">
      <summary>テキスト選択を変更したときに発生するイベント。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.TextPatternOnTextChanged">
      <summary>テキスト コンテンツを変更したときに発生するイベント。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.AsyncContentLoaded">
      <summary>コンテンツを非同期的に読み込んだときに発生するイベント。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.PropertyChanged">
      <summary>プロパティが変更されたときに発生するイベント。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationEvents.StructureChanged">
      <summary>UI オートメーション ツリー構造が変更されたときに発生するイベント。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.AutomationOrientation">
      <summary>コントロールを表示できる向きを指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationOrientation.None">
      <summary>このコントロールは向きを持ちません。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationOrientation.Horizontal">
      <summary>コントロールは横に並べて提示されます。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.AutomationOrientation.Vertical">
      <summary>コントロールは横に並べて提示されます。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.AutomationPeer">
      <summary>関連付けられているクラスのオートメーション ピアを UI オートメーションに公開する基本クラスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.#ctor">
      <summary>派生クラスのコンストラクターによって呼び出されるときに、基本クラスの値を初期化します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.AutomationPeer.EventsSource">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> から発生したすべてのイベントのソースとしてオートメーション クライアントにレポートされる <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を取得または設定します。</summary>
      <returns>イベントのソースである <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey">
      <summary>UI オートメーション ピアに関連付けられているオブジェクトのアクセラレータ キーの組み合わせを取得します。</summary>
      <returns>アクセラレータ キーの組み合わせのヒント文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKeyCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" /> によって呼び出されます。</summary>
      <returns>アクセラレータ キー。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey">
      <summary>オートメーション ピアに関連付けられているオブジェクトのアクセラレータ キーを取得します。</summary>
      <returns>アクセス キー。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKeyCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" /> によって呼び出されます。</summary>
      <returns>アクセス キー。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType">
      <summary>UI オートメーション ピアに関連付けられているオブジェクトのコントロールの種類を取得します。</summary>
      <returns>コントロール型である列挙値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlTypeCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>コントロール型である列挙値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId">
      <summary>オートメーション ピアに関連付けられているオブジェクトの <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> を取得します。</summary>
      <returns>オートメーション識別子。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationIdCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /> によって呼び出されます。</summary>
      <returns>オートメーション識別子。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle">
      <summary>オートメーション ピアに関連付けられているオブジェクトの要素の画面座標を表す <see cref="T:System.Windows.Rect" /> オブジェクトを取得します。</summary>
      <returns>四角形の境界。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangleCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /> によって呼び出されます。</summary>
      <returns>四角形の境界。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren">
      <summary>オートメーション ピアの直下の子として UI オートメーション ツリーに表示される子要素のコレクションを取得します。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName">
      <summary>ピアに関連付けられているコントロール クラスの名前を取得します。</summary>
      <returns>コントロール クラスに関連付けられているクラスの名前。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClassNameCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>関連するコントロール クラスのクラス名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint">
      <summary>マウスのクリックに応答するオートメーション ピアに関連付けられているオブジェクトの <see cref="T:System.Windows.Point" /> を取得します。</summary>
      <returns>要素のクリック可能な領域内のポイント。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePointCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> によって呼び出されます。</summary>
      <returns>要素のクリック可能な領域内のポイント。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText">
      <summary>オートメーション ピアに関連付けられているコントロールの機能を説明するテキストを取得します。</summary>
      <returns>ヘルプ テキスト。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpTextCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" /> によって呼び出されます。</summary>
      <returns>ヘルプ テキスト。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus">
      <summary>このオートメーション ピアに関連付けられているオブジェクトの表示ステータスを表すテキストを取得します。</summary>
      <returns>項目のステータス。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatusCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus" /> によって呼び出されます。</summary>
      <returns>項目のステータス。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType">
      <summary>要素が表すアイテムの種類を説明する文字列を取得します。</summary>
      <returns>項目の種類。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetItemTypeCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType" /> によって呼び出されます。</summary>
      <returns>項目の種類。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
      <summary>この要素を対象とする <see cref="T:System.Windows.UIElement" /> の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> が対象とする要素の <see cref="T:System.Windows.UIElement" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledByCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" /> によって呼び出されます。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> が対象とする要素の <see cref="T:System.Windows.UIElement" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType">
      <summary>このオートメーション ピアに関連付けられているコントロールについて、コントロールの種類を表すローカライズされた文字列を取得します。ローカライズされた文字列は、<see cref="T:System.Windows.Automation.Peers.AutomationControlType" />の値に対応しています。</summary>
      <returns>関連付けられているコントロールのローカライズされた型を報告する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlTypeCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" /> によって呼び出されます。</summary>
      <returns>関連付けられているコントロールのローカライズされた型を報告する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetName">
      <summary>関連付けられているコントロールの UI オートメーションの Name としてオートメーション ピアがレポートする値を取得します。</summary>
      <returns>UI オートメーションの Name としてレポートする値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> によって呼び出されます。</summary>
      <returns>名前。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation">
      <summary>コントロールの向きが明示的に設定されている場合に、その向きを示す値を取得します。</summary>
      <returns>コントロールの向き (列挙の値として)。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientationCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" /> によって呼び出されます。</summary>
      <returns>コントロールの向き。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetParent">
      <summary>この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の親である <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を取得します。</summary>
      <returns>親オートメーション ピア。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>派生クラスでオーバーライドされたときに、<see cref="T:System.Windows.Automation.Peers.PatternInterface" /> 入力とピアの既知のパターンの実装に基づいて、要求されたパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト。このピアがこのインターフェイスをサポートしない場合は null。</returns>
      <param name="patternInterface">
        <see cref="T:System.Windows.Automation.Peers.PatternInterface" /> 列挙からの値。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus">
      <summary>このオートメーション ピアに関連付けられているオブジェクトがキーボード フォーカスを持っているかどうかを示す値を取得します。</summary>
      <returns>要素にキーボード フォーカスがある場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocusCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" /> によって呼び出されます。</summary>
      <returns>要素にキーボード フォーカスがある場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> のメイン プロパティの再計算をトリガーし、プロパティが変わった場合は、オートメーション クライアントへの <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 通知を発生させます。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement">
      <summary>このオートメーション ピアに関連付けられているオブジェクトがユーザーに表示するデータを格納するかどうかを示す値を取得します。</summary>
      <returns>要素がコンテンツ要素である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElementCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> によって呼び出されます。</summary>
      <returns>要素がコンテンツ要素である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement">
      <summary>要素がユーザーに対話的に認識されるか、または GUI のコントロールの論理構造を構成するものであるかを示す値を取得します。</summary>
      <returns>要素がコントロールである場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElementCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> によって呼び出されます。</summary>
      <returns>要素がコントロールである場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled">
      <summary>このオートメーション ピアに関連付けられている要素で対話がサポートされるかどうかを示す値を取得します。</summary>
      <returns>要素がユーザーの操作をサポートする場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabledCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled" /> によって呼び出されます。</summary>
      <returns>オートメーション ピアがイベントを送受信できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable">
      <summary>要素がキーボード フォーカスを受け入れることができるかどうかを示す値を取得します。</summary>
      <returns>要素がキーボード フォーカスを受け入れることができる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusableCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" /> によって呼び出されます。</summary>
      <returns>要素がキーボード フォーカスを受け入れることができる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen">
      <summary>要素が画面から外れているかどうかを示す値を取得します。</summary>
      <returns>要素が画面上にない場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreenCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" /> によって呼び出されます。</summary>
      <returns>要素が画面上にない場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword">
      <summary>機密情報が要素に格納されているかどうか示す値を取得します。</summary>
      <returns>要素にパスワードなどの機密のコンテンツが格納される場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsPasswordCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" /> によって呼び出されます。</summary>
      <returns>要素に機密情報が含まれている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm">
      <summary>このピアに関連付けられているオブジェクトをフォームで完了する必要があるかどうかを示す値を取得します。</summary>
      <returns>要素を完了する必要がある場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForFormCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm" /> によって呼び出されます。</summary>
      <returns>要素を完了する必要がある場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
      <summary>指定したイベントを UI オートメーションがリッスンしているかどうかを示す値を取得します。</summary>
      <returns>指定したイベントを UI オートメーションがリッスンしている場合は true。それ以外の場合は false。</returns>
      <param name="eventId">列挙値の 1 つ。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.PeerFromProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)">
      <summary>指定した <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> プロキシの <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を取得します。</summary>
      <returns>指定した <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> プロキシの <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</returns>
      <param name="provider">
        <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> を実装するクラス。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.ProviderFromPeer(System.Windows.Automation.Peers.AutomationPeer)">
      <summary>指定した <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の<see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> プロキシを取得します。</summary>
      <returns>プロキシ。</returns>
      <param name="peer">オートメーション ピア。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.RaiseAutomationEvent(System.Windows.Automation.Peers.AutomationEvents)">
      <summary>オートメーション イベントを発生させます。</summary>
      <param name="eventId">発生させるイベントのイベント識別子を表す列挙値。<see cref="T:System.Windows.Automation.Peers.AutomationEvents" /> を参照してください。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.RaisePropertyChangedEvent(System.Windows.Automation.AutomationProperty,System.Object,System.Object)">
      <summary>オートメーション クライアントに変更された値を通知するイベントを発生させます。</summary>
      <param name="property">変更されたプロパティ。</param>
      <param name="oldValue">プロパティの以前の値。</param>
      <param name="newValue">プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus">
      <summary>このオートメーション ピアに関連付けられているオブジェクトのキーボード フォーカスを設定します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.AutomationPeer.SetFocusCore">
      <summary>派生クラスでオーバーライドされると、<see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" /> によって呼び出されます。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ButtonAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.Button" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.#ctor(System.Windows.Controls.Button)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">このオートメーション ピアに関連付けられている要素。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> に関連付けられている要素のコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetClassNameCore">
      <summary>この UI オートメーション ピアに関連付けられているクラスの名前を取得します。</summary>
      <returns>クラス名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> でサポートされるパターンに基づいて、指定したパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト、または指定されたパターン インターフェイスがこのピアで実装されていない場合は null。</returns>
      <param name="patternInterface">列挙値の 1 つ。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" /> を参照してください。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> から派生したクラスを UI オートメーションに公開する基本クラスを表します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.ButtonBase)">
      <summary>派生クラスのコンストラクターによって呼び出されたときに、基本クラス値を初期化します。</summary>
      <param name="owner">このピアに関連付ける <see cref="T:System.Windows.Controls.Primitives.ButtonBase" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer" /> に関連付けられている要素の UI オートメーションの Name を取得します。<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> によって呼び出されます。</summary>
      <returns>関連付けられている要素の UI オートメーションの Name。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.CheckBox" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.#ctor(System.Windows.Controls.CheckBox)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> に関連付ける <see cref="T:System.Windows.Controls.CheckBox" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> に関連付けられているクラスの <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> を取得します。<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> に関連付けられているクラスの名前を取得します。<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>クラス名。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.ComboBox" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.#ctor(System.Windows.Controls.ComboBox)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> に関連付ける <see cref="T:System.Windows.Controls.ComboBox" /> インスタンス。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.ComboBox" /> (または他の要素) に個々のアイテムのオートメーション ピアを作成します。</summary>
      <returns>子コレクションの指定したアイテムの新しい <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />。</returns>
      <param name="item">オートメーション ピアを作成するアイテム。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> に関連付けられている要素のコントロールの種類を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>コントロールの種類 (列挙の値として)。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> に関連付けられているクラスの名前を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>クラス名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> でサポートされているパターンに基づいて、要求されたパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト、または指定されたパターン インターフェイスがこのピアで実装されていない場合は null。</returns>
      <param name="pattern">列挙値の 1 つ。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Collapse">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse" /> を参照してください。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#Expand">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Expand" /> を参照してください。</summary>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IExpandCollapseProvider#ExpandCollapseState">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState" /> を参照してください。</summary>
      <returns>コントロールの状態。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly" /> を参照してください。</summary>
      <returns>コントロールが読み取り専用の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)" /> を参照してください。</summary>
      <param name="value">コントロールの値。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IValueProvider.Value" /> を参照してください。</summary>
      <returns>コントロールの値。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer">
      <summary>
        <see cref="T:System.Windows.FrameworkElement" /> 型 (コントロールを含む) を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.#ctor(System.Windows.FrameworkElement)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.FrameworkElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.CreatePeerForElement(System.Windows.UIElement)">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> の <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> を作成します。</summary>
      <returns>指定した <see cref="T:System.Windows.UIElement" /> の <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />。</returns>
      <param name="element">この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.UIElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.FromElement(System.Windows.UIElement)">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> の <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" />。<see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> が <see cref="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.CreatePeerForElement(System.Windows.UIElement)" /> メソッドにより 作成されなかった場合は null。</returns>
      <param name="element">この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.UIElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAcceleratorKeyCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.UIElement" /> のアクセラレータ キーを返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" /> によって呼び出されます。</summary>
      <returns>
        <see cref="M:System.Windows.Automation.AutomationProperties.GetAcceleratorKey(System.Windows.DependencyObject)" /> から返される <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAccessKeyCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.UIElement" /> のアクセス キーを返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" /> によって呼び出されます。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている要素のアクセス キー。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.UIElement" /> のコントロールの種類を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAutomationIdCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.FrameworkElement" /> を一意に識別する文字列を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /> によって呼び出されます。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている要素のオートメーション識別子、またはオートメーション識別子がない場合は <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetBoundingRectangleCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.UIElement" /> の四角形領域を表す <see cref="T:System.Windows.Rect" /> を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /> によって呼び出されます。</summary>
      <returns>要素の座標を格納している <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.UIElement" /> の子要素のコレクションを返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 要素のリスト。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.UIElement" /> の名前を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている所有者の種類の名前。"継承に関する注意事項" を参照。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetClickablePointCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.UIElement" /> 上のクリック可能な領域を表す <see cref="T:System.Windows.Point" /> を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> によって呼び出されます。</summary>
      <returns>クリック可能な要素上の <see cref="T:System.Windows.Point" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetHelpTextCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.FrameworkElement" /> の機能を説明する文字列を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" /> によって呼び出されます。</summary>
      <returns>ヘルプ テキスト、またはヘルプ テキストがない場合は <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetItemStatusCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.UIElement" /> の表示ステータスを通知する文字列を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus" /> によって呼び出されます。</summary>
      <returns>
        <see cref="M:System.Windows.Automation.AutomationProperties.GetItemStatus(System.Windows.DependencyObject)" /> から返された <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus" /> を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetItemTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> が表す <see cref="T:System.Windows.UIElement" /> のアイテムの種類が格納されている判読可能な文字列を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType" /> によって呼び出されます。</summary>
      <returns>
        <see cref="M:System.Windows.Automation.AutomationProperties.GetItemType(System.Windows.DependencyObject)" /> から返された <see cref="P:System.Windows.Automation.AutomationProperties.ItemType" /> を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetLabeledByCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.FrameworkElement" /> を対象とする <see cref="T:System.Windows.UIElement" /> の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" /> によって呼び出されます。</summary>
      <returns>
        <see cref="T:System.Windows.UIElement" /> が対象とする要素の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetLocalizedControlTypeCore">
      <summary>コントロールの種類を識別する、ローカライズされた判読可能な文字列を返します。コントロールの種類は、<see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている所有者の種類のためのものです。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" /> によって呼び出されます。</summary>
      <returns>所有者コントロールの型名が格納されているローカライズされた文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている要素から UI オートメーションの Name を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> によって呼び出されます。</summary>
      <returns>このオートメーション ピアに関連付けられている要素からの UI オートメーションの Name。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetOrientationCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている要素が特定の方向に配置されているかどうかを示す値を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" /> によって呼び出されます。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.None" /> 列挙値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> でサポートされているパターンに基づいて、要求されたパターンをサポートするオブジェクトを返します。</summary>
      <returns>「解説」を参照してください。</returns>
      <param name="patternInterface">列挙値の 1 つ。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.HasKeyboardFocusCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.UIElement" /> がキーボード入力フォーカスを持っているかどうかを示す値を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" /> によって呼び出されます。</summary>
      <returns>要素にキーボード入力フォーカスがある場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsContentElementCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている要素がユーザーに表示する値を格納する要素であるかどうかを示す値を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> によって呼び出されます。</summary>
      <returns>要素にユーザーが読み取るデータが含まれている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsControlElementCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられているオブジェクトがエンド ユーザーに対話的に認識されるかどうかを示す値を返します。または、ユーザーはオブジェクトを GUI のコントロールの論理構造を構成するものであると認識する場合があります。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> によって呼び出されます。</summary>
      <returns>オブジェクトが対話的である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsEnabledCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.UIElement" /> が有効になっているかどうかを示す値を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled" /> によって呼び出されます。</summary>
      <returns>要素が有効な場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsKeyboardFocusableCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている要素がキーボード フォーカスを受け入れることができるかどうかを示す値を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" /> によって呼び出されます。</summary>
      <returns>要素がキーボードによりフォーカス可能な場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsOffscreenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.UIElement" /> が画面から外れているかどうかを示す値を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" /> によって呼び出されます。</summary>
      <returns>要素が画面上にない場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsPasswordCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている要素に保護されたコンテンツが格納されているかどうかを示す値を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" /> によって呼び出されます。</summary>
      <returns>要素に機密情報が含まれている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.IsRequiredForFormCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている要素をフォームで完了する必要があるかどうかを示す値を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm" /> によって呼び出されます。</summary>
      <returns>値が設定されている場合は <see cref="M:System.Windows.Automation.AutomationProperties.GetIsRequiredForForm(System.Windows.DependencyObject)" /> から返される値。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.Owner">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている<see cref="T:System.Windows.UIElement" /> を取得します。</summary>
      <returns>このピア クラスを所有している要素。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.SetFocusCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている要素にキーボード入力フォーカスを設定します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" /> によって呼び出されます。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.HyperlinkButton" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.#ctor(System.Windows.Controls.HyperlinkButton)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.HyperlinkButton" /> に関連付ける <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer" /> に関連付けられている要素のコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer" /> に関連付けられているクラスの名前を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>クラス名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer" /> でサポートされているパターンに基づいて、要求されたパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト、または指定されたパターン インターフェイスがこのピアで実装されていない場合は null。</returns>
      <param name="patternInterface">列挙値の 1 つ。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.IsControlElementCore">
      <summary>このオートメーション ピアに関連付けられている要素がユーザーに提示するデータを格納する要素であるかどうかを示す値を取得します。</summary>
      <returns>要素が対話型である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" /> を参照してください。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ImageAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.Image" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.#ctor(System.Windows.Controls.Image)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer" /> に関連付ける <see cref="T:System.Windows.Controls.Image" />。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.ItemAutomationPeer">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションのデータ アイテムを UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer)">
      <summary>派生クラスのコンストラクターによって呼び出されたときに、基本クラス値を初期化します。</summary>
      <param name="item">この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられている <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクション内のデータ項目。</param>
      <param name="itemsControlAutomationPeer">
        <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションを保持する <see cref="T:System.Windows.Controls.ItemsControl" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.#ctor(System.Windows.UIElement)">
      <summary>派生クラスのコンストラクターによって呼び出されたときに、基本クラス値を初期化します。</summary>
      <param name="item">この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられている <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクション内のデータ項目。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAcceleratorKeyCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテム要素のアクセラレータ キーを返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" /> によって呼び出されます。</summary>
      <returns>
        <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey" /> から返される <see cref="M:System.Windows.Automation.AutomationProperties.GetAcceleratorKey(System.Windows.DependencyObject)" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAccessKeyCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテム要素のアクセス キーを返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" /> によって呼び出されます。</summary>
      <returns>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられている要素のアクセス キー。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテム要素のコントロールの種類を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAutomationIdCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテム要素を一意に識別する文字列を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /> によって呼び出されます。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられている要素のオートメーション識別子、またはオートメーション識別子がない場合は <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetBoundingRectangleCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテム要素の四角形領域を表す <see cref="T:System.Windows.Rect" /> を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /> によって呼び出されます。</summary>
      <returns>要素アイテムの座標を格納している <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetChildrenCore">
      <summary>所有者の子要素のコレクションのオートメーション ピアを返します。<see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられている所有者クラス。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 要素のリスト。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているクラスの名前を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>クラス名。「解説」を参照してください。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetClickablePointCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテム要素のクリック可能な領域を表す <see cref="T:System.Windows.Point" /> を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> によって呼び出されます。</summary>
      <returns>クリック可能な要素上の <see cref="T:System.Windows.Point" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetHelpTextCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテム要素の機能を説明する文字列を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" /> により呼び出されます。</summary>
      <returns>ヘルプ テキスト、またはヘルプ テキストがない場合は <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemStatusCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられている要素アイテムの表示ステータスを通知する文字列を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus" /> によって呼び出されます。</summary>
      <returns>
        <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus" /> から返された <see cref="M:System.Windows.Automation.AutomationProperties.GetItemStatus(System.Windows.DependencyObject)" /> を格納する文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemTypeCore">
      <summary>このアイテムが表すアイテム要素の種類が格納されている判読可能な文字列を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType" /> によって呼び出されます。</summary>
      <returns>アイテムの種類の文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetLabeledByCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテムを対象とするオブジェクトの <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" /> によって呼び出されます。</summary>
      <returns>ピアの所有者のラベルが対象としているオブジェクトのオートメーション ピア。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetLocalizedControlTypeCore">
      <summary>コントロールの種類を表す、ローカライズされた判読可能な文字列を返します。このコントロールは、この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられている所有者の種類です。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" /> によって呼び出されます。</summary>
      <returns>コントロールの種類が格納されている文字列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetNameCore">
      <summary>データ アイテムに対応する要素から UI オートメーションの Name を取得します。このアイテムは、この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられている <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションの要素です。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> によって呼び出されます。</summary>
      <returns>データ アイテムに対応する要素からの UI オートメーションの Name。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetOrientationCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられている要素が特定の方向に配置されているかどうかを示す値を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> でサポートされているパターンに基づいて、要求されたパターンをサポートするオブジェクトを返します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト。指定したパターン インターフェイスが実装されない場合は null。</returns>
      <param name="patternInterface">列挙値の 1 つ。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.HasKeyboardFocusCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテム要素がキーボード入力フォーカスを持っているかどうかを示す値を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" /> によって呼び出されます。</summary>
      <returns>要素にキーボード入力フォーカスがある場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsContentElementCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテム要素がユーザーに表示する値を格納する要素であるかどうかを示す値を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> によって呼び出されます。</summary>
      <returns>要素にユーザーが読み取るデータが含まれている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsControlElementCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテム要素がエンド ユーザーに対話的に認識されるかどうかを示す値を返します。または、ユーザーは要素を GUI のコントロールの論理構造を構成するものであると認識する場合があります。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> によって呼び出されます。</summary>
      <returns>要素が対話型である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsEnabledCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテム要素が有効であるかどうかを示す値を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled" /> によって呼び出されます。</summary>
      <returns>要素が有効な場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsKeyboardFocusableCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテム要素がキーボード フォーカスを受け入れることができるかどうかを示す値を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" /> によって呼び出されます。</summary>
      <returns>アイテム要素がフォーカス可能な場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsOffscreenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテム要素が画面から外れているかどうかを示す値を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" /> によって呼び出されます。</summary>
      <returns>アイテム要素が画面に収まっていない場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsPasswordCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテム要素に保護されたコンテンツが格納されているかどうかを示す値を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" /> によって呼び出されます。</summary>
      <returns>アイテム要素に機密のコンテンツが格納されている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsRequiredForFormCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているアイテム要素をフォームで完了する必要があるかどうかを示す値を返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm" /> によって呼び出されます。</summary>
      <returns>値が設定されている場合は <see cref="M:System.Windows.Automation.AutomationProperties.GetIsRequiredForForm(System.Windows.DependencyObject)" /> から返される値。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.Item">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられている <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションから要求されたデータ アイテムを取得します。</summary>
      <returns>要求されたデータ アイテム。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.ItemsControlAutomationPeer">
      <summary>このピアの <see cref="P:System.Windows.Controls.ItemsControl.Items" /> の <see cref="T:System.Windows.Controls.ItemsControl" /> に関連付けられている<see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションを保持する <see cref="T:System.Windows.Controls.ItemsControl" /> に関連付けられている <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.SetFocusCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられているアイテム要素にキーボード入力フォーカスを設定します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" /> によって呼び出されます。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.#ctor(System.Windows.Controls.ItemsControl)">
      <summary>派生クラスのコンストラクターによって呼び出されたときに、基本クラス値を初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> に関連付ける <see cref="T:System.Windows.Controls.ItemsControl" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>データ項目の <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> の新規インスタンスを作成します。このアイテムは、関連付けられている <see cref="T:System.Windows.Controls.ItemsControl" /> 所有者の <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションに存在します。</summary>
      <returns>データ アイテムを UI オートメーションに公開するオブジェクト、または null。「解説」を参照してください。</returns>
      <param name="item">この <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> に関連付けられているデータ アイテム。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> に関連付けられている要素の子要素のコレクションのオートメーション ピアを取得します。</summary>
      <returns>子要素のオートメーション ピアの一覧。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer" /> でサポートされるパターンに基づいて、要求されたパターンを実装するオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト、または指定されたパターン インターフェイスがこのピアで実装されていない場合は null。</returns>
      <param name="patternInterface">必要なコントロール パターンを示すいずれかの列挙値。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.#ctor(System.Windows.Controls.ListBox)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.ListBox" /> に関連付ける <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>データ項目の <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> の新規インスタンスを作成します。このアイテム ピアは、関連付けられている <see cref="T:System.Windows.Controls.ListBox" /> の <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクション内のアイテムと揃えられます。</summary>
      <returns>所有者 <see cref="T:System.Windows.Controls.ListBox" /> の指定したデータ アイテムの UI オートメーション サポートを提供するピア オブジェクト。</returns>
      <param name="item">作成した <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer" /> の基準として使用するデータ アイテム。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.ListBox" /> のコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> に関連付けられているクラスのクラス名を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>関連付けられているクラス名。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> の <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションのアイテムを UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
      <summary>指定したセレクター オートメーション ピアを使用して、<see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.ListBoxItem" /> インスタンス。</param>
      <param name="selectorAutomationPeer">
        <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> コレクションを保持する <see cref="T:System.Windows.Controls.ListBox" /> に関連付けられている <see cref="P:System.Windows.Controls.ItemsControl.Items" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.#ctor(System.Windows.Controls.ListBoxItem)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.ListBoxItem" /> インスタンス。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> に関連付けられている要素のコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> に関連付けられているクラスの名前を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>クラス名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> でサポートされているパターンに基づいて、要求されたパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト、または指定されたパターン インターフェイスがこのピアで実装されていない場合は null。</returns>
      <param name="patternInterface">列挙値の 1 つ。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView" /> を参照してください。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.MediaElementAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.#ctor(System.Windows.Controls.MediaElement)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" /> に関連付ける <see cref="T:System.Windows.Controls.MediaElement" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" /> に関連付けられている要素のコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer" /> に関連付けられているクラスの名前を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>クラス名。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer.#ctor(System.Windows.Controls.MultiScaleImage)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> に関連付ける <see cref="T:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer" /> に関連付けられているコントロールのコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.MultiScaleImageAutomationPeer" /> に関連付けられているクラスの名前を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>クラス名。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.PasswordBox" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.#ctor(System.Windows.Controls.PasswordBox)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.PasswordBox" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer" /> でサポートされているパターンに基づいて、要求されたパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト、または指定されたパターン インターフェイスがこのピアで実装されていない場合は null。</returns>
      <param name="patternInterface">列挙値の 1 つ。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly" /> を参照してください。</summary>
      <returns>値が読み取り専用である場合は true。変更可能である場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)" /> を参照してください。</summary>
      <param name="value">設定する値。</param>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">このピアの所有者は有効ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> は null として渡されます。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IValueProvider.Value" /> を参照してください。必ず例外をスローします。</summary>
      <returns>適用できません。常に例外をスローします。</returns>
      <exception cref="T:System.InvalidOperationException">常にスローされます。</exception>
    </member>
    <member name="T:System.Windows.Automation.Peers.PatternInterface">
      <summary>
        <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)" /> メソッドが返すコントロール パターンを指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Invoke">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IInvokeProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Selection">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Value">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IValueProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.RangeValue">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IRangeValueProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Scroll">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IScrollProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IScrollItemProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IExpandCollapseProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Grid">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.GridItem">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IGridItemProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.MultipleView">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IMultipleViewProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Window">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IWindowProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.SelectionItem">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Dock">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IDockProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Table">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ITableProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.TableItem">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ITableItemProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Toggle">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IToggleProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Transform">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ITransformProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="F:System.Windows.Automation.Peers.PatternInterface.Text">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> コントロール パターン インターフェイス。</summary>
    </member>
    <member name="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.ProgressBar" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.#ctor(System.Windows.Controls.ProgressBar)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.ProgressBar" /> に関連付ける <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> に関連付けられている要素のコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> に関連付けられているクラスの名前を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>クラス名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> でサポートされているパターンに基づいて、要求されたパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト、または指定されたパターン インターフェイスがこのピアで実装されていない場合は null。</returns>
      <param name="patternInterface">列挙値の 1 つ。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly" /> を参照してください。</summary>
      <returns>常に true を返します。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" /> を参照してください。</summary>
      <returns>コントロールでサポートされる大きな変更値。このオプションがサポートされない場合は、<see cref="F:System.Double.NaN" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)" /> を参照してください。必ず例外をスローします。</summary>
      <param name="val">設定する値。</param>
      <exception cref="T:System.InvalidOperationException">常にスローされます。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" /> を参照してください。</summary>
      <returns>コントロールでサポートされる小さな変更値。このオプションがサポートされない場合は、<see cref="F:System.Double.NaN" />。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.RadioButton" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.#ctor(System.Windows.Controls.RadioButton)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.RadioButton" /> に関連付ける <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> に関連付けられている要素のコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> に関連付けられているクラスの名前を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>クラス名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> でサポートされているパターンに基づいて、要求されたパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト、または指定されたパターン インターフェイスがこのピアで実装されていない場合は null。</returns>
      <param name="patternInterface">列挙値の 1 つ。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection" /> を参照してください。</summary>
      <exception cref="T:System.InvalidOperationException">このピアの <see cref="T:System.Windows.Controls.CheckBox" /> はチェックされていません。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected" /> を参照してください。</summary>
      <returns>要素が選択されている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection" /> を参照してください。</summary>
      <exception cref="T:System.InvalidOperationException">このピアの <see cref="T:System.Windows.Controls.CheckBox" /> はチェックされています。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select" /> を参照してください。</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">このピアの <see cref="T:System.Windows.Controls.CheckBox" /> は有効ではありません。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer" /> を参照してください。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> をサポートするプロバイダー。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.RangeBase)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> に関連付ける <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer" /> で実装されたパターンに基づいて、要求されたパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト、または指定されたパターン インターフェイスがこのピアで実装されていない場合は null。</returns>
      <param name="patternInterface">列挙値の 1 つ。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#IsReadOnly">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly" /> を参照してください。</summary>
      <returns>値が読み取り専用である場合は true。変更可能である場合は false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#LargeChange">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" /> を参照してください。</summary>
      <returns>コントロールでサポートされる大きな変更値。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Maximum">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" /> を参照してください。</summary>
      <returns>コントロールでサポートされる最大値。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Minimum">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" /> を参照してください。</summary>
      <returns>コントロールでサポートされる最小値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SetValue(System.Double)">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)" /> を参照してください。</summary>
      <param name="val">設定する値。</param>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">このピアの所有者は有効ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">所有者コントロールの <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> と <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> の範囲外の値を設定しようとしました。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#SmallChange">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" /> を参照してください。</summary>
      <returns>コントロールでサポートされる小さな変更値。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System#Windows#Automation#Provider#IRangeValueProvider#Value">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> を参照してください。</summary>
      <returns>コントロールの値。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.RepeatButton)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> に関連付ける <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> に関連付けられている要素のコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> に関連付けられているクラスの名前を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>クラス名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> でサポートされているパターンに基づいて、要求されたパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト、または指定されたパターン インターフェイスがこのピアで実装されていない場合は null。</returns>
      <param name="patternInterface">列挙値の 1 つ。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.System#Windows#Automation#Provider#IInvokeProvider#Invoke">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" /> を参照してください。</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">所有者のコントロールが有効になっていません。</exception>
    </member>
    <member name="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.#ctor(System.Windows.Controls.RichTextBox)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">オートメーション ピアの <see cref="T:System.Windows.Controls.RichTextBox" /> 所有者。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> に関連付けられているコントロールのコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetChildrenCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.RichTextBox" /> の子要素のコレクションのオートメーション ピアを返します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> によって呼び出されます。</summary>
      <returns>子要素の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> オブジェクトの一覧。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> に関連付けられているクラスの名前を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>クラス名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer" /> でサポートされているパターンに基づいて、要求されたパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト。指定されたパターン インターフェイスがこのピアにより実装されていない場合は null。</returns>
      <param name="patternInterface">列挙値の 1 つ。</param>
    </member>
    <member name="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.#ctor(System.Windows.Controls.Primitives.ScrollBar)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> に関連付ける <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> のコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer" /> に関連付けられているクラスの名前を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>クラス名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClickablePointCore">
      <summary>このコントロールのクリック可能なポイントを取得します。</summary>
      <returns>コントロール内のクリック可能なポイント。コントロール内にクリック可能なポイントがない場合は、<see cref="F:System.Double.NaN" /> 座標を含んでいるポイント。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetOrientationCore">
      <summary>このピアに関連付けられている <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の向きを取得します。</summary>
      <returns>スクロール バーの向き (列挙の値として)。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.#ctor(System.Windows.Controls.ScrollViewer)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> インスタンスに関連付けられた <see cref="T:System.Windows.Controls.ScrollViewer" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer" /> インスタンスに関連付けられている <see cref="T:System.Windows.Controls.ScrollViewer" /> オブジェクトのコントロールの種類を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetClassNameCore">
      <summary>このピアに関連付けられているクラスの名前を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>関連付けられているクラスの名前。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>このオートメーション ピアでサポートされるパターンに基づいて、指定したパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト、または指定されたパターン インターフェイスがこのピアで実装されていない場合は null。</returns>
      <param name="patternInterface">列挙値の 1 つ。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.IsControlElementCore">
      <summary>このピアに関連付けられている要素がユーザーに対話的に認識されるか、または GUI のコントロールの論理構造を構成するものであるかを示す値を取得します。</summary>
      <returns>所有者コントロールが対話的に認識される場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontallyScrollable">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontallyScrollable" /> を参照してください。</summary>
      <returns>コントロールを横方向にスクロールできる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalScrollPercent">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent" /> を参照してください。</summary>
      <returns>コントロールのコンテンツ領域全体のパーセンテージで示した水平スクロール位置。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalViewSize">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalViewSize" /> を参照してください。</summary>
      <returns>コントロールのコンテンツ領域全体のパーセンテージで示した表示可能領域の水平サイズ。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.IScrollProvider.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)" /> を参照してください。</summary>
      <param name="horizontalAmount">コントロール固有の水平方向インクリメント。</param>
      <param name="verticalAmount">コントロール固有の垂直方向インクリメント。</param>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">有効になっていない所有者のコントロール。</exception>
      <exception cref="T:System.InvalidOperationException">特定のスクロール軸の現在のスクロール可能状態では、スクロール アクションがサポートされません。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#SetScrollPercent(System.Double,System.Double)">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.IScrollProvider.SetScrollPercent(System.Double,System.Double)" /> を参照してください。</summary>
      <param name="horizontalPercent">コンテンツ領域の範囲全体のパーセンテージで示した水平位置。</param>
      <param name="verticalPercent">コンテンツ領域の範囲全体のパーセンテージで示した垂直位置。</param>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">有効になっていない所有者のコントロール。</exception>
      <exception cref="T:System.InvalidOperationException">特定のスクロール軸の現在のスクロール可能状態では、スクロール アクションがサポートされません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">0 未満または 100 を超える入力パラメーターを指定しました。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticallyScrollable">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticallyScrollable" /> を参照してください。</summary>
      <returns>コントロールを縦方向にスクロールできる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalScrollPercent">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent" /> を参照してください。</summary>
      <returns>コントロールのコンテンツ領域全体のパーセンテージで示した垂直スクロール位置。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalViewSize">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IScrollProvider.VerticalViewSize" /> を参照してください。</summary>
      <returns>コントロールのコンテンツ領域全体のパーセンテージで示した表示可能領域の垂直サイズ。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SelectorAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Selector" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.#ctor(System.Windows.Controls.Primitives.Selector)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.Primitives.Selector" /> インスタンス。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> に関連付けられている要素のコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" /> でサポートされるパターンに基づいて、要求されたパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト、または指定されたパターン インターフェイスがこのピアで実装されていない場合は null。</returns>
      <param name="patternInterface">列挙値の 1 つ。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple" /> を参照してください。</summary>
      <returns>複数選択が許可されている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection" /> を参照してください。</summary>
      <returns>UI オートメーション プロバイダーの一覧。</returns>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired" /> を参照してください。</summary>
      <returns>選択が必要な場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Selector" /> の項目を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
      <summary>指定したセレクター オートメーション ピアを使用して、<see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" /> の新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" /> に関連付ける <see cref="T:System.Windows.UIElement" /> インスタンス。</param>
      <param name="selectorAutomationPeer">
        <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションを保持するコントロールに関連付けられている <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.#ctor(System.Windows.UIElement)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" /> に関連付ける <see cref="T:System.Windows.UIElement" /> インスタンス。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer" /> でサポートされるパターンに基づいて、要求されたパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト、または指定されたパターン インターフェイスがこのピアで実装されていない場合は null。</returns>
      <param name="patternInterface">列挙値の 1 つ。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection" /> を参照してください。</summary>
      <exception cref="T:System.NotImplementedException">所有者の要素が有効になっていません。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected" /> を参照してください。</summary>
      <returns>項目が選択されている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection" /> を参照してください。</summary>
      <exception cref="T:System.NotImplementedException">所有者の要素が有効になっていません。</exception>
    </member>
    <member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select" /> を参照してください。</summary>
      <exception cref="T:System.NotImplementedException">所有者の要素が有効になっていません。</exception>
      <exception cref="T:System.InvalidOperationException">項目の <see cref="T:System.Windows.Controls.Primitives.Selector" /> は、関連する <see cref="P:System.Windows.Automation.Peers.ItemAutomationPeer.ItemsControlAutomationPeer" /> 値を使用して見つかりませんでした。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer" /> を参照してください。</summary>
      <returns>UI オートメーション プロバイダー。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.SliderAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.#ctor(System.Windows.Controls.Slider)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Slider" /> に関連付ける <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> に関連付けられている要素のコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> に関連付けられているクラスの名前を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>クラス名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClickablePointCore">
      <summary>所有者コントロールのクリック可能なポイントを取得します。</summary>
      <returns>クリック可能な所有者コントロールのポイントが格納されている <see cref="T:System.Windows.Point" /> 構造体。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextBlockAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.#ctor(System.Windows.Controls.TextBlock)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.TextBlock" /> に関連付ける <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.TextBlock" /> のコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> に関連付けられているクラスの名前を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>クラス名。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.TextBlock" /> の UI オートメーションの Name を取得します。<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> によって呼び出されます。</summary>
      <returns>このオートメーション ピアに関連付けられているオブジェクトの UI オートメーションの Name。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.IsControlElementCore">
      <summary>このピアに関連付けられている <see cref="T:System.Windows.Controls.TextBlock" /> がユーザーに対話的に認識されるか、または GUI のコントロールの論理構造を構成するものであるかを示す値を取得します。</summary>
      <returns>要素が適用されたテンプレートの一部である場合は false。それ以外の場合は true。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.TextBoxAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.TextBox" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.#ctor(System.Windows.Controls.TextBox)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> に関連付けられている <see cref="T:System.Windows.Controls.TextBox" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> に関連付けられている要素から UI オートメーションの Name の値を取得します。<see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> によって呼び出されます。</summary>
      <returns>このオートメーション ピアに関連付けられている要素の UI オートメーションの Name。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> でサポートされているパターンに基づいて、要求されたパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト、または指定されたパターン インターフェイスがこのピアで実装されていない場合は null。</returns>
      <param name="patternInterface">列挙値の 1 つ。</param>
    </member>
    <member name="P:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#IsReadOnly">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly" /> を参照してください。</summary>
      <returns>値が読み取り専用である場合は true。変更可能である場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#SetValue(System.String)">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)" /> を参照してください。</summary>
      <param name="value">新しい値。</param>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">所有者のコントロールが有効になっていません。</exception>
      <exception cref="T:System.InvalidOperationException">所有者コントロールは読み取り専用です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> は null として入力されました。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.TextBoxAutomationPeer.System#Windows#Automation#Provider#IValueProvider#Value">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IValueProvider.Value" /> を参照してください。</summary>
      <returns>文字列としてのコントロールの値。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ThumbAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.#ctor(System.Windows.Controls.Primitives.Thumb)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> に関連付ける <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> に関連付けられている要素のコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer" /> に関連付けられているクラスの名前を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>クラス名。</returns>
    </member>
    <member name="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> 型を UI オートメーションに公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.ToggleButton)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> に関連付ける <see cref="T:System.Windows.Controls.Primitives.ToggleButton" />。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetAutomationControlTypeCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> に関連付けられている要素のコントロール型を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> によって呼び出されます。</summary>
      <returns>列挙の 1 つの値。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetClassNameCore">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> に関連付けられているクラスの名前を取得します。このメソッドは <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> によって呼び出されます。</summary>
      <returns>関連付けられているクラスの名前。</returns>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>この <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> でサポートされているパターンに基づいて、要求されたパターンをサポートするオブジェクトを取得します。</summary>
      <returns>パターン インターフェイスを実装するオブジェクト、または指定されたパターン インターフェイスがこのピアで実装されていない場合は null。</returns>
      <param name="patternInterface">コントロール パターンを示すいずれかの列挙値。</param>
    </member>
    <member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#Toggle">
      <summary>このメンバーについては、<see cref="M:System.Windows.Automation.Provider.IToggleProvider.Toggle" /> を参照してください。</summary>
      <exception cref="T:System.Windows.Automation.ElementNotEnabledException">所有者のコントロールが有効になっていません。</exception>
    </member>
    <member name="P:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.System#Windows#Automation#Provider#IToggleProvider#ToggleState">
      <summary>このメンバーについては、<see cref="P:System.Windows.Automation.Provider.IToggleProvider.ToggleState" /> を参照してください。</summary>
      <returns>コントロールのトグル状態。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IDockProvider">
      <summary>ドッキング コンテナーのドッキング プロパティを公開するコントロールへの、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IDockProvider.DockPosition">
      <summary>ドッキング コンテナーのコントロールの現在の <see cref="T:System.Windows.Automation.DockPosition" /> を取得します。</summary>
      <returns>ドッキング コンテナーの境界線およびコンテナーの他の要素に対するコントロールの <see cref="T:System.Windows.Automation.DockPosition" />。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IDockProvider.SetDockPosition(System.Windows.Automation.DockPosition)">
      <summary>コントロールをドッキング コンテナーにドッキングします。</summary>
      <param name="dockPosition">ドッキング コンテナーの境界線およびコンテナーの他の要素に対するドッキング位置。</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IExpandCollapseProvider">
      <summary>視覚的にコンテンツを展開して表示したり、コンテンツを折りたたんで非表示にしたりするコントロールへの、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse">
      <summary>コントロールの子孫であるすべてのノード、コントロール、またはコンテンツを非表示にします。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IExpandCollapseProvider.Expand">
      <summary>すべての子ノード、コントロール、またはコントロールのコンテンツを表示します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IExpandCollapseProvider.ExpandCollapseState">
      <summary>コントロールの状態 (展開されているか、または折りたたまれているか) を取得します。</summary>
      <returns>コントロールの状態 (展開されているか、または折りたたまれているか)。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IGridItemProvider">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> を実装するコンテナーの各子コントロールへの、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.Column">
      <summary>セルまたは項目を格納する列の序数を取得します。</summary>
      <returns>セルまたは項目を含む列を識別する 0 から始まる序数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.ColumnSpan">
      <summary>セルまたは項目がまたがる列の数を取得します。</summary>
      <returns>列の数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IGridProvider" /> を実装し、セルまたは項目のコンテナーを表す UI オートメーション プロバイダーを取得します。</summary>
      <returns>
        <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid" /> コントロール パターンを実装し、セルまたは項目のコンテナーを表す UI オートメーション プロバイダー。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.Row">
      <summary>セルまたは項目を格納する行の序数を取得します。</summary>
      <returns>セルまたは項目を含む行を識別する 0 から始まる序数。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridItemProvider.RowSpan">
      <summary>セルまたは項目がまたがる行の数を取得します。</summary>
      <returns>行の番号。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IGridProvider">
      <summary>子要素のコレクションのコンテナーとして機能するコントロールへの UI オートメーション クライアントによるアクセスをサポートするメソッドとプロパティを提示します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount">
      <summary>グリッド内の列の合計数を取得します。</summary>
      <returns>グリッド内の列の合計数。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)">
      <summary>指定したセルの UI オートメーション プロバイダーを取得します。</summary>
      <returns>指定したセルの UI オートメーション プロバイダー。</returns>
      <param name="row">セルを含む行の序数。</param>
      <param name="column">セルを含む列の序数。</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IGridProvider.RowCount">
      <summary>グリッド内の行の合計数を取得します。</summary>
      <returns>グリッド内の行の合計数。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IInvokeProvider">
      <summary>単一の明確なアクションを開始または実行し、アクティブ化されたときに状態を維持しないコントロールへの、UI オートメーションからのアクセスをサポートするメソッドを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke">
      <summary>コントロールをアクティブにし、単一の明確なアクションを開始する要求を送信します。</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IMultipleViewProvider">
      <summary>同じ一連の情報または子コントロールの複数の表示を実行し、これらを切り替えることができるコントロールへの、UI オートメーションからのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IMultipleViewProvider.CurrentView">
      <summary>現在のコントロール固有のビューを取得します。</summary>
      <returns>UI オートメーション要素の現在の表示の値 (<paramref name="viewId" />)。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetSupportedViews">
      <summary>コントロール固有のビュー識別子のコレクションを取得します。</summary>
      <returns>UI オートメーション要素で使用可能な表示を識別する値のコレクション。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.GetViewName(System.Int32)">
      <summary>コントロール固有のビューの名前を取得します。</summary>
      <returns>ローカライズされたビューの名前。</returns>
      <param name="viewId">ビュー識別子。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView(System.Int32)">
      <summary>現在のコントロール固有の表示を設定します。</summary>
      <param name="viewId">ビュー識別子。</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRangeValueProvider">
      <summary>範囲内の値に設定できるコントロールへの、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly">
      <summary>コントロールの値が読み取り専用かどうかを示す値を取得します。</summary>
      <returns>値が読み取り専用である場合は true。変更可能である場合は false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange">
      <summary>PageDown キーなどにより、大きな変更が行われたときに <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> プロパティに加算または減算される値を取得します。</summary>
      <returns>コントロールでサポートされる大きな変更の値。このコントロールが <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" /> をサポートしていない場合は null。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum">
      <summary>コントロールでサポートされる最大範囲値を取得します。</summary>
      <returns>コントロールでサポートされる最大値。このコントロールが <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" /> をサポートしていない場合は null。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum">
      <summary>コントロールでサポートされる最小範囲値を取得します。</summary>
      <returns>コントロールでサポートされる最小値。このコントロールが <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" /> をサポートしていない場合は null。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
      <summary>コントロールの値を設定します。</summary>
      <param name="value">設定する値。</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange">
      <summary>矢印キーなどにより、小さな変更が行われたときに <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> プロパティに加算または減算される値を取得します。</summary>
      <returns>コントロールでサポートされる小さな変更の値。このコントロールが <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" /> をサポートしていない場合は null。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IRangeValueProvider.Value">
      <summary>コントロールの値を取得します。</summary>
      <returns>コントロールの値。このコントロールが <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> をサポートしていない場合は null。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IRawElementProviderSimple">
      <summary>UI 要素に関する基本情報を公開するメソッドとプロパティを提供します。</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IScrollItemProvider">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.IScrollProvider" /> を実装するコンテナーの各子コントロールへの、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView">
      <summary>コンテナーの可視領域 (ビューポート) 内のコントロールを表示するために、コンテナー オブジェクトのコンテンツ エリアをスクロールします。</summary>
    </member>
    <member name="T:System.Windows.Automation.Provider.IScrollProvider">
      <summary> 子オブジェクトのコレクションのスクロール可能なコンテナーの役割を果たすコントロールへの、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。このコントロールの子は、<see cref="T:System.Windows.Automation.Provider.IScrollItemProvider" /> を実装する必要があります。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontallyScrollable">
      <summary>コントロールを水平方向にスクロールできるかどうかを示す値を取得します。</summary>
      <returns>コントロールを横方向にスクロールできる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalScrollPercent">
      <summary>現在の水平スクロール位置を取得します。</summary>
      <returns>コントロール内のコンテンツ エリア全体のパーセンテージで示した水平スクロール位置。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.HorizontalViewSize">
      <summary>現在の水平方向のビュー サイズを取得します。</summary>
      <returns>コントロール内のコンテンツ エリア全体のパーセンテージで示した表示可能領域の水平方向のサイズ。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollProvider.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
      <summary>コンテンツ領域の表示領域を水平、垂直、またはその両方にスクロールします。</summary>
      <param name="horizontalAmount">コントロール固有の水平方向インクリメント。コントロールをこの方向にスクロールできない場合は、<see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> を渡します。</param>
      <param name="verticalAmount">コントロール固有の垂直方向インクリメント。コントロールをこの方向にスクロールできない場合は、<see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> を渡します。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.IScrollProvider.SetScrollPercent(System.Double,System.Double)">
      <summary>コントロール内のコンテンツ エリア全体のパーセンテージとして、水平スクロール位置と垂直スクロール位置を設定します。</summary>
      <param name="horizontalPercent">コンテンツ領域の範囲全体のパーセンテージで示した水平位置。コントロールをこの方向にスクロールできない場合は、<see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> を渡します。</param>
      <param name="verticalPercent">コンテンツ領域の範囲全体のパーセンテージで示した垂直位置。コントロールをこの方向にスクロールできない場合は、<see cref="F:System.Windows.Automation.ScrollPatternIdentifiers.NoScroll" /> を渡します。</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticallyScrollable">
      <summary>コントロールを垂直方向にスクロールできるかどうかを示す値を取得します。</summary>
      <returns>コントロールを縦方向にスクロールできる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticalScrollPercent">
      <summary>現在の垂直スクロール位置を取得します。</summary>
      <returns>コントロール内のコンテンツ エリア全体のパーセンテージで示した垂直スクロール位置。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IScrollProvider.VerticalViewSize">
      <summary>垂直方向のビュー サイズを取得します。</summary>
      <returns>コントロール内のコンテンツ エリア全体のパーセンテージで示した表示可能領域の垂直方向のサイズ。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISelectionItemProvider">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> を実装するコンテナーの個々の選択可能なコントロールへの、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection">
      <summary>選択された項目のコレクションに現在の要素を追加します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionItemProvider.IsSelected">
      <summary>項目が選択されているかどうかを示す値を取得します。</summary>
      <returns>要素が選択されている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection">
      <summary>選択した項目のコレクションから現在の要素を削除します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionItemProvider.Select">
      <summary>既存の選択をクリアし、現在の要素を選択します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionItemProvider.SelectionContainer">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ISelectionProvider" /> を実装し、呼び出しオブジェクトのコンテナーとして機能する UI オートメーション プロバイダーを取得します。</summary>
      <returns>UI オートメーション プロバイダー。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ISelectionProvider">
      <summary>選択可能な個々の子項目のコレクションのコンテナーの役割を果たすコントロールへの、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。このコントロールの子は、<see cref="T:System.Windows.Automation.Provider.ISelectionItemProvider" /> を実装する必要があります。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionProvider.CanSelectMultiple">
      <summary>UI オートメーション プロバイダーが複数の子要素の同時選択を許可しているかどうかを示す値を取得します。</summary>
      <returns>複数選択が許可されている場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ISelectionProvider.GetSelection">
      <summary>選択された子要素ごとに UI オートメーション プロバイダーを取得します。</summary>
      <returns>UI オートメーション プロバイダーのジェネリック リスト。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ISelectionProvider.IsSelectionRequired">
      <summary>UI オートメーション プロバイダーが少なくとも 1 つの子要素の選択を必要とするかどうかを示す値を取得します。</summary>
      <returns>選択が必要な場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITableItemProvider">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ITableProvider" /> を実装するコンテナーの子コントロールへの、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableItemProvider.GetColumnHeaderItems">
      <summary>テーブル項目またはセルに関連付けられているすべての列ヘッダーを表す UI オートメーション プロバイダーの配列を取得します。</summary>
      <returns>UI オートメーション プロバイダーの配列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableItemProvider.GetRowHeaderItems">
      <summary>テーブル項目またはセルに関連付けられているすべての行ヘッダーを表す UI オートメーション プロバイダーの配列を取得します。</summary>
      <returns>UI オートメーション プロバイダーの配列。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITableProvider">
      <summary>子要素のコレクションのコンテナーの役割を果たすコントロールへの、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。この要素の子には <see cref="T:System.Windows.Automation.Provider.ITableItemProvider" /> を実装する必要があります。また、この要素の子はキーボードを使用して処理できる (UI オートメーション クライアントが隣接するコントロール (テーブルのヘッダーまたはセル) に移動できる) 2 次元の論理座標系で構成する必要があります。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableProvider.GetColumnHeaders">
      <summary>テーブルのすべての列ヘッダーを表す UI オートメーション プロバイダーのコレクションを返します。</summary>
      <returns>UI オートメーション プロバイダーの配列。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITableProvider.GetRowHeaders">
      <summary>テーブルのすべての行ヘッダーを表す UI オートメーション プロバイダーのコレクションを返します。</summary>
      <returns>UI オートメーション プロバイダーの配列。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITableProvider.RowOrColumnMajor">
      <summary>テーブルの主要な移動方向を取得します。</summary>
      <returns>スキャンの主な方向 (列挙の値として)。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITextProvider">
      <summary>テキストが格納されているコントロールへの、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange">
      <summary>ドキュメントのメイン テキストを囲むテキスト範囲を取得します。</summary>
      <returns>ドキュメントのメイン テキストを囲むテキスト範囲。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.GetSelection">
      <summary>現在の 1 つ以上のテキスト選択に関連付けられている互いに素であるテキスト範囲のコレクションを取得します。</summary>
      <returns>非結合テキスト範囲のコレクション。</returns>
      <exception cref="T:System.InvalidOperationException">UI オートメーション プロバイダーがテキスト選択をサポートしない場合。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.GetVisibleRanges">
      <summary>テキスト コンテナーから非結合テキスト範囲の配列を取得します。各テキスト範囲は、先頭の部分的に表示可能な行で始まり、最終の部分的に表示可能な行で終わります。</summary>
      <returns>コンテナー内の表示可能なテキスト範囲のコレクションまたは空の配列。このメソッドは null を返しません。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.RangeFromChild(System.Windows.Automation.Provider.IRawElementProviderSimple)">
      <summary>イメージ、ハイパーリンク、または他の埋め込みオブジェクトなど、子要素を囲むテキスト範囲を取得します。</summary>
      <returns>子要素に及ぶ範囲。</returns>
      <param name="childElement">囲まれたオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextProvider.RangeFromPoint(System.Windows.Point)">
      <summary>指定した画面座標に最も近い、作成できない (空) のテキスト範囲を返します。</summary>
      <returns>指定した位置の最も近くにある低次元テキスト範囲。このメソッドは null を返しません。</returns>
      <param name="screenLocation">画面座標で示された位置。</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection">
      <summary>テキスト プロバイダーが選択をサポートするかどうかを指定する値を取得し、サポートする場合は、サポートする選択の種類を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.SupportedTextSelection" /> の値。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITextRangeProvider">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> を実装するテキスト コンテナーの連続するテキストのスパンへの、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection">
      <summary>複数の互いに素である選択をサポートするテキスト コンテナーにハイライトされたテキストのコレクションを追加します。</summary>
      <exception cref="T:System.InvalidOperationException">このテキスト プロバイダーは複数の非結合選択をサポートしていません。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone">
      <summary>元の <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> と同じであり、元のすべてのプロパティを継承している新しい <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> を返します。</summary>
      <returns>新しいテキスト範囲。このメソッドは null を返しません。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)">
      <summary>テキスト範囲のスパン (<see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> エンドポイントから <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> エンドポイントまで) が別のテキスト範囲と同じであるかどうかを示す値を返します。</summary>
      <returns>両方のテキスト範囲のスパンが同じ場合は true。それ以外の場合は false。</returns>
      <param name="range">比較するテキスト範囲。</param>
      <exception cref="T:System.ArgumentException">比較する範囲は、同じテキスト プロバイダーから取得されません。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>2 つのテキスト範囲のエンドポイントが同じかどうかを示す値を返します。</summary>
      <returns>テキストにおいて、呼び出し元のエンドポイントが比較対象のエンドポイントよりも前方にある場合は、負の値を返します。呼び出し元のエンドポイントが比較対象のエンドポイントと同じ位置にある場合は、0 を返します。テキストにおいて、呼び出し元のエンドポイントが比較対象のエンドポイントより後方にある場合は、正の値を返します。</returns>
      <param name="endpoint">呼び出し元の <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> または <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> エンドポイント。</param>
      <param name="targetRange">比較対象の範囲。</param>
      <param name="targetEndpoint">ターゲットの <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> または <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> エンドポイント。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetRange" /> が異なるテキスト プロバイダーのものである場合。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
      <summary>指定されたテキスト単位にテキスト範囲を拡大します。</summary>
      <param name="unit">テキスト単位。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
      <summary>指定した属性 ID と属性値を持つテキスト範囲のサブセットを返します。</summary>
      <returns>一致する属性 ID と属性値を持つテキスト範囲。それ以外の場合は、null。</returns>
      <param name="attributeId">検索する属性 ID。</param>
      <param name="value">検索対象の属性値。この値は、指定された属性の型と一致する必要があります。</param>
      <param name="backward">最初に発生したテキスト範囲ではなく、最後に発生したテキスト範囲を返す必要がある場合は true。それ以外の場合は false。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
      <summary>指定したテキストを含むテキスト範囲のサブセットを返します。</summary>
      <returns>指定したテキスト範囲に一致するテキスト範囲。それ以外の場合は null。</returns>
      <param name="text">検索対象の文字列。</param>
      <param name="backward">最初に発生したテキスト範囲ではなく、最後に発生したテキスト範囲を返す場合は true。それ以外の場合は false。</param>
      <param name="ignoreCase">大文字と小文字の違いを無視する場合は true。それ以外の場合は false。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
      <summary>指定した属性 ID の値をテキスト範囲から取得します。</summary>
      <returns>指定した属性の値を表すオブジェクトを取得します。「解説」を参照してください。</returns>
      <param name="attributeId">テキスト属性 ID。</param>
      <exception cref="T:System.ArgumentException">指定した属性 ID は無効です。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles">
      <summary>テキスト範囲内のテキストの表示されている各行 (全体または一部) に外接する四角形のコレクションを取得します。</summary>
      <returns>テキスト範囲内の各行 (全体または一部) に外接する四角形の配列。「解説」を参照してください。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren">
      <summary>テキスト範囲内に存在するすべての埋め込みオブジェクトのコレクションを取得します。</summary>
      <returns>範囲内に存在する子オブジェクトのコレクション。テキスト範囲とオーバーラップしているがテキスト範囲に完全に囲まれてはいない、コレクションに含まれている子オブジェクト。子オブジェクトが存在しない場合は、空のコレクションを返します。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement">
      <summary>テキスト範囲を囲んでいる最も内側の要素を返します。</summary>
      <returns>囲んでいるコントロール。通常は、テキスト範囲を提供するテキスト プロバイダー。ただし、テキスト プロバイダーがテーブルやハイパーリンクなどの子テキスト要素をサポートする場合、囲んでいる要素はテキスト プロバイダーの子孫とすることができます。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
      <summary>範囲のプレーン テキストを取得します。</summary>
      <returns>テキスト範囲のプレーン テキスト。これは、指定した <paramref name="maxLength" /> で切り詰められた完全な文字列の一部を表す場合があります。</returns>
      <param name="maxLength">返す文字列の最大長。-1 を使用して、無制限の長さを指定します。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxLength" />  が -1 未満です。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>指定されたテキスト単位数の分、テキスト範囲を移動します。</summary>
      <returns>実際に移動された単位の数。新しいテキスト範囲のエンドポイントのいずれかが <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /> エンドポイントよりも大きい、または小さい場合、この値は要求した <paramref name="count" /> よりも小さくなる場合があります。</returns>
      <param name="unit">テキスト単位の境界。</param>
      <param name="count">移動するテキスト単位の数。正の値はテキスト範囲を前方に移動し、負の値はテキスト範囲を後方に移動します。0 の場合は移動されません。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
      <summary>テキスト範囲の 1 つのエンドポイントを、2 番目のテキスト範囲の指定のエンドポイントに移動します。</summary>
      <param name="endpoint">移動するエンドポイント。</param>
      <param name="targetRange">同じテキスト プロバイダーからの別の範囲。</param>
      <param name="targetEndpoint">他の範囲にあるエンドポイント。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
      <summary>テキスト範囲の 1 つのエンドポイントを、ドキュメント範囲内で指定したテキスト単位数だけ移動します。</summary>
      <returns>実際に移動された単位の数。ドキュメントの先頭または最後を越えてエンドポイントを移動した場合、この値は、要求した <paramref name="count" /> よりも小さくなる場合があります。</returns>
      <param name="endpoint">移動するエンドポイント。</param>
      <param name="unit">移動対象のテキスト範囲。</param>
      <param name="count">移動する単位の数。正の値はエンドポイントを前方に移動し、負の値はエンドポイントを後方に移動します。0 の場合は移動されません。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
      <summary>複数の互いに素である選択をサポートしているテキスト コンテナーの強調表示されたテキストのコレクションから、呼び出し側の <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> および <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> エンドポイントに対応しているテキストの強調表示されたセクションを削除します。</summary>
      <exception cref="T:System.InvalidOperationException">このテキスト プロバイダーは複数の非結合をサポートしていません。</exception>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
      <summary>テキスト範囲がビューポート内に表示されるまで、テキスト コントロールが垂直方向にスクロールされます。</summary>
      <param name="alignToTop">テキスト範囲をスクロールしてビューポートの上辺と揃える場合は true。ビューポートの底辺と揃える場合は false。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITextRangeProvider.Select">
      <summary>テキスト範囲の <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> および <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> エンドポイントに対応するテキスト コントロールのテキストを強調表示します。</summary>
      <exception cref="T:System.InvalidOperationException">テキスト選択はテキスト コントロールでサポートされていません。</exception>
    </member>
    <member name="T:System.Windows.Automation.Provider.IToggleProvider">
      <summary>一連の状態を切り替え、特定の状態を保持できるコントロールへの、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IToggleProvider.Toggle">
      <summary>コントロールのトグル状態を切り替えます。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IToggleProvider.ToggleState">
      <summary>コントロールのトグル状態を取得します。</summary>
      <returns>コントロールのトグル状態 (列挙の値として)。 </returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.ITransformProvider">
      <summary>2 次元空間内で移動、サイズ変更、または回転できるコントロールまたは要素への、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanMove">
      <summary>要素を移動できるかどうかを示す値を取得します。</summary>
      <returns>要素を移動できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanResize">
      <summary>要素のサイズを変更できるかどうかを示す値を取得します。</summary>
      <returns>要素のサイズを変更できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate">
      <summary>要素を回転できるかどうかを示す値を取得します。</summary>
      <returns>要素を回転できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)">
      <summary>コントロールを移動します。</summary>
      <param name="x">コントロールの左側の絶対画面座標。</param>
      <param name="y">コントロールの上部の絶対画面座標。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)">
      <summary>コントロールのサイズを変更します。</summary>
      <param name="width">ウィンドウの新しい幅 (ピクセル単位)。</param>
      <param name="height">ウィンドウの新しい高さ (ピクセル単位)。</param>
    </member>
    <member name="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)">
      <summary>コントロールを回転します。</summary>
      <param name="degrees">コントロールを回転する角度の数値。正の数値では、コントロールを時計回りに回転させます。負の値は反時計回りの回転を表します。</param>
    </member>
    <member name="T:System.Windows.Automation.Provider.IValueProvider">
      <summary>範囲にまたがらない、かつ文字列として表すことができる固有の値を持つコントロールへの、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly">
      <summary>コントロールの値が読み取り専用かどうかを示す値を取得します。</summary>
      <returns>値が読み取り専用である場合は true。変更可能である場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
      <summary>コントロールの値を設定します。</summary>
      <param name="value">設定する値。プロバイダーは、値を適切なデータ型に変換します。</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IValueProvider.Value">
      <summary>コントロールの値を取得します。</summary>
      <returns>コントロールの値。</returns>
    </member>
    <member name="T:System.Windows.Automation.Provider.IWindowProvider">
      <summary>従来のグラフィカル ユーザー インターフェイス (GUI) 内で基盤のウィンドウベースの機能を提供するコントロールへの、UI オートメーション クライアントからのアクセスをサポートするメソッドとプロパティを公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.Close">
      <summary>ウィンドウを閉じます。</summary>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState">
      <summary>ウィンドウの対話操作の状態を取得します。</summary>
      <returns>コントロールの対話操作の状態 (列挙の値として)。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.IsModal">
      <summary>ウィンドウがモーダルであるかどうかを指定する値を取得します。</summary>
      <returns>ウィンドウがモーダルである場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost">
      <summary>ウィンドウがレイアウトの z オーダーで最上位の要素であるかどうかを指定する値を取得します。</summary>
      <returns>ウィンドウが最上位である場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable">
      <summary>ウィンドウを最大化できるかどうかを指定する値を取得します。</summary>
      <returns>ウィンドウを最大化できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable">
      <summary>ウィンドウを最小化できるかどうかを指定する値を取得します。</summary>
      <returns>ウィンドウを最小化できる場合は true、それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)">
      <summary>ウィンドウの表示状態を変更します (最小化または最大化するなど)。</summary>
      <param name="state">変更するウィンドウの表示状態 (列挙の値として)。</param>
    </member>
    <member name="P:System.Windows.Automation.Provider.IWindowProvider.VisualState">
      <summary>ウィンドウの表示状態を取得します。</summary>
      <returns>ウィンドウの表示状態 (列挙の値として)。 </returns>
    </member>
    <member name="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)">
      <summary>指定した時間の間、または関連付けられているプロセスがアイドル状態に入るまでのどちらかが最初に完了するまで、呼び出しコードをブロックします。</summary>
      <returns>ウィンドウがアイドル状態に入っている場合は true。タイムアウトが発生した場合は false。</returns>
      <param name="milliseconds">関連付けられたプロセスがアイドル状態になるまで待機する時間。単位はミリ秒です。</param>
    </member>
    <member name="T:System.Windows.Automation.Text.TextPatternRangeEndpoint">
      <summary>
        <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> のメソッドのテキスト範囲のエンドポイントを識別します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start">
      <summary>範囲のスタート ポイント。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End">
      <summary>範囲のエンドポイント。 </summary>
    </member>
    <member name="T:System.Windows.Automation.Text.TextUnit">
      <summary>ドキュメント内のナビゲーションを目的とするテキストの定義済みの単位を表します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Character">
      <summary>テキスト単位の長さが 1 文字であることを指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Format">
      <summary>テキスト単位の長さが、太字や斜体などの単一の一般的な形式仕様の長さであることを指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Word">
      <summary>テキスト単位の長さが単語 1 つ分であることを指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Line">
      <summary>テキスト単位の長さが 1 行であることを指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Paragraph">
      <summary>テキスト単位の長さが 1 段落であることを指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Page">
      <summary>テキスト単位の長さがドキュメント固有の 1 ページであることを指定します。</summary>
    </member>
    <member name="F:System.Windows.Automation.Text.TextUnit.Document">
      <summary>テキスト単位の長さがドキュメント全体であることを指定します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Border">
      <summary>別のオブジェクトの周囲に境界線、背景、またはその両方を描画します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Border.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Border" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Border.Background">
      <summary>境界線の背景を塗りつぶす <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>背景を塗りつぶすブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Border.Background" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Border.Background" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.BorderBrush">
      <summary>境界線の作成に使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>境界線を塗りつぶすブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BorderBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Border.BorderBrush" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Border.BorderBrush" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.BorderThickness">
      <summary>境界線の太さを取得または設定します。</summary>
      <returns>境界線の太さ (ピクセル単位)。既定値は、4 辺すべてで 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.BorderThicknessProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Border.BorderThickness" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Border.BorderThickness" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.Child">
      <summary>周囲に境界線を描画する子要素を取得または設定します。</summary>
      <returns>境界線を適用する <see cref="T:System.Windows.UIElement" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.CornerRadius">
      <summary>境界線の角の丸みを取得または設定します。</summary>
      <returns>角に丸みを付ける程度。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.CornerRadiusProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Border.CornerRadius" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Border.CornerRadius" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Border.Padding">
      <summary>境界線とその子オブジェクトとの距離を取得または設定します。</summary>
      <returns>境界線とその子との間の空間の寸法 (<see cref="T:System.Windows.Thickness" /> 値として)。<see cref="T:System.Windows.Thickness" /> 値はピクセル単位です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Border.PaddingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Border.Padding" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Border.Padding" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.Button">
      <summary>ボタン コントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Button" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.Button" /> のビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.OnClick">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを発生させます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Button.OnCreateAutomationPeer">
      <summary>Windows Phone オートメーション インフラストラクチャで使用するための <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Button" /> オブジェクトの <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.Canvas">
      <summary>領域を基準にした相対座標を使用して子オブジェクトを明示的に配置できる領域を定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Canvas" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Canvas.ArrangeOverride(System.Windows.Size)">
      <summary>レイアウトの "配置" パスの動作を提供します。</summary>
      <returns>使用する実際のサイズ。</returns>
      <param name="arrangeSize">このオブジェクトがその子オブジェクトを配置するために使用する必要があるサイズ。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetLeft(System.Windows.UIElement)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.Canvas.Left" /> 添付プロパティの値を取得します。</summary>
      <returns>指定されたオブジェクトの <see cref="P:System.Windows.Controls.Canvas.Left" /> 値。</returns>
      <param name="element">プロパティ値の読み取り元のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetTop(System.Windows.UIElement)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.Canvas.Top" /> 添付プロパティの値を取得します。</summary>
      <returns>指定したオブジェクトの <see cref="P:System.Windows.Controls.Canvas.Top" /> 値。</returns>
      <param name="element">プロパティ値の読み取り元のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.GetZIndex(System.Windows.UIElement)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.Canvas.ZIndex" /> 添付プロパティの値を取得します。</summary>
      <returns>要求されたオブジェクトの <see cref="P:System.Windows.Controls.Canvas.ZIndex" /> 値。<see cref="P:System.Windows.Controls.Canvas.ZIndex" /> の最大値は Int16.MaxValue – 1 = 32766 です。</returns>
      <param name="element">プロパティ値の読み取り元のオブジェクト。</param>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Left">
      <summary>オブジェクトの左端と親 <see cref="T:System.Windows.Controls.Canvas" /> の左端との間の距離を取得または設定します。</summary>
      <returns>親 <see cref="T:System.Windows.Controls.Canvas" /> の左端からのオフセット位置 (ピクセル単位)。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.LeftProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Canvas.Left" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Canvas.Left" /> 添付プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Canvas.MeasureOverride(System.Windows.Size)">
      <summary>レイアウトの "測定" パスの動作を提供します。</summary>
      <returns>子オブジェクトに割り当てられるサイズの計算に基づいて、レイアウト中にこのオブジェクトが必要とするサイズ。</returns>
      <param name="constraint">このオブジェクトが子オブジェクトに与えることができる使用可能なサイズ。値として無限大を指定し、このオブジェクトがあらゆるコンテンツにサイズを合わせられるようにすることができます。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetLeft(System.Windows.UIElement,System.Double)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.Canvas.Left" /> 添付プロパティの値を設定します。</summary>
      <param name="element">プロパティ値の書き込み先のオブジェクト。</param>
      <param name="length">指定された要素の <see cref="P:System.Windows.Controls.Canvas.Left" /> の値。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetTop(System.Windows.UIElement,System.Double)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.Canvas.Top" /> 添付プロパティの値を設定します。</summary>
      <param name="element">プロパティ値の書き込み先のオブジェクト。</param>
      <param name="length">指定したオブジェクトの <see cref="P:System.Windows.Controls.Canvas.Top" /> 値。</param>
    </member>
    <member name="M:System.Windows.Controls.Canvas.SetZIndex(System.Windows.UIElement,System.Int32)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.Canvas.ZIndex" /> 添付プロパティの値を設定します。</summary>
      <param name="element">プロパティ値の書き込み先のオブジェクト。<see cref="P:System.Windows.Controls.Canvas.ZIndex" /> の最大値は Int16.MaxValue – 1 = 32766 です。</param>
      <param name="value">指定されたオブジェクトの <see cref="P:System.Windows.Controls.Canvas.ZIndex" /> 値。</param>
    </member>
    <member name="P:System.Windows.Controls.Canvas.Top">
      <summary>要素の上端と親 <see cref="T:System.Windows.Controls.Canvas" /> の上端との間の距離を取得または設定します。</summary>
      <returns>親 <see cref="T:System.Windows.Controls.Canvas" /> の上端からのオフセット位置 (ピクセル単位)。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.TopProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Canvas.Top" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Canvas.Top" /> 添付プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Canvas.ZIndex">
      <summary>
        <see cref="T:System.Windows.Controls.Canvas" /> 内のオブジェクトの z オーダーの描画動作を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Canvas" /> 内のオブジェクトの z オーダー。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Canvas.ZIndexProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Canvas.ZIndex" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Canvas.ZIndex" /> 添付プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.CheckBox">
      <summary>ユーザーが選択 (オン) またはクリア (オフ) できるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.CheckBox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.CheckBox.OnCreateAutomationPeer">
      <summary>Windows Phone オートメーション インフラストラクチャで使用するための <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" /> を返します。</summary>
      <returns>チェック ボックス オブジェクトの <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent" /> イベントにデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Cancel">
      <summary>この項目の再仮想化が不要かどうかを示す値を取得または設定します。</summary>
      <returns>この項目の再仮想化を回避する場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.UIElement">
      <summary>データ値を表すビジュアル要素のインスタンスを取得します。</summary>
      <returns>データ値を表す <see cref="T:System.Windows.UIElement" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Value">
      <summary>元のデータ値を表す <see cref="T:System.Object" /> を取得します。</summary>
      <returns>元のデータ値を表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent" /> 添付イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.ClickMode">
      <summary>コントロールで <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを発生させるタイミングを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Release">
      <summary>ユーザーがコントロールの境界内で画面から指を離したときに <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを発生させるように指定します。キーボードを使用している場合は、コントロールにキーボード フォーカスがある状態で Space キーまたは Enter キーを押して離したときに、<see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを発生させるように指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Press">
      <summary>ユーザーがコントロールに触れたときに <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを発生させるように指定します。キーボードを使用している場合は、コントロールにキーボード フォーカスがある状態で Space キーまたは Enter キーを押したときに、<see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを発生させるように指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ClickMode.Hover">
      <summary>ユーザーがコントロール外の画面に触れてからコントロールの上に移動したときに <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを発生させるように指定します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ColumnDefinition">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> オブジェクトに適用する列固有のプロパティを定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ColumnDefinition.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.ActualWidth">
      <summary>実際に計算された <see cref="T:System.Windows.Controls.ColumnDefinition" /> の幅を表す値を取得します。</summary>
      <returns>実際に計算された幅を表す <see cref="T:System.Double" /> (ピクセル単位)。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.MaxWidth">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> の最大の幅を表す値を取得または設定します。</summary>
      <returns>最大幅を表す <see cref="T:System.Double" /> (ピクセル単位)。既定値は、<see cref="F:System.Double.PositiveInfinity" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.MaxWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ColumnDefinition.MaxWidth" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ColumnDefinition.MaxWidth" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.MinWidth">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> の最小の幅を表す値を取得または設定します。</summary>
      <returns>最小幅を表す <see cref="T:System.Double" /> (ピクセル単位)。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.MinWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ColumnDefinition.Width">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> 要素の計算された幅を取得するか、<see cref="T:System.Windows.Controls.ColumnDefinition" /> で定義されている列の <see cref="T:System.Windows.GridLength" /> 値を設定します。</summary>
      <returns>列の幅を表す <see cref="T:System.Windows.GridLength" />。既定値は 1.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ColumnDefinition.WidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ColumnDefinition.Width" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ColumnDefinition.Width" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.ColumnDefinitionCollection">
      <summary>
        <see cref="T:System.Windows.Controls.ColumnDefinition" /> オブジェクトの、順序の付いた厳密に型指定されたコレクションへのアクセスを提供します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ComboBox">
      <summary>編集できないテキスト ボックスと、ユーザーが一覧から項目を選択できるリスト ボックスを含むドロップダウンを組み合わせた選択コントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ComboBox" /> クラスの新しいインスタンスを初期化します。. </summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.ArrangeOverride(System.Windows.Size)">
      <summary>コンボ ボックス コントロールとそのコンテンツを配置し、サイズを設定します。</summary>
      <returns>コンボ ボックスの実際のサイズ。</returns>
      <param name="arrangeBounds">コンボ ボックス コントロールで許可されるサイズ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.ComboBoxItem" /> として表示されるオブジェクトのテンプレート、スタイル、およびバインディングをすべて削除します。</summary>
      <param name="element">消去するコンテナー要素。</param>
      <param name="item">
        <see cref="T:System.Windows.Controls.ComboBoxItem" /> に含まれる項目。</param>
    </member>
    <member name="E:System.Windows.Controls.ComboBox.DropDownClosed">
      <summary>コンボ ボックスのドロップダウン部分を閉じたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.ComboBox.DropDownOpened">
      <summary>コンボ ボックスのドロップダウン部分を開いたときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.GetContainerForItemOverride">
      <summary>空のコンボ ボックスの項目を取得します。</summary>
      <returns>空のコンボ ボックスの項目。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsDropDownOpen">
      <summary>コンボ ボックスのドロップダウン部分が現在開かれているかどうかを示す値を取得または設定します。</summary>
      <returns>ドロップダウン部分が開かれている場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsDropDownOpenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsEditable">
      <summary>コンボ ボックスのテキスト ボックス部分のテキストをユーザーが編集できるかどうかを示す値を取得します。このプロパティは常に false を返します。</summary>
      <returns>すべての場合に false。</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.IsItemItsOwnContainerOverride(System.Object)">
      <summary>指定された項目が自身の項目コンテナーかどうか (または自身のコンテナーにすることができるかどうか) を判断します。</summary>
      <returns>項目が <see cref="T:System.Windows.Controls.ComboBoxItem" /> である場合は true。それ以外の場合は false。既定値は false です。</returns>
      <param name="item">評価する項目。</param>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.IsSelectionActiveProperty">
      <summary>IsSelectionActive 添付プロパティを識別します。</summary>
      <returns>IsSelectionActive 添付プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> が強調表示されているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> が強調表示されている場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.ItemContainerStyle">
      <summary>コンボ ボックスの項目ごとに生成されたコンテナーに適用されるスタイルを取得または設定します。</summary>
      <returns>コンボ ボックスの項目ごとに生成されたコンテナーに適用されるスタイル。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.ItemContainerStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBox.ItemContainerStyle" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.ItemContainerStyle" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.MaxDropDownHeight">
      <summary>コンボ ボックスの項目を示すドロップ ダウンの最大の高さを取得または設定します。</summary>
      <returns>コンボ ボックスの項目を示すドロップ ダウンの最大の高さ。既定は無限大です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.ComboBox" /> のビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnCreateAutomationPeer">
      <summary>Windows Phone オートメーション インフラストラクチャで使用するための <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ComboBox" /> オブジェクトの <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnDropDownClosed(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.ComboBox.DropDownClosed" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnDropDownOpened(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.ComboBox.DropDownOpened" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.GotFocus" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベント データ</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostFocus" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>ユーザーの指がこのコントロールに入ったときに発生する <see cref="E:System.Windows.UIElement.MouseEnter" /> イベントの処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>ユーザーの指がコンボ ボックスから離れたときに発生する <see cref="E:System.Windows.UIElement.MouseLeave" /> イベントの処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>ユーザーがコンボ ボックスの境界内で画面に触れたときに発生する <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> イベントの処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseWheel" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.MouseWheelEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定された項目を表示するために、指定された要素を準備します。</summary>
      <param name="element">指定した項目の表示に使用されるコンテナー要素。</param>
      <param name="item">表示する項目。</param>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItem">
      <summary>選択ボックスに表示された項目を取得します。</summary>
      <returns>選択ボックスに表示された項目。</returns>
    </member>
    <member name="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate">
      <summary>選択ボックスのコンテンツに適用されるテンプレートを取得します。</summary>
      <returns>選択ボックスのコンテンツに適用されたテンプレート。</returns>
    </member>
    <member name="T:System.Windows.Controls.ComboBoxItem">
      <summary>
        <see cref="T:System.Windows.Controls.ComboBox" /> コントロールに含まれる選択可能な項目を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ComboBoxItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> イベントが発生すると呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ComboBoxItem.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationStarted" /> イベントが発生すると呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.ContentChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.RichTextBox.ContentChanged" /> イベントにデータを提供します。 </summary>
    </member>
    <member name="T:System.Windows.Controls.ContentChangedEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.RichTextBox.ContentChanged" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.ContentControl">
      <summary>単一のコンテンツを含むコントロールを表します。<see cref="T:System.Windows.Controls.Button" />、<see cref="T:System.Windows.Controls.CheckBox" />、<see cref="T:System.Windows.Controls.ScrollViewer" /> などのコントロールは、このクラスを直接的または間接的に継承しています。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ContentControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.Content">
      <summary>
        <see cref="T:System.Windows.Controls.ContentControl" /> 依存関係プロパティの値を取得または設定します。</summary>
      <returns>コントロールのコンテンツを格納するオブジェクト。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentControl.ContentTemplate">
      <summary>
        <see cref="T:System.Windows.Controls.ContentControl" /> のコンテンツを表示するために使用するデータ テンプレートを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ContentControl" /> のコンテンツを表示するために使用するデータ テンプレート。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentControl.ContentTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
      <summary>
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティの値が変更されたときに呼び出されます。</summary>
      <param name="oldContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティの変更前の値。</param>
      <param name="newContent">
        <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティの新しい値。</param>
    </member>
    <member name="T:System.Windows.Controls.ContentPresenter">
      <summary>
        <see cref="T:System.Windows.Controls.ContentControl" /> のコンテンツを表示します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ContentPresenter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ContentPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.Content">
      <summary>
        <see cref="T:System.Windows.Controls.ContentPresenter" /> の子要素を生成するために使用するデータを取得または設定します。</summary>
      <returns>子要素を生成するために使用するデータ。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentPresenter.Content" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ContentPresenter.ContentTemplate">
      <summary>コントロールのコンテンツを表示するために使用するテンプレートを取得または設定します。</summary>
      <returns>コンテンツの視覚化を定義する <see cref="T:System.Windows.DataTemplate" />。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ContentPresenter.ContentTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.Control">
      <summary>
        <see cref="T:System.Windows.Controls.ControlTemplate" /> を使用して外観を定義する UI 要素の基本クラスを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Control.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Control" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Control.ApplyTemplate">
      <summary>パーツを参照できるように関連するコントロール テンプレートを読み込みます。</summary>
      <returns>この呼び出しによってビジュアル ツリーが再構築されたかどうかを表す値を返します。true は、ツリーが再構築されたことを示します。false は、以前のビジュアル ツリーが保持されることを示します。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Background">
      <summary>コントロールの背景を提供するブラシを取得または設定します。</summary>
      <returns>コントロールの背景を提供するブラシ。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.Background" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.Background" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.BorderBrush">
      <summary>コントロールの境界線の背景を表すブラシを取得または設定します。</summary>
      <returns>コントロールの境界線を塗りつぶすために使用するブラシ。既定は null です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BorderBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.BorderBrush" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.BorderBrush" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.BorderThickness">
      <summary>コントロールの境界線の太さを取得または設定します。</summary>
      <returns>太さの値。既定値は、4 辺すべてにつき 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.BorderThicknessProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.BorderThickness" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.BorderThickness" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.CharacterSpacing">
      <summary>フォント サイズの 1/1000 単位で測定されるコントロール内のテキストの文字間の距離を取得または設定します。</summary>
      <returns>フォント サイズの 1/1000 単位で測定されるコントロール内のテキストの文字間の距離。既定値は 0 です。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Control.CharacterSpacingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.CharacterSpacing" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.CharacterSpacing" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.DefaultStyleKey">
      <summary>コントロールの既定のスタイルを参照するキーを取得または設定します。</summary>
      <returns>コントロールの既定のスタイルを参照するキー。スタイルを設定するコントロールの <see cref="T:System.Type" /> になっていないと、テーマ スタイルの参照の一部として正しく機能しません。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.DefaultStyleKeyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.DefaultStyleKey" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.DefaultStyleKey" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Control.Focus">
      <summary>コントロールへのフォーカスの設定を試行します。</summary>
      <returns>コントロールにフォーカスが設定されるか、フォーカスが既にコントロールにある場合は true。フォーカスをコントロールに設定できない場合は false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontFamily">
      <summary>コントロール内のテキストを表示するために使用されるフォントを取得または設定します。</summary>
      <returns>コントロールにテキストを表示するために使用するフォント。既定は "ポータブル ユーザー インターフェイス" です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontFamilyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.FontFamily" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.FontFamily" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontSize">
      <summary>このコントロールのテキストのサイズを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Control" /> 内のテキストのサイズ。既定は 11 (ピクセル) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontSizeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.FontStyle" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.FontStyle" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontStretch">
      <summary>画面上でフォントを縮小または拡大する度合いを取得または設定します。</summary>
      <returns>画面上でフォントを縮小または拡大する度合いを指定するいずれかの値。既定値は、<see cref="P:System.Windows.FontStretches.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontStretchProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.FontStretch" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.FontStretch" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontStyle">
      <summary>テキストをレンダリングするスタイルを取得または設定します。</summary>
      <returns>テキストをレンダリングするスタイルを指定するいずれかの値。既定値は、<see cref="P:System.Windows.FontStyles.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.FontStyle" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.FontStyle" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.FontWeight">
      <summary>指定したフォントの太さを取得または設定します。</summary>
      <returns>指定したフォントの太さを指定するいずれかの値。既定値は、<see cref="P:System.Windows.FontWeights.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.FontWeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.FontWeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.FontWeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Foreground">
      <summary>前景色を表すブラシを取得または設定します。</summary>
      <returns>コントロールの前景を描画するブラシ。既定値は <see cref="P:System.Windows.Media.Colors.Black" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.ForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.Foreground" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.Foreground" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Control.GetTemplateChild(System.String)">
      <summary>インスタンス化されている <see cref="T:System.Windows.Controls.ControlTemplate" /> ビジュアル ツリー内の名前付き要素を取得します。</summary>
      <returns>テンプレートからの名前付き要素 (見つかった場合)。名前 <paramref name="childName" /> を持つ要素がテンプレートで見つからなかった場合は null を返します。</returns>
      <param name="childName">検索する要素の名前。</param>
    </member>
    <member name="P:System.Windows.Controls.Control.HorizontalContentAlignment">
      <summary>コントロールのコンテンツの水平方向の配置を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.HorizontalAlignment" /> 値のいずれか。既定値は <see cref="F:System.Windows.HorizontalAlignment.Center" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.HorizontalContentAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.IsEnabled">
      <summary>ユーザーがコントロールを操作できるかどうかを示す値を取得または設定します。</summary>
      <returns>コントロールがユーザーとの対話に応答できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="E:System.Windows.Controls.Control.IsEnabledChanged">
      <summary>
        <see cref="P:System.Windows.Controls.Control.IsEnabled" /> プロパティが変更された場合に発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Control.IsEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.IsEnabled" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.IsEnabled" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.IsTabStop">
      <summary>コントロールがタブ ナビゲーションに含まれるかどうかを示す値を取得または設定します。</summary>
      <returns>コントロールがタブ ナビゲーションに含まれる場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.IsTabStopProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.IsTabStop" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.IsTabStop" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Control.OnDoubleTap(System.Windows.Input.GestureEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.DoubleTap" /> イベントが発生する前に呼び出されます。Windows Phone でのジェスチャの使用方法については、「[c79a8c3d-2e5b-4ca4-b9d5-f470420c232d]」を参照してください。</summary>
      <param name="e">イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnDragEnter(System.Windows.DragEventArgs)">
      <summary>領域内へのドラッグ イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnDragLeave(System.Windows.DragEventArgs)">
      <summary>領域外へのドラッグ イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnDragOver(System.Windows.DragEventArgs)">
      <summary>領域上へのドラッグ イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnDrop(System.Windows.DragEventArgs)">
      <summary>ドロップ イベントの発生前に呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.DragEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.GotFocus" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnHold(System.Windows.Input.GestureEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.Hold" /> イベントが発生する前に呼び出されます。Windows Phone でのジェスチャの使用方法については、「[c79a8c3d-2e5b-4ca4-b9d5-f470420c232d]」を参照してください。</summary>
      <param name="e">イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyUp" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostFocus" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostMouseCapture" /> イベントが発生する前に呼び出され、デリゲートをアタッチせずに、派生クラスでイベントを処理します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのイベント データ。Windows Phone での操作方法については、「[c79a8c3d-2e5b-4ca4-b9d5-f470420c232d]」を参照してください。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationDelta" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのイベント データ。Windows Phone での操作方法については、「[c79a8c3d-2e5b-4ca4-b9d5-f470420c232d]」を参照してください。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationStarted" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのイベント データ。Windows Phone での操作方法については、「[c79a8c3d-2e5b-4ca4-b9d5-f470420c232d]」を参照してください。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseEnter" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeave" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseMove" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>マウスの右ボタンを押すイベントが発生する前に呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>マウスの右ボタンを離すイベントが発生する前に呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseWheel" /> イベントが発生する前に呼び出され、デリゲートをアタッチせずに、派生クラスでイベントを処理します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.MouseWheelEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnTap(System.Windows.Input.GestureEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.Tap" /> イベントが発生する前に呼び出されます。Windows Phone でのジェスチャの使用方法については、「[c79a8c3d-2e5b-4ca4-b9d5-f470420c232d]」を参照してください。</summary>
      <param name="e">イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInput" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.TextCompositionEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnTextInputStart(System.Windows.Input.TextCompositionEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInputStart" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.TextCompositionEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Control.OnTextInputUpdate(System.Windows.Input.TextCompositionEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInputUpdate" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.TextCompositionEventArgs" /></param>
    </member>
    <member name="P:System.Windows.Controls.Control.Padding">
      <summary>コントロール内のスペースを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Control" /> のコンテンツとその <see cref="P:System.Windows.FrameworkElement.Margin" /> または <see cref="T:System.Windows.Controls.Border" /> との間のスペースの量。既定値は、4 辺すべてにつき 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.PaddingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.Padding" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.Padding" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.TabIndex">
      <summary>ユーザーが Tab キーを使用してコントロール間を移動するときに、要素がフォーカスを受ける順序を決定する値を取得または設定します</summary>
      <returns>デバイスの論理ナビゲーションの順序を決定する値。既定値は <see cref="F:System.Int32.MaxValue" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TabIndexProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.TabIndex" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.TabIndex" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.TabNavigation">
      <summary>このコントロールにおける Tab キーによる移動と <see cref="P:System.Windows.Controls.Control.TabIndex" /> の動作を変更する値を取得または設定します。</summary>
      <returns>列挙体の値。既定値は <see cref="F:System.Windows.Input.KeyboardNavigationMode.Local" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TabNavigationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.TabNavigation" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.TabNavigation" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.Template">
      <summary>コントロール テンプレートを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Control" /> の外観を定義するテンプレート。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.TemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.Template" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.Template" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Control.VerticalContentAlignment">
      <summary>コントロールのコンテンツの垂直方向の配置を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.VerticalAlignment" /> 値のいずれか。既定値は <see cref="F:System.Windows.VerticalAlignment.Center" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Control.VerticalContentAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Control.VerticalContentAlignment" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Control.VerticalContentAlignment" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.ControlTemplate">
      <summary>コントロール テンプレートとして適用される要素ツリーを定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ControlTemplate.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ControlTemplate" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ControlTemplate.TargetType">
      <summary>
        <see cref="T:System.Windows.Controls.ControlTemplate" /> の適用対象の型を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ControlTemplate" /> が適用される型。</returns>
    </member>
    <member name="T:System.Windows.Controls.DrawingSurface">
      <summary>ページの領域に Direct3D グラフィックスを描画できるコントロール。</summary>
    </member>
    <member name="M:System.Windows.Controls.DrawingSurface.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DrawingSurface" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DrawingSurface.SetContentProvider(System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.DrawingSurface" /> の描画操作を実行するオブジェクトを設定します。</summary>
      <param name="contentProviderInspectable">IDrawingSurfaceProvider インターフェイスを実装する Windows Phone ランタイム オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.DrawingSurface.SetManipulationHandler(System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.DrawingSurface" /> から操作イベントを受け取るオブジェクトを設定します。</summary>
      <param name="manipulationHandlerInspectable">IDrawingSurfaceManipulationHost インターフェイスを実装する Windows Phone ランタイム オブジェクト。</param>
    </member>
    <member name="T:System.Windows.Controls.DrawingSurfaceBackgroundGrid">
      <summary>アプリケーションの背景に Direct3D グラフィックスを描画できるコントロール。</summary>
    </member>
    <member name="M:System.Windows.Controls.DrawingSurfaceBackgroundGrid.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.DrawingSurfaceBackgroundGrid" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.DrawingSurfaceBackgroundGrid.SetBackgroundContentProvider(System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.DrawingSurfaceBackgroundGrid" /> の描画操作を実行するオブジェクトを設定します。</summary>
      <param name="backgroundContentProviderInspectable">IDrawingSurfaceBackgroundProvider インターフェイスを実装する Windows Phone ランタイム オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.DrawingSurfaceBackgroundGrid.SetBackgroundManipulationHandler(System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.DrawingSurfaceBackgroundGrid" /> から操作イベントを受け取るオブジェクトを設定します。</summary>
      <param name="backgroundManipulationHandlerInspectable">IDrawingSurfaceManipulationHost インターフェイスを実装する Windows Phone ランタイム オブジェクト。</param>
    </member>
    <member name="T:System.Windows.Controls.Grid">
      <summary>列と行で構成される柔軟なグリッド領域を定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> 要素のコンテンツを配置します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.Grid" /> 要素とその子の整列されたサイズを表す <see cref="T:System.Windows.Size" />。</returns>
      <param name="arrangeSize">この <see cref="T:System.Windows.Controls.Grid" /> 要素が子要素を配置するために使用すべきサイズを指定します。</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.Column">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> 内のどの列の子コンテンツを表示するかを示す値を取得または設定します。</summary>
      <returns>子コンテンツを表示する列を表す <see cref="T:System.Int32" /> 値。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.ColumnDefinitions">
      <summary>この <see cref="T:System.Windows.Controls.Grid" /> のインスタンスで定義されている <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" /> を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.Grid" /> のインスタンスで定義されている <see cref="T:System.Windows.Controls.ColumnDefinitionCollection" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ColumnProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.Column" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.Column" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.ColumnSpan">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> 内で子コンテンツがいくつの列にまたがって表示されるかを示す値を取得または設定します。</summary>
      <returns>子コンテンツがまたがる列数を表す <see cref="T:System.Int32" /> 値。既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ColumnSpanProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetColumn(System.Windows.FrameworkElement)">
      <summary>指定された <see cref="T:System.Windows.FrameworkElement" /> から <see cref="P:System.Windows.Controls.Grid.Column" /> 添付プロパティの値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.Column" /> 添付プロパティの値。これは 0 から始まるインデックスです。</returns>
      <param name="element">プロパティ値の読み取り元の要素。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetColumnSpan(System.Windows.FrameworkElement)">
      <summary>指定された <see cref="T:System.Windows.FrameworkElement" /> から <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 添付プロパティの値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 添付プロパティの値。</returns>
      <param name="element">プロパティ値の読み取り元の要素。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetRow(System.Windows.FrameworkElement)">
      <summary>指定された <see cref="T:System.Windows.FrameworkElement" /> から <see cref="P:System.Windows.Controls.Grid.Row" /> 添付プロパティの値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.Row" /> 添付プロパティの値。</returns>
      <param name="element">プロパティ値の読み取り元の要素。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.GetRowSpan(System.Windows.FrameworkElement)">
      <summary>指定された <see cref="T:System.Windows.FrameworkElement" /> から <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 添付プロパティの値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 添付プロパティの値。</returns>
      <param name="element">プロパティ値の読み取り元の要素。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)" /> パスにおいて、配置に備えて <see cref="T:System.Windows.Controls.Grid" /> の子を測定します。</summary>
      <returns>レイアウトの子コンテンツが使用できる最大領域を表す <see cref="T:System.Windows.Size" />。</returns>
      <param name="constraint">超えてはならない上限サイズを示します。</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.Row">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> 内のどの行の子コンテンツを表示するかを示す値を取得または設定します。</summary>
      <returns>子コンテンツを表示する行を表す <see cref="T:System.Int32" /> 値。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.RowDefinitions">
      <summary>この <see cref="T:System.Windows.Controls.Grid" /> のインスタンスで定義されている <see cref="T:System.Windows.Controls.RowDefinitionCollection" /> を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.Grid" /> のインスタンスで定義されている <see cref="T:System.Windows.Controls.RowDefinitionCollection" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.RowProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.Row" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.Row" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Grid.RowSpan">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> 内で子コンテンツがいくつの行にまたがって表示されるかを示す値を取得または設定します。</summary>
      <returns>子コンテンツがまたがる行数を表す <see cref="T:System.Int32" /> 値。既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.RowSpanProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetColumn(System.Windows.FrameworkElement,System.Int32)">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.Column" /> 添付プロパティの値を、指定された <see cref="T:System.Windows.FrameworkElement" /> に設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Grid.Column" /> 添付プロパティを設定する要素。</param>
      <param name="value">設定するプロパティ値。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetColumnSpan(System.Windows.FrameworkElement,System.Int32)">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 添付プロパティの値を、指定された <see cref="T:System.Windows.FrameworkElement" /> に設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Grid.ColumnSpan" /> 添付プロパティを設定する要素。</param>
      <param name="value">設定するプロパティ値。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetRow(System.Windows.FrameworkElement,System.Int32)">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.Row" /> 添付プロパティの値を、指定された <see cref="T:System.Windows.FrameworkElement" /> に設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Grid.Row" /> 添付プロパティを設定する要素。</param>
      <param name="value">設定するプロパティ値。</param>
    </member>
    <member name="M:System.Windows.Controls.Grid.SetRowSpan(System.Windows.FrameworkElement,System.Int32)">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 添付プロパティの値を、指定された <see cref="T:System.Windows.FrameworkElement" /> に設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Controls.Grid.RowSpan" /> 添付プロパティを設定する要素。</param>
      <param name="value">設定するプロパティ値。</param>
    </member>
    <member name="P:System.Windows.Controls.Grid.ShowGridLines">
      <summary>この <see cref="T:System.Windows.Controls.Grid" /> 内にグリッド線が表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>グリッド線を表示する場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Grid.ShowGridLinesProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Grid.ShowGridLines" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Grid.ShowGridLines" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.HyperlinkButton">
      <summary>ハイパーリンクを表示するボタン コントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.HyperlinkButton.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.HyperlinkButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.HyperlinkButton.NavigateUri">
      <summary>
        <see cref="T:System.Windows.Controls.HyperlinkButton" /> がタップされたときの移動先 URI を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.HyperlinkButton" /> がタップされたときの移動先 URI。</returns>
    </member>
    <member name="F:System.Windows.Controls.HyperlinkButton.NavigateUriProperty">
      <summary>
        <see cref="P:System.Windows.Controls.HyperlinkButton.NavigateUri" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.HyperlinkButton.NavigateUri" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.HyperlinkButton.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.HyperlinkButton" /> のビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.HyperlinkButton.OnClick">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントに対する処理を提供します。</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Windows.Controls.HyperlinkButton.NavigateUri" /> プロパティは絶対 URI でないか、または絶対 URI に変換できません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Controls.HyperlinkButton.TargetName" /> プロパティは埋め込み空白文字を含む値に設定されます。</exception>
    </member>
    <member name="M:System.Windows.Controls.HyperlinkButton.OnCreateAutomationPeer">
      <summary>Windows Phone オートメーション インフラストラクチャで使用するための <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer" /> を返します。</summary>
      <returns>ハイパーリンク ボタン オブジェクトの <see cref="T:System.Windows.Automation.Peers.HyperlinkButtonAutomationPeer" />。 </returns>
    </member>
    <member name="P:System.Windows.Controls.HyperlinkButton.TargetName">
      <summary>
        <see cref="T:System.Windows.Controls.HyperlinkButton" /> のターゲットの名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.HyperlinkButton" /> のターゲットの名前。</returns>
    </member>
    <member name="F:System.Windows.Controls.HyperlinkButton.TargetNameProperty">
      <summary>
        <see cref="P:System.Windows.Controls.HyperlinkButton.TargetName" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.HyperlinkButton.TargetName" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.Image">
      <summary>JPEG または PNG ファイル形式で画像を表示するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Image.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Image" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Image.ImageFailed">
      <summary>イメージの取得または形式に関連付けられているエラーが発生したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Image.ImageOpened">
      <summary>エラーが発生することなくイメージ ソースがダウンロードおよびデコードされたときに発生します。このイベントを使用して、描画する前にイメージのサイズを判定できます。</summary>
    </member>
    <member name="P:System.Windows.Controls.Image.Source">
      <summary>画像ソースを取得または設定します。</summary>
      <returns>描かれた画像のソース オブジェクト。</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.SourceProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Image.Source" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Image.Source" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Image.Stretch">
      <summary>
        <see cref="T:System.Windows.Controls.Image" /> を表示先の四角形全体に引き伸ばす方法を表す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Stretch" />
        <see cref="T:System.Windows.Controls.Image" /> の <see cref="P:System.Windows.FrameworkElement.Height" /> と <see cref="P:System.Windows.FrameworkElement.Width" /> が指定され、ソース イメージの高さと幅とは異なる場合、ソース イメージの適用方法を示す列挙値。既定値は Uniform です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Image.StretchProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Image.Stretch" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Image.Stretch" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.INavigate">
      <summary>Windows Phone アプリケーションでの内部ナビゲーションの方法を定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.INavigate.Navigate(System.Uri)">
      <summary>指定された URI に置かれるコンテンツを表示します。</summary>
      <returns>コンテンツが正常に表示された場合は true。それ以外の場合は false。</returns>
      <param name="source">表示するコンテンツの URI。</param>
    </member>
    <member name="T:System.Windows.Controls.InkPresenter">
      <summary>インク ストロークを表示する四角形のサーフェイスを実装します。</summary>
    </member>
    <member name="M:System.Windows.Controls.InkPresenter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.InkPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.InkPresenter.Strokes">
      <summary>
        <see cref="T:System.Windows.Controls.InkPresenter" /> が表示するストロークを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.InkPresenter" /> によって表示されるインク ストロークのコレクション。</returns>
    </member>
    <member name="F:System.Windows.Controls.InkPresenter.StrokesProperty">
      <summary>
        <see cref="P:System.Windows.Controls.InkPresenter.Strokes" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.InkPresenter.Strokes" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.ItemCollection">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> のコンテンツを表す項目のリストを保持します。</summary>
    </member>
    <member name="E:System.Windows.Controls.ItemCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary>コレクションの項目リストが変更されたとき、またはコレクションがリセットされたときに発生します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ItemContainerGenerator">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> の項目とコンテナー要素間のマッピングを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromIndex(System.Int32)">
      <summary>
        <see cref="T:System.Windows.Controls.ItemCollection" /> 内で指定されたインデックス位置の項目コンテナーを返します。</summary>
      <returns>項目がコンテナーを持つ場合は、項目コレクション内の指定されたインデックス位置の項目のコンテナー。それ以外の場合は null。</returns>
      <param name="index">取得する項目のインデックス。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem(System.Object)">
      <summary>指定された項目に対応するコンテナーを返します。</summary>
      <returns>項目がコンテナーを持ち、コレクション内に存在する場合は、指定された項目に対応するコンテナー。それ以外の場合は null。</returns>
      <param name="item">コンテナーを取得する項目。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)">
      <summary>指定されたインデックス位置の項目が生成された位置を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> によって生成された項目の位置。</returns>
      <param name="itemIndex">位置を取得する項目のインデックス。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject)">
      <summary>指定された、生成されたコンテナーを持つ項目にインデックスを返します。</summary>
      <returns>指定され、生成されたコンテナーに対応する項目へのインデックス。</returns>
      <param name="container">項目インデックスを取得する生成されたコンテナー。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>指定した <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> にマッピングするインデックスを返します。</summary>
      <returns>指定した <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> にマッピングするインデックスである <see cref="T:System.Int32" />。</returns>
      <param name="position">目的のインデックスの <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.ItemFromContainer(System.Windows.DependencyObject)">
      <summary>指定され、生成されたコンテナーに対応する項目を返します。</summary>
      <returns>含まれている項目、または項目を含まない場合はコンテナー。</returns>
      <param name="container">返す対象の項目に対応する <see cref="T:System.Windows.DependencyObject" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="container" /> が null です。</exception>
    </member>
    <member name="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged">
      <summary>項目コレクションのコンテンツが変わるときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GenerateNext(System.Boolean@)">
      <summary>次の項目の表示に使用されるコンテナー要素と、コンテナー要素が新しく生成されたか (実現されたか) どうかを返します。</summary>
      <returns>次の項目を表示するために使用されるコンテナー要素である <see cref="T:System.Windows.DependencyObject" />。</returns>
      <param name="isNewlyRealized">返される <see cref="T:System.Windows.DependencyObject" /> が新しく生成された (実現された) 場合は true。それ以外の場合は false。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
      <summary>指定したパネルでの使用に適した <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> を返します。</summary>
      <returns>指定したパネルでの使用に適した <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</returns>
      <param name="panel">適切な <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> を返すパネル。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#PrepareItemContainer(System.Windows.DependencyObject)">
      <summary>対応する項目のコンテナーとして、指定された要素を準備します。</summary>
      <param name="container">準備するコンテナー。通常、<paramref name="container" /> は <see cref="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)" /> の前回の呼び出しの結果です。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>生成された (実現された) 項目を 1 つ以上削除します。</summary>
      <param name="position">削除する要素の <see cref="T:System.Int32" /> インデックス。<paramref name="position" /> は、以前生成した (実現した) 項目を参照する必要があります。つまり、そのオフセットはゼロである必要があります。</param>
      <param name="count">
        <paramref name="position" /> を先頭に、削除する要素の数の <see cref="T:System.Int32" /> 値。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#RemoveAll">
      <summary>生成された (実現された) 項目をすべて削除します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IItemContainerGenerator#StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
      <summary>指定した <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> から開始して、指定した <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" /> でジェネレーターが項目を生成する準備をし、生成した (実現した) 項目で開始するかどうかを制御します。</summary>
      <returns>生成プロセスの有効期間を追跡する <see cref="T:System.IDisposable" /> オブジェクト。</returns>
      <param name="position">項目の生成を開始する項目の位置を指定する <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</param>
      <param name="direction">項目の生成を開始する項目の位置を指定します。</param>
      <param name="allowStartAtRealizedItem">生成された (実現された) 項目で開始するかどうかを指定する <see cref="T:System.Boolean" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemContainerGenerator.System#Windows#Controls#Primitives#IRecyclingItemContainerGenerator#Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>他のデータ項目に後から再使用できるように、項目コンテナーとそれらのデータ項目との関連付けを解除し、コンテナーを保存します。</summary>
      <param name="position">再利用する最初の要素の 0 から始まるインデックス番号。<paramref name="position" /> は、以前生成した (実現した) 項目を参照する必要があります。</param>
      <param name="count">
        <paramref name="position" /> から始めて、再利用する要素の数。</param>
    </member>
    <member name="T:System.Windows.Controls.ItemsControl">
      <summary>項目のコレクションを提示するために使用できるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
        <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> メソッドの実行結果を元に戻します。</summary>
      <param name="element">コンテナー要素。</param>
      <param name="item">項目。</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.DisplayMemberPath">
      <summary>データ アイテムごとに表示されるプロパティ名またはプロパティのパスを取得または設定します。</summary>
      <returns>コントロール内のデータ項目ごとに表示されるプロパティ名またはプロパティのパス。既定値は空の文字列 ("") です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.DisplayMemberPathProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetContainerForItemOverride">
      <summary>指定された項目の表示に使用する要素を作成または識別します。</summary>
      <returns>指定された項目の表示に使用する要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.GetItemsOwner(System.Windows.DependencyObject)">
      <summary>指定された要素がホストする項目が格納されている <see cref="T:System.Windows.Controls.ItemsControl" /> を返します。</summary>
      <returns>指定された要素が項目をホストする <see cref="T:System.Windows.Controls.ItemsControl" />、または null。</returns>
      <param name="element">ホスト要素。</param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainerOverride(System.Object)">
      <summary>指定された項目が自身のコンテナーかどうか (または自身のコンテナーにすることができるかどうか) を判断します。</summary>
      <returns>項目が自身のコンテナーである (または自身のコンテナーにすることができる) 場合は true。それ以外の場合は false。</returns>
      <param name="item">確認する項目。</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator">
      <summary>この <see cref="T:System.Windows.Controls.ItemsControl" /> に関連付けられている <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ItemsControl" /> に関連付けられている <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.Items">
      <summary>コントロールのコンテンツを生成するのに使用されるコレクションを取得します。</summary>
      <returns>存在する場合はコントロールのコンテンツの生成に使用されるコレクション。それ以外の場合は null。既定値は空のコレクションです。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)">
      <summary>指定されたコンテナー要素を所有する <see cref="T:System.Windows.Controls.ItemsControl" /> を返します。</summary>
      <returns>指定されたコンテナー要素を所有する <see cref="T:System.Windows.Controls.ItemsControl" />。それ以外の場合は null。<paramref name="container" /> が <see cref="T:System.Windows.UIElement" /> でないか、親が <see cref="T:System.Windows.Controls.ItemsControl" /> でない場合、<see cref="M:System.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)" /> メソッドは null を返します。</returns>
      <param name="container">
        <see cref="T:System.Windows.Controls.ItemsControl" /> を返す対象のコンテナー要素。</param>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemsPanel">
      <summary>項目のレイアウトを制御するパネルを定義するテンプレートを取得または設定します。</summary>
      <returns>項目のレイアウトに使用するパネルを定義する <see cref="T:System.Windows.Controls.ItemsPanelTemplate" />。<see cref="T:System.Windows.Controls.ItemsControl" /> の既定値は、<see cref="T:System.Windows.Controls.StackPanel" /> を指定する <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemsPanelProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemsSource">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> のコンテンツの生成に使用するコレクションを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ItemsControl" /> のコンテンツを生成するのに使用されるオブジェクト。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemsSourceProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ItemsControl.ItemTemplate">
      <summary>各項目を表示するために使用する <see cref="T:System.Windows.DataTemplate" /> を取得または設定します。</summary>
      <returns>データ オブジェクトの表示を指定するテンプレート。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ItemsControl.ItemTemplateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.Items" /> プロパティの値が変更されたときに呼び出されます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" /></param>
    </member>
    <member name="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定された項目を表示するために、指定された要素を準備します。</summary>
      <param name="element">指定された項目を表示するために使用する要素。</param>
      <param name="item">表示する項目。</param>
    </member>
    <member name="T:System.Windows.Controls.ItemsPanelTemplate">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> の項目のレイアウト用に <see cref="T:System.Windows.Controls.ItemsPresenter" /> が作成するパネルを指定します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPanelTemplate.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> クラスの新しいインスタンスを初期化します。 </summary>
    </member>
    <member name="T:System.Windows.Controls.ItemsPresenter">
      <summary>コントロール (通常は <see cref="T:System.Windows.Controls.ItemsControl" />) への項目の配置位置を指定します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ItemsPresenter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsPresenter" /> クラスの新しいインスタンスを初期化します。 </summary>
    </member>
    <member name="T:System.Windows.Controls.ListBox">
      <summary>選択可能な項目の一覧が含まれます。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBox.GetContainerForItemOverride">
      <summary>指定された項目の表示に使用する要素を作成または識別します。</summary>
      <returns>指定された項目に対応している <see cref="T:System.Windows.Controls.ListBoxItem" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.IsItemItsOwnContainerOverride(System.Object)">
      <summary>指定された項目が自身の項目コンテナーかどうか (または自身の項目コンテナーにすることができるかどうか) を判断します。</summary>
      <returns>項目が自身の項目コンテナーである場合は true。それ以外の場合は false。</returns>
      <param name="item">指定した項目。</param>
    </member>
    <member name="F:System.Windows.Controls.ListBox.IsSelectionActiveProperty">
      <summary>IsSelectionActive 依存関係プロパティを識別します。</summary>
      <returns>IsSelectionActive 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ListBox.ItemContainerStyle">
      <summary>項目コンテナーを表示するときに使用するスタイルを取得または設定します。</summary>
      <returns>項目コンテナーに適用されるスタイル。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBox.ItemContainerStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ListBox.ItemContainerStyle" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ListBox.ItemContainerStyle" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.ListBox" /> コントロールのビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnCreateAutomationPeer">
      <summary>Windows Phone オートメーション インフラストラクチャの <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" /> を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ListBox" /> オブジェクトの <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.GotFocus" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>このコントロールにフォーカスがある状態でキーを押したときに発生する <see cref="E:System.Windows.UIElement.KeyDown" /> イベントの処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostFocus" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.ScrollIntoView(System.Object)">
      <summary>オブジェクトをスクロールして表示します。</summary>
      <param name="item">スクロールするオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBox.SelectAll">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> 内の項目をすべて選択します。</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> が <see cref="F:System.Windows.Controls.SelectionMode.Single" /> に設定されます。</exception>
    </member>
    <member name="P:System.Windows.Controls.ListBox.SelectedItems">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> コントロールの現在選択されている項目の一覧を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ListBox" /> に現在選択されている項目の一覧。</returns>
    </member>
    <member name="P:System.Windows.Controls.ListBox.SelectionMode">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> コントロールの選択動作を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.SelectionMode" /> 値のいずれか。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBox.SelectionModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ListBox.SelectionMode" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.ListBoxItem">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> 内の選択可能な項目を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ListBoxItem" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ListBoxItem.IsSelected">
      <summary>
        <see cref="T:System.Windows.Controls.ListBoxItem" /> が選択されているかどうかを示す値を取得または設定します。</summary>
      <returns>項目が選択されている場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ListBoxItem.IsSelectedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ListBoxItem.IsSelected" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ListBoxItem.IsSelected" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.ListBoxItem" /> コントロールのビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnCreateAutomationPeer">
      <summary>Windows Phone オートメーション インフラストラクチャの <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" /> を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ListBoxItem" /> の <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.GotFocus" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostFocus" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> イベントが発生すると呼び出されます。このメンバーは <see cref="M:System.Windows.Controls.Control.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)" /> をオーバーライドします。</summary>
      <param name="e">イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationStarted" /> イベントが発生すると呼び出されます。このメンバーは <see cref="M:System.Windows.Controls.Control.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)" /> をオーバーライドします。</summary>
      <param name="e">イベントのイベント データ。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseEnter" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeave" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.ManipulationMode">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 動作に関する操作の処理方法を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ManipulationMode.Control">
      <summary>コントロールは独自の対話機能を処理し、プロパティの更新とコントロールが含まれる <see cref="T:System.Windows.Controls.ScrollViewer" /> の操作イベントにアクセスできます。</summary>
    </member>
    <member name="F:System.Windows.Controls.ManipulationMode.System">
      <summary>システムは対話機能のレベルをコントロールし、プロパティの更新の頻度と <see cref="T:System.Windows.Controls.ScrollViewer" /> コントロールに含まれるコントロールに使用できる操作イベントを制限します。 </summary>
    </member>
    <member name="T:System.Windows.Controls.MediaElement">
      <summary>オーディオ、ビデオまたは両方を含むオブジェクトを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> クラスの新しいインスタンスを生成します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.AudioStreamCount">
      <summary>現在のメディア ファイルで使用可能なオーディオ ストリームの数を取得します。</summary>
      <returns>ソース メディア ファイルに存在するオーディオ ストリ-ム数。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.AudioStreamCountProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.AudioStreamCount" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.AudioStreamCount" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.AudioStreamIndex">
      <summary>ビデオ コンポーネントと共に再生するオーディオ ストリームのインデックスを取得または設定します。オーディオ ストリームのコレクションは実行時に構成され、メディア ファイル内で使用可能なオーディオ ストリームすべてを表します。</summary>
      <returns>ビデオ コンポーネントと共に再生するオーディオ コンポーネントのメディア ファイル内のインデックス。インデックスを未指定にできます。その場合の値は null になります。既定値は null です (「備考」セクション参照)。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.AudioStreamIndexProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.AudioStreamIndex" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.AudioStreamIndex" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.AutoPlay">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.Source" /> プロパティが設定された場合に、メディアが自動的に再生を開始するかどうかを示す値を取得または設定します。</summary>
      <returns>自動的に再生を開始する場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.AutoPlayProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.AutoPlay" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.AutoPlay" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Balance">
      <summary>左右のステレオ スピーカーのボリュームの比率を取得または設定します。</summary>
      <returns>スピーカー全体の音量比は、-1 ～ 1 の範囲です。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BalanceProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.Balance" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.Balance" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.BufferingProgress">
      <summary>現在のバッファリングの進行状況を表す値を取得します。</summary>
      <returns>メディア コンテンツで完了されたバッファー処理量。値の範囲は 0 ～ 1 です。100 を乗算してパーセンテージを算出します。既定値は 0 です。</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.BufferingProgressChanged">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.BufferingProgress" /> プロパティが変更された場合に発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BufferingProgressProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.BufferingProgress" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.BufferingProgress" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.BufferingTime">
      <summary>バッファー処理する時間数を取得または設定します。</summary>
      <returns>バッファー処理する時間数。既定値は、<see cref="T:System.TimeSpan" /> 値の 5 秒 (0:0:05) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.BufferingTimeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.BufferingTime" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.BufferingTime" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.CanPause">
      <summary>
        <see cref="M:System.Windows.Controls.MediaElement.Pause" /> メソッドが呼び出されたときにメディアを一時停止できるかどうかを示す値を取得します。</summary>
      <returns>メディアを一時停止できる場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.CanPauseProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.CanPause" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.CanPause" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.CanSeek">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.Position" /> プロパティの値を設定してメディアを再配置できるかどうかを示す値を取得します。</summary>
      <returns>メディアを再配置できる場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.CanSeekProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.CanSeek" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.CanSeek" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.CurrentState">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> の状態を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MediaElement" /> の現在の状態。状態を次のいずれかにできます (<see cref="T:System.Windows.Media.MediaElementState" /> 列挙体で定義したとおり):<see cref="F:System.Windows.Media.MediaElementState.Buffering" />、<see cref="F:System.Windows.Media.MediaElementState.Closed" />、<see cref="F:System.Windows.Media.MediaElementState.Opening" />、<see cref="F:System.Windows.Media.MediaElementState.Paused" />、<see cref="F:System.Windows.Media.MediaElementState.Playing" />、または <see cref="F:System.Windows.Media.MediaElementState.Stopped" />。既定値は <see cref="F:System.Windows.Media.MediaElementState.Closed" /> です。</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.CurrentStateChanged">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.CurrentState" /> プロパティの値が変更された場合に発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.CurrentStateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.CurrentState" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.CurrentState" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.DownloadProgress">
      <summary>リモート サーバーにあるコンテンツのダウンロードが完了した量を示すパーセント値を取得します。</summary>
      <returns>リモート サーバーにあるコンテンツのダウンロードが完了した量を示す値。値の範囲は 0 ～ 1 です。100 を乗算してパーセンテージを算出します。既定値は 0 です。</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.DownloadProgressChanged">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.DownloadProgress" /> プロパティが変更された場合に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.DownloadProgressOffset">
      <summary>ダウンロードの進行状況のオフセットを取得します。</summary>
      <returns>ダウンロード進行状況のオフセット。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.DownloadProgressOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.DownloadProgressOffset" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.DownloadProgressOffset" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.DownloadProgressProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.DownloadProgress" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.DownloadProgress" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.DroppedFramesPerSecond">
      <summary>メディアによりドロップされた 1 秒あたりのフレーム数を取得します。</summary>
      <returns>メディアによりドロップされた 1 秒あたりのフレーム数。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.DroppedFramesPerSecondProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.DroppedFramesPerSecond" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.DroppedFramesPerSecond" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.IsMuted">
      <summary>オーディオがミュートされているかどうかを示す値を取得または設定します。</summary>
      <returns>オーディオがミュートされている場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.IsMutedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.IsMuted" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.IsMuted" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.LicenseAcquirer">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> に関連付けられた <see cref="T:System.Windows.Media.LicenseAcquirer" /> を取得または設定します。<see cref="T:System.Windows.Media.LicenseAcquirer" /> は、DRM で暗号化されたコンテンツのライセンスの取得を処理します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MediaElement" /> に関連付けられている <see cref="T:System.Windows.Media.LicenseAcquirer" />。既定値は null です。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="T:System.Windows.Media.LicenseAcquirer" /> が null です。</exception>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.LogReady">
      <summary>ログが準備完了のときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MarkerReached">
      <summary>メディアの再生中にタイムライン マーカーが検出されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Markers">
      <summary>現在読み込まれているメディア ファイルと関連付けられたタイムライン マーカーのコレクションを取得します。</summary>
      <returns>現在読み込まれているメディア ファイルと関連付けられたタイムライン マーカーのコレクション (<see cref="T:System.Windows.Media.TimelineMarker" /> オブジェクトとして表される)。既定値は空のコレクションです。</returns>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaEnded">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> でオーディオまたはビデオが再生されなくなると発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaFailed">
      <summary>メディアの <see cref="P:System.Windows.Controls.MediaElement.Source" /> に関連するエラーがある場合に発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.MediaElement.MediaOpened">
      <summary>メディア ストリームが検証され、開かれ、ファイル ヘッダーが読み取られたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalDuration">
      <summary>現在開いているメディア ファイルの継続時間を取得します。</summary>
      <returns>メディアの未加工の継続時間。既定値は <see cref="P:System.Windows.Duration.Automatic" /> で、これは <see cref="E:System.Windows.Controls.MediaElement.MediaOpened" /> の前にこのプロパティを照会した場合に保持されている値です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.NaturalDurationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.NaturalDuration" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.NaturalDuration" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalVideoHeight">
      <summary>メディアに関連付けられているビデオの高さを取得します。</summary>
      <returns>メディアと関連付けられたビデオの高さ (ピクセル)。オーディオ ファイルは 0 を返します。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.NaturalVideoHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.NaturalVideoHeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.NaturalVideoHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.NaturalVideoWidth">
      <summary>メディアに関連付けられているビデオの幅を取得します。</summary>
      <returns>メディアに関連付けられているビデオの幅。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.NaturalVideoWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.NaturalVideoWidth" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.NaturalVideoWidth" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Pause">
      <summary>メディアを現在の位置で一時停止します。</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Play">
      <summary>メディアを現在の位置から再生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Position">
      <summary>メディアの再生の経過時間を示す現在の位置を取得または設定します。</summary>
      <returns>メディアの先頭からの経過時間。既定値は値 0:0:0 の <see cref="T:System.TimeSpan" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.PositionProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.Position" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.Position" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.RenderedFramesPerSecond">
      <summary>メディアによってレンダリングされる 1 秒あたりのフレーム数を取得します。</summary>
      <returns>メディアによってレンダリングされる 1 秒あたりのフレーム数。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.RenderedFramesPerSecondProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.RenderedFramesPerSecond" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.RenderedFramesPerSecond" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.RequestLog">
      <summary>ログを生成する要求を送信します。ログは、<see cref="E:System.Windows.Controls.MediaElement.LogReady" /> イベントを通して発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.SetSource(System.IO.Stream)">
      <summary>指定されたストリームを使用して <see cref="P:System.Windows.Controls.MediaElement.Source" /> プロパティを設定します。</summary>
      <param name="stream">ネイティブでサポートされたメディア ソースを含むストリーム。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.SetSource(System.Windows.Media.MediaStreamSource)">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> のソースを <see cref="T:System.Windows.Media.MediaStreamSource" /> のサブクラスに設定します。</summary>
      <param name="mediaStreamSource">
        <see cref="T:System.Windows.Media.MediaStreamSource" /> のサブクラス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mediaStreamSource" /> が null です。</exception>
      <exception cref="T:System.InvalidOperationException">指定された <paramref name="mediaStreamSource" /> が無効または存在しません。</exception>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Source">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> のメディア ソースを取得または設定します。</summary>
      <returns>要素のソースを URI (Uniform Resource Identifier) として指定する文字列。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.SourceProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.Source" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.Source" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.MediaElement.Stop">
      <summary>メディアを停止し、最初から再生されるようにリセットします。</summary>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Stretch">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> が表示先の四角形を埋める方法を表す <see cref="T:System.Windows.Media.Stretch" /> 値を取得または設定します。</summary>
      <returns>レンダリングされたメディアの拡大動作を指定する列挙型の値。既定値は Uniform です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.StretchProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.Stretch" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.Stretch" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MediaElement.Volume">
      <summary>メディアのボリュームを取得または設定します。</summary>
      <returns>0 ～ 1 の範囲内の線形スケール上のメディアのボリューム。既定値は 0.5 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MediaElement.VolumeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MediaElement.Volume" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MediaElement.Volume" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.MultiScaleImage">
      <summary>ユーザーがズームやパンに対応した多重解像度画像を開くことができるようにします。</summary>
    </member>
    <member name="M:System.Windows.Controls.MultiScaleImage.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.AllowDownloading">
      <summary>ダウンロードがこの <see cref="T:System.Windows.Controls.MultiScaleImage" /> によって許可されているかどうかを示す値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.MultiScaleImage" /> によってダウンロードが許可される場合は true。この <see cref="T:System.Windows.Controls.MultiScaleImage" /> によってダウンロードが許可されない場合は false。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.AllowDownloadingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleImage.AllowDownloading" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleImage.AllowDownloading" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.AspectRatio">
      <summary>
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> のソースとして使用されているイメージの縦横比を取得します。縦横比は、イメージの幅を高さで除算した値です。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> のソースとして使用されるイメージの縦横比。縦横比は、イメージの幅を高さで除算した値です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.AspectRatioProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleImage.AspectRatio" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleImage.AspectRatio" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.BlurFactor">
      <summary>レンダリング中にデータを不鮮明にする度合いを示す値を取得または設定します。</summary>
      <returns>レンダリング中にデータを不鮮明にする度合いを示す値。値 2 は不鮮明度が 2 倍の (1 レベル下位の) データを使用することを示し、値 0.5 はより鮮明なデータ (1 レベル上位の) を使用することを意味します。既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.BlurFactorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleImage.BlurFactor" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleImage.BlurFactor" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.MultiScaleImage.ElementToLogicalPoint(System.Windows.Point)">
      <summary>
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> の点から、論理座標の点 (値の範囲は 0 ～ 1) を取得します。</summary>
      <returns>
        <paramref name="elementPoint" /> から変換された論理点。</returns>
      <param name="elementPoint">論理座標の点 (値の範囲は 0 ～ 1) に変換する <see cref="T:System.Windows.Controls.MultiScaleImage" /> 上の点。</param>
    </member>
    <member name="E:System.Windows.Controls.MultiScaleImage.ImageFailed">
      <summary>タイルのダウンロードがタイムアウトになったかまたは他の理由で失敗した場合に発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.MultiScaleImage.ImageOpenFailed">
      <summary>画像を開くために必要な最初のメタデータでエラーが発生した場合に発生します。このイベントが発生した場合、どの部分の画像も正常に開けません。</summary>
    </member>
    <member name="E:System.Windows.Controls.MultiScaleImage.ImageOpenSucceeded">
      <summary>タイルの残りを読み込むのに必要な最初のメタデータが開いたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.IsDownloading">
      <summary>画像がまだダウンロード中かどうかを示す値を取得します。</summary>
      <returns>画像がまだダウンロード中の場合は true。必要なタイルがすべてダウンロードされた場合は false。画像を移動した場合、<see cref="P:System.Windows.Controls.MultiScaleImage.IsDownloading" /> が再度 true になることがあります。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.IsDownloadingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleImage.IsDownloading" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleImage.IsDownloading" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.IsIdle">
      <summary>Deep Zoom による画像のダウンロード、デコード、ブレンディング、およびアニメーション化 (スプリングを使用している場合) が完了しているかどうかを示す値を取得します。</summary>
      <returns>Deep Zoom による画像のダウンロード、デコード、ブレンディング、およびアニメーション化 (スプリングを使用している場合) が完了している場合は true。それ以外の場合は false を返します。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.IsIdleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleImage.IsIdle" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleImage.IsIdle" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.MultiScaleImage.LogicalToElementPoint(System.Windows.Point)">
      <summary>論理点 (値の範囲は 0 ～ 1) から、<see cref="T:System.Windows.Controls.MultiScaleImage" /> を基準としたピクセル座標の点を取得します。</summary>
      <returns>
        <paramref name="logicalPoint" /> から <see cref="T:System.Windows.Controls.MultiScaleImage" /> を基準としたピクセル座標に変換した点。</returns>
      <param name="logicalPoint">
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> を基準としたピクセル座標に変換する論理点。</param>
    </member>
    <member name="E:System.Windows.Controls.MultiScaleImage.MotionFinished">
      <summary>アニメーションのズームまたはパンが終了したときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.SkipLevels">
      <summary>
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> の読み込み中にスキップされるレベルを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> の読み込み中にスキップされるレベルを示す整数。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.SkipLevelsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleImage.SkipLevels" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleImage.SkipLevels" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.Source">
      <summary>
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> のソースとして使用される <see cref="T:System.Windows.Media.MultiScaleTileSource" /> オブジェクトを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> のソースとして使用される <see cref="T:System.Windows.Media.MultiScaleTileSource" /> オブジェクト。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.SourceProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleImage.Source" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleImage.Source" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.SubImages">
      <summary>
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> で使用されている多重解像度画像内の <see cref="T:System.Windows.Controls.MultiScaleSubImage" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> によって使用される多重解像度画像内の <see cref="T:System.Windows.Controls.MultiScaleSubImage" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.SubImagesProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleImage.SubImages" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleImage.SubImages" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.UseSprings">
      <summary>
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> にスプリング アニメーションを使用するかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> がスプリング アニメーションを使用する場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.UseSpringsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleImage.UseSprings" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleImage.UseSprings" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="E:System.Windows.Controls.MultiScaleImage.ViewportChanged">
      <summary>ビューポート (イメージが表示される領域) が変更されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.ViewportOrigin">
      <summary>表示される画像領域の左上隅のポイントを取得または設定します。</summary>
      <returns>表示される画像の矩形領域の左上隅。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.ViewportOriginProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleImage.ViewportOrigin" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleImage.ViewportOrigin" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleImage.ViewportWidth">
      <summary>表示されるイメージの領域の幅を取得または設定します。</summary>
      <returns>表示されるイメージの領域の幅。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleImage.ViewportWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleImage.ViewportWidth" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleImage.ViewportWidth" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.MultiScaleImage.ZoomAboutLogicalPoint(System.Double,System.Double,System.Double)">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.MultiScaleImage" /> の点を中心に拡大表示できるようにします。</summary>
      <param name="zoomIncrementFactor">拡大倍率を指定します。これは 0 より大きい数値です。1 は、割り当てられたページ サイズに画像を完全に合わせることを指定します。1 より大きい数値は、拡大を指定します。0 以下の値を使用すると、エラーが返され、ズーム変更が適用されません。</param>
      <param name="zoomCenterLogicalX">拡大表示の中心点となる <see cref="T:System.Windows.Controls.MultiScaleImage" /> 上の X 座標。これは論理ポイント (0 と 1 の間) です。</param>
      <param name="zoomCenterLogicalY">拡大表示の中心点となる <see cref="T:System.Windows.Controls.MultiScaleImage" /> 上の Y 座標。これは論理ポイント (0 と 1 の間) です。</param>
    </member>
    <member name="T:System.Windows.Controls.MultiScaleSubImage">
      <summary>このクラスは、<see cref="T:System.Windows.Controls.MultiScaleImage" /> 内の各サブイメージのプロパティを格納します。</summary>
    </member>
    <member name="M:System.Windows.Controls.MultiScaleSubImage.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.MultiScaleSubImage" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleSubImage.AspectRatio">
      <summary>
        <see cref="T:System.Windows.Controls.MultiScaleSubImage" /> のソースとして使用されているイメージの縦横比を取得します。縦横比は、イメージの幅を高さで除算した値です。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MultiScaleSubImage" /> のソースとして使用されるイメージの縦横比。縦横比は、イメージの幅を高さで除算した値です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleSubImage.AspectRatioProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleSubImage.AspectRatio" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleSubImage.AspectRatio" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleSubImage.Opacity">
      <summary>
        <see cref="T:System.Windows.Controls.MultiScaleSubImage" /> の不透明度を取得または設定します。</summary>
      <returns>不透明度を宣言する 0 と 1.0 の間の値。1.0 は完全不透明を意味し、0 は透明を意味します。既定値は 1.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleSubImage.OpacityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleSubImage.Opacity" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleSubImage.Opacity" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleSubImage.ViewportOrigin">
      <summary>表示される画像領域の左上隅のポイントを取得または設定します。</summary>
      <returns>表示される画像の矩形領域の左上隅ポイント。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleSubImage.ViewportOriginProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleSubImage.ViewportOrigin" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleSubImage.ViewportOrigin" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleSubImage.ViewportWidth">
      <summary>表示されるイメージの領域の幅を取得または設定します。</summary>
      <returns>表示されるイメージの領域の幅。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleSubImage.ViewportWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleSubImage.ViewportWidth" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleSubImage.ViewportWidth" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.MultiScaleSubImage.ZIndex">
      <summary>
        <see cref="T:System.Windows.Controls.MultiScaleSubImage" /> の z オーダーの描画動作を表す値を取得または設定します。z オーダーは、オブジェクトの相対的な描画順序 (どのオブジェクトを他のどのオブジェクトの前面に描画するか) を決定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.MultiScaleSubImage" /> の z オーダー レンダリング動作を表す値。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.MultiScaleSubImage.ZIndexProperty">
      <summary>
        <see cref="P:System.Windows.Controls.MultiScaleSubImage.ZIndex" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.MultiScaleSubImage.ZIndex" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.Orientation">
      <summary>コントロールまたはレイアウトに設定できるさまざまな方向を定義します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Orientation.Vertical">
      <summary>コントロールまたはレイアウトを垂直方向に配置する必要があります。</summary>
    </member>
    <member name="F:System.Windows.Controls.Orientation.Horizontal">
      <summary>コントロールまたはレイアウトを水平方向に配置する必要があります。</summary>
    </member>
    <member name="T:System.Windows.Controls.Panel">
      <summary>すべての <see cref="T:System.Windows.Controls.Panel" /> 要素の基本クラスを提供します。<see cref="T:System.Windows.Controls.Panel" /> 要素を使用して、Windows Phone アプリケーションで子オブジェクトの配置および整列を行います。</summary>
    </member>
    <member name="M:System.Windows.Controls.Panel.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Panel" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Panel.Background">
      <summary>パネルの塗りつぶしに使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>パネルを塗りつぶすのに使用されるブラシ。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Panel.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Panel.Background" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Panel.Background" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.Children">
      <summary>パネルの子要素のコレクションを取得します。</summary>
      <returns>子オブジェクトのコレクション。既定値は空のコレクションです。</returns>
    </member>
    <member name="P:System.Windows.Controls.Panel.IsItemsHost">
      <summary>この <see cref="T:System.Windows.Controls.Panel" /> が <see cref="T:System.Windows.Controls.ItemsControl" /> によって生成された UI 項目のコンテナーであるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Panel" /> のこのインスタンスが項目ホストの場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Panel.IsItemsHostProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.PasswordBox">
      <summary>パスワードを入力するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.PasswordBox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.BaselineOffset">
      <summary>テキストの各行のベースラインからのオフセット値を取得します。</summary>
      <returns>ベースラインから各テキスト行をオフセットする際の量 (デバイス非依存ピクセル単位)。<see cref="F:System.Double.NaN" /> は、現在のフォント特性を基に最適なベースライン オフセットが自動的に計算されることを示します。既定値は、<see cref="F:System.Double.NaN" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.CaretBrush">
      <summary>挿入ポイントを示す縦棒をレンダリングするために使用されるブラシを取得または設定します。</summary>
      <returns>挿入ポイントを示す縦棒をレンダリングするために使用されるブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.CaretBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.CaretBrush" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.CaretBrush" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.FontSource">
      <summary>パスワード ボックスのコンテンツ表示に適用されるフォント ソースを取得または設定します。</summary>
      <returns>テキスト ボックスの内容をレンダリングするために使用するソース。既定値は null です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">設定された値が有効なフォント ソースではありません。</exception>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.MaxLength">
      <summary>この <see cref="T:System.Windows.Controls.PasswordBox" /> によって処理されるパスワードの最大長を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.PasswordBox" /> によって処理されるパスワードの最大長 (文字数) を指定する整数。値ゼロ (0) は、制限がないことを意味します。既定値は 0 です (長さの制限なし)。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">プロパティは負の値に設定されます。</exception>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.MaxLengthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.MaxLength" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.MaxLength" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.Password">
      <summary>
        <see cref="T:System.Windows.Controls.PasswordBox" /> に現在保持されているパスワードを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.PasswordBox" /> に現在保持されているパスワードを表す文字列。既定値は <see cref="F:System.String.Empty" /> です。</returns>
      <exception cref="T:System.ArgumentNullException">プロパティは null 値に設定されます。</exception>
    </member>
    <member name="E:System.Windows.Controls.PasswordBox.PasswordChanged">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.Password" /> プロパティの値が変更された場合に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.PasswordChar">
      <summary>
        <see cref="T:System.Windows.Controls.PasswordBox" /> のマスク文字を取得または設定します。</summary>
      <returns>ユーザーが <see cref="T:System.Windows.Controls.PasswordBox" /> にテキストを入力したときにエコーされるマスク文字。既定値は黒丸 (●) です。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.PasswordCharProperty">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.PasswordChar" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.PasswordChar" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.PasswordProperty">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.Password" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.Password" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.PasswordBox.SelectAll">
      <summary>
        <see cref="T:System.Windows.Controls.PasswordBox" /> 内のすべての文字を選択します。</summary>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionBackground">
      <summary>選択されたテキストの背景をレンダリングするのに使用されるブラシを取得または設定します。</summary>
      <returns>選択されたテキストの背景を塗りつぶすブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionBackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.SelectionBackground" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.SelectionBackground" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.PasswordBox.SelectionForeground">
      <summary>
        <see cref="T:System.Windows.Controls.PasswordBox" /> で選択されたテキストに使用されるブラシを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.PasswordBox" /> で選択されたテキストに使用されるブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.PasswordBox.SelectionForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.PasswordBox.SelectionForeground" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.PasswordBox.SelectionForeground" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.ProgressBar">
      <summary>操作の進行状況を示すコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ProgressBar" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ProgressBar.IsIndeterminate">
      <summary>進行状況バーが繰り返しパターンを用いた一般的な進行状況を報告するか <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> プロパティに基づいた進行状況を報告するかを示す値を取得または設定します。</summary>
      <returns>進行状況バーが繰り返しパターンを用いた一般的な進行状況を報告する場合は true。進行状況バーが <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> プロパティに基づいた進行状況を報告する場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ProgressBar.IsIndeterminateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.ProgressBar" /> コントロールのビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnCreateAutomationPeer">
      <summary>Windows Phone オートメーション インフラストラクチャで使用するための <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" /> を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ProgressBar" /> オブジェクトの <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.ProgressBar.OnValueChanged(System.Double,System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> プロパティの値が変更されたときに呼び出されます。</summary>
      <param name="oldValue">変更前の値。</param>
      <param name="newValue">新しい値。</param>
    </member>
    <member name="T:System.Windows.Controls.RadioButton">
      <summary>ユーザーがオプションのグループからオプションを 1 つ選択できるようにするボタンを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.RadioButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.RadioButton.GroupName">
      <summary>同時には使用できない <see cref="T:System.Windows.Controls.RadioButton" /> コントロールを指定する名前を取得または設定します。</summary>
      <returns>同時には使用できない <see cref="T:System.Windows.Controls.RadioButton" /> コントロールを指定する名前。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Controls.RadioButton.GroupNameProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RadioButton.GroupName" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RadioButton.GroupName" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnCreateAutomationPeer">
      <summary>Windows Phone オートメーション インフラストラクチャで使用するための <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" /> を返します。</summary>
      <returns>ラジオ ボタン オブジェクトの <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.RadioButton.OnToggle">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> プロパティを true に設定します。</summary>
    </member>
    <member name="T:System.Windows.Controls.RichTextBox">
      <summary>書式付きテキスト、ハイパーリンク、インライン画像、その他のリッチ コンテンツを表示するリッチ テキスト コントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.AcceptsReturn">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> で改行文字または復帰文字を使用でき、Enter キーまたは Return キーが押されたときにこれらの文字を表示するかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.RichTextBox" /> に改行文字を表示できる場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.AcceptsReturnProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RichTextBox.AcceptsReturn" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RichTextBox.AcceptsReturn" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.BaselineOffset">
      <summary>コンテンツの上から最初の段落のベースラインまでのオフセット (ピクセル) を表す値を取得します。段落のベースラインは段落の最初の行のベースラインです。</summary>
      <returns>計算に基づく最初の段落のベースライン、または <see cref="T:System.Windows.Controls.RichTextBox" /> が空の場合は 0。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Blocks">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> のコンテンツを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.RichTextBox" /> のコンテンツを含む <see cref="T:System.Windows.Documents.BlockCollection" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.CaretBrush">
      <summary>挿入ポイントを示す縦棒をレンダリングするために使用されるブラシを取得または設定します。</summary>
      <returns>挿入ポイントを示す縦棒をレンダリングするために使用されるブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.CaretBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RichTextBox.CaretBrush" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RichTextBox.CaretBrush" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="E:System.Windows.Controls.RichTextBox.ContentChanged">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> のコンテンツが変更されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.ContentEnd">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> のコンテンツの末尾を示す <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.RichTextBox" /> のコンテンツの末尾を示す <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.ContentStart">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> 内のコンテンツの先頭を示す <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.RichTextBox" /> のコンテンツの先頭を示す <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.GetPositionFromPoint(System.Windows.Point)">
      <summary>指定された点に最も近い挿入位置を示す <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</summary>
      <returns>指定された点に最も近い挿入位置を示す<see cref="T:System.Windows.Documents.TextPointer" />。</returns>
      <param name="point">最も近い挿入位置が取得される <see cref="T:System.Windows.Controls.RichTextBox" /> の座標空間の点。</param>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.HorizontalScrollBarVisibility">
      <summary>水平スクロール バーの表示設定を取得または設定します。</summary>
      <returns>水平スクロール バーの表示設定。既定値は、<see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.IsReadOnly">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> 内のテキストをユーザーが変更できるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.RichTextBox" /> が読み取り専用の場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.IsReadOnlyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RichTextBox.IsReadOnly" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RichTextBox.IsReadOnly" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.LineHeight">
      <summary>各コンテンツ行の高さを取得または設定します。</summary>
      <returns>各行の高さ (ピクセル単位)。値が 0 に設定されると、行の高さが現在のフォント文字から自動的に判別されます。既定値は 0 です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.RichTextBox.LineHeight" /> が負の値に設定されています。</exception>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.LineHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RichTextBox.LineHeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RichTextBox.LineHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.LineStackingStrategy">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> の各テキスト行の行ボックスを決定する方法を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.RichTextBox" /> の各テキスト行の行ボックスを決定する方法を示す値。既定値は、<see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.LineStackingStrategyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RichTextBox.LineStackingStrategy" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RichTextBox.LineStackingStrategy" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnCreateAutomationPeer">
      <summary>Windows Phone オートメーション インフラストラクチャで使用するための <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" /> を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.RichTextBox" /> オブジェクトの <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.GotFocus" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントが発生すると呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyUp" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostFocus" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostMouseCapture" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseEnter" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeave" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseMove" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInput" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnTextInputStart(System.Windows.Input.TextCompositionEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInputStart" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.OnTextInputUpdate(System.Windows.Input.TextCompositionEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInputUpdate" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.RichTextBox.SelectAll">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> のコンテンツ全体を選択します。</summary>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Selection">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> の <see cref="T:System.Windows.Documents.TextSelection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.RichTextBox" /> の選択されたテキストを表す <see cref="T:System.Windows.Documents.TextSelection" />。</returns>
    </member>
    <member name="E:System.Windows.Controls.RichTextBox.SelectionChanged">
      <summary>テキストの選択が変更された場合に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.TextAlignment">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> でテキストをどのように配置するかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.TextAlignment" /> 列挙値の 1 つ。既定値は Left です。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.TextAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RichTextBox.TextAlignment" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RichTextBox.TextAlignment" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.TextWrapping">
      <summary>1 行の長さが <see cref="T:System.Windows.Controls.RichTextBox" /> の幅を越えた場合のテキストの折り返し方法を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.TextWrapping" /> 値の 1 つ。既定値は <see cref="F:System.Windows.TextWrapping.Wrap" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.RichTextBox.TextWrappingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RichTextBox.TextWrapping" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RichTextBox.TextWrapping" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.VerticalScrollBarVisibility">
      <summary>垂直スクロール バーの表示設定を取得または設定します。</summary>
      <returns>垂直スクロール バーの表示設定。既定値は <see cref="F:System.Windows.Controls.ScrollBarVisibility.Auto" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.RichTextBox.Xaml">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> 内のコンテンツの XAML 表現を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.RichTextBox" /> のコンテンツの XAML 表記である <see cref="T:System.String" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Controls.RowDefinition">
      <summary>
        <see cref="T:System.Windows.Controls.Grid" /> 要素に適用する行固有のプロパティを定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.RowDefinition.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.ActualHeight">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> の計算された高さを表す値を取得します。</summary>
      <returns>計算された高さ (ピクセル) を表す <see cref="T:System.Double" />。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.Height">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> 要素の計算された高さを取得するか、<see cref="T:System.Windows.Controls.RowDefinition" /> で定義されている行の <see cref="T:System.Windows.GridLength" /> 値を設定します。</summary>
      <returns>行の高さを表す <see cref="T:System.Windows.GridLength" />。既定値は 1.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.HeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RowDefinition.Height" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RowDefinition.Height" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.MaxHeight">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> の最大の高さを表す値を取得または設定します。</summary>
      <returns>最大の高さを表す <see cref="T:System.Double" />。</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.MaxHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RowDefinition.MaxHeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RowDefinition.MaxHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.RowDefinition.MinHeight">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> の最小の高さを表す値を取得または設定します。</summary>
      <returns>許可された最小の高さを表す <see cref="T:System.Double" />。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.RowDefinition.MinHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.RowDefinition.MinHeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.RowDefinition.MinHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.RowDefinitionCollection">
      <summary>
        <see cref="T:System.Windows.Controls.RowDefinition" /> オブジェクトの、順序の付いた厳密に型指定されたコレクションへのアクセスを提供します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ScrollBarVisibility">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コントロール内のスクロール バーの表示設定を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Disabled">
      <summary>ビューポートがコンテンツ全体を表示できない場合でも、<see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> は表示されません。コンテンツのサイズは、対応する親の <see cref="T:System.Windows.Controls.ScrollViewer" /> のサイズに設定されます。水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、コンテンツの幅は <see cref="T:System.Windows.Controls.ScrollViewer" /> の <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> に設定されます。垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、コンテンツの高さは <see cref="T:System.Windows.Controls.ScrollViewer" /> の <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> に設定されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Auto">
      <summary>ビューポートがコンテンツ全体を表示できない場合に <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> が表示され、<see cref="T:System.Windows.Controls.ScrollViewer" /> のサイズがコンテンツに適用されます。水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、コンテンツの幅は <see cref="T:System.Windows.Controls.ScrollViewer" /> の <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> に設定されます。垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、コンテンツの高さは <see cref="T:System.Windows.Controls.ScrollViewer" /> の <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> に設定されます。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Hidden">
      <summary>ビューポートがコンテンツ全体を表示できない場合でも、<see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> は表示されません。<see cref="T:System.Windows.Controls.ScrollViewer" /> のサイズは、コンテンツに適用されません。</summary>
    </member>
    <member name="F:System.Windows.Controls.ScrollBarVisibility.Visible">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> は常に表示されます。<see cref="T:System.Windows.Controls.ScrollViewer" /> のサイズはコンテンツに適用されます。水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、コンテンツの幅は <see cref="T:System.Windows.Controls.ScrollViewer" /> の <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> に設定されます。垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合、コンテンツの高さは <see cref="T:System.Windows.Controls.ScrollViewer" /> の <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> に設定されます。</summary>
    </member>
    <member name="T:System.Windows.Controls.ScrollContentPresenter">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コントロールのコンテンツを表示します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanHorizontallyScroll">
      <summary>水平軸上にスクロールできるかどうかを示す値を取得または設定します。</summary>
      <returns>スクロールが可能な場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.CanVerticallyScroll">
      <summary>垂直軸上にスクロールできるかどうかを示す値を取得または設定します。</summary>
      <returns>スクロールが可能な場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentHeight">
      <summary>領域の縦幅を取得します。</summary>
      <returns>領域の縦幅。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentWidth">
      <summary>領域の横幅を取得します。</summary>
      <returns>領域の横幅。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.HorizontalOffset">
      <summary>コンテンツが水平にスクロールされた距離を取得または設定します。</summary>
      <returns>コンテンツが水平方向にスクロールされた距離。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineDown">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> コンテンツを 1 行分だけ下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineLeft">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> コンテンツを、あらかじめ設定されている量だけ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineRight">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> コンテンツを、あらかじめ設定されている量だけ右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.LineUp">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollContentPresenter" /> コンテンツを 1 行分だけ上にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MakeVisible(System.Windows.UIElement,System.Windows.Rect)">
      <summary>表示オブジェクトの座標領域が表示されるまで内容を強制的にスクロールします。</summary>
      <returns>可視領域を表す <see cref="T:System.Windows.Rect" />。</returns>
      <param name="visual">表示可能になる <see cref="T:System.Windows.UIElement" />。</param>
      <param name="rectangle">表示させる座標空間を識別する四角形領域。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelDown">
      <summary>コンテンツ内を下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelLeft">
      <summary>コンテンツ内を左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelRight">
      <summary>コンテンツ内を右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.MouseWheelUp">
      <summary>コンテンツ内を上にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.ScrollContentPresenter" /> のビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageDown">
      <summary>内容を 1 ページずつ下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageLeft">
      <summary>内容を 1 ページずつ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageRight">
      <summary>内容を 1 ページずつ右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.PageUp">
      <summary>内容を 1 ページずつ上にスクロールします。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ScrollOwner">
      <summary>スクロール動作を制御する <see cref="T:System.Windows.Controls.ScrollViewer" /> 要素を取得または設定します。</summary>
      <returns>スクロール動作を制御する <see cref="T:System.Windows.Controls.ScrollViewer" /> 要素。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.SetHorizontalOffset(System.Double)">
      <summary>コンテンツが水平にスクロールされた距離を設定します。</summary>
      <param name="offset">コンテンツが水平方向にスクロールされた距離。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollContentPresenter.SetVerticalOffset(System.Double)">
      <summary>コンテンツが垂直にスクロールされた距離を設定します。</summary>
      <param name="offset">コンテンツが垂直方向にスクロールされた距離。</param>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.VerticalOffset">
      <summary>コンテンツが垂直にスクロールされた距離を取得または設定します。</summary>
      <returns>コンテンツが垂直方向にスクロールされた距離。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportHeight">
      <summary>ビューポートの縦幅を取得します。</summary>
      <returns>ビューポートの縦幅。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportWidth">
      <summary>ビューポートの横幅を取得します。</summary>
      <returns>ビューポートの横幅。</returns>
    </member>
    <member name="T:System.Windows.Controls.ScrollViewer">
      <summary>表示される他の要素を格納できるスクロール可能な領域を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
      <summary>水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> が表示されるかどうかを示す値を取得します。</summary>
      <returns>水平スクロール バーが表示されるかどうかを示す <see cref="T:System.Windows.Visibility" />。既定値は <see cref="F:System.Windows.Visibility.Visible" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
      <summary>垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> が表示されるかどうかを示す値を取得します。</summary>
      <returns>垂直スクロール バーが表示されるかどうかを示す <see cref="T:System.Windows.Visibility" />。既定値は <see cref="F:System.Windows.Visibility.Visible" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> に表示するすべてのコンテンツの縦幅を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> に表示するすべてのコンテンツの縦幅。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ExtentHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ExtentHeight" /> 依存関係プロパティの識別子。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ExtentHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> に表示するすべてのコンテンツの横幅を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> に表示するすべてのコンテンツの横幅。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ExtentWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ExtentWidth" /> 依存関係プロパティの識別子。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ExtentWidth" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetHorizontalScrollBarVisibility(System.Windows.DependencyObject)">
      <summary>指定された要素から <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依存関係プロパティの値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依存関係プロパティの値。</returns>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetManipulationMode(System.Windows.DependencyObject)">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ManipulationMode" /> 添付プロパティの値を取得し、プロパティの XAML 使用方法をサポートします。</summary>
      <returns>取得した <see cref="P:System.Windows.Controls.ScrollViewer.ManipulationMode" /> 添付プロパティの値。</returns>
      <param name="element">プロパティ値を取得するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.GetVerticalScrollBarVisibility(System.Windows.DependencyObject)">
      <summary>指定された要素から <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依存関係プロパティの値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依存関係プロパティの値。</returns>
      <param name="element">プロパティ値の読み取り元の要素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
      <summary>スクロールされたコンテンツの水平方向のオフセットを含む値を取得します。</summary>
      <returns>スクロールされたコンテンツの水平方向のオフセット。既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.HorizontalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalOffset" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalOffset" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility">
      <summary>水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を表示するかどうかを示す値を取得または設定します。</summary>
      <returns>水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を表示するかどうかを示す <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 値。既定値は <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.InvalidateScrollInfo">
      <summary>スクロール領域のサイズと場所を表すプロパティの値が変化したときに呼び出されます。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ManipulationMode">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 動作に関する操作の処理方法を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 動作に使用する操作モード。既定値は <see cref="F:System.Windows.Controls.ManipulationMode.System" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ManipulationModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ManipulationMode" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ManipulationMode" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.ScrollViewer" /> コントロールのビジュアル ツリーを構築します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
      <summary>スクロールできる領域の縦幅 (範囲の高さとビューポートの高さの差) を表す値を取得します。</summary>
      <returns>スクロールできる領域の縦幅。このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollableHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableHeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ScrollableWidth">
      <summary>スクロールできる領域の横幅 (範囲の幅とビューポートの幅の差) を表す値を取得します。</summary>
      <returns>スクロールできる領域の横幅。このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ScrollableWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Double)">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 内のコンテンツを、指定された水平オフセット位置までスクロールします。</summary>
      <param name="offset">コンテンツのスクロール先の位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.ScrollToVerticalOffset(System.Double)">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> 内のコンテンツを、指定された垂直オフセット位置までスクロールします。</summary>
      <param name="offset">コンテンツのスクロール先の位置。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetHorizontalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
      <summary>指定された要素に <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> 依存関係プロパティの値を設定します。</summary>
      <param name="element">プロパティ値の設定対象の要素。</param>
      <param name="horizontalScrollBarVisibility">設定するプロパティ値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetManipulationMode(System.Windows.DependencyObject,System.Windows.Controls.ManipulationMode)">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ManipulationMode" /> 添付プロパティの値を設定し、プロパティの XAML 使用方法をサポートします。</summary>
      <param name="element">プロパティ値の設定対象の要素。</param>
      <param name="manipulationMode">設定する値。</param>
    </member>
    <member name="M:System.Windows.Controls.ScrollViewer.SetVerticalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
      <summary>指定された要素に <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依存関係プロパティの値を設定します。</summary>
      <param name="element">プロパティ値の設定対象の要素。</param>
      <param name="verticalScrollBarVisibility">設定するプロパティ値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
      <summary>スクロールされたコンテンツの垂直方向のオフセットを含む値を取得します。</summary>
      <returns>スクロールされたコンテンツの垂直方向のオフセット。既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.VerticalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.VerticalOffset" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.VerticalOffset" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility">
      <summary>垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を表示するかどうかを示す値を取得または設定します。</summary>
      <returns>垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を表示するかどうかを示す <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 値。既定値は <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
      <summary>表示可能なコンテンツの縦幅を表す値を取得します。</summary>
      <returns>表示可能なコンテンツの縦幅。このプロパティには既定値はありません。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ViewportHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
      <summary>表示可能なコンテンツの横幅を含む値を取得します。</summary>
      <returns>表示可能なコンテンツの横幅。既定値は 0.0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ScrollViewer.ViewportWidthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.SelectionChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.SelectionChangedEventArgs.#ctor(System.Collections.IList,System.Collections.IList)">
      <summary>
        <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="removedItems">選択解除された項目。</param>
      <param name="addedItems">選択された項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="removedItems" /> または <paramref name="addedItems" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Controls.SelectionChangedEventArgs.AddedItems">
      <summary>選択された項目を含む一覧を取得します。</summary>
      <returns>このイベントで選択された項目。</returns>
    </member>
    <member name="P:System.Windows.Controls.SelectionChangedEventArgs.RemovedItems">
      <summary>選択解除された項目を含む一覧を取得します。</summary>
      <returns>このイベントで選択解除された項目。</returns>
    </member>
    <member name="T:System.Windows.Controls.SelectionChangedEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.SelectionMode">
      <summary>
        <see cref="T:System.Windows.Controls.ListBox" /> に関する選択動作を定義します。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Single">
      <summary>ユーザーは、一度に 1 つの項目しか選択できません。 </summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Multiple">
      <summary>ユーザーは複数の項目を選択できます。</summary>
    </member>
    <member name="F:System.Windows.Controls.SelectionMode.Extended">
      <summary>ユーザーは Shift キーなどの修飾キーを押すことで複数の項目を選択できます。</summary>
    </member>
    <member name="T:System.Windows.Controls.Slider">
      <summary>ユーザーがトラックに沿って <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールを移動することにより一定範囲から値を選択できるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsDirectionReversed">
      <summary>値を増加させる方向を示す値を取得または設定します。</summary>
      <returns>値を増加させる方向が横スライダーの左または縦スライダーの下の場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsDirectionReversedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.IsDirectionReversed" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Slider.IsFocused">
      <summary>スライダー コントロールにフォーカスがあるかどうかを示す値を取得します。</summary>
      <returns>スライダー コントロールにフォーカスがある場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.IsFocusedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.IsFocused" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Slider.IsFocused" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.Slider" /> コントロールのビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnCreateAutomationPeer">
      <summary>Windows Phone オートメーション インフラストラクチャで使用するための <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> オブジェクトを返します。</summary>
      <returns>スライダー コントロールが使用する <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.GotFocus" /> イベントに対するクラス処理を提供します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントに対するクラス処理を提供します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.KeyEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostFocus" /> イベントに対するクラス処理を提供します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.RoutedEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostMouseCapture" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMaximumChanged(System.Double,System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティの変更前の値。</param>
      <param name="newMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティの変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMinimumChanged(System.Double,System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティの変更前の値。</param>
      <param name="newMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティの変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseEnter" /> イベントに対するクラス処理を提供します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeave" /> イベントに対するクラス処理を提供します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> イベントに対するクラス処理を提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Slider.OnValueChanged(System.Double,System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> プロパティが変更されたときに、<see cref="T:System.Windows.Controls.Slider" /> の現在位置を更新します。</summary>
      <param name="oldValue">
        <see cref="T:System.Windows.Controls.Slider" /> の以前の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。</param>
      <param name="newValue">
        <see cref="T:System.Windows.Controls.Slider" /> の新しい <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Slider.Orientation">
      <summary>
        <see cref="T:System.Windows.Controls.Slider" /> の向きを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Orientation" /> 値の 1 つ。既定値は、<see cref="F:System.Windows.Controls.Orientation.Horizontal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Slider.OrientationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Slider.Orientation" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Slider.Orientation" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.StackPanel">
      <summary>子要素を水平方向または垂直方向の直線状に整列します。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.StackPanel" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)">
      <summary>子要素を配置し、派生クラスのサイズを決定します。</summary>
      <returns>使用する実際のサイズ。</returns>
      <param name="arrangeSize">この要素が要素自体と子を配置するために使用する親の末尾の領域。</param>
    </member>
    <member name="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)">
      <summary>子要素に必要なレイアウトのサイズを測定し、派生クラスのサイズを決定します。</summary>
      <returns>子要素のサイズの計算に基づいてこの要素でレイアウト時に必要と判断されたサイズ。</returns>
      <param name="constraint">この要素が子要素に与えることができる使用可能なサイズ。</param>
    </member>
    <member name="P:System.Windows.Controls.StackPanel.Orientation">
      <summary>子要素の並べられる向きを示す値を取得または設定します。</summary>
      <returns>子要素の向きを指定する列挙値のいずれか。既定値は、<see cref="F:System.Windows.Controls.Orientation.Vertical" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.StackPanel.OrientationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.StackPanel.Orientation" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.StackPanel.Orientation" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.StretchDirection">
      <summary>コンテンツが拡大縮小される方向を記述します。</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.UpOnly">
      <summary>コンテンツが親よりも小さい場合のみ、拡大方向にスケーリングします。コンテンツの方が親より大きくても、縮小方向にはスケーリングしません。</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.DownOnly">
      <summary>コンテンツが親よりも大きい場合のみ、縮小方向にスケーリングします。コンテンツの方が親より小さくても、拡大方向にはスケーリングしません。</summary>
    </member>
    <member name="F:System.Windows.Controls.StretchDirection.Both">
      <summary>コンテンツは、<see cref="P:System.Windows.Controls.Viewbox.Stretch" /> プロパティに基づいて、親に合わせて伸縮します。</summary>
    </member>
    <member name="T:System.Windows.Controls.TextBlock">
      <summary>少量のテキストを表示するための軽量のコントロールを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBlock.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.BaselineOffset">
      <summary>テキストの各行がベースラインからオフセットされる値を返します。</summary>
      <returns>ベースラインから各テキスト行をオフセットする際の量 (デバイス非依存ピクセル単位)。. <see cref="F:System.Double.NaN" /> は、現在のフォント特性を基に最適なベースライン オフセットが自動的に計算されることを示します。既定値は、<see cref="F:System.Double.NaN" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.CharacterSpacing">
      <summary>フォント サイズの 1/1000 単位で測定されるコントロール内のテキストの文字間の距離を取得または設定します。</summary>
      <returns>フォント サイズの 1/1000 単位で測定されるコントロール内のテキストの文字間の距離。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.CharacterSpacingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.CharacterSpacing" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.CharacterSpacing" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontFamily">
      <summary>この要素のテキスト コンテンツの上位の優先フォント ファミリを取得または設定します。</summary>
      <returns>優先フォント ファミリ (1 つ以上の代替フォント ファミリを持つ第一に優先されるフォント ファミリ) を指定する <see cref="T:System.Windows.Media.FontFamily" /> オブジェクト。既定値については、<see cref="T:System.Windows.Media.FontFamily" /> クラスのトピックを参照してください。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="FontFamily" /> が null です。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontFamilyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontFamily" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontSize">
      <summary>この要素内のテキスト コンテンツのフォント サイズを取得または設定します。</summary>
      <returns>ピクセル単位でフォント サイズを指定する負でない値。既定値は 11 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontSizeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontSize" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontSource">
      <summary>コンテンツを表示する際に、テキストに適用されるフォント ソースを取得または設定します。</summary>
      <returns>テキスト ボックスのコンテンツ表示に使用されるフォント ソース。既定値は null です。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontStretch">
      <summary>この要素内のテキスト コンテンツのフォント伸縮を取得または設定します。</summary>
      <returns>要求されたフォント伸縮。これは <see cref="T:System.Windows.FontStretches" /> プロパティ値のいずれかから取得された <see cref="T:System.Windows.FontStretch" /> です。既定値は、<see cref="P:System.Windows.FontStretches.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontStretchProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontStretch" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontStyle">
      <summary>この要素の内容のフォント スタイルを取得または設定します。</summary>
      <returns>要求されたフォント スタイル。これは <see cref="T:System.Windows.FontStyles" /> プロパティ値のいずれかから取得された <see cref="T:System.Windows.FontStyle" /> です。既定値は、<see cref="P:System.Windows.FontStyles.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontStyleProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontStyle" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.FontWeight">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> の上位のフォントの太さを取得または設定します。</summary>
      <returns>要求されたフォントの太さ。これは <see cref="T:System.Windows.FontWeights" /> プロパティ値のいずれかから取得された <see cref="T:System.Windows.FontWeight" /> です。既定値は、<see cref="P:System.Windows.FontWeights.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.FontWeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.FontWeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Foreground">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> のテキスト コンテンツに適用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>テキスト コンテンツに適用するブラシ。既定値は <see cref="P:System.Windows.Media.Colors.Black" /> の <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 値を持つ <see cref="T:System.Windows.Media.SolidColorBrush" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.ForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.Foreground" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Inlines">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> 内のインライン テキスト要素のコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TextBlock" /> のすべてのインライン テキスト要素が格納されているコレクション。既定値は空のコレクションです。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LineHeight">
      <summary>各コンテンツ行の高さを取得または設定します。</summary>
      <returns>各行の高さ (ピクセル単位)。値が 0 に設定されると、行の高さが現在のフォント文字から自動的に判別されます。既定値は 0 です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> が負の値に設定されています。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.LineHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.LineStackingStrategy">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> の各テキスト行の行ボックスを決定する方法を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TextBlock" /> の各テキスト行の行ボックスを決定する方法を示す値。既定値は、<see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.LineStackingStrategyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Padding">
      <summary>コンテンツ エリアの境界と <see cref="T:System.Windows.Controls.TextBlock" /> によって表示されるコンテンツ間のパディング スペースの太さを示す値を取得または設定します。</summary>
      <returns>適用するスペースを指定する <see cref="T:System.Windows.Thickness" /> 構造体。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.PaddingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.Padding" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.Padding" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.Text">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> のテキスト コンテンツを取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.TextBlock" /> のテキスト コンテンツを指定する文字列。既定値は空の文字列です。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextAlignment">
      <summary>テキスト コンテンツの水平方向の配置を示す値を取得または設定します。</summary>
      <returns>テキストの配置。既定値は、<see cref="F:System.Windows.TextAlignment.Left" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextAlignment" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextDecorations">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> 要素のコンテンツに適用される文字装飾を指定する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.TextDecorationCollection" />、またはテキスト装飾が適用されていない場合は null。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextDecorationsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextDecorations" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.Text" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.Text" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextTrimming">
      <summary>コンテンツ エリアがいっぱいになったときに使用するテキストのトリミング動作を取得または設定します。</summary>
      <returns>使用するテキストのトリミング動作を指定する <see cref="T:System.Windows.TextTrimming" /> 値のいずれか。既定値は、<see cref="F:System.Windows.TextTrimming.None" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextTrimmingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.TextTrimming" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextTrimming" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBlock.TextWrapping">
      <summary>
        <see cref="T:System.Windows.Controls.TextBlock" /> のテキスト折り返し方法を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TextBlock" /> がテキストを折り返す方法を示す値。既定値は、<see cref="F:System.Windows.TextWrapping.NoWrap" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBlock.TextWrappingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBlock.TextWrapping" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBlock.TextWrapping" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.TextBox">
      <summary>単一書式の複数行のテキストを表示または編集するのに使用できるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.TextBox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.TextBox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.AcceptsReturn">
      <summary>テキスト ボックスが新しい行または改行文字を表示できるかどうかを決定する値を取得または設定します。</summary>
      <returns>テキスト ボックスに改行文字を表示できる場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.AcceptsReturnProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.AcceptsReturn" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.AcceptsReturn" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.BaselineOffset">
      <summary>テキストの各行のベースラインからのオフセット値を取得します。</summary>
      <returns>ベースラインから各テキスト行をオフセットする際の量 (デバイス非依存ピクセル単位)。<see cref="F:System.Double.NaN" /> は、現在のフォント特性を基に最適なベースライン オフセットが自動的に計算されることを示します。既定値は、<see cref="F:System.Double.NaN" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.CaretBrush">
      <summary>挿入ポイントを示す縦棒をレンダリングするために使用されるブラシを取得または設定します。</summary>
      <returns>挿入ポイントを示す縦棒をレンダリングするために使用されるブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.CaretBrushProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.CaretBrush" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.CaretBrush" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.FontSource">
      <summary>
        <see cref="T:System.Windows.Controls.TextBox" /> のコンテンツ表示に適用されるフォント ソースを取得または設定します。</summary>
      <returns>テキスト ボックスの内容をレンダリングするために使用するソース。既定値は null です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">設定された値が有効なフォント ソースではありません。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)">
      <summary>指定されたインデックス位置にある文字の先頭の四角形を返します。</summary>
      <returns>指定された文字インデックス位置にある文字の先頭の四角形。外接する四角形を決定できない場合は <see cref="P:System.Windows.Rect.Empty" />。</returns>
      <param name="charIndex">四角形を取得する文字の、0 から始まる文字インデックス。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)">
      <summary>指定されたインデックス位置にある文字の先頭または末尾の四角形を返します。</summary>
      <returns>指定された文字インデックス位置にある文字の端の四角形。外接する四角形を決定できない場合は <see cref="P:System.Windows.Rect.Empty" />。</returns>
      <param name="charIndex">四角形を取得する文字の、0 から始まる文字インデックス。</param>
      <param name="trailingEdge">文字の末尾を取得する場合は true。文字の先頭を取得する場合は false。</param>
    </member>
    <member name="P:System.Windows.Controls.TextBox.HorizontalScrollBarVisibility">
      <summary>水平スクロール バーの表示設定を取得または設定します。</summary>
      <returns>水平スクロール バーの表示設定。既定値は、<see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.InputScope">
      <summary>この <see cref="T:System.Windows.Controls.TextBox" /> によって使用される入力のコンテキストを取得または設定します。</summary>
      <returns>代替の入力方法からの入力を解釈する方法を変更する入力スコープ。既定値は null 参照です (Visual Basic では Nothing)。</returns>
      <exception cref="T:System.NotImplementedException">API は、現在のプラットフォームのバージョンではサポートされていません。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.InputScopeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.InputScope" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.InputScope" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.IsReadOnly">
      <summary>ユーザーがテキスト ボックスのテキストを変更できるかどうかを決定する値を取得または設定します。</summary>
      <returns>テキスト ボックスが読み取り専用の場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.IsReadOnlyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.IsReadOnly" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.IsReadOnly" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.LineHeight">
      <summary>各コンテンツ行の高さを取得または設定します。</summary>
      <returns>各行の高さ (ピクセル単位)。値が 0 に設定されると、行の高さが現在のフォント文字から自動的に判別されます。既定値は 0 です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> が負の値に設定されています。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.LineHeightProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.LineHeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.LineHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.LineStackingStrategy">
      <summary>
        <see cref="T:System.Windows.Controls.TextBox" /> の各テキスト行の行ボックスを決定する方法を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TextBox" /> の各テキスト行の行ボックスを決定する方法を示す値。既定値は <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.LineStackingStrategyProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.LineStackingStrategy" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.LineStackingStrategy" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.MaxLength">
      <summary>ユーザーが入力できる最大文字数を決定する値を取得または設定します。</summary>
      <returns>ユーザーが入力できる文字の最大数。既定値は 0 です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">設定値が 0 未満です。</exception>
      <exception cref="T:System.ArgumentNullException">設定された値は null です。</exception>
    </member>
    <member name="F:System.Windows.Controls.TextBox.MaxLengthProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer">
      <summary>Windows Phone オートメーション インフラストラクチャで使用するための <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" /> を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.TextBox" /> オブジェクトの <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.GotFocus" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyDown" /> イベントが発生したときに呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyUp" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostFocus" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostMouseCapture" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseEnter" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeave" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseMove" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInput" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnTextInputStart(System.Windows.Input.TextCompositionEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInputStart" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.OnTextInputUpdate(System.Windows.Input.TextCompositionEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInputUpdate" /> イベントが発生する前に呼び出されます。</summary>
      <param name="e">イベントに関するデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)">
      <summary>テキスト ボックスでテキストの範囲を選択します。</summary>
      <param name="start">選択範囲の最初の文字の、0 から始まるインデックス。</param>
      <param name="length">選択範囲の長さ (文字数)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="start" /> または <paramref name="length" /> 値は負の値です。</exception>
    </member>
    <member name="M:System.Windows.Controls.TextBox.SelectAll">
      <summary>テキスト ボックスのコンテンツ全体を選択します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectedText">
      <summary>テキスト ボックス内の現在の選択範囲のコンテンツを取得または設定します。</summary>
      <returns>テキスト ボックス内で現在選択されているテキスト。テキストが選択されていない場合、値は <see cref="F:System.String.Empty" /> です。</returns>
      <exception cref="T:System.ArgumentNullException">値が null に設定されています。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionBackground">
      <summary>選択されたテキストの背景を塗りつぶすブラシを取得または設定します。</summary>
      <returns>選択されたテキストの背景を塗りつぶすブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.SelectionBackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.SelectionBackground" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.SelectionBackground" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="E:System.Windows.Controls.TextBox.SelectionChanged">
      <summary>テキストの選択が変更された場合に発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionForeground">
      <summary>テキスト ボックスで選択されたテキストに使用されるブラシを取得または設定します。</summary>
      <returns>テキスト ボックスで選択されたテキストに使用されるブラシ。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.SelectionForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.SelectionForeground" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.SelectionForeground" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionLength">
      <summary>テキスト ボックス内の現在の選択範囲の文字数を取得または設定します。</summary>
      <returns>テキスト ボックス内の現在の選択範囲の文字数、または選択されていない場合は 0。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">値が 0 未満です。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.SelectionStart">
      <summary>テキスト ボックスで選択されたテキストの開始位置を取得または設定します。</summary>
      <returns>現在の選択範囲の開始位置。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">値が 0 未満です。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.Text">
      <summary>テキスト ボックスのテキスト コンテンツを取得または設定します。</summary>
      <returns>テキスト ボックスのテキスト コンテンツが含まれる文字列。既定値は空の文字列 ("") です。</returns>
      <exception cref="T:System.ArgumentNullException">値が null に設定されています。</exception>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextAlignment">
      <summary>テキスト ボックスでどのようにテキストを配置するかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.TextAlignment" /> 列挙値の 1 つ。既定値は、<see cref="F:System.Windows.TextAlignment.Left" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="E:System.Windows.Controls.TextBox.TextChanged">
      <summary>テキスト ボックスの内容が変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.Text" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.Text" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.TextWrapping">
      <summary>テキスト行がテキスト ボックスの使用可能な幅を超えた場合にどのように改行が発生するかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.TextWrapping" /> 値の 1 つ。既定値は、<see cref="F:System.Windows.TextWrapping.NoWrap" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.TextBox.TextWrappingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.TextBox.VerticalScrollBarVisibility">
      <summary>垂直スクロール バーの表示設定を取得または設定します。</summary>
      <returns>垂直スクロール バーの表示設定。既定値は、<see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden" /> です。</returns>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.TextBox.TextChanged" /> イベントにデータを提供します。</summary>
    </member>
    <member name="T:System.Windows.Controls.TextChangedEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.TextBox.TextChanged" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.ToolTip">
      <summary>UI 内の要素の情報を表示するポップアップ ウィンドウを作成するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Closed">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> を閉じて非表示にしたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.HorizontalOffset">
      <summary>対象の原点からポップアップの配置ポイントまでの横方向の距離を取得または設定します。</summary>
      <returns>対象の原点からポップアップの配置ポイントまでの横方向の距離。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.HorizontalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.IsOpen">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> が表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> が表示される場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.IsOpenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.IsOpen" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.IsOpen" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.ToolTip" /> のビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTip.OnCreateAutomationPeer">
      <summary>Windows Phone オートメーション インフラストラクチャで使用するための <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTip" /> オブジェクトの <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</returns>
    </member>
    <member name="E:System.Windows.Controls.ToolTip.Opened">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTip" /> を表示したときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.Placement">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> に対して <see cref="T:System.Windows.Controls.ToolTip" /> を配置する方法を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 値の 1 つ。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.Placement" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.Placement" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.PlacementTarget">
      <summary>
        <see cref="T:System.Windows.Controls.ToolTipService" /> によって開かれたときにツールヒントを配置する対象の視覚的要素またはコントロールを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.ToolTipService" /> によって開かれたときにツールヒントを配置する視覚的要素またはコントロール。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.PlacementTargetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTip.VerticalOffset">
      <summary>対象の原点からポップアップの配置ポイントまでの縦方向の距離を取得または設定します。</summary>
      <returns>対象の原点からポップアップの配置ポイントまでの縦方向の距離。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTip.VerticalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.VerticalOffset" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.VerticalOffset" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.ToolTipService">
      <summary>ツールヒントを表示する静的メソッドを提供するサービスを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacement(System.Windows.DependencyObject)">
      <summary>指定されたヒントの相対位置を取得します。</summary>
      <returns>指定されたツールヒントの相対位置。</returns>
      <param name="element">ツールヒントは位置を取得します。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetPlacementTarget(System.Windows.DependencyObject)">
      <summary>ツールヒントを配置する基準となる視覚的要素を取得します。</summary>
      <returns>ツールヒントを配置する基準となる視覚的要素。</returns>
      <param name="element">視覚的要素を取得するツールヒント。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.GetToolTip(System.Windows.DependencyObject)">
      <summary>オブジェクトのツールヒントを取得します。</summary>
      <returns>オブジェクトのツールヒント値。</returns>
      <param name="element">プロパティ値の読み取り元のオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.Placement">
      <summary>対象となる視覚的要素を基準としたツールヒントの位置を取得または設定します。</summary>
      <returns>対象となる視覚的要素を基準としたツールヒントの位置。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.Placement" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.Placement" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.PlacementTarget">
      <summary>ツールヒントが配置される対象となる視覚的要素を取得または設定します。</summary>
      <returns>ツールヒントが表示される対象となる視覚的要素。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.PlacementTargetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacement(System.Windows.DependencyObject,System.Windows.Controls.Primitives.PlacementMode)">
      <summary>指定された配置モードを使用して、指定された <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> の位置を設定します。</summary>
      <param name="element">位置を設定するためのヒント。</param>
      <param name="value">対象のコントロールに対するツールチップの配置位置を指定するいずれかの <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 値。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.UIElement)">
      <summary>指定された値要素を基準とする指定された <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> の位置を設定します。</summary>
      <param name="element">位置を設定するためのヒント。</param>
      <param name="value">ツールヒントを設定する視覚的要素。</param>
    </member>
    <member name="M:System.Windows.Controls.ToolTipService.SetToolTip(System.Windows.DependencyObject,System.Object)">
      <summary>オブジェクトのツールヒントを設定します。</summary>
      <param name="element">添付プロパティの書き込み対象のオブジェクト。</param>
      <param name="value">設定する値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Controls.ToolTipService.ToolTip">
      <summary>コントロールに添付されるツールヒントを取得または設定します。</summary>
      <returns>コントロールに表示するツールヒント。</returns>
    </member>
    <member name="F:System.Windows.Controls.ToolTipService.ToolTipProperty">
      <summary>
        <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.ToolTipService.ToolTip" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.UIElementCollection">
      <summary>
        <see cref="T:System.Windows.UIElement" /> オブジェクトの順序指定されたコレクションを表します。</summary>
    </member>
    <member name="T:System.Windows.Controls.UserControl">
      <summary>関連した既存のコントロールをカプセル化し独自のロジックを提供する新しいコントロールを定義するための基本クラスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.UserControl.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.UserControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.UserControl.Content">
      <summary>ユーザー コントロール内に含まれるコンテンツを取得または設定します。</summary>
      <returns>ユーザー コントロールのコンテンツ。</returns>
    </member>
    <member name="F:System.Windows.Controls.UserControl.ContentProperty">
      <summary>
        <see cref="P:System.Windows.Controls.UserControl.Content" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.UserControl.Content" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.Validation">
      <summary>データの検証をサポートし、コントロールの表示状態を管理する方法と添付プロパティを提供します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Validation.Errors">
      <summary>バインディング ターゲット要素に関連付けられた <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトのコレクションを取得します。</summary>
      <returns>バインディング ターゲット要素に関連付けられた <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.ErrorsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Validation.Errors" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)">
      <summary>指定した要素の <see cref="P:System.Windows.Controls.Validation.Errors" /> 添付プロパティの値を取得します。</summary>
      <returns>指定された要素と関連付けられる <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトのコレクション。</returns>
      <param name="element">エラーを取得する要素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)">
      <summary>指定した要素の <see cref="P:System.Windows.Controls.Validation.HasError" /> 添付プロパティの値を取得します。</summary>
      <returns>指定された要素でのバインディングで検証エラーが発生した場合は true。それ以外の場合は false。</returns>
      <param name="element">エラーがあるかどうかチェックする要素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Controls.Validation.HasError">
      <summary>ターゲット要素のバインディングに検証エラーがあるかどうかを示す値を取得します。</summary>
      <returns>ターゲット要素でのバインディングで検証エラーが発生した場合は true。それ以外の場合は false。 </returns>
    </member>
    <member name="F:System.Windows.Controls.Validation.HasErrorProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Validation.HasError" /> 添付プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationError">
      <summary>ターゲットとソースの更新中に例外が発生するとき、バインディング エンジンによって生成される検証エラーを表します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.ErrorContent">
      <summary>エラー メッセージを取得します。</summary>
      <returns>エラー メッセージ。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationError.Exception">
      <summary>検証エラーの原因となった例外を取得します。</summary>
      <returns>検証エラーの原因となった例外。</returns>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventAction">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.BindingValidationError" /> イベントが発生した理由を示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Added">
      <summary>新しい <see cref="T:System.Windows.Controls.ValidationError" /> が発生しました。</summary>
    </member>
    <member name="F:System.Windows.Controls.ValidationErrorEventAction.Removed">
      <summary>既存の <see cref="T:System.Windows.Controls.ValidationError" /> が削除されました。</summary>
    </member>
    <member name="T:System.Windows.Controls.ValidationErrorEventArgs">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.BindingValidationError" /> イベントにデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Action">
      <summary>検証エラーの状態を取得します。</summary>
      <returns>検証エラーの状態を示す列挙値の 1 つ。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Error">
      <summary>
        <see cref="E:System.Windows.FrameworkElement.BindingValidationError" /> イベントの原因となった検証エラーを取得します。</summary>
      <returns>検証エラーの原因となった例外を含む <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Controls.ValidationErrorEventArgs.Handled">
      <summary>ルーティング イベントを処理済みとしてマークする値を取得または設定します。</summary>
      <returns>イベントを処理した場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:System.Windows.Controls.Viewbox">
      <summary>利用できるスペースに合うように 1 つの子を引き伸ばしたり拡大縮小したりするためのコンテンツ デコレータを定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Viewbox.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Viewbox" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Child">
      <summary>
        <see cref="T:System.Windows.Controls.Viewbox" /> 要素の単一の子要素を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Viewbox" /> 要素の単一の子要素。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.Stretch">
      <summary>コンテンツを使用可能なスペースに合わせる方法を決定する <see cref="T:System.Windows.Media.Stretch" /> モードを取得または設定します。</summary>
      <returns>使用可能なスペースにコンテンツをどのように合わせるかを決定する、<see cref="T:System.Windows.Media.Stretch" /> モード。既定値は <see cref="F:System.Windows.Media.Stretch.Uniform" /> です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Viewbox.StretchDirection">
      <summary>
        <see cref="T:System.Windows.Controls.Viewbox" /> のコンテンツにスケーリングを適用する方法を決定する <see cref="T:System.Windows.Controls.StretchDirection" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Viewbox" /> のコンテンツにどのようにスケーリングを適用するかを決定する <see cref="T:System.Windows.Controls.StretchDirection" />。既定値は <see cref="F:System.Windows.Controls.StretchDirection.Both" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchDirectionProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Viewbox.StretchDirection" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Controls.Viewbox.StretchProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Viewbox.Stretch" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.VirtualizationMode">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> が子項目の仮想化の管理に使用するメソッドを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Standard">
      <summary>項目コンテナーを作成、破棄します。</summary>
    </member>
    <member name="F:System.Windows.Controls.VirtualizationMode.Recycling">
      <summary>項目コンテナーを再利用します。</summary>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingPanel">
      <summary>子ビジュアルを仮想化する <see cref="T:System.Windows.Controls.Panel" /> 要素のフレームワークを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.AddInternalChild(System.Windows.UIElement)">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 要素の <see cref="P:System.Windows.Controls.Panel.Children" /> コレクションに、指定された <see cref="T:System.Windows.UIElement" /> を追加します。</summary>
      <param name="child">コレクションに追加する <see cref="T:System.Windows.UIElement" /> の子。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.BringIndexIntoView(System.Int32)">
      <summary>派生クラスに実装された場合、指定されたインデックス位置に項目を生成し、表示します。</summary>
      <param name="index">生成され、表示される項目のインデックス位置。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.InsertInternalChild(System.Int32,System.Windows.UIElement)">
      <summary>指定した <see cref="T:System.Windows.UIElement" /> を <see cref="T:System.Windows.Controls.VirtualizingPanel" /> 要素のコレクションの指定したインデックス位置に追加します。</summary>
      <param name="index">子要素を挿入するコレクション内のインデックス位置。</param>
      <param name="child">コレクションに追加する <see cref="T:System.Windows.UIElement" /> の子。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingPanel.ItemContainerGenerator">
      <summary>この <see cref="T:System.Windows.Controls.VirtualizingPanel" /> の <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> を識別する値を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.VirtualizingPanel" /> の <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnClearChildren">
      <summary>子要素のコレクションが <see cref="T:System.Windows.Controls.Panel" /> 基本クラスによって削除されると呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>この <see cref="T:System.Windows.Controls.Panel" /> の <see cref="T:System.Windows.Controls.ItemsControl" /> に関連付けられた <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションが変更されると呼び出されます。</summary>
      <param name="sender">イベントを発生させた <see cref="T:System.Object" />。</param>
      <param name="args">
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> イベントにデータを提供します。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingPanel.RemoveInternalChildRange(System.Int32,System.Int32)">
      <summary>
        <see cref="P:System.Windows.Controls.Panel.Children" /> コレクションから子要素を削除します。</summary>
      <param name="index">最初の子要素が削除されるコレクション内の開始インデックス位置。</param>
      <param name="range">コレクションから削除する子要素の合計数。</param>
    </member>
    <member name="T:System.Windows.Controls.VirtualizingStackPanel">
      <summary>水平方向または垂直方向の直線状にコンテンツを整列して仮想化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 要素のコンテンツを配置します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> 要素およびその子要素の配置後のサイズを表す <see cref="T:System.Windows.Size" />。</returns>
      <param name="arrangeSize">この要素が子要素を配置するために使用する必要がある <see cref="T:System.Windows.Size" />。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> を水平方向にスクロールできるかどうかを示す値を取得または設定します。</summary>
      <returns>コンテンツを水平方向にスクロールできる場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll">
      <summary>コンテンツを垂直方向にスクロールできるかどうかを示す値を取得または設定します。</summary>
      <returns>コンテンツを垂直方向にスクロールできる場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> によってホストされる項目が再仮想化されると発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentHeight">
      <summary>領域の縦幅を含む値を取得します。</summary>
      <returns>領域の縦幅 (ピクセル) を表す <see cref="T:System.Double" />。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentWidth">
      <summary>領域の横幅を含む値を取得します。</summary>
      <returns>領域の横幅 (ピクセル) を表す <see cref="T:System.Double" />。既定値は 0 です。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.GetIsVirtualizing(System.Windows.DependencyObject)">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> がコンテンツを仮想化しているかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> がコンテンツを仮想化している場合は true。それ以外の場合は false。</returns>
      <param name="o">仮想化されるオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="o" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.GetVirtualizationMode(System.Windows.DependencyObject)">
      <summary>指定したオブジェクトの <see cref="T:System.Windows.Controls.VirtualizationMode" /> を返します。</summary>
      <returns>オブジェクトがコンテナー リサイクルを使用するかどうかを指定する列挙値の 1 つ。</returns>
      <param name="element">
        <see cref="T:System.Windows.Controls.VirtualizationMode" /> の読み取り元のオブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset">
      <summary>スクロールされたコンテンツの水平方向のオフセットを含む値を取得します。</summary>
      <returns>スクロールされたコンテンツの水平方向のオフセット (ピクセル) を表す <see cref="T:System.Double" />。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing">
      <summary>この <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> がその子コレクションを仮想化するかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> のこのインスタンスが子コレクションを仮想化している場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> が仮想化を使用しているかどうかを示す値。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> が仮想化を使用しているかどうかを示す値。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineDown">
      <summary>コンテンツを 1 論理単位分だけ下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineLeft">
      <summary>コンテンツを 1 論理単位分だけ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineRight">
      <summary>コンテンツを 1 論理単位分だけ右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.LineUp">
      <summary>コンテンツを 1 論理単位分だけ上にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.UIElement,System.Windows.Rect)">
      <summary>指定した座標までスクロールし、<see cref="T:System.Windows.UIElement" /> のその部分を表示します。</summary>
      <returns>現在表示されている <see cref="T:System.Windows.UIElement" /> の四角形の領域。</returns>
      <param name="visual">表示可能になる <see cref="T:System.Windows.UIElement" />。</param>
      <param name="rectangle">
        <see cref="T:System.Windows.UIElement" /> 内の座標空間を表す <see cref="T:System.Windows.Rect" />。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)" /> パスにおいて、配置に備えて <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> の子要素を測定します。</summary>
      <returns>要素の必要サイズを表す <see cref="T:System.Windows.Size" />。</returns>
      <param name="constraint">超えることができない上限の <see cref="T:System.Windows.Size" />。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown">
      <summary>画面を下方向にフリックしたときに、コンテンツを下方向へ論理的にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft">
      <summary>画面を左方向にフリックしたときに、コンテンツを左方向へ論理的にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight">
      <summary>画面を右方向にフリックしたときに、コンテンツを右方向へ論理的にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp">
      <summary>画面を上方向にフリックしたときに、コンテンツを上方向へ論理的にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> によってホストされる項目が再仮想化されると呼び出されます。</summary>
      <param name="e">イベントに関するデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnClearChildren">
      <summary>子要素のコレクションが <see cref="T:System.Windows.Controls.Panel" /> 基本クラスによって削除されると呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
      <summary>この <see cref="T:System.Windows.Controls.Panel" /> の <see cref="T:System.Windows.Controls.ItemsControl" /> に関連付けられた <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションが変更されると呼び出されます。</summary>
      <param name="sender">イベントを発生させた <see cref="T:System.Object" />。</param>
      <param name="args">
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> イベントにデータを提供します。</param>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.Orientation">
      <summary>スタックされたコンテンツが水平方向であるか垂直方向であるかを示す値を取得または設定します。</summary>
      <returns>子コンテンツの <see cref="T:System.Windows.Controls.Orientation" />。既定値は、<see cref="F:System.Windows.Controls.Orientation.Vertical" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageDown">
      <summary>コンテンツを 1 ページ分だけ下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageLeft">
      <summary>コンテンツを 1 ページ分だけ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageRight">
      <summary>コンテンツを 1 ページ分だけ右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.PageUp">
      <summary>コンテンツを 1 ページ分だけ上にスクロールします。</summary>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner">
      <summary>この <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> でのスクロール動作を制御するコンテナーを識別する値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> のスクロールを所有している <see cref="T:System.Windows.Controls.ScrollViewer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /> プロパティの値を設定します。</summary>
      <param name="offset">
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset" /> プロパティの値。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /> プロパティの値を設定します。</summary>
      <param name="offset">
        <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset" /> プロパティの値。</param>
    </member>
    <member name="M:System.Windows.Controls.VirtualizingStackPanel.SetVirtualizationMode(System.Windows.DependencyObject,System.Windows.Controls.VirtualizationMode)">
      <summary>指定したオブジェクトの <see cref="T:System.Windows.Controls.VirtualizationMode" /> を設定します。</summary>
      <param name="element">
        <see cref="T:System.Windows.Controls.VirtualizationMode" /> を設定する対象の要素。</param>
      <param name="value">
        <paramref name="element" /> でコンテナー リサイクルを使用するかどうかを指定する列挙値の 1 つ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset">
      <summary>コンテンツが現在どのくらい下にスクロールされているかを表す値を取得します。</summary>
      <returns>スクロールされたコンテンツの垂直方向のオフセット (ピクセル) を表す <see cref="T:System.Double" />。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportHeight">
      <summary>コンテンツのビューポートの縦幅 (表示可能な領域) を含む値を取得します。</summary>
      <returns>コンテンツのビューポート (表示領域) の縦幅を表す <see cref="T:System.Double" /> (ピクセル単位)。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportWidth">
      <summary>コンテンツのビューポートの横幅 (表示可能な領域) を含む値を取得します。</summary>
      <returns>コンテンツのビューポート (表示領域) の縦幅を表す <see cref="T:System.Double" /> (ピクセル単位)。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Controls.VirtualizingStackPanel.VirtualizationMode">
      <summary>
        <see cref="T:System.Windows.Controls.ItemsControl" /> のパネルが子項目を仮想化する方法を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.VirtualizationMode" /> 値の 1 つ。</returns>
    </member>
    <member name="F:System.Windows.Controls.VirtualizingStackPanel.VirtualizationModeProperty">
      <summary>
        <see cref="T:System.Windows.Controls.VirtualizingStackPanel" /> の現在の仮想化モード (<see cref="F:System.Windows.Controls.VirtualizationMode.Recycling" /> であるかどうか)。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ButtonBase">
      <summary>
        <see cref="T:System.Windows.Controls.Button" />、<see cref="T:System.Windows.Controls.Primitives.RepeatButton" />、<see cref="T:System.Windows.Controls.HyperlinkButton" /> など、すべてのボタン コントロールの基本クラスを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ButtonBase.Click">
      <summary>
        <see cref="T:System.Windows.Controls.Button" /> がタップされたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントが発生するタイミングを取得または設定します。</summary>
      <returns>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントが発生するタイミング。既定値は <see cref="F:System.Windows.Controls.ClickMode.Release" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.Command">
      <summary>このボタンが押されたときに呼び出すコマンドを取得または設定します。</summary>
      <returns>このボタンが押されたときに呼び出すコマンド。既定値は null です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> プロパティに渡すパラメーターを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> プロパティに渡すパラメーター。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> 依存関係プロパティの識別子。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 依存関係プロパティの識別子。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsFocused">
      <summary>ボタンにフォーカスがあるかどうかを判断する値を取得します。</summary>
      <returns>コントロールにフォーカスがある場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.IsFocusedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsFocused" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsFocused" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsMouseOver">
      <summary>指がこのボタン コントロールの上にあるかどうかを示す値を取得します。</summary>
      <returns>指がボタン コントロール上にあることを示す場合はtrue。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.IsMouseOverProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsMouseOver" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsMouseOver" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> が現在、押された状態かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> が押された状態の場合はtrue。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnClick">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを発生させます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnGotFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.GotFocus" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> プロパティの値が変更されたときに呼び出されます。</summary>
      <param name="e">
        <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> のデータ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>このコントロールにフォーカスがある状態でユーザーがキーを押したときに発生する <see cref="E:System.Windows.UIElement.KeyDown" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
      <summary>このコントロールにフォーカスがある状態でユーザーがキーを離したときに発生する <see cref="E:System.Windows.UIElement.KeyUp" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostFocus(System.Windows.RoutedEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostFocus" /> イベントに対する処理を提供します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.LostFocus" /> イベントのイベント データ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.UIElement.LostMouseCapture" /> イベントに対する処理を提供します。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Input.MouseEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>ユーザーのタッチがこのコントロールに入ったときに発生する <see cref="E:System.Windows.UIElement.MouseEnter" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>ユーザーのタッチが要素から離れたときに発生する <see cref="E:System.Windows.UIElement.MouseLeave" /> ルーティング イベントのクラス処理を提供します。</summary>
      <param name="e">
        <see cref="E:System.Windows.UIElement.MouseLeave" /> イベントのイベント データ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>ユーザーがコントロールに触れたときに発生する <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>ユーザーがこのコントロールの上に置いている指を離したときに発生する <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>この要素の上にマウス ポインターがある間に、マウス ポインターが移動すると発生する <see cref="E:System.Windows.UIElement.MouseMove" /> イベントのクラス処理を提供します。</summary>
      <param name="e">イベントのデータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> が null です。</exception>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventArgs">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールのドラッグ操作を完了したときに発生する、<see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> イベントに関するデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragCompletedEventArgs.#ctor(System.Double,System.Double,System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="horizontalChange">ドラッグ操作による <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールの位置の水平方向の変更。</param>
      <param name="verticalChange">ドラッグ操作による <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールの位置の垂直方向の変更。</param>
      <param name="canceled">ドラッグ操作が <see cref="M:System.Windows.Controls.Primitives.Thumb.CancelDrag" /> メソッドの呼び出しによってキャンセルされたかどうかを示す値。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.Canceled">
      <summary>ドラッグ操作がキャンセルされたかどうかを示す値を取得します。</summary>
      <returns>ドラッグ操作がキャンセルされた場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.HorizontalChange">
      <summary>ドラッグ操作による <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールの位置の水平方向の変更を取得します。</summary>
      <returns>ドラッグ操作による <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールの位置の水平方向の変更。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.VerticalChange">
      <summary>ドラッグ操作による <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールの位置の垂直方向の変更を取得します。</summary>
      <returns>ドラッグ操作による <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールの位置の垂直方向の変更。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragCompletedEventHandler">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventArgs">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールをドラッグしたときに 1 回以上発生する <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragDeltaEventArgs.#ctor(System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="horizontalChange">最後の <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> イベント以降の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 位置の水平方向の変更。</param>
      <param name="verticalChange">最後の <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> イベント以降の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 位置の垂直方向の変更。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.HorizontalChange">
      <summary>最後の <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> イベント以降の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 位置の水平方向の変更を取得します。</summary>
      <returns>最後の <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> イベント以降の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 位置の水平方向の変更。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.VerticalChange">
      <summary>最後の <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> イベント以降の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 位置の垂直方向の変更を取得します。</summary>
      <returns>最後の <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> イベント以降の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 位置の垂直方向の変更。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragDeltaEventHandler">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventArgs">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールをドラッグしたときに発生する、<see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> イベントに関するデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.DragStartedEventArgs.#ctor(System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.DragStartedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="horizontalOffset">タップされた位置から最初の縮小座標までの横方向の距離。</param>
      <param name="verticalOffset">タップされた位置から最初の縮小座標までの縦方向の距離。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset">
      <summary>タップされた位置からつまみの初期座標までの横方向の距離を取得します。</summary>
      <returns>タップされた位置から最初の縮小座標までの横方向の距離。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset">
      <summary>タップされた位置からつまみの初期座標までの縦方向の距離を取得します。</summary>
      <returns>タップされた位置から最初の縮小座標までの縦方向の距離。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.DragStartedEventHandler">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorDirection">
      <summary>項目の生成が行われる方向を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Forward">
      <summary>順方向に項目を生成するように指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Backward">
      <summary>逆方向に項目を生成するように指定します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.GeneratorPosition">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> は、<see cref="T:System.Windows.Controls.ItemContainerGenerator" /> によって管理される項目の位置を表すために使用されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.#ctor(System.Int32,System.Int32)">
      <summary>インデックスおよびオフセットを指定して、<see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> の新しいインスタンスを初期化します。</summary>
      <param name="index">生成された (実現された) 項目を基準とした <see cref="T:System.Int32" /> インデックス。-1 は項目一覧の先頭または末尾にある架空の項目を参照する特殊な値です。</param>
      <param name="offset">インデックス付けされた項目の近くにある未生成 (実現されていない) 項目に対する <see cref="T:System.Int32" /> オフセット。オフセット 0 はインデックス付けされた要素自体、オフセット 1 は次の未生成 (実現されていない) 項目、オフセット -1 は前の項目を参照します。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.Equals(System.Object)">
      <summary>指定したインスタンスと <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> の現在のインスタンスを比較し、値が等しいかどうかを確認します。</summary>
      <returns>
        <paramref name="o" /> および <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> のこのインスタンスが同じ値を持つ場合は true。</returns>
      <param name="o">比較対象の <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> インスタンス。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode">
      <summary>この <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> のハッシュ コードを返します。</summary>
      <returns>この <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> のハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Index">
      <summary>生成された (実現された) 項目を基準とした <see cref="T:System.Int32" /> インデックスを取得または設定します。</summary>
      <returns>生成された (実現された) 項目を基準とした <see cref="T:System.Int32" /> インデックス。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Offset">
      <summary>インデックス付けされた項目の近くにある未生成 (実現されていない) 項目を基準とした <see cref="T:System.Int32" /> オフセットを取得または設定します。</summary>
      <returns>インデックス付けされた項目の近くにある未生成 (実現されていない) 項目に対する <see cref="T:System.Int32" /> オフセット。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Equality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>2 つの <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> オブジェクトを比較し、値が等しいかどうかを確認します。</summary>
      <returns>2 つのオブジェクトが同じである場合は true、異なる場合は false。</returns>
      <param name="gp1">最初に比較するインスタンス。</param>
      <param name="gp2">2 番目に比較するインスタンス。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Inequality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>2 つの <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> オブジェクトを比較し、値が等しくないかどうかを確認します。</summary>
      <returns>値が等しくない場合は true。それ以外の場合は false。</returns>
      <param name="gp1">最初に比較するインスタンス。</param>
      <param name="gp2">2 番目に比較するインスタンス。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.GeneratorPosition.ToString">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> のこのインスタンスの文字列形式を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> のこのインスタンスの文字列形式。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IItemContainerGenerator">
      <summary>ホストに代わり UI コンテンツを生成する担当のクラスによって実装されるインターフェイス。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)">
      <summary>次の項目の表示に使用されるコンテナー要素と、コンテナー要素が新しく生成されたか (実現されたか) どうかを返します。</summary>
      <returns>次の項目を表示するために使用されるコンテナー要素である <see cref="T:System.Windows.DependencyObject" />。</returns>
      <param name="isNewlyRealized">返される <see cref="T:System.Windows.DependencyObject" /> が新しく生成された (実現された) 場合は true。それ以外の場合は false。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)">
      <summary>指定したインデックスにある項目にマッピングする <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> オブジェクトを返します。</summary>
      <returns>指定したインデックスにある項目にマッピングする <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> オブジェクト。</returns>
      <param name="itemIndex">任意の項目のインデックス。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
      <summary>指定したパネルでの使用に適した <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> を返します。</summary>
      <returns>指定したパネルでの使用に適した <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。</returns>
      <param name="panel">適切な <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> を返すパネル。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
      <summary>指定した <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> にマッピングするインデックスを返します。</summary>
      <returns>指定した <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> にマッピングするインデックスである <see cref="T:System.Int32" />。</returns>
      <param name="position">任意の項目のインデックス。目的のインデックスの <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer(System.Windows.DependencyObject)">
      <summary>対応する項目のコンテナーとして、指定された要素を準備します。</summary>
      <param name="container">準備するコンテナー。通常、<paramref name="container" /> は <see cref="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)" /> の前回の呼び出しの結果です。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>生成された (実現された) 項目を 1 つ以上削除します。</summary>
      <param name="position">削除する要素の <see cref="T:System.Int32" /> インデックス。<paramref name="position" /> は、以前生成した (実現した) 項目を参照する必要があります。つまり、そのオフセットはゼロである必要があります。</param>
      <param name="count">
        <paramref name="position" /> を先頭に、削除する要素の数の <see cref="T:System.Int32" /> 値。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll">
      <summary>生成された (実現された) 項目をすべて削除します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
      <summary>指定した <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> から開始して、指定した <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection" /> でジェネレーターが項目を生成する準備をし、生成した (実現した) 項目で開始するかどうかを制御します。</summary>
      <returns>生成プロセスの有効期間を追跡する <see cref="T:System.IDisposable" /> オブジェクト。</returns>
      <param name="position">項目の生成を開始する項目の位置を指定する <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" />。</param>
      <param name="direction">項目の生成を開始する項目の位置を指定します。</param>
      <param name="allowStartAtRealizedItem">生成された (実現された) 項目で開始するかどうかを指定する <see cref="T:System.Boolean" />。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.IItemContainerGenerator" /> インターフェイスを、それ自体が生成する UI コンテンツを再利用するように拡張します。ホストの代わりにユーザー インターフェイス (UI) コンテンツを生成するクラスが、このインターフェイスを実装します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IRecyclingItemContainerGenerator.Recycle(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
      <summary>他のデータ項目に後から再使用できるように、項目コンテナーとそれらのデータ項目との関連付けを解除し、コンテナーを保存します。</summary>
      <param name="position">再利用する最初の要素の 0 から始まるインデックス番号。<paramref name="position" /> は、以前生成した (実現した) 項目を参照する必要があります。</param>
      <param name="count">
        <paramref name="position" /> から始めて、再利用する要素の数。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.IScrollInfo">
      <summary>
        <see cref="T:System.Windows.Controls.ScrollViewer" /> コントロール内のメインのスクロール可能領域を表します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanHorizontallyScroll">
      <summary>水平軸上にスクロールできるかどうかを示す値を取得または設定します。</summary>
      <returns>スクロールが可能な場合は true、不可能な場合は false。このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanVerticallyScroll">
      <summary>垂直軸上にスクロールできるかどうかを示す値を取得または設定します。</summary>
      <returns>スクロールが可能な場合は true、不可能な場合は false。このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight">
      <summary>領域の縦幅を取得します。</summary>
      <returns>領域の縦幅をデバイスに依存しないピクセル数で表す <see cref="T:System.Double" />。このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth">
      <summary>領域の横幅を取得します。</summary>
      <returns>領域の横幅をデバイスに依存しないピクセル数で表す<see cref="T:System.Double" />。このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.HorizontalOffset">
      <summary>スクロールされたコンテンツの水平方向のオフセットを取得します。</summary>
      <returns>水平方向のオフセットをデバイスに依存しないピクセル数で表す <see cref="T:System.Double" />。有効値は、0 より大きく <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth" /> と <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth" /> の差の値未満です。このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineDown">
      <summary>コンテンツ内で 1 論理単位分だけ下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineLeft">
      <summary>コンテンツ内で 1 論理単位分だけ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineRight">
      <summary>コンテンツ内で 1 論理単位分だけ右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.LineUp">
      <summary>コンテンツ内で 1 論理単位分だけ上にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MakeVisible(System.Windows.UIElement,System.Windows.Rect)">
      <summary>表示オブジェクトの座標領域が表示されるまで内容を強制的にスクロールします。</summary>
      <returns>表示される <see cref="T:System.Windows.Rect" />。</returns>
      <param name="visual">表示可能になる <see cref="T:System.Windows.UIElement" />。</param>
      <param name="rectangle">表示する座標空間を識別する四角形領域。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelDown">
      <summary>コンテンツ内を下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelLeft">
      <summary>コンテンツ内を左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelRight">
      <summary>コンテンツ内を右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelUp">
      <summary>コンテンツ内を上にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageDown">
      <summary>内容を 1 ページずつ下にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageLeft">
      <summary>内容を 1 ページずつ左にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageRight">
      <summary>内容を 1 ページずつ右にスクロールします。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.PageUp">
      <summary>内容を 1 ページずつ上にスクロールします。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ScrollOwner">
      <summary>スクロール動作を制御する <see cref="T:System.Windows.Controls.ScrollViewer" /> 要素を取得または設定します。</summary>
      <returns>スクロール動作を制御する <see cref="T:System.Windows.Controls.ScrollViewer" /> 要素。このプロパティには既定値はありません。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetHorizontalOffset(System.Double)">
      <summary>水平方向のオフセット量を設定します。</summary>
      <param name="offset">コンテンツが含まれるビューポートから水平方向にオフセットされる量。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetVerticalOffset(System.Double)">
      <summary>垂直方向のオフセット量を設定します。</summary>
      <param name="offset">コンテンツが含まれるビューポートから垂直方向にオフセットされる量。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.VerticalOffset">
      <summary>スクロールされたコンテンツの垂直方向のオフセットを取得します。</summary>
      <returns>スクロールされたコンテンツの垂直方向のオフセットをデバイスに依存しないピクセル数で表す <see cref="T:System.Double" />。有効値は、0 より大きく <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight" /> と <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight" /> の差の値未満です。このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight">
      <summary>このコンテンツのビューポートの縦幅を取得します。</summary>
      <returns>このコンテンツのビューポートの縦幅をデバイスに依存しないピクセル数で表す <see cref="T:System.Double" />。このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth">
      <summary>このコンテンツのビューポートの横幅を取得します。</summary>
      <returns>このコンテンツのビューポートの横幅をデバイスに依存しないピクセル数で表す<see cref="T:System.Double" />。このプロパティには既定値はありません。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> イベントにデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Action">
      <summary>項目コレクションで発生したアクションを取得します。</summary>
      <returns>発生したアクションを返します。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemCount">
      <summary>変更に関連する項目の数を取得します。</summary>
      <returns>変更に関連する項目の数を表す整数。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemUICount">
      <summary>変更に関連した UI 要素数を取得します。</summary>
      <returns>変更に関連する UI 要素数を表す整数。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.OldPosition">
      <summary>変更が発生する前のコレクション内の位置を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> を返します。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Position">
      <summary>変更が発生したコレクション内の位置を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition" /> を返します。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ItemsChangedEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.LayoutInformation">
      <summary>要素のレイアウトに関する追加情報を提供する方法を定義します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutClip(System.Windows.FrameworkElement)">
      <summary>指定された要素の可視領域を返します。</summary>
      <returns>クリップされた要素の可視領域、またはレイアウト中に要素がクリップされなかった場合は null。</returns>
      <param name="element">レイアウト クリップ ジオメトリが必要とされる要素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutExceptionElement(System.Windows.Threading.Dispatcher)">
      <summary>未処理の例外が発生したときにレイアウト システムによって処理されていた要素を返します。</summary>
      <returns>未処理の例外が発生したときに処理されていた要素。</returns>
      <param name="dispatcher">操作のスコープを定義する <see cref="T:System.Windows.Threading.Dispatcher" /> オブジェクト。レイアウト エンジン インスタンスごとに 1 つのディスパッチャーがあります。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutSlot(System.Windows.FrameworkElement)">
      <summary>指定された要素を含むレイアウト スロットまたは境界ボックスを返します。</summary>
      <returns>レイアウト用に要素に割り当てられた領域。</returns>
      <param name="element">レイアウト スロットを必要とする要素。</param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ManipulationLockMode">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ViewportControl" /> の操作をロックするために使用する値を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ManipulationLockMode.Free">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ViewportControl" /> のすべての境界をドラッグして、コントロールを自由にフリックできます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ManipulationLockMode.Horizontal">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ViewportControl" /> には、水平スクロールしかありません。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ManipulationLockMode.Vertical">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ViewportControl" /> には、垂直スクロールしかありません。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ManipulationLockMode.PreferHorizontalOrVertical">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ViewportControl" /> は X 軸または Y 軸の両側で 22.5 度にロックされます。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ManipulationLockMode.HorizontalOrVertical">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ViewportControl" /> は X 軸または Y 軸の両側で 45 度にロックされます。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ManipulationState">
      <summary>ViewPortControl の相互に排他的なさまざまな操作の状態を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ManipulationState.Idle">
      <summary>操作やアニメーションを行っているものが存在しないことを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ManipulationState.Manipulating">
      <summary>ジェスチャを認識し、指を置き、すべてのデルタを受信し、ドラッグ/パンまたはフリックすることを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ManipulationState.Animating">
      <summary>現時点でジェスチャは行われていないが、スクロール アニメーションや圧縮アニメーションなど、何らかのアニメーションが行われていることを指定します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ManipulationStateChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ViewportControl.ManipulationStateChanged" /> イベントにデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ManipulationStateChangedEventArgs.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ManipulationStateChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.PlacementMode">
      <summary>視覚的要素を基準として <see cref="T:System.Windows.Controls.ToolTip" /> を配置するための既定の場所を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Bottom">
      <summary>ツールヒントの既定の場所がターゲット要素の下であることを示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Right">
      <summary>ツールヒントの既定の場所がターゲット要素の右であることを示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Mouse">
      <summary>ツールヒントの既定の場所がポインターの場所であることを示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Left">
      <summary>ツールヒントの既定の場所がターゲット要素の左であることを示します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.PlacementMode.Top">
      <summary>ツールヒントの既定の場所がターゲット要素の上であることを示します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Popup">
      <summary>既存のアプリケーション コンテンツの上にコンテンツを表示します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Popup.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Popup" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.Child">
      <summary>ポップアップでホストするコンテンツを取得または設定します。</summary>
      <returns>ポップアップでホストされるコンテンツ。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.ChildProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> 依存関係プロパティの識別子を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Closed">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> プロパティが false に設定されると発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
      <summary>アプリケーションの左端とポップアップの左端との間の距離を取得または設定します。</summary>
      <returns>アプリケーションの左端とポップアップの左端との間の距離 (ピクセル単位)。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 依存関係プロパティの識別子を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.IsOpen">
      <summary>ポップアップが現在画面に表示されているかどうかを取得または設定します。</summary>
      <returns>ポップアップが現在表示されている場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.IsOpenProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 依存関係プロパティの識別子を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Popup.Opened">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> プロパティが true に設定されると発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
      <summary>アプリケーションの上端とポップアップの上端との間の距離を取得または設定します。</summary>
      <returns>アプリケーションの上端からポップアップの上端までの距離 (ピクセル単位)。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 依存関係プロパティの識別子を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RangeBase">
      <summary>
        <see cref="T:System.Windows.Controls.ProgressBar" /> コントロール、<see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> コントロール、<see cref="T:System.Windows.Controls.Slider" /> コントロールなど、特定範囲の値を持つ要素を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.LargeChange">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> コントロールの <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> に対して加算または減算する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 要素の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> に対して加算または減算する <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。既定値は 1 です。</returns>
      <exception cref="T:System.ArgumentException">新しい値が <see cref="F:System.Double.NaN" /> または 0 未満です。あるいは <see cref="M:System.Double.IsInfinity(System.Double)" /> が true です。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.LargeChangeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Maximum">
      <summary>範囲要素に指定できる最大の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> を取得または設定します。</summary>
      <returns>範囲要素に指定できる最大の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。既定値は 1 です。</returns>
      <exception cref="T:System.ArgumentException">新しい値は <see cref="F:System.Double.NaN" /> です。または <see cref="M:System.Double.IsInfinity(System.Double)" /> が true です。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MaximumProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Minimum">
      <summary>範囲要素に指定できる <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> を取得または設定します。</summary>
      <returns>範囲要素に指定できる <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。既定値は 0 です。</returns>
      <exception cref="T:System.ArgumentException">新しい値は <see cref="F:System.Double.NaN" /> です。または <see cref="M:System.Double.IsInfinity(System.Double)" /> が true です。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.MinimumProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMaximumChanged(System.Double,System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティの変更前の値。</param>
      <param name="newMaximum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティの変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnMinimumChanged(System.Double,System.Double)">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティの変更前の値。</param>
      <param name="newMinimum">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティの変更後の値。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.OnValueChanged(System.Double,System.Double)">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> ルーティング イベントを発生させます。</summary>
      <param name="oldValue">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> プロパティの変更前の値。</param>
      <param name="newValue">
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> プロパティの変更後の値。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.SmallChange">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> コントロールの <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> に対して加算または減算する <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> 要素の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> に対して加算または減算する <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。既定値は 0.1 です。</returns>
      <exception cref="T:System.ArgumentException">新しい値が <see cref="F:System.Double.NaN" /> または 0 未満です。あるいは <see cref="M:System.Double.IsInfinity(System.Double)" /> が true です。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.SmallChangeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RangeBase.ToString">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> オブジェクトの文字列形式を提供します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.RangeBase" /> オブジェクトの文字列形式を返します。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RangeBase.Value">
      <summary>範囲コントロールの現在の設定を取得または設定します。特定の値が強制的に適用される場合もあります。</summary>
      <returns>強制できる範囲コントロールの現在の設定。既定値は 0 です。</returns>
      <exception cref="T:System.ArgumentException">新しい値は <see cref="F:System.Double.NaN" /> です。または <see cref="M:System.Double.IsInfinity(System.Double)" /> が true です。</exception>
    </member>
    <member name="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged">
      <summary>範囲値が変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RangeBase.ValueProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.RepeatButton">
      <summary>コントロールが押されてから離されるまで、その <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントを繰り返し発生させるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Delay">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> が押された後、クリック操作の繰り返しが開始されるまで待機する時間 (ミリ秒単位) を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> が押された後、クリック操作の繰り返しが開始されるまでに待機する時間 (ミリ秒)。既定値は 250 です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay" /> が 0 未満の値に設定されています。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.DelayProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.RepeatButton.Interval">
      <summary>クリック操作の繰り返しが開始された直後の、クリック間隔の時間 (ミリ秒) を取得または設定します。</summary>
      <returns>クリック操作の繰り返しが開始された直後の、クリック間隔の時間 (ミリ秒)。既定値は 250 です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval" /> が 0 未満の値に設定されています。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.RepeatButton.IntervalProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.RepeatButton.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> コントロールのビジュアル ツリーを構築します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollBar">
      <summary>その位置が値に対応するスライディング <see cref="T:System.Windows.Controls.Primitives.Thumb" /> の付いた、スクロール バーを提供するコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollBar.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> コントロールのビジュアル ツリーを構築します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.Orientation">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を水平または垂直のどちらで表示するかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> を水平または垂直のどちらで表示するかを定義する <see cref="T:System.Windows.Controls.Orientation" /> 列挙値。既定値は、<see cref="F:System.Windows.Controls.Orientation.Horizontal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.OrientationProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ScrollBar.Scroll">
      <summary>ユーザーが <see cref="T:System.Windows.Controls.Primitives.Thumb" /> を移動したときに <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> でコンテンツがスクロールすると、1 回以上発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize">
      <summary>現在表示されるスクロール可能なコンテンツの量を取得または設定します。</summary>
      <returns>現在表示されるスクロール可能なコンテンツの量。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollBar.ViewportSizeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> イベントにデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ScrollEventArgs.#ctor(System.Windows.Controls.Primitives.ScrollEventType,System.Double)">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="scrollEventType">イベントを説明する <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" />。</param>
      <param name="newValue">
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の新しい <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.NewValue">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の新しい <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> を取得します。</summary>
      <returns>イベント後の <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.ScrollEventType">
      <summary>イベントを説明する <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> を取得します。</summary>
      <returns>イベントを説明する <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" />。</returns>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventHandler">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Controls.Primitives.ScrollEventArgs" />。 </param>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ScrollEventType">
      <summary>発生した <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> イベントの型を指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.EndScroll">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> は新しい位置にドラッグされており、現在ユーザーによってドラッグされていないことを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.First">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> が <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 位置に移動したことを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeDecrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> が <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> の値で指定される距離だけ移動したことを示します。水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の左または垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の上に移動される <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeIncrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> が <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> の値で指定される距離だけ移動したことを示します。<see cref="T:System.Windows.Controls.Primitives.Thumb" /> は、右 (水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合) または下 (垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合) に移動しました。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.Last">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> が <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 位置に移動したことを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallDecrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> が <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> の値で指定される距離だけ移動したことを示します。水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の左または垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の上に移動される <see cref="T:System.Windows.Controls.Primitives.Thumb" />。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallIncrement">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> が <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> の値で指定される距離だけ移動したことを示します。<see cref="T:System.Windows.Controls.Primitives.Thumb" /> は、右 (水平 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合) または下 (垂直 <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> の場合) に移動しました。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbPosition">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> が新しい位置に移動したことを指定します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbTrack">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> がドラッグされたため、<see cref="E:System.Windows.UIElement.MouseMove" /> イベントが発生しました。この <see cref="T:System.Windows.Controls.Primitives.ScrollEventType" /> の <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll" /> イベントは、<see cref="T:System.Windows.Controls.Primitives.Thumb" /> が <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> でドラッグされると複数回発生する場合があります。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Selector">
      <summary>ユーザーが項目のコレクションから項目を選択できるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定されたコンテンツの項目コンテナーに適用される任意のバインディングとテンプレートを削除します。</summary>
      <param name="element">指定されたコンテンツを表示するのに使用されるコンボ ボックス項目。</param>
      <param name="item">項目のコンテンツ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.GetIsSelectionActive(System.Windows.DependencyObject)">
      <summary>指定した <see cref="T:System.Windows.Controls.Primitives.Selector" /> にフォーカスがあるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Selector" /> にフォーカスがあることを示す場合は true。それ以外の場合は false。</returns>
      <param name="element">評価する <see cref="T:System.Windows.Controls.Primitives.Selector" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Selector" /> で <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> を <see cref="P:System.Windows.Controls.ItemsControl.Items" /> プロパティの現在の項目と同期するかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> が現在の項目と常に同期される場合は true。<see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> が現在の項目と同期されない場合は false。<see cref="T:System.Windows.Controls.Primitives.Selector" /> で <see cref="T:System.ComponentModel.ICollectionView" /> が使用される場合にだけ <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> が現在の項目と同期される場合は null。既定値は null です。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem" /> が true に設定されます。</exception>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItemProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.Primitives.Selector" /> コントロールのビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
        <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションが変更されたときに、現在選択されている項目を更新します。</summary>
      <param name="e">項目コレクションでの変更に関するデータを含みます。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>指定された項目を表示するために、指定された要素を準備します。</summary>
      <param name="element">指定された項目を表示するために使用する要素。</param>
      <param name="item">表示する項目。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedIndex">
      <summary>選択項目のインデックスを取得または設定します。</summary>
      <returns>選択項目のインデックス。既定値は -1 です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedIndexProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedItem">
      <summary>選択された項目を取得または設定します。</summary>
      <returns>選択された項目。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedItemProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValue">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> を使用して取得される、選択されている項目の値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> を使用して取得される、選択されている項目の値。項目が選択されていない場合は null が返されます。既定値は null です。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> プロパティの <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> プロパティを取得するために使用されるプロパティ パスを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /> プロパティの <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> プロパティを取得するのに使用されるプロパティ パス。既定値は、<see cref="F:System.String.Empty" /> です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValuePathProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> 依存関係プロパティの識別子を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Selector.SelectedValueProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> 依存関係プロパティの識別子を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Selector.SelectionChanged">
      <summary>現在選択されているアイテムが変わるときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>初期化の開始を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Selector.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>初期化の完了を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.Thumb">
      <summary>ユーザーがドラッグできるコントロールを表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.CancelDrag">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> のドラッグ操作をキャンセルします。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragCompleted">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールでカーソルのキャプチャがなくなると発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragDelta">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールに論理フォーカスおよびカーソル キャプチャがある場合に、ユーザーが指を画面上で移動すると 1 回以上発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.Thumb.DragStarted">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールが論理フォーカスおよびカーソル キャプチャを受け取ると発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Thumb.IsDragging">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールにフォーカスおよびカーソル キャプチャがあるかどうかを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールにフォーカスおよびカーソル キャプチャがある場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.IsDraggingProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.Thumb.IsFocused">
      <summary>つまみにフォーカスがあるかどうかを取得します。</summary>
      <returns>つまみにフォーカスがあることを示す場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.Thumb.IsFocusedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.Thumb.IsFocused" /> 依存関係プロパティの識別子を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.Thumb.IsFocused" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.Thumb.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.Primitives.Thumb" /> コントロールのビジュアル ツリーを構築します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ToggleButton">
      <summary>
        <see cref="T:System.Windows.Controls.CheckBox" /> や <see cref="T:System.Windows.Controls.RadioButton" /> などの、状態を切り替えることができるコントロールの基本クラス。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Checked">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> がオンにされたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> の状態が不確定状態に切り替わったときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> がオンにされているかどうかを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> がオンにされている場合は true。<see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> がオンにされていない場合は false。それ以外の場合は null。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsCheckedProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState">
      <summary>コントロールが 2 つまたは 3 つの状態をサポートするかを取得または設定します。</summary>
      <returns>コントロールが 3 つの状態をサポートする場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ToggleButton.IsThreeStateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> のビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnClick">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> がユーザーによってタップされるか、キーボードを使用してアクティブにされたときに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnContentChanged(System.Object,System.Object)">
      <summary>
        <see cref="T:System.Windows.Controls.ContentControl" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldContent">置き換えられるコンテンツ。</param>
      <param name="newContent">表示する新しいコンテンツ。</param>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnCreateAutomationPeer">
      <summary>Windows Phone オートメーション インフラストラクチャで使用するための <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" /> を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> オブジェクトの <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer" />。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.OnToggle">
      <summary>トグル動作を実装するために、<see cref="M:System.Windows.Controls.Primitives.ToggleButton.OnClick" /> メソッドによって呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ToggleButton.ToString">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> オブジェクトの文字列形式を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> オブジェクトの文字列形式。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> がオフにされているときに発生します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ViewportChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.Primitives.ViewportControl.ViewportChanged" /> イベントにデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ViewportChangedEventArgs.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ViewportChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Controls.Primitives.ViewportControl">
      <summary>
        <see cref="T:Microsoft.Phone.Controls.LongListSelector" /> の仮想化されたスクロール可能領域を表します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ViewportControl.#ctor">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ViewportControl" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ViewportControl.Bounds">
      <summary>
        <see cref="T:System.Windows.Controls.Primitives.ViewportControl" /> 内のスクロール可能なサーフェイスの境界を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Controls.Primitives.ViewportControl" /> 内のスクロール可能なサーフェイスの境界。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ViewportControl.BoundsProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ViewportControl.Bounds" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ViewportControl.Bounds" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ViewportControl.ManipulationLockMode">
      <summary>ジェスチャの方向を取得または設定します。</summary>
      <returns>ジェスチャの方向。</returns>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ViewportControl.ManipulationLockModeProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ViewportControl.ManipulationLockMode" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ViewportControl.ManipulationLockMode" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ViewportControl.ManipulationState">
      <summary>現在の <see cref="T:System.Windows.Controls.Primitives.ManipulationState" /> を取得します。</summary>
      <returns>現在の <see cref="T:System.Windows.Controls.Primitives.ManipulationState" />。既定値は <see cref="F:System.Windows.Controls.Primitives.ManipulationState.Idle" /> です。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ViewportControl.ManipulationStateChanged">
      <summary>操作の状態が変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ViewportControl.ManipulationStateProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ViewportControl.ManipulationState" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ViewportControl.ManipulationState" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ViewportControl.OnApplyTemplate">
      <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.Primitives.ViewportControl" /> のビジュアル ツリーを構築します。</summary>
    </member>
    <member name="M:System.Windows.Controls.Primitives.ViewportControl.SetViewportOrigin(System.Windows.Point)">
      <summary>指定されたビューポートの原点までスクロールします。</summary>
      <param name="location">指定されたビューポートの原点。</param>
    </member>
    <member name="P:System.Windows.Controls.Primitives.ViewportControl.Viewport">
      <summary>現在のビューポートを取得します。</summary>
      <returns>現在のビューポート。</returns>
    </member>
    <member name="E:System.Windows.Controls.Primitives.ViewportControl.ViewportChanged">
      <summary>ビューポートが変更されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Controls.Primitives.ViewportControl.ViewportProperty">
      <summary>
        <see cref="P:System.Windows.Controls.Primitives.ViewportControl.Viewport" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Controls.Primitives.ViewportControl.Viewport" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Data.Binding">
      <summary>バインディング ターゲットとデータ ソースのプロパティを接続するバインディングを定義します。</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.Binding" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.#ctor(System.String)">
      <summary>
        <see cref="T:System.Windows.Data.Binding" /> クラスの新しいインスタンスをデータ ソースの初期プロパティ パスで初期化します。</summary>
      <param name="path">バインディングのソースの初期プロパティ パス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.BindsDirectlyToSource">
      <summary>バインディングでデータ ソースの <see cref="T:System.ComponentModel.ICollectionView" /> 設定を無視するかどうかを示す値を取得または設定します。</summary>
      <returns>バインディングがデータ ソースに直接バインドする場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.Converter">
      <summary>バインディング エンジンによって呼び出され、ソースとターゲット間で渡されるときにデータを修正するコンバーター オブジェクトを取得または設定します。</summary>
      <returns>データを修正する <see cref="T:System.Windows.Data.IValueConverter" /> オブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.Binding" /> は既にターゲット要素に添付されており、変更できません。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterCulture">
      <summary>
        <see cref="P:System.Windows.Data.Binding.Converter" /> で使用するカルチャを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Data.Binding.Converter" /> によって使用される <see cref="T:System.Globalization.CultureInfo" />。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.Binding" /> は既にターゲット要素に添付されており、変更できません。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.ConverterParameter">
      <summary>
        <see cref="P:System.Windows.Data.Binding.Converter" /> ロジックで使用できるパラメーターを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Data.Binding.Converter" /> に渡されるパラメーター。これは変換ロジックに使用できます。既定値は null です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.Binding" /> は既にターゲット要素に添付されており、変更できません。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.ElementName">
      <summary>バインディング ソース オブジェクトとして使用する要素名を取得または設定します。</summary>
      <returns>バインディング先の要素の <see cref="P:System.Windows.FrameworkElement.Name" /> プロパティまたは [52a8603c-9e3a-40fd-bf91-f81ad071247c]の値。既定値は null です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.Binding" /> は既にターゲット要素に添付されており、変更できません。または<see cref="P:System.Windows.Data.Binding.Source" /> プロパティまたは <see cref="P:System.Windows.Data.Binding.RelativeSource" /> プロパティは既に設定されています。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.Mode">
      <summary>バインディングのデータ フローの方向を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.BindingMode" /> 値の 1 つ。既定値は、<see cref="F:System.Windows.Data.BindingMode.OneWay" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.Binding" /> は既にターゲット要素に添付されており、変更できません。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.NotifyOnValidationError">
      <summary>検証エラーで <see cref="E:System.Windows.FrameworkElement.BindingValidationError" /> イベントが発生したかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="E:System.Windows.FrameworkElement.BindingValidationError" /> イベントが発生する場合は true。それ以外の場合は false。既定値は false です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.Binding" /> は既にターゲット要素に添付されており、変更できません。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.Path">
      <summary>バインディング ソース プロパティへのパスを取得または設定します。</summary>
      <returns>バインディング ソースのプロパティ パス。<see cref="T:System.Windows.PropertyPath" /> または「[1430422a-65dd-45a3-9b24-e57fb342a1e1]」を参照してください。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.Binding" /> は既にターゲット要素に添付されており、変更できません。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.RelativeSource">
      <summary>バインディング ターゲットに対する相対的な位置を指定して、バインディング ソースを取得または設定します。</summary>
      <returns>使用するバインディング ソースの相対的な場所。既定値は null です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.Binding" /> は既にターゲット要素に添付されており、変更できません。または<see cref="P:System.Windows.Data.Binding.ElementName" /> プロパティまたは <see cref="P:System.Windows.Data.Binding.Source" /> プロパティは既に設定されています。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.Source">
      <summary>バインディングのデータ ソースを取得または設定します。</summary>
      <returns>バインディングのデータを含むソース オブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.Binding" /> は既にターゲット要素に添付されており、変更できません。または<see cref="P:System.Windows.Data.Binding.ElementName" /> プロパティまたは <see cref="P:System.Windows.Data.Binding.RelativeSource" /> プロパティは既に設定されています。</exception>
    </member>
    <member name="M:System.Windows.Data.Binding.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>初期化の開始を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="M:System.Windows.Data.Binding.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>初期化の完了を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="P:System.Windows.Data.Binding.UpdateSourceTrigger">
      <summary>両方向のバインディングのバインディング ソースを更新するタイミングを決定する値を取得または設定します。</summary>
      <returns>いつバインディング ソースが更新されるかを決定する値。既定値は、<see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /> です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.Binding" /> は既にターゲット要素に添付されており、変更できません。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
      <summary>バインド データ エンティティの <see cref="T:System.ComponentModel.IDataErrorInfo" /> 実装からバインディング エンジンが検証エラーを報告するかどうかを示す値を取得または設定します。</summary>
      <returns>バインディング エンジンが <see cref="T:System.ComponentModel.IDataErrorInfo" /> 検証エラーを報告する場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnExceptions">
      <summary>バインディング エンジンが例外検証エラーを報告するかどうかを示す値を取得または設定します。</summary>
      <returns>バインディング エンジンが例外検証エラーを報告する場合は true。それ以外の場合は false。既定値は false です。</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.Binding" /> は既にターゲット要素に添付されており、変更できません。</exception>
    </member>
    <member name="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
      <summary>バインド データ エンティティの <see cref="T:System.ComponentModel.INotifyDataErrorInfo" /> 実装からバインディング エンジンが検証エラーを報告するかどうかを示す値を取得または設定します。</summary>
      <returns>バインディング エンジンが <see cref="T:System.ComponentModel.INotifyDataErrorInfo" /> 検証エラーを報告する場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="T:System.Windows.Data.BindingBase">
      <summary>
        <see cref="T:System.Windows.Data.Binding" /> クラスの抽象基本クラスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingBase.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.BindingBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingBase.CheckSealed">
      <summary>バインディングが既にバインディング ターゲットに添付されている場合、例外をスローします。</summary>
      <exception cref="T:System.InvalidOperationException">バインディングが既にバインディング ターゲットに添付されています。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingBase.FallbackValue">
      <summary>バインディングが値を返せない場合に使用する値を取得または設定します。</summary>
      <returns>バインディングが値を返せない場合に使用する値。既定値は null です。</returns>
      <exception cref="T:System.InvalidOperationException">このプロパティの設定時、バインドは既にバインディング ターゲットに添付されていました。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingBase.StringFormat">
      <summary>バインドされている値が文字列として表示される場合に、バインディングの書式を指定する文字列を取得または設定します。</summary>
      <returns>バインドされている値が文字列として表示される場合に、バインディングの書式を指定する文字列。既定値は null です。</returns>
      <exception cref="T:System.InvalidOperationException">このプロパティの設定時、バインドは既にバインディング ターゲットに添付されていました。</exception>
    </member>
    <member name="P:System.Windows.Data.BindingBase.TargetNullValue">
      <summary>ソースの値が null のとき、ターゲットで使用される値を取得または設定します。</summary>
      <returns>ソースの値が null のとき、ターゲットで使用される値。</returns>
      <exception cref="T:System.InvalidOperationException">このプロパティの設定時、バインドは既にバインディング ターゲットに添付されていました。</exception>
    </member>
    <member name="T:System.Windows.Data.BindingExpression">
      <summary>
        <see cref="T:System.Windows.Data.Binding" /> オブジェクト内の単一バインディングに関する情報を格納します。</summary>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.DataItem">
      <summary>この <see cref="T:System.Windows.Data.BindingExpression" /> で使用するバインディング ソース オブジェクトを取得します。</summary>
      <returns>この <see cref="T:System.Windows.Data.BindingExpression" /> が使用するバインディング ソース オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Data.BindingExpression.ParentBinding">
      <summary>現在の <see cref="T:System.Windows.Data.BindingExpression" /> の <see cref="T:System.Windows.Data.Binding" /> オブジェクトを返します。</summary>
      <returns>現在の <see cref="T:System.Windows.Data.BindingExpression" /> の <see cref="T:System.Windows.Data.Binding" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Windows.Data.BindingExpression.UpdateSource">
      <summary>
        <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> バインディングで、現在のバインディング ターゲットの値をバインディング ソース プロパティに送ります。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Data.BindingExpression" /> がバインディング ターゲットからデタッチされます。</exception>
    </member>
    <member name="T:System.Windows.Data.BindingExpressionBase">
      <summary>
        <see cref="T:System.Windows.Data.BindingExpression" /> クラスの基本クラスを表します。</summary>
    </member>
    <member name="T:System.Windows.Data.BindingMode">
      <summary>バインディングでデータをどのように反映するかを説明します。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneWay">
      <summary>バインディングが作成されるときにターゲット プロパティを更新します。ソース オブジェクトへの変更もターゲットに反映できます。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.OneTime">
      <summary>バインディングが作成されるときにターゲット プロパティを更新します。</summary>
    </member>
    <member name="F:System.Windows.Data.BindingMode.TwoWay">
      <summary>ターゲット オブジェクトまたはソース オブジェクトが変更されると、ターゲット オブジェクトまたはソース オブジェクトを更新します。バインディングが作成されると、ターゲット プロパティはソースから更新されます。</summary>
    </member>
    <member name="T:System.Windows.Data.BindingOperations">
      <summary>静的 <see cref="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" /> メソッドを提供します。</summary>
    </member>
    <member name="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <summary>新しい <see cref="T:System.Windows.Data.BindingExpressionBase" /> を作成し、指定したバインディング ターゲットプロパティと関連付けます。</summary>
      <returns>バインディングに関する情報を含むオブジェクト。</returns>
      <param name="target">バインディングの設定対象のターゲット。</param>
      <param name="dp">バインドするターゲット上のプロパティ。</param>
      <param name="binding">ターゲット プロパティに割り当てるバインディング。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> が null です。または<paramref name="dp" /> が null です。または<paramref name="binding" /> が null です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Windows.FrameworkElement" /> 型または <see cref="T:System.Windows.Data.CollectionViewSource" /> 型ではありません。または<paramref name="target" /> が <see cref="T:System.Windows.Data.CollectionViewSource" /> 型で、<paramref name="binding" /> の <see cref="P:System.Windows.Data.Binding.Source" /> 値が null です。または<paramref name="binding" /> の <see cref="P:System.Windows.Data.Binding.Mode" /> 値が <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> で、<see cref="P:System.Windows.Data.Binding.Path" /> 値が空です。 </exception>
    </member>
    <member name="T:System.Windows.Data.CollectionViewGroup">
      <summary>
        <see cref="T:System.Windows.Data.PagedCollectionView" /> オブジェクトによって、その <see cref="P:System.Windows.Data.PagedCollectionView.GroupDescriptions" /> に基づいて作成されたグループを表します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.#ctor(System.Object)">
      <summary>指定されたグループ名で <see cref="T:System.Windows.Data.CollectionViewGroup" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">グループの名前。</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.IsBottomLevel">
      <summary>このグループにサブグループがあるかどうかを示す値を取得します。</summary>
      <returns>このグループが最下位レベルにあり、サブグループを所有していない場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ItemCount">
      <summary>このグループの下にあるサブツリーのデータ項目数を取得します。</summary>
      <returns>このグループ下のサブツリー内のデータ項目の数。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Items">
      <summary>グループの直下の子である項目を取得します。</summary>
      <returns>このグループの直下の項目の読み取り専用コレクション。このグループにサブグループがない場合、これはサブグループのコレクションまたはデータ項目のコレクションのどちらかです。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.Name">
      <summary>このグループの名前を取得します。</summary>
      <returns>このグループの名前。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>指定された引数を使用して、<see cref="E:System.Windows.Data.CollectionViewGroup.PropertyChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.PropertyChanged">
      <summary>プロパティ値が変更されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItemCount">
      <summary>このグループの下にあるサブツリーのデータ項目数を取得または設定します。</summary>
      <returns>このグループ下のサブツリー内のデータ項目の数。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItems">
      <summary>このグループに含まれる直下の項目を取得します。</summary>
      <returns>このグループに含まれる直下の項目。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary>このメンバーの説明については、<see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> のトピックを参照してください。</summary>
    </member>
    <member name="T:System.Windows.Data.CollectionViewSource">
      <summary>コレクション ビュー クラスの XAML プロキシ。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.CollectionViewSource" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Culture">
      <summary>並べ替えなど、カルチャによって異なる可能性があるビューの操作に関するカルチャ情報を取得または設定します。</summary>
      <returns>ビュー操作中に使用するカルチャ。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.DeferRefresh">
      <summary>ビューに対する変更をマージし、自動更新を遅延させるために使用できる遅延サイクルを入力します。</summary>
      <returns>呼び出し元のオブジェクトを破棄するために使用できる <see cref="T:System.IDisposable" /> オブジェクト。</returns>
    </member>
    <member name="E:System.Windows.Data.CollectionViewSource.Filter">
      <summary>フィルター処理ロジックを提供します。</summary>
      <exception cref="T:System.InvalidOperationException">このイベントにハンドラーを追加するとき、<see cref="P:System.Windows.Data.CollectionViewSource.View" /> プロパティ値には false の <see cref="P:System.ComponentModel.ICollectionView.CanFilter" /> プロパティ値が入ります。</exception>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.GroupDescriptions">
      <summary>コレクション内の項目をビュー内でどのようにグループ化するかを記述する <see cref="T:System.ComponentModel.GroupDescription" /> オブジェクトのコレクションを取得します。</summary>
      <returns>コレクション内の項目をビュー内でどのようにグループ化するかを記述する <see cref="T:System.ComponentModel.GroupDescription" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnCollectionViewTypeChanged(System.Type,System.Type)">
      <summary>コレクション ビューの種類が変更されたときに呼び出されます。</summary>
      <param name="oldCollectionViewType">変更前のコレクション ビューの種類。</param>
      <param name="newCollectionViewType">新しいコレクション ビューの種類。</param>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.OnSourceChanged(System.Object,System.Object)">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> プロパティが変更されたときに呼び出されます。</summary>
      <param name="oldSource">
        <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> プロパティの変更前の値。</param>
      <param name="newSource">
        <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> プロパティの新しい値。</param>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.SortDescriptions">
      <summary>コレクション内の項目をビュー内でどのように並べ替えるかを記述する <see cref="T:System.ComponentModel.SortDescription" /> オブジェクトのコレクションを取得します。</summary>
      <returns>コレクション内の項目をビュー内でどのように並べ替えるかを記述する <see cref="T:System.ComponentModel.SortDescription" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.Source">
      <summary>このビューの作成元のコレクション オブジェクトを取得または設定します。</summary>
      <returns>このビューの作成元となるコレクション オブジェクト。既定値は null です。</returns>
      <exception cref="T:System.ArgumentException">このプロパティを設定する際に、指定された値が null または <see cref="T:System.Collections.IEnumerable" /> 実装ではありません。またはこのプロパティを設定する際に、指定された値が <see cref="T:System.ComponentModel.ICollectionView" /> 実装です。</exception>
      <exception cref="T:System.InvalidOperationException">指定された値は <see cref="T:System.ComponentModel.ICollectionViewFactory" /> を実装していますが、<see cref="M:System.ComponentModel.ICollectionViewFactory.CreateView" /> メソッドは <see cref="T:System.ComponentModel.ICollectionView" /> を返します。このとき、次の矛盾が 1 つ以上該当する状態になります。<see cref="P:System.ComponentModel.ICollectionView.CanFilter" /> は false ですが <see cref="P:System.ComponentModel.ICollectionView.Filter" /> は null ではありません。<see cref="P:System.ComponentModel.ICollectionView.CanSort" /> は false ですが <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" /> は空白ではありません。<see cref="P:System.ComponentModel.ICollectionView.CanGroup" /> は false ですが <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" /> は空白ではありません。</exception>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.SourceProperty">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.Source" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>初期化の開始を通知するシグナルをオブジェクトに送信します。</summary>
    </member>
    <member name="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>初期化の完了を通知するシグナルをオブジェクトに送信します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Windows.Data.CollectionViewSource.View" /> プロパティ値に、次の 1 つ以上の矛盾があります。<see cref="P:System.ComponentModel.ICollectionView.CanFilter" /> は false ですが <see cref="P:System.ComponentModel.ICollectionView.Filter" /> は null ではありません。<see cref="P:System.ComponentModel.ICollectionView.CanSort" /> は false ですが <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" /> は空白ではありません。<see cref="P:System.ComponentModel.ICollectionView.CanGroup" /> は false ですが <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" /> は空白ではありません。</exception>
    </member>
    <member name="P:System.Windows.Data.CollectionViewSource.View">
      <summary>
        <see cref="T:System.Windows.Data.CollectionViewSource" /> のこのインスタンスに現在関連付けられているビュー オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Data.CollectionViewSource" /> のこのインスタンスに現在関連付けられているビュー オブジェクト。</returns>
    </member>
    <member name="F:System.Windows.Data.CollectionViewSource.ViewProperty">
      <summary>
        <see cref="P:System.Windows.Data.CollectionViewSource.View" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Data.FilterEventArgs">
      <summary>
        <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> イベントにデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Accepted">
      <summary>項目がフィルター条件を満たすかどうかを示す値を取得または設定します。</summary>
      <returns>項目がフィルター条件を満たす場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Data.FilterEventArgs.Item">
      <summary>フィルターでテストする必要があるオブジェクトを取得します。</summary>
      <returns>フィルターでテストする必要があるオブジェクト。既定値は null です。</returns>
    </member>
    <member name="T:System.Windows.Data.FilterEventHandler">
      <summary>
        <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Data.IValueConverter">
      <summary>バインディング エンジンに渡されるデータを変更できるメソッドを公開します。</summary>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>UI に表示するターゲットに渡す前にソース データを修正します。</summary>
      <returns>ターゲット依存関係プロパティに渡される値。</returns>
      <param name="value">ターゲットに渡されるソース データ。</param>
      <param name="targetType">ターゲット依存関係プロパティで予期されるデータの <see cref="T:System.Type" />。</param>
      <param name="parameter">コンバーター ロジックで使用されるオプションのパラメーター。</param>
      <param name="culture">変換のカルチャ。</param>
    </member>
    <member name="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>ソース オブジェクトに渡す前にターゲット データを変更します。このメソッドは <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> バインディングでのみ呼び出されます。</summary>
      <returns>ソース オブジェクトに渡される値。</returns>
      <param name="value">ソースに渡されるターゲット データ。</param>
      <param name="targetType">ソース オブジェクトで予期されるデータの <see cref="T:System.Type" />。</param>
      <param name="parameter">コンバーター ロジックで使用されるオプションのパラメーター。</param>
      <param name="culture">変換のカルチャ。</param>
    </member>
    <member name="T:System.Windows.Data.PropertyGroupDescription">
      <summary>条件としてプロパティ名を使用して項目のグループ化を説明します。</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor">
      <summary>
        <see cref="T:System.Windows.Data.PropertyGroupDescription" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String)">
      <summary>指定されたプロパティ名を使用して <see cref="T:System.Windows.Data.PropertyGroupDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyName">項目が属するグループを指定するプロパティの名前。</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)">
      <summary>指定されたプロパティ名とコンバーターを使用して <see cref="T:System.Windows.Data.PropertyGroupDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyName">項目が属するグループを指定するプロパティの名前。このパラメーターが null である場合は、項目そのものが値コンバーターに渡されます。</param>
      <param name="converter">項目が属するグループを決定するために使用される最終的な値を生成するためにプロパティ値または項目に適用される <see cref="T:System.Windows.Data.IValueConverter" /> オブジェクト。コンバーターがコレクションを返す場合があります。これは、項目が複数のグループ内に表示されることを示します。</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)">
      <summary>指定されたプロパティ名、コンバーター、および文字列比較を使用して、<see cref="T:System.Windows.Data.PropertyGroupDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyName">項目が属するグループを指定するプロパティの名前。このパラメーターが null である場合は、項目そのものが値コンバーターに渡されます。</param>
      <param name="converter">項目が属するグループを決定するために使用される最終的な値を生成するためにプロパティ値または項目に適用される <see cref="T:System.Windows.Data.IValueConverter" /> オブジェクト。コンバーターがコレクションを返す場合があります。これは、項目が複数のグループ内に表示されることを示します。</param>
      <param name="stringComparison">項目の値とグループ名との比較を指定する <see cref="T:System.StringComparison" /> 値。</param>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.Converter">
      <summary>項目が属するグループを決定するときに使用される最終的な値を生成するために、プロパティ値または項目に適用されるコンバーターを取得または設定します。</summary>
      <returns>適用するコンバーター。既定値は null です。</returns>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary>指定された項目が属するグループ名を返します。</summary>
      <returns>指定された項目が属するグループ名。</returns>
      <param name="item">グループ名を返す対象の項目。</param>
      <param name="level">グループ化のレベル。</param>
      <param name="culture">コンバーターに提供する <see cref="T:System.Globalization.CultureInfo" />。</param>
    </member>
    <member name="M:System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)">
      <summary>グループ名と項目名が一致するかどうかを示す値を返します。一致する場合は項目がグループに属することを示しています。</summary>
      <returns>名前が一致する場合は true (項目がグループに属することを示します)。それ以外の場合は false。</returns>
      <param name="groupName">確認するグループの名前。</param>
      <param name="itemName">確認する項目の名前。</param>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.PropertyName">
      <summary>項目が属するグループを決定するときに使用されるプロパティの名前を取得または設定します。</summary>
      <returns>項目が属するグループを決定するときに使用されるプロパティ名。既定値は null です。</returns>
    </member>
    <member name="P:System.Windows.Data.PropertyGroupDescription.StringComparison">
      <summary>項目の値 (<see cref="P:System.Windows.Data.PropertyGroupDescription.PropertyName" /> および <see cref="P:System.Windows.Data.PropertyGroupDescription.Converter" /> によって決定) とグループ名との比較を指定する <see cref="T:System.StringComparison" /> 値を取得または設定します。</summary>
      <returns>項目の値とグループ名前との比較を指定する列挙値。既定値は、<see cref="F:System.StringComparison.Ordinal" /> です。</returns>
    </member>
    <member name="T:System.Windows.Data.RelativeSource">
      <summary>バインディング ターゲットの位置に対して相対的なバインディング ソースの位置を示すマークアップ拡張を実装します。</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor">
      <summary>既定の相対ソース モードを使用して、<see cref="T:System.Windows.Data.RelativeSource" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)">
      <summary>指定された相対ソース モードを使用して、<see cref="T:System.Windows.Data.RelativeSource" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="mode">関連バインディングに使用する相対ソース モード。</param>
    </member>
    <member name="P:System.Windows.Data.RelativeSource.Mode">
      <summary>バインディング ターゲットの位置に対して相対的なバインディング ソースの位置を示す値を取得または設定します。</summary>
      <returns>列挙体の値。</returns>
      <exception cref="T:System.InvalidOperationException">このプロパティを設定したとき、プロパティに既に異なる値が設定されています。</exception>
    </member>
    <member name="T:System.Windows.Data.RelativeSourceMode">
      <summary>バインディング ターゲットの位置に対して相対的なバインディング ソースの場所を示す定数を定義します。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.TemplatedParent">
      <summary>テンプレート (データ バインドされた要素が存在する) の適用対象となる要素を参照します。</summary>
    </member>
    <member name="F:System.Windows.Data.RelativeSourceMode.Self">
      <summary>バインディングを設定している要素を参照して、その要素の 1 つのプロパティを同じ要素の別のプロパティにバインドすることができます。</summary>
    </member>
    <member name="T:System.Windows.Data.UpdateSourceTrigger">
      <summary>バインディング ソースがバインディング ターゲットによって双方向のバインディングでいつ更新されるかを指定する定数を定義します。</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Default">
      <summary>バインディング ターゲット値が変わるとき、バインディング ソースは自動的に更新されます。</summary>
    </member>
    <member name="F:System.Windows.Data.UpdateSourceTrigger.Explicit">
      <summary>バインディング ソースは、<see cref="M:System.Windows.Data.BindingExpression.UpdateSource" /> メソッドを呼び出した場合にのみ更新されます。</summary>
    </member>
    <member name="T:System.Windows.Documents.Block">
      <summary>すべてのブロック レベルのコンテンツ要素の基になる抽象クラス。</summary>
    </member>
    <member name="M:System.Windows.Documents.Block.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Block" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Block.LineHeight">
      <summary>各コンテンツ行の高さを取得または設定します。</summary>
      <returns>各行の高さ (ピクセル単位)。値が 0 に設定されると、行の高さが現在のフォント文字から自動的に判別されます。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.LineHeightProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Block.LineHeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.LineHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.LineStackingStrategy">
      <summary>
        <see cref="T:System.Windows.Documents.Block" /> の各テキスト行の行ボックスを決定する方法を示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Block" /> の各テキスト行の行ボックスを決定する方法を示す値。既定値は、<see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.LineStackingStrategyProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Block.TextAlignment">
      <summary>テキスト コンテンツの水平方向の配置を取得または設定します。</summary>
      <returns>テキスト コンテンツの水平方向の配置。既定値は、<see cref="F:System.Windows.TextAlignment.Left" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Block.TextAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Block.TextAlignment" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Documents.BlockCollection">
      <summary>
        <see cref="T:System.Windows.Documents.Block" /> 要素のコレクションを表します。 </summary>
    </member>
    <member name="T:System.Windows.Documents.Bold">
      <summary>コンテンツが太字のフォントで描画されるインラインレベルのコンテンツ要素を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Bold.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Bold" /> クラスの新しいインスタンスを初期化します。 </summary>
    </member>
    <member name="T:System.Windows.Documents.FontSource">
      <summary>ストリームから作成された 1 つ以上のフォントを表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.FontSource.#ctor(System.IO.Stream)">
      <summary>
        <see cref="T:System.Windows.Documents.FontSource" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">フォント ソースが含まれるストリーム。</param>
    </member>
    <member name="M:System.Windows.Documents.FontSource.#ctor(System.Windows.Media.GlyphTypeface)">
      <summary>
        <see cref="T:System.Windows.Documents.FontSource" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="glyphtypeface">フォント ファイルを含む <see cref="T:System.Windows.Media.GlyphTypeface" /> オブジェクト。</param>
    </member>
    <member name="T:System.Windows.Documents.Glyphs">
      <summary>特定のフォントとスタイルで文字または記号の視覚的表現を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Glyphs.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Glyphs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Fill">
      <summary>グリフの描画に使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>グリフの描画に使用するブラシ。既定値は null です。これはレンダリングの <see cref="P:System.Windows.Media.Colors.Transparent" /> として評価されます。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FillProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.Fill" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.Fill" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontRenderingEmSize">
      <summary>グリフのレンダリングに使用するフォント サイズを取得または設定します。</summary>
      <returns>グリフのレンダリングに使用するフォント サイズ。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontRenderingEmSizeProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.FontRenderingEmSize" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.FontRenderingEmSize" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontSource">
      <summary>コンテンツの描画のために <see cref="T:System.Windows.Documents.Glyphs" /> に適用するフォント ソースを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Glyphs" /> でコンテンツを描画するのに使用されるフォント ソース。既定値は null 参照です (Visual Basic では Nothing)。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.FontUri">
      <summary>グリフのレンダリングに使用するフォントの場所を取得または設定します。</summary>
      <returns>フォントの URI ソース。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.FontUriProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.FontUri" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.FontUri" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.Indices">
      <summary>グリフのグリフ インデックスを取得または設定します。</summary>
      <returns>グリフのインデックスおよびその他の詳細を文字列ミニ言語で定義する文字列。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.IndicesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.Indices" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.Indices" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginX">
      <summary>グリフの x 原点を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Glyphs" /> の x 原点 (ピクセル単位)。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginXProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.OriginX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.OriginX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.OriginY">
      <summary>グリフの y 原点を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Glyphs" /> の y 原点 (ピクセル単位)。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.OriginYProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.OriginY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.OriginY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.StyleSimulations">
      <summary>グリフに適用するスタイル シミュレーションを取得または設定します。</summary>
      <returns>グリフに適用するスタイル シミュレーションを指定する列挙値の 1 つ。既定値は None です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.StyleSimulationsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.StyleSimulations" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.StyleSimulations" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Glyphs.UnicodeString">
      <summary>グリフで描画する Unicode 文字列を取得または設定します。</summary>
      <returns>XAML 互換性のあるエンコードの Unicode 文字列。既定値は空の文字列です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Glyphs.UnicodeStringProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Glyphs.UnicodeString" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Glyphs.UnicodeString" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Documents.Hyperlink">
      <summary>ハイパーリンクのホスト機能を備えたインライン レベルのコンテンツ要素を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Hyperlink.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:System.Windows.Documents.Hyperlink.Click">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> をタップしたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.Command">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> に関連付けるコマンドを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Hyperlink" /> に関連付けるコマンド。既定値は null です。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.CommandParameter">
      <summary>
        <see cref="P:System.Windows.Documents.Hyperlink.Command" /> プロパティで指定されたコマンドに関連付けられているコマンド パラメーターを取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.Command" /> プロパティで指定されたコマンドのパラメーターを指定するオブジェクト。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandParameterProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Hyperlink.CommandParameter" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.CommandParameter" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.CommandProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Hyperlink.Command" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.Command" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.MouseOverForeground">
      <summary>ポインターを <see cref="T:System.Windows.Documents.Hyperlink" /> 上に移動したときの前景色を描画するブラシを取得または設定します。</summary>
      <returns>ポインターが <see cref="T:System.Windows.Documents.Hyperlink" /> 上を移動したときに前景色を描画するブラシ。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.MouseOverForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Hyperlink.MouseOverForeground" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.MouseOverForeground" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.MouseOverTextDecorations">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> を装飾する <see cref="T:System.Windows.TextDecorationCollection" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Hyperlink" /> を装飾する <see cref="T:System.Windows.TextDecorationCollection" />。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.MouseOverTextDecorationsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Hyperlink.MouseOverTextDecorations" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.MouseOverTextDecorations" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.NavigateUri">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> がアクティブになったときの移動先の URI を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Hyperlink" /> がアクティブになったときの移動先の URI。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.NavigateUriProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Hyperlink.TargetName">
      <summary>
        <see cref="T:System.Windows.Documents.Hyperlink" /> の対象となるウィンドウまたはフレームの名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Hyperlink" /> の対象となるウィンドウまたはフレームの名前を指定する文字列。</returns>
    </member>
    <member name="F:System.Windows.Documents.Hyperlink.TargetNameProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Hyperlink.TargetName" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Hyperlink.TargetName" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Documents.Inline">
      <summary>インライン フロー コンテンツ要素の動作の基礎を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Inline.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Inline" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="F:System.Windows.Documents.Inline.FontFamilyProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FontSizeProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FontStretchProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FontStyleProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.FontWeightProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.ForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.LanguageProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.Language" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.Language" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Inline.TextDecorations">
      <summary>
        <see cref="T:System.Windows.Documents.Inline" /> 要素のコンテンツに適用される文字装飾を指定する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.TextDecorationCollection" />、またはテキスト装飾が適用されていない場合は null。</returns>
    </member>
    <member name="F:System.Windows.Documents.Inline.TextDecorationsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Inline.TextDecorations" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Inline.TextDecorations" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Documents.InlineCollection">
      <summary>
        <see cref="T:System.Windows.Documents.Inline" /> 要素のコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineCollection.Add(System.String)">
      <summary>文字列をコレクションに追加します。</summary>
      <param name="text">追加するテキスト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> が null です。</exception>
    </member>
    <member name="T:System.Windows.Documents.InlineUIContainer">
      <summary>コンテンツへの <see cref="T:System.Windows.UIElement" /> 型の埋め込みを可能にするインライン コンテンツ要素を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.InlineUIContainer.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.InlineUIContainer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.InlineUIContainer.Child">
      <summary>
        <see cref="T:System.Windows.Documents.InlineUIContainer" /> によってホストされる <see cref="T:System.Windows.UIElement" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.InlineUIContainer" /> によってホストされる <see cref="T:System.Windows.UIElement" />。</returns>
    </member>
    <member name="T:System.Windows.Documents.Italic">
      <summary>コンテンツが斜体のフォント スタイルで描画されるインラインレベルのフロー コンテンツ要素を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Italic.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Italic" /> クラスの新しいインスタンスを初期化します。 </summary>
    </member>
    <member name="T:System.Windows.Documents.LineBreak">
      <summary>テキスト コンテナーで表示するときに、コンテンツで新しい行を開始するよう設定するインライン要素を表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.LineBreak.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.LineBreak" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Documents.LogicalDirection">
      <summary>指定した位置 (<see cref="T:System.Windows.Documents.TextPointer" />) を基準とする、テキストの挿入や取得またはテキスト内の移動など、特定のテキスト操作を実行する論理方向を指定します。</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Backward">
      <summary>後方、つまり右から左。</summary>
    </member>
    <member name="F:System.Windows.Documents.LogicalDirection.Forward">
      <summary>前方、つまり左から右。</summary>
    </member>
    <member name="T:System.Windows.Documents.Paragraph">
      <summary>コンテンツを 1 つの段落にグループ化するために使用されるブロック レベルのコンテンツ要素を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Paragraph.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Paragraph" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Paragraph.Inlines">
      <summary>
        <see cref="T:System.Windows.Documents.Paragraph" /> のコンテンツを含んだ上位の <see cref="T:System.Windows.Documents.Inline" /> 要素を格納する <see cref="T:System.Windows.Documents.InlineCollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Paragraph" /> のコンテンツを含んだ <see cref="T:System.Windows.Documents.Inline" /> 要素を格納する <see cref="T:System.Windows.Documents.InlineCollection" />。</returns>
    </member>
    <member name="T:System.Windows.Documents.Run">
      <summary>書式付きテキストまたは書式なしテキストの独立したセクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Run.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Run" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Run.FlowDirection">
      <summary>レイアウトを制御する <see cref="T:System.Windows.Documents.Run" /> 要素内でのテキストやその他のユーザー インターフェイス要素のフロー方向を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Run" /> 要素内でのテキストやその他の UI 要素のフロー方向。既定値は <see cref="F:System.Windows.FlowDirection.LeftToRight" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Run.FlowDirectionProperty">
      <summary>
        <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Run.Text">
      <summary>
        <see cref="T:System.Windows.Documents.Run" /> のテキスト コンテンツを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Run" /> のテキスト コンテンツを指定する文字列。既定値は、<see cref="F:System.String.Empty" /> です。</returns>
    </member>
    <member name="T:System.Windows.Documents.Section">
      <summary>他の <see cref="T:System.Windows.Documents.Block" /> 要素のグループ化に使用されるブロックレベルの要素。</summary>
    </member>
    <member name="P:System.Windows.Documents.Section.Blocks">
      <summary>
        <see cref="T:System.Windows.Documents.Section" /> のコンテンツを構成する上位の <see cref="T:System.Windows.Documents.Block" /> 要素を格納する <see cref="T:System.Windows.Documents.BlockCollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Section" /> のコンテンツを構成する <see cref="T:System.Windows.Documents.Block" /> 要素を格納する <see cref="T:System.Windows.Documents.BlockCollection" />。このプロパティには既定値はありません。</returns>
    </member>
    <member name="P:System.Windows.Documents.Section.HasTrailingParagraphBreakOnPaste">
      <summary>ルート <see cref="T:System.Windows.Documents.Section" /> 要素のコンテンツをクリップボードにコピーする場合、末尾の段落区切りを最後の段落の後に挿入する必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>末尾の段落区切りを含める場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:System.Windows.Documents.Span">
      <summary>他の <see cref="T:System.Windows.Documents.Inline" /> コンテンツ要素をグループ化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Span.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Span" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Documents.Span.Inlines">
      <summary>
        <see cref="T:System.Windows.Documents.Span" /> のコンテンツを含んだ上位のインライン要素を格納する <see cref="T:System.Windows.Documents.InlineCollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.Span" /> のコンテンツを含んだインライン要素を格納する <see cref="T:System.Windows.Documents.InlineCollection" />。このプロパティには既定値はありません。</returns>
    </member>
    <member name="T:System.Windows.Documents.TextElement">
      <summary>
        <see cref="T:System.Windows.Documents.Block" /> および <see cref="T:System.Windows.Documents.Inline" /> 抽象クラスの基本クラスとして使用される抽象クラス。</summary>
    </member>
    <member name="P:System.Windows.Documents.TextElement.CharacterSpacing">
      <summary>フォント サイズの 1/1000 単位で測定されるコントロール内のテキストの文字間の距離を取得または設定します。</summary>
      <returns>フォント サイズの 1/1000 単位で測定されるコントロール内のテキストの文字間の距離。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.CharacterSpacingProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.CharacterSpacing" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.CharacterSpacing" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentEnd">
      <summary>要素内のコンテンツの末尾を表す <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextElement" /> 内のコンテンツの末尾を表す <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ContentStart">
      <summary>要素内のコンテンツの先頭を表す <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextElement" /> 内のコンテンツの先頭を表す <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementEnd">
      <summary>要素の末尾直後の位置を表す <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextElement" /> の末尾直後の位置を表す <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.ElementStart">
      <summary>要素の先頭直前の位置を表す <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextElement" /> の先頭直前の位置を表す <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElement.FindName(System.String)">
      <summary>オブジェクトの x:Name または <see cref="P:System.Windows.Documents.TextElement.Name" /> の属性値を参照することにより、Windows Phone オブジェクト モデル内のオブジェクトを取得します。</summary>
      <returns>指定された名前を持つオブジェクト、またはオブジェクトが取得されない場合は null。</returns>
      <param name="name">取得するオブジェクトの名前。</param>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontFamily">
      <summary>要素のコンテンツの上位の優先フォント ファミリを取得または設定します。</summary>
      <returns>優先フォント ファミリ、または 1 つ以上の代替フォント ファミリを持つ第一に優先されるフォント ファミリ。既定の情報については、<see cref="T:System.Windows.Media.FontFamily" /> を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontFamilyProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontFamily" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontSize">
      <summary>要素のコンテンツのフォント サイズを取得または設定します。</summary>
      <returns>希望するフォント サイズ (ピクセル単位)。既定値は 11 ピクセルです。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontSizeProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontSize" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStretch">
      <summary>選択するファミリ内のフォントのグリフ幅を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontStretches" /> プロパティ値の 1 つ。希望するフォントの横幅を指定します。既定値は、<see cref="P:System.Windows.FontStretches.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStretchProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontStretch" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontStyle">
      <summary>この要素の内容のフォント スタイルを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontStyles" /> プロパティ値の 1 つ。フォント スタイルを指定します。既定値は、<see cref="P:System.Windows.FontStyles.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontStyleProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontStyle" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.FontWeight">
      <summary>この要素のコンテンツのフォント ファミリから選択する上位のフォントの太さを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontWeights" /> プロパティ値の 1 つ。フォントの太さを指定します。既定値は、<see cref="P:System.Windows.FontWeights.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.FontWeightProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.FontWeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Foreground">
      <summary>この要素のコンテンツに適用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>テキストの内容に適用されるブラシ。既定値は <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 値が <see cref="P:System.Windows.Media.Colors.Black" /> である <see cref="T:System.Windows.Media.SolidColorBrush" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.ForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.Foreground" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Language">
      <summary>
        <see cref="T:System.Windows.Documents.TextElement" /> 要素内のコンテンツの言語を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Markup.XmlLanguage" /> 型の値。既定値は、文字列 en-US で作成された <see cref="T:System.Windows.Markup.XmlLanguage" /> 値です (<see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> が "en-US")。</returns>
    </member>
    <member name="F:System.Windows.Documents.TextElement.LanguageProperty">
      <summary>
        <see cref="P:System.Windows.Documents.TextElement.Language" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.TextElement.Language" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextElement.Name">
      <summary>オブジェクトの一意の ID を取得または設定します。<see cref="P:System.Windows.Documents.TextElement.Name" /> は、XAML の初期解析からのみ設定できます。</summary>
      <returns>オブジェクトの一意の識別子。このプロパティは、コードについては読み取り専用ですが、"Name" という名前の XAML プロパティの特別なパーサー処理のため、XAML については書き込み専用です。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextElement.OnCreateAutomationPeer">
      <summary>Windows Phone オートメーション インフラストラクチャで使用するための、クラス固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Documents.TextElement" /> オブジェクトの型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</returns>
    </member>
    <member name="T:System.Windows.Documents.TextElementCollection`1">
      <summary>
        <see cref="T:System.Windows.Documents.TextElement" /> オブジェクトのタイプ セーフな順序の付いたコレクションを作成、管理するための標準機能を提供します。</summary>
      <typeparam name="T">制約付きのコレクション実装の型セーフの型制約。</typeparam>
    </member>
    <member name="T:System.Windows.Documents.TextPointer">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> 内の位置を表します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
      <summary>現在の <see cref="T:System.Windows.Documents.TextPointer" /> と指定された 2 つ目の <see cref="T:System.Windows.Documents.TextPointer" /> によって指定される位置の順序を比較します。</summary>
      <returns>現在の <see cref="T:System.Windows.Documents.TextPointer" /> が位置の前にある場合は -1、場所が同じ場合は 0、現在の <see cref="T:System.Windows.Documents.TextPointer" /> が位置の後にある場合は +1。</returns>
      <param name="position">現在の位置と比較する位置を指定する <see cref="T:System.Windows.Documents.TextPointer" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="position" /> は、現在の位置と関連付けられた別の <see cref="T:System.Windows.Controls.RichTextBox" /> からの位置を指定します。</exception>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
      <summary>指定した論理方向で現在の <see cref="T:System.Windows.Documents.TextPointer" /> に隣接するコンテンツの境界ボックスを返します。</summary>
      <returns>指定された方向で現在の <see cref="T:System.Windows.Documents.TextPointer" /> に接するコンテンツの <see cref="T:System.Windows.Rect" />、または現在の有効なレイアウト情報が使用できない場合は <see cref="P:System.Windows.Rect.Empty" />。</returns>
      <param name="direction">コンテンツの境界ボックスを検索する論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
      <summary>指定された論理方向の次の挿入位置への <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</summary>
      <returns>指定した方向の次の挿入位置を識別する <see cref="T:System.Windows.Documents.TextPointer" />。次の挿入位置が見つからない場合は null。</returns>
      <param name="direction">次の挿入位置を検索する論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</param>
    </member>
    <member name="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
      <summary>指定された方向に、現在の <see cref="T:System.Windows.Documents.TextPointer" /> の先頭からの指定されたオフセット (シンボル単位) が示す位置への <see cref="T:System.Windows.Documents.TextPointer" /> を返します。</summary>
      <returns>指定されたオフセットが示す位置および方向パラメーターが指定する方向への <see cref="T:System.Windows.Documents.TextPointer" />。オフセットがコンテンツの末尾を超える場合は null。</returns>
      <param name="offset">位置を計算して返す際の対象となるオフセット (シンボル単位)。このオフセットが負の場合は、返される <see cref="T:System.Windows.Documents.TextPointer" /> は現在の <see cref="T:System.Windows.Documents.TextPointer" /> より前になります。それ以外の場合は後になります。</param>
      <param name="direction">返される <see cref="T:System.Windows.Documents.TextPointer" /> の論理方向を指定する <see cref="T:System.Windows.Documents.LogicalDirection" /> 値のいずれか。</param>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
      <summary>現在の位置が挿入位置であるかどうかを示す値を取得します。</summary>
      <returns>現在の位置が挿入位置の場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.LogicalDirection">
      <summary>現在の位置と関連付けられたコンテンツを特定するのに使用される、現在の位置と関連付けられた論理方向を取得します。</summary>
      <returns>現在の位置に関連付けられている <see cref="T:System.Windows.Documents.LogicalDirection" /> 値。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextPointer.Parent">
      <summary>現在の位置を含む論理親を取得します。</summary>
      <returns>現在の位置を含む論理親。コンテンツ スタックの上にあるときは <see cref="T:System.Windows.Controls.RichTextBox" /> を返すことができます。</returns>
    </member>
    <member name="T:System.Windows.Documents.TextSelection">
      <summary>
        <see cref="T:System.Windows.Controls.RichTextBox" /> コントロールの選択状態をカプセル化します。</summary>
    </member>
    <member name="M:System.Windows.Documents.TextSelection.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)">
      <summary>指定された書式設定プロパティと値を現在の選択範囲に適用します。</summary>
      <param name="formattingProperty">適用する書式設定プロパティ。</param>
      <param name="value">書式設定プロパティの値。</param>
    </member>
    <member name="P:System.Windows.Documents.TextSelection.End">
      <summary>現在の選択範囲の末尾を表す <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</summary>
      <returns>現在の選択範囲の末尾を表す <see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="M:System.Windows.Documents.TextSelection.GetPropertyValue(System.Windows.DependencyProperty)">
      <summary>現在の選択で指定された書式設定プロパティの値を取得します。</summary>
      <returns>現在の選択で指定された書式設定プロパティの値を示すオブジェクト。</returns>
      <param name="formattingProperty">現在の選択で値を取得する書式設定プロパティ。</param>
    </member>
    <member name="M:System.Windows.Documents.TextSelection.Insert(System.Windows.Documents.TextElement)">
      <summary>
        <see cref="T:System.Windows.Documents.TextElement" /> として現在選択されているコンテンツを挿入または置き換えます。</summary>
      <param name="element">挿入する <see cref="T:System.Windows.Documents.TextElement" />。</param>
    </member>
    <member name="M:System.Windows.Documents.TextSelection.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
      <summary>更新対象の選択範囲を示す 2 つの <see cref="T:System.Windows.Documents.TextPointer" /> 位置を取得して現在の選択範囲を更新します。</summary>
      <param name="anchorPosition">更新対象の選択範囲の一方の端を示す固定アンカー位置。</param>
      <param name="movingPosition">更新対象の選択範囲のもう一方の端を示す移動可能な位置。</param>
      <exception cref="T:System.ArgumentException">位置は、現在の位置と関連付けられた別の <see cref="T:System.Windows.Controls.RichTextBox" /> からの位置を指定します。</exception>
    </member>
    <member name="P:System.Windows.Documents.TextSelection.Start">
      <summary>現在の選択範囲の先頭を表す <see cref="T:System.Windows.Documents.TextPointer" /> を取得します。</summary>
      <returns>現在の選択範囲の先頭を表す<see cref="T:System.Windows.Documents.TextPointer" />。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextSelection.Text">
      <summary>現在の選択範囲のテキスト形式のコンテンツを取得または設定します。</summary>
      <returns>現在の選択範囲のテキスト形式のコンテンツを含む文字列。</returns>
    </member>
    <member name="P:System.Windows.Documents.TextSelection.Xaml">
      <summary>現在の選択範囲の XAML 表現を取得または設定します。</summary>
      <returns>現在の選択範囲の XAML 表現である <see cref="T:System.String" />。この XAML 表現は、コピー操作時のクリップボードに適用されるのと同じ XAML です。</returns>
    </member>
    <member name="T:System.Windows.Documents.Typography">
      <summary>一連のさまざまな OpenType 文字体裁プロパティへのアクセスを提供します。このクラスは継承できません。</summary>
    </member>
    <member name="P:System.Windows.Documents.Typography.AnnotationAlternates">
      <summary>注釈の代替形式のインデックスを指定する値を取得または設定します。</summary>
      <returns>注釈の代替形式のインデックス。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.AnnotationAlternatesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Capitals">
      <summary>選択したフォントの大文字形式を示す <see cref="T:System.Windows.FontCapitals" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontCapitals" /> 列挙値。既定値は [標準] です。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.CapitalSpacing">
      <summary>読みやすくするために、すべてが大文字のテキストのグリフ間隔をグローバルに調整するかどうかを決定する値を取得または設定します。</summary>
      <returns>間隔が調整された場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CapitalSpacingProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CapitalsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.Capitals" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Capitals" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.CaseSensitiveForms">
      <summary>大文字のグリフに合わせるためにグリフの垂直位置を調整するかどうかを決定する値を取得または設定します。</summary>
      <returns>垂直位置が調整された場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.CaseSensitiveFormsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualAlternates">
      <summary>表示されているテキストのコンテキストに基づいてカスタムのグリフ フォームを使用できるかどうかを決定する値を取得または設定します。</summary>
      <returns>カスタムのグリフ フォームを使用できる場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualAlternatesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualLigatures">
      <summary>コンテキスト合字が有効かどうかを示す値を取得または設定します。</summary>
      <returns>コンテキスト合字が有効な場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualLigaturesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.ContextualSwashes">
      <summary>コンテキスト スワッシュ形式のインデックスを指定する値を取得または設定します。</summary>
      <returns>標準巻きひげ形式のインデックス。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.ContextualSwashesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.DiscretionaryLigatures">
      <summary>随意合字が有効かどうかを示す値を取得または設定します。</summary>
      <returns>随意合字が有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.DiscretionaryLigaturesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianExpertForms">
      <summary>標準的な日本語フォントの形式が、対応する適切なタイポグラフィの形式に置き換えられているかどうかを決定する値を取得または設定します。</summary>
      <returns>標準的な日本語フォントの形式が、対応する適切なタイポグラフィの形式に置き換えられている場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianExpertFormsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianLanguage">
      <summary>特定の書記体系または言語に使用されるグリフのバージョンを示す <see cref="T:System.Windows.FontEastAsianLanguage" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontEastAsianLanguage" /> 列挙値。既定値は [標準] です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianLanguageProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.EastAsianWidths">
      <summary>東アジア フォントのラテン文字に使用する比例幅を示す <see cref="T:System.Windows.FontEastAsianWidths" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontEastAsianWidths" /> 列挙値。既定値は <see cref="F:System.Windows.FontEastAsianWidths.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.EastAsianWidthsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Fraction">
      <summary>分数のスタイルを示す <see cref="T:System.Windows.FontFraction" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontFraction" /> 列挙値。既定値は <see cref="F:System.Windows.FontFraction.Normal" /> です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.FractionProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.Fraction" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Fraction" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetAnnotationAlternates(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="T:System.Windows.Media.FontFamily" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCapitals(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Capitals" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="T:System.Windows.FontCapitals" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Capitals" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCapitalSpacing(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetCaseSensitiveForms(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualAlternates(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualLigatures(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetContextualSwashes(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetDiscretionaryLigatures(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianExpertForms(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianLanguage(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetEastAsianWidths(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetFraction(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Fraction" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Fraction" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Fraction" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetHistoricalForms(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetHistoricalLigatures(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetKerning(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Kerning" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Kerning" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Kerning" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetMathematicalGreek(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetNumeralAlignment(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetNumeralStyle(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetSlashedZero(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStandardLigatures(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStandardSwashes(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticAlternates(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet1(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet10(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet11(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet12(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet13(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet14(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet15(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet16(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet17(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet18(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet19(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet2(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet20(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet3(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet4(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet5(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet6(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet7(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet8(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetStylisticSet9(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.GetVariants(System.Windows.DependencyObject)">
      <summary>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Variants" /> 添付プロパティの値を返します。</summary>
      <returns>指定した依存関係オブジェクトの <see cref="P:System.Windows.Documents.Typography.Variants" /> 添付プロパティの現在の値。</returns>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Variants" /> プロパティの値の取得対象となる依存関係オブジェクト。</param>
    </member>
    <member name="P:System.Windows.Documents.Typography.HistoricalForms">
      <summary>歴史的形式が有効かどうかを示す値を取得または設定します。</summary>
      <returns>歴史的形式が有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.HistoricalFormsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.HistoricalLigatures">
      <summary>歴史的合字が有効かどうかを示す値を取得または設定します。</summary>
      <returns>歴史的合字が有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.HistoricalLigaturesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Kerning">
      <summary>カーニングが有効かどうかを示す値を取得または設定します。</summary>
      <returns>カーニングが有効な場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.KerningProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.Kerning" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Kerning" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.MathematicalGreek">
      <summary>ギリシャ語グリフの標準的なタイポグラフィ フォント形式が、一般的に数学表記で使用される、対応するフォント形式に置き換えられているかどうかを示す値を取得または設定します。</summary>
      <returns>数学的ギリシャ語形式が有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.MathematicalGreekProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.NumeralAlignment">
      <summary>数値を使用するときの幅の調整を示す FontNumeralAlignment 列挙値を取得または設定します。</summary>
      <returns>FontNumeralAlignment 列挙値。既定値は [標準] です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.NumeralAlignmentProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.NumeralStyle">
      <summary>数字代替フォント形式を表示するために使用される一連のグリフを示す FontNumeralStyle 列挙値を取得または設定します。</summary>
      <returns>FontNumeralStyle 列挙値。既定値は [標準] です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.NumeralStyleProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetAnnotationAlternates(System.Windows.DependencyObject,System.Int32)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCapitals(System.Windows.DependencyObject,System.Windows.FontCapitals)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.Capitals" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Capitals" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCapitalSpacing(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.CapitalSpacing" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetCaseSensitiveForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualAlternates(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.ContextualAlternates" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.ContextualLigatures" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetContextualSwashes(System.Windows.DependencyObject,System.Int32)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.ContextualSwashes" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetDiscretionaryLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianExpertForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianLanguage(System.Windows.DependencyObject,System.Windows.FontEastAsianLanguage)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetEastAsianWidths(System.Windows.DependencyObject,System.Windows.FontEastAsianWidths)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.EastAsianWidths" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetFraction(System.Windows.DependencyObject,System.Windows.FontFraction)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.Fraction" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Fraction" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetHistoricalForms(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.HistoricalForms" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetHistoricalLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetKerning(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.Kerning" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Kerning" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetMathematicalGreek(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.MathematicalGreek" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetNumeralAlignment(System.Windows.DependencyObject,System.Windows.FontNumeralAlignment)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.NumeralAlignment" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetNumeralStyle(System.Windows.DependencyObject,System.Windows.FontNumeralStyle)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.NumeralStyle" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetSlashedZero(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStandardLigatures(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStandardSwashes(System.Windows.DependencyObject,System.Int32)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticAlternates(System.Windows.DependencyObject,System.Int32)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet1(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet10(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet11(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet12(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet13(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet14(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet15(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet16(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet17(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet18(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet19(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet2(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet20(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet3(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet4(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet5(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet6(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet7(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet8(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetStylisticSet9(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="M:System.Windows.Documents.Typography.SetVariants(System.Windows.DependencyObject,System.Windows.FontVariants)">
      <summary>指定された依存関係オブジェクトに対する <see cref="P:System.Windows.Documents.Typography.Variants" /> 添付プロパティの値を設定します。</summary>
      <param name="element">
        <see cref="P:System.Windows.Documents.Typography.Variants" /> プロパティの値の設定対象となる依存関係オブジェクト。</param>
      <param name="value">プロパティに設定する新しい値。</param>
    </member>
    <member name="P:System.Windows.Documents.Typography.SlashedZero">
      <summary>名目ゼロ フォント形式をスラッシュ ゼロで置き換えるかどうかを示す値を取得または設定します。</summary>
      <returns>スラッシュ ゼロ形式が有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.SlashedZeroProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.SlashedZero" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StandardLigatures">
      <summary>標準合字が有効かどうかを示す値を取得または設定します。</summary>
      <returns>標準合字が有効な場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StandardLigaturesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StandardLigatures" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StandardSwashes">
      <summary>標準巻きひげ形式のインデックスを指定する値を取得または設定します。</summary>
      <returns>標準巻きひげ形式のインデックス。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StandardSwashesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StandardSwashes" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticAlternates">
      <summary>スタイル上の代替形式のインデックスを指定する値を取得または設定します。</summary>
      <returns>スタイル上の代替形式のインデックス。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticAlternatesProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticAlternates" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet1">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet10">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet10Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet10" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet11">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet11Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet11" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet12">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet12Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet12" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet13">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet13Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet13" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet14">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet14Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet14" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet15">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet15Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet15" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet16">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet16Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet16" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet17">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet17Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet17" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet18">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet18Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet18" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet19">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet19Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet19" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet1Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet1" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet2">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet20">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet20Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet20" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet2Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet2" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet3">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet3Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet3" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet4">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet4Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet4" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet5">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet5Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet5" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet6">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet6Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet6" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet7">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet7Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet7" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet8">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet8Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet8" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.StylisticSet9">
      <summary>スタイル上のフォント形式セットが有効かどうかを示す値を取得または設定します。</summary>
      <returns>スタイル上のフォント形式セットが有効な場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.StylisticSet9Property">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.StylisticSet9" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Documents.Typography.Variants">
      <summary>使用される標準的なタイポグラフィ形式のバリエーションを示す <see cref="T:System.Windows.FontVariants" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.FontVariants" /> 列挙値。既定値は [標準] です。</returns>
    </member>
    <member name="F:System.Windows.Documents.Typography.VariantsProperty">
      <summary>
        <see cref="P:System.Windows.Documents.Typography.Variants" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Documents.Typography.Variants" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Documents.Underline">
      <summary>コンテンツを下線装飾で表示するよう設定するインラインレベルのコンテンツ要素を提供します。</summary>
    </member>
    <member name="M:System.Windows.Documents.Underline.#ctor">
      <summary>
        <see cref="T:System.Windows.Documents.Underline" /> クラスの新しいインスタンスを初期化します。 </summary>
    </member>
    <member name="T:System.Windows.Ink.DrawingAttributes">
      <summary>
        <see cref="T:System.Windows.Ink.Stroke" /> を描画するために使用する描画属性を指定します。</summary>
    </member>
    <member name="M:System.Windows.Ink.DrawingAttributes.#ctor">
      <summary>
        <see cref="T:System.Windows.Ink.DrawingAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Ink.DrawingAttributes.Color">
      <summary>
        <see cref="T:System.Windows.Ink.Stroke" /> の描画に使用する色を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Ink.Stroke" /> の描画に使用する色。既定はブラックです。</returns>
    </member>
    <member name="P:System.Windows.Ink.DrawingAttributes.Height">
      <summary>
        <see cref="T:System.Windows.Ink.Stroke" /> の描画に使用するスタイラスの高さを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Ink.Stroke" /> の描画に使用するスタイラスの高さ。既定値は 2 ピクセルです。</returns>
    </member>
    <member name="P:System.Windows.Ink.DrawingAttributes.OutlineColor">
      <summary>
        <see cref="T:System.Windows.Ink.Stroke" /> の描画に使用する外枠の色を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Ink.Stroke" /> の描画に使用するスタイラスの外枠の色。既定はブラックです。</returns>
    </member>
    <member name="P:System.Windows.Ink.DrawingAttributes.Width">
      <summary>
        <see cref="T:System.Windows.Ink.Stroke" /> の描画に使用するスタイラスの幅を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Ink.Stroke" /> の描画に使用するスタイラスの幅。既定値は 2 ピクセルです。</returns>
    </member>
    <member name="T:System.Windows.Ink.Stroke">
      <summary>スタイラスの上下のシーケンスおよび移動のシーケンスに対応するポイントのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Ink.Stroke.#ctor">
      <summary>
        <see cref="T:System.Windows.Ink.Stroke" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
      <summary>
        <see cref="T:System.Windows.Input.StylusPointCollection" /> を指定して、<see cref="T:System.Windows.Ink.Stroke" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stylusPoints">
        <see cref="T:System.Windows.Ink.Stroke" /> を表す <see cref="T:System.Windows.Input.StylusPointCollection" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stylusPoints" /> がスタイラス ポイントを含んでいません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stylusPoints" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Ink.Stroke.DrawingAttributes">
      <summary>
        <see cref="P:System.Windows.Ink.DrawingAttributes.Height" />、<see cref="P:System.Windows.Ink.DrawingAttributes.Width" />、<see cref="P:System.Windows.Ink.DrawingAttributes.Color" />、<see cref="P:System.Windows.Ink.DrawingAttributes.OutlineColor" /> などのストロークのプロパティを取得または設定します。</summary>
      <returns>ストロークの <see cref="T:System.Windows.Ink.DrawingAttributes" />。</returns>
    </member>
    <member name="M:System.Windows.Ink.Stroke.GetBounds">
      <summary>
        <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトの境界ボックスを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトの境界ボックスを定義する <see cref="T:System.Windows.Rect" /> 構造体。</returns>
    </member>
    <member name="M:System.Windows.Ink.Stroke.HitTest(System.Windows.Input.StylusPointCollection)">
      <summary>指定した <see cref="T:System.Windows.Input.StylusPointCollection" /> が <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトと交差するかどうかを示します。</summary>
      <returns>指定された <see cref="T:System.Windows.Input.StylusPointCollection" /> が <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトと交差する場合は true。それ以外の場合は false。</returns>
      <param name="stylusPointCollection">
        <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトとの交差の確認に使用する <see cref="T:System.Windows.Input.StylusPointCollection" />。</param>
    </member>
    <member name="P:System.Windows.Ink.Stroke.StylusPoints">
      <summary>
        <see cref="T:System.Windows.Ink.Stroke" /> のスタイラス ポイントを取得または設定します。</summary>
      <returns>現在の <see cref="T:System.Windows.Ink.Stroke" /> を表すスタイラス ポイントを格納する <see cref="T:System.Windows.Input.StylusPointCollection" />。</returns>
    </member>
    <member name="T:System.Windows.Ink.StrokeCollection">
      <summary>
        <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Ink.StrokeCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Ink.StrokeCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Ink.StrokeCollection.GetBounds">
      <summary>コレクション内のストロークの境界を返します。</summary>
      <returns>
        <see cref="T:System.Windows.Ink.StrokeCollection" /> のストロークの境界を格納する <see cref="T:System.Windows.Rect" />。</returns>
    </member>
    <member name="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Input.StylusPointCollection)">
      <summary>指定した <see cref="T:System.Windows.Input.StylusPointCollection" /> が <see cref="T:System.Windows.Ink.StrokeCollection" /> オブジェクトと交差するかどうかを示します。</summary>
      <returns>指定された <see cref="T:System.Windows.Input.StylusPointCollection" /> のポイントと交差するストロークを格納する <see cref="T:System.Windows.Ink.StrokeCollection" />。</returns>
      <param name="stylusPointCollection">
        <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトとの交差の確認に使用する <see cref="T:System.Windows.Input.StylusPointCollection" />。</param>
    </member>
    <member name="T:System.Windows.Input.Cursor">
      <summary>ポインターに使用されるイメージを表します。</summary>
    </member>
    <member name="M:System.Windows.Input.Cursor.ToString">
      <summary>
        <see cref="T:System.Windows.Input.Cursor" /> の文字列形式を返します。</summary>
      <returns>カーソルの文字列形式。これはアクティブな <see cref="T:System.Windows.Input.Cursors" /> プロパティ名に対応します。</returns>
    </member>
    <member name="T:System.Windows.Input.Cursors">
      <summary>既定のポインター イメージを定義します。</summary>
    </member>
    <member name="P:System.Windows.Input.Cursors.Arrow">
      <summary>Arrow<see cref="T:System.Windows.Input.Cursor" /> を表します。</summary>
      <returns>Arrow<see cref="T:System.Windows.Input.Cursor" />。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.Eraser">
      <summary>Eraser<see cref="T:System.Windows.Input.Cursor" /> を表します。</summary>
      <returns>Eraser<see cref="T:System.Windows.Input.Cursor" />。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.Hand">
      <summary>Hand<see cref="T:System.Windows.Input.Cursor" /> を表します。</summary>
      <returns>Hand<see cref="T:System.Windows.Input.Cursor" />。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.IBeam">
      <summary>IBeam <see cref="T:System.Windows.Input.Cursor" /> を表します。</summary>
      <returns>IBeam <see cref="T:System.Windows.Input.Cursor" />。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.None">
      <summary>表示されない特殊な <see cref="T:System.Windows.Input.Cursor" /> を表します。</summary>
      <returns>None <see cref="T:System.Windows.Input.Cursor" />。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.SizeNESW">
      <summary>SizeNESW<see cref="T:System.Windows.Input.Cursor" /> を表します。</summary>
      <returns>SizeNESW <see cref="T:System.Windows.Input.Cursor" />。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.SizeNS">
      <summary>SizeNS<see cref="T:System.Windows.Input.Cursor" /> を表します。</summary>
      <returns>SizeNS <see cref="T:System.Windows.Input.Cursor" />。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.SizeNWSE">
      <summary>SizeNWSE<see cref="T:System.Windows.Input.Cursor" /> を表します。</summary>
      <returns>SizeNWSE <see cref="T:System.Windows.Input.Cursor" />。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.SizeWE">
      <summary>SizeWE<see cref="T:System.Windows.Input.Cursor" /> を表します。</summary>
      <returns>SizeWE <see cref="T:System.Windows.Input.Cursor" />。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.Stylus">
      <summary>Stylus<see cref="T:System.Windows.Input.Cursor" /> を表します。</summary>
      <returns>Stylus <see cref="T:System.Windows.Input.Cursor" />。</returns>
    </member>
    <member name="P:System.Windows.Input.Cursors.Wait">
      <summary>Wait<see cref="T:System.Windows.Input.Cursor" /> を表します。</summary>
      <returns>Wait <see cref="T:System.Windows.Input.Cursor" />。</returns>
    </member>
    <member name="T:System.Windows.Input.FocusManager">
      <summary>フォーカス関連のイベントを処理する必要がない、要素フォーカスに関連するユーティリティ メソッドを提供します。</summary>
    </member>
    <member name="M:System.Windows.Input.FocusManager.GetFocusedElement">
      <summary>Windows Phone フォーカス システムに照会し、フォーカスを取得しているオブジェクトを確認します。</summary>
      <returns>現在フォーカスがあるオブジェクト。通常は、これは <see cref="T:System.Windows.Controls.Control" /> クラスです。</returns>
    </member>
    <member name="T:System.Windows.Input.GestureEventArgs">
      <summary>
        <see cref="E:System.Windows.UIElement.DoubleTap" /> などのジェスチャ イベントのイベント データを提供します。</summary>
    </member>
    <member name="M:System.Windows.Input.GestureEventArgs.#ctor">
      <summary>
        <see cref="T:System.Windows.Input.GestureEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Input.GestureEventArgs.GetPosition(System.Windows.UIElement)">
      <summary>ポインターの位置の X 座標と Y 座標を返します。必要に応じて、指定した T:System.Windows.UIElement の座標原点に対して評価される X 座標と Y 座標を返します。</summary>
      <returns>マウス ポインター位置の現在の X 座標と Y 座標を表す <see cref="T:System.Windows.Point" />。<paramref name="relativeTo" /> として null を渡した場合、これは Windows Phone プラグインのコンテンツ領域全体の座標になります。null 以外の <paramref name="relativeTo" /> が渡された場合、この座標は <paramref name="relativeTo" /> によって参照されたオブジェクトに関連します。</returns>
      <param name="relativeTo">Windows Phone プラグインに格納され、オブジェクト ツリーに接続されている任意の <see cref="T:System.Windows.UIElement" /> 派生オブジェクト。Windows Phone の座標系全体を基準にしてオブジェクトを指定するには、null を渡します。</param>
    </member>
    <member name="P:System.Windows.Input.GestureEventArgs.Handled">
      <summary>ルーティング イベントを処理済みとしてマークする値を取得または設定します。<see cref="P:System.Windows.Input.GestureEventArgs.Handled" /> の値を true に設定すると、イベント ルート上のほとんどのハンドラーによって同じイベントが再度処理されるのを防ぐことができます。</summary>
      <returns>ルーティング イベントに処理済みのマークを付けるには true、ルーティング イベントを未処理のままにするには false (この場合は後からイベントの経路を選定できます)。既定値は false です。</returns>
    </member>
    <member name="T:System.Windows.Input.ImeConversionModeValues">
      <summary>Windows Phone ベースのアプリケーションと対話する入力方式エディターによって実行される入力変換モードを説明します。</summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Alphanumeric">
      <summary>入力方法は、英数字変換モードを使用します。</summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Native">
      <summary>入力方法は、ネイティブ文字 (ひらがな、ハングル、漢字) 変換モードを使用します。</summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Katakana">
      <summary>入力方法は、カタカナ変換モードを使用します。</summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.FullShape">
      <summary>入力方法は、全角変換モードを使用します。</summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Roman">
      <summary>入力方法は、ローマ字変換モードを使用します。</summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.CharCode">
      <summary>入力方法は、文字コード変換モードを使用します。</summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.NoConversion">
      <summary>入力方法は、どの入力変換も実行しません。</summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Eudc">
      <summary>入力方法は、EUDC (外字) 変換モードを使用します。</summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Symbol">
      <summary>入力方法は、記号変換モードを使用します。</summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.Fixed">
      <summary>入力方法は、固定変換モードを使用します。</summary>
    </member>
    <member name="F:System.Windows.Input.ImeConversionModeValues.DoNotCare">
      <summary>入力方法は、どの入力変換方法を使用しても問題ありません。実際の変換方法は不確定です。 </summary>
    </member>
    <member name="T:System.Windows.Input.InputMethod">
      <summary>入力方式エディター (IME) 機能に影響し、Windows Phone ベースのアプリケーションと共に使用したときにサポートする添付プロパティを指定します。</summary>
    </member>
    <member name="M:System.Windows.Input.InputMethod.GetIsInputMethodEnabled(System.Windows.DependencyObject)">
      <summary>指定されたオブジェクトの <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> 添付プロパティの値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> 添付プロパティの値。</returns>
      <param name="target">
        <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> 添付プロパティの値を取得するオブジェクト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Windows.Controls.TextBox" /> ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Input.InputMethod.GetPreferredImeConversionMode(System.Windows.DependencyObject)">
      <summary>指定されたオブジェクトの <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> 添付プロパティの値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> 添付プロパティの値。</returns>
      <param name="target">
        <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> 添付プロパティの値を取得するオブジェクト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Windows.Controls.TextBox" /> ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Input.InputMethod.GetPreferredImeState(System.Windows.DependencyObject)">
      <summary>指定されたオブジェクトの <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> 添付プロパティの値を取得します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> 添付プロパティの値。</returns>
      <param name="target">
        <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> 添付プロパティの値を取得するオブジェクト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Windows.Controls.TextBox" /> ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Input.InputMethod.IsInputMethodEnabled">
      <summary>入力方式エディターを使用して、プロパティが添付される場合にコントロールの入力を提供できるかどうかを決定する値を取得または設定します。</summary>
      <returns>入力方式エディターを使用して入力を提供できる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="F:System.Windows.Input.InputMethod.IsInputMethodEnabledProperty">
      <summary>
        <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> 添付プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Input.InputMethod.SetIsInputMethodEnabled(System.Windows.DependencyObject,System.Boolean)">
      <summary>指定されたオブジェクトの <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> 添付プロパティの値を設定します。</summary>
      <param name="target">
        <see cref="P:System.Windows.Input.InputMethod.IsInputMethodEnabled" /> 添付プロパティの値を設定するオブジェクト。</param>
      <param name="value">設定する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Windows.Controls.TextBox" /> ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Input.InputMethod.SetPreferredImeConversionMode(System.Windows.DependencyObject,System.Windows.Input.ImeConversionModeValues)">
      <summary>指定されたオブジェクトの <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> 添付プロパティの値を設定します。</summary>
      <param name="target">
        <see cref="P:System.Windows.Input.InputMethod.PreferredImeConversionMode" /> 添付プロパティの値を設定するオブジェクト。</param>
      <param name="value">設定する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Windows.Controls.TextBox" /> ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Input.InputMethod.SetPreferredImeState(System.Windows.DependencyObject,System.Windows.Input.InputMethodState)">
      <summary>指定されたオブジェクトの <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> 添付プロパティの値を設定します。</summary>
      <param name="target">
        <see cref="P:System.Windows.Input.InputMethod.PreferredImeState" /> 添付プロパティの値を設定するオブジェクト。</param>
      <param name="value">設定する値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> が <see cref="T:System.Windows.Controls.TextBox" /> ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> が null です。</exception>
    </member>
    <member name="T:System.Windows.Input.InputMethodState">
      <summary>Windows Phone ベースのアプリケーションと対話するとき、入力方式エディターの状態を説明します。</summary>
    </member>
    <member name="F:System.Windows.Input.InputMethodState.Off">
      <summary>デバイスに依存しない入力を生成するために入力方式エディターはオフになっています。</summary>
    </member>
    <member name="F:System.Windows.Input.InputMethodState.On">
      <summary>入力方式エディターはオンです。</summary>
    </member>
    <member name="F:System.Windows.Input.InputMethodState.DoNotCare">
      <summary>この入力方法の状態は不確定です。 </summary>
    </member>
    <member name="T:System.Windows.Input.InputScope">
      <summary>入力方法によって提供されるデータのスコープに関する情報を表します。</summary>
    </member>
    <member name="M:System.Windows.Input.InputScope.#ctor">
      <summary>
        <see cref="T:System.Windows.Input.InputScope" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Input.InputScope.Names">
      <summary>文字列の一覧として、入力スコープ名を取得または設定します。</summary>
      <returns>文字列の一覧としての、入力スコープ名。</returns>
    </member>
    <member name="T:System.Windows.Input.InputScopeConverter">
      <summary>
        <see cref="T:System.Windows.Input.InputScope" /> クラスの型変換のサポートを提供します。</summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Input.InputScopeConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバーターが、特定の型のオブジェクトを <see cref="T:System.Windows.Input.InputScope" /> 型に変換できるかどうかを示す値を返します。</summary>
      <returns>
        <paramref name="sourceType" /> が <see cref="T:System.String" /> 型である場合は true。それ以外の場合は false。</returns>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換前の型を表す <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Windows.Input.InputScopeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.Input.InputScope" /> オブジェクトから指定した型に変換ができるかどうかを判断します。</summary>
      <returns>この実装は常に false を返します。</returns>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換後の型。</param>
    </member>
    <member name="M:System.Windows.Input.InputScopeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定のオブジェクトを <see cref="T:System.Windows.Input.InputScope" /> オブジェクトに変換します。</summary>
      <returns>変換ソースから作成された <see cref="T:System.Windows.Input.InputScope" />。</returns>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">変換の目的の <see cref="T:System.Globalization.CultureInfo" /> を表します。</param>
      <param name="source">コンバーターで変換するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Input.InputScopeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定した値オブジェクトを指定した型に変換します。</summary>
      <returns>変換後のオブジェクト。</returns>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">変換の目的の <see cref="T:System.Globalization.CultureInfo" /> を表します。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <param name="destinationType">変換後の型。</param>
    </member>
    <member name="T:System.Windows.Input.InputScopeName">
      <summary>テキスト入力パターンの名前を定義します。</summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeName.#ctor">
      <summary>
        <see cref="T:System.Windows.Input.InputScopeName" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Input.InputScopeName.NameValue">
      <summary>代替入力方式からの入力がどのように変換されるかを修正する、入力スコープ名の値を取得または設定します。</summary>
      <returns>列挙体の値。</returns>
    </member>
    <member name="T:System.Windows.Input.InputScopeNameConverter">
      <summary>
        <see cref="T:System.Windows.Input.InputScopeName" /> クラスの型変換のサポートを提供します。</summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeNameConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Input.InputScopeNameConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Input.InputScopeNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>このコンバーターが、特定の型のオブジェクトを <see cref="T:System.Windows.Input.InputScopeName" /> 型に変換できるかどうかを示す値を返します。</summary>
      <returns>
        <paramref name="sourceType" /> が <see cref="T:System.String" /> 型である場合は true。それ以外の場合は false。</returns>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">変換前の型を表す <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Windows.Input.InputScopeNameConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <see cref="T:System.Windows.Input.InputScopeName" /> オブジェクトから指定した型に変換ができるかどうかを判断します。</summary>
      <returns>
        <paramref name="destinationType" /> がこのコンバーターが <see cref="T:System.Windows.Input.InputScopeName" /> に変換できる型の場合は true。それ以外の場合は false。</returns>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">変換後の型。</param>
    </member>
    <member name="M:System.Windows.Input.InputScopeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定のオブジェクトを <see cref="T:System.Windows.Input.InputScopeName" /> オブジェクトに変換します。</summary>
      <returns>変換ソースから作成された <see cref="T:System.Windows.Input.InputScopeName" />。</returns>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">変換の目的の <see cref="T:System.Globalization.CultureInfo" /> を表します。</param>
      <param name="source">コンバーターで変換するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Input.InputScopeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>指定した値オブジェクトを指定した型に変換します。</summary>
      <returns>変換後のオブジェクト。</returns>
      <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">変換の目的の <see cref="T:System.Globalization.CultureInfo" /> を表します。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <param name="destinationType">変換後の型。</param>
    </member>
    <member name="T:System.Windows.Input.InputScopeNameValue">
      <summary>代替の入力方法からの入力をどのように解釈するかを指定します。たとえば、オンスクリーン キーボードが電話のキーパッドを模倣するように指定することができます。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Default">
      <summary>入力コマンドの既定の処理。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Url">
      <summary>URL (Uniform Resource Locator) のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.FullFilePath">
      <summary>ファイルの完全パスのテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.FileName">
      <summary>ファイル名のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.EmailUserName">
      <summary>電子メール ユーザー名のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.EmailSmtpAddress">
      <summary>簡易メール転送プロトコル (SMTP) 電子メール アドレスのテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.LogOnName">
      <summary>ログオン名のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalFullName">
      <summary>人名 (フル ネーム) のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalNamePrefix">
      <summary>人名 (接頭辞) のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalGivenName">
      <summary>人名 (名) のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalMiddleName">
      <summary>人名 (ミドル ネーム) のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalSurname">
      <summary>人名 (姓) のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PersonalNameSuffix">
      <summary>人名 (接尾辞) のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PostalAddress">
      <summary>住所のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PostalCode">
      <summary>郵便番号のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AddressStreet">
      <summary>番地のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AddressStateOrProvince">
      <summary>都道府県のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AddressCity">
      <summary>都市名のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AddressCountryName">
      <summary>国/地域の名前のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AddressCountryShortName">
      <summary>国/地域の省略された名前のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.CurrencyAmountAndSymbol">
      <summary>通貨金額および通貨記号のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.CurrencyAmount">
      <summary>通貨金額のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Date">
      <summary>カレンダー日付のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.DateMonth">
      <summary>カレンダー日付の月 (数字) のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.DateDay">
      <summary>カレンダー日付の日 (数字) のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.DateYear">
      <summary>カレンダー日付の年のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.DateMonthName">
      <summary>カレンダー日付の月 (名前) のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.DateDayName">
      <summary>カレンダー日付の日 (名前) のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Digits">
      <summary>数字のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Number">
      <summary>数字のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.OneChar">
      <summary>1 文字のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Password">
      <summary>パスワードのテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TelephoneNumber">
      <summary>電話番号のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TelephoneCountryCode">
      <summary>電話の国/地域番号のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TelephoneAreaCode">
      <summary>電話の市外局番のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TelephoneLocalNumber">
      <summary>電話の市内局番のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Time">
      <summary>時刻のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TimeHour">
      <summary>時刻 (時) のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.TimeMinorSec">
      <summary>時刻 (分または秒) のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.NumberFullWidth">
      <summary>全角数字のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AlphanumericHalfWidth">
      <summary>半角英数字のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.AlphanumericFullWidth">
      <summary>全角英数字のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.CurrencyChinese">
      <summary>中国通貨のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Bopomofo">
      <summary>ボポモフォ標準中国語発音表記システムのテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Hiragana">
      <summary>ひらがな書記体系のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.KatakanaHalfWidth">
      <summary>半角カタカナ文字のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.KatakanaFullWidth">
      <summary>全角カタカナ文字のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Hanja">
      <summary>韓国漢字文字のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Yomi">
      <summary>サポートされていません。Windows Phone で内部的に使用されます。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Text">
      <summary>標準テキスト入力の入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Chat">
      <summary>定義済み省略形を認識するテキスト メッセージングのテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Search">
      <summary>検索クエリのテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.NameOrPhoneNumber">
      <summary>名前または電話番号のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.EmailNameOrAddress">
      <summary>電子メール名またはアドレスのテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Private">
      <summary>サポートされていません。Windows Phone で内部的に使用されます。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Maps">
      <summary>マップ位置の入力のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.NumericPassword">
      <summary>数字パスワードのテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Formula">
      <summary>評価される式のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.ApplicationEnd">
      <summary>サポートされていません。Windows Phone で内部的に使用されます。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.EnumString">
      <summary>サポートされていません。Windows Phone で内部的に使用されます。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Xml">
      <summary>XML のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.Srgs">
      <summary>Speech Recognition Grammar Specification (SRGS) のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.RegularExpression">
      <summary>正規表現のテキスト入力パターン。</summary>
    </member>
    <member name="F:System.Windows.Input.InputScopeNameValue.PhraseList">
      <summary>語句一覧のテキスト入力パターン。</summary>
    </member>
    <member name="T:System.Windows.Input.Key">
      <summary>キーボードの使用可能なキー値を指定します。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
      <summary>キーなしを示す特殊な値</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
      <summary>BackSpace キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
      <summary>Tab キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
      <summary>Enter キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Shift">
      <summary>Shift キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Ctrl">
      <summary>Ctrl (コントロール) キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Alt">
      <summary>Alt キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
      <summary>CapsLock キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
      <summary>Esc (別名 Escape) キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
      <summary>Space キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
      <summary>PageUp キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
      <summary>PageDown キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
      <summary>End キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
      <summary>Home キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
      <summary>←キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
      <summary>↑キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
      <summary>→キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
      <summary>↓キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
      <summary>Insert キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
      <summary>Del (別名 Delete) キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
      <summary>0 (ゼロ) キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
      <summary>1 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
      <summary>2 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
      <summary>3 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
      <summary>4 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
      <summary>5 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
      <summary>6 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
      <summary>7 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
      <summary>8 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
      <summary>9 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
      <summary>A キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
      <summary>B キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
      <summary>C キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
      <summary>D キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
      <summary>E キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
      <summary>F キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
      <summary>G キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
      <summary>H キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
      <summary>I キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
      <summary>J キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
      <summary>K キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
      <summary>L キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
      <summary>M キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
      <summary>N キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
      <summary>O キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
      <summary>P キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
      <summary>Q キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
      <summary>R キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
      <summary>S キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
      <summary>T キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
      <summary>U キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
      <summary>V キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
      <summary>W キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
      <summary>X キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
      <summary>Y キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
      <summary>Z キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
      <summary>F1 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
      <summary>F2 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
      <summary>F3 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
      <summary>F4 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
      <summary>F5 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
      <summary>F6 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
      <summary>F7 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
      <summary>F8 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
      <summary>F9 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
      <summary>F10 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
      <summary>F11 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
      <summary>F12 キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
      <summary>テンキーの 0 キー。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
      <summary>テンキーの 1 キー。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
      <summary>テンキーの 2 キー。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
      <summary>テンキーの 3 キー。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
      <summary>テンキーの 4 キー。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
      <summary>テンキーの 5 キー。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
      <summary>テンキーの 6 キー。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
      <summary>テンキーの 7 キー。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
      <summary>テンキーの 8 キー。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
      <summary>テンキーの 9 キー。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
      <summary>* (乗算) キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
      <summary>+ (加算) キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
      <summary>- (減算) キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
      <summary>. (小数点) キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
      <summary>/ (除算) キー</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Unknown">
      <summary>キーがこの列挙の範囲外であることを示す特殊な値</summary>
    </member>
    <member name="T:System.Windows.Input.Keyboard">
      <summary>キーボード デバイスを表します。</summary>
    </member>
    <member name="P:System.Windows.Input.Keyboard.Modifiers">
      <summary>現在押されている <see cref="T:System.Windows.Input.ModifierKeys" /> のセットを取得します。</summary>
      <returns>列挙値のビットごとの組み合わせ。</returns>
    </member>
    <member name="T:System.Windows.Input.KeyboardNavigationMode">
      <summary>コンテナー内の Windows Phone タブ順におけるタブ ストップ間のタブ移動動作を指定します。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Local">
      <summary>タブ移動順は、このコンテナー内のローカル サブツリーのみで考慮されます。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Cycle">
      <summary>最初のキーボード ナビゲーション停止または最後のキーボード ナビゲーション停止に達したとき、コンテナー内側の最初のキーボード ナビゲーション停止または最後のキーボード ナビゲーション停止にフォーカスが返されます。</summary>
    </member>
    <member name="F:System.Windows.Input.KeyboardNavigationMode.Once">
      <summary>コンテナーおよびその子要素全体で 1 度だけフォーカスを受け取ります。 </summary>
    </member>
    <member name="T:System.Windows.Input.KeyEventArgs">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyUp" /> イベントおよび <see cref="E:System.Windows.UIElement.KeyDown" /> イベントのイベント データを提供します。</summary>
    </member>
    <member name="P:System.Windows.Input.KeyEventArgs.Handled">
      <summary>ルーティング イベントを処理済みとしてマークする値を取得または設定します。Handled の値が true である場合は、イベント ルート上のほとんどのハンドラーが同じイベントを再処理できません。</summary>
      <returns>ルーティング イベントに処理済みのマークを付けるには true、ルーティング イベントを未処理のままにするには false (この場合は後からイベントの経路を選定できます)。既定値は false です。</returns>
    </member>
    <member name="P:System.Windows.Input.KeyEventArgs.Key">
      <summary>イベントに関連付けられているキーボード キーを取得します。</summary>
      <returns>イベントによって参照されるキーを示す列挙値の 1 つ。</returns>
    </member>
    <member name="P:System.Windows.Input.KeyEventArgs.PlatformKeyCode">
      <summary>押されたキーまたは離されたキーを (どちらのイベントが発生したかに応じて) 表す整数値を取得します。この値は非ポータブルなキー コードで、オペレーティング システム固有です。</summary>
      <returns>キー コード値。</returns>
    </member>
    <member name="T:System.Windows.Input.KeyEventHandler">
      <summary>
        <see cref="E:System.Windows.UIElement.KeyUp" /> イベントおよび <see cref="E:System.Windows.UIElement.KeyDown" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Input.ManipulationCompletedEventArgs">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> イベントにデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationCompletedEventArgs.#ctor">
      <summary>
        <see cref="T:System.Windows.Input.ManipulationCompletedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.FinalVelocities">
      <summary>操作に使用される速度を取得します。</summary>
      <returns>操作に使用される速度。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.Handled">
      <summary>ルーティング イベントを処理済みとしてマークする値を取得または設定します。true に設定すると、イベント ルート上のほとんどのハンドラーが同じイベントを再処理できません。</summary>
      <returns>ルーティング イベントに処理済みのマークを付けるには true、ルーティング イベントを未処理のままにするには false (この場合は後からイベントの経路を選定できます)。既定値は false です。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.IsInertial">
      <summary>慣性による処理中に <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> イベントが発生するかどうかを取得します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> イベントが慣性による処理中に発生する場合は true。ユーザーの入力デバイスが要素と接触中にイベントが発生する場合は false。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationContainer">
      <summary>操作の座標を定義するコンテナーを取得します。</summary>
      <returns>コンテナー要素。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.ManipulationOrigin">
      <summary>操作の起点となるポイントを取得します。</summary>
      <returns>操作の起点となるポイント。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation">
      <summary>現在の操作中に行われる変換の合計を取得します。</summary>
      <returns>現在の操作中に行われる変換の合計。</returns>
    </member>
    <member name="T:System.Windows.Input.ManipulationDelta">
      <summary>操作イベントが発生するときに蓄積される変換データを格納します。</summary>
    </member>
    <member name="P:System.Windows.Input.ManipulationDelta.Scale">
      <summary>乗数として操作がサイズ変更した量を取得します。</summary>
      <returns>乗数としての操作によるサイズ変更量。</returns>
    </member>
    <member name="F:System.Windows.Input.ManipulationDelta.ScaleProperty">
      <summary>
        <see cref="P:System.Windows.Input.ManipulationDelta.Scale" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.ManipulationDelta.Scale" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDelta.Translation">
      <summary>操作の線形モーションを取得します。</summary>
      <returns>操作の線形モーション。</returns>
    </member>
    <member name="F:System.Windows.Input.ManipulationDelta.TranslationProperty">
      <summary>
        <see cref="P:System.Windows.Input.ManipulationDelta.Translation" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.ManipulationDelta.Translation" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Input.ManipulationDeltaEventArgs">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationDelta" /> イベントにデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationDeltaEventArgs.#ctor">
      <summary>
        <see cref="T:System.Windows.Input.ManipulationDeltaEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationDeltaEventArgs.Complete">
      <summary>慣性なしで操作を完了します。</summary>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation">
      <summary>現在の操作の累積された変更を <see cref="T:System.Windows.Input.ManipulationDelta" /> として取得します。</summary>
      <returns>現在の操作の蓄積された変更。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation">
      <summary>現在の操作の最新の変更を <see cref="T:System.Windows.Input.ManipulationDelta" /> として取得します。</summary>
      <returns>現在の操作の最新の変更。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.Handled">
      <summary>ルーティング イベントを処理済みとしてマークする値を取得または設定します。true に設定すると、イベント ルート上のほとんどのハンドラーが同じイベントを再処理できません。</summary>
      <returns>ルーティング イベントに処理済みのマークを付けるには true、ルーティング イベントを未処理のままにするには false (この場合は後からイベントの経路を選定できます)。既定値は false です。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial">
      <summary>慣性による処理中に <see cref="E:System.Windows.UIElement.ManipulationDelta" /> イベントが発生するかどうかを取得します。</summary>
      <returns>
        <see cref="E:System.Windows.UIElement.ManipulationDelta" /> イベントが慣性による処理中に発生する場合は true。ユーザーの入力デバイスが要素と接触中にイベントが発生する場合は false。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer">
      <summary>操作の座標を定義するコンテナーを取得します。</summary>
      <returns>コンテナー要素。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin">
      <summary>操作の起点となるポイントを取得します。</summary>
      <returns>操作の起点となるポイント。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.PinchManipulation">
      <summary>ピンチ ジェスチャに関する情報を取得します。</summary>
      <returns>ピンチ ジェスチャに関する情報。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationDeltaEventArgs.Velocities">
      <summary>操作に対する最新の変更の速度を取得します。</summary>
      <returns>操作に対する最新の変更の速度。</returns>
    </member>
    <member name="T:System.Windows.Input.ManipulationStartedEventArgs">
      <summary>
        <see cref="E:System.Windows.UIElement.ManipulationStarted" /> イベントにデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationStartedEventArgs.#ctor">
      <summary>
        <see cref="T:System.Windows.Input.ManipulationStartedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Input.ManipulationStartedEventArgs.Complete">
      <summary>慣性なしで操作を完了します。</summary>
    </member>
    <member name="P:System.Windows.Input.ManipulationStartedEventArgs.Handled">
      <summary>ルーティング イベントを処理済みとしてマークする値を取得または設定します。true に設定すると、イベント ルート上のほとんどのハンドラーが同じイベントを再処理できません。</summary>
      <returns>ルーティング イベントに処理済みのマークを付けるには true、ルーティング イベントを未処理のままにするには false (この場合は後からイベントの経路を選定できます)。既定値は false です。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer">
      <summary>操作の座標を定義するコンテナーを取得します。</summary>
      <returns>コンテナー要素。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin">
      <summary>操作の起点となるポイントを取得します。</summary>
      <returns>操作の起点となるポイント。</returns>
    </member>
    <member name="T:System.Windows.Input.ManipulationVelocities">
      <summary>操作が発生する速度を記述します。</summary>
    </member>
    <member name="P:System.Windows.Input.ManipulationVelocities.ExpansionVelocity">
      <summary>操作のサイズ変更速度を取得します。</summary>
      <returns>操作のサイズ変更速度。</returns>
    </member>
    <member name="F:System.Windows.Input.ManipulationVelocities.ExpansionVelocityProperty">
      <summary>
        <see cref="P:System.Windows.Input.ManipulationVelocities.ExpansionVelocity" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.ManipulationVelocities.ExpansionVelocity" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Input.ManipulationVelocities.LinearVelocity">
      <summary>線形モーションの速度を取得します。</summary>
      <returns>線形モーションの速度。</returns>
    </member>
    <member name="F:System.Windows.Input.ManipulationVelocities.LinearVelocityProperty">
      <summary>
        <see cref="P:System.Windows.Input.ManipulationVelocities.LinearVelocity" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.ManipulationVelocities.LinearVelocity" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
      <summary>変換キーのセットを指定します。</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
      <summary>どの変換キーも押されていません。</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
      <summary>Alt キーが押された状態です。</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
      <summary>Ctrl キーが押された状態です。</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
      <summary>Shift キーが押された状態です。</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
      <summary>Windows ロゴ キーが押された状態です。</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Apple">
      <summary>Apple キー (別名 Open Apple キー) が押された状態です。</summary>
    </member>
    <member name="T:System.Windows.Input.MouseButtonEventArgs">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> や <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> などのマウス ボタン入力イベントのイベントデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Input.MouseButtonEventArgs.Handled">
      <summary>ルーティング イベントを処理済みとしてマークする値を取得または設定します。Handled の値が true である場合は、イベント ルート上のほとんどのハンドラーが同じイベントを再処理できません。</summary>
      <returns>ルーティング イベントに処理済みのマークを付けるには true、ルーティング イベントを未処理のままにするには false (この場合は後からイベントの経路を選定でき、他のハンドラーで処理できます)。既定値は false です。</returns>
    </member>
    <member name="T:System.Windows.Input.MouseButtonEventHandler">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> イベントおよび <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Input.MouseEventArgs">
      <summary>Windows Phone のポインターの動きを含む <see cref="E:System.Windows.UIElement.MouseMove" /> など、特にデバイスのボタンとは関係のないポインター関連のイベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.UIElement)">
      <summary>ポインターの位置の X 座標と Y 座標を返します。必要に応じて、指定した <see cref="T:System.Windows.UIElement" /> の座標原点に対して評価される X 座標と Y 座標を返します。</summary>
      <returns>ポインター位置の現在の x 座標と y 座標を表す <see cref="T:System.Windows.Point" />。<paramref name="relativeTo" /> として null を渡した場合、これは Windows Phone のコンテンツ領域全体の座標になります。null 以外の <paramref name="relativeTo" /> が渡された場合、この座標は <paramref name="relativeTo" /> によって参照されたオブジェクトに関連します。</returns>
      <param name="relativeTo">Windows Phone に格納され、オブジェクト ツリーに接続されている任意の <see cref="T:System.Windows.UIElement" /> 派生オブジェクト。Windows Phone の座標系全体を基準にしてオブジェクトを指定するには、<paramref name="relativeTo" /> の値を null に設定します。</param>
    </member>
    <member name="P:System.Windows.Input.MouseEventArgs.StylusDevice">
      <summary>入力と関連付けられたスタイラス ポイントのコレクションなど、スタイラス デバイス情報を報告するオブジェクトを取得します。</summary>
      <returns>スタイラス デバイス情報オブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Input.MouseEventHandler">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseMove" /> など、特にマウス ボタンと関係のないマウス関連のルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Input.MouseWheelEventArgs">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseWheel" /> ルーティング イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Input.MouseWheelEventArgs.Delta">
      <summary>開始状態または前回のイベント発生を基準とした、マウス ホイールの相対的な回転量を示す値を取得します。</summary>
      <returns>マウス ホィールの回転係数を提供する整数値。この値は負の整数にできます。「備考」を参照してください。</returns>
    </member>
    <member name="P:System.Windows.Input.MouseWheelEventArgs.Handled">
      <summary>処理済みとしてルーティング イベントをマークし、イベント ルート上のほとんどのハンドラーが同じイベントを再度処理しないようにする値を取得または設定します。</summary>
      <returns>ルーティング イベントを処理済みとしてマークする場合は true。ルーティング イベントを未処理のままにして、イベントがさらにルーティングされる (他のハンドラーの処理が適用される) ようにする場合は false。既定値は false です。</returns>
    </member>
    <member name="T:System.Windows.Input.MouseWheelEventHandler">
      <summary>
        <see cref="E:System.Windows.UIElement.MouseWheel" /> ルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのイベント データ。</param>
    </member>
    <member name="T:System.Windows.Input.PinchContactPoints">
      <summary>ピンチ接触点に関する情報が格納されます。</summary>
    </member>
    <member name="P:System.Windows.Input.PinchContactPoints.Center">
      <summary>プライマリ接触点とセカンダリ接触点の中点を取得します。</summary>
      <returns>プライマリ接触点とセカンダリ接触点の中点。</returns>
    </member>
    <member name="P:System.Windows.Input.PinchContactPoints.PrimaryContact">
      <summary>プライマリ接触点を取得します。</summary>
      <returns>プライマリ接触点。</returns>
    </member>
    <member name="P:System.Windows.Input.PinchContactPoints.SecondaryContact">
      <summary>現在のセカンダリ接触点を取得します。</summary>
      <returns>現在のセカンダリ接触点。</returns>
    </member>
    <member name="T:System.Windows.Input.PinchManipulation">
      <summary>ピンチ ジェスチャに関する情報が格納されます。</summary>
    </member>
    <member name="P:System.Windows.Input.PinchManipulation.CumulativeScale">
      <summary>接触点間の現在の距離と、元の接触点間の距離の比率。</summary>
      <returns>接触点間の現在の距離を元の接触点間の距離で割った値です。</returns>
    </member>
    <member name="P:System.Windows.Input.PinchManipulation.Current">
      <summary>現在のピンチ接触点を取得します。</summary>
      <returns>現在のピンチ接触点。</returns>
    </member>
    <member name="P:System.Windows.Input.PinchManipulation.DeltaScale">
      <summary>接触点間の現在の距離と、前の接触点間の距離の比率。</summary>
      <returns>接触点間の現在の距離を前の接触点間の距離で割った値です。</returns>
    </member>
    <member name="P:System.Windows.Input.PinchManipulation.Original">
      <summary>元のピンチ接触点を取得します。</summary>
      <returns>元のピンチ接触点。</returns>
    </member>
    <member name="T:System.Windows.Input.StylusDevice">
      <summary>入力と関連付けられたスタイラス ポイントのコレクションなど、スタイラス デバイス情報を報告します。</summary>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.DeviceType">
      <summary>タブレット デバイスの種類を取得します。</summary>
      <returns>タブレット デバイスの種類。</returns>
    </member>
    <member name="M:System.Windows.Input.StylusDevice.GetStylusPoints(System.Windows.UIElement)">
      <summary>最後のマウス イベント以降収集されたスタイラス ポイントを返します。</summary>
      <returns>最後のマウス イベント以降収集されたスタイラス ポイントのコレクション。</returns>
      <param name="relativeTo">キャプチャされたポイントに適用されるオブジェクト (通常は <see cref="T:System.Windows.Controls.InkPresenter" />) のオフセットを指定します。</param>
    </member>
    <member name="P:System.Windows.Input.StylusDevice.Inverted">
      <summary>スタイラスが逆さになっているかどうかを示す値を取得または設定します。</summary>
      <returns>スタイラスが逆さになっている場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="T:System.Windows.Input.StylusPoint">
      <summary>ユーザーがスタイラスまたはマウスを使ってインク ストロークを入力している間に収集された単一のポイントを表します。</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.Input.StylusPoint" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="x">ピクセル表示の <see cref="T:System.Windows.Input.StylusPoint" /> の x 座標。</param>
      <param name="y">ピクセル表示の <see cref="T:System.Windows.Input.StylusPoint" /> の y 座標。</param>
    </member>
    <member name="P:System.Windows.Input.StylusPoint.PressureFactor">
      <summary>画面のスタイラスの圧力係数を取得または設定します。</summary>
      <returns>画面のスタイラスの圧力係数。既定値は 0.5 です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Input.StylusPoint.PressureFactor" /> は 0 未満の値または 1.0 を超えた値に設定されます。</exception>
    </member>
    <member name="P:System.Windows.Input.StylusPoint.X">
      <summary>
        <see cref="T:System.Windows.Input.StylusPoint" /> の X 座標の値を取得または設定します。</summary>
      <returns>ピクセル表示の <see cref="T:System.Windows.Input.StylusPoint" /> の x 座標。既定値は 0 です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Input.StylusPoint.X" /> には、無限に評価される値または数値でない値が設定されています。</exception>
    </member>
    <member name="P:System.Windows.Input.StylusPoint.Y">
      <summary>
        <see cref="T:System.Windows.Input.StylusPoint" /> の Y 座標の値を取得または設定します。</summary>
      <returns>ピクセル表示の <see cref="T:System.Windows.Input.StylusPoint" /> の y 座標。既定値は 0 です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Windows.Input.StylusPoint.Y" /> には、無限に評価される値または数値でない値が設定されています。</exception>
    </member>
    <member name="T:System.Windows.Input.StylusPointCollection">
      <summary>関連する <see cref="T:System.Windows.Input.StylusPoint" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Input.StylusPointCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Input.StylusPointCollection.Add(System.Windows.Input.StylusPointCollection)">
      <summary>
        <see cref="T:System.Windows.Input.StylusPoint" /> オブジェクトのコレクションをコレクションに追加します。</summary>
      <param name="stylusPoints">コレクションに追加する <see cref="T:System.Windows.Input.StylusPoint" /> オブジェクトのコレクション。</param>
    </member>
    <member name="T:System.Windows.Input.TabletDeviceType">
      <summary>タブレット デバイスが使用するデバイスの種類の値を定義します。</summary>
    </member>
    <member name="F:System.Windows.Input.TabletDeviceType.Mouse">
      <summary>タブレット デバイスがマウスであることを示します。</summary>
    </member>
    <member name="F:System.Windows.Input.TabletDeviceType.Stylus">
      <summary>タブレット デバイスがスタイラスであることを示します。</summary>
    </member>
    <member name="F:System.Windows.Input.TabletDeviceType.Touch">
      <summary>タブレット デバイスがタッチ スクリーンであることを示します。</summary>
    </member>
    <member name="T:System.Windows.Input.TextComposition">
      <summary>構成テキスト自体を含むテキスト入力に関連した構成を表します。</summary>
    </member>
    <member name="P:System.Windows.Input.TextComposition.CompositionText">
      <summary>このテキスト構成の構成テキストを取得します。</summary>
      <returns>このテキスト構成の構成テキスト。</returns>
    </member>
    <member name="T:System.Windows.Input.TextCompositionEventArgs">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInput" /> ルーティング イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Input.TextCompositionEventArgs.Handled">
      <summary>処理済みとしてルーティング イベントをマークし、イベント ルート上のほとんどのハンドラーが同じイベントを再度処理しないようにする値を取得または設定します。</summary>
      <returns>ルーティング イベントに処理済みのマークを付けるには true、ルーティング イベントを未処理のままにするには false (この場合は後からイベントの経路を選定でき、他のハンドラーで処理できます)。既定値は false です。</returns>
    </member>
    <member name="P:System.Windows.Input.TextCompositionEventArgs.Text">
      <summary>テキスト構成のテキスト文字列を取得または設定します。</summary>
      <returns>テキスト構成のテキスト文字列。</returns>
    </member>
    <member name="P:System.Windows.Input.TextCompositionEventArgs.TextComposition">
      <summary>構成に含まれるテキストを <see cref="T:System.Windows.Input.TextComposition" /> オブジェクトとして取得または設定します。</summary>
      <returns>構成に含まれる、<see cref="T:System.Windows.Input.TextComposition" /> オブジェクトとしてのテキスト。</returns>
    </member>
    <member name="T:System.Windows.Input.TextCompositionEventHandler">
      <summary>
        <see cref="E:System.Windows.UIElement.TextInput" /> ルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのイベント データ。</param>
    </member>
    <member name="T:System.Windows.Input.Touch">
      <summary>オペレーティング システムからのタッチ入力を処理し、Windows Phone 固有の <see cref="E:System.Windows.Input.Touch.FrameReported" /> イベントを生成するアプリケーション レベルのサービスを提供します。</summary>
    </member>
    <member name="E:System.Windows.Input.Touch.FrameReported">
      <summary>入力システムが Windows 7 のタッチ メッセージを Windows Phone 用に昇格させたときに発生します。</summary>
    </member>
    <member name="T:System.Windows.Input.TouchAction">
      <summary>特定のタッチ ポイントのアクションを記述します。</summary>
    </member>
    <member name="F:System.Windows.Input.TouchAction.Down">
      <summary>TOUCHEVENTF_DOWN メッセージからのタッチ アクション。</summary>
    </member>
    <member name="F:System.Windows.Input.TouchAction.Move">
      <summary>TOUCHEVENTF_MOVE メッセージからのタッチ アクション。</summary>
    </member>
    <member name="F:System.Windows.Input.TouchAction.Up">
      <summary>TOUCHEVENTF_UP メッセージからのタッチ アクション。</summary>
    </member>
    <member name="T:System.Windows.Input.TouchDevice">
      <summary>タッチ ポイントを生成した "デバイス" を識別します。実際にはデバイスというよりも、"下げて移動して上げる" というシーケンスを通じてタッチ ポイントを識別するためのものです。</summary>
    </member>
    <member name="M:System.Windows.Input.TouchDevice.#ctor">
      <summary>
        <see cref="T:System.Windows.Input.TouchDevice" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Input.TouchDevice.DirectlyOver">
      <summary>このタッチ ポイントが生成された時点でマウスが置かれていた最上位の <see cref="T:System.Windows.UIElement" /> オブジェクトを取得します。</summary>
      <returns>このタッチ ポイントが生成された時点でマウスが置かれていた最上位の (Z オーダー) <see cref="T:System.Windows.UIElement" /> オブジェクト。</returns>
    </member>
    <member name="F:System.Windows.Input.TouchDevice.DirectlyOverProperty">
      <summary>
        <see cref="P:System.Windows.Input.TouchDevice.DirectlyOver" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.TouchDevice.DirectlyOver" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Input.TouchDevice.Id">
      <summary>特定のタッチ デバイスのオペレーティング システムによって提供された一意な ID を取得します。</summary>
      <returns>特定のタッチ デバイスの一意な ID。</returns>
    </member>
    <member name="F:System.Windows.Input.TouchDevice.IdProperty">
      <summary>
        <see cref="P:System.Windows.Input.TouchDevice.Id" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.TouchDevice.Id" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Input.TouchFrameEventArgs">
      <summary>
        <see cref="E:System.Windows.Input.Touch.FrameReported" /> イベントにデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.UIElement)">
      <summary>報告されたフレームのプライマリ タッチ ポイントを <see cref="T:System.Windows.Input.TouchPoint" /> 値として返します。タッチ ポイントは、Windows Phone の絶対座標ではなく座標参照ポイントに対して評価することができます。</summary>
      <returns>報告されたフレームのプライマリ タッチ ポイント。</returns>
      <param name="relativeTo">戻り値 <see cref="T:System.Windows.Input.TouchPoint" /> の座標のオフセットに使用可能な座標参照ポイント。Windows Phone の絶対座標に基づいて基準を設定するには、<paramref name="relativeTo" /> を null として指定します。</param>
    </member>
    <member name="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.UIElement)">
      <summary>報告されたフレームに含まれる、すべての <see cref="T:System.Windows.Input.TouchPoint" /> 値のコレクションを返します。タッチ ポイントは、Windows Phone の絶対座標ではなく座標参照ポイントに対して評価することができます。</summary>
      <returns>
        <see cref="T:System.Windows.Input.TouchPoint" /> 値のコレクション。</returns>
      <param name="relativeTo">返されたコレクションのすべての <see cref="T:System.Windows.Input.TouchPoint" /> 項目の座標のオフセットに使用可能な座標参照ポイント。Windows Phone の絶対座標に基づいて基準を設定するには、<paramref name="relativeTo" /> を null として指定します。</param>
    </member>
    <member name="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp">
      <summary>すべてのタッチ ポイントが <see cref="F:System.Windows.Input.TouchAction.Up" /> として報告されるまで、プライマリ タッチ ポイントの自動マウスイベント昇格を無効にします。</summary>
      <exception cref="T:System.InvalidOperationException">プライマリ タッチ ポイントは記録されていませんでした。またはプライマリ タッチ ポイントに、<see cref="F:System.Windows.Input.TouchAction.Down" /> 以外のアクションが存在します。</exception>
    </member>
    <member name="P:System.Windows.Input.TouchFrameEventArgs.Timestamp">
      <summary>イベントのタイム スタンプの整数値を取得します。</summary>
      <returns>イベントのタイム スタンプの整数値。</returns>
    </member>
    <member name="T:System.Windows.Input.TouchFrameEventHandler">
      <summary>
        <see cref="T:System.Windows.Input.Touch" /> の <see cref="E:System.Windows.Input.Touch.FrameReported" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントが処理されるオブジェクト。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Input.TouchPoint">
      <summary>タッチ メッセージ ソースからの単一のタッチ ポイントを表します。</summary>
    </member>
    <member name="M:System.Windows.Input.TouchPoint.#ctor">
      <summary>
        <see cref="T:System.Windows.Input.TouchPoint" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.Action">
      <summary>
        <see cref="T:System.Windows.Input.TouchPoint" /> が表すアクションの種類 (上、下、移動) を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Input.TouchAction" /> 列挙体の値。</returns>
    </member>
    <member name="F:System.Windows.Input.TouchPoint.ActionProperty">
      <summary>
        <see cref="P:System.Windows.Input.TouchPoint.Action" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.TouchPoint.Action" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.Position">
      <summary>タッチ ポイントの X,Y 座標位置を <see cref="T:System.Windows.Point" /> として取得します。</summary>
      <returns>タッチ ポイントの座標位置を報告する <see cref="T:System.Windows.Point" /> 値。</returns>
    </member>
    <member name="F:System.Windows.Input.TouchPoint.PositionProperty">
      <summary>
        <see cref="P:System.Windows.Input.TouchPoint.Position" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.TouchPoint.Position" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.Size">
      <summary>タッチ ポイントの接点領域として報告される四角形領域を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Size" /> 値。タッチ入力に使用されるデバイスがタッチ サイズ領域の報告をサポートしていない場合、このプロパティは、null の代わりに -1 の値を持つ <see cref="T:System.Windows.Size" /> を報告します。</returns>
    </member>
    <member name="F:System.Windows.Input.TouchPoint.SizeProperty">
      <summary>
        <see cref="P:System.Windows.Input.TouchPoint.Size" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.TouchPoint.Size" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Input.TouchPoint.TouchDevice">
      <summary>タッチ ポイントを生成した特定のデバイスの種類を取得します。</summary>
      <returns>生成元のデバイスに関する特定の情報を報告する <see cref="P:System.Windows.Input.TouchPoint.TouchDevice" /> 値。</returns>
    </member>
    <member name="F:System.Windows.Input.TouchPoint.TouchDeviceProperty">
      <summary>
        <see cref="P:System.Windows.Input.TouchPoint.TouchDevice" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Input.TouchPoint.TouchDevice" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Input.TouchPointCollection">
      <summary>
        <see cref="T:System.Windows.Input.TouchPoint" /> 値のコレクションを格納します。</summary>
    </member>
    <member name="T:System.Windows.Interop.Content">
      <summary>Windows Phone アプリケーションのコンテンツ領域の寸法について情報を提供します。</summary>
    </member>
    <member name="M:System.Windows.Interop.Content.#ctor">
      <summary>
        <see cref="T:System.Windows.Interop.Content" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Interop.Content.ActualHeight">
      <summary>Windows Phone アプリケーションのコンテンツ領域の高さを取得します。</summary>
      <returns>Windows Phone アプリケーションのコンテンツ領域の高さ (ピクセル単位)。</returns>
    </member>
    <member name="P:System.Windows.Interop.Content.ActualWidth">
      <summary>Windows Phone アプリケーションのコンテンツ領域の幅を取得します。</summary>
      <returns>Windows Phone アプリケーションのコンテンツ領域の幅 (ピクセル単位)。</returns>
    </member>
    <member name="E:System.Windows.Interop.Content.Resized">
      <summary>Windows Phone アプリケーションの <see cref="P:System.Windows.Interop.Content.ActualHeight" /> または <see cref="P:System.Windows.Interop.Content.ActualWidth" /> が変更されたときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Interop.Content.ScaleFactor">
      <summary>アプリケーションのコンテンツ領域がコンテンツをスケールする値を取得します。</summary>
      <returns>現在のアプリケーションのコンテンツ領域のスケール ファクター。</returns>
    </member>
    <member name="E:System.Windows.Interop.Content.ScaleFactorChanged">
      <summary>スケール ファクターが変化すると発生します。</summary>
    </member>
    <member name="T:System.Windows.Interop.HostingRenderTargetBitmap">
      <summary>Expression Blend や Visual Studio などのネイティブの Windows Phone ホストで、<see cref="T:System.Windows.UIElement" /> オブジェクトをビットマップに変換できるようにします。</summary>
    </member>
    <member name="M:System.Windows.Interop.HostingRenderTargetBitmap.Render(System.Windows.UIElement)">
      <summary>コンストラクターに指定されたビットマップ ポインターに対する <see cref="T:System.Windows.UIElement" /> オブジェクトを描画します。</summary>
      <returns>ダーティな四角形。 </returns>
      <param name="visual">表示するオブジェクト。</param>
    </member>
    <member name="T:System.Windows.Interop.NavigationStateChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Interop.SilverlightHost.NavigationStateChanged" /> イベントにデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Interop.NavigationStateChangedEventArgs.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Windows.Interop.NavigationStateChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="previousNavigationState">前のナビゲーション状態を表す URI フラグメント。</param>
      <param name="newNavigationState">新しいナビゲーション状態を表す URI フラグメント。</param>
    </member>
    <member name="P:System.Windows.Interop.NavigationStateChangedEventArgs.NewNavigationState">
      <summary>新しいナビゲーション状態を表す URI フラグメントを取得します。</summary>
      <returns>新しいナビゲーション状態を表す URI フラグメント。</returns>
    </member>
    <member name="P:System.Windows.Interop.NavigationStateChangedEventArgs.PreviousNavigationState">
      <summary>以前のナビゲーション状態を表す URI フラグメントを取得します。</summary>
      <returns>前のナビゲーション状態を表す URI フラグメント。 </returns>
    </member>
    <member name="T:System.Windows.Interop.Settings">
      <summary>アプリケーションのインスタンス化の設定に関する詳細を報告します。</summary>
    </member>
    <member name="M:System.Windows.Interop.Settings.#ctor">
      <summary>
        <see cref="T:System.Windows.Interop.Settings" /> オブジェクトの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableCacheVisualization">
      <summary>非稼働の分析視覚化モードを使用するかどうかを示す値を取得または設定します。このモードでは、カラー オーバーレイを使用する GPU アクセラレータが有効になっていないページの範囲が表示されます。製品版のコードでは使用しないでください。</summary>
      <returns>キャッシュ ビジュアル化が有効な場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableFrameRateCounter">
      <summary>現在のフレーム レートを表示するかどうかを示す値を取得または設定します。</summary>
      <returns>現在のアプリケーションの 1 秒あたりのフレーム数 (fps) を表示する場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableGPUAcceleration">
      <summary>グラフィックスの最適化を伴う可能性のあるキャッシュされた構成に対して、グラフィックス プロセッサ ユニット (GPU) のハードウェア アクセラレータを使用するかどうかを示す値を取得します。</summary>
      <returns>ハードウェア アクセラレータが有効な場合は true。それ以外の場合は false。 </returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.EnableRedrawRegions">
      <summary>各フレームが再描画される領域を表示するかどうかを示す値を取得または設定します。</summary>
      <returns>各フレームが再描画される領域が表示される場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Interop.Settings.MaxFrameRate">
      <summary>1 秒あたりにレンダリングする最大フレーム数を取得または設定します。</summary>
      <returns>1 秒あたりにレンダリングする最大フレーム数を指定する整数値。既定値は 60 です。</returns>
    </member>
    <member name="T:System.Windows.Interop.SilverlightHost">
      <summary>アプリケーションのインスタンス化の設定に関する詳細を報告します。</summary>
    </member>
    <member name="M:System.Windows.Interop.SilverlightHost.#ctor">
      <summary>
        <see cref="T:System.Windows.Interop.SilverlightHost" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.Background">
      <summary>インスタンス化の設定の一環としてアプリケーションに適用された背景色の値を取得します。</summary>
      <returns>アプリケーションの背景色。</returns>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.Content">
      <summary>この <see cref="T:System.Windows.Interop.SilverlightHost" /> の "Content" サブオブジェクトを取得します。</summary>
      <returns>"Content" サブオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.IsLoaded">
      <summary>アプリケーションの読み込みが完了したかどうかを示す値を取得します。</summary>
      <returns>アプリケーションの読み込みが完了している場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Interop.SilverlightHost.IsVersionSupported(System.String)">
      <summary>指定したバージョンがサポートされているかどうかを示す値を返します。</summary>
      <returns>インストールによってバージョンをサポートできる場合は true。それ以外の場合は false。</returns>
      <param name="versionStr">確認するバージョン。形式は major.minor.build.revision です。文字列形式の詳細については、「解説」を参照してください。</param>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.NavigationState">
      <summary>現在のナビゲーション状態を表す URI フラグメントを取得または設定します。</summary>
      <returns>現在のナビゲーション状態を表す URI フラグメント。</returns>
      <exception cref="T:System.ArgumentNullException">このプロパティを設定したとき、指定された値が null です。</exception>
    </member>
    <member name="E:System.Windows.Interop.SilverlightHost.NavigationStateChanged">
      <summary>
        <see cref="P:System.Windows.Interop.SilverlightHost.NavigationState" /> プロパティの値が変化すると発生します。</summary>
    </member>
    <member name="P:System.Windows.Interop.SilverlightHost.Settings">
      <summary>この <see cref="T:System.Windows.Interop.SilverlightHost" /> の "Settings" サブオブジェクトを取得します。</summary>
      <returns>"Settings" サブオブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentPropertyAttribute">
      <summary>XAML プロセッサによってクラスを解析するとき、クラスのどのプロパティをコンテンツ プロパティに変換できるかを指定します。</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor">
      <summary>
        <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)">
      <summary>指定したコンテンツ プロパティ名を使用して、<see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">コンテンツ プロパティ名。</param>
    </member>
    <member name="P:System.Windows.Markup.ContentPropertyAttribute.Name">
      <summary>宣言されたコンテンツ プロパティであるプロパティの名前を取得します。</summary>
      <returns>コンテンツ プロパティであるプロパティの名前を含む文字列。</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlParseException">
      <summary>XAML 解析の例外が発生するときにスローされる例外。</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LineNumber">
      <summary>例外が発生した行番号を取得します。</summary>
      <returns>XAML 解析の例外が発生する行の番号。</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlParseException.LinePosition">
      <summary>例外が発生した行内の位置を取得します。</summary>
      <returns>XAML 解析の例外が発生した場合の行の位置。</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlReader">
      <summary>XAML を解析し、対応する Windows Phone オブジェクト ツリーを作成するための XAML プロセッサ エンジンを提供します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlReader.Load(System.String)">
      <summary>整形式の XAML フラグメントを解析して、対応する Windows Phone オブジェクト ツリーを作成し、オブジェクト ツリーのルートを返します。</summary>
      <returns>Windows Phone オブジェクト ツリーのルート オブジェクト。</returns>
      <param name="xaml">有効な XAML フラグメントを含む文字列。</param>
    </member>
    <member name="T:System.Windows.Markup.XmlLanguage">
      <summary>XML と XAML マークアップで使用するためのカルチャ情報を表します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.Equals(System.Object)">
      <summary>現在のオブジェクトに対しオブジェクトの等値があるかどうかをチェックします。</summary>
      <returns>オブジェクトが同じオブジェクトの場合は true。それ以外の場合は false。</returns>
      <param name="obj">呼び出し元のオブジェクトと比較する <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.GetHashCode">
      <summary>
        <see cref="T:System.Windows.Markup.XmlLanguage" /> クラスのハッシュ関数として機能します。</summary>
      <returns>整数ハッシュ値。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.GetLanguage(System.String)">
      <summary>RFC 3066 で言語を表す文字列に基づく <see cref="T:System.Windows.Markup.XmlLanguage" /> インスタンスを返します。</summary>
      <returns>
        <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> 値として指定された文字列を持つ新しい <see cref="T:System.Windows.Markup.XmlLanguage" />。</returns>
      <param name="ietfLanguageTag">RFC 3066 言語文字列または空の文字列 ("")。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ietfLanguageTag" /> は有効な IETF 言語として処理できません。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag">
      <summary>言語タグの文字列表現を取得します。</summary>
      <returns>言語タグを表す文字列。</returns>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.op_Equality(System.Windows.Markup.XmlLanguage,System.Windows.Markup.XmlLanguage)">
      <summary>指定した 2 つの <see cref="T:System.Windows.Markup.XmlLanguage" /> オブジェクトの値が同一かどうかを判断します。</summary>
      <returns>
        <paramref name="xmlLanguage1" /> の値が <paramref name="xmlLanguage2" /> の値と同じである場合は true。異なる場合は false。</returns>
      <param name="xmlLanguage1">比較対象の第 1 <see cref="T:System.Windows.Markup.XmlLanguage" />。</param>
      <param name="xmlLanguage2">比較対象の第 2 <see cref="T:System.Windows.Markup.XmlLanguage" />。</param>
    </member>
    <member name="M:System.Windows.Markup.XmlLanguage.op_Inequality(System.Windows.Markup.XmlLanguage,System.Windows.Markup.XmlLanguage)">
      <summary>指定した 2 つの <see cref="T:System.Windows.Markup.XmlLanguage" /> オブジェクトの値が異なるかどうかを判断します。</summary>
      <returns>
        <paramref name="xmlLanguage1" /> の値が <paramref name="xmlLanguage2" /> の値と異なる場合は true。同じである場合は false。</returns>
      <param name="xmlLanguage1">比較対象の第 1 <see cref="T:System.Windows.Markup.XmlLanguage" />。</param>
      <param name="xmlLanguage2">比較対象の第 2 <see cref="T:System.Windows.Markup.XmlLanguage" />。</param>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDefinitionAttribute">
      <summary>アセンブリ内の XML 名前空間識別子と CLR 名前空間間のアセンブリで、マッピングを指定します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xmlNamespace">
        <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace" /> の値を指定します。</param>
      <param name="clrNamespace">
        <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace" /> の値を指定します。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> または <paramref name="clrNamespace" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.AssemblyName">
      <summary>
        <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace" /> を含むアセンブリの名前を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace" /> を含むアセンブリの名前。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace">
      <summary>属性によって <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace" /> にマップされている CLR 名前空間を取得します。</summary>
      <returns>属性によって <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace" /> にマップされる CLR 名前空間。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace">
      <summary>属性によって <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace" /> にマップされる XML 名前空間 (xmlns) を取得します。</summary>
      <returns>属性によって <see cref="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace" /> にマップされる XML 名前空間 (xmlns)。</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsPrefixAttribute">
      <summary>XAML ファイルに要素と属性を書き込むとき、XML 名前空間と関連する推奨接頭辞を指定します。</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="xmlNamespace">関連の XML 名前空間の識別子 (実際の <see cref="T:System.Uri" /> 型ではなく、文字列を使用します)。</param>
      <param name="prefix">XML 名前空間をマッピングするときに使用する推奨接頭辞。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> または <paramref name="prefix" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
      <summary>推奨の接頭辞を XML 名前空間に関連付けます。</summary>
      <returns>
        <see cref="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace" /> 名前空間をマッピングするときに使用する推奨の接頭辞を提供する文字列。</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
      <summary>XML 名前空間の識別子を取得します。</summary>
      <returns>関連する XML 名前空間の識別子を提供する文字列。一般に URI 文字列の場合が多いです。</returns>
    </member>
    <member name="T:System.Windows.Media.AcquireLicenseCompletedEventArgs">
      <summary>
        <see cref="E:System.Windows.Media.LicenseAcquirer.AcquireLicenseCompleted" /> イベントにデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Media.AcquireLicenseCompletedEventArgs.ResponseCustomData">
      <summary>ライセンス応答でサーバーから返されたあらゆるカスタム データを取得します。</summary>
      <returns>ライセンス応答でサーバーから返されたあらゆるカスタム データ。返されるカスタム データがない場合は、空の文字列を取得します。</returns>
      <exception cref="T:System.InvalidOperationException">ライセンスの取得が取り消されたたときにこのプロパティにアクセスする場合、またはエラーが発生した場合。</exception>
    </member>
    <member name="T:System.Windows.Media.AlignmentX">
      <summary>コンテナー内でのコンテンツの横方向の配置方法を表します。</summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentX.Left">
      <summary>コンテンツを、コンテナーの左端に揃えて配置します。</summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentX.Center">
      <summary>コンテンツを、コンテナーの中央に揃えて配置します。</summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentX.Right">
      <summary>コンテンツを、コンテナーの右端に揃えて配置します。 </summary>
    </member>
    <member name="T:System.Windows.Media.AlignmentY">
      <summary>コンテナー内でのコンテンツの縦方向の配置方法を記述します。</summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentY.Top">
      <summary>コンテンツを、コンテナーの上端に揃えて配置します。</summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentY.Center">
      <summary>コンテンツを、コンテナーの中央に揃えて配置します。</summary>
    </member>
    <member name="F:System.Windows.Media.AlignmentY.Bottom">
      <summary>コンテンツを、コンテナーの下端に揃えて配置します。 </summary>
    </member>
    <member name="T:System.Windows.Media.ArcSegment">
      <summary>2 つの点の間の楕円の円弧を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.ArcSegment.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.ArcSegment" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.IsLargeArc">
      <summary>円弧が 180 度を超える必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>円弧が 180 度を超える必要がある場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.IsLargeArcProperty">
      <summary>
        <see cref="P:System.Windows.Media.ArcSegment.IsLargeArc" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.ArcSegment.IsLargeArc" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.Point">
      <summary>楕円の円弧の終点を取得または設定します。</summary>
      <returns>円弧が描画される点。既定は値が 0,0 である <see cref="T:System.Windows.Point" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.PointProperty">
      <summary>
        <see cref="P:System.Windows.Media.ArcSegment.Point" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.ArcSegment.Point" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.RotationAngle">
      <summary>x 軸に沿って楕円が回転する量 (角度) を取得または設定します。</summary>
      <returns>x 軸に沿って楕円が回転する量 (角度)。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.RotationAngleProperty">
      <summary>
        <see cref="P:System.Windows.Media.ArcSegment.RotationAngle" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.ArcSegment.RotationAngle" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.Size">
      <summary>円弧の x 半径と y 半径を <see cref="T:System.Windows.Size" /> 構造体として取得または設定します。</summary>
      <returns>楕円の円弧の x 半径と y 半径を記述する <see cref="T:System.Windows.Size" /> 構造体。<see cref="T:System.Windows.Size" /> 構造体の <see cref="P:System.Windows.Size.Width" /> プロパティは、円弧の x 半径を指定します。その <see cref="P:System.Windows.Size.Height" /> プロパティは円弧の y 半径を指定します。既定は値が 0,0 である <see cref="T:System.Windows.Size" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.SizeProperty">
      <summary>
        <see cref="P:System.Windows.Media.ArcSegment.Size" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.ArcSegment.Size" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.ArcSegment.SweepDirection">
      <summary>円弧が <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> または <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> のどちらの方向で描画されるかを指定する値を取得または設定します。</summary>
      <returns>円弧が作成される方向を指定する列挙値の 1 つ。既定値は、<see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.ArcSegment.SweepDirectionProperty">
      <summary>
        <see cref="P:System.Windows.Media.ArcSegment.SweepDirection" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.ArcSegment.SweepDirection" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.AudioCaptureDevice">
      <summary>マイクなどのオーディオ キャプチャ デバイス向けに使用する希望のフォーマットまたはサポート済みフォーマットを示します。</summary>
    </member>
    <member name="P:System.Windows.Media.AudioCaptureDevice.AudioFrameSize">
      <summary>目的とするオーディオ フレーム サイズを取得または設定します。</summary>
      <returns>オーディオ フレーム サイズ (ミリ秒)。既定値は 1000 です。備考を参照。</returns>
    </member>
    <member name="F:System.Windows.Media.AudioCaptureDevice.AudioFrameSizeProperty">
      <summary>
        <see cref="P:System.Windows.Media.AudioCaptureDevice.AudioFrameSize" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.AudioCaptureDevice.AudioFrameSize" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.AudioCaptureDevice.DesiredFormat">
      <summary>オーディオ キャプチャ デバイスで使用する希望のオーディオ フォーマットを取得または設定します。</summary>
      <returns>オーディオ キャプチャ デバイスで使用する <see cref="T:System.Windows.Media.AudioFormat" /> オブジェクトとしての希望のオーディオ フォーマット。既定値は null です。</returns>
    </member>
    <member name="P:System.Windows.Media.AudioCaptureDevice.SupportedFormats">
      <summary>このオーディオ キャプチャ デバイスでサポートされているオーディオ フォーマットの汎用コレクションを取得します。</summary>
      <returns>このオーディオ キャプチャ デバイスでサポートされているオーディオ フォーマットを表す <see cref="T:System.Windows.Media.AudioFormat" /> オブジェクトの汎用コレクション。</returns>
    </member>
    <member name="T:System.Windows.Media.AudioCaptureDeviceCollection">
      <summary>
        <see cref="T:System.Windows.Media.AudioCaptureDevice" /> オブジェクトのコレクションを指定します。</summary>
    </member>
    <member name="T:System.Windows.Media.AudioFormat">
      <summary>オーディオ キャプチャ デバイスで使用されるオーディオ フォーマットについて具体的な技術情報を提供します。</summary>
    </member>
    <member name="P:System.Windows.Media.AudioFormat.BitsPerSample">
      <summary>オーディオ フォーマットの単一サンプルに関するオーディオ情報を保管するのに必要なビット数を取得します。</summary>
      <returns>単一サンプルのオーディオ フォーマットに関するオーディオ情報を保管するのに必要なビット数。</returns>
    </member>
    <member name="P:System.Windows.Media.AudioFormat.Channels">
      <summary>オーディオ フォーマットによって提供されるチャネル数を取得します。</summary>
      <returns>オーディオ フォーマットによって提供されるチャネル数。</returns>
    </member>
    <member name="P:System.Windows.Media.AudioFormat.SamplesPerSecond">
      <summary>オーディオ フォーマットによって提供される 1 秒あたりのサンプル数を取得します。</summary>
      <returns>オーディオ フォーマットによって提供される 1 秒あたりのサンプル数。</returns>
    </member>
    <member name="P:System.Windows.Media.AudioFormat.WaveFormat">
      <summary>オーディオ形式のエンコーディング形式を <see cref="T:System.Windows.Media.WaveFormatType" /> 値として取得します。</summary>
      <returns>オーディオ フォーマットのエンコード形式。</returns>
    </member>
    <member name="T:System.Windows.Media.AudioSink">
      <summary>オーディオ デバイスのキャプチャ グラフを公開します。<see cref="P:System.Windows.Media.AudioSink.CaptureSource" /> からオーディオ情報を受け取ったり、キャプチャ グラフを取得したりするには、このクラスを継承します。</summary>
    </member>
    <member name="M:System.Windows.Media.AudioSink.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.AudioSink" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.AudioSink.CaptureSource">
      <summary>この <see cref="T:System.Windows.Media.AudioSink" /> に関連付けられているキャプチャ ソースを取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.AudioSink" /> に関連付けられているキャプチャ ソース。</returns>
    </member>
    <member name="M:System.Windows.Media.AudioSink.Finalize">
      <summary>
        <see cref="T:System.Windows.Media.AudioSink" /> クラスによって使用されているリソースを解放します。</summary>
    </member>
    <member name="M:System.Windows.Media.AudioSink.OnCaptureStarted">
      <summary>派生クラスでオーバーライドされると、オーディオ デバイスがオーディオ データのキャプチャを開始したときに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Media.AudioSink.OnCaptureStopped">
      <summary>派生クラスでオーバーライドされると、オーディオ デバイスがオーディオ データのキャプチャを停止したときに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Media.AudioSink.OnFormatChange(System.Windows.Media.AudioFormat)">
      <summary>派生クラスでオーバーライドされると、オーディオ形式の変更がオーディオ デバイスからレポートされたときに呼び出されます。</summary>
      <param name="audioFormat">新しいオーディオ フォーマット。</param>
    </member>
    <member name="M:System.Windows.Media.AudioSink.OnSamples(System.Int64,System.Int64,System.Byte[])">
      <summary>派生クラスで上書きされた場合、オーディオ デバイスが完全なオーディオ サンプルを取得するときに呼び出されます。</summary>
      <param name="sampleTimeInHundredNanoseconds">サンプルがキャプチャされたときの時間 (100 ナノ秒単位)。</param>
      <param name="sampleDurationInHundredNanoseconds">サンプルの継続時間 (100 ナノ秒単位)。</param>
      <param name="sampleData">関連するオーディオ フォーマット情報ごとに解釈されるオーディオ データを含むバイト ストリーム。</param>
    </member>
    <member name="T:System.Windows.Media.BezierSegment">
      <summary>2 つの点の間に描画された 3 次ベジエ曲線を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.BezierSegment.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.BezierSegment" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.BezierSegment.Point1">
      <summary>曲線の 1 つ目の制御点を取得または設定します。</summary>
      <returns>曲線の 1 つ目の制御点。既定は値が 0,0 である <see cref="T:System.Windows.Point" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.BezierSegment.Point1Property">
      <summary>
        <see cref="P:System.Windows.Media.BezierSegment.Point1" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.BezierSegment.Point1" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.BezierSegment.Point2">
      <summary>曲線の 2 つ目の制御点を取得または設定します。</summary>
      <returns>曲線の 2 つ目の制御点。</returns>
    </member>
    <member name="F:System.Windows.Media.BezierSegment.Point2Property">
      <summary>
        <see cref="P:System.Windows.Media.BezierSegment.Point2" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.BezierSegment.Point2" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.BezierSegment.Point3">
      <summary>曲線の終点を取得または設定します。</summary>
      <returns>曲線の終点。</returns>
    </member>
    <member name="F:System.Windows.Media.BezierSegment.Point3Property">
      <summary>
        <see cref="P:System.Windows.Media.BezierSegment.Point3" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.BezierSegment.Point3" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.BitmapCache">
      <summary>視覚的要素または要素ツリーをビットマップ サーフェイスとしてキャッシュする動作を表します。これにより、一部のシナリオではパフォーマンスが大幅に向上します。</summary>
    </member>
    <member name="M:System.Windows.Media.BitmapCache.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.BitmapCache" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.BitmapCache.RenderAtScale">
      <summary>キャッシュされたビットマップ サーフェイス上にオブジェクトをレンダリングする際の倍率を取得または設定します。このプロパティを使って、キャッシュ済みのオブジェクトの倍率を調整し、パフォーマンスを向上します。</summary>
      <returns>オブジェクトがキャッシュ済みビットマップとして表示される倍率。マイナスの値を指定すると、エラーが表示されます。既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Media.BitmapCache.RenderAtScaleProperty">
      <summary>
        <see cref="P:System.Windows.Media.BitmapCache.RenderAtScale" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Media.Brush">
      <summary>グラフィカル オブジェクトの塗りつぶしに使用するオブジェクトを定義します。<see cref="T:System.Windows.Media.Brush" /> の派生クラスは、領域を塗りつぶす方法を記述します。</summary>
    </member>
    <member name="M:System.Windows.Media.Brush.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Brush" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Brush.Opacity">
      <summary>
        <see cref="T:System.Windows.Media.Brush" /> の不透明度を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Brush.Opacity" /> プロパティの値は 0 ～ 1.0 で表されます。既定値は 1.0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.Brush.OpacityProperty">
      <summary>
        <see cref="P:System.Windows.Media.Brush.Opacity" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Brush.Opacity" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Brush.RelativeTransform">
      <summary>ブラシに適用される相対座標を使用した変換を取得または設定します。</summary>
      <returns>ブラシに適用される相対座標を使用した変換。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Brush.RelativeTransformProperty">
      <summary>
        <see cref="P:System.Windows.Media.Brush.RelativeTransform" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Brush.RelativeTransform" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Brush.Transform">
      <summary>ブラシに適用される変換を取得または設定します。</summary>
      <returns>ブラシに適用する変換。</returns>
    </member>
    <member name="F:System.Windows.Media.Brush.TransformProperty">
      <summary>
        <see cref="P:System.Windows.Media.Brush.Transform" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Brush.Transform" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.BrushMappingMode">
      <summary>
        <see cref="T:System.Windows.Media.Brush" /> で使用される座標系を指定します。</summary>
    </member>
    <member name="F:System.Windows.Media.BrushMappingMode.Absolute">
      <summary>座標系は、境界ボックスに対して相対的ではありません。値は、ローカル空間で直接解釈されます。</summary>
    </member>
    <member name="F:System.Windows.Media.BrushMappingMode.RelativeToBoundingBox">
      <summary>座標系は境界ボックスと相対していません。0 は 0% の境界ボックス、1 は 100% の境界ボックスを示します。たとえば、(0.5, 0.5) は境界ボックスの中央にある点を表し、(1, 1) は境界ボックスの右下にある点を表します。 </summary>
    </member>
    <member name="T:System.Windows.Media.CacheMode">
      <summary>キャッシュされたコンテンツを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.CacheMode.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.CacheMode" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.CaptureDevice">
      <summary>
        <see cref="T:System.Windows.Media.AudioCaptureDevice" /> および <see cref="T:System.Windows.Media.VideoCaptureDevice" /> の共通のプロパティを提供します。</summary>
    </member>
    <member name="P:System.Windows.Media.CaptureDevice.FriendlyName">
      <summary>キャプチャ デバイスの UI 表示名を取得します。</summary>
      <returns>キャプチャ デバイスの UI 表示名。</returns>
    </member>
    <member name="F:System.Windows.Media.CaptureDevice.FriendlyNameProperty">
      <summary>
        <see cref="P:System.Windows.Media.CaptureDevice.FriendlyName" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.CaptureDevice.FriendlyName" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.CaptureDevice.IsDefaultDevice">
      <summary>キャプチャ デバイスがそのタイプの既定のデバイス (オーディオまたはビデオ) かどうかを宣言する値を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Media.CaptureDevice" /> がそのタイプの既定のデバイスを表す場合は true、それ以外の場合は false。</returns>
    </member>
    <member name="F:System.Windows.Media.CaptureDevice.IsDefaultDeviceProperty">
      <summary>
        <see cref="P:System.Windows.Media.CaptureDevice.IsDefaultDevice" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.CaptureDevice.IsDefaultDevice" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.CaptureDeviceConfiguration">
      <summary>利用可能なキャプチャ デバイス (オーディオまたはビデオ) に関する情報を取得し、利用可能なデバイスからキャプチャにアクセスするクライアント ユーザー権限を要求するヘルパー クラスを表します。</summary>
    </member>
    <member name="P:System.Windows.Media.CaptureDeviceConfiguration.AllowedDeviceAccess">
      <summary>デバイス アクセス UI プロンプトに対する格納された応答に基づき、ユーザーが以前にデバイスへのアクセスを許可されたことがあるかどうかを報告する値を取得します。</summary>
      <returns>アクセス要求ダイアログ ボックス プロンプトに対する応答に基づき、ユーザーが以前にデバイスへのアクセスを許可している場合、または一部の状況で要求が自動的に許可された場合は true。ユーザーがアクセスを許可しない場合、または別の要因で要求が拒否された場合は false。解説を参照してください。</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureDeviceConfiguration.GetAvailableAudioCaptureDevices">
      <summary>クライアント システム上の利用可能なオーディオ キャプチャ デバイスを表す <see cref="T:System.Windows.Media.AudioCaptureDevice" /> オブジェクトのコレクションを返します。</summary>
      <returns>クライアント システムで利用可能なオーディオ キャプチャ デバイスを表す <see cref="T:System.Windows.Media.AudioCaptureDevice" /> オブジェクトの一般的な読み取り専用コレクション。</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureDeviceConfiguration.GetAvailableVideoCaptureDevices">
      <summary>クライアント システム上の利用可能なビデオ キャプチャ デバイスを表す <see cref="T:System.Windows.Media.VideoCaptureDevice" /> オブジェクトのコレクションを返します。</summary>
      <returns>クライアント システムで利用可能なビデオ キャプチャ デバイスを表す <see cref="T:System.Windows.Media.VideoCaptureDevice" /> オブジェクトの一般的な読み取り専用コレクション。</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultAudioCaptureDevice">
      <summary>クライアント システム上の既定のオーディオ キャプチャ デバイスを表す <see cref="T:System.Windows.Media.AudioCaptureDevice" /> オブジェクトを返します。</summary>
      <returns>クライアント システム上の既定のオーディオ キャプチャ デバイスを表す <see cref="T:System.Windows.Media.AudioCaptureDevice" /> オブジェクト。Mac OS X では、既定のオーディオ デバイスおよびビデオ デバイスが事前にユーザーによって設定されていない場合に、アプリケーションが <see cref="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultAudioCaptureDevice" /> または <see cref="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultVideoCaptureDevice" /> を呼び出すと、Windows Phone は最初に検出したデバイスを返します。物理デバイスがこの <see cref="T:System.InvalidOperationException" /> に接続されていない場合は、<see cref="T:System.Windows.Media.CaptureDevice" /> が呼び出されるときに <see cref="M:System.Windows.Media.CaptureSource.Start" /> がスローされます。この例外はアプリケーションで検出され、その後、ユーザーには [構成設定] ダイアログの [Web カメラ/マイク] セクションで既定のデバイスを手動で設定するように通知されることがあります。</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultVideoCaptureDevice">
      <summary>クライアント システム上の既定のビデオ キャプチャ デバイスを表す <see cref="T:System.Windows.Media.VideoCaptureDevice" /> オブジェクトを返します。</summary>
      <returns>クライアント システム上の既定のビデオ キャプチャ デバイスを表す <see cref="T:System.Windows.Media.VideoCaptureDevice" /> オブジェクト。Mac OS X では、既定のオーディオ デバイスおよびビデオ デバイスが事前にユーザーによって設定されていない場合に、アプリケーションが <see cref="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultAudioCaptureDevice" /> または <see cref="M:System.Windows.Media.CaptureDeviceConfiguration.GetDefaultVideoCaptureDevice" /> を呼び出すと、Windows Phone は最初に検出したデバイスを返します。物理デバイスがこの <see cref="T:System.InvalidOperationException" /> に接続されていない場合は、<see cref="T:System.Windows.Media.CaptureDevice" /> が呼び出されるときに <see cref="M:System.Windows.Media.CaptureSource.Start" /> がスローされます。この例外はアプリケーションで検出され、その後、ユーザーには [構成設定] ダイアログの [Web カメラ/マイク] セクションで既定のデバイスを手動で設定するように通知されることがあります。</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureDeviceConfiguration.RequestDeviceAccess">
      <summary>クライアント システムで利用可能なすべてのキャプチャ デバイス (オーディオまたはビデオ) へのアクセスを要求します。</summary>
      <returns>アクセス要求ダイアログ プロンプトに対する応答に基づき、ユーザーがデバイスへのアクセスを許可する場合、または一部の状況で要求が自動的に許可された場合は true。ユーザーがアクセスを許可しない場合、または別の要因で要求が拒否された場合は false。解説を参照してください。</returns>
    </member>
    <member name="T:System.Windows.Media.CaptureImageCompletedEventArgs">
      <summary>
        <see cref="T:System.Windows.Media.CaptureSource" /> クラスの <see cref="E:System.Windows.Media.CaptureSource.CaptureImageCompleted" /> イベントのイベント データを提供します。</summary>
    </member>
    <member name="M:System.Windows.Media.CaptureImageCompletedEventArgs.#ctor(System.Windows.Media.Imaging.WriteableBitmap)">
      <summary>イベント データでレポートするイメージ ソースを使用して、<see cref="T:System.Windows.Media.CaptureImageCompletedEventArgs" /> の新しいインスタンスを初期化します。</summary>
      <param name="image">レポートする画像ソース。</param>
    </member>
    <member name="P:System.Windows.Media.CaptureImageCompletedEventArgs.Result">
      <summary>イベント データでレポートする <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /> のイメージ ソースを取得します。</summary>
      <returns>
        <see cref="M:System.Windows.Media.CaptureSource.CaptureImageAsync" /> 呼び出しの結果として、このイベント データを通して非同期で返された画像ソース。</returns>
    </member>
    <member name="T:System.Windows.Media.CaptureSource">
      <summary>関連するキャプチャ デバイスからの特定のオーディオまたはビデオ キャプチャで機能するメソッドを提供します。</summary>
    </member>
    <member name="M:System.Windows.Media.CaptureSource.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.CaptureSource" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.CaptureSource.AudioCaptureDevice">
      <summary>このキャプチャに関連するオーディオ キャプチャ デバイスを取得または設定します。</summary>
      <returns>このキャプチャに関連するオーディオ キャプチャ デバイス。</returns>
    </member>
    <member name="F:System.Windows.Media.CaptureSource.AudioCaptureDeviceProperty">
      <summary>
        <see cref="P:System.Windows.Media.CaptureSource.AudioCaptureDevice" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.CaptureSource.AudioCaptureDevice" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="E:System.Windows.Media.CaptureSource.CaptureFailed">
      <summary>要求したキャプチャ操作によりキャプチャ サンプルが生成されないときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Media.CaptureSource.CaptureImageAsync">
      <summary>非同期イメージ キャプチャ要求を開始します。この <see cref="T:System.Windows.Media.CaptureSource" /> の <see cref="E:System.Windows.Media.CaptureSource.CaptureImageCompleted" /> イベントを処理することによって返されたイメージを取得します。</summary>
    </member>
    <member name="E:System.Windows.Media.CaptureSource.CaptureImageCompleted">
      <summary>非同期画像キャプチャ要求がキャプチャ画像を返したときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Media.CaptureSource.Start">
      <summary>この <see cref="T:System.Windows.Media.CaptureSource" /> に関連したすべてのキャプチャ デバイスからのキャプチャを開始します。</summary>
    </member>
    <member name="P:System.Windows.Media.CaptureSource.State">
      <summary>このキャプチャの <see cref="T:System.Windows.Media.CaptureState" /> を取得します。キャプチャが進行中なのか、失敗したのかの状態が示されます。</summary>
      <returns>このキャプチャの <see cref="T:System.Windows.Media.CaptureState" />。</returns>
    </member>
    <member name="M:System.Windows.Media.CaptureSource.Stop">
      <summary>この <see cref="T:System.Windows.Media.CaptureSource" /> に関連したすべてのキャプチャ デバイスからのキャプチャを停止します。</summary>
    </member>
    <member name="P:System.Windows.Media.CaptureSource.VideoCaptureDevice">
      <summary>このキャプチャに関連するビデオ キャプチャ デバイスを取得または設定します。</summary>
      <returns>このキャプチャに関連するビデオ キャプチャ デバイス。</returns>
    </member>
    <member name="F:System.Windows.Media.CaptureSource.VideoCaptureDeviceProperty">
      <summary>
        <see cref="P:System.Windows.Media.CaptureSource.VideoCaptureDevice" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.CaptureSource.VideoCaptureDevice" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.CaptureState">
      <summary>デバイス キャプチャおよびキャプチャ ソースの現在の操作状態を示します。</summary>
    </member>
    <member name="F:System.Windows.Media.CaptureState.Stopped">
      <summary>
        <see cref="M:System.Windows.Media.CaptureSource.Stop" /> は既に呼び出され、キャプチャは完了しました。</summary>
    </member>
    <member name="F:System.Windows.Media.CaptureState.Started">
      <summary>
        <see cref="M:System.Windows.Media.CaptureSource.Start" /> は既に呼び出され、キャプチャは依然としてアクティブな状態です。</summary>
    </member>
    <member name="F:System.Windows.Media.CaptureState.Failed">
      <summary>キャプチャが失敗したか、またはまだ操作が行われていません。</summary>
    </member>
    <member name="T:System.Windows.Media.Color">
      <summary>アルファ、赤、緑、青の各チャネルによって色を表します。</summary>
    </member>
    <member name="P:System.Windows.Media.Color.A">
      <summary>色の sRGB アルファ チャネルの値を取得または設定します。</summary>
      <returns>色の sRGB アルファ チャネル値 (0 ～ 255 までの値)。</returns>
    </member>
    <member name="P:System.Windows.Media.Color.B">
      <summary>色の sRGB 青チャネルの値を取得または設定します。</summary>
      <returns>sRGB 青チャネル値 (0 ～ 255 までの値)。</returns>
    </member>
    <member name="M:System.Windows.Media.Color.Equals(System.Object)">
      <summary>指定されたオブジェクトが <see cref="T:System.Windows.Media.Color" /> 構造体かどうか、また、現在の色と等価かどうかをテストします。</summary>
      <returns>指定したオブジェクトが <see cref="T:System.Windows.Media.Color" /> 構造体であり、現在の <see cref="T:System.Windows.Media.Color" /> 構造体と等しい場合は true。それ以外の場合は false。</returns>
      <param name="o">現在の <see cref="T:System.Windows.Media.Color" /> 構造体と比較するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Media.Color.Equals(System.Windows.Media.Color)">
      <summary>指定した <see cref="T:System.Windows.Media.Color" /> 構造体が、現在の色と等しいかどうかをテストします。</summary>
      <returns>指定した <see cref="T:System.Windows.Media.Color" /> 構造体が現在の <see cref="T:System.Windows.Media.Color" /> 構造体と等しい場合は true。それ以外の場合は false。</returns>
      <param name="color">現在の <see cref="T:System.Windows.Media.Color" /> 構造体と比較する <see cref="T:System.Windows.Media.Color" /> 構造体。</param>
    </member>
    <member name="M:System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>指定した sRGB アルファ チャネル値およびカラー チャネル値を使用して新しい <see cref="T:System.Windows.Media.Color" /> 構造体を作成します。</summary>
      <returns>指定した値を格納する <see cref="T:System.Windows.Media.Color" /> 構造体。</returns>
      <param name="a">新しい色のアルファ チャネル <see cref="P:System.Windows.Media.Color.A" />。有効な値の範囲は 0 ～ 255 です。</param>
      <param name="r">新しい色の赤チャネル <see cref="P:System.Windows.Media.Color.R" />。有効な値の範囲は 0 ～ 255 です。</param>
      <param name="g">新しい色の緑チャネル <see cref="P:System.Windows.Media.Color.G" />。有効な値の範囲は 0 ～ 255 です。</param>
      <param name="b">新しい色の青チャネル <see cref="P:System.Windows.Media.Color.B" />。有効な値の範囲は 0 ～ 255 です。</param>
    </member>
    <member name="P:System.Windows.Media.Color.G">
      <summary>色の sRGB 緑チャネルの値を取得または設定します。</summary>
      <returns>色の sRGB 緑チャネル値 (0 ～ 255 までの値)。</returns>
    </member>
    <member name="M:System.Windows.Media.Color.GetHashCode">
      <summary>現在の <see cref="T:System.Windows.Media.Color" /> 構造体のハッシュ コードを取得します。</summary>
      <returns>現在の <see cref="T:System.Windows.Media.Color" /> 構造体のハッシュ コード。</returns>
    </member>
    <member name="M:System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary>2 つの <see cref="T:System.Windows.Media.Color" /> 構造体が同じかどうかをテストします。</summary>
      <returns>
        <paramref name="color1" /> と <paramref name="color2" /> が完全に同一である場合は true。それ以外の場合は false。</returns>
      <param name="color1">最初に比較する <see cref="T:System.Windows.Media.Color" /> 構造体。</param>
      <param name="color2">2 番目に比較する <see cref="T:System.Windows.Media.Color" /> 構造体。</param>
    </member>
    <member name="M:System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary>2 つの <see cref="T:System.Windows.Media.Color" /> 構造体が異なるかどうかをテストします。</summary>
      <returns>
        <paramref name="color1" /> と <paramref name="color2" /> が等しくない場合は true。それ以外の場合は false。</returns>
      <param name="color1">最初に比較する <see cref="T:System.Windows.Media.Color" /> 構造体。</param>
      <param name="color2">2 番目に比較する <see cref="T:System.Windows.Media.Color" /> 構造体。</param>
    </member>
    <member name="P:System.Windows.Media.Color.R">
      <summary>色の sRGB 赤チャネルの値を取得または設定します。</summary>
      <returns>sRGB 赤チャネル値 (0 ～ 255 までの値)。</returns>
    </member>
    <member name="M:System.Windows.Media.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>このメンバーの説明については、<see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> のトピックを参照してください。</summary>
      <returns>指定した書式で現在のインスタンスの値を格納する文字列。</returns>
      <param name="format">使用する書式を指定する文字列。またはIFormattable 実装の型に対して定義されている既定の書式を使用する場合は、null。</param>
      <param name="provider">値の書式設定に使用する IFormatProvider。またはオペレーティング システムの現在のロケール設定から数値の書式情報を取得する場合は null。</param>
    </member>
    <member name="M:System.Windows.Media.Color.ToString">
      <summary>ARGB チャネルを使って色の文字列表現を 16 進数で作成します。</summary>
      <returns>色の文字列形式。</returns>
    </member>
    <member name="M:System.Windows.Media.Color.ToString(System.IFormatProvider)">
      <summary>ARGB チャネルおよび指定した書式プロバイダーを使用して、色の文字列形式を作成します。</summary>
      <returns>色の文字列形式。</returns>
      <param name="provider">カルチャ固有の書式設定情報。</param>
    </member>
    <member name="T:System.Windows.Media.ColorInterpolationMode">
      <summary>グラデーションの色の補間方法を決定します。</summary>
    </member>
    <member name="F:System.Windows.Media.ColorInterpolationMode.ScRgbLinearInterpolation">
      <summary>色は、scRGB 色空間で補間されます。</summary>
    </member>
    <member name="F:System.Windows.Media.ColorInterpolationMode.SRgbLinearInterpolation">
      <summary>色は、sRGB 色空間で補間されます。 </summary>
    </member>
    <member name="T:System.Windows.Media.Colors">
      <summary>定義済みの色のセットを実装します。</summary>
    </member>
    <member name="P:System.Windows.Media.Colors.Black">
      <summary>ARGB 値が #FF000000 のシステム定義の色を取得します。</summary>
      <returns>ARGB 値が #FF000000 である <see cref="T:System.Windows.Media.Color" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Blue">
      <summary>ARGB 値が #FF0000FF のシステム定義の色を取得します。</summary>
      <returns>ARGB 値が #FF0000FF である <see cref="T:System.Windows.Media.Color" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Brown">
      <summary>ARGB 値が #FFA52A2A のシステム定義の色を取得します。</summary>
      <returns>ARGB 値が #FFA52A2A である <see cref="T:System.Windows.Media.Color" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Cyan">
      <summary>ARGB 値が #FF00FFFF のシステム定義の色を取得します。</summary>
      <returns>ARGB 値が #FF00FFFF である <see cref="T:System.Windows.Media.Color" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.DarkGray">
      <summary>ARGB 値が #FFA9A9A9 のシステム定義の色を取得します。</summary>
      <returns>ARGB 値が #FFA9A9A9 である <see cref="T:System.Windows.Media.Color" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Gray">
      <summary>ARGB 値が #FF808080 のシステム定義の色を取得します。</summary>
      <returns>ARGB 値が #FF808080 である <see cref="T:System.Windows.Media.Color" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Green">
      <summary>ARGB 値が #FF008000 のシステム定義の色を取得します。</summary>
      <returns>ARGB 値が #FF008000 である <see cref="T:System.Windows.Media.Color" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.LightGray">
      <summary>ARGB 値が #FFD3D3D3 のシステム定義の色を取得します。</summary>
      <returns>ARGB 値が #FFD3D3D3 である <see cref="T:System.Windows.Media.Color" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Magenta">
      <summary>ARGB 値が #FFFF00FF のシステム定義の色を取得します。</summary>
      <returns>ARGB 値が #FFFF00FF である <see cref="T:System.Windows.Media.Color" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Orange">
      <summary>ARGB 値が #FFFFA500 のシステム定義の色を取得します。</summary>
      <returns>ARGB 値が #FFFFA500 である <see cref="T:System.Windows.Media.Color" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Purple">
      <summary>ARGB 値が #FF800080 のシステム定義の色を取得します。</summary>
      <returns>ARGB 値が #FF800080 である <see cref="T:System.Windows.Media.Color" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Red">
      <summary>ARGB 値が #FFFF0000 のシステム定義の色を取得します。</summary>
      <returns>ARGB 値が #FFFF0000 である <see cref="T:System.Windows.Media.Color" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Transparent">
      <summary>ARGB 値が #00FFFFFF のシステム定義の色を取得します。</summary>
      <returns>ARGB 値が #00FFFFFF である <see cref="T:System.Windows.Media.Color" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.White">
      <summary>ARGB 値が #FFFFFFFF のシステム定義の色を取得します。</summary>
      <returns>ARGB 値が #FFFFFFFF である <see cref="T:System.Windows.Media.Color" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Colors.Yellow">
      <summary>ARGB 値が #FFFFFF00 のシステム定義の色を取得します。</summary>
      <returns>ARGB 値が #FFFFFF00 である <see cref="T:System.Windows.Media.Color" />。</returns>
    </member>
    <member name="T:System.Windows.Media.CompositeTransform">
      <summary>このクラスを使用すると、1 つのオブジェクトに複数の異なる変換を適用することができます。</summary>
    </member>
    <member name="M:System.Windows.Media.CompositeTransform.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.CompositeTransform" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.CenterX">
      <summary>
        <see cref="T:System.Windows.Media.CompositeTransform" /> で指定されたすべての変換の中心点の x 座標を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.CompositeTransform" /> で指定されたすべての変換の中心点の X 座標。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.CenterXProperty">
      <summary>
        <see cref="P:System.Windows.Media.CompositeTransform.CenterX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.CompositeTransform.CenterX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.CenterY">
      <summary>
        <see cref="T:System.Windows.Media.CompositeTransform" /> で指定されたすべての変換の中心点の y 座標を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.CompositeTransform" /> で指定されたすべての変換の中心点の Y 座標。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.CenterYProperty">
      <summary>
        <see cref="P:System.Windows.Media.CompositeTransform.CenterY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.CompositeTransform.CenterY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.Rotation">
      <summary>角度 (°) の単位で時計回りの回転の角度を取得または設定します。</summary>
      <returns>時計回りの回転角度 (°)。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.RotationProperty">
      <summary>
        <see cref="P:System.Windows.Media.CompositeTransform.Rotation" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.CompositeTransform.Rotation" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.ScaleX">
      <summary>x 軸のスケール ファクターを取得または設定します。このプロパティを使用すると、オブジェクトを左右に伸縮することができます。</summary>
      <returns>x 軸に沿ったスケール ファクター。既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.ScaleXProperty">
      <summary>
        <see cref="P:System.Windows.Media.CompositeTransform.ScaleX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.CompositeTransform.ScaleX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.ScaleY">
      <summary>y 軸のスケール ファクターを取得または設定します。このプロパティを使用すると、オブジェクトを上下に伸縮することができます。</summary>
      <returns>y 軸に沿ったスケール ファクター。既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.ScaleYProperty">
      <summary>
        <see cref="P:System.Windows.Media.CompositeTransform.ScaleY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.CompositeTransform.ScaleY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.SkewX">
      <summary>y 軸から反時計回りに計測した x 軸の傾斜角度を取得または設定します。傾斜変換は、2 次元オブジェクトで 3 次元的な奥行の効果を演出する場合に役立ちます。</summary>
      <returns>y 軸から反時計回りに計測した傾斜角度。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.SkewXProperty">
      <summary>
        <see cref="P:System.Windows.Media.CompositeTransform.SkewX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.CompositeTransform.SkewX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.SkewY">
      <summary>x 軸から反時計回りに計測した y 軸の傾斜角度を取得または設定します。傾斜変換は、2 次元オブジェクトで 3 次元的な奥行の効果を演出する場合に役立ちます。</summary>
      <returns>x 軸から反時計回りに計測した傾斜角度。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.SkewYProperty">
      <summary>
        <see cref="P:System.Windows.Media.CompositeTransform.SkewY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.CompositeTransform.SkewY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.TranslateX">
      <summary>x 軸に沿って平行移動する距離を取得または設定します。</summary>
      <returns>x 軸に沿ってオブジェクトを平行移動 (移動) する距離 (ピクセル単位)。このプロパティは読み取られます/書き込まれます。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.TranslateXProperty">
      <summary>
        <see cref="P:System.Windows.Media.CompositeTransform.TranslateX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.CompositeTransform.TranslateX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.CompositeTransform.TranslateY">
      <summary>y 軸に沿ってオブジェクトを平行移動 (移動) する距離を取得または設定します。</summary>
      <returns>y 軸に沿ってオブジェクトを平行移動 (移動) する距離 (ピクセル単位)。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.CompositeTransform.TranslateYProperty">
      <summary>
        <see cref="P:System.Windows.Media.CompositeTransform.TranslateY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.CompositeTransform.TranslateY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.CompositionTarget">
      <summary>Windows Phone ベースのアプリケーションの表示サーフェイスを表します。</summary>
    </member>
    <member name="E:System.Windows.Media.CompositionTarget.Rendering">
      <summary>Windows Phone のコア描画プロセスがフレームを描画するときに発生します。</summary>
    </member>
    <member name="T:System.Windows.Media.ContentKeyType">
      <summary>コンテンツ キーの種類を表します。</summary>
    </member>
    <member name="F:System.Windows.Media.ContentKeyType.Unprotected">
      <summary>コンテンツ キーの種類は保護されません。</summary>
    </member>
    <member name="F:System.Windows.Media.ContentKeyType.Aes128Bit">
      <summary>Root ライセンス (128 ビット Advanced Encryption Standard [AES]) に使用されたコンテンツ キーの種類。この値の使用は推奨されていません。代わりに Aes128Ctr を使用する必要があります。</summary>
    </member>
    <member name="F:System.Windows.Media.ContentKeyType.Aes128Ctr">
      <summary>Root ライセンス (128 ビット Advanced Encryption Standard CTR mode [AES-CTR]) に使用されたコンテンツ キーの種類。</summary>
    </member>
    <member name="F:System.Windows.Media.ContentKeyType.Cocktail">
      <summary>PlayReady エコシステムで Cocktail に使用されたコンテンツ キーの種類。</summary>
    </member>
    <member name="F:System.Windows.Media.ContentKeyType.Uninitialized">
      <summary>コンテンツ キーの種類は初期化されません。</summary>
    </member>
    <member name="T:System.Windows.Media.DeepZoomImageTileSource">
      <summary>
        <see cref="T:System.Windows.Controls.MultiScaleImage" /> の読み込み元を指定するために使用されます。</summary>
    </member>
    <member name="M:System.Windows.Media.DeepZoomImageTileSource.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.DeepZoomImageTileSource" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Windows.Media.DeepZoomImageTileSource.#ctor(System.Uri)">
      <summary>指定した読み込み先 URI を使用して、<see cref="T:System.Windows.Media.DeepZoomImageTileSource" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="sourceUri">ソース URI。</param>
    </member>
    <member name="P:System.Windows.Media.DeepZoomImageTileSource.UriSource">
      <summary>
        <see cref="T:System.Windows.Media.DeepZoomImageTileSource" /> の読み込み元 URI を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.DeepZoomImageTileSource" /> のソース URI。</returns>
    </member>
    <member name="F:System.Windows.Media.DeepZoomImageTileSource.UriSourceProperty">
      <summary>
        <see cref="P:System.Windows.Media.DeepZoomImageTileSource.UriSource" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.DeepZoomImageTileSource.UriSource" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.DomainAcquirer">
      <summary>ドメイン参加要求を処理します。</summary>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.DomainAcquirer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.CancelAsync">
      <summary>進行中のドメイン操作を取り消すために呼び出されます。</summary>
      <exception cref="T:System.InvalidOperationException">進行中のドメイン操作がない場合。</exception>
    </member>
    <member name="P:System.Windows.Media.DomainAcquirer.ChallengeCustomData">
      <summary>ドメイン チャレンジの内部で PlayReady サーバーに送信されるサービス固有のデータを取得または設定します。</summary>
      <returns>ドメイン チャレンジの内部で PlayReady サーバーに送信されるサービス固有のデータ。既定値は null です。</returns>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.JoinDomainAsync(System.Guid,System.Guid,System.Uri,System.String)">
      <summary>非同期ドメイン参加操作を開始します。</summary>
      <param name="serviceId">このドメインのサービス識別子。<paramref name="serviceId" /> はオプションです。必須ではない場合は <see cref="F:System.Guid.Empty" /> を指定できます。</param>
      <param name="accountId">このドメインのアカウント識別子。<paramref name="accountId" /> はオプションです。必須ではない場合は <see cref="F:System.Guid.Empty" /> を指定できます。</param>
      <param name="domainServerUrl">ドメインの管理に使用されるドメイン コントローラー サーバーの URL。</param>
      <param name="friendlyName">クライアント アプリケーションでのドメイン証明書の列挙中にユーザーに対して表示可能なアカウントのフレンドリ名。<paramref name="friendlyName" /> はオプションです。必要ない場合は、null を指定できます。</param>
    </member>
    <member name="E:System.Windows.Media.DomainAcquirer.JoinDomainCompleted">
      <summary>ドメイン参加操作の完了時に発生します。</summary>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.LeaveDomainAsync(System.Guid,System.Guid,System.Uri)">
      <summary>非同期ドメイン離脱操作の開始に使用されるメソッド。</summary>
      <param name="serviceId">このドメインのサービス識別子。<paramref name="serviceId" /> はオプションです。必須ではない場合は <see cref="F:System.Guid.Empty" /> を指定できます。</param>
      <param name="accountId">このドメインのアカウント識別子。</param>
      <param name="domainServerUrl">ドメインの管理に使用されるドメイン コントローラー サーバーの URL。</param>
    </member>
    <member name="E:System.Windows.Media.DomainAcquirer.LeaveDomainCompleted">
      <summary>ドメイン離脱操作の完了時に発生します。</summary>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.OnCancel">
      <summary>手動ドメイン操作中の取り消しを実装する場合に、派生クラスでオーバーライドします。</summary>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.OnJoinDomain(System.IO.Stream,System.Uri)">
      <summary>手動でのドメイン参加操作を実装する場合に、派生クラスでオーバーライドします。</summary>
      <param name="joinChallenge">PlayReady サーバーに送信する必要がある PlayReady ドメイン チャレンジ。</param>
      <param name="domainServerUri">ドメインの管理に使用されるドメイン コントローラー サーバーの URI。</param>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.OnLeaveDomain(System.IO.Stream,System.Uri)">
      <summary>手動でのドメイン離脱操作を実装する場合に、派生クラスでオーバーライドします。</summary>
      <param name="leaveChallenge">PlayReady サーバーに送信する必要があるドメイン チャレンジ。</param>
      <param name="domainServerUri">ドメインの管理に使用されるドメイン コントローラー サーバーの URI。</param>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.SetJoinDomainResponse(System.IO.Stream)">
      <summary>派生 <see cref="T:System.Windows.Media.DomainAcquirer" /> で手動ドメイン参加操作が実行されているときのドメイン参加操作の応答を設定するときに使用します。</summary>
      <param name="domainResponse">ドメイン コントロール サーバーによってクライアントに送り返されたドメイン参加操作の応答。</param>
    </member>
    <member name="M:System.Windows.Media.DomainAcquirer.SetLeaveDomainResponse(System.IO.Stream)">
      <summary>派生 <see cref="T:System.Windows.Media.DomainAcquirer" /> で手動ドメイン離脱操作が実行されているときのドメイン離脱操作の応答を設定するときに使用します。</summary>
      <param name="domainResponse">ドメイン コントロール サーバーによってクライアントに送り返されたドメイン離脱操作の応答。</param>
    </member>
    <member name="T:System.Windows.Media.DomainOperationCompletedEventArgs">
      <summary>ドメイン参加および離脱イベントにデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Media.DomainOperationCompletedEventArgs.AccountId">
      <summary>このドメイン操作のアカント識別子を取得します。</summary>
      <returns>このドメイン操作のアカウント識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.DomainOperationCompletedEventArgs.ResponseCustomData">
      <summary>ドメイン操作から返されたカスタム データ文字列を取得します。</summary>
      <returns>ドメイン操作から返されたカスタム データ文字列。</returns>
    </member>
    <member name="P:System.Windows.Media.DomainOperationCompletedEventArgs.ServiceId">
      <summary>このドメイン操作のサービス識別子を取得します。</summary>
      <returns>このドメイン操作のサービス識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.DoubleCollection">
      <summary>順序が設定されている、<see cref="T:System.Double" /> 値のコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.DoubleCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.DoubleCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.DrmDomainRequiredException">
      <summary>コンテンツの再生に必要なドメイン証明書が見つからないときにスローされる例外。</summary>
    </member>
    <member name="P:System.Windows.Media.DrmDomainRequiredException.AccountId">
      <summary>サービスが要求しているドメイン証明書のアカウント識別子を取得します。</summary>
      <returns>サービスが要求しているドメイン証明書のアカウント識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.DrmDomainRequiredException.CustomData">
      <summary>例外と共にクライアントに返されるサービス固有のデータを取得します。</summary>
      <returns>例外と共にクライアントに返されるサービス固有のデータ。</returns>
    </member>
    <member name="P:System.Windows.Media.DrmDomainRequiredException.DomainServerUrl">
      <summary>ドメイン コントローラーの URL が現在のサーバーと異なる場合、その URL を取得します。</summary>
      <returns>ドメイン コントローラーの URL が現在のサーバーと異なる場合、その URL。</returns>
    </member>
    <member name="P:System.Windows.Media.DrmDomainRequiredException.ServiceId">
      <summary>サービスが要求しているドメイン証明書のサービス識別子を取得します。</summary>
      <returns>サービスが要求しているドメイン証明書のサービス識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.DrmSetupDecryptorCompletedEventArgs">
      <summary>
        <see cref="T:System.Windows.Media.DrmSetupDecryptorCompletedEventArgs" /> のデータを提供します。</summary>
    </member>
    <member name="P:System.Windows.Media.DrmSetupDecryptorCompletedEventArgs.KeyID">
      <summary>セットアップが失敗または完了した復号化機能のライセンスのコンテンツ キー識別子を取得します。</summary>
      <returns>セットアップが失敗または完了した復号化機能のライセンスのコンテンツ キー識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.EllipseGeometry">
      <summary>円または楕円のジオメトリを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.EllipseGeometry.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.EllipseGeometry" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.EllipseGeometry.Center">
      <summary>
        <see cref="T:System.Windows.Media.EllipseGeometry" /> の中心点を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.EllipseGeometry" /> の中心点。</returns>
    </member>
    <member name="F:System.Windows.Media.EllipseGeometry.CenterProperty">
      <summary>
        <see cref="P:System.Windows.Media.EllipseGeometry.Center" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.EllipseGeometry.Center" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.EllipseGeometry.RadiusX">
      <summary>
        <see cref="T:System.Windows.Media.EllipseGeometry" /> の x 半径の値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.EllipseGeometry" /> の x 半径の値。</returns>
    </member>
    <member name="F:System.Windows.Media.EllipseGeometry.RadiusXProperty">
      <summary>
        <see cref="P:System.Windows.Media.EllipseGeometry.RadiusX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.EllipseGeometry.RadiusX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.EllipseGeometry.RadiusY">
      <summary>
        <see cref="T:System.Windows.Media.EllipseGeometry" /> の y 半径の値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.EllipseGeometry" /> の y 半径の値。</returns>
    </member>
    <member name="F:System.Windows.Media.EllipseGeometry.RadiusYProperty">
      <summary>
        <see cref="P:System.Windows.Media.EllipseGeometry.RadiusY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.EllipseGeometry.RadiusY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.FileSink">
      <summary>Windows Phone でのビデオ キャプチャをファイルに保存するために使用されます。</summary>
    </member>
    <member name="M:System.Windows.Media.FileSink.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.FileSink" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.FileSink.CaptureSource">
      <summary>この <see cref="T:System.Windows.Media.FileSink" /> に関連付けられているキャプチャ ソースを取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.FileSink" /> に関連付けられているキャプチャ ソース。</returns>
    </member>
    <member name="P:System.Windows.Media.FileSink.IsolatedStorageFileName">
      <summary>関連付けられている分離ストレージ ファイルの名前を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Media.FileSink" /> に関連付けられている分離ストレージ ファイルの名前。</returns>
    </member>
    <member name="T:System.Windows.Media.FillRule">
      <summary>
        <see cref="T:System.Windows.Media.Geometry" /> に含まれる <see cref="T:System.Windows.Media.PathFigure" /> オブジェクトの交差する領域をどのように結合して <see cref="T:System.Windows.Media.Geometry" /> の領域を作成するかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Media.FillRule.EvenOdd">
      <summary>ある点から任意の方向に無限に伸びる射線を描画し、その射線が横断する指定した図形のパス セグメントの数をカウントすることにより、その点が塗りつぶし領域の内側にあるかどうかを判断するルール。この数が奇数の場合、点は内側にあり、偶数の場合は外側にあります。</summary>
    </member>
    <member name="F:System.Windows.Media.FillRule.Nonzero">
      <summary>ある点から任意の方向に無限に伸びる射線を描画し、図形のセグメントがこの射線と交わる場所を調べることにより、その点がパスの塗りつぶし領域の内側にあるかどうかを判断するルール。0 から始まり、セグメントが左から右にレイと交差するごとに 1 加算し、パス セグメントが右から左にレイと交差するごとに 1 減算します。交差の数を計算し、結果が 0 の場合、点はパスの外側にあります。それ以外の場合は内側です。</summary>
    </member>
    <member name="T:System.Windows.Media.FontFamily">
      <summary>関連フォントのファミリを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.FontFamily.#ctor(System.String)">
      <summary>指定したフォント ファミリ文字列から、<see cref="T:System.Windows.Media.FontFamily" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="familyName">新しい <see cref="T:System.Windows.Media.FontFamily" /> を構成する 1 つ以上のファミリ名。「解説」の「フォント ファミリの文法」を参照してください。</param>
    </member>
    <member name="M:System.Windows.Media.FontFamily.Equals(System.Object)">
      <summary>現在のフォント ファミリ オブジェクトと、指定したフォント ファミリ オブジェクトが同じであるかどうかを示す値を取得します。</summary>
      <returns>
        <paramref name="o" /> が現在の <see cref="T:System.Windows.Media.FontFamily" /> オブジェクトに等しい場合は true。それ以外の場合は false。<paramref name="o" /> が <see cref="T:System.Windows.Media.FontFamily" /> オブジェクトではない場合は、false が返されます。</returns>
      <param name="o">比較対象のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Media.FontFamily.GetHashCode">
      <summary>
        <see cref="T:System.Windows.Media.FontFamily" /> のハッシュ関数として機能します。</summary>
      <returns>整数ハッシュ値。</returns>
    </member>
    <member name="P:System.Windows.Media.FontFamily.Source">
      <summary>
        <see cref="T:System.Windows.Media.FontFamily" /> オブジェクトを構築するために使用されるフォント ファミリ名を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.FontFamily" /> オブジェクトのフォント ファミリ名。</returns>
    </member>
    <member name="M:System.Windows.Media.FontFamily.ToString">
      <summary>この <see cref="T:System.Windows.Media.FontFamily" /> の文字列表現を返します。</summary>
      <returns>入力フォント ファミリー文字列。</returns>
    </member>
    <member name="T:System.Windows.Media.Fonts">
      <summary>
        <see cref="T:System.Windows.Media.FontFamily" /> オブジェクトと <see cref="T:System.Windows.Media.Typeface" /> オブジェクトに対して列挙のサポートを提供します。</summary>
    </member>
    <member name="P:System.Windows.Media.Fonts.SystemTypefaces">
      <summary>既定のシステム フォントの場所から <see cref="T:System.Windows.Media.Typeface" /> オブジェクトのコレクションを取得します。</summary>
      <returns>システム フォント コレクションのフォントを表す <see cref="T:System.Windows.Media.Typeface" /> オブジェクトのコレクション。</returns>
    </member>
    <member name="T:System.Windows.Media.GeneralTransform">
      <summary>点や四角形などのオブジェクトに対する一般化された変換をサポートします。</summary>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.GeneralTransform" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.GeneralTransform.Inverse">
      <summary>この <see cref="T:System.Windows.Media.GeneralTransform" /> の逆変換を (可能な場合) 取得します。</summary>
      <returns>可能な場合は、このインスタンスの逆。それ以外の場合は null。</returns>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.Transform(System.Windows.Point)">
      <summary>指定した点を変換し、結果を返します。</summary>
      <returns>
        <paramref name="point" /> の変換結果。</returns>
      <param name="point">変換対象のポイント。</param>
      <exception cref="T:System.InvalidOperationException">変換は成功しませんでした。</exception>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.TransformBounds(System.Windows.Rect)">
      <summary>派生クラスでオーバーライドされると、指定した境界ボックスを変換し、この境界ボックスをちょうど格納できる大きさの軸平行境界ボックスを返します。</summary>
      <returns>変換した <paramref name="rect" /> を格納する、可能な限り最小の軸平行境界ボックス。</returns>
      <param name="rect">変換する境界ボックス。</param>
    </member>
    <member name="M:System.Windows.Media.GeneralTransform.TryTransform(System.Windows.Point,System.Windows.Point@)">
      <summary>派生クラスでオーバーライドされると、指定した点の変換を試み、変換が成功したかどうかを示す値を返します。</summary>
      <returns>
        <paramref name="inPoint" /> が変換された場合は true。それ以外の場合は false。</returns>
      <param name="inPoint">変換対象のポイント。</param>
      <param name="outPoint">
        <paramref name="inPoint" /> の変換結果。</param>
    </member>
    <member name="T:System.Windows.Media.Geometry">
      <summary>幾何学的図形を定義するオブジェクトの基本クラスを提供します。<see cref="T:System.Windows.Media.Geometry" /> オブジェクトは、2 次元グラフィックス データを <see cref="T:System.Windows.Shapes.Path" /> としてレンダリングするとき、クリッピング領域やジオメトリの定義として使用できます。</summary>
    </member>
    <member name="P:System.Windows.Media.Geometry.Bounds">
      <summary>
        <see cref="T:System.Windows.Media.Geometry" /> の軸平行境界ボックスを指定する <see cref="T:System.Windows.Rect" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Geometry" /> の軸平行境界ボックス。</returns>
    </member>
    <member name="P:System.Windows.Media.Geometry.Empty">
      <summary>空のジオメトリ オブジェクトを取得します。</summary>
      <returns>空のジオメトリ オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Media.Geometry.StandardFlatteningTolerance">
      <summary>多角形近似に使用する標準の許容範囲を取得します。</summary>
      <returns>標準交差。既定値は 0.25 です。</returns>
    </member>
    <member name="P:System.Windows.Media.Geometry.Transform">
      <summary>
        <see cref="T:System.Windows.Media.Geometry" /> に適用された <see cref="T:System.Windows.Media.Transform" /> オブジェクトを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Geometry" /> に適用された変換。この値は、単一の <see cref="T:System.Windows.Media.Transform" />、または <see cref="T:System.Windows.Media.Transform" /> としての <see cref="T:System.Windows.Media.TransformCollection" /> キャストの場合がある点に注意してください。</returns>
    </member>
    <member name="F:System.Windows.Media.Geometry.TransformProperty">
      <summary>
        <see cref="P:System.Windows.Media.Geometry.Transform" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Geometry.Transform" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.GeometryCollection">
      <summary>
        <see cref="T:System.Windows.Media.Geometry" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.GeometryCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.GeometryCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.GeometryGroup">
      <summary>他の <see cref="T:System.Windows.Media.Geometry" /> オブジェクトで構成される複合ジオメトリを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.GeometryGroup.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.GeometryGroup" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.GeometryGroup.Children">
      <summary>この <see cref="T:System.Windows.Media.GeometryGroup" /> を定義するオブジェクトを含む <see cref="T:System.Windows.Media.GeometryCollection" /> を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.GeometryGroup" /> の子を格納するコレクション。</returns>
    </member>
    <member name="F:System.Windows.Media.GeometryGroup.ChildrenProperty">
      <summary>
        <see cref="P:System.Windows.Media.GeometryGroup.Children" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.GeometryGroup.Children" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.GeometryGroup.FillRule">
      <summary>この <see cref="T:System.Windows.Media.GeometryGroup" /> に含まれるオブジェクトの交差する領域がどのように結合されるかを取得または設定します。</summary>
      <returns>作成領域を形成するために交差した領域が組み合わされる方法を指定する列挙値の 1 つ。既定値は、<see cref="F:System.Windows.Media.FillRule.EvenOdd" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.GeometryGroup.FillRuleProperty">
      <summary>
        <see cref="P:System.Windows.Media.GeometryGroup.FillRule" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.GeometryGroup.FillRule" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.GlyphTypeface">
      <summary>ディスク上のフォント ファイルに対応する物理的なフォント フェイスを指定します。</summary>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.FontFileName">
      <summary>
        <see cref="T:System.Windows.Media.GlyphTypeface" /> オブジェクトのフォント ファイル名を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.GlyphTypeface" /> オブジェクトのフォント ファイル名。</returns>
    </member>
    <member name="P:System.Windows.Media.GlyphTypeface.Version">
      <summary>フォントの "NAME" テーブルから解釈されるフォント フェイスのバージョンを取得します。</summary>
      <returns>バージョンを表す <see cref="T:System.Double" /> 値。</returns>
    </member>
    <member name="T:System.Windows.Media.GradientBrush">
      <summary>グラデーション終了位置で構成される、グラデーションを記述する抽象クラス。<see cref="T:System.Windows.Media.GradientBrush" /> から派生するクラスはグラデーション境界を解釈するさまざまな方法を示します。</summary>
    </member>
    <member name="M:System.Windows.Media.GradientBrush.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.GradientBrush" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.ColorInterpolationMode">
      <summary>グラデーションの色の補間方法を指定する <see cref="T:System.Windows.Media.ColorInterpolationMode" /> 列挙値を取得または設定します。</summary>
      <returns>グラデーションの色の補間方法を指定します。既定値は、<see cref="F:System.Windows.Media.ColorInterpolationMode.SRgbLinearInterpolation" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.ColorInterpolationModeProperty">
      <summary>
        <see cref="P:System.Windows.Media.GradientBrush.ColorInterpolationMode" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.GradientBrush.ColorInterpolationMode" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.GradientStops">
      <summary>ブラシのグラデーション終了位置を取得または設定します。</summary>
      <returns>ブラシに関連付けられている <see cref="T:System.Windows.Media.GradientStop" /> オブジェクトのコレクション。各オブジェクトは、ブラシのグラデーション軸に沿った色とオフセットを指定します。既定値は空の <see cref="T:System.Windows.Media.GradientStopCollection" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.GradientStopsProperty">
      <summary>
        <see cref="P:System.Windows.Media.GradientBrush.GradientStops" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.GradientBrush.GradientStops" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.MappingMode">
      <summary>グラデーション ブラシの位置座標が出力領域に対して絶対的であるか相対的であるかを指定する <see cref="T:System.Windows.Media.BrushMappingMode" /> 列挙値を取得または設定します。</summary>
      <returns>グラデーション ブラシの配置座標を解釈する方法を指定する <see cref="T:System.Windows.Media.BrushMappingMode" /> 値。既定値は、<see cref="F:System.Windows.Media.BrushMappingMode.RelativeToBoundingBox" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.MappingModeProperty">
      <summary>
        <see cref="P:System.Windows.Media.GradientBrush.MappingMode" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.GradientBrush.MappingMode" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.GradientBrush.SpreadMethod">
      <summary>描画されるオブジェクトの境界内で開始または終了するグラデーションの描画方法を指定する、拡散手法の種類を取得または設定します。</summary>
      <returns>グラデーションの描画に使用される拡散手法の種類。既定値は、<see cref="F:System.Windows.Media.GradientSpreadMethod.Pad" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.GradientBrush.SpreadMethodProperty">
      <summary>
        <see cref="P:System.Windows.Media.GradientBrush.SpreadMethod" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.GradientBrush.SpreadMethod" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.GradientSpreadMethod">
      <summary>グラデーション ブラシのグラデーション ベクター (グラデーション領域) の外側のグラデーションの描画方法を指定します。</summary>
    </member>
    <member name="F:System.Windows.Media.GradientSpreadMethod.Pad">
      <summary>グラデーション ベクターの終端のカラー値で残りの領域を塗りつぶします。</summary>
    </member>
    <member name="F:System.Windows.Media.GradientSpreadMethod.Reflect">
      <summary>領域が塗りつぶされるまでグラデーションを逆方向に繰り返します。</summary>
    </member>
    <member name="F:System.Windows.Media.GradientSpreadMethod.Repeat">
      <summary>領域が塗りつぶされるまでグラデーションを元の方向に繰り返します。 </summary>
    </member>
    <member name="T:System.Windows.Media.GradientStop">
      <summary>グラデーション内の移行ポイントの位置および色を記述します。</summary>
    </member>
    <member name="M:System.Windows.Media.GradientStop.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.GradientStop" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.GradientStop.Color">
      <summary>グラデーションの終了位置の色を取得または設定します。</summary>
      <returns>グラデーション終了位置の色。既定値は、<see cref="P:System.Windows.Media.Colors.Transparent" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.GradientStop.ColorProperty">
      <summary>
        <see cref="P:System.Windows.Media.GradientStop.Color" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.GradientStop.Color" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.GradientStop.Offset">
      <summary>グラデーション ベクター内のグラデーションの終了位置を取得します。</summary>
      <returns>グラデーション ベクターに沿ったこのグラデーション終了位置の相対的な位置。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.GradientStop.OffsetProperty">
      <summary>
        <see cref="P:System.Windows.Media.GradientStop.Offset" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.GradientStop.Offset" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.GradientStopCollection">
      <summary>インデックスによって個別にアクセスできる <see cref="T:System.Windows.Media.GradientStop" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.GradientStopCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.GradientStopCollection" /> クラスの新しいインスタンスを初期化します。 </summary>
    </member>
    <member name="T:System.Windows.Media.ImageBrush">
      <summary>イメージで領域を塗りつぶします。</summary>
    </member>
    <member name="M:System.Windows.Media.ImageBrush.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.ImageBrush" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="E:System.Windows.Media.ImageBrush.ImageFailed">
      <summary>イメージの取得または形式に関連付けられているエラーが発生したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Media.ImageBrush.ImageOpened">
      <summary>エラーが発生することなくイメージ ソースがダウンロードおよびデコードされたときに発生します。このイベントを使用して、描画する前にイメージのサイズを判定できます。</summary>
    </member>
    <member name="P:System.Windows.Media.ImageBrush.ImageSource">
      <summary>この <see cref="T:System.Windows.Media.ImageBrush" /> によって表示されるイメージを取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.ImageBrush" /> によって表示されるイメージ。</returns>
    </member>
    <member name="F:System.Windows.Media.ImageBrush.ImageSourceProperty">
      <summary>
        <see cref="P:System.Windows.Media.ImageBrush.ImageSource" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.ImageBrush.ImageSource" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.ImageSource">
      <summary>
        <see cref="P:System.Windows.Controls.Image.Source" />、<see cref="P:System.Windows.Controls.MultiScaleImage.Source" />、および <see cref="P:System.Windows.Media.ImageBrush.ImageSource" /> のオブジェクト ソース型を提供します。</summary>
    </member>
    <member name="T:System.Windows.Media.ImageSourceConverter">
      <summary>
        <see cref="T:System.Windows.Media.ImageSource" /> と他のデータ型間の変換を実行します。</summary>
    </member>
    <member name="M:System.Windows.Media.ImageSourceConverter.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.ImageSourceConverter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.ImageSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>コンバーターが指定した型のオブジェクトを <see cref="T:System.Windows.Media.ImageSource" /> のインスタンスに変換できるかどうかを判断します。</summary>
      <returns>コンバーターが指定された型を <see cref="T:System.Windows.Media.ImageSource" /> のインスタンスに変換できる場合は true。それ以外の場合は false。</returns>
      <param name="context">変換を評価するために使用する型のコンテキスト情報。</param>
      <param name="sourceType">評価対象となる変換元の型。</param>
    </member>
    <member name="M:System.Windows.Media.ImageSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>指定したオブジェクトの <see cref="T:System.Windows.Media.ImageSource" /> のインスタンスへの変換を試みます。</summary>
      <returns>
        <see cref="T:System.Windows.Media.ImageSource" /> の新しいインスタンス。</returns>
      <param name="context">変換のために使用する型のコンテキスト情報。</param>
      <param name="culture">変換時に尊重するカルチャ情報。</param>
      <param name="value">変換対象のオブジェクト。</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> は null または無効な種類です。</exception>
    </member>
    <member name="T:System.Windows.Media.ImplicitInputBrush">
      <summary>シェーダーに対する入力ビットマップを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.ImplicitInputBrush.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.ImplicitInputBrush" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.JoinDomainCompletedEventArgs">
      <summary>
        <see cref="T:System.Windows.Media.DomainAcquirer.JoinDomainCompleted" /> イベントにデータを提供します。</summary>
    </member>
    <member name="T:System.Windows.Media.LeaveDomainCompletedEventArgs">
      <summary>
        <see cref="T:System.Windows.Media.DomainAcquirer.LeaveDomainCompleted" /> イベントにデータを提供します。</summary>
    </member>
    <member name="T:System.Windows.Media.LicenseAcquirer">
      <summary>このクラスは保護されたコンテンツの PlayReady ライセンスの取得を行います。</summary>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.LicenseAcquirer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.AcquireLicenseAsync(System.Byte[])">
      <summary>ライセンス取得プロセスを開始します。</summary>
      <param name="mediaHeader">ライセンスの取得に使用されるヘッダー。</param>
      <exception cref="T:System.InvalidOperationException">クラスのそのインスタンスで既存のライセンス取得が既に試行されているときにこのメソッドが呼び出された場合。</exception>
      <exception cref="T:System.InvalidOperationException">この <see cref="T:System.Windows.Media.LicenseAcquirer" /> が以前に <see cref="T:System.Windows.Controls.MediaElement" /> 基本ライセンスの取得に使用された場合。</exception>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.AcquireLicenseAsync(System.Guid)">
      <summary>ライセンス取得プロセスを開始します。</summary>
      <param name="serviceId">サービス ID。このパラメーターは、ドメインに連結したライセンスを取得しようとする場合にのみ要求されます。</param>
      <exception cref="T:System.InvalidOperationException">クラスのそのインスタンスで既存のライセンス取得が既に試行されているときにこのメソッドが呼び出された場合。</exception>
      <exception cref="T:System.InvalidOperationException">この <see cref="T:System.Windows.Media.LicenseAcquirer" /> が以前に <see cref="T:System.Windows.Controls.MediaElement" /> 基本ライセンスの取得に使用された場合。</exception>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.AcquireLicenseAsync(System.Guid,System.Windows.Media.ContentKeyType,System.Guid)">
      <summary>ライセンス取得プロセスを開始します。</summary>
      <param name="keyId">ライセンスを取得しようとしているファイルのキー識別子。</param>
      <param name="keyType">キー識別子が使用する暗号化標準の種類。</param>
      <param name="serviceId">サービス ID。このパラメーターは、ドメインに連結したライセンスを取得しようとする場合にのみ要求されます。</param>
      <exception cref="T:System.InvalidOperationException">クラスのそのインスタンスで既存のライセンス取得が既に試行されているときにこのメソッドが呼び出された場合。</exception>
      <exception cref="T:System.InvalidOperationException">この <see cref="T:System.Windows.Media.LicenseAcquirer" /> が以前に <see cref="T:System.Windows.Controls.MediaElement" /> 基本ライセンスの取得に使用された場合。</exception>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.AcquireLicenseAsync(System.IO.Stream)">
      <summary>メディア ストリームを指定することによってライセンス取得プロセスを開始します。</summary>
      <param name="mediaStream">ライセンスの取得に使用されるストリーム。ストリームは ASF メディア ストリームである必要があります。</param>
      <exception cref="T:System.InvalidOperationException">クラスのそのインスタンスで既存のライセンス取得が既に試行されているときにこのメソッドが呼び出された場合。</exception>
      <exception cref="T:System.InvalidOperationException">この <see cref="T:System.Windows.Media.LicenseAcquirer" /> が以前に <see cref="T:System.Windows.Controls.MediaElement" /> 基本ライセンスの取得に使用された場合。</exception>
    </member>
    <member name="E:System.Windows.Media.LicenseAcquirer.AcquireLicenseCompleted">
      <summary>ライセンスの取得が完了したときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.CancelAsync">
      <summary>ライセンスの取得を取り消します。</summary>
      <exception cref="T:System.InvalidOperationException">ライセンスの取得が行われていない場合。</exception>
    </member>
    <member name="P:System.Windows.Media.LicenseAcquirer.ChallengeCustomData">
      <summary>手動でライセンスの取得を行わずに、ライセンス サーバーに送信されるサービス固有のデータを含む文字列を取得または設定します。</summary>
      <returns>手動でライセンスの取得を行わずに、ライセンス サーバーに送信されるサービス固有のデータを含む文字列。既定値は null です。</returns>
    </member>
    <member name="P:System.Windows.Media.LicenseAcquirer.LicenseServerUriOverride">
      <summary>コンテキスト ヘッダーに含まれるライセンス サーバー URI を上書きする URI (Uniform Resource Identifier) 値を取得または設定します。</summary>
      <returns>コンテキスト ヘッダーに含まれる URI (存在する場合) を上書きする URI。このプロパティが null の場合、システムはコンテキスト ヘッダーに含まれるライセンス サーバー URI を使用します。既定値は null です。</returns>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.OnAcquireLicense(System.IO.Stream,System.Uri)">
      <summary>このメソッドの既定の実装では、<see cref="T:System.Windows.Controls.MediaElement" /> を呼び出してライセンスを取得します。ライセンス取得を独自に処理する場合、このメソッドをオーバーライドする必要があります。</summary>
      <param name="licenseChallenge">PlayReady ライセンス取得チャレンジ。PlayReady サーバー インスタンスに送信する必要があります。</param>
      <param name="licenseServerUri">ライセンス サーバーの URI。<see cref="P:System.Windows.Media.LicenseAcquirer.LicenseServerUriOverride" /> プロパティが設定されている場合、このパラメーターには <see cref="P:System.Windows.Media.LicenseAcquirer.LicenseServerUriOverride" /> の値が格納されます。設定されていない場合は、このパラメーターは WRMHeader ヘッダーの内部で検出されたライセンス サーバー URI の値を返します。WMDRM でパッケージ化されたコンテンツの場合、ライセンス サーバー URI は常に null にリセットされます。</param>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.OnCancel">
      <summary>手動ライセンス取得中の取り消しを実装する場合に、派生クラスでオーバーライドします。</summary>
    </member>
    <member name="M:System.Windows.Media.LicenseAcquirer.SetLicenseResponse(System.IO.Stream)">
      <summary>SOAP ボディを HTTP 応答からライセンス チャレンジに渡すことによってライセンス応答を設定します。</summary>
      <param name="licenseResponse">HTTP 応答からライセンス チャレンジに渡される SOAP 本体。SOAP 本体はストリームとして渡されます。また、SOAP 本体には SOAP 応答全体が含まれます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="licenseResponse" /> が null です。</exception>
      <exception cref="T:System.InvalidOperationException">指定された <paramref name="licenseResponse" /> が無効です。</exception>
    </member>
    <member name="T:System.Windows.Media.LinearGradientBrush">
      <summary>線形グラデーションで領域を塗りつぶします。</summary>
    </member>
    <member name="M:System.Windows.Media.LinearGradientBrush.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.LinearGradientBrush" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.LinearGradientBrush.#ctor(System.Windows.Media.GradientStopCollection,System.Double)">
      <summary>指定した <see cref="T:System.Windows.Media.GradientStopCollection" /> および角度を持つ <see cref="T:System.Windows.Media.LinearGradientBrush" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="gradientStopCollection">このブラシに設定された <see cref="P:System.Windows.Media.GradientBrush.GradientStops" />。</param>
      <param name="angle">グラデーションの角度 (°) を表す <see cref="T:System.Double" />。値が 0 の場合は横グラデーションが作成され、値が 90 の場合は縦グラデーションが作成されます。負の値も、360 を超える値も許されます (360 を法とする値として扱われます)。</param>
    </member>
    <member name="P:System.Windows.Media.LinearGradientBrush.EndPoint">
      <summary>線形グラデーションの終了の 2 次元座標を取得または設定します。</summary>
      <returns>線形グラデーションの終了の 2 次元座標。既定は値が 1,1 である <see cref="T:System.Windows.Point" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.LinearGradientBrush.EndPointProperty">
      <summary>
        <see cref="P:System.Windows.Media.LinearGradientBrush.EndPoint" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.LinearGradientBrush.EndPoint" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.LinearGradientBrush.StartPoint">
      <summary>線形グラデーションの開始の 2 次元座標を取得または設定します。</summary>
      <returns>線形グラデーションの開始の 2 次元座標。既定は値が 0,0 である <see cref="T:System.Windows.Point" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.LinearGradientBrush.StartPointProperty">
      <summary>
        <see cref="P:System.Windows.Media.LinearGradientBrush.StartPoint" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.LinearGradientBrush.StartPoint" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.LineGeometry">
      <summary>線のジオメトリを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.LineGeometry.#ctor">
      <summary>長さを持たない <see cref="T:System.Windows.Media.LineGeometry" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.LineGeometry.EndPoint">
      <summary>線の終点を取得または設定します。</summary>
      <returns>線の終点。既定は値が 0,0 である <see cref="T:System.Windows.Point" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.LineGeometry.EndPointProperty">
      <summary>
        <see cref="P:System.Windows.Media.LineGeometry.EndPoint" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.LineGeometry.EndPoint" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.LineGeometry.StartPoint">
      <summary>線の開始点を取得または設定します。</summary>
      <returns>線の開始点。既定は値が 0,0 である <see cref="T:System.Windows.Point" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.LineGeometry.StartPointProperty">
      <summary>
        <see cref="P:System.Windows.Media.LineGeometry.StartPoint" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.LineGeometry.StartPoint" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.LineSegment">
      <summary>2 つの点の間に引かれた線を表します。これを <see cref="T:System.Windows.Shapes.Path" /> データ内の <see cref="T:System.Windows.Media.PathFigure" /> の一部とすることができます。</summary>
    </member>
    <member name="M:System.Windows.Media.LineSegment.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.LineSegment" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.LineSegment.Point">
      <summary>線分の終点を取得または設定します。</summary>
      <returns>線分の終点。既定は値が 0,0 である <see cref="T:System.Windows.Point" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.LineSegment.PointProperty">
      <summary>
        <see cref="P:System.Windows.Media.LineSegment.Point" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.LineSegment.Point" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.LogReadyRoutedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.MediaElement.LogReady" /> イベントにデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Media.LogReadyRoutedEventArgs.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.LogReadyRoutedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.LogReadyRoutedEventArgs.Log">
      <summary>LogFields セクションに一覧表示されたフィールドを含む Windows Media Log 形式の XML 文字列を取得します。</summary>
      <returns>LogFields セクションに一覧表示されたフィールドを含む Windows Media Log 形式の XML 文字列。</returns>
    </member>
    <member name="P:System.Windows.Media.LogReadyRoutedEventArgs.LogSource">
      <summary>ログが生成された理由を示す値を取得します。</summary>
      <returns>ログが生成された理由を示す列挙値の 1 つ。</returns>
    </member>
    <member name="T:System.Windows.Media.LogReadyRoutedEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.MediaElement.LogReady" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。 </param>
    </member>
    <member name="T:System.Windows.Media.LogSource">
      <summary>メディア ログが生成された理由を示します。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.RequestLog">
      <summary>
        <see cref="M:System.Windows.Controls.MediaElement.RequestLog" /> メソッドが呼び出されました。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.Stop">
      <summary>メディアは停止しました。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.Seek">
      <summary>メディアでシーク操作が行われました。つまり早送りまたは巻き戻しが行われました。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.Pause">
      <summary>メディアは一時停止しました。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.SourceChanged">
      <summary>メディア ソースが変更されました。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.EndOfStream">
      <summary>メディアはストリームの終わりに達しました。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.MediaElementShutdown">
      <summary>ランタイム シャットダウン。</summary>
    </member>
    <member name="F:System.Windows.Media.LogSource.RuntimeShutdown">
      <summary>ランタイム シャットダウン。</summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
      <summary> 2 次元空間での変換に使用される 3 x 3 アフィン変換行列を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.Media.Matrix" /> 構造体を初期化します。</summary>
      <param name="m11">
        <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.M11" /> 係数。</param>
      <param name="m12">
        <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.M12" /> 係数。</param>
      <param name="m21">
        <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.M21" /> 係数。</param>
      <param name="m22">
        <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.M22" /> 係数。</param>
      <param name="offsetX">
        <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.OffsetX" /> 係数。</param>
      <param name="offsetY">
        <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.OffsetY" /> 係数。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
      <summary>指定した <see cref="T:System.Object" /> が、この <see cref="T:System.Windows.Media.Matrix" /> と同じ <see cref="T:System.Windows.Media.Matrix" /> 構造体であるかどうかを判断します。</summary>
      <returns>
        <paramref name="o" /> が、この <see cref="T:System.Windows.Media.Matrix" /> 構造体と同じ <see cref="T:System.Windows.Media.Matrix" /> 構造体の場合は true。それ以外の場合は false。</returns>
      <param name="o">比較する <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
      <summary>指定した <see cref="T:System.Windows.Media.Matrix" /> 構造体がこのインスタンスと同一であるかどうかを判断します。</summary>
      <returns>インスタンスが同じ場合は true。それ以外の場合は false。</returns>
      <param name="value">このインスタンスと比較する <see cref="T:System.Windows.Media.Matrix" /> のインスタンス。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
      <summary>この <see cref="T:System.Windows.Media.Matrix" /> 構造体のハッシュ コードを返します。</summary>
      <returns>このインスタンスのハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
      <summary>恒等 <see cref="T:System.Windows.Media.Matrix" /> を取得します。</summary>
      <returns>恒等行列。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
      <summary>この <see cref="T:System.Windows.Media.Matrix" /> 構造体が恒等行列かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Matrix" /> 構造体が恒等行列の場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
      <summary>この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 1 行、第 1 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Matrix" /> の第 1 行、第 1 列の値。既定値は 1 です。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
      <summary>この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 1 行、第 2 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Matrix" /> の第 1 行、第 2 列の値。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
      <summary>この <see cref="T:System.Windows.Media.Matrix" /> の第 2 行、第 1 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Matrix" /> の第 2 行、第 1 列の値。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
      <summary>この <see cref="T:System.Windows.Media.Matrix" /> の第 2 行、第 2 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 2 行、第 2 列の値。既定値は 1 です。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
      <summary>この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 3 行、第 1 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 3 行、第 1 列の値。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
      <summary>この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 3 行、第 2 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 3 行、第 2 列の値。既定値は 0 です。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>指定した 2 つの <see cref="T:System.Windows.Media.Matrix" /> 構造体が同一かどうかを判断します。</summary>
      <returns>
        <paramref name="matrix1" /> と <paramref name="matrix2" /> が同一である場合は true。それ以外の場合は false。</returns>
      <param name="matrix1">最初に比較する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</param>
      <param name="matrix2">2 番目に比較する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary>指定した 2 つの <see cref="T:System.Windows.Media.Matrix" /> 構造体が異なるかどうかを判断します。</summary>
      <returns>
        <paramref name="matrix1" /> と <paramref name="matrix2" /> が異なる場合は true。それ以外の場合は false。</returns>
      <param name="matrix1">最初に比較する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</param>
      <param name="matrix2">2 番目に比較する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>このメンバーの説明については、<see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> のトピックを参照してください。</summary>
      <returns>指定した書式で現在のインスタンスの値を格納する文字列。</returns>
      <param name="format">使用する書式を指定する文字列。またはIFormattable 実装の型に対して定義されている既定の書式を使用する場合は、null。</param>
      <param name="provider">値の書式設定に使用する IFormatProvider。またはオペレーティング システムの現在のロケール設定から数値の書式情報を取得する場合は null。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
      <summary>この <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="T:System.String" /> 形式を作成します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Matrix" /> の <see cref="P:System.Windows.Media.Matrix.M11" />、<see cref="P:System.Windows.Media.Matrix.M12" />、<see cref="P:System.Windows.Media.Matrix.M21" />、<see cref="P:System.Windows.Media.Matrix.M22" />、<see cref="P:System.Windows.Media.Matrix.OffsetX" />、および <see cref="P:System.Windows.Media.Matrix.OffsetY" /> の各値を格納する <see cref="T:System.String" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
      <summary>カルチャ固有の書式設定情報を使用して、この <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="T:System.String" /> 表現を作成します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Matrix" /> の <see cref="P:System.Windows.Media.Matrix.M11" />、<see cref="P:System.Windows.Media.Matrix.M12" />、<see cref="P:System.Windows.Media.Matrix.M21" />、<see cref="P:System.Windows.Media.Matrix.M22" />、<see cref="P:System.Windows.Media.Matrix.OffsetX" />、および <see cref="P:System.Windows.Media.Matrix.OffsetY" /> の各値を格納する <see cref="T:System.String" />。</returns>
      <param name="provider">カルチャ固有の書式設定情報。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
      <summary>指定した点を <see cref="T:System.Windows.Media.Matrix" /> で変換し、その結果を返します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Matrix" /> によって <paramref name="point" /> を変換した結果。</returns>
      <param name="point">変換対象のポイント。</param>
    </member>
    <member name="T:System.Windows.Media.Matrix3DProjection">
      <summary>オブジェクトに <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> を適用できるようにします。</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix3DProjection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Matrix3DProjection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Matrix3DProjection.ProjectionMatrix">
      <summary>オブジェクトに適用された射影に使用される <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> を取得または設定します。</summary>
      <returns>このオブジェクトに適用されるプロジェクションに使用する <see cref="T:System.Windows.Media.Media3D.Matrix3D" />。</returns>
    </member>
    <member name="F:System.Windows.Media.Matrix3DProjection.ProjectionMatrixProperty">
      <summary>
        <see cref="P:System.Windows.Media.Matrix3DProjection.ProjectionMatrix" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Matrix3DProjection.ProjectionMatrix" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.MatrixTransform">
      <summary>2 次元の平面でオブジェクトまたは座標系を操作するのに使用する任意のアフィン変換マトリックスを作成します。</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixTransform.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.MatrixTransform" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.MatrixTransform.Matrix">
      <summary>この変換を定義する <see cref="T:System.Windows.Media.Matrix" /> を取得または設定します。</summary>
      <returns>この変換を定義する <see cref="T:System.Windows.Media.Matrix" /> 構造体。既定値は ID <see cref="T:System.Windows.Media.Matrix" /> です。恒等行列では、係数 [1,1]、[2,2]、および [3,3] の値は 1 であり、残りの係数の値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.MatrixTransform.MatrixProperty">
      <summary>
        <see cref="P:System.Windows.Media.MatrixTransform.Matrix" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.MatrixTransform.Matrix" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.MediaElementState">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> オブジェクトの状態を定義します。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Closed">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> にはメディアは含まれません。<see cref="T:System.Windows.Controls.MediaElement" /> は透明なフレームを表示します。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Opening">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> は、その <see cref="P:System.Windows.Controls.MediaElement.Source" /> プロパティで指定された URI (Uniform Resource Identifier) を確認して開こうとしています。この状態のとき、<see cref="T:System.Windows.Controls.MediaElement" /> は受け取った <see cref="M:System.Windows.Controls.MediaElement.Play" />、<see cref="M:System.Windows.Controls.MediaElement.Pause" />、<see cref="M:System.Windows.Controls.MediaElement.Stop" /> の各コマンドを待ち行列に入れ、メディアが正常に開いた場合にそれらを処理します。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Individualizing">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> は、正しい個別化コンポーネント (DRM で保護されたコンテンツを再生する場合にのみ適用可能) がユーザーのコンピューターにインストールされていることを確認するプロセスです。詳細については、「[8ab5fa87-de57-4c49-b1b9-dfccd4f43ce7]」を参照してください。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.AcquiringLicense">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> は、DRM で保護されたコンテンツの再生に必要なライセンスを取得しています。<see cref="M:System.Windows.Media.LicenseAcquirer.OnAcquireLicense(System.IO.Stream,System.Uri)" /> が呼び出されると、<see cref="T:System.Windows.Controls.MediaElement" /> は、<see cref="M:System.Windows.Media.LicenseAcquirer.SetLicenseResponse(System.IO.Stream)" /> が呼び出されるまでこの状態のままになります。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Buffering">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> は、再生するメディアを読み込みます。その <see cref="P:System.Windows.Controls.MediaElement.Position" /> はこの状態の間は次に進みません。<see cref="T:System.Windows.Controls.MediaElement" /> が既にビデオを再生していた場合、最後の表示フレームが引き続き表示されます。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Playing">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> は、そのソース プロパティで指定されたメディアを再生中です。その <see cref="P:System.Windows.Controls.MediaElement.Position" /> は進行します。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Paused">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> は、その <see cref="P:System.Windows.Controls.MediaElement.Position" /> を進行させません。<see cref="T:System.Windows.Controls.MediaElement" /> がビデオを再生していた場合、引き続き現在のフレームを表示します。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaElementState.Stopped">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> にはメディアがありますが、再生中ではありません (一時停止しています)。その <see cref="P:System.Windows.Controls.MediaElement.Position" /> は 0 で次に進みません。読み込まれたメディアがビデオの場合、<see cref="T:System.Windows.Controls.MediaElement" /> は最初のフレームを表示します。</summary>
    </member>
    <member name="T:System.Windows.Media.MediaSampleAttributeKeys">
      <summary>この列挙型は、メディア サンプルの属性のディクショナリで使用されます。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.KeyFrameFlag">
      <summary>ビデオ サンプルの場合、この属性が存在するということは、サンプルがキー フレームであることを示します。
    Windows Phone
   オーディオ サンプルの場合、この属性が存在するということは、不連続であることを示します (Windows Phone のみ)。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.DRMInitializationVector">
      <summary>解読に必要なメディア サンプルに関するデータを提供します。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.FrameWidth">
      <summary>ビデオ フレームの幅。詳細については、「解説」を参照してください。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.FrameHeight">
      <summary>ビデオ フレームの高さ。詳細については、「解説」を参照してください。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.DRMSubSampleMapping">
      <summary>暗号化するメディア サンプルの位置に関するデータを提供します。詳細については、「解説」を参照してください。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.DRMKeyIdentifier">
      <summary>メディア サンプルを復号化するためのキー識別子に関するデータを提供します。詳細については、「解説」を参照してください。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSampleAttributeKeys.DRMAlgorithmID">
      <summary>メディア サンプルを復号化するためのアルゴリズムに関するデータを提供します。詳細については、「解説」を参照してください。</summary>
    </member>
    <member name="T:System.Windows.Media.MediaSourceAttributesKeys">
      <summary>メディア ソースを示します。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSourceAttributesKeys.CanSeek">
      <summary>このソースがシークできるかどうかを示すブール値。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSourceAttributesKeys.Duration">
      <summary>100 ナノ秒増分での整数として示されたこのソースの再生時間の長さ。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSourceAttributesKeys.DRMHeader">
      <summary>パイプラインの正常な初期化および復号化に必要な DRM データ。これは文字列で表現された DRM ヘッダーです。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaSourceAttributesKeys.AllowedSourceIDs">
      <summary>アプリケーションが使用できる制限されたリソースの ID のリスト。</summary>
    </member>
    <member name="T:System.Windows.Media.MediaStreamAttributeKeys">
      <summary>この列挙型は、メディア ストリームの属性のディクショナリで使用されます。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamAttributeKeys.CodecPrivateData">
      <summary>パイプラインの正常な初期化および描画に必要なコーデックに関するデータ。ビデオの場合、これはヘッダー情報です。オーディオの場合は、Base16 でエンコードされた WaveFormatEx 構造体です。CodecPrivateDate の詳細については、「[f09252ad-83da-486b-b8cf-99f11a15cc4d]」を参照してください。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamAttributeKeys.VideoFourCC">
      <summary>ビデオ コーデックのインスタンス化に必要なデータ。FourCC とも呼ばれる 4 文字の値です。VideoFourCC CodecPrivateDate の詳細については、「[f09252ad-83da-486b-b8cf-99f11a15cc4d]」を参照してください。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamAttributeKeys.Width">
      <summary>このストリームに対して報告されるビデオ フレームの最大の幅と、それをレンダリングする既定の幅です。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamAttributeKeys.Height">
      <summary>このストリームに対して報告されるビデオ フレームの最大の高さと、それをレンダリングする既定の幅です。</summary>
    </member>
    <member name="T:System.Windows.Media.MediaStreamDescription">
      <summary>このクラスは、<see cref="T:System.Windows.Controls.MediaElement" /> および基になるメディア パイプラインの初期化に必要なメディア ストリームの詳細情報を記述します。</summary>
    </member>
    <member name="M:System.Windows.Media.MediaStreamDescription.#ctor(System.Windows.Media.MediaStreamType,System.Collections.Generic.IDictionary{System.Windows.Media.MediaStreamAttributeKeys,System.String})">
      <summary>値を指定して、<see cref="T:System.Windows.Media.MediaStreamDescription" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">列挙の値でオーディオまたはビデオです。</param>
      <param name="mediaStreamAttributes">メディア ストリーム全体の他の属性について記述しているペアのコレクション。</param>
      <exception cref="T:System.InvalidOperationException">指定した <paramref name="type" /> はオーディオまたはビデオではありません。</exception>
    </member>
    <member name="P:System.Windows.Media.MediaStreamDescription.MediaAttributes">
      <summary>メディア ストリームに関する属性のコレクションを取得します。このコレクションには、メディア パイプラインと <see cref="T:System.Windows.Controls.MediaElement" /> の初期化に使用される属性のみが格納されます。</summary>
      <returns>メディア ストリームに関する属性のコレクション。既定値は、Empty IDictionary&lt;MediaStreamAttributeKeys, string&gt; です。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamDescription.StreamId">
      <summary>記述中のストリームのストリーム ID を取得します。</summary>
      <returns>記述中のストリームのストリーム ID。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamDescription.Type">
      <summary>記述対象のストリームの種類 (<see cref="F:System.Windows.Media.MediaStreamType.Audio" /> または <see cref="F:System.Windows.Media.MediaStreamType.Video" />) を取得します。</summary>
      <returns>記述中のストリームの種類 (<see cref="F:System.Windows.Media.MediaStreamType.Audio" /> または <see cref="F:System.Windows.Media.MediaStreamType.Video" />) を取得します。既定値は <see cref="F:System.Windows.Media.MediaStreamType.Video" /> です。</returns>
    </member>
    <member name="T:System.Windows.Media.MediaStreamSample">
      <summary>このクラスは、<see cref="T:System.Windows.Controls.MediaElement" /> および基になるメディア パイプラインがサンプルを描画できるようにするためのメディア サンプルの詳細情報を記述します。</summary>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSample.#ctor(System.Windows.Media.MediaStreamDescription,System.IO.Stream,System.Int64,System.Int64,System.Int64,System.Collections.Generic.IDictionary{System.Windows.Media.MediaSampleAttributeKeys,System.String})">
      <summary>
        <see cref="T:System.Windows.Media.MediaStreamSample" /> クラスの新しいインスタンスを生成します。</summary>
      <param name="mediaStreamDescription">このサンプルがプルされた元のストリームの説明。</param>
      <param name="stream">目的のメディア サンプルが含まれているストリーム。ストリームの末尾を報告する場合は null に設定されます。</param>
      <param name="offset">ストリーム内で実際のサンプル データが開始される位置までのオフセット。</param>
      <param name="count">サンプル データを構成するバイト数。</param>
      <param name="timestamp">メディア ファイルの先頭から、このサンプルをレンダリングするまでの時間 (100 ナノ秒の増分で表す)。</param>
      <param name="attributes">メディア サンプルの他の属性を記述するペアのコレクション。</param>
      <exception cref="T:System.InvalidOperationException">1 つまたは複数のパラメーターが無効です。</exception>
      <exception cref="T:System.ArgumentException">渡された DRMAlgorithmID 値が無効でした。</exception>
      <exception cref="T:System.ArgumentException">DRMKeyIdentifier が <see cref="F:System.Guid.Empty" /> 以外の値に設定されていた間に DRMAlgorithmID が "Unprotected" に設定されていました。</exception>
      <exception cref="T:System.ArgumentException">DRMAlgorithmID が設定されていませんでしたが、DRMKeyIdentifier が <see cref="F:System.Guid.Empty" /> 以外の値に設定されていました。</exception>
      <exception cref="T:System.ArgumentException">DRMKeyIdentifier は、正しい形式の値に設定されていませんでした。</exception>
      <exception cref="T:System.ArgumentException">DRMKeyIdentifier は、設定されていなかったか <see cref="F:System.Guid.Empty" /> に設定されていましたが、DRMAlgorithmID が指定され、"Unprotected" には設定されていませんでした。</exception>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSample.#ctor(System.Windows.Media.MediaStreamDescription,System.IO.Stream,System.Int64,System.Int64,System.Int64,System.Int64,System.Collections.Generic.IDictionary{System.Windows.Media.MediaSampleAttributeKeys,System.String})">
      <summary>
        <see cref="T:System.Windows.Media.MediaStreamSample" /> クラスの新しいインスタンスを生成します。</summary>
      <param name="mediaStreamDescription">このサンプルがプルされた元のストリームの説明。</param>
      <param name="stream">目的のメディア サンプルが含まれているストリーム。ストリームの末尾を報告する場合は null に設定されます。</param>
      <param name="offset">ストリーム内で実際のサンプル データが開始される位置までのオフセット。</param>
      <param name="count">サンプル データを構成するバイト数。</param>
      <param name="timestamp">メディア ファイルの先頭から、このサンプルをレンダリングするまでの時間 (100 ナノ秒の増分で表す)。</param>
      <param name="duration">サンプルの継続時間。</param>
      <param name="attributes">メディア サンプルの他の属性を記述するペアのコレクション。</param>
      <exception cref="T:System.InvalidOperationException">1 つまたは複数のパラメーターが無効です。</exception>
      <exception cref="T:System.ArgumentException">渡された DRMAlgorithmID 値が無効でした。</exception>
      <exception cref="T:System.ArgumentException">DRMKeyIdentifier が <see cref="F:System.Guid.Empty" /> 以外の値に設定されていた間に DRMAlgorithmID が "Unprotected" に設定されていました。</exception>
      <exception cref="T:System.ArgumentException">DRMAlgorithmID が設定されていませんでしたが、DRMKeyIdentifier が <see cref="F:System.Guid.Empty" /> 以外の値に設定されていました。</exception>
      <exception cref="T:System.ArgumentException">DRMKeyIdentifier は、正しい形式の値に設定されていませんでした。</exception>
      <exception cref="T:System.ArgumentException">DRMKeyIdentifier は、設定されていなかったか <see cref="F:System.Guid.Empty" /> に設定されていましたが、DRMAlgorithmID が指定され、"Unprotected" には設定されていませんでした。</exception>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Attributes">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> およびメディア パイプラインに対してこのサンプルの描画方法を指定する属性のコレクションを取得します。</summary>
      <returns>このサンプルの表示方法について <see cref="T:System.Windows.Controls.MediaElement" /> およびメディア パイプラインに記述する属性のコレクション。既定値は、Empty IDictionary&lt;MediaSampleAttributeKeys, string&gt; です。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Count">
      <summary>サンプルが終了するストリームへのバイト数を取得します。</summary>
      <returns>サンプルが終了するストリームへのバイト数。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Duration">
      <summary>サンプルの長さを取得します。</summary>
      <returns>サンプルの継続時間 (10 ナノ秒単位)。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.MediaStreamDescription">
      <summary>このサンプルが由来するストリームについての記述を取得します。</summary>
      <returns>このサンプルが由来するストリームについての記述。既定値は null です。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Offset">
      <summary>サンプルの取得元ストリームにおけるバイト オフセットを取得します。サンプル ストリームにヘッダーも含まれている場合は、実際のサンプルの開始点に設定されます。</summary>
      <returns>サンプルが由来するストリームへのバイト オフセット。既定値は 0 です。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Stream">
      <summary>サンプルを表すデータ ストリームを取得します。</summary>
      <returns>サンプルを表すデータのストリーム。既定値は null です。</returns>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSample.Timestamp">
      <summary>サンプルが 100 ナノ秒単位の測定値として表示される時間を取得します。</summary>
      <returns>サンプルが 100 ナノ秒単位の測定値として表示される時間。既定値は 0 です。</returns>
    </member>
    <member name="T:System.Windows.Media.MediaStreamSource">
      <summary>
        <see cref="T:System.Windows.Media.MediaStreamSource" /> は、メディア パイプラインにメディア サンプルを直接提供し、主として Windows Phone によってネイティブにサポートされていないコンテナー形式を <see cref="T:System.Windows.Controls.MediaElement" /> が使用できるようにするために使用されます。</summary>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.MediaStreamSource" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSource.AudioBufferLength">
      <summary>オーディオ バッファーの長さを取得または設定します。</summary>
      <returns>オーディオ バッファーのミリ秒単位の長さ。有効な値の範囲は 15 ～ 1000 です。既定値は 1000 で 1 秒のバッファーです。</returns>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.BeginDrmSetupDecryptor(System.Byte[],System.Guid)">
      <summary>新しい復号化を作成するプロセスを開始します。</summary>
      <param name="DrmKeyRotationData">復号化の設定に必要な DRM ライセンス データを格納するバイト配列。<paramref name="DrmKeyRotationData" /> はオプションです。必須ではない場合は null を渡します。</param>
      <param name="KeyId">作成する復号化の KeyID。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="KeyId" /> は <see cref="F:System.Guid.Empty" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Media.MediaStreamSource" /> は <see cref="E:System.Windows.Controls.MediaElement.MediaOpened" /> 状態になっていません。</exception>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.BeginDrmSetupDecryptor(System.Byte[],System.Guid,System.Object)">
      <summary>新しい復号化を作成するプロセスを開始します。</summary>
      <param name="DrmKeyRotationData">復号化の設定に必要な DRM ライセンス データを格納するバイト配列。<paramref name="DrmKeyRotationData" /> はオプションです。必須ではない場合は null を渡します。</param>
      <param name="KeyId">作成する復号化の KeyID。</param>
      <param name="userState">イベント引数で <see cref="E:System.Windows.Media.MediaStreamSource.DrmSetupDecryptorCompleted" /> イベントに渡されるユーザー状態。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="KeyId" /> は <see cref="F:System.Guid.Empty" /> です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Windows.Media.MediaStreamSource" /> は <see cref="E:System.Windows.Controls.MediaElement.MediaOpened" /> 状態になっていません。</exception>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.CloseMedia">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> は、通常のシャットダウン時またはエラー発生時にこのメソッドを呼び出すことができます。これにより、開発者は <see cref="T:System.Windows.Media.MediaStreamSource" /> の必要なクリーンアップを実行できます。</summary>
    </member>
    <member name="E:System.Windows.Media.MediaStreamSource.DrmSetupDecryptorCompleted">
      <summary>セットアップが成功したか失敗したかに関係なく、<see cref="M:System.Windows.Media.MediaStreamSource.BeginDrmSetupDecryptor(System.Byte[],System.Guid)" /> の最初の呼び出しで例外がスローされなかった場合は、<see cref="E:System.Windows.Media.MediaStreamSource.DrmSetupDecryptorCompleted" /> イベントが完了すると発生します。</summary>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ErrorOccurred(System.String)">
      <summary>このメソッドは、<see cref="T:System.Windows.Media.MediaStreamSource" /> で回復不能なエラーが発生したときに、開発者によって呼び出されます。これにより <see cref="E:System.Windows.Controls.MediaElement.MediaFailed" /> イベントが発生します。</summary>
      <param name="errorDescription">エラーを記述する文字列。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.GetDiagnosticAsync(System.Windows.Media.MediaStreamSourceDiagnosticKind)">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> はこのメソッドを呼び出して <see cref="T:System.Windows.Media.MediaStreamSource" /> に関する情報を要求します。開発者は <see cref="M:System.Windows.Media.MediaStreamSource.ReportGetDiagnosticCompleted(System.Windows.Media.MediaStreamSourceDiagnosticKind,System.Int64)" /> を呼び出すことによってこのメソッドに応答します。</summary>
      <param name="diagnosticKind">必要な情報の種類を表す <see cref="T:System.Windows.Media.MediaStreamSourceDiagnosticKind" /> 列挙体のメンバー。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.GetSampleAsync(System.Windows.Media.MediaStreamType)">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> は、このメソッドを呼び出して、メディア パイプラインの要求されたストリーム型の次の <see cref="T:System.Windows.Media.MediaStreamSample" /> を準備するように <see cref="T:System.Windows.Media.MediaStreamSource" /> に要求します。開発者は、<see cref="M:System.Windows.Media.MediaStreamSource.ReportGetSampleCompleted(System.Windows.Media.MediaStreamSample)" /> または <see cref="M:System.Windows.Media.MediaStreamSource.ReportGetSampleProgress(System.Double)" /> を呼び出すことによって、このメソッドに応答できます。</summary>
      <param name="mediaStreamType">次のサンプルの取得元ストリームに関する記述。<see cref="F:System.Windows.Media.MediaStreamType.Audio" /> または <see cref="F:System.Windows.Media.MediaStreamType.Video" /> です。</param>
    </member>
    <member name="P:System.Windows.Media.MediaStreamSource.MaxDecryptorCount">
      <summary>復号化機能バッファーに格納できる復号化機能の最大数を取得します。</summary>
      <returns>復号化機能バッファーに格納できる復号化機能の最大数。</returns>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.OpenMediaAsync">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> は、このメソッドを呼び出して、メディアを開くよう <see cref="T:System.Windows.Media.MediaStreamSource" /> に要求します。</summary>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportGetDiagnosticCompleted(System.Windows.Media.MediaStreamSourceDiagnosticKind,System.Int64)">
      <summary>開発者は、<see cref="M:System.Windows.Media.MediaStreamSource.GetDiagnosticAsync(System.Windows.Media.MediaStreamSourceDiagnosticKind)" /> への応答でこのメソッドを呼び出して、要求された診断情報を <see cref="T:System.Windows.Controls.MediaElement" /> に渡します。</summary>
      <param name="diagnosticKind">値を返している診断の種類。</param>
      <param name="diagnosticValue">返された診断に関連付けられている値。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportGetSampleCompleted(System.Windows.Media.MediaStreamSample)">
      <summary>開発者は、<see cref="M:System.Windows.Media.MediaStreamSource.GetSampleAsync(System.Windows.Media.MediaStreamType)" /> に応答してこのメソッドを呼び出し、レンダリングする次のメディア サンプルを <see cref="T:System.Windows.Controls.MediaElement" /> に渡すか、またはストリームの終了を報告します。</summary>
      <param name="mediaStreamSample">このサンプルの取得元のメディア ストリームに関する説明。<see cref="P:System.Windows.Media.MediaStreamSample.Stream" /> プロパティを null にして <see cref="T:System.Windows.Media.MediaStreamSample" /> オブジェクトを渡すと、ストリームが終了したことを示します。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Windows.Media.MediaStreamSource" /> は保護された再生用に設定されていず、サンプルの DRMAlgorithmID が設定されているので、DRMAlgorithmID が "Unprotected" である場合を除くすべてのケースに対して例外がスローされます。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Windows.Media.MediaStreamSample" /> は保護された再生用に設定されていず、サンプルの DRMKeyIdentifier が設定されているので、<see cref="T:System.Guid" /> が <see cref="F:System.Guid.Empty" /> である場合を除くすべてのケースに対して例外がスローされます。</exception>
      <exception cref="T:System.ArgumentException">入力 <see cref="T:System.Windows.Media.MediaStreamSample" /> パラメーターの DRMKeyIdentifier 属性の値は、<see cref="F:System.Guid.Empty" /> に設定されます。または、次の条件が当てはまります。DRMKeyIdentifier に値が設定されます (<see cref="F:System.Guid.Empty" /> は設定されません)。<see cref="T:System.Windows.Media.MediaStreamSource" /> はストリーム内ライセンス用に設定されます。</exception>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportGetSampleProgress(System.Double)">
      <summary>開発者は、<see cref="M:System.Windows.Media.MediaStreamSource.GetSampleAsync(System.Windows.Media.MediaStreamType)" /> に応答してこのメソッドを呼び出し、<see cref="T:System.Windows.Media.MediaStreamSource" /> はバッファーを再充てんし、<see cref="T:System.Windows.Controls.MediaElement" /> が <see cref="F:System.Windows.Media.MediaElementState.Buffering" /> 状態に移行できるようにする必要があるために、サンプルをすぐに返さないことを <see cref="T:System.Windows.Controls.MediaElement" /> に通知します。</summary>
      <param name="bufferingProgress">バッファーが充てんされた割合を示す 0 から 1 までの値。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportOpenMediaCompleted(System.Collections.Generic.IDictionary{System.Windows.Media.MediaSourceAttributesKeys,System.String},System.Collections.Generic.IEnumerable{System.Windows.Media.MediaStreamDescription})">
      <summary>開発者は、<see cref="M:System.Windows.Media.MediaStreamSource.OpenMediaAsync" /> への応答でこのメソッドを呼び出して、<see cref="T:System.Windows.Media.MediaStreamSource" /> が開かれたことを <see cref="T:System.Windows.Controls.MediaElement" /> に通知し、格納しているストリームについての情報を提供します。</summary>
      <param name="mediaStreamAttributes">メディア ソース全体の機能を記述する属性のコレクション。現在サポートされている属性は、<see cref="T:System.Windows.Media.MediaSourceAttributesKeys" /> に一覧表記されています。</param>
      <param name="availableMediaStreams">コンテンツ内に含まれる各オーディオおよびビデオ ストリームの記述。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportSeekCompleted(System.Int64)">
      <summary>開発者は、<see cref="M:System.Windows.Media.MediaStreamSource.SeekAsync(System.Int64)" /> に応答してこのメソッドを呼び出し、<see cref="T:System.Windows.Media.MediaStreamSource" /> が要求された位置変更を終了したこと、および以降の <see cref="M:System.Windows.Media.MediaStreamSource.ReportGetSampleCompleted(System.Windows.Media.MediaStreamSample)" /> の呼び出しからはメディアのそのポイントからのサンプルが返ることを、<see cref="T:System.Windows.Controls.MediaElement" /> に通知します。</summary>
      <param name="timeSeekedTo">実際のシークが行われた 100 ナノ秒単位で表わされた時間。通常、これはメディア ファイルの先頭から計測されます。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.ReportSwitchMediaStreamCompleted(System.Windows.Media.MediaStreamDescription)">
      <summary> 開発者は、<see cref="M:System.Windows.Media.MediaStreamSource.SwitchMediaStreamAsync(System.Windows.Media.MediaStreamDescription)" /> への応答でこのメソッドを呼び出し、<see cref="T:System.Windows.Media.MediaStreamSource" /> が要求されたストリーム切り替えを完了したこと、および返されるサンプルが元のストリームではなく要求されたストリームからになることを、<see cref="T:System.Windows.Controls.MediaElement" /> に通知します。これは複数オーディオ ストリーム (たとえば言語トラック) 向けであり、アダプティブ ストリーミング向けではないことに注意してください。</summary>
      <param name="mediaStreamDescription">実際に切り替えられた後のストリームに関する記述。これは <see cref="M:System.Windows.Media.MediaStreamSource.SwitchMediaStreamAsync(System.Windows.Media.MediaStreamDescription)" /> によって要求されたストリームと同一です。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.SeekAsync(System.Int64)">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> は、このメソッドを呼び出して、指定した時間の前にランダムにアクセスできる最も近いポイントをシークするよう <see cref="T:System.Windows.Media.MediaStreamSource" /> に要求します。開発者は、<see cref="M:System.Windows.Media.MediaStreamSource.ReportSeekCompleted(System.Int64)" /> を呼び出し、将来の <see cref="M:System.Windows.Media.MediaStreamSource.ReportGetSampleCompleted(System.Windows.Media.MediaStreamSample)" /> の呼び出しでメディアのそのポイントからサンプルが返るようにすることによって、このメソッドに応答します。</summary>
      <param name="seekToTime">シークする 100 ナノ秒単位で表わされた時間。通常、これはメディア ファイルの先頭から計測されます。</param>
    </member>
    <member name="M:System.Windows.Media.MediaStreamSource.SwitchMediaStreamAsync(System.Windows.Media.MediaStreamDescription)">
      <summary>
        <see cref="T:System.Windows.Controls.MediaElement" /> でストリームの切り替えが要求されたときに呼び出されます。</summary>
      <param name="mediaStreamDescription">スイッチされるストリーム。</param>
    </member>
    <member name="T:System.Windows.Media.MediaStreamSourceDiagnosticKind">
      <summary>メディアが使用する診断情報の種類を示します。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamSourceDiagnosticKind.BufferLevelInMilliseconds">
      <summary>ダウンロード バッファーをミリ秒単位で表します。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamSourceDiagnosticKind.BufferLevelInBytes">
      <summary>ダウンロード バッファーをバイト単位で表します。</summary>
    </member>
    <member name="T:System.Windows.Media.MediaStreamType">
      <summary>ストリームの種類を指定する列挙型。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamType.Audio">
      <summary>ストリームはオーディオ ストリームです。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamType.Video">
      <summary>ストリームはビデオ ストリームです。</summary>
    </member>
    <member name="F:System.Windows.Media.MediaStreamType.Script">
      <summary>ストリームはスクリプト ストリームです。メモ: 現在、スクリプト コマンドは <see cref="T:System.Windows.Media.MediaStreamSource" /> ではサポートされていません。 </summary>
    </member>
    <member name="T:System.Windows.Media.MultiScaleTileSource">
      <summary>Deep Zoom イメージの読み込み元を指定するために使用します。</summary>
    </member>
    <member name="M:System.Windows.Media.MultiScaleTileSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定したパラメーターを使用して、<see cref="T:System.Windows.Media.MultiScaleTileSource" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="imageWidth">Deep Zoom イメージの幅。</param>
      <param name="imageHeight">Deep Zoom イメージの高さ。</param>
      <param name="tileWidth">Deep Zoom イメージのタイトルの幅。</param>
      <param name="tileHeight">Deep Zoom イメージのタイトルの高さ。</param>
      <param name="tileOverlap">Deep Zoom イメージのタイトルが重なる程度。</param>
      <exception cref="T:System.ArgumentException">1 つ以上の引数が無効です。</exception>
    </member>
    <member name="M:System.Windows.Media.MultiScaleTileSource.#ctor(System.Int64,System.Int64,System.Int32,System.Int32,System.Int32)">
      <summary>指定したパラメーターを使用して、<see cref="T:System.Windows.Media.MultiScaleTileSource" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="imageWidth">Deep Zoom イメージの幅。</param>
      <param name="imageHeight">Deep Zoom イメージの高さ。</param>
      <param name="tileWidth">Deep Zoom イメージのタイトルの幅。</param>
      <param name="tileHeight">Deep Zoom イメージのタイトルの高さ。</param>
      <param name="tileOverlap">Deep Zoom イメージのタイトルが重なる程度。</param>
      <exception cref="T:System.ArgumentException">1 つ以上の引数が無効です。</exception>
    </member>
    <member name="M:System.Windows.Media.MultiScaleTileSource.GetTileLayers(System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList{System.Object})">
      <summary>Deep Zoom イメージを構成する URI のコレクションを取得します。</summary>
      <param name="tileLevel">タイルのレベル。</param>
      <param name="tilePositionX">タイルの X 座標位置。</param>
      <param name="tilePositionY">タイルの Y 座標位置。</param>
      <param name="tileImageLayerSources">URI のコレクションである、タイル イメージ レイヤーのソース。</param>
    </member>
    <member name="M:System.Windows.Media.MultiScaleTileSource.InvalidateTileLayer(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定したタイル レイヤーを無効にします。</summary>
      <param name="level">タイル レベル。</param>
      <param name="tilePositionX">タイルの X 位置。</param>
      <param name="tilePositionY">タイルの Y 位置。</param>
      <param name="tileLayer">タイトルのレイヤー。</param>
    </member>
    <member name="P:System.Windows.Media.MultiScaleTileSource.TileBlendTime">
      <summary>タイルが利用可能になったときに新しいレベルのディテールをブレンドする時間量を取得または設定します。</summary>
      <returns>タイルが利用可能になったときに新しいレベルのディテールをブレンドする時間量。</returns>
    </member>
    <member name="T:System.Windows.Media.PathFigure">
      <summary>ジオメトリのサブセクション、つまり、1 つに接続された一連の 2 次元幾何学セグメントを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.PathFigure.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.PathFigure" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.PathFigure.IsClosed">
      <summary>この図の最初および最後のセグメントが接続されているかどうかを示す値を取得または設定します。</summary>
      <returns>図の最初および最後のセグメントが接続されている場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.IsClosedProperty">
      <summary>
        <see cref="P:System.Windows.Media.PathFigure.IsClosed" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PathFigure.IsClosed" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PathFigure.IsFilled">
      <summary>この <see cref="T:System.Windows.Media.PathFigure" /> が含まれる領域がヒット テスト、レンダリング、およびクリッピングに使用されるかどうかを示す値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.PathFigure" /> の包含領域がヒット テスト、レンダリング、およびクリッピングに使用される場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.IsFilledProperty">
      <summary>
        <see cref="P:System.Windows.Media.PathFigure.IsFilled" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PathFigure.IsFilled" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PathFigure.Segments">
      <summary>この <see cref="T:System.Windows.Media.PathFigure" /> オブジェクトの形状を定義するセグメントのコレクションを取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.PathFigure" /> オブジェクトの形状を定義するセグメントのコレクション。既定値は空のコレクションです。</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.SegmentsProperty">
      <summary>
        <see cref="P:System.Windows.Media.PathFigure.Segments" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PathFigure.Segments" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PathFigure.StartPoint">
      <summary>
        <see cref="T:System.Windows.Media.PathFigure" /> が始まる <see cref="T:System.Windows.Point" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.PathFigure" /> が始まる <see cref="T:System.Windows.Point" />。既定は値が 0,0 である <see cref="T:System.Windows.Point" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.PathFigure.StartPointProperty">
      <summary>
        <see cref="P:System.Windows.Media.PathFigure.StartPoint" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PathFigure.StartPoint" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.PathFigureCollection">
      <summary>
        <see cref="T:System.Windows.Media.PathGeometry" /> のジオメトリを集合的に構成する <see cref="T:System.Windows.Media.PathFigure" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.PathFigureCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.PathFigureCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.PathGeometry">
      <summary>円弧、曲線、楕円、線、および四角形で構成される複雑な形状を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.PathGeometry" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.PathGeometry.Figures">
      <summary>パスのコンテンツを記述する <see cref="T:System.Windows.Media.PathFigure" /> オブジェクトのコレクションを取得または設定します。</summary>
      <returns>パスのコンテンツを記述する <see cref="T:System.Windows.Media.PathFigure" /> オブジェクトのコレクション。各 <see cref="T:System.Windows.Media.PathFigure" /> が 1 つの形状を記述します。</returns>
    </member>
    <member name="F:System.Windows.Media.PathGeometry.FiguresProperty">
      <summary>
        <see cref="P:System.Windows.Media.PathGeometry.Figures" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PathGeometry.Figures" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PathGeometry.FillRule">
      <summary>
        <see cref="T:System.Windows.Media.PathGeometry" /> に含まれる交差する領域がどのように結合されるかを決定する値を、取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.PathGeometry" /> の交差する領域がどのように組み合わされるかを示す <see cref="T:System.Windows.Media.FillRule" /> 列挙値。既定値は、<see cref="F:System.Windows.Media.FillRule.EvenOdd" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.PathGeometry.FillRuleProperty">
      <summary>
        <see cref="P:System.Windows.Media.PathGeometry.FillRule" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PathGeometry.FillRule" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Media.PathGeometry.ToString">
      <summary>この <see cref="T:System.Windows.Media.PathGeometry" /> の文字列表現を返します。</summary>
      <returns>この <see cref="T:System.Windows.Media.PathGeometry" /> の文字列形式。</returns>
    </member>
    <member name="T:System.Windows.Media.PathSegment">
      <summary>
        <see cref="T:System.Windows.Media.PathFigure" /> オブジェクトのセグメントを表します。</summary>
    </member>
    <member name="T:System.Windows.Media.PathSegmentCollection">
      <summary>インデックスによって個別にアクセスできる <see cref="T:System.Windows.Media.PathSegment" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.PathSegmentCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.PathSegmentCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.PenLineCap">
      <summary>直線または線分の終点の形状を記述します。</summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Flat">
      <summary>直線の最後の点より先に延長しないキャップ。線キャップがない場合と同じです。</summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Square">
      <summary>高さが線の太さと等しく、長さが線の太さの半分に等しい四角形。</summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Round">
      <summary>直径が線の太さと等しい半円。</summary>
    </member>
    <member name="F:System.Windows.Media.PenLineCap.Triangle">
      <summary>線の太さが底辺の長さに等しい直角二等辺三角形。 </summary>
    </member>
    <member name="T:System.Windows.Media.PenLineJoin">
      <summary>2 つの直線または線分を結合する図形を記述します。</summary>
    </member>
    <member name="F:System.Windows.Media.PenLineJoin.Miter">
      <summary>通常の角度の頂点を使用する線結合。</summary>
    </member>
    <member name="F:System.Windows.Media.PenLineJoin.Bevel">
      <summary>傾斜の付いた頂点を使用する線結合。</summary>
    </member>
    <member name="F:System.Windows.Media.PenLineJoin.Round">
      <summary>丸い頂点を使用する線結合。 </summary>
    </member>
    <member name="T:System.Windows.Media.PixelFormatType">
      <summary>ビデオ形式の個々のピクセルのグラフィック形式をレポートする形式情報を記述します。</summary>
    </member>
    <member name="F:System.Windows.Media.PixelFormatType.Unknown">
      <summary>形式は不明です。</summary>
    </member>
    <member name="F:System.Windows.Media.PixelFormatType.Format32bppArgb">
      <summary>形式はピクセルごとに 32 ビットの色情報を使用し、アルファ、赤、青、緑のチャネルを使って色情報をレポートします。</summary>
    </member>
    <member name="F:System.Windows.Media.PixelFormatType.Format8bppGrayscale">
      <summary>この形式では、1 ピクセルあたり 8 ビットのグレー スケール カラーが使用されます。</summary>
    </member>
    <member name="T:System.Windows.Media.PlaneProjection">
      <summary>オブジェクトの遠近法での変換 (3D のような効果) を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.PlaneProjection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.PlaneProjection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.CenterOfRotationX">
      <summary>回転させるオブジェクトの回転の中心の x 座標を取得または設定します。</summary>
      <returns>回転するオブジェクトの回転の中心の X 座標。標準的な値は 0 ～ 1。0 はオブジェクトの 1 つのエッジに対応し、1 はもう 1 つのエッジに対応します。この範囲外の値を使用でき、回転の中心はそれに応じて移動します。既定は 0.5 (オブジェクトの中心) です。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.CenterOfRotationXProperty">
      <summary>
        <see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.CenterOfRotationY">
      <summary>回転するオブジェクトの回転の中心の Y 座標を取得または設定します。</summary>
      <returns>回転するオブジェクトの回転の中心の Y 座標。標準的な値は 0 ～ 1。0 はオブジェクトの 1 つのエッジに対応し、1 はもう 1 つのエッジに対応します。この範囲外の値を使用でき、回転の中心はそれに応じて移動します。既定は 0.5 (オブジェクトの中心) です。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.CenterOfRotationYProperty">
      <summary>
        <see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.CenterOfRotationZ">
      <summary>回転するオブジェクトの回転の中心の Z 座標を取得または設定します。</summary>
      <returns>回転するオブジェクトの回転の中心の Z 座標。既定値は 0 です。0 より大きい値はオブジェクトの面の外側の座標、マイナスの値はオブジェクトの面の背後の座標に対応します。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.CenterOfRotationZProperty">
      <summary>
        <see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationZ" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PlaneProjection.CenterOfRotationZ" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.GlobalOffsetX">
      <summary>画面の x 軸に沿ってオブジェクトを平行移動する際の距離を取得または設定します。</summary>
      <returns>オブジェクトが画面の X 軸に沿って変換された距離。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.GlobalOffsetXProperty">
      <summary>
        <see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.GlobalOffsetY">
      <summary>画面の y 軸に沿ってオブジェクトを平行移動する際の距離を取得または設定します。</summary>
      <returns>オブジェクトが画面の Y 軸に沿って変換された距離。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.GlobalOffsetYProperty">
      <summary>
        <see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.GlobalOffsetZ">
      <summary>オブジェクトが画面の Z 軸に沿って変換された距離を取得または設定します。</summary>
      <returns>オブジェクトが画面の Z 軸に沿って変換された距離。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.GlobalOffsetZProperty">
      <summary>
        <see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetZ" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PlaneProjection.GlobalOffsetZ" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.LocalOffsetX">
      <summary>オブジェクトの平面の x 軸に沿ってオブジェクトを平行移動する際の距離を取得または設定します。</summary>
      <returns>オブジェクトが面の X 軸に沿って変換された距離。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.LocalOffsetXProperty">
      <summary>
        <see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.LocalOffsetY">
      <summary>オブジェクトが面の Y 軸に沿って変換された距離を取得または設定します。</summary>
      <returns>オブジェクトが面の Y 軸に沿って変換された距離。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.LocalOffsetYProperty">
      <summary>
        <see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.LocalOffsetZ">
      <summary>オブジェクトが面の Z 軸に沿って変換された距離を取得または設定します。</summary>
      <returns>オブジェクトが面の Z 軸に沿って変換された距離。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.LocalOffsetZProperty">
      <summary>
        <see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetZ" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PlaneProjection.LocalOffsetZ" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.ProjectionMatrix">
      <summary>
        <see cref="T:System.Windows.Media.PlaneProjection" /> の射影行列を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.PlaneProjection" /> のプロジェクション マトリックス。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.ProjectionMatrixProperty">
      <summary>
        <see cref="P:System.Windows.Media.PlaneProjection.ProjectionMatrix" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PlaneProjection.ProjectionMatrix" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.RotationX">
      <summary>回転の X 軸の周りをオブジェクトが回転する角度を取得または設定します。</summary>
      <returns>回転の X 軸の周りをオブジェクトが回転する角度。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.RotationXProperty">
      <summary>
        <see cref="P:System.Windows.Media.PlaneProjection.RotationX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PlaneProjection.RotationX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.RotationY">
      <summary>回転の Y 軸の周りをオブジェクトが回転する角度を取得または設定します。</summary>
      <returns>回転の Y 軸の周りをオブジェクトが回転する角度。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.RotationYProperty">
      <summary>
        <see cref="P:System.Windows.Media.PlaneProjection.RotationY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PlaneProjection.RotationY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.PlaneProjection.RotationZ">
      <summary>回転の Z 軸の周りをオブジェクトが回転する角度を取得または設定します。</summary>
      <returns>回転の Z 軸の周りをオブジェクトが回転する角度。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.PlaneProjection.RotationZProperty">
      <summary>
        <see cref="P:System.Windows.Media.PlaneProjection.RotationZ" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PlaneProjection.RotationZ" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.PointCollection">
      <summary>インデックスによって個別にアクセスできる <see cref="T:System.Windows.Point" /> 値のコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.PointCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.PointCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.PolyBezierSegment">
      <summary>1 本以上の 3 次ベジエ曲線を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.PolyBezierSegment.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.PolyBezierSegment" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.PolyBezierSegment.Points">
      <summary>この <see cref="T:System.Windows.Media.PolyBezierSegment" /> オブジェクトを定義する <see cref="T:System.Windows.Media.PointCollection" /> を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.PolyBezierSegment" /> オブジェクトを定義する点のコレクション。</returns>
    </member>
    <member name="F:System.Windows.Media.PolyBezierSegment.PointsProperty">
      <summary>
        <see cref="P:System.Windows.Media.PolyBezierSegment.Points" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PolyBezierSegment.Points" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.PolyLineSegment">
      <summary>線分の終点を指定する各 <see cref="T:System.Windows.Point" /> を使用して、<see cref="T:System.Windows.Media.PointCollection" /> によって定義される線分のセットを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.PolyLineSegment.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.PolyLineSegment" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.PolyLineSegment.Points">
      <summary>この <see cref="T:System.Windows.Media.PolyLineSegment" /> オブジェクトを定義する <see cref="T:System.Windows.Point" /> 値のコレクションを取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.PolyLineSegment" /> オブジェクトを定義する点。</returns>
    </member>
    <member name="F:System.Windows.Media.PolyLineSegment.PointsProperty">
      <summary>
        <see cref="P:System.Windows.Media.PolyLineSegment.Points" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PolyLineSegment.Points" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.PolyQuadraticBezierSegment">
      <summary>一連の 2 次ベジエ セグメントを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.PolyQuadraticBezierSegment.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.PolyQuadraticBezierSegment" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.PolyQuadraticBezierSegment.Points">
      <summary>この <see cref="T:System.Windows.Media.PolyQuadraticBezierSegment" /> オブジェクトを定義する <see cref="T:System.Windows.Media.PointCollection" /> を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.PolyQuadraticBezierSegment" /> オブジェクトの形状を定義する点のコレクション。既定値は空のコレクションです。</returns>
    </member>
    <member name="F:System.Windows.Media.PolyQuadraticBezierSegment.PointsProperty">
      <summary>
        <see cref="P:System.Windows.Media.PolyQuadraticBezierSegment.Points" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.PolyQuadraticBezierSegment.Points" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Projection">
      <summary>遠近法での変換を使って 3D 空間でオブジェクトを変換する方法を記述する、プロジェクションのベース クラスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Media.Projection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Projection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.QuadraticBezierSegment">
      <summary>
        <see cref="T:System.Windows.Media.PathFigure" /> で 2 つの点の間の 2 次ベジエ曲線を作成します。</summary>
    </member>
    <member name="M:System.Windows.Media.QuadraticBezierSegment.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.QuadraticBezierSegment" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.QuadraticBezierSegment.Point1">
      <summary>曲線の制御点を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.QuadraticBezierSegment" /> の制御点。既定値は値が 0,0 である <see cref="T:System.Windows.Point" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.QuadraticBezierSegment.Point1Property">
      <summary>
        <see cref="P:System.Windows.Media.QuadraticBezierSegment.Point1" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.QuadraticBezierSegment.Point1" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.QuadraticBezierSegment.Point2">
      <summary>この <see cref="T:System.Windows.Media.QuadraticBezierSegment" /> の終点の <see cref="T:System.Windows.Point" /> を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.QuadraticBezierSegment" /> の終点。既定値は値が 0,0 である <see cref="T:System.Windows.Point" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.QuadraticBezierSegment.Point2Property">
      <summary>
        <see cref="P:System.Windows.Media.QuadraticBezierSegment.Point2" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.QuadraticBezierSegment.Point2" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.RadialGradientBrush">
      <summary>放射状グラデーションで領域を塗りつぶします。中心点はグラデーションの始点を定義し、円はグラデーションの終点を定義します。</summary>
    </member>
    <member name="M:System.Windows.Media.RadialGradientBrush.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.RadialGradientBrush" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.RadialGradientBrush.#ctor(System.Windows.Media.Color,System.Windows.Media.Color)">
      <summary>始点と終点の色を指定して、<see cref="T:System.Windows.Media.RadialGradientBrush" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="startColor">放射状グラデーションのフォーカス (<see cref="P:System.Windows.Media.RadialGradientBrush.GradientOrigin" />) の色の値。</param>
      <param name="endColor">放射状グラデーションの外縁の色の値。</param>
    </member>
    <member name="M:System.Windows.Media.RadialGradientBrush.#ctor(System.Windows.Media.GradientStopCollection)">
      <summary>指定したグラデーションの終了位置を持つ <see cref="T:System.Windows.Media.RadialGradientBrush" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="gradientStopCollection">このブラシに設定するグラデーションの終了位置。</param>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.Center">
      <summary>放射状グラデーションの外側の円の中心を取得または設定します。</summary>
      <returns>放射状グラデーションの中心にある 2 次元の点。既定値は値が 0.5,0.5 である <see cref="T:System.Windows.Point" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.CenterProperty">
      <summary>
        <see cref="P:System.Windows.Media.RadialGradientBrush.Center" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.RadialGradientBrush.Center" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.GradientOrigin">
      <summary>グラデーションの始点を定義する焦点の位置を取得または設定します。</summary>
      <returns>放射状グラデーションの中心にある 2 次元の点。既定値は値が 0.5,0.5 である <see cref="T:System.Windows.Point" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.GradientOriginProperty">
      <summary>
        <see cref="P:System.Windows.Media.RadialGradientBrush.GradientOrigin" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.RadialGradientBrush.GradientOrigin" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.RadiusX">
      <summary>放射状グラデーションの外側の円の横半径を取得または設定します。</summary>
      <returns>放射状グラデーションの外側の円の横半径。既定値は 0.5 です。</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.RadiusXProperty">
      <summary>
        <see cref="P:System.Windows.Media.RadialGradientBrush.RadiusX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.RadialGradientBrush.RadiusX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.RadialGradientBrush.RadiusY">
      <summary>放射状グラデーションの外側の円の縦半径を取得または設定します。</summary>
      <returns>放射状グラデーションの外円の垂直方向の半径。既定値は 0.5 です。</returns>
    </member>
    <member name="F:System.Windows.Media.RadialGradientBrush.RadiusYProperty">
      <summary>
        <see cref="P:System.Windows.Media.RadialGradientBrush.RadiusY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.RadialGradientBrush.RadiusY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.RectangleGeometry">
      <summary>2 次元の四角形ジオメトリを記述します。</summary>
    </member>
    <member name="M:System.Windows.Media.RectangleGeometry.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.RectangleGeometry" /> クラスの新しいインスタンスを初期化し、領域 0 の四角形を作成します。</summary>
    </member>
    <member name="P:System.Windows.Media.RectangleGeometry.RadiusX">
      <summary>長方形の角を丸めるのに使用される楕円の X 半径を取得または設定します。</summary>
      <returns>長方形ジオメトリの角を丸めるのに使用される楕円の X 半径。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.RectangleGeometry.RadiusXProperty">
      <summary>
        <see cref="P:System.Windows.Media.RectangleGeometry.RadiusX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.RectangleGeometry.RadiusX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.RectangleGeometry.RadiusY">
      <summary>四角形の角に丸みを付けるために使用される楕円の y 半径を取得または設定します。</summary>
      <returns>長方形ジオメトリの角を丸めるのに使用される楕円の Y 半径。既定値は、0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.RectangleGeometry.RadiusYProperty">
      <summary>
        <see cref="P:System.Windows.Media.RectangleGeometry.RadiusY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.RectangleGeometry.RadiusY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.RectangleGeometry.Rect">
      <summary>四角形のサイズを取得または設定します。</summary>
      <returns>長方形の位置とサイズについて記述する <see cref="T:System.Windows.Rect" /> 構造体。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.RectangleGeometry.RectProperty">
      <summary>
        <see cref="P:System.Windows.Media.RectangleGeometry.Rect" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.RectangleGeometry.Rect" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.RenderingEventArgs">
      <summary>
        <see cref="E:System.Windows.Media.CompositionTarget.Rendering" /> イベントのイベント データを提供します。</summary>
    </member>
    <member name="P:System.Windows.Media.RenderingEventArgs.RenderingTime">
      <summary>フレームが表示されたときの日付/時間を取得します。</summary>
      <returns>フレームが表示されたときの日付/時間。</returns>
    </member>
    <member name="T:System.Windows.Media.RotateTransform">
      <summary>2 次元 x-y 座標系内の指定された点を中心として、オブジェクトを時計回りに回転します。</summary>
    </member>
    <member name="M:System.Windows.Media.RotateTransform.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.RotateTransform" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.RotateTransform.Angle">
      <summary>角度 (°) の単位で時計回りの回転の角度を取得または設定します。</summary>
      <returns>時計回りの回転角度 (°)。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.RotateTransform.AngleProperty">
      <summary>
        <see cref="P:System.Windows.Media.RotateTransform.Angle" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.RotateTransform.Angle" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.RotateTransform.CenterX">
      <summary>回転の中心点の x 座標を取得または設定します。</summary>
      <returns>回転の中心の x 座標。既定値は、0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.RotateTransform.CenterXProperty">
      <summary>
        <see cref="P:System.Windows.Media.RotateTransform.CenterX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.RotateTransform.CenterX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.RotateTransform.CenterY">
      <summary>回転の中心点の y 座標を取得または設定します。</summary>
      <returns>回転の中心の y 座標。既定値は、0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.RotateTransform.CenterYProperty">
      <summary>
        <see cref="P:System.Windows.Media.RotateTransform.CenterY" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Media.SampleAllocationMode">
      <summary>Windows Phone でカメラ ビデオ バッファーを保持する方法を指定する値を提供します。</summary>
    </member>
    <member name="F:System.Windows.Media.SampleAllocationMode.NewBuffer">
      <summary>キャプチャされるサンプルごとに新しいバッファーが作成されます。これは、Windows Phone での動作と同じです。</summary>
    </member>
    <member name="F:System.Windows.Media.SampleAllocationMode.ReuseBuffer">
      <summary>サンプル キャプチャごとに新しいバッファーが作成されます。必要なガベージ コレクションの量が減るので、Windows Phone のパフォーマンスを向上させることができます。</summary>
    </member>
    <member name="T:System.Windows.Media.ScaleTransform">
      <summary>2 次元 x-y 座標系内のオブジェクトをスケーリングします。</summary>
    </member>
    <member name="M:System.Windows.Media.ScaleTransform.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.ScaleTransform" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.CenterX">
      <summary>この <see cref="T:System.Windows.Media.ScaleTransform" /> の中心点の x 座標を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.ScaleTransform" /> の中心点の x 座標。既定値は、0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.CenterXProperty">
      <summary>
        <see cref="P:System.Windows.Media.ScaleTransform.CenterX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.ScaleTransform.CenterX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.CenterY">
      <summary>この <see cref="T:System.Windows.Media.ScaleTransform" /> の中心点の y 座標を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.ScaleTransform" /> の中心点の y 座標。既定値は、0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.CenterYProperty">
      <summary>
        <see cref="P:System.Windows.Media.ScaleTransform.CenterY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.ScaleTransform.CenterY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.ScaleX">
      <summary>x 軸のスケール ファクターを取得または設定します。</summary>
      <returns>x 軸に沿ったスケール ファクター。既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.ScaleXProperty">
      <summary>
        <see cref="P:System.Windows.Media.ScaleTransform.ScaleX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.ScaleTransform.ScaleX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.ScaleTransform.ScaleY">
      <summary>y 軸のスケール ファクターを取得または設定します。</summary>
      <returns>y 軸に沿ったスケール ファクター。既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Media.ScaleTransform.ScaleYProperty">
      <summary>
        <see cref="P:System.Windows.Media.ScaleTransform.ScaleY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.ScaleTransform.ScaleY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.SkewTransform">
      <summary>2 次元傾斜を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.SkewTransform.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.SkewTransform" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.AngleX">
      <summary>y 軸から反時計回りに計測した x 軸の傾斜角度を取得または設定します。</summary>
      <returns>y 軸から反時計回りに計測した傾斜角度。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.AngleXProperty">
      <summary>
        <see cref="P:System.Windows.Media.SkewTransform.AngleX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.SkewTransform.AngleX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.AngleY">
      <summary>x 軸から反時計回りに計測した y 軸の傾斜角度を取得または設定します。</summary>
      <returns>x 軸から反時計回りに計測した傾斜角度。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.AngleYProperty">
      <summary>
        <see cref="P:System.Windows.Media.SkewTransform.AngleY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.SkewTransform.AngleY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.CenterX">
      <summary>変換の中心の x 座標を取得または設定します。</summary>
      <returns>変換の中心の x 座標。既定値は、0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.CenterXProperty">
      <summary>
        <see cref="P:System.Windows.Media.SkewTransform.CenterX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.SkewTransform.CenterX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.SkewTransform.CenterY">
      <summary>変換の中心の y 座標を取得または設定します。</summary>
      <returns>変換の中心の y 座標。既定値は、0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.SkewTransform.CenterYProperty">
      <summary>
        <see cref="P:System.Windows.Media.SkewTransform.CenterY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.SkewTransform.CenterY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.SolidColorBrush">
      <summary>純色で領域を塗りつぶします。</summary>
    </member>
    <member name="M:System.Windows.Media.SolidColorBrush.#ctor">
      <summary>色を指定せずに <see cref="T:System.Windows.Media.SolidColorBrush" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.SolidColorBrush.#ctor(System.Windows.Media.Color)">
      <summary>
        <see cref="T:System.Windows.Media.Color" /> を指定して、<see cref="T:System.Windows.Media.SolidColorBrush" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="color">ブラシに適用される色。</param>
    </member>
    <member name="P:System.Windows.Media.SolidColorBrush.Color">
      <summary>この <see cref="T:System.Windows.Media.SolidColorBrush" /> の色を取得または設定します。</summary>
      <returns>ブラシの色。既定値は <see cref="P:System.Windows.Media.Colors.Transparent" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.SolidColorBrush.ColorProperty">
      <summary>
        <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.SolidColorBrush.Color" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Stretch">
      <summary>コンテンツのサイズを変更して、割り当てられている領域を埋める方法を記述します。</summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.None">
      <summary>コンテンツの元のサイズを維持します。</summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.Fill">
      <summary>対象の領域を埋めるようにコンテンツのサイズを変更します。縦横比は保存されません。</summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.Uniform">
      <summary>コンテンツの本来の縦横比を維持しながら、対象の領域に収まるようにコンテンツのサイズを変更します。</summary>
    </member>
    <member name="F:System.Windows.Media.Stretch.UniformToFill">
      <summary>コンテンツの本来の縦横比を維持しながら、対象の領域が埋まるようにコンテンツのサイズを変更します。対象の四角形の縦横比がコンテンツと異なる場合は、対象の領域に合わせて元のコンテンツをクリッピングします。</summary>
    </member>
    <member name="T:System.Windows.Media.StyleSimulations">
      <summary>フォントのシミュレーション スタイルを記述します。</summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.None">
      <summary>フォントのスタイル シミュレーションはありません。</summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.BoldSimulation">
      <summary>太字のスタイル シミュレーション。</summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.ItalicSimulation">
      <summary>斜体のスタイル シミュレーション。</summary>
    </member>
    <member name="F:System.Windows.Media.StyleSimulations.BoldItalicSimulation">
      <summary>太字と斜体のスタイル シミュレーション。 </summary>
    </member>
    <member name="T:System.Windows.Media.SweepDirection">
      <summary>長円弧が描かれる方向を指定します。</summary>
    </member>
    <member name="F:System.Windows.Media.SweepDirection.Counterclockwise">
      <summary>円弧は反時計回り (マイナス角度) に描かれます。</summary>
    </member>
    <member name="F:System.Windows.Media.SweepDirection.Clockwise">
      <summary>円弧は時計回り (プラス角度) に描かれます。</summary>
    </member>
    <member name="T:System.Windows.Media.TextHintingMode">
      <summary>テキストの表示が最適な読みやすさまたはダイナミック表示かどうかを指定します。</summary>
    </member>
    <member name="F:System.Windows.Media.TextHintingMode.Fixed">
      <summary>既定のテキスト表示モード。</summary>
    </member>
    <member name="F:System.Windows.Media.TextHintingMode.Animated">
      <summary>テキスト表示の最適化をオフにします。</summary>
    </member>
    <member name="T:System.Windows.Media.TextOptions">
      <summary>テキストの表示動作を管理するオプションを提供します。これはさまざまな Windows Phone タイプの添付プロパティの使用で設定することができます。</summary>
    </member>
    <member name="P:System.Windows.Media.TextOptions.DisplayColorEmoji">
      <summary>カラーの絵文字が表示されるかどうかを示す値を取得または設定します。</summary>
      <returns>絵文字がカラーで表示される場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="F:System.Windows.Media.TextOptions.DisplayColorEmojiProperty">
      <summary>
        <see cref="P:System.Windows.Media.TextOptions.DisplayColorEmoji" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.TextOptions.DisplayColorEmoji" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetDisplayColorEmoji(System.Windows.FrameworkElement)">
      <summary>特定の要素の絵文字の表示色を取得します。</summary>
      <returns>指定した要素の <see cref="P:System.Windows.Media.TextOptions.DisplayColorEmoji" /> 値。</returns>
      <param name="target">絵文字を取得する特定の要素。</param>
    </member>
    <member name="M:System.Windows.Media.TextOptions.GetTextHintingMode(System.Windows.FrameworkElement)">
      <summary>この <see cref="T:System.Windows.FrameworkElement" /> の <see cref="T:System.Windows.Media.TextHintingMode" /> を取得します。</summary>
      <returns>この <see cref="T:System.Windows.FrameworkElement" /> の <see cref="T:System.Windows.Media.TextHintingMode" />。</returns>
      <param name="target">このプロパティの取得対象の <see cref="T:System.Windows.FrameworkElement" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetDisplayColorEmoji(System.Windows.FrameworkElement,System.Boolean)">
      <summary>指定したオブジェクトの <see cref="P:System.Windows.Media.TextOptions.DisplayColorEmoji" /> プロパティを設定します。</summary>
      <param name="target">対象オブジェクト。</param>
      <param name="displayColorEmoji">
        <paramref name="target" /> に設定する <see cref="P:System.Windows.Media.TextOptions.DisplayColorEmoji" /> プロパティ。</param>
    </member>
    <member name="M:System.Windows.Media.TextOptions.SetTextHintingMode(System.Windows.FrameworkElement,System.Windows.Media.TextHintingMode)">
      <summary>この <see cref="T:System.Windows.FrameworkElement" /> の <see cref="T:System.Windows.Media.TextHintingMode" /> を設定します。</summary>
      <param name="target">このプロパティの設定対象の <see cref="T:System.Windows.FrameworkElement" />。</param>
      <param name="textHintingMode">
        <see cref="T:System.Windows.FrameworkElement" /> を設定する <see cref="T:System.Windows.Media.TextHintingMode" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="target" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Media.TextOptions.TextHintingMode">
      <summary>テキストの表示が読みやすさまたはアニメーションに関して最適であるかどうかを示す値を取得または設定します。</summary>
      <returns>テキストの表示が読みやすさまたはアニメーションに関して最適であるかどうかを示す値。</returns>
    </member>
    <member name="F:System.Windows.Media.TextOptions.TextHintingModeProperty">
      <summary>
        <see cref="P:System.Windows.Media.TextOptions.TextHintingMode" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.TextOptions.TextHintingMode" /> 添付プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.TileBrush">
      <summary>領域を塗りつぶす方法を表す基本クラス。</summary>
    </member>
    <member name="M:System.Windows.Media.TileBrush.#ctor">
      <summary>派生クラスのコンストラクターによって呼び出されたときに、基本クラス値を初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.TileBrush.AlignmentX">
      <summary>
        <see cref="T:System.Windows.Media.TileBrush" /> 基本タイルのコンテンツの水平方向の配置を取得または設定します。</summary>
      <returns>基本タイルの <see cref="T:System.Windows.Media.TileBrush" /> コンテンツの水平位置を指定する値。既定値は <see cref="F:System.Windows.Media.AlignmentX.Center" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.AlignmentXProperty">
      <summary>
        <see cref="P:System.Windows.Media.TileBrush.AlignmentX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.TileBrush.AlignmentX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.TileBrush.AlignmentY">
      <summary>
        <see cref="T:System.Windows.Media.TileBrush" /> 基本タイルのコンテンツの垂直方向の配置を取得または設定します。</summary>
      <returns>基本タイルの <see cref="T:System.Windows.Media.TileBrush" /> コンテンツの垂直位置を指定する値。既定値は <see cref="F:System.Windows.Media.AlignmentY.Center" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.AlignmentYProperty">
      <summary>
        <see cref="P:System.Windows.Media.TileBrush.AlignmentY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.TileBrush.AlignmentY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.TileBrush.Stretch">
      <summary>タイルを塗りつぶすために、この <see cref="T:System.Windows.Media.TileBrush" /> のコンテンツを引き伸ばす方法を指定する値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.TileBrush" /> コンテンツを基本タイルに投影する方法を指定する値。既定値は <see cref="F:System.Windows.Media.Stretch.Fill" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.TileBrush.StretchProperty">
      <summary>
        <see cref="P:System.Windows.Media.TileBrush.Stretch" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.TileBrush.Stretch" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.TimelineMarker">
      <summary>メディア ファイルの特定の点に関連するメタデータを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.TimelineMarker.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.TimelineMarker" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.TimelineMarker.Text">
      <summary>
        <see cref="T:System.Windows.Media.TimelineMarker" /> のテキスト値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.TimelineMarker" /> のテキスト値。既定値は、空の文字列です。</returns>
    </member>
    <member name="F:System.Windows.Media.TimelineMarker.TextProperty">
      <summary>
        <see cref="P:System.Windows.Media.TimelineMarker.Text" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.TimelineMarker.Text" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.TimelineMarker.Time">
      <summary>
        <see cref="T:System.Windows.Media.TimelineMarker" /> に到達する時間を取得または設定します。</summary>
      <returns>TimelineMarker が到達する時間。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.TimelineMarker.TimeProperty">
      <summary>
        <see cref="P:System.Windows.Media.TimelineMarker.Time" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.TimelineMarker.Time" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.TimelineMarker.Type">
      <summary>
        <see cref="T:System.Windows.Media.TimelineMarker" /> のマーカーの種類を取得または設定します。</summary>
      <returns>この TimelineMarker の種類を記述する文字列。既定値は、空の文字列です。</returns>
    </member>
    <member name="F:System.Windows.Media.TimelineMarker.TypeProperty">
      <summary>
        <see cref="P:System.Windows.Media.TimelineMarker.Type" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.TimelineMarker.Type" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.TimelineMarkerCollection">
      <summary>インデックスによって個別にアクセスできる <see cref="T:System.Windows.Media.TimelineMarker" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.TimelineMarkerCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.TimelineMarkerCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.TimelineMarkerRoutedEventArgs">
      <summary>
        <see cref="E:System.Windows.Controls.MediaElement.MarkerReached" /> イベントのイベント データを提供します。</summary>
    </member>
    <member name="M:System.Windows.Media.TimelineMarkerRoutedEventArgs.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.TimelineMarkerRoutedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.TimelineMarkerRoutedEventArgs.Marker">
      <summary>このイベントを発生させた <see cref="T:System.Windows.Media.TimelineMarker" /> を取得します。</summary>
      <returns>このイベントをトリガーする <see cref="T:System.Windows.Media.TimelineMarker" />。</returns>
    </member>
    <member name="T:System.Windows.Media.TimelineMarkerRoutedEventHandler">
      <summary>タイムライン マーカーに関連するさまざまなルーティング イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベント ハンドラーがアタッチされているオブジェクト。</param>
      <param name="e">イベントのデータ。 </param>
    </member>
    <member name="T:System.Windows.Media.Transform">
      <summary>2 次元平面での変換を可能にする機能を定義します。</summary>
    </member>
    <member name="P:System.Windows.Media.Transform.Inverse">
      <summary>この変換の逆 (存在する場合) を取得します。</summary>
      <returns>この変換の逆 (存在する場合)。それ以外の場合は null。</returns>
    </member>
    <member name="M:System.Windows.Media.Transform.TransformBounds(System.Windows.Rect)">
      <summary>指定した境界ボックスを変換し、変換した境界ボックスが収まる大きさの軸平行境界ボックスを返します。</summary>
      <returns>変換した <paramref name="rect" /> を格納できる、最小の軸平行境界ボックス。</returns>
      <param name="rect">変換する境界ボックス。</param>
    </member>
    <member name="M:System.Windows.Media.Transform.TryTransform(System.Windows.Point,System.Windows.Point@)">
      <summary>指定したポイントの変換を試行し、変換が成功したかどうかを示す値を返します。</summary>
      <returns>
        <paramref name="inPoint" /> が変換された場合は true。それ以外の場合は false。</returns>
      <param name="inPoint">変換対象のポイント。</param>
      <param name="outPoint">
        <paramref name="inPoint" /> の変換結果。</param>
    </member>
    <member name="T:System.Windows.Media.TransformCollection">
      <summary>インデックスによって個別にアクセスできる <see cref="T:System.Windows.Media.Transform" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.TransformCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.TransformCollection" /> クラスの新しいインスタンスを初期化します。 </summary>
    </member>
    <member name="T:System.Windows.Media.TransformGroup">
      <summary>他の <see cref="T:System.Windows.Media.Transform" /> オブジェクトで構成される複合 <see cref="T:System.Windows.Media.Transform" /> を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.TransformGroup.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.TransformGroup" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.TransformGroup.Children">
      <summary>子 <see cref="T:System.Windows.Media.Transform" /> オブジェクトのコレクションを取得または設定します。</summary>
      <returns>子 <see cref="T:System.Windows.Media.Transform" /> オブジェクトのコレクション。既定値は空のコレクションです。</returns>
    </member>
    <member name="F:System.Windows.Media.TransformGroup.ChildrenProperty">
      <summary>
        <see cref="P:System.Windows.Media.TransformGroup.Children" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.TransformGroup.Children" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.TransformGroup.Value">
      <summary>この <see cref="T:System.Windows.Media.TransformGroup" /> で表される変換を記述する <see cref="T:System.Windows.Media.Matrix" /> 構造体を取得します。</summary>
      <returns>この <see cref="T:System.Windows.Media.TransformGroup" /> 内にある <see cref="T:System.Windows.Media.Transform" /> オブジェクトの複合。</returns>
    </member>
    <member name="T:System.Windows.Media.TranslateTransform">
      <summary>2 次元 x-y 座標系内のオブジェクトを変換 (移動) します。</summary>
    </member>
    <member name="M:System.Windows.Media.TranslateTransform.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.TranslateTransform" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.TranslateTransform.X">
      <summary>x 軸に沿って平行移動する距離を取得または設定します。</summary>
      <returns>x 軸に沿ってオブジェクトを平行移動 (移動) する距離 (ピクセル単位)。このプロパティは読み取られます/書き込まれます。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.TranslateTransform.XProperty">
      <summary>
        <see cref="P:System.Windows.Media.TranslateTransform.X" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.TranslateTransform.X" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.TranslateTransform.Y">
      <summary>y 軸に沿ってオブジェクトを平行移動 (移動) する距離を取得または設定します。</summary>
      <returns>y 軸に沿ってオブジェクトを平行移動 (移動) する距離 (ピクセル単位)。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.TranslateTransform.YProperty">
      <summary>
        <see cref="P:System.Windows.Media.TranslateTransform.Y" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.TranslateTransform.Y" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Typeface">
      <summary>
        <see cref="T:System.Windows.Media.FontFamily" />、<see cref="T:System.Windows.FontWeight" />、<see cref="T:System.Windows.FontStyle" />、および <see cref="T:System.Windows.FontStretch" /> の各クラスの組み合わせを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Typeface.TryGetGlyphTypeface(System.Windows.Media.GlyphTypeface@)">
      <summary>
        <see cref="T:System.Windows.Media.Typeface" /> に対応する <see cref="T:System.Windows.Media.GlyphTypeface" /> を取得します。</summary>
      <returns>out パラメーターが <see cref="T:System.Windows.Media.GlyphTypeface" /> オブジェクトに設定されている場合は true、それ以外の場合は false。</returns>
      <param name="glyphTypeface">この書体に対応する <see cref="T:System.Windows.Media.GlyphTypeface" /> オブジェクト、または書体が複合フォントで構成されている場合は null 参照 (Visual Basic では Nothing)。</param>
    </member>
    <member name="T:System.Windows.Media.VideoBrush">
      <summary>領域をビデオ コンテンツでペイントします。</summary>
    </member>
    <member name="M:System.Windows.Media.VideoBrush.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.VideoBrush" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.VideoBrush.SetSource(System.Windows.Controls.MediaElement)">
      <summary>仲介役となる <see cref="T:System.Windows.Media.VideoBrush" /> コントロールのメディア ファイル ソースを使用して、<see cref="T:System.Windows.Controls.MediaElement" /> のソースを設定します。</summary>
      <param name="source">
        <see cref="T:System.Windows.Media.VideoBrush" /> のソースとして使用される仲介役の <see cref="T:System.Windows.Controls.MediaElement" /> コントロール。</param>
    </member>
    <member name="M:System.Windows.Media.VideoBrush.SetSource(System.Windows.Media.CaptureSource)">
      <summary>ビデオ キャプチャ ソースを使用して、<see cref="T:System.Windows.Media.VideoBrush" /> のソースを設定します。</summary>
      <param name="source">デバイスのカメラに対応する <see cref="T:System.Windows.Media.CaptureSource" />。</param>
    </member>
    <member name="P:System.Windows.Media.VideoBrush.SourceName">
      <summary>
        <see cref="T:System.Windows.Media.VideoBrush" /> のソースとして使用する <see cref="T:System.Windows.Controls.MediaElement" /> の名前を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.VideoBrush" /> のソースとして使用する <see cref="T:System.Windows.Controls.MediaElement" /> の名前。</returns>
    </member>
    <member name="F:System.Windows.Media.VideoBrush.SourceNameProperty">
      <summary>
        <see cref="P:System.Windows.Media.VideoBrush.SourceName" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Media.VideoCaptureDevice">
      <summary>デバイスに付属するカメラの望ましいビデオ形式およびサポートされるビデオ形式の情報を記述します。</summary>
    </member>
    <member name="P:System.Windows.Media.VideoCaptureDevice.DesiredFormat">
      <summary>ビデオ キャプチャ デバイスで使用する望ましいビデオ形式を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.VideoFormat" /> オブジェクトなど、このビデオ キャプチャ デバイスで使用される望ましいビデオ形式。既定値は null です。</returns>
    </member>
    <member name="P:System.Windows.Media.VideoCaptureDevice.SupportedFormats">
      <summary>このビデオ キャプチャ デバイスでサポートされているビデオ形式の汎用コレクションを取得します。</summary>
      <returns>このビデオ キャプチャ デバイスでサポートされているビデオ形式を表す <see cref="T:System.Windows.Media.VideoFormat" /> オブジェクトのジェネリック コレクション。</returns>
    </member>
    <member name="T:System.Windows.Media.VideoCaptureDeviceCollection">
      <summary>
        <see cref="T:System.Windows.Media.VideoCaptureDevice" /> オブジェクトのコレクションを指定します。</summary>
    </member>
    <member name="T:System.Windows.Media.VideoFormat">
      <summary>ビデオ キャプチャ デバイスで使用されるビデオ形式に関する具体的な技術情報を提供します。</summary>
    </member>
    <member name="M:System.Windows.Media.VideoFormat.#ctor(System.Windows.Media.PixelFormatType,System.Int32,System.Int32,System.Single)">
      <summary>
        <see cref="T:System.Windows.Media.VideoFormat" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pixelFormat">初期 <see cref="P:System.Windows.Media.VideoFormat.PixelFormat" /> 値。</param>
      <param name="width">初期 <see cref="P:System.Windows.Media.VideoFormat.PixelWidth" /> 値。</param>
      <param name="height">初期 <see cref="P:System.Windows.Media.VideoFormat.PixelHeight" /> 値。</param>
      <param name="framesPerSecond">初期 <see cref="P:System.Windows.Media.VideoFormat.FramesPerSecond" /> 値。</param>
    </member>
    <member name="P:System.Windows.Media.VideoFormat.FramesPerSecond">
      <summary>表示されたビデオ形式について 1 秒あたりのフレーム数を取得します。</summary>
      <returns>表示されたビデオ形式についての 1 秒あたりのフレーム数。</returns>
    </member>
    <member name="P:System.Windows.Media.VideoFormat.PixelFormat">
      <summary>ビデオ形式の個々のピクセルに関するグラフィック形式情報を取得します。</summary>
      <returns>ビデオ形式の個々のピクセルに関する形式をレポートする <see cref="T:System.Windows.Media.PixelFormatType" /> 値。</returns>
    </member>
    <member name="P:System.Windows.Media.VideoFormat.PixelHeight">
      <summary>表示されたビデオ形式のカメラ フレーミング領域の高さを取得します。</summary>
      <returns>表示されたビデオ形式のカメラ フレーミング領域の高さ (ピクセル)。</returns>
    </member>
    <member name="P:System.Windows.Media.VideoFormat.PixelWidth">
      <summary>表示されたビデオ形式のカメラ フレーミング領域の幅を取得します。</summary>
      <returns>表示されたビデオ形式のカメラ フレーミング領域の幅 (ピクセル)。</returns>
    </member>
    <member name="P:System.Windows.Media.VideoFormat.Stride">
      <summary>ビデオ形式で使用される配列ストライドを取得します。</summary>
      <returns>ビデオ形式で使用される配列ストライド。</returns>
    </member>
    <member name="T:System.Windows.Media.VideoSink">
      <summary>ビデオ デバイスのキャプチャ グラフを公開します。<see cref="P:System.Windows.Media.VideoSink.CaptureSource" /> からビデオ情報を受け取ったり、キャプチャ グラフを取得したりするには、このクラスを継承します。</summary>
    </member>
    <member name="M:System.Windows.Media.VideoSink.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.VideoSink" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.VideoSink.AllocationMode">
      <summary>カメラ ビデオ バッファーを Windows Phone で保持する方法を指定します。</summary>
      <returns>サンプル割り当てモード。</returns>
    </member>
    <member name="P:System.Windows.Media.VideoSink.CaptureSource">
      <summary>この <see cref="T:System.Windows.Media.VideoSink" /> に関連付けられているキャプチャ ソースを取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.VideoSink" /> に関連付けられているキャプチャ ソース。</returns>
    </member>
    <member name="M:System.Windows.Media.VideoSink.Finalize">
      <summary>
        <see cref="T:System.Windows.Media.VideoSink" /> クラスによって使用されているリソースを解放します。</summary>
    </member>
    <member name="M:System.Windows.Media.VideoSink.OnCaptureStarted">
      <summary>派生クラスでオーバーライドされると、ビデオ デバイスがビデオ データのキャプチャを開始したときに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Media.VideoSink.OnCaptureStopped">
      <summary>派生クラスでオーバーライドされると、ビデオ デバイスがビデオ データのキャプチャを停止したときに呼び出されます。</summary>
    </member>
    <member name="M:System.Windows.Media.VideoSink.OnFormatChange(System.Windows.Media.VideoFormat)">
      <summary>派生クラスでオーバーライドされると、ビデオ形式の変更がビデオ デバイスからレポートされたときに呼び出されます。</summary>
      <param name="videoFormat">新しいビデオ形式。</param>
    </member>
    <member name="M:System.Windows.Media.VideoSink.OnSample(System.Int64,System.Int64,System.Byte[])">
      <summary>派生クラスで上書きされた場合、ビデオ デバイスが完全なビデオ サンプルを取得するときに呼び出されます。</summary>
      <param name="sampleTimeInHundredNanoseconds">サンプルがキャプチャされたときの時間 (100 ナノ秒単位)。</param>
      <param name="frameDurationInHundredNanoseconds">サンプルの継続時間 (100 ナノ秒単位)。</param>
      <param name="sampleData">ビデオ データを格納するバイト ストリーム。このバイト ストリームが、適切なビデオ形式情報に従って、サンプルとして処理される必要があります。</param>
    </member>
    <member name="T:System.Windows.Media.VisualTreeHelper">
      <summary>Windows Phone ビジュアル ツリーにおけるオブジェクトのリレーションシップを、子オブジェクトまたは親オブジェクトの軸に沿って走査するためのユーティリティ メソッドを提供します。</summary>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.FindElementsInHostCoordinates(System.Windows.Point,System.Windows.UIElement)">
      <summary>オブジェクトの座標空間の指定した点内に位置するオブジェクトのセットを取得します。</summary>
      <returns>指定されたポイントにある指定されたサブツリー内のビジュアル ツリー コンポジションに配置するように決定された <see cref="T:System.Windows.UIElement" /> オブジェクトの列挙可能なセット。</returns>
      <param name="intersectingPoint">決定点として使用する点。</param>
      <param name="subtree">検索するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.FindElementsInHostCoordinates(System.Windows.Rect,System.Windows.UIElement)">
      <summary>オブジェクトの座標空間の指定した <see cref="T:System.Windows.Rect" /> 内にある一連のオブジェクトを取得します。</summary>
      <returns>指定されたポイントにある指定されたサブツリー内のビジュアル ツリー コンポジションに配置するように決定された <see cref="T:System.Windows.UIElement" /> オブジェクトの列挙可能なセット。</returns>
      <param name="intersectingRect">判別領域として使用する <see cref="T:System.Windows.Rect" />。</param>
      <param name="subtree">検索するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
      <summary>指定されたインデックスを使って、ビジュアル ツリーを検証して、指定されたオブジェクトの特定の子オブジェクトを取得します。</summary>
      <returns>
        <paramref name="childIndex" /> に参照される子オブジェクト。</returns>
      <param name="reference">子コレクションを持つオブジェクト。</param>
      <param name="childIndex">
        <paramref name="reference" /> の子コレクションにおける検索対象の子オブジェクトのインデックス。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">無効な子インデックスを指定しました。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="reference" /> が null であるか、または有効な <see cref="T:System.Windows.UIElement" /> ではありません。</exception>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
      <summary>ビジュアル ツリーのオブジェクトの子コレクションに存在する子の数を返します。</summary>
      <returns>指定されたソース ビジュアルのビジュアルの子の数。</returns>
      <param name="reference">ソース ビジュアル。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="reference" /> が null であるか、または有効な <see cref="T:System.Windows.UIElement" /> ではありません。</exception>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetOpenPopups">
      <summary>開いているすべての <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールを取得します。</summary>
      <returns>開いているすべての <see cref="T:System.Windows.Controls.Primitives.Popup" /> コントロールの <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
    </member>
    <member name="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)">
      <summary>ビジュアル ツリーのオブジェクトの親オブジェクトを返します。</summary>
      <returns>ビジュアル ツリーの <paramref name="reference" /> オブジェクトの親オブジェクト。</returns>
      <param name="reference">親オブジェクトを取得するオブジェクト。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="reference" /> が null であるか、または有効な <see cref="T:System.Windows.UIElement" /> ではありません。</exception>
    </member>
    <member name="T:System.Windows.Media.WaveFormatType">
      <summary>オーディオ形式のデジタル信号エンコード形式をレポートします。</summary>
    </member>
    <member name="F:System.Windows.Media.WaveFormatType.Pcm">
      <summary>PCM (Pulse Code Modulation) を使用するオーディオ形式。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.BackEase">
      <summary>指定したパスでアニメーション化を開始する少し前にアニメーションの動きを収縮させるイージング関数を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BackEase.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.BackEase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BackEase.Amplitude">
      <summary>
        <see cref="T:System.Windows.Media.Animation.BackEase" /> アニメーションに関連付けられた収縮の振幅を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.BackEase" /> アニメーションに関連付けられた収縮の振幅。この値は、0 以上である必要があります。既定値は、1 です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BackEase.AmplitudeProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.BackEase.Amplitude" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.BackEase.Amplitude" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.BackEase.EaseInCore(System.Double)">
      <summary>カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできる、イージング関数のロジック部分を提供します。</summary>
      <returns>変換された進行状況を表す倍精度浮動小数点数。</returns>
      <param name="normalizedTime">アニメーションの正規化された時間 (進行状況)。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.BeginStoryboard">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> を開始し、そのアニメーション群をそれぞれの対象となるオブジェクトやプロパティに適用するトリガー アクション。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BeginStoryboard.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard">
      <summary>この <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> が開始する <see cref="T:System.Windows.Media.Animation.Storyboard" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.BeginStoryboard" /> が開始する <see cref="T:System.Windows.Media.Animation.Storyboard" />。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BeginStoryboard.StoryboardProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.BounceEase">
      <summary>アニメーション化されたバウンス効果を作成するイージング関数を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BounceEase.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.BounceEase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BounceEase.Bounces">
      <summary>バウンスの数を取得または設定します。</summary>
      <returns>バウンスの数。値はゼロ以上でなければいけません。マイナス値はゼロになります。既定値は、3 です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BounceEase.BouncesProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.BounceEase.Bounces" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.BounceEase.Bounciness">
      <summary>バウンス アニメーションのバウンスを指定する値を取得または設定します。このプロパティの値が低い場合は、バウンス間で失われるバウンスの高さがほとんどなくなります (バウンスの増大)。値が高い場合は、バウンスが低下します (バウンスの縮小)。</summary>
      <returns>バウンス アニメーションのバウンスを指定する値。必ず正の値を指定します。既定値は 2 です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.BounceEase.BouncinessProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.BounceEase.Bounciness" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.BounceEase.EaseInCore(System.Double)">
      <summary>カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできる、イージング関数のロジック部分を提供します。</summary>
      <returns>変換された進行状況を表す倍精度浮動小数点数。</returns>
      <param name="normalizedTime">アニメーションの正規化された時間 (進行状況)。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.CircleEase">
      <summary>円関数を使用して加速または減速するアニメーションを作成するイージング関数を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CircleEase.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.CircleEase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CircleEase.EaseInCore(System.Double)">
      <summary>カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできる、イージング関数のロジック部分を提供します。</summary>
      <returns>変換された進行状況を表す倍精度浮動小数点数。</returns>
      <param name="normalizedTime">アニメーションの正規化された時間 (進行状況)。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.ClockState">
      <summary>アニメーションの潜在的な状態を記述します。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.ClockState.Active">
      <summary>現在のアニメーションはその親のアニメーションと直接関連して変化します。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.ClockState.Filling">
      <summary>アニメーションは継続し、親のアニメーションに関連して変化しません。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.ClockState.Stopped">
      <summary>アニメーションは中止されました。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorAnimation">
      <summary>
        <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> で指定した期間にわたって、<see cref="T:System.Windows.Media.Color" /> プロパティの値を 2 つのターゲット値の間で線形補間を使用してアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimation.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ColorAnimation" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.By">
      <summary>アニメーションが開始値を変更するときに使用する合計を取得または設定します。</summary>
      <returns>アニメーションが開始値を変更するときに使用する合計。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.ByProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ColorAnimation.By" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ColorAnimation.By" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.EasingFunction">
      <summary>このアニメーションに適用されるイージング関数を取得または設定します。</summary>
      <returns>このアニメーションに適用されるイージング関数。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.EasingFunctionProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ColorAnimation.EasingFunction" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ColorAnimation.EasingFunction" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.From">
      <summary>アニメーションの開始値を取得または設定します。</summary>
      <returns>アニメーションの開始値。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.FromProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ColorAnimation.From" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ColorAnimation.From" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimation.To">
      <summary>アニメーションの終了値を取得または設定します。</summary>
      <returns>アニメーションの終了値。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorAnimation.ToProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ColorAnimation.To" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ColorAnimation.To" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames">
      <summary>
        <see cref="T:System.Windows.Duration" /> で指定した期間にわたって、<see cref="T:System.Windows.Media.Color" /> プロパティの値を一連の <see cref="P:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames" /> に沿ってアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.KeyFrames">
      <summary>アニメーションを定義する <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> オブジェクトのコレクションを取得します。</summary>
      <returns>アニメーションを定義する <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> オブジェクトのコレクション。既定値は空のコレクションです。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorKeyFrame">
      <summary>
        <see cref="T:System.Windows.Media.Color" /> ターゲット値を使用してアニメーション セグメントを定義する特定のアニメーション キー フレーム手法の基本クラスを提供します。<see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> アニメーションに対して提供された <see cref="T:System.Windows.Media.Color" /> 値にそれぞれが異なるキー フレーム補間メソッドを提供する派生クラス。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime">
      <summary>キー フレームのターゲットである <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> に達する時間を取得または設定します。</summary>
      <returns>キー フレームの現在の値が <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> プロパティと等しい時間。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorKeyFrame.KeyTimeProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ColorKeyFrame.Value">
      <summary>キー フレームのターゲット値を取得または設定します。</summary>
      <returns>キー フレームのターゲット値。この値は、指定した <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.KeyTime" /> での値です。既定値は、ARGB 値 #00000000 の <see cref="T:System.Windows.Media.Color" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ColorKeyFrame.ValueProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ColorKeyFrameCollection">
      <summary>インデックスによって個別にアクセスできる <see cref="T:System.Windows.Media.Animation.ColorKeyFrame" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ColorKeyFrameCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.CubicEase">
      <summary>f(t) = t3 という数式を使用して加速または減速するアニメーションを作成するイージング関数を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CubicEase.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.CubicEase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)">
      <summary>カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできる、イージング関数のロジック部分を提供します。</summary>
      <returns>変換された進行状況を表す倍精度浮動小数点数。</returns>
      <param name="normalizedTime">アニメーションの正規化された時間 (進行状況)。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteColorKeyFrame">
      <summary>不連続の値を使用して、前のキー フレームの <see cref="T:System.Windows.Media.Color" /> 値から、そのキー フレーム自体の <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> までアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteColorKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.DiscreteColorKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteDoubleKeyFrame">
      <summary>不連続の値を使用して、前のキー フレームの <see cref="T:System.Double" /> 値から、そのキー フレーム自体の <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> までアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteDoubleKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.DiscreteDoubleKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscreteObjectKeyFrame">
      <summary>不連続の値を使用して、前のキー フレームの <see cref="T:System.Object" /> 値から、そのキー フレーム自体の <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> までアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscreteObjectKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.DiscreteObjectKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.DiscretePointKeyFrame">
      <summary>不連続のフレームを使用して、前のキー フレームの <see cref="T:System.Windows.Point" /> 値から、そのキー フレーム自体の <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> までアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DiscretePointKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.DiscretePointKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleAnimation">
      <summary>
        <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> で指定した期間にわたって、<see cref="T:System.Double" /> プロパティの値を 2 つのターゲット値の間で線形補間を使用してアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimation.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.DoubleAnimation" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.By">
      <summary>アニメーションが開始値を変更するときに使用する合計を取得または設定します。</summary>
      <returns>アニメーションが開始値を変更するときに使用する合計。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.ByProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.DoubleAnimation.By" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.DoubleAnimation.By" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.EasingFunction">
      <summary>このアニメーションに適用されるイージング関数を取得または設定します。</summary>
      <returns>このアニメーションに適用されるイージング関数。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.EasingFunctionProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.DoubleAnimation.EasingFunction" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.DoubleAnimation.EasingFunction" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.From">
      <summary>アニメーションの開始値を取得または設定します。</summary>
      <returns>アニメーションの開始値。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.FromProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.DoubleAnimation.From" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.DoubleAnimation.From" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimation.To">
      <summary>アニメーションの終了値を取得または設定します。</summary>
      <returns>アニメーションの終了値。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleAnimation.ToProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.DoubleAnimation.To" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.DoubleAnimation.To" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames">
      <summary>
        <see cref="T:System.Double" /> プロパティの値を、一連の <see cref="P:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames" /> に沿ってアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.KeyFrames">
      <summary>アニメーションを定義する <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> オブジェクトのコレクションを取得します。</summary>
      <returns>アニメーションを定義する <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> オブジェクトのコレクション。既定値は空のコレクションです。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleKeyFrame">
      <summary>
        <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> 用に独自のターゲット値と補間方式が指定されたアニメーション セグメントを定義する抽象クラスです。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime">
      <summary>キー フレームのターゲットである <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> に達する時間を取得または設定します。</summary>
      <returns>キー フレームの現在の値が <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> プロパティと等しい時間。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleKeyFrame.KeyTimeProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.DoubleKeyFrame.Value">
      <summary>キー フレームのターゲット値を取得または設定します。</summary>
      <returns>キー フレームのターゲット値。この値は、指定した <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.KeyTime" /> でのこのキー フレームの値です。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.DoubleKeyFrame.ValueProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.DoubleKeyFrameCollection">
      <summary>インデックスによって個別にアクセスできる <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingColorKeyFrame">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames" /> キー フレーム アニメーションへのイージング関数の関連付けを可能にするクラスです。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingColorKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.EasingColorKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunction">
      <summary>キー フレームに適用されているイージング関数を取得または設定します。</summary>
      <returns>キー フレームに適用されているイージング関数。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunctionProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunction" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.EasingColorKeyFrame.EasingFunction" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingDoubleKeyFrame">
      <summary>イージング関数を <see cref="T:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames" /> キー フレーム アニメーションに関連付けることのできるプロパティを定義します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingDoubleKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.EasingDoubleKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunction">
      <summary>キー フレームに適用されているイージング関数を取得または設定します。</summary>
      <returns>キー フレームに適用されているイージング関数。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunctionProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunction" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.EasingDoubleKeyFrame.EasingFunction" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingFunctionBase">
      <summary>すべてのイージング関数の基本クラスを提供します。このクラスを継承することによって、独自のカスタム イージング関数を作成できます。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingFunctionBase.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.EasingFunctionBase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)">
      <summary>正規化された時間を変換して、アニメーションのペースを制御します。</summary>
      <returns>変換された進行状況を表す倍精度浮動小数点数。</returns>
      <param name="normalizedTime">アニメーションの正規化された時間 (進行状況)。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingFunctionBase.EaseInCore(System.Double)">
      <summary>カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできる、イージング関数のロジック部分を提供します。</summary>
      <returns>変換された進行状況を表す倍精度浮動小数点数。</returns>
      <param name="normalizedTime">アニメーションの正規化された時間 (進行状況)。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingFunctionBase.EasingMode">
      <summary>アニメーションの補間方法を指定する値を取得または設定します。</summary>
      <returns>アニメーションの補間方法を指定する列挙値の 1 つ。既定値は、<see cref="F:System.Windows.Media.Animation.EasingMode.EaseOut" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.EasingFunctionBase.EasingMode" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.EasingFunctionBase.EasingMode" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingMode">
      <summary>イージング関数に関連付けられたアニメーションの補間方法を指定します。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingMode.EaseOut">
      <summary>100% の補間からイージング関数に関連付けられている数式の出力結果を差し引き、それに基づいて補間します。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingMode.EaseIn">
      <summary>イージング関数に関連付けられている数式に従って補間します。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingMode.EaseInOut">
      <summary>アニメーションの前半は <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> を、後半は <see cref="F:System.Windows.Media.Animation.EasingMode.EaseOut" /> を使用して補間します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.EasingPointKeyFrame">
      <summary>イージング関数を <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> キー フレーム アニメーションに関連付けることのできるプロパティを定義します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.EasingPointKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.EasingPointKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunction">
      <summary>キー フレームに適用されているイージング関数を取得または設定します。</summary>
      <returns>キー フレームに適用されているイージング関数。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunctionProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunction" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.EasingPointKeyFrame.EasingFunction" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ElasticEase">
      <summary>静止するまで伸び縮みするばねに似たアニメーションを作成するイージング関数を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ElasticEase.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ElasticEase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ElasticEase.EaseInCore(System.Double)">
      <summary>カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできる、イージング関数のロジック部分を提供します。</summary>
      <returns>変換された進行状況を表す倍精度浮動小数点数。</returns>
      <param name="normalizedTime">アニメーションの正規化された時間 (進行状況)。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ElasticEase.Oscillations">
      <summary>ターゲットがアニメーションの終点を越えてスライドし、元に戻る回数を取得または設定します。</summary>
      <returns>ターゲットがアニメーションの終点を越えてスライドし、元に戻る回数。この値は、0 以上である必要があります。既定は 3 です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ElasticEase.OscillationsProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ElasticEase.Oscillations" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ElasticEase.Oscillations" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ElasticEase.Springiness">
      <summary>ばねの剛性を取得または設定します。ばねの剛性の値が小さいほど、ばねは硬くなり、各振動ごとに弾力が弱まる度合いが早くなります。</summary>
      <returns>ばねの剛性を指定する正の数。既定値は 3 です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ElasticEase.SpringinessProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ElasticEase.Springiness" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ElasticEase.Springiness" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ExponentialEase">
      <summary>指数の数式 (「解説」を参照) を使用して加速と減速のアニメーションを作成するイージング関数を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ExponentialEase.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ExponentialEase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ExponentialEase.EaseInCore(System.Double)">
      <summary>カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできる、イージング関数のロジック部分を提供します。</summary>
      <returns>変換された進行状況を表す倍精度浮動小数点数。</returns>
      <param name="normalizedTime">アニメーションの正規化された時間 (進行状況)。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.ExponentialEase.Exponent">
      <summary>アニメーションの補間を決定するために使用する指数を取得または設定します。</summary>
      <returns>アニメーションの補間を決定するために使用する指数。既定値は 2 です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ExponentialEase.ExponentProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ExponentialEase.Exponent" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ExponentialEase.Exponent" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.FillBehavior">
      <summary>それ自体はアクティブ期間外であっても、その親はアクティブ期間または保留期間内にある場合の、<see cref="T:System.Windows.Media.Animation.Timeline" /> の動作を指定します。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.FillBehavior.HoldEnd">
      <summary>タイムラインは、アクティブ期間の最後に達すると、親のアクティブ期間または保留期間が終了するまで進行を保留します。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.FillBehavior.Stop">
      <summary>タイムラインは、親がアクティブ期間内にいる間にアクティブ期間外になると、停止します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.IEasingFunction">
      <summary>イージング関数の基本機能を定義します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.IEasingFunction.Ease(System.Double)">
      <summary>正規化された時間を変換して、アニメーションのペースを制御します。</summary>
      <returns>変換された進行状況。</returns>
      <param name="normalizedTime">アニメーションの正規化された時間 (進行状況)。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.KeySpline">
      <summary>このクラスは、スプライン キー フレームでアニメーションの進行を定義するために使用します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.KeySpline.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.KeySpline.ControlPoint1">
      <summary>
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> を記述するベジエ曲線の定義に使用する 1 つ目の制御点を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> を記述するベジエ曲線の定義に使用する 1 つ目の制御点。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.KeySpline.ControlPoint2">
      <summary>
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> を記述するベジエ曲線の定義に使用する 2 つ目の制御点を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Animation.KeySpline" /> を記述するベジエ曲線の定義に使用する 2 つ目の制御点。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.KeyTime">
      <summary>アニメーションの中で特定のキー フレームを再生するタイミングを指定します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.Equals(System.Object)">
      <summary>
        <see cref="T:System.Windows.Media.Animation.KeyTime" /> が、この <see cref="T:System.Windows.Media.Animation.KeyTime" /> と等しいかどうかを示します。</summary>
      <returns>
        <paramref name="value" /> が、この <see cref="T:System.Windows.Media.Animation.KeyTime" /> と同じ長さの時間を表す <see cref="T:System.Windows.Media.Animation.KeyTime" /> である場合は true。それ以外の場合は false。</returns>
      <param name="value">この <see cref="T:System.Windows.Media.Animation.KeyTime" /> と比較する <see cref="T:System.Windows.Media.Animation.KeyTime" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.Equals(System.Windows.Media.Animation.KeyTime)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.KeyTime" /> が、この <see cref="T:System.Windows.Media.Animation.KeyTime" /> と等しいかどうかを示します。</summary>
      <returns>
        <paramref name="value" /> がこの <see cref="T:System.Windows.Media.Animation.KeyTime" /> に等しい場合は true。それ以外の場合は false。</returns>
      <param name="value">この <see cref="T:System.Windows.Media.Animation.KeyTime" /> と比較する <see cref="T:System.Windows.Media.Animation.KeyTime" />。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.Equals(System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeyTime)">
      <summary>2 つの <see cref="T:System.Windows.Media.Animation.KeyTime" /> の値が等しいかどうかを示します。</summary>
      <returns>
        <paramref name="keyTime1" /> の値と <paramref name="keyTime2" /> の値が等しい場合は true。それ以外の場合は false。</returns>
      <param name="keyTime1">比較する最初の値です。</param>
      <param name="keyTime2">比較する 2 番目の値です。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.FromTimeSpan(System.TimeSpan)">
      <summary>指定した <see cref="T:System.TimeSpan" /> を使用して、新しい <see cref="T:System.Windows.Media.Animation.KeyTime" /> を作成します。</summary>
      <returns>
        <paramref name="timeSpan" /> の値に初期化された、新しい <see cref="T:System.Windows.Media.Animation.KeyTime" />。</returns>
      <param name="timeSpan">新しい <see cref="T:System.Windows.Media.Animation.KeyTime" /> の値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">指定された <paramref name="timeSpan" /> が、許容範囲を超えています。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.GetHashCode">
      <summary>この <see cref="T:System.Windows.Media.Animation.KeyTime" /> を表すハッシュ コードを返します。</summary>
      <returns>ハッシュ コード識別子。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.op_Equality(System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeyTime)">
      <summary>2 つの <see cref="T:System.Windows.Media.Animation.KeyTime" /> の値が等しいかどうかを比較します。</summary>
      <returns>
        <paramref name="keyTime1" /> と <paramref name="keyTime2" /> が等しい場合は true。それ以外の場合は false。</returns>
      <param name="keyTime1">比較する最初の値です。</param>
      <param name="keyTime2">比較する 2 番目の値です。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.op_Implicit(System.TimeSpan)~System.Windows.Media.Animation.KeyTime">
      <summary>
        <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" /> を <see cref="T:System.Windows.Media.Animation.KeyTime" /> に暗黙的に変換します。</summary>
      <returns>作成された <see cref="T:System.Windows.Media.Animation.KeyTime" />。</returns>
      <param name="timeSpan">変換する <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" /> 値。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.op_Inequality(System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeyTime)">
      <summary>2 つの <see cref="T:System.Windows.Media.Animation.KeyTime" /> の値が異なるかどうかを比較します。</summary>
      <returns>
        <paramref name="keyTime1" /> と <paramref name="keyTime2" /> が等しくない場合は true。それ以外の場合は false。</returns>
      <param name="keyTime1">比較する最初の値です。</param>
      <param name="keyTime2">比較する 2 番目の値です。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.KeyTime.TimeSpan">
      <summary>アニメーションの先頭からの相対的な時間で表される、キー フレームの終了時間を取得します。</summary>
      <returns>アニメーションの先頭からの相対的な時間で表される、キー フレームの終了時間。</returns>
      <exception cref="T:System.InvalidOperationException">このインスタンスが <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" /> 型ではない場合。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.KeyTime.ToString">
      <summary>この <see cref="T:System.Windows.Media.Animation.KeyTime" /> の文字列表現を返します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Animation.KeyTime" /> の文字列表現。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.KeyTime.Type">
      <summary>このインスタンスが表す <see cref="T:System.Windows.Media.Animation.KeyTimeType" /> 値を取得します。</summary>
      <returns>列挙値の 1 つ。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.KeyTime.Uniform">
      <summary>アニメーションに割り当てられた時間をキー フレームに均等に分割する Uniform 値を取得します。</summary>
      <returns>アニメーションに割り当てられた時間をキー フレームに均等に分割する Uniform 値。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.KeyTimeType">
      <summary>
        <see cref="T:System.Windows.Media.Animation.KeyTime" /> インスタンスを表すさまざまな型を表します。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.KeyTimeType.Uniform">
      <summary>一連のアニメーションに割り当てられた合計時間が各キー フレームに均等に分割されます。</summary>
    </member>
    <member name="F:System.Windows.Media.Animation.KeyTimeType.TimeSpan">
      <summary>各 <see cref="T:System.Windows.Media.Animation.KeyTime" /> は、一連のアニメーションの <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> からの相対的な <see cref="P:System.Windows.Media.Animation.KeyTime.TimeSpan" /> 値として表されます。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearColorKeyFrame">
      <summary>線形補間を使用して、前のキー フレームの <see cref="T:System.Windows.Media.Color" /> 値から、そのキー フレーム自体の <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> までアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearColorKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.LinearColorKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearDoubleKeyFrame">
      <summary>線形補間を使用して、前のキー フレームの <see cref="T:System.Double" /> 値から、そのキー フレーム自体の <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> までアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearDoubleKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.LinearDoubleKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.LinearPointKeyFrame">
      <summary>線形補間を使用して、前のキー フレームの <see cref="T:System.Windows.Point" /> 値から、そのキー フレーム自体の <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> までアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.LinearPointKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.LinearPointKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames">
      <summary>
        <see cref="T:System.Windows.Duration" /> で指定した期間にわたって、<see cref="T:System.Object" /> プロパティの値を一連の <see cref="P:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames" /> に沿ってアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.KeyFrames">
      <summary>アニメーションを定義する <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> オブジェクトのコレクションを取得します。</summary>
      <returns>アニメーションを定義する <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> オブジェクトのコレクション。既定値は空のコレクションです。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectKeyFrame">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames" /> 用に独自のターゲット値と補間方式を指定して、アニメーションのセグメントを定義します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime">
      <summary>キー フレームのターゲットである <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> に達する時間を取得または設定します。</summary>
      <returns>キー フレームの現在の値が <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> プロパティと等しい時間。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ObjectKeyFrame.KeyTimeProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.ObjectKeyFrame.Value">
      <summary>キー フレームのターゲット値を取得または設定します。</summary>
      <returns>キー フレームのターゲット値。この値は、指定した <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.KeyTime" /> でのこのキー フレームの値です。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.ObjectKeyFrame.ValueProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.ObjectKeyFrame.Value" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.ObjectKeyFrameCollection">
      <summary>インデックスによって個別にアクセスできる <see cref="T:System.Windows.Media.Animation.ObjectKeyFrame" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.ObjectKeyFrameCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.PointAnimation">
      <summary>
        <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> で指定した期間にわたって、<see cref="T:System.Windows.Point" /> プロパティの値を 2 つのターゲット値の間で線形補間を使用してアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimation.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.PointAnimation" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.By">
      <summary>アニメーションが開始値を変更するときに使用する合計を取得または設定します。</summary>
      <returns>アニメーションが開始値を変更するときに使用する合計。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.ByProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.PointAnimation.By" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.PointAnimation.By" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.EasingFunction">
      <summary>アニメーションに適用されるイージング関数を取得または設定します。</summary>
      <returns>アニメーションに適用されるイージング関数。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.EasingFunctionProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.PointAnimation.EasingFunction" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.PointAnimation.EasingFunction" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.From">
      <summary>アニメーションの開始値を取得または設定します。</summary>
      <returns>アニメーションの開始値。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.FromProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.PointAnimation.From" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.PointAnimation.From" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimation.To">
      <summary>アニメーションの終了値を取得または設定します。</summary>
      <returns>アニメーションの終了値。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointAnimation.ToProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.PointAnimation.To" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.PointAnimation.To" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames">
      <summary>
        <see cref="T:System.Windows.Point" /> プロパティの値を、一連の <see cref="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames" /> に沿ってアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.KeyFrames">
      <summary>アニメーションを定義する <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> オブジェクトのコレクションを取得します。</summary>
      <returns>アニメーションを定義する <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> オブジェクトのコレクション。既定値は空のコレクションです。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointKeyFrame">
      <summary>
        <see cref="T:System.Windows.Media.Animation.PointAnimationUsingKeyFrames" /> 用に独自のターゲット値と補間方式を指定して、アニメーションのセグメントを定義します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime">
      <summary>キー フレームのターゲットである <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> に達する時間を取得または設定します。</summary>
      <returns>キー フレームの現在の値が <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> プロパティと等しい時間。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointKeyFrame.KeyTimeProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.PointKeyFrame.Value">
      <summary>キー フレームのターゲット値を取得または設定します。</summary>
      <returns>キー フレームのターゲット値。この値は、指定した <see cref="P:System.Windows.Media.Animation.PointKeyFrame.KeyTime" /> でのこのキー フレームの値です。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PointKeyFrame.ValueProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.PointKeyFrameCollection">
      <summary>インデックスによって個別にアクセスできる <see cref="T:System.Windows.Media.Animation.PointKeyFrame" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.PointKeyFrameCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Animation.PowerEase">
      <summary>f(t) = tp という数式を使用して加速または減速するアニメーションを作成するイージング関数を表します。p は <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> プロパティを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PowerEase.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.PowerEase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.PowerEase.EaseInCore(System.Double)">
      <summary>カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできる、イージング関数のロジック部分を提供します。</summary>
      <returns>変換された進行状況を表す倍精度浮動小数点数。</returns>
      <param name="normalizedTime">アニメーションの正規化された時間 (進行状況)。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.PowerEase.Power">
      <summary>アニメーションの補間の指数を取得または設定します。たとえば、この値が 7 の場合、アニメーション補間曲線は、f(t) = t7 という数式に従います。</summary>
      <returns>アニメーションの補間の指数。この値は 0 以上でなければなりません。既定値は 2 です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.PowerEase.PowerProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.PowerEase.Power" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.QuadraticEase">
      <summary>f(t) = t2 という数式を使用して加速または減速するアニメーションを作成するイージング関数を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuadraticEase.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.QuadraticEase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuadraticEase.EaseInCore(System.Double)">
      <summary>カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできる、イージング関数のロジック部分を提供します。</summary>
      <returns>変換された進行状況を表す倍精度浮動小数点数。</returns>
      <param name="normalizedTime">アニメーションの正規化された時間 (進行状況)。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.QuarticEase">
      <summary>f(t) = t4 という数式を使用して加速または減速するアニメーションを作成するイージング関数を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuarticEase.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.QuarticEase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuarticEase.EaseInCore(System.Double)">
      <summary>カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできる、イージング関数のロジック部分を提供します。</summary>
      <returns>変換された進行状況を表す倍精度浮動小数点数。</returns>
      <param name="normalizedTime">アニメーションの正規化された時間 (進行状況)。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.QuinticEase">
      <summary>f(t) = t5 という数式を使用して加速または減速するアニメーションを作成するイージング関数を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuinticEase.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.QuinticEase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.QuinticEase.EaseInCore(System.Double)">
      <summary>カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできる、イージング関数のロジック部分を提供します。</summary>
      <returns>変換された進行状況を表す倍精度浮動小数点数。</returns>
      <param name="normalizedTime">アニメーションの正規化された時間 (進行状況)。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.RepeatBehavior">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Timeline" /> が、その継続時間を単に繰り返す方法について説明します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.#ctor(System.Double)">
      <summary>反復カウントを指定して、<see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="count">アニメーションの反復回数を指定する 0 以上の数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> は、無限大、数値でない値、または負の値に評価されます。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.#ctor(System.TimeSpan)">
      <summary>繰り返し期間を指定して、<see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> 構造体の新しいインスタンスを初期化します。</summary>
      <param name="duration">
        <see cref="T:System.Windows.Media.Animation.Timeline" /> を再生する時間の長さの合計 (アクティブな継続時間)。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="duration" /> は負の値に評価されます。</exception>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.Count">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Timeline" /> が繰り返す回数を取得します。</summary>
      <returns>繰り返す回数。</returns>
      <exception cref="T:System.InvalidOperationException">この <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> は、反復カウントではなく、繰り返し期間を記述します。</exception>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.Duration">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Timeline" /> を再生する時間の長さの合計を取得します。</summary>
      <returns>タイムラインを再生する時間の長さの合計。</returns>
      <exception cref="T:System.InvalidOperationException">この <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> は、繰り返し期間ではなく、反復カウントを示しています。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Object)">
      <summary>指定したオブジェクトが、この <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> と等しいかどうかを示します。</summary>
      <returns>
        <paramref name="value" /> がこの <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> と同じ繰り返し動作を表す <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> である場合は true。それ以外の場合は false。</returns>
      <param name="value">この <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> と比較するオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> が、この <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> と等しいかどうかを示す値を返します。</summary>
      <returns>
        <paramref name="repeatBehavior" /> の型と繰り返し動作の両方がこの <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> と同一である場合は true。それ以外の場合は false。</returns>
      <param name="repeatBehavior">この <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> と比較する値。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)">
      <summary>指定した 2 つの <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> の値が等しいかどうかを示します。</summary>
      <returns>
        <paramref name="repeatBehavior1" /> と <paramref name="repeatBehavior2" /> の型と繰り返し動作の両方が同一である場合は true。それ以外の場合は false。</returns>
      <param name="repeatBehavior1">比較する最初の値です。</param>
      <param name="repeatBehavior2">比較する 2 番目の値です。</param>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.Forever">
      <summary>無限数の反復回数を指定する <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> を取得します。</summary>
      <returns>無限数の反復回数を指定する <see cref="T:System.Windows.Media.Animation.RepeatBehavior" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>ハッシュ コード。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.HasCount">
      <summary>繰り返し動作に反復カウントが指定されているかどうかを示す値を取得します。</summary>
      <returns>インスタンスが反復カウントを表す場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.RepeatBehavior.HasDuration">
      <summary>繰り返し動作に繰り返し期間が指定されているかどうかを示す値を取得します。</summary>
      <returns>インスタンスが繰り返し期間を表す場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.op_Equality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)">
      <summary>指定した 2 つの <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> の値が等しいかどうかを示します。</summary>
      <returns>
        <paramref name="repeatBehavior1" /> と <paramref name="repeatBehavior2" /> の型と繰り返し動作の両方が同一である場合は true。それ以外の場合は false。</returns>
      <param name="repeatBehavior1">比較する最初の値です。</param>
      <param name="repeatBehavior2">比較する 2 番目の値です。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.op_Inequality(System.Windows.Media.Animation.RepeatBehavior,System.Windows.Media.Animation.RepeatBehavior)">
      <summary>2 つの <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> の値が異なるかどうかを示します。</summary>
      <returns>
        <paramref name="repeatBehavior1" /> と <paramref name="repeatBehavior2" /> の型または繰り返し動作のプロパティが同一でない場合は true。それ以外の場合は false。</returns>
      <param name="repeatBehavior1">比較する最初の値です。</param>
      <param name="repeatBehavior2">比較する 2 番目の値です。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>このメンバーの説明については、<see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> のトピックを参照してください。</summary>
      <returns>指定した書式で現在のインスタンスの値を格納する文字列。</returns>
      <param name="format">使用する書式を指定する文字列。IFormattable 実装の型に対して定義されている既定の書式を使用する場合は、null。</param>
      <param name="formatProvider">値の書式設定に使用する IFormatProvider。オペレーティング システムの現在のロケール設定から数値書式情報を取得する場合は null。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.ToString">
      <summary>この <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> の文字列形式を返します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> の文字列形式。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.RepeatBehavior.ToString(System.IFormatProvider)">
      <summary>指定した形式で、この <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> の文字列表現を返します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> の文字列形式。</returns>
      <param name="formatProvider">戻り値の構成に使用する形式。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.SineEase">
      <summary>正弦定理 (「解説」を参照) を使用して加速と減速のアニメーションを作成するイージング関数を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SineEase.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.SineEase" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SineEase.EaseInCore(System.Double)">
      <summary>カスタム イージング関数の <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> モードを生成するためにオーバーライドできる、イージング関数のロジック部分を提供します。</summary>
      <returns>変換された進行状況を表す倍精度浮動小数点数。</returns>
      <param name="normalizedTime">アニメーションの正規化された時間 (進行状況)。</param>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineColorKeyFrame">
      <summary>スプライン補間を使用して、前のキー フレームの <see cref="T:System.Windows.Media.Color" /> 値から、そのキー フレーム自体の <see cref="P:System.Windows.Media.Animation.ColorKeyFrame.Value" /> までアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineColorKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.SplineColorKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineColorKeyFrame.KeySpline">
      <summary>このキー フレームのアニメーションの進行を定義する 2 つの制御点を取得または設定します。</summary>
      <returns>キー フレームの進行を定義する、3 次ベジエ曲線を指定する 2 つの制御点。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineColorKeyFrame.KeySplineProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.SplineColorKeyFrame.KeySpline" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.SplineColorKeyFrame.KeySpline" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplineDoubleKeyFrame">
      <summary>スプライン補間を使用して、前のキー フレームの <see cref="T:System.Double" /> 値から、そのキー フレーム自体の <see cref="P:System.Windows.Media.Animation.DoubleKeyFrame.Value" /> までアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplineDoubleKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.SplineDoubleKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySpline">
      <summary>このキー フレームのアニメーションの進行を定義する 2 つの制御点を取得または設定します。</summary>
      <returns>キー フレームの進行を定義する、3 次ベジエ曲線を指定する 2 つの制御点。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySplineProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySpline" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.SplineDoubleKeyFrame.KeySpline" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.SplinePointKeyFrame">
      <summary>スプライン補間を使用して、前のキー フレームの <see cref="T:System.Windows.Point" /> 値から、そのキー フレーム自体の <see cref="P:System.Windows.Media.Animation.PointKeyFrame.Value" /> までアニメーション化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.SplinePointKeyFrame.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.SplinePointKeyFrame" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.SplinePointKeyFrame.KeySpline">
      <summary>このキー フレームのアニメーションの進行を定義する 2 つの制御点を取得または設定します。</summary>
      <returns>キー フレームの進行を定義する、3 次ベジエ曲線を指定する 2 つの制御点。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.SplinePointKeyFrame.KeySplineProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.SplinePointKeyFrame.KeySpline" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.SplinePointKeyFrame.KeySpline" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Storyboard">
      <summary>タイムラインを使用してアニメーションを制御し、子アニメーションのオブジェクトやプロパティのターゲット化情報を提供します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Begin">
      <summary>ストーリーボードに関連付けられている一連のアニメーションを開始します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.Children">
      <summary>子 <see cref="T:System.Windows.Media.Animation.Timeline" /> オブジェクトのコレクションを取得します。</summary>
      <returns>子 <see cref="T:System.Windows.Media.Animation.Timeline" /> オブジェクトのコレクション。既定値は空のコレクションです。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState">
      <summary>ストーリーボードのクロックの状態を取得します。</summary>
      <returns>いずれかの列挙値 <see cref="F:System.Windows.Media.Animation.ClockState.Active" />、<see cref="F:System.Windows.Media.Animation.ClockState.Filling" />、または <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime">
      <summary>ストーリーボードの現在時刻を取得します。</summary>
      <returns>ストーリーボードの現在時刻。ストーリーボードのクロックが <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> の場合は null。</returns>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.Media.Animation.Timeline)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> オブジェクトの <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> を取得します。</summary>
      <returns>ターゲット オブジェクトの文字列名。</returns>
      <param name="element">ターゲット名を取得する <see cref="T:System.Windows.Media.Animation.Timeline" /> オブジェクト。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.Media.Animation.Timeline)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> オブジェクトの <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> を取得します。</summary>
      <returns>アニメーション化されたプロパティのプロパティ パス情報。</returns>
      <param name="element">ターゲット プロパティを取得する <see cref="T:System.Windows.Media.Animation.Timeline" /> オブジェクト。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Pause">
      <summary>ストーリーボードに関連付けられているアニメーション クロックを一時停止します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Resume">
      <summary>ストーリーボードに関連付けられているアニメーション クロック (ランタイム状態) を再開します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)">
      <summary>指定されたアニメーション位置にストーリーボードを移動します。ストーリーボードは、クロックが次の目盛りを刻んだときに、要求されたシークを実行します。</summary>
      <param name="offset">タイムラインがアニメーションの先頭から前方または後方にどれだけ移動するかを示す、正または負の時間の値。<see cref="T:System.TimeSpan" /> Parse 動作を使用することで、<see cref="T:System.TimeSpan" /> を次の形式の文字列として指定できるようになります (この構文では、[] は文字列の省略可能な部分を示しますが、引用符、コロン、およびピリオドはすべて構文のリテラル部分です)。"[days.]hours:minutes:seconds[.fractionalSeconds]"- or -"days"</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)">
      <summary>指定されたアニメーション位置まで直ち (同期的) にストーリーボードを移動します。</summary>
      <param name="offset">タイムラインがアニメーションの先頭から前方または後方にどれだけ移動するかを示す、正または負の時間の値。<see cref="T:System.TimeSpan" /> Parse 動作を使用することで、<see cref="T:System.TimeSpan" /> を次の形式の文字列として指定できるようになります (この構文では、[] は文字列の省略可能な部分を示しますが、引用符、コロン、およびピリオドはすべて構文のリテラル部分です)。"[days.]hours:minutes:seconds[.fractionalSeconds]"- or -"days"</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.Media.Animation.Timeline,System.Windows.DependencyObject)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> が、指定したオブジェクトを対象にするように設定します。</summary>
      <param name="timeline">指定された依存オブジェクトをターゲットとするタイムライン。</param>
      <param name="target">対象にするオブジェクトの実際のインスタンス。</param>
      <exception cref="T:System.ArgumentNullException">1 つ以上のパラメーターが null です。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.Media.Animation.Timeline,System.String)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> が、指定した名前のオブジェクトを対象にするように設定します。</summary>
      <param name="element">指定された依存オブジェクトをターゲットとするタイムライン。</param>
      <param name="name">対象にするオブジェクトの名前。</param>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.Media.Animation.Timeline,System.Windows.PropertyPath)">
      <summary>指定した <see cref="T:System.Windows.Media.Animation.Timeline" /> が、指定した依存関係プロパティを対象にするように指定します。</summary>
      <param name="element">指定した依存関係プロパティを関連付けるタイムライン。</param>
      <param name="path">アニメーション化する依存関係プロパティを示すパス。</param>
      <exception cref="T:System.ArgumentNullException">1 つ以上のパラメーターが null です。</exception>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill">
      <summary>ストーリーボードの時計の現在時刻をアクティブ期間の最後まで進めます。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Storyboard.Stop">
      <summary>ストーリーボードを停止します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.TargetName">
      <summary>アニメーション化するオブジェクトの名前を取得または設定します。</summary>
      <returns>アニメーション化するオブジェクトの名前。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> 添付プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Storyboard.TargetProperty">
      <summary>アニメーション化するプロパティの名前を取得または設定します。</summary>
      <returns>アニメーション化するプロパティ。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 添付プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> 添付プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.Timeline">
      <summary>時間のセグメントを定義します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.Timeline.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Timeline" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.AutoReverse">
      <summary>順方向の反復の完了後にタイムラインを逆方向に再生するかどうかを示す値を取得または設定します。</summary>
      <returns>各反復の終了後にタイムラインを逆方向に再生する場合は true。それ以外の場合は false。既定値は false です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.AutoReverseProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.BeginTime">
      <summary>この <see cref="T:System.Windows.Media.Animation.Timeline" /> を開始する時間を取得または設定します。</summary>
      <returns>タイムラインの開始時刻。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.BeginTimeProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="E:System.Windows.Media.Animation.Timeline.Completed">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Storyboard" /> オブジェクトが再生を完了したときに発生します。</summary>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.Duration">
      <summary>繰り返しをカウントせずに、このタイムラインの再生に要する時間を取得または設定します。</summary>
      <returns>タイムラインの単純継続時間 (このタイムラインが順方向の反復を 1 回完了するのに要する時間)。既定値は <see cref="P:System.Windows.Duration.Automatic" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.DurationProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.FillBehavior">
      <summary>アクティブな期間の終わりに到達した後のアニメーションの動作を指定する値を取得または設定します。</summary>
      <returns>タイムラインがアクティブな期間の末尾に到達したが、その親はまだアクティブな期間または保留期間にある場合のタイムラインの動作を指定する値。既定値は <see cref="F:System.Windows.Media.Animation.FillBehavior.HoldEnd" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.FillBehaviorProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.RepeatBehavior">
      <summary>このタイムラインの繰り返し動作を取得または設定します。</summary>
      <returns>タイムラインの再生回数を指定する反復 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" />、このタイムラインのアクティブな期間の長さの合計を指定する <see cref="T:System.TimeSpan" /> 値、またはタイムラインを無限に繰り返すように指定する特殊な値の <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Forever" />。既定値は、タイムラインが 1 回再生されることを示す、<see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> が 1 の <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Animation.Timeline.SpeedRatio">
      <summary>この <see cref="T:System.Windows.Media.Animation.Timeline" /> の時間の進行の速度 (親に対する相対的な速度) を取得または設定します。</summary>
      <returns>このタイムラインの時間の進行の速度 (タイムラインの親の速度に対する相対的な速度) を指定する、0 を超える有限値。このタイムラインがルート タイムラインの場合は、既定のタイムライン速度を指定します。値は係数として表されます。通常速度を 1 とし、2 は倍の速度を、0.5 は半分の速度を表します。既定値は 1 です。</returns>
    </member>
    <member name="F:System.Windows.Media.Animation.Timeline.SpeedRatioProperty">
      <summary>
        <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Media.Animation.TimelineCollection">
      <summary>
        <see cref="T:System.Windows.Media.Animation.Timeline" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Animation.TimelineCollection.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Animation.TimelineCollection" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Media.Effects.SamplingMode">
      <summary>
        <see cref="T:System.Windows.Media.Brush" /> 値を持つ依存関係プロパティをカスタム シェーダー効果にサンプリングする方法を指定します。</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.SamplingMode.Auto">
      <summary>システムで、最も適切なサンプリング モードが選択されます。</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.SamplingMode.NearestNeighbor">
      <summary>最近傍サンプリングを使用します。</summary>
    </member>
    <member name="F:System.Windows.Media.Effects.SamplingMode.Bilinear">
      <summary>バイリニア サンプリングを使用します。</summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapCreateOptions">
      <summary>ビットマップ イメージの初期化オプションを指定します。</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.None">
      <summary>初期化オプションは指定されません。これは、Windows Phone の <see cref="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions" /> プロパティの既定値ではありません (<see cref="F:System.Windows.Media.Imaging.BitmapCreateOptions.DelayCreation" /> が既定値です)。</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.DelayCreation">
      <summary>必要になるまで、<see cref="T:System.Windows.Media.Imaging.BitmapSource" /> オブジェクトの初期化を遅延させます。これは、イメージのコレクションを処理するときに役立ちます。これは、Windows Phone の <see cref="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions" /> プロパティの既定値です。</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.IgnoreImageCache">
      <summary>既存のイメージ キャッシュを使用せずにイメージを初期化します。イメージ キャッシュ内の既存のエントリは、同じ URI を共有している場合でも置き換えられます。このオプションは、キャッシュ内のイメージを更新する必要がある場合にのみ選択します。</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapCreateOptions.BackgroundCreation">
      <summary>
        <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> は宣言されるとすぐに初期化されます。このオプションは、前に使用された URI のイメージ キャッシュを使用します。イメージ キャッシュ内にイメージがない場合、イメージがダウンロードされて、別のバックグラウンド スレッドでデコードされます。</summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapImage">
      <summary>
        <see cref="P:System.Windows.Controls.Image.Source" /> プロパティおよび <see cref="P:System.Windows.Media.ImageBrush.ImageSource" /> プロパティの実際的なオブジェクト ソース型を提供します。</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapImage.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapImage.#ctor(System.Uri)">
      <summary>指定した URI を使用して、<see cref="T:System.Windows.Media.Imaging.BitmapImage" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="uriSource">イメージのソース グラフィックス ファイルを参照する URI。</param>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions">
      <summary>
        <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> の <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions" /> を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> に使用する <see cref="T:System.Windows.Media.Imaging.BitmapCreateOptions" />。既定値は、<see cref="F:System.Windows.Media.Imaging.BitmapCreateOptions.DelayCreation" /> です。</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.CreateOptionsProperty">
      <summary>
        <see cref="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Imaging.BitmapImage.CreateOptions" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight">
      <summary>ビットマップ イメージの高さ。</summary>
      <returns>イメージの高さのピクセル数を返します。</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeightProperty">
      <summary>
        <see cref="P:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.DecodePixelType">
      <summary>ピクセルの種類を取得または設定します。</summary>
      <returns>ピクセルの種類。</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.DecodePixelTypeProperty">
      <summary>
        <see cref="P:System.Windows.Media.Imaging.BitmapImage.DecodePixelType" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Imaging.BitmapImage.DecodePixelType" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth">
      <summary>ビットマップ イメージの幅。</summary>
      <returns>イメージの幅のピクセル数を返します。</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidthProperty">
      <summary>
        <see cref="P:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidth" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapImage.DownloadProgress">
      <summary>
        <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> コンテンツのダウンロードの進行中に重要な変更が起きた場合に発生します。</summary>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapImage.ImageFailed">
      <summary>イメージの取得または形式に関連付けられているエラーが発生したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Media.Imaging.BitmapImage.ImageOpened">
      <summary>エラーが発生することなくイメージ ソースがダウンロードおよびデコードされたときに発生します。このイベントを使用して、描画する前にイメージのサイズを判定できます。</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapImage.UriSource">
      <summary>この <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> を生成したグラフィックス ソース ファイルの URI を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Imaging.BitmapImage" /> を生成したグラフィックス ソース ファイルの URI。</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapImage.UriSourceProperty">
      <summary>
        <see cref="P:System.Windows.Media.Imaging.BitmapImage.UriSource" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.BitmapSource">
      <summary>ビットマップを使用するプロパティのソース オブジェクトを提供します。</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.#ctor">
      <summary>
        <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.PixelHeight">
      <summary>ビットマップの高さ (ピクセル単位) を取得します。</summary>
      <returns>ビットマップの高さ (ピクセル単位)。</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapSource.PixelHeightProperty">
      <summary>
        <see cref="P:System.Windows.Media.Imaging.BitmapSource.PixelHeight" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Imaging.BitmapSource.PixelHeight" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Media.Imaging.BitmapSource.PixelWidth">
      <summary>ビットマップの幅 (ピクセル単位) を取得します。</summary>
      <returns>ビットマップの幅 (ピクセル単位)。</returns>
    </member>
    <member name="F:System.Windows.Media.Imaging.BitmapSource.PixelWidthProperty">
      <summary>
        <see cref="P:System.Windows.Media.Imaging.BitmapSource.PixelWidth" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Media.Imaging.BitmapSource.PixelWidth" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="M:System.Windows.Media.Imaging.BitmapSource.SetSource(System.IO.Stream)">
      <summary>
        <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> のソースを設定します。</summary>
      <param name="streamSource">ソースの設定先のストリーム。</param>
    </member>
    <member name="T:System.Windows.Media.Imaging.DecodePixelType">
      <summary>ピクセルの種類を指定します。</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.DecodePixelType.Physical">
      <summary>物理ピクセル。</summary>
    </member>
    <member name="F:System.Windows.Media.Imaging.DecodePixelType.Logical">
      <summary>論理ピクセル。</summary>
    </member>
    <member name="T:System.Windows.Media.Imaging.DownloadProgressEventArgs">
      <summary>
        <see cref="E:System.Windows.Media.Imaging.BitmapImage.DownloadProgress" /> イベントのイベント データを提供します。</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.DownloadProgressEventArgs.Progress">
      <summary>ダウンロードの進行状況を 0 ～ 100 の値で取得します。</summary>
      <returns>ダウンロードの進行状況。値 0 は進行していないことを示し、100 はダウンロードが完了したことを示します。 </returns>
    </member>
    <member name="T:System.Windows.Media.Imaging.WriteableBitmap">
      <summary>書き込みおよび更新が可能な <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> を提供します。</summary>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Int32,System.Int32)">
      <summary>指定した次元を使用して、<see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="pixelWidth">ビットマップの幅。</param>
      <param name="pixelHeight">ビットマップの高さ。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pixelWidth" /> または <paramref name="pixelHeight" /> が 0 以下です。</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)">
      <summary>指定した <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> を使用して、<see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="source">初期化に使用する <see cref="T:System.Windows.Media.Imaging.BitmapSource" />。</param>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.UIElement,System.Windows.Media.Transform)">
      <summary>指定した要素および変換を使用して、<see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="element">ビットマップ内にレンダリングされる目的の要素。</param>
      <param name="transform">ビットマップへの描画前の最後のステップとして要素に適用する変換。これは特にビットマップにその変換を適用する場合に使用します。この値は null の場合もあります。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
      <exception cref="T:System.ArgumentException">要素サイズが無効です。これは、ピクセルの幅またはピクセルの高さが 0 以下である場合に発生します。</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.Invalidate">
      <summary>ビットマップ全体の描画または再描画を要求します。</summary>
    </member>
    <member name="P:System.Windows.Media.Imaging.WriteableBitmap.Pixels">
      <summary>ビットマップの 2-D テクスチャを表す配列を取得します。</summary>
      <returns>ビットマップの 2-D テクスチャを表す整数の配列。</returns>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" /> は、保護されたコンテンツから作成されます。この場合は、<see cref="P:System.Windows.Media.Imaging.WriteableBitmap.Pixels" /> 配列にアクセスできなくなります。</exception>
    </member>
    <member name="M:System.Windows.Media.Imaging.WriteableBitmap.Render(System.Windows.UIElement,System.Windows.Media.Transform)">
      <summary>ビットマップ内の要素をレンダリングします。</summary>
      <param name="element">ビットマップ内にレンダリングされる要素。</param>
      <param name="transform">ビットマップへの描画前に要素に適用する変換。空の変換を指定した場合、その要素を表すビットが、親内に配置されているかのように同じオフセット位置に表示されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> が null です。</exception>
    </member>
    <member name="T:System.Windows.Media.Media3D.Matrix3D">
      <summary>3 次元 (3-D) 空間の変換に使用される 4 × 4 行列を表します。</summary>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
        <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="m11">新規マトリックスの (1,1) フィールドの値。</param>
      <param name="m12">新規マトリックスの (1,2) フィールドの値。</param>
      <param name="m13">新規マトリックスの (1,3) フィールドの値。</param>
      <param name="m14">新規マトリックスの (1,4) フィールドの値。</param>
      <param name="m21">新規マトリックスの (2,1) フィールドの値。</param>
      <param name="m22">新規マトリックスの (2,2) フィールドの値。</param>
      <param name="m23">新規マトリックスの (2,3) フィールドの値。</param>
      <param name="m24">新規マトリックスの (2,4) フィールドの値。</param>
      <param name="m31">新規マトリックスの (3,1) フィールドの値。</param>
      <param name="m32">新規マトリックスの (3,2) フィールドの値。</param>
      <param name="m33">新規マトリックスの (3,3) フィールドの値。</param>
      <param name="m34">新規マトリックスの (3,4) フィールドの値。</param>
      <param name="offsetX">新しい行列の X オフセット フィールドの値。</param>
      <param name="offsetY">新しい行列の Y オフセット フィールドの値。</param>
      <param name="offsetZ">新しい行列の Z オフセット フィールドの値。</param>
      <param name="m44">新規マトリックスの (4,4) フィールドの値。</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Equals(System.Object)">
      <summary>2 つの行列が等しいかどうかをテストします。</summary>
      <returns>行列が等値である場合は true、非等値である場合は false。</returns>
      <param name="o">同じかどうかを確認する対象のオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Equals(System.Windows.Media.Media3D.Matrix3D)">
      <summary>2 つの行列が等しいかどうかをテストします。</summary>
      <returns>行列が等値である場合は true、非等値である場合は false。</returns>
      <param name="value">比較する <see cref="T:System.Windows.Media.Media3D.Matrix3D" />。</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.GetHashCode">
      <summary>この行列のハッシュ コードを返します。</summary>
      <returns>この行列のハッシュ コードを指定する整数。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.HasInverse">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> が反転可能かどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の逆が存在する場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.Identity">
      <summary>
        <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> 構造体を恒等 <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> に変更します。</summary>
      <returns>ID を表す <see cref="T:System.Windows.Media.Media3D.Matrix3D" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.Invert">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> 構造体を反転します。</summary>
      <exception cref="T:System.InvalidOperationException">行列は反転できません。</exception>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.IsIdentity">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> 構造体が恒等 <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> であるかどうかを確認します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> が恒等 <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> である場合は true。それ以外の場合は false。既定値は true です。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M11">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 1 行、第 1 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> 構造体の第 1 行、第 1 列の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M12">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 1 行、第 2 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 1 行、第 2 列の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M13">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 1 行、第 3 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 1 行、第 3 列の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M14">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 1 行、第 4 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 1 行、第 4 列の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M21">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 2 行、第 1 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の 2 番目の行と最初の列の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M22">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 2 行、第 2 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 2 行、第 2 列の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M23">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 2 行、第 3 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 2 行、第 3 列の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M24">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 2 行、第 4 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 2 行、第 4 列の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M31">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 3 行、第 1 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 3 行、第 1 列の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M32">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 3 行、第 2 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 3 行、第 2 列の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M33">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 3 行、第 3 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 3 行、第 3 列の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M34">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 3 行、第 4 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 3 行、第 4 列の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.M44">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 4 行、第 4 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 4 行、第 4 列の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.OffsetX">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 4 行、第 1 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 4 行、第 1 列の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.OffsetY">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 4 行、第 2 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 4 行、第 2 列の値。</returns>
    </member>
    <member name="P:System.Windows.Media.Media3D.Matrix3D.OffsetZ">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 4 行、第 3 列の値を取得または設定します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の第 4 行、第 3 列の値。</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.op_Equality(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary>2 つの <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> インスタンスを比較し、完全に等しいかどうかを確認します。</summary>
      <returns>行列が等値である場合は true、非等値である場合は false。</returns>
      <param name="matrix1">最初に比較する行列。</param>
      <param name="matrix2">2 番目に比較する行列。</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.op_Inequality(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary>2 つの <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> インスタンスを比較し、等しくないかどうかを判断します。</summary>
      <returns>行列が異なる場合は true。それ以外の場合は false。</returns>
      <param name="matrix1">最初に比較する行列。</param>
      <param name="matrix2">2 番目に比較する行列。</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.op_Multiply(System.Windows.Media.Media3D.Matrix3D,System.Windows.Media.Media3D.Matrix3D)">
      <summary>指定した行列を乗算します。</summary>
      <returns>乗算の結果である <see cref="T:System.Windows.Media.Media3D.Matrix3D" />。</returns>
      <param name="matrix1">乗算する行列。</param>
      <param name="matrix2">最初の行列に乗算する行列。</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>指定した書式を使用して、現在のインスタンスの値に書式を付けます。</summary>
      <returns>指定した書式での現在のインスタンスの値。</returns>
      <param name="format">使用する書式。</param>
      <param name="provider">使用するプロバイダー。</param>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.ToString">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の文字列形式を作成します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の文字列表現。</returns>
    </member>
    <member name="M:System.Windows.Media.Media3D.Matrix3D.ToString(System.IFormatProvider)">
      <summary>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の文字列形式を作成します。</summary>
      <returns>この <see cref="T:System.Windows.Media.Media3D.Matrix3D" /> の文字列表現。</returns>
      <param name="provider">カルチャ指定の書式設定情報。</param>
    </member>
    <member name="T:System.Windows.Navigation.LoadCompletedEventHandler">
      <summary>
        <see cref="E:System.Windows.Controls.WebBrowser.LoadCompleted" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatedEventHandler">
      <summary>
        <see cref="E:System.Windows.Navigation.NavigationService.Navigated" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventArgs">
      <summary>
        <see cref="M:System.Windows.Controls.Page.OnNavigatingFrom(System.Windows.Navigation.NavigatingCancelEventArgs)" /> メソッドおよび <see cref="E:System.Windows.Navigation.NavigationService.Navigating" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigatingCancelEventArgs.#ctor(System.Uri,System.Windows.Navigation.NavigationMode)">
      <summary>URI とモードに基づいて、<see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="uri">移動先のコンテンツの URI (Uniform Resource Identifier)。</param>
      <param name="mode">行われているナビゲーションの種類を示す値。</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigatingCancelEventArgs.#ctor(System.Uri,System.Windows.Navigation.NavigationMode,System.Boolean,System.Boolean)">
      <summary>すべての初期プロパティ値を設定して、<see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="uri">移動先のコンテンツの URI (Uniform Resource Identifier)。</param>
      <param name="mode">行われているナビゲーションの種類を示す値。</param>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.IsCancelable">
      <summary>ナビゲーションを取り消すことができるかどうかを示す値を取得します。</summary>
      <returns>ナビゲーションを取り消すことができる場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.IsNavigationInitiator">
      <summary>現在のアプリケーションがナビゲーションの始点と終点のどちらであるかを示す値を取得します。</summary>
      <returns>ナビゲーションが現在のアプリケーション内で開始して終了する場合は true。ナビゲーションが外部で開始して終了する場合は false。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode">
      <summary>行われているナビゲーションの種類を示す値を取得します。</summary>
      <returns>行われているナビゲーションの種類を示す値 (<see cref="F:System.Windows.Navigation.NavigationMode.Back" />、<see cref="F:System.Windows.Navigation.NavigationMode.Forward" />、または <see cref="F:System.Windows.Navigation.NavigationMode.New" />)。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri">
      <summary>移動先のコンテンツの URI (Uniform Resource Identifier) を取得します。</summary>
      <returns>コンテンツの URI を表す値。</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigatingCancelEventHandler">
      <summary>キャンセルできる <see cref="E:System.Windows.Navigation.NavigationService.Navigating" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="T:System.Windows.Navigation.NavigationEventArgs">
      <summary>ナビゲーション要求を取り消せないナビゲーション メソッドおよびイベント ハンドラーのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Navigation.NavigationEventArgs.#ctor(System.Object,System.Uri)">
      <summary>コンテンツと URI に基づいて、<see cref="T:System.Windows.Navigation.NavigationEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="content">
        <see cref="P:System.Windows.Navigation.NavigationEventArgs.Content" /> プロパティを初期化します。</param>
      <param name="uri">
        <see cref="P:System.Windows.Navigation.NavigationEventArgs.Uri" /> プロパティを初期化します。</param>
    </member>
    <member name="M:System.Windows.Navigation.NavigationEventArgs.#ctor(System.Object,System.Uri,System.Windows.Navigation.NavigationMode,System.Boolean)">
      <summary>コンテンツ、URI、ナビゲーション タイプ、ナビゲーションが現在のアプリケーションの内部かどうかに基づいて、<see cref="T:System.Windows.Navigation.NavigationEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="content">
        <see cref="P:System.Windows.Navigation.NavigationEventArgs.Content" /> プロパティを初期化します。</param>
      <param name="uri">
        <see cref="P:System.Windows.Navigation.NavigationEventArgs.Uri" /> プロパティを初期化します。</param>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Content">
      <summary>移動先のコンテンツを取得します。</summary>
      <returns>移動先のコンテンツを表すオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.IsNavigationInitiator">
      <summary>現在のアプリケーションがナビゲーションの始点と終点のどちらであるかを示す値を取得します。</summary>
      <returns>ナビゲーションが現在のアプリケーション内で開始して終了する場合は true。ナビゲーションが外部で開始して終了する場合は false。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.NavigationMode">
      <summary>ナビゲーションが前方、後方、新規のいずれであるかを示す値を取得します。</summary>
      <returns>ナビゲーションが前方、後方、新規のいずれであるかを示す値。既定値は、<see cref="F:System.Windows.Navigation.NavigationMode.New" /> です。</returns>
    </member>
    <member name="P:System.Windows.Navigation.NavigationEventArgs.Uri">
      <summary>移動先のコンテンツの URI を取得します。</summary>
      <returns>URI を表す値。</returns>
    </member>
    <member name="T:System.Windows.Navigation.NavigationMode">
      <summary>行われているナビゲーションの種類を指定します。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.New">
      <summary>新しいコンテンツへの移動。この値は、<see cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" /> メソッドが呼び出されるとき、または <see cref="P:System.Windows.Navigation.NavigationService.Source" /> プロパティが設定されるときに使用されます。また、この値は、ユーザーが Web ブラウザーから開始したナビゲーション要求 (Web ブラウザーの [戻る] ボタンまたは [進む] ボタンを含む) でも使用されます。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Back">
      <summary>"戻る" ナビゲーション履歴の最新のコンテンツへの移動。この値は、<see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> メソッドが呼び出されたときに使用されます。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Forward">
      <summary>"進む" ナビゲーション履歴の最新のコンテンツへの移動。この値は、<see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> メソッドが呼び出されたときに使用されます。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Refresh">
      <summary>現在のコンテンツの再読み込み。</summary>
    </member>
    <member name="F:System.Windows.Navigation.NavigationMode.Reset">
      <summary>これは <see cref="F:System.Windows.Navigation.NavigationMode.Refresh" /> と似ていますが、アプリはナビゲーションのターゲット URI を再評価し、バックスタックを消去し、新しいターゲット URI に移動する必要があります。</summary>
    </member>
    <member name="T:System.Windows.Resources.StreamResourceInfo">
      <summary>アプリケーション リソース、または <see cref="M:System.Windows.Application.GetResourceStream(System.Windows.Resources.StreamResourceInfo,System.Uri)" /> メソッドを使って取得したその他のパッケージのリソース ストリーム情報を提供します。</summary>
    </member>
    <member name="M:System.Windows.Resources.StreamResourceInfo.#ctor(System.IO.Stream,System.String)">
      <summary>
        <see cref="T:System.Windows.Resources.StreamResourceInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="stream">リソースを作成するために使用するストリーム。</param>
      <param name="contentType">コンテンツの MIME 型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が null です。</exception>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.ContentType">
      <summary>ストリームのコンテンツの MIME 型を取得します。</summary>
      <returns>ストリームのコンテンツの MIME 型 (文字列)。</returns>
    </member>
    <member name="P:System.Windows.Resources.StreamResourceInfo.Stream">
      <summary>リソースに格納されているストリームを取得します。</summary>
      <returns>リソースに格納されているストリーム。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Ellipse">
      <summary>楕円を描画します。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Ellipse.#ctor">
      <summary>
        <see cref="T:System.Windows.Shapes.Ellipse" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Windows.Shapes.Line">
      <summary>2 つの点の間に直線を描画します。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Line.#ctor">
      <summary>
        <see cref="T:System.Windows.Shapes.Line" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Line.X1">
      <summary>
        <see cref="T:System.Windows.Shapes.Line" /> の始点の x 座標を取得または設定します。</summary>
      <returns>線分の始点の x 座標 (ピクセル単位)。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X1Property">
      <summary>
        <see cref="P:System.Windows.Shapes.Line.X1" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Line.X1" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.X2">
      <summary>
        <see cref="T:System.Windows.Shapes.Line" /> の終点の x 座標を取得または設定します。</summary>
      <returns>線分の終点の x 座標 (ピクセル単位)。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.X2Property">
      <summary>
        <see cref="P:System.Windows.Shapes.Line.X2" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Line.X2" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y1">
      <summary>
        <see cref="T:System.Windows.Shapes.Line" /> の始点の y 座標を取得または設定します。</summary>
      <returns>線分の始点の y 座標 (ピクセル単位)。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y1Property">
      <summary>
        <see cref="P:System.Windows.Shapes.Line.Y1" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Line.Y1" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Line.Y2">
      <summary>
        <see cref="T:System.Windows.Shapes.Line" /> の終点の y 座標を取得または設定します。</summary>
      <returns>線分の終点の y 座標 (ピクセル単位)。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Line.Y2Property">
      <summary>
        <see cref="P:System.Windows.Shapes.Line.Y2" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Line.Y2" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Path">
      <summary>接続された一連の直線と曲線を描画します。線と曲線の寸法は <see cref="P:System.Windows.Shapes.Path.Data" /> プロパティによって宣言され、Path 固有のミニ言語、またはオブジェクト モデルで指定することができます。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Path.#ctor">
      <summary>
        <see cref="T:System.Windows.Shapes.Path" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Path.Data">
      <summary>描画される図形を指定する <see cref="T:System.Windows.Media.Geometry" /> を取得または設定します。</summary>
      <returns>描画される図形の説明。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Path.DataProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Path.Data" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Path.Data" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Polygon">
      <summary>一連の直線を接続して閉じた図形を形成している多角形を描画します。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Polygon.#ctor">
      <summary>
        <see cref="T:System.Windows.Shapes.Polygon" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.FillRule">
      <summary>図形の内側の塗りつぶしの決定方法を指定する値を取得または設定します。</summary>
      <returns>列挙体の値。既定値は、<see cref="F:System.Windows.Media.FillRule.EvenOdd" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.FillRuleProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Polygon.FillRule" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Polygon.FillRule" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Polygon.Points">
      <summary>多角形の頂点を格納するコレクションを取得または設定します。</summary>
      <returns>多角形の頂点を示す <see cref="T:System.Windows.Point" /> 構造体のコレクション。既定値は null です。この値は、下の「pointSet の文法」で説明する文字列として表すことができます。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polygon.PointsProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Polygon.Points" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Polygon.Points" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Polyline">
      <summary>接続された一連の直線を描画します。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Polyline.#ctor">
      <summary>
        <see cref="T:System.Windows.Shapes.Polyline" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.FillRule">
      <summary>図形の内側の塗りつぶしの決定方法を指定する値を取得または設定します。</summary>
      <returns>塗りつぶしの動作を指定する列挙値。既定値は、<see cref="F:System.Windows.Media.FillRule.EvenOdd" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.FillRuleProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Polyline.FillRule" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Polyline.FillRule" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Polyline.Points">
      <summary>
        <see cref="T:System.Windows.Shapes.Polyline" /> の頂点を格納するコレクションを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Shapes.Polyline" /> の頂点を示す <see cref="T:System.Windows.Point" /> 構造体のコレクション。既定値は null です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Polyline.PointsProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Polyline.Points" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Polyline.Points" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Rectangle">
      <summary>ストロークおよび塗りつぶしを設定できる四角形を描画します。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Rectangle.#ctor">
      <summary>
        <see cref="T:System.Windows.Shapes.Rectangle" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusX">
      <summary>四角形の角に丸みを付けるために使用される楕円の x 軸半径を取得または設定します。</summary>
      <returns>四角形の角に丸みを付けるために使用される楕円の x 軸半径。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusXProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Rectangle.RadiusX" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Rectangle.RadiusX" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Rectangle.RadiusY">
      <summary>四角形の角に丸みを付けるために使用される楕円の y 軸半径を取得または設定します。</summary>
      <returns>四角形の角に丸みを付けるために使用される楕円の y 軸半径。既定値は、0 です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Rectangle.RadiusYProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Rectangle.RadiusY" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Rectangle.RadiusY" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Shapes.Shape">
      <summary>
        <see cref="T:System.Windows.Shapes.Ellipse" />、<see cref="T:System.Windows.Shapes.Polygon" />、<see cref="T:System.Windows.Shapes.Rectangle" /> などの図形要素の基本クラスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Shapes.Shape.#ctor">
      <summary>
        <see cref="T:System.Windows.Shapes.Shape" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Fill">
      <summary>図形の内部を塗りつぶす方法を指定する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>図形内部の塗りつぶし方法を示す <see cref="T:System.Windows.Media.Brush" />。既定値は null です。解説を参照してください。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.FillProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.Fill" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.Fill" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.GeometryTransform">
      <summary>
        <see cref="T:System.Windows.Shapes.Shape" /> のジオメトリに描画前に適用される <see cref="T:System.Windows.Media.Transform" /> を表す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Shapes.Shape" /> のジオメトリに描画前に適用される <see cref="T:System.Windows.Media.Transform" />。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stretch">
      <summary>図形に割り当てられた領域を塗りつぶす方法を示す <see cref="T:System.Windows.Media.Stretch" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.Stretch" /> 列挙値のいずれか。実行時の既定値は、<see cref="T:System.Windows.Shapes.Shape" /> の種類によって異なります。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StretchProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.Stretch" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.Stretch" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.Stroke">
      <summary>
        <see cref="T:System.Windows.Shapes.Shape" /> のアウトラインを描画する方法を指定する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Shapes.Shape" /> のアウトラインの描画方法を指定する <see cref="T:System.Windows.Media.Brush" />。既定値は null です。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashArray">
      <summary>図形のアウトラインの描画に使用されるダッシュと空白の破線パターンを示す <see cref="T:System.Double" /> 値のコレクションを取得または設定します。</summary>
      <returns>ダッシュと空白から成る破線パターンを指定する <see cref="T:System.Double" /> 値のコレクション。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashArrayProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeDashArray" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeDashArray" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashCap">
      <summary>破線 (ダッシュ) の端を描画する方法を指定する <see cref="T:System.Windows.Media.PenLineCap" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.PenLineCap" /> の列挙値の 1 つ。既定値は、<see cref="F:System.Windows.Media.PenLineCap.Flat" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashCapProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeDashCap" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeDashCap" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeDashOffset">
      <summary>破線パターン内のダッシュの始点間の距離を指定する <see cref="T:System.Double" /> を取得または設定します。</summary>
      <returns>破線パターン内のダッシュの始点間の距離を表す <see cref="T:System.Double" />。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeDashOffsetProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeEndLineCap">
      <summary>線の端にある <see cref="T:System.Windows.Shapes.Shape" /> を示す <see cref="T:System.Windows.Media.PenLineCap" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Media.PenLineCap" /> の列挙値の 1 つ。既定値は、<see cref="F:System.Windows.Media.PenLineCap.Flat" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeEndLineCapProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeLineJoin">
      <summary>
        <see cref="T:System.Windows.Shapes.Shape" /> の頂点で使用する接合の種類を指定する <see cref="T:System.Windows.Media.PenLineJoin" /> 列挙値を取得または設定します。</summary>
      <returns>接合の外観を指定する <see cref="T:System.Windows.Media.PenLineJoin" /> 列挙型の値。既定値は <see cref="F:System.Windows.Media.PenLineJoin.Miter" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeLineJoinProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeMiterLimit">
      <summary>
        <see cref="T:System.Windows.Shapes.Shape" /> 要素の <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> の半分に対する接合部の長さの割合に関する制限を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Shapes.Shape" /> 要素の <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> に対する接合部の長さの割合に関する制限。この値は常に 1 以上の正の数です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeMiterLimitProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.Stroke" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.Stroke" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeStartLineCap">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.Stroke" /> の始点にある <see cref="T:System.Windows.Shapes.Shape" /> を示す <see cref="T:System.Windows.Media.PenLineCap" /> 列挙値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.Stroke" /> の始点にある図形を示す <see cref="T:System.Windows.Media.PenLineCap" /> 列挙値。既定値は、<see cref="F:System.Windows.Media.PenLineCap.Flat" /> です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeStartLineCapProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="P:System.Windows.Shapes.Shape.StrokeThickness">
      <summary>
        <see cref="T:System.Windows.Shapes.Shape" /> のストロークのアウトラインの幅を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Windows.Shapes.Shape" /> アウトラインの幅 (ピクセル単位)。既定値は 0 です。</returns>
    </member>
    <member name="F:System.Windows.Shapes.Shape.StrokeThicknessProperty">
      <summary>
        <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> 依存関係プロパティを識別します。</summary>
      <returns>
        <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> 依存関係プロパティの識別子。</returns>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
      <summary>スレッドの作業項目のキューを管理するためのサービスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Action)">
      <summary>
        <see cref="T:System.Windows.Threading.Dispatcher" /> が関連付けられているスレッドで、指定したデリゲートを非同期に実行します。</summary>
      <returns>
        <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> の呼び出し直後に戻されるオブジェクト。これは、<see cref="T:System.Windows.Threading.Dispatcher" /> キューにポストされた操作を表します。</returns>
      <param name="a">引数を受け取らず、値を返さないメソッドへのデリゲート。このデリゲートは、<see cref="T:System.Windows.Threading.Dispatcher" /> イベント キューにプッシュされます。</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary>
        <see cref="T:System.Windows.Threading.Dispatcher" /> が関連付けられているスレッドで、指定した一連の引数を使用して、指定したデリゲートを非同期的に実行します。</summary>
      <returns>
        <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> の呼び出し直後に戻されるオブジェクト。これは、<see cref="T:System.Windows.Threading.Dispatcher" /> キューにポストされた操作を表します。</returns>
      <param name="d">複数の引数を受け取るメソッドへのデリゲート。このデリゲートは、<see cref="T:System.Windows.Threading.Dispatcher" /> イベント キューにプッシュされます。</param>
      <param name="args">指定したメソッドに引数として渡すオブジェクトの配列。</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
      <summary>呼び出し元のスレッドがこの <see cref="T:System.Windows.Threading.Dispatcher" /> に関連付けられたスレッドであるかどうかを判断します。</summary>
      <returns>呼び出し元のスレッドがこの <see cref="T:System.Windows.Threading.Dispatcher" /> に関連付けられたスレッドである場合は true。それ以外の場合は false。</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
      <summary>
        <see cref="T:System.Windows.Threading.Dispatcher" /> キューにポストされた操作を表します。 </summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
      <summary>Windows Phone の同期コンテキストを提供します。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
      <summary>現在の <see cref="T:System.Windows.Threading.Dispatcher" /> を使用して、<see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
      <summary>指定した <see cref="T:System.Windows.Threading.Dispatcher" /> を使用して、<see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="dispatcher">この <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> に関連付ける <see cref="T:System.Windows.Threading.Dispatcher" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dispatcher" /> が null です。</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
      <summary>この <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> のコピーを作成します。</summary>
      <returns>この同期コンテキストのコピー。</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary>同期コンテキストでのコールバックを非同期に呼び出します。</summary>
      <param name="d">呼び出すデリゲート。</param>
      <param name="state">デリゲートに渡されたオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary>同期コンテキストでのコールバックを同期的に呼び出します。</summary>
      <param name="d">呼び出すデリゲート。</param>
      <param name="state">デリゲートに渡されたオブジェクト。</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
      <summary>指定した時間の間隔で、指定した優先順位で処理される <see cref="T:System.Windows.Threading.Dispatcher" /> キューに統合されているタイマー。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
      <summary>
        <see cref="T:System.Windows.Threading.DispatcherTimer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
      <summary>タイマー刻みの間隔の時間を取得または設定します。</summary>
      <returns>タイマー刻み間の時間。既定値は 00:00:00 です。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">このプロパティの設定時に指定された値は、負の時間間隔を表します。</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
      <summary>タイマーが実行されているかどうかを示す値を取得します。</summary>
      <returns>タイマーが有効な場合は true。それ以外の場合は false。  </returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
      <summary>
        <see cref="T:System.Windows.Threading.DispatcherTimer" /> を開始します。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
      <summary>
        <see cref="T:System.Windows.Threading.DispatcherTimer" /> を停止します。</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
      <summary>タイマー間隔が経過すると発生します。</summary>
    </member>
  </members>
</doc>