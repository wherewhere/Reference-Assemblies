<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Generic.KeyedByTypeCollection`1">
      <summary>Stellt eine Auflistung bereit, deren Elemente Typen sind, die als Schlüssel dienen.</summary>
      <typeparam name="TItem">Die Elementtypen, die in der Auflistung enthalten sind und auch als Schlüssel für die Auflistung dienen.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />-Klasse. </summary>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Find``1">
      <summary>Gibt das erste Element in der Auflistung für einen angegebenen Typ zurück.</summary>
      <returns>Das Objekt vom Typ <paramref name="T" />, wenn es sich um einen Verweistyp handelt, und der Wert vom Typ <paramref name="T" />, wenn es sich um einen Werttyp handelt. Der Standardwert des Typs wird zurückgegeben, wenn kein Objekt vom Typ <paramref name="T" /> in der Auflistung enthalten ist; NULL, wenn es sich um einen Verweistyp handelt, und 0 (null),  wenn es sich um einen Werttyp handelt.</returns>
      <typeparam name="T">Der Typ des Elements in der Auflistung, nach dem gesucht werden soll.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.FindAll``1">
      <summary>Gibt eine Auflistung von Objekten vom Typ <paramref name="T" /> zurück, die in der <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> enthalten sind.</summary>
      <returns>Eine <see cref="T:System.Collections.ObjectModel.Collection`1" /> vom Typ <paramref name="T" />, die die Objekte vom Typ <paramref name="T" /> der ursprünglichen Auflistung enthält.</returns>
      <typeparam name="T">Der Typ des Elements in der Auflistung, nach dem gesucht werden soll.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.GetKeyForItem(`0)">
      <summary>Ruft den Typ eines Elements ab, das in der Auflistung enthalten ist.</summary>
      <returns>Der Typ des angegebenen <paramref name="item" /> in der Auflistung.</returns>
      <param name="item">Das Element in der Auflistung, dessen Typ abgerufen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.InsertItem(System.Int32,`0)">
      <summary>Fügt an der angegebenen Position ein Element in die Auflistung ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</param>
      <param name="item">Das Objekt, das in die Auflistung eingefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> ist null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Remove``1">
      <summary>Entfernt ein Objekt eines bestimmten Typs aus der Auflistung.</summary>
      <returns>Das Objekt, das aus der Auflistung entfernt wurde.</returns>
      <typeparam name="T">Der Typ des Elements in der Auflistung, das entfernt werden soll.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.RemoveAll``1">
      <summary>Entfernt alle Elemente eines angegebenen Typs aus der Auflistung.</summary>
      <returns>Die <see cref="T:System.Collections.ObjectModel.Collection`1" />, die die Objekte vom Typ <paramref name="T" /> aus der ursprünglichen Auflistung enthält.</returns>
      <typeparam name="T">Der Typ des Elements in der Auflistung, das entfernt werden soll.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.SetItem(System.Int32,`0)">
      <summary>Ersetzt das Element am angegebenen Index durch ein neues Objekt.</summary>
      <param name="index">Der nullbasierte Index des zu ersetzenden <paramref name="item" />.</param>
      <param name="item">Das Objekt, das der Auflistung hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> ist null.</exception>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1">
      <summary>Stellt eine threadsichere, schreibgeschützte Auflistung mit Objekten eines Typs bereit, die vom generischen Parameter als Elemente angegeben werden.</summary>
      <typeparam name="T">Der Objekttyp der Elemente in der threadsicheren, schreibgeschützten Auflistung.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" />-Klasse aus einer angegebenen aufzählbaren Liste mit Elementen und mit dem Objekt, das zum Synchronisieren des Zugriffs auf die threadsichere, schreibgeschützte Auflistung verwendet wird.</summary>
      <param name="syncRoot">Das Objekt, das zum Synchronisieren des Zugriffs auf die threadsichere, schreibgeschützte Auflistung verwendet wird.</param>
      <param name="list">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Auflistung von Elementen zum Initialisieren der threadsicheren, schreibgeschützten Auflistung.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Contains(`0)">
      <summary>Bestimmt, ob die Auflistung ein Element mit einem spezifischen Wert enthält.</summary>
      <returns>true, wenn sich das <paramref name="value" />-Element in der Auflistung befindet, andernfalls false.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> ist kein Objekt vom Typ der in der Auflistung enthaltenen Objekte.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Kopiert die Elemente der Auflistung in ein angegebenes Array. Dabei wird bei einem bestimmten Index begonnen.</summary>
      <param name="array">Das <see cref="T:System.Array" />, welches das Ziel für die aus der Auflistung kopierten Elemente ist.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Count">
      <summary>Ruft die Anzahl der Elemente ab, die in der threadsicheren, schreibgeschützten Auflistung enthalten sind.</summary>
      <returns>Die Anzahl der Elemente, die in der threadsicheren, schreibgeschützten Auflistung enthalten sind.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die synchronisierte, schreibgeschützte Auflistung durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.Generic.IEnumerator`1" /> für Objekte des Typs, die in der Auflistung gespeichert sind.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.IndexOf(`0)">
      <summary>Gibt den Index des ersten Vorkommens eines Werts in der Auflistung zurück.</summary>
      <returns>Der nullbasierte Index des ersten Vorkommens von <paramref name="value" /> in der Auflistung.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Item(System.Int32)">
      <summary>Ruft ein Element aus der threadsicheren, schreibgeschützten Auflistung mit einem angegebenen Index ab.</summary>
      <returns>Das Element aus der schreibgeschützten Auflistung mit dem angegebenen Index.</returns>
      <param name="index">Der nullbasierte Index des Elements, das aus der Auflistung abgerufen werden soll.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Items">
      <summary>Ruft die Liste der Elemente ab, die in der threadsicheren, schreibgeschützten Auflistung enthalten sind.</summary>
      <returns>Die <see cref="T:System.Collections.Generic.IList`1" /> der Elemente, die in der threadsicheren, schreibgeschützten Auflistung enthalten sind.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Löst beim Aufruf eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="value">Das Element, das der Auflistung hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Einer schreibgeschützten Auflistung können keine Elemente hinzugefügt werden.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Löst beim Aufruf eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <exception cref="T:System.NotSupportedException">Aus einer schreibgeschützten Auflistung können keine Elemente gelöscht werden.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gibt true zurück.</summary>
      <returns>true.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Entfernt das erste Vorkommen eines bestimmten Objekts aus der <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>Die Methode gibt false zurück, um anzugeben, dass das Element nicht aus der schreibgeschützten Auflistung entfernt wurde.</returns>
      <param name="value">Der Wert, der aus der Auflistung entfernt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Aus einer schreibgeschützten Auflistung können keine Elemente entfernt werden.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>Löst beim Aufruf eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Das Objekt, das in die Auflistung eingefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">In eine schreibgeschützte Auflistung können keine Elemente eingefügt werden.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab.</summary>
      <returns>Das Element vom Typ <paramref name="T" /> am angegebenen Index.</returns>
      <param name="index">Der nullbasierte Index des Elements, das aus der Auflistung abgerufen werden soll.</param>
      <exception cref="T:System.NotSupportedException">In einer schreibgeschützten Auflistung können keine Elemente festgelegt werden.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Löst beim Aufruf eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="index">Der nullbasierte Index des Elements, das aus der Auflistung abgerufen werden soll.</param>
      <exception cref="T:System.NotSupportedException">Aus einer schreibgeschützten Auflistung können keine Elemente entfernt werden.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Kopiert die Elemente der Auflistung in ein angegebenes Array. Dabei wird bei einem angegebenen Index begonnen.</summary>
      <param name="array">Das <see cref="T:System.Array" />, welches das Ziel für die aus der Auflistung kopierten Elemente ist.</param>
      <param name="index">Der nullbasierte Index im Array, an dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert wird.</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die synchronisierte, schreibgeschützte Auflistung durchläuft.</summary>
      <returns>Der <see cref="T:System.Collections.IEnumerator" />, der die synchronisierte, schreibgeschützte Auflistung durchläuft.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Löst eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <returns>Die <see cref="T:System.NotSupportedException" />.</returns>
      <param name="value">Das Element, das der Auflistung hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Einer schreibgeschützten Auflistung können keine Elemente hinzugefügt werden.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Clear">
      <summary>Löst eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <exception cref="T:System.NotSupportedException">Aus einer schreibgeschützten Auflistung können keine Elemente gelöscht werden.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Bestimmt, ob die Auflistung ein Element mit einem spezifischen Wert enthält.</summary>
      <returns>Gibt true zurück, wenn sich das <paramref name="value" />-Element in der Auflistung befindet, andernfalls false.</returns>
      <param name="value">Das Objekt, das in der Auflistung gesucht werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> ist kein Objekt vom Typ der in der Auflistung enthaltenen Objekte.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Bestimmt den Index eines bestimmten Elements in der Auflistung.</summary>
      <returns>Der Index von <paramref name="value" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</returns>
      <param name="value">Das Element, dessen Index abgerufen wird.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Löst beim Aufruf eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</param>
      <param name="value">Das Objekt, das in die Auflistung eingefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">In eine schreibgeschützte Auflistung können keine Elemente eingefügt werden.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung eine feste Größe hat.</summary>
      <returns>true</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>true</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Ruft das Element am angegebenen Index ab und löst eine Ausnahme aus, wenn ein Element festgelegt ist.</summary>
      <returns>Das Objekt an der angegebenen Position in der Auflistung.</returns>
      <param name="index">Der nullbasierte Index des Elements in der Auflistung.</param>
      <exception cref="T:System.NotSupportedException">In einer schreibgeschützten Auflistung können keine Elemente festgelegt werden.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Entfernt das erste Vorkommen eines bestimmten Objekts aus der <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Der nullbasierte Index des Elements, das aus der Auflistung abgerufen werden soll.</param>
      <exception cref="T:System.NotSupportedException">Aus einer schreibgeschützten Auflistung können keine Elemente entfernt werden.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Löst beim Aufruf eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <param name="index">Der nullbasierte Index des Elements, das aus der Auflistung abgerufen werden soll.</param>
      <exception cref="T:System.NotSupportedException">Aus einer schreibgeschützten Auflistung können keine Elemente entfernt werden.</exception>
    </member>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>Diese Ausnahme wird auf dem Client ausgelöst, wenn die Aktion, die sich auf den aufgerufenen Vorgang bezieht, nicht mit der Aktion eines im Dienst verfügbaren Vorgangs übereinstimmt.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ActionNotSupportedException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ActionNotSupportedException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die die aktuelle Ausnahme ausgelöst hat. </param>
    </member>
    <member name="T:System.ServiceModel.BasicHttpBinding">
      <summary>Stellt eine Bindung dar, über die ein Client unter Windows Phone Endpunkte konfigurieren kann, die mit ASMX-basierten Webdiensten und anderen Diensten kommunizieren können, welche WS-I Basic Profile 1.1 entsprechen.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.BasicHttpBinding" />-Klasse.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.BasicHttpBinding" />-Klasse mit einem angegebenen Sicherheitstyp, der von der Bindung verwendet wird.</summary>
      <param name="securityMode">Der Wert von <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />, der den Sicherheitstyp für die SOAP-Nachricht und den Client angibt.</param>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
      <summary>Gibt eine geordnete Auflistung von Bindungselementen zurück, die in der aktuellen Bindung enthalten sind.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> mit dem geordneten Stapel aus Bindungselementen, die von <see cref="T:System.ServiceModel.BasicHttpBinding" /> beschrieben werden.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnableHttpCookieContainer">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:P:System.ServiceModel.BasicHttpBinding" /> das <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" /> enthält, oder legt diesen fest.</summary>
      <returns>true, wenn die Bindung das <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" /> enthält, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion">
      <summary>Ruft die SOAP-Version für Nachrichten ab, die von dieser Bindung verarbeitet werden.</summary>
      <returns>Der Wert der <see cref="T:System.ServiceModel.EnvelopeVersion" />, die mit dieser Bindung verwendet wird. Der Wert ist immer SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize">
      <summary>Ruft die maximale Größe für einen Puffer ab, der Nachrichten vom Kanal empfängt, oder legt diese fest.</summary>
      <returns>Die maximale Größe eines Puffers in Byte, der Nachrichten speichert, während diese für einen mit dieser Bindung konfigurierten Endpunkt verarbeitet werden. Der Standardwert ist 65.536 Byte.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize">
      <summary>Ruft die maximale Größe für eine Nachricht ab, die auf einem mit dieser Bindung konfigurierten Kanal empfangen werden kann, oder legt diese fest.</summary>
      <returns>Die maximale Größe für eine Nachricht in Byte, die von der Bindung verarbeitet wird. Der Standardwert ist 65.536 Byte.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist kleiner als 0.</exception>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Scheme">
      <summary>Ruft das URI-Transportschema für die Kanäle und Listener ab, die mit dieser Bindung konfiguriert sind.</summary>
      <returns>"https", wenn der Sicherheitsmodus im Transportbindungselement auf <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> oder <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredentials" /> festgelegt ist, andernfalls "http".</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Security">
      <summary>Ruft den Sicherheitstyp für diese Bindung ab. </summary>
      <returns>Die <see cref="T:System.ServiceModel.BasicHttpSecurity" />, die mit dieser Bindung verwendet wird. Der Standardwert ist <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />. </returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.TextEncoding">
      <summary>Ruft die Zeichencodierung ab, die für den Nachrichtentext verwendet wird, oder legt sie fest.</summary>
      <returns>Die <see cref="T:System.Text.Encoding" />, die die verwendete Zeichencodierung angibt. Der Standardwert ist <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpMessageCredentialType">
      <summary>Listet Anmeldeinformationstypen auf, die der Client für die Authentifizierung verwenden kann, wenn der Sicherheitsmodus in der BasicHttpBinding-Bindung aktiviert ist.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName">
      <summary>Gibt an, dass sich der Client mit einem Benutzernamen authentifizieren muss.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.Certificate">
      <summary>Lediglich in Windows Phone vorhanden, aber nicht unterstützt.</summary>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurity">
      <summary>Gibt den Sicherheitsmodus für einen Windows Phone-Client an, der mit einer <see cref="T:System.ServiceModel.BasicHttpBinding" /> konfiguriert ist.</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Mode">
      <summary>Ruft den Sicherheitsmodus für einen Client ab, der mit einer <see cref="T:System.ServiceModel.BasicHttpBinding" /> konfiguriert ist, oder legt ihn fest.</summary>
      <returns>Ein Wert in der <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />-Enumeration. Der Standardwert für diese Eigenschaft ist <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist für <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> nicht gültig.</exception>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurityMode">
      <summary>Gibt die Sicherheitstypen an, die mit der vom System bereitgestellten <see cref="T:System.ServiceModel.BasicHttpBinding" />-Bindung verwendet werden können.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.None">
      <summary>Die SOAP-Nachricht ist während der Übertragung nicht gesichert. Dies ist das Standardverhalten.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.Transport">
      <summary>Sicherheit wird über HTTPS bereitgestellt. Der Dienst muss mit SSL-Zertifikaten konfiguriert werden. Die SOAP-Nachricht wird als Ganzes mit HTTPS geschützt. Der Dienst wird vom Client anhand des SSL-Zertifikats des Diensts authentifiziert.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential">
      <summary>Dieser Modus stellt Integrität, Vertraulichkeit und Serverauthentifizierung über HTTPS bereit. Der Dienst muss mit einem Zertifikat konfiguriert werden. Die Clientauthentifizierung wird über die SOAP-Nachrichtensicherheit bereitgestellt.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly">
      <summary>Dieser Modus stellt nur HTTP-basierte Clientauthentifizierung bereit. Er bietet keine Nachrichtenintegrität oder Vertraulichkeit.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>Erstellt und verwaltet die Kanäle, die von Clients zum Senden von Nachrichten an Dienstendpunkte verwendet werden.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ChannelFactory" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <summary>Initialisiert die Kanalfactory mit den Verhaltensweisen, die von einer angegebenen Konfigurationsdatei bereitgestellt werden, sowie mit den Verhaltensweisen im Dienstendpunkt der Kanalfactory.</summary>
      <param name="configurationName">Der Name der Konfigurationsdatei.</param>
      <exception cref="T:System.InvalidOperationException">Der Dienstendpunkt der Kanalfactory ist NULL.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>Erstellt beim Implementieren in einer abgeleiteten Klasse eine Beschreibung des Dienstendpunkts, der der Kanalfactory zugeordnet ist.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, der der Kanalfactory zugeordnet ist.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>Erstellt die Kanalfactory für den aktuellen Endpunkt der Factory.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> für den Endpunkt der aktuellen Factory.</returns>
      <exception cref="T:System.InvalidOperationException">Der Endpunkt des Diensts, mit dem die Factorykanäle eine Verbindung herstellen, ist NULL, oder die Bindung des Endpunkts ist NULL oder ihr fehlt das Element mit dem angegebenen Konfigurationsnamen.</exception>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>Ruft die Anmeldeinformationen ab, die von Clients für die Kommunikation mit einem Dienstendpunkt über die von der Factory erzeugten Kanäle verwendet werden.</summary>
      <returns>Die von Clients verwendeten <see cref="T:System.ServiceModel.Description.ClientCredentials" />, sofern sie für die Factory konfiguriert sind oder sofern der Endpunkt kein NULL-Verweis ist und sich entweder im <see cref="F:System.ServiceModel.CommunicationState.Created" />- oder im <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Kommunikationszustand befindet; andernfalls NULL.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Schließvorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Schließen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Öffnungsvorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Öffnen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>Ruft den Dienstendpunkt ab, zu dem die von der Factory erzeugten Kanäle eine Verbindung aufbauen.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />, zu dem von der Factory erzeugte Kanäle eine Verbindung aufbauen.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>Öffnet die aktuelle Kanalfactory, sofern sie noch nicht geöffnet ist.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Factory wird entweder geschlossen oder ist geschlossen und kann daher nicht geöffnet werden.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>Gibt das angeforderte typisierte Objekt von der entsprechenden Ebene im Kanalstapel zurück, wenn es vorhanden ist, oder NULL, wenn es nicht vorhanden ist.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, falls vorhanden, oder NULL, falls nicht vorhanden.</returns>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert den Dienstendpunkt der Kanalfactory mit einer angegebenen Bindung und Adresse.</summary>
      <param name="binding">Die <see cref="T:System.ServiceModel.Channels.Binding" />, mit der der Endpunkt für die Kanalfactory initialisiert werden soll.</param>
      <param name="address">Die <see cref="T:System.ServiceModel.EndpointAddress" />, mit der der Endpunkt für die Kanalfactory initialisiert werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert den Dienstendpunkt der Kanalfactory mit einer angegebenen Adresse und Konfiguration.</summary>
      <param name="configurationName">Der Name der Konfigurationsdatei, mit der die Kanalfactory initialisiert werden soll.</param>
      <param name="address">Die <see cref="T:System.ServiceModel.EndpointAddress" />, mit der Endpunkte für die Kanalfactory initialisiert werden sollen.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>Beendet die innere Kanalfactory der aktuellen Kanalfactory.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Schließvorgang in der inneren Kanalfactory der aktuellen Kanalfactory, der ein Zustandsobjekt zugeordnet ist. </summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Vorgang verweist.</returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Vorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Öffnungsvorgang in der inneren Kanalfactory der aktuellen Kanalfactory, der ein Zustandsobjekt zugeordnet ist. </summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Vorgang verweist.</returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Vorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>Aufrufe werden in der inneren Kanalfactory mit einem angegebenen Timeout für den Abschluss des Vorgangs geschlossen.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Vorgang bleibt, bevor ein Timeout eintritt.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>Schließt einen asynchronen Schließvorgang in der inneren Kanalfactory der aktuellen Kanalfactory ab. </summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wurde.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>Schließt einen asynchronen Öffnungsvorgang in der inneren Kanalfactory der aktuellen Kanalfactory ab. </summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wurde.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>Aufrufe werden in der inneren Kanalfactory der aktuellen Kanalfactory mit einem angegebenen Timeout für den Abschluss des Vorgangs geöffnet.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Öffnungsvorgang bleibt, bevor ein Timeout eintritt.</param>
      <exception cref="T:System.InvalidOperationException">Der innere Kanal des aktuellen Kanals ist NULL.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>Initialisiert eine schreibgeschützte Kopie des <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Objekts für die Kanalfactory.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>Erstellt die innere Kanalfactory für den aktuellen Kanal.</summary>
      <exception cref="T:System.InvalidOperationException">Die innere Kanalfactory für die Kanalfactory ist NULL.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>Schließt die aktuelle Kanalfactory.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>Eine Factory, die Kanäle verschiedener Typen erstellt, mit denen Clients Nachrichten an verschieden konfigurierte Dienstendpunkte senden.</summary>
      <typeparam name="TChannel">Der Typ des Kanals, der von der Kanalfactory erzeugt wurde. Dieser Typ muss entweder <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> oder <see cref="T:System.ServiceModel.Channels.IRequestChannel" /> sein.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ChannelFactory`1" />-Klasse mit einer angegebenen Endpunktadresse und Bindungskonfiguration.</summary>
      <param name="binding">Die <see cref="T:System.ServiceModel.Channels.Binding" /> zum Konfigurieren der Kanäle, die von der Factory erstellt wurden.</param>
      <param name="remoteAddress">Die Ziel-<see cref="T:System.ServiceModel.EndpointAddress" /> für Kanäle, die von der Factory erstellt wurden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ChannelFactory`1" />-Klasse und konfiguriert den Endpunkt.</summary>
      <param name="endpointConfigurationName">Der Name der Datei, die die Konfiguration des Dienstendpunkts für die von der Factory erstellten Kanäle enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ChannelFactory`1" />-Klasse mit einer angegebenen Endpunktadresse und Endpunktkonfiguration.</summary>
      <param name="endpointConfigurationName">Der Name der Datei, die die Konfiguration des Dienstendpunkts für die von der Factory erstellten Kanäle enthält.</param>
      <param name="remoteAddress">Die Ziel-<see cref="T:System.ServiceModel.EndpointAddress" /> für Kanäle, die von der Factory erstellt wurden.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Erstellt einen Kanal, über den Nachrichten an einen Dienst mit einer bestimmten Endpunktadresse gesendet werden.</summary>
      <returns>Der von der Factory erstellte <paramref name="TChannel" /> vom Typ <see cref="T:System.ServiceModel.Channels.IChannel" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Erstellt einen Kanal, über den Nachrichten an einen Dienst mit einer bestimmten Endpunktadresse gesendet werden, wobei eine angegebene Transportadresse verwendet wird.</summary>
      <returns>Der von der Factory erstellte <paramref name="TChannel" /> vom Typ <see cref="T:System.ServiceModel.Channels.IChannel" />.</returns>
      <param name="via">Der <see cref="T:System.Uri" /> mit der Transportadresse, an die der Kanal Nachrichten sendet.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.ServiceModel.ChannelFactory" /> weist Duplexvorgänge auf, die nicht unterstützt werden.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>Erstellt eine Beschreibung des Dienstendpunkts.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> des Diensts.</returns>
      <exception cref="T:System.InvalidOperationException">Der Rückrufvertrag ist NULL, der Dienstendpunkt benötigt jedoch einen Rückrufvertrag, der nicht NULL (Nothing) ist.</exception>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>Stellt die Basisimplementierung bereit, mit der Clientobjekte (Proxys) für Windows Phone erstellen werden, die Dienste aufrufen können.</summary>
      <typeparam name="TChannel">Der für die Verbindung mit dem Dienst verwendete Kanal, der den Typ des von diesem Proxy gekapselten Dienstvertrags identifiziert.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ClientBase`1" />-Klasse mithilfe des standardmäßigen Zielendpunkts der Anwendungskonfigurationsdatei. </summary>
      <exception cref="T:System.InvalidOperationException">Es sind keine Informationen zum Standardendpunkt in der Konfigurationsdatei enthalten, die Datei enthält mehrere Endpunktdateien oder es gibt keine Konfigurationsdatei.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ClientBase`1" />-Klasse mithilfe einer angegebenen Bindung und Zieladresse. </summary>
      <param name="binding">Die Bindung, mit der konfiguriert wird, wie Aufrufe an den Dienst erfolgen sollen.</param>
      <param name="remoteAddress">Die Adresse des Dienstendpunkts.</param>
      <exception cref="T:System.ArgumentNullException">Die Bindung ist NULL.</exception>
      <exception cref="T:System.ArgumentNullException">Die Remoteadresse ist NULL.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ClientBase`1" />-Klasse mithilfe der Konfigurationsinformationen, die in der Anwendungskonfigurationsdatei durch <paramref name="endpointConfigurationName" /> angegeben werden. </summary>
      <param name="endpointConfigurationName">Der Name des Endpunkts in der Anwendungskonfigurationsdatei.</param>
      <exception cref="T:System.ArgumentNullException">Die angegebenen Endpunktinformationen sind NULL.</exception>
      <exception cref="T:System.InvalidOperationException">Der Endpunkt wurde nicht gefunden, oder der Endpunktvertrag ist nicht gültig.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ClientBase`1" />-Klasse mithilfe der angegebenen Zieladresse und der Endpunktinformationen. </summary>
      <param name="endpointConfigurationName">Der Name des Endpunkts in der Anwendungskonfigurationsdatei.</param>
      <param name="remoteAddress">Die Adresse des Diensts.</param>
      <exception cref="T:System.ArgumentNullException">Der Endpunkt ist NULL.</exception>
      <exception cref="T:System.ArgumentNullException">Die Remoteadresse ist NULL.</exception>
      <exception cref="T:System.InvalidOperationException">Der Endpunkt wurde nicht gefunden, oder der Endpunktvertrag ist nicht gültig.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ClientBase`1" />-Klasse.</summary>
      <param name="endpointConfigurationName">Der Name des Endpunkts in der Anwendungskonfigurationsdatei.</param>
      <param name="remoteAddress">Die Adresse des Diensts.</param>
      <exception cref="T:System.ArgumentNullException">Der Endpunkt ist NULL.</exception>
      <exception cref="T:System.ArgumentNullException">Die Remoteadresse ist NULL.</exception>
      <exception cref="T:System.InvalidOperationException">Der Endpunkt wurde nicht gefunden, oder der Endpunktvertrag ist nicht gültig.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>Bewirkt, dass das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt sofort von seinem aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>Ruft den inneren Kanal ab, der für die Kommunikation mit dem Dienst verwendet wird.</summary>
      <returns>Eine Implementierung der Zieldienst-Vertragsschnittstelle, die als Typparameter an den Konstruktor übergeben wurde.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>Ruft das zugrunde liegende <see cref="T:System.ServiceModel.ChannelFactory`1" />-Objekt ab.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.ChannelFactory`1" />-Objekt.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>Ruft die Clientanmeldeinformationen ab, die verwendet werden, um einen Vorgang aufzurufen.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Objekt, das den vom Client präsentierten Identitätsnachweis darstellt.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>Gibt einen neuen Kanal vom Client an den Dienst zurück.</summary>
      <returns>Ein Kanal vom Typ <paramref name="TChannel" />, der den Typ des von diesem Clientobjekt (Proxy) gekapselten Dienstvertrags identifiziert.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>Ruft den Zielendpunkt für den Dienst ab, mit dem der Windows Phone-Client eine Verbindung herstellen kann.</summary>
      <returns>Das <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />-Zielobjekt.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>Repliziert das Verhalten des Standardschlüsselworts in C#.</summary>
      <returns>Gibt NULL zurück, wenn T ein Verweistyp ist, und 0 (null), wenn T ein numerischer Werttyp ist.</returns>
      <typeparam name="T">Ein C#-Typ.</typeparam>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>Ruft die zugrunde liegende <see cref="T:System.ServiceModel.IClientChannel" />-Implementierung ab.</summary>
      <returns>Der Clientchannel für das Windows Phone-Clientobjekt.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>Bietet Unterstützung zum Implementieren des ereignisbasierten asynchronen Musters. 
    For more information about 
   dieses Muster finden Sie unter Event-based Asynchronous Pattern Overview.</summary>
      <param name="beginOperationDelegate">Ein Delegat, der zum Aufrufen des asynchronen Vorgangs verwendet wird.</param>
      <param name="inValues">Die Eingabewerte für den asynchronen Aufruf.</param>
      <param name="endOperationDelegate">Ein Delegat, der verwendet wird, um den asynchronen Aufruf nach dem Abschluss zu beenden.</param>
      <param name="operationCompletedCallback">Ein vom Client bereitgestellter Rückruf, der aufgerufen wird, wenn die asynchrone Methode abgeschlossen ist. Der Rückruf wird an <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" /> übergeben.</param>
      <param name="userState">Das <paramref name="userState" />-Objekt, das dem asynchronen Aufruf zugeordnet werden soll.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>Ruft den aktuellen Zustand des <see cref="T:System.ServiceModel.ClientBase`1" />-Objekts ab.</summary>
      <returns>Der <see cref="T:System.ServiceModel.CommunicationState" />-Wert des Objekts.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um <see cref="T:System.ServiceModel.ClientBase`1" /> zu schließen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Schließvorgang verweist.</returns>
      <param name="callback">Die Methode, die den Rückruf beim Abschluss empfängt.</param>
      <param name="state">Die Zustandsdaten.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um <see cref="T:System.ServiceModel.ClientBase`1" /> mit einem angegebenen Timeout zu schließen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Start-/Schließvorgang verweist.</returns>
      <param name="timeout">Der Zeitraum, in dem der Aufruf abgeschlossen sein muss.</param>
      <param name="callback">Das beim Abschluss des Vorgangs aufgerufene Rückrufobjekt.</param>
      <param name="state">Die Zustandsdaten.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt zu öffnen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Öffnungsvorgang verweist. </returns>
      <param name="callback">Die Methode, die den Rückruf beim Abschluss empfängt.</param>
      <param name="state">Die Zustandsdaten.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt innerhalb eines angegebenen Zeitintervalls zu öffnen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Öffnungsvorgang verweist.</returns>
      <param name="timeout">Der Zeitraum, in dem der Aufruf abgeschlossen sein muss.</param>
      <param name="callback">Die Methode, die den Rückruf beim Abschluss empfängt.</param>
      <param name="state">Die Zustandsdaten.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Bewirkt, dass das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt von seinem aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Bewirkt, dass das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt von seinem aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
      <param name="timeout">Der Zeitraum, in dem der Aufruf abgeschlossen sein muss.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt von seinem aktuellen Zustand in den geschlossenen Zustand übergegangen ist.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt von seinem aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt zu schließen.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das zum Abschluss des asynchronen Schließvorgangs verwendet wird.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt zu öffnen.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das zum Abschluss des asynchronen Beende-/Öffnungsvorgangs verwendet wird.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn beim Ausführen eines Vorgangs für das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt ein Fehler aufgetreten ist.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Bewirkt, dass das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt vom Zustand "Erstellt" in den Zustand "Geöffnet" übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Bewirkt, dass das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt innerhalb eines angegebenen Zeitintervalls vom Zustand "Erstellt" in den Zustand "Geöffnet" übergeht.</summary>
      <param name="timeout">Der Zeitraum, in dem der Aufruf abgeschlossen sein muss.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt vom Zustand "Erstellt" in den Zustand "Geöffnet" übergegangen ist.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das <see cref="T:System.ServiceModel.ClientBase`1" />-Objekt vom Zustand "Erstellt" in den Zustand "Geöffnet" übergeht.</summary>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>Ein Delegat, der von <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> zum Aufrufen asynchroner Vorgänge auf dem Client verwendet wird. </summary>
      <returns>Das Ergebnis des asynchronen Aufrufs.</returns>
      <param name="inValues">Die Eingabewerte für den asynchronen Aufruf.</param>
      <param name="asyncCallback">Verweis auf die Methode, die aufgerufen werden soll, sobald der entsprechende asynchrone Vorgang abgeschlossen wird.</param>
      <param name="state">Ein <see cref="T:System.Object" />, das den Client zwischen verschiedenen asynchronen Aufrufen unterscheiden lässt. Es wird dem Client im <paramref name="arguments" />-Parameter des Ereignisabschlussrückrufs verfügbar gemacht.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.ChannelBase`1">
      <summary>Diese Klasse wird von automatisch generierten Clientproxys zum Aufrufen von Diensten verwendet und darf nicht anderweitig verwendet werden. 
</summary>
      <typeparam name="T">Die generische Klasse.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ClientBase`1" />-Klasse aus einer vorhandenen Instanz der Klasse.</summary>
      <param name="client">Das <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />-Objekt, das zum Initialisieren der neuen Instanz der Klasse verwendet wird.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Aufruf einer angegebenen Methode nach dem Namen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf die aufgerufene asynchrone Methode verweist.</returns>
      <param name="methodName">Der Name der Methode, die asynchron aufgerufen werden soll.</param>
      <param name="args">Ein Array von Argumenten für die aufgerufene Methode.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat. </param>
      <param name="state">Der <see cref="T:System.AsyncCallback" />-Delegat. </param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)">
      <summary>Beendet einen asynchronen Aufruf nach dem Namen einer angegebenen Methode. </summary>
      <returns>
Die <see cref="T:System.Object" />-Ausgabe nach der aufgerufenen Methode.
</returns>
      <param name="methodName">Der Name der asynchron aufgerufenen Methode.</param>
      <param name="args">Ein Array von Argumenten für die aufgerufene Methode.</param>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="M:System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />-Methode zurückgegeben wurde.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose">
      <summary>Führt anwendungsdefinierte Aufgaben aus, die mit dem Freigeben, Zurückgeben oder Zurücksetzen von nicht verwalteten und dem Kanal zugeordneten Ressourcen zusammenhängen.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1">
      <summary>Gibt ggf. ein angefordertes typisiertes Objekt von der entsprechenden Schicht im Kanalstapel zurück.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, falls vorhanden, oder NULL, falls nicht vorhanden.</returns>
      <typeparam name="TProperty">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Nachricht an das Ziel des Ausgabekanals zu übertragen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf die asynchrone Nachrichtenübertragung verweist. </returns>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, die über den Ausgabekanal gesendet wird. </param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat. </param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Sendevorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Nachricht innerhalb eines angegebenen Zeitintervalls an das Ziel des Ausgabekanals zu übertragen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</returns>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, die über den Ausgabekanal gesendet wird.</param>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Sendevorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Sendevorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um eine Nachricht an das Ziel des Ausgabekanals zu übertragen. </summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wurde.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress">
      <summary>Ruft das Ziel des Diensts ab, an den über den Ausgabekanal Nachrichten gesendet werden.</summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointAddress" /> des Dienst, an den der Ausgabekanal Nachrichten sendet.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)">
      <summary>Überträgt eine Nachricht an das Ziel des Ausgabekanals. </summary>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, die über den Ausgabekanal gesendet wird.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Sendet eine Nachricht innerhalb eines angegebenen Zeitintervalls über den aktuellen Ausgabekanal.</summary>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, die über den Ausgabekanal gesendet wird.</param>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via">
      <summary>Ruft den URI mit der Transportadresse ab, an die Nachrichten über den Ausgabekanal gesendet werden.</summary>
      <returns>Der <see cref="T:System.Uri" /> mit der Transportadresse, an die Nachrichten über den Ausgabekanal gesendet werden.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Anforderungsnachricht an die Antwortseite eines Anforderung-Antwort-Nachrichtenaustausches zu übertragen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf die asynchrone Nachrichtenübertragung verweist. </returns>
      <param name="message">Die zu übertragende Anforderungsnachricht (<see cref="T:System.ServiceModel.Channels.Message" />).</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs zur Übertragung einer Anforderungsnachricht empfängt.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt mit Zustandsinformationen, die dem asynchronen Vorgang zur Übertragung einer Anforderungsnachricht zugeordnet sind.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Anforderungsnachricht innerhalb eines angegebenen Zeitintervalls an die Antwortseite eines Anforderung-Antwort-Nachrichtenaustausches zu übertragen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf die asynchrone Nachrichtenübertragung verweist. </returns>
      <param name="message">Die zu übertragende Anforderungsnachricht (<see cref="T:System.ServiceModel.Channels.Message" />).</param>
      <param name="timeout">Die <see cref="T:System.TimeSpan" />, die das Zeitintervall angibt, in der eine Antwort empfangen werden muss. (Informationen über die Standardwerte finden Sie in den Hinweisen.)</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs zur Übertragung einer Anforderungsnachricht empfängt.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt mit Zustandsinformationen, die dem asynchronen Vorgang zur Übertragung einer Anforderungsnachricht zugeordnet sind.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um eine nachrichtenbasierte Antwort auf eine übertragene Anforderung zurückzugeben. </summary>
      <returns>Die als Antwort auf die Anforderung empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wurde.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress">
      <summary>Ruft die Remoteadresse ab, an die der Anforderungskanal Nachrichten sendet. </summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointAddress" />, an die der Anforderungskanal Nachrichten sendet. </returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)">
      <summary>Sendet eine nachrichtenbasierte Anforderung und gibt die korrelierte nachrichtenbasierte Antwort zurück. </summary>
      <returns>Die als Antwort auf die Anforderung empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="message">Die zu übertragende Anforderungsnachricht (<see cref="T:System.ServiceModel.Channels.Message" />).</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Sendet eine nachrichtenbasierte Anforderung und gibt die korrelierte nachrichtenbasierte Antwort innerhalb eines angegebenen Zeitintervalls zurück.</summary>
      <returns>Die als Antwort auf die Anforderung empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="message">Die zu übertragende Anforderungsnachricht (<see cref="T:System.ServiceModel.Channels.Message" />).</param>
      <param name="timeout">Die <see cref="T:System.TimeSpan" />, die das Zeitintervall angibt, in der eine Antwort empfangen werden muss.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via">
      <summary>Ruft die Transportadresse ab, an die die Anforderung gesendet wird.</summary>
      <returns>Der <see cref="T:System.Uri" /> mit der Transportadresse, an die die Nachricht gesendet wird.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI">
      <summary>Die <see cref="T:System.ServiceModel.EndpointAddress" /> dient als Endziel und als physikalische Adresse, wenn kein <see cref="P:System.ServiceModel.Channels.IOutputChannel.Via" /> angegeben wurde. Wenn <see cref="P:System.ServiceModel.Channels.IOutputChannel.Via" /> angegeben wurde, ist dies die tatsächliche physikalische Adresse, an die die Nachricht gesendet wird und über die die Nachricht laufen muss, um das Ziel zu erreichen.</summary>
      <returns>Gibt <see cref="T:System.Boolean" /> zurück.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Ein asynchroner Aufruf, um mit der Verwendung einer Benutzeroberfläche zum Abrufen der Anmeldeinformationen zu beginnen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das nach Abschluss der Verarbeitung für den Rückruf verwendet werden soll.</returns>
      <param name="callback">Die Methode, die beim Abschluss dieser Methode aufgerufen wird.</param>
      <param name="state">Informationen über den Zustand des Kanals.</param>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization">
      <summary>Ruft einen Wert ab, der angibt, ob ein Aufruf für eine Benutzeroberfläche erfolgt ist, um Anmeldeinformationen abzurufen. </summary>
      <returns>true, wenn die <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" />-Methode aufgerufen wurde (oder die <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />-Methode und die <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />-Methode), andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI">
      <summary>Ein Aufruf für eine Benutzeroberfläche, um Anmeldeinformationen zu erhalten.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Wird aufgerufen, wenn der Aufruf von <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> beendet wurde.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#UnknownMessageReceived">
      <summary>Dies ist ein reserviertes Ereignis.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via">
      <summary>Ruft den URI mit der Transportadresse ab, an die Nachrichten über den Clientkanal gesendet werden.</summary>
      <returns>Der <see cref="T:System.Uri" /> mit der Transportadresse, an die Nachrichten über den Kanal gesendet werden.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort">
      <summary>Bewirkt, dass ein Kommunikationsobjekt sofort von seinem aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu schließen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Schließvorgang verweist. </returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Schließvorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt mit einem angegebenen Timeout zu schließen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Schließvorgang verweist.</returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Schließvorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu öffnen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Öffnungsvorgang verweist. </returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Öffnungsvorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Öffnungsvorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt innerhalb eines angegebenen Zeitintervalls zu öffnen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Öffnungsvorgang verweist. </returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Öffnungsvorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Öffnungsvorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close">
      <summary>Bewirkt, dass ein Kommunikationsobjekt von seinem aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Bewirkt, dass ein Kommunikationsobjekt von seinem aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />-Objekt vom aktuellen Status in den geschlossenen Status gewechselt hat.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />-Objekt vom aktuellen Status in den geschlossenen Status wechselt.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu schließen.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />-Methode zurückgegeben wird.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu öffnen.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />-Methode zurückgegeben wird.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn beim Ausführen eines Vorgangs auf das <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />-Objekt ein Fehler auftritt.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open">
      <summary>Bewirkt, dass ein Kommunikationsobjekt vom Zustand "Erstellt" in den geöffneten Zustand übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Bewirkt, dass ein Kommunikationsobjekt innerhalb eines angegebenen Zeitintervalls vom Zustand "Erstellt" in den geöffneten Zustand übergeht.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />-Objekt vom erstellten Status in den geschlossenen Status gewechselt hat.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>Der Ereignishandler, der aufgerufen wird, wenn das <see cref="T:System.ServiceModel.ClientBase`1.ChannelBase`1" />-Objekt vom erstellten Status in den geschlossenen Status wechselt.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State">
      <summary>Ruft den aktuellen Zustand des kommunikationsorientierten Objekts ab.</summary>
      <returns>Der <see cref="T:System.ServiceModel.CommunicationState" />-Wert des Objekts.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der Windows Phone anweist, einen Nachrichtensatz zu speichern, bevor die Nachrichten zum Transport weitergeleitet werden.</summary>
      <returns>true, wenn die Batchverarbeitung von ausgehenden Nachrichten zulässig ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession">
      <summary>Ruft die Eingabesitzung für den Kanal ab.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.IInputSession" /> für den Kanal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress">
      <summary>Ruft den lokalen Endpunkt für den Kanal ab.</summary>
      <returns>Die lokale <see cref="T:System.ServiceModel.EndpointAddress" /> für den Kanal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout">
      <summary>Ruft den Zeitraum ab oder legt ihn fest, in dem ein Vorgang abgeschlossen werden muss, andernfalls wird eine Ausnahme ausgelöst.</summary>
      <returns>Die <see cref="T:System.TimeSpan" />, die den Zeitraum angibt, in dem ein Vorgang abgeschlossen sein muss.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession">
      <summary>Ruft die Ausgabesitzung ab, die dem Kanal zugeordnet ist (falls vorhanden).</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.IOutputSession" />-Implementierung, wenn eine Eingabesitzung vorhanden ist, andernfalls NULL.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress">
      <summary>Ruft die Remoteadresse ab, die dem Kanal zugeordnet ist.</summary>
      <returns>Die Remote-<see cref="T:System.ServiceModel.EndpointAddress" /> für den Kanal.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId">
      <summary>Gibt einen Bezeichner für die aktuelle Sitzung zurück (falls vorhanden).</summary>
      <returns>Die aktuelle Sitzungs-ID (falls vorhanden).</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{T}#Extensions">
      <summary>Ruft eine Auflistung mit Erweiterungsobjekten für dieses erweiterbare Objekt ab.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.IExtensionCollection`1" /> von Erweiterungsobjekten.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>Ein Delegat, der von <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> aufgerufen wird, wenn der Aufruf von <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> an <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" /> erfolgreich abgeschlossen wurde.</summary>
      <returns>Ein <see cref="T:System.Object" />-Array, das die Ergebnisse eines Aufrufs der asynchronen Methode enthält. Der Vorgang kann mehrere Rückgabewerte haben, die alle in diesem Objektarray zurückgegeben werden.</returns>
      <param name="result">Das Ergebnis des Aufrufs von <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> an <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>Speichert die Ergebnisse eines asynchronen Aufrufs durch den Client.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>Ruft die Ergebnisse eines asynchronen Aufrufs durch den Client ab.</summary>
      <returns>Ein Array vom Typ <see cref="T:System.Object" /> mit den Ergebnissen aus einem asynchronen Aufruf durch den Client.</returns>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>Stellt einen Kommunikationsfehler in der Dienst- oder Clientanwendung dar.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationException" />-Klasse.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationException" />-Klasse unter Verwendung der angegebenen Meldung.</summary>
      <param name="message">Die Beschreibung des Fehlerzustands.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationException" />-Klasse unter Verwendung der angegebenen Meldung und der inneren Ausnahme.</summary>
      <param name="message">Die Beschreibung des Fehlerzustands.</param>
      <param name="innerException">Die innere Ausnahme, die verwendet werden soll.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>Die Ausnahme, die beim Aufruf eines abgebrochenen <see cref="T:System.ServiceModel.ICommunicationObject" />-Objekts ausgelöst wird.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />-Klasse mit der angegebenen Meldung. </summary>
      <param name="message">Die Meldung, die in der Ausnahme enthalten ist.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" />-Klasse unter Verwendung der angegebenen Meldung und der angegebenen internen Ausnahme. </summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="innerException">Die innere Ausnahme.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>Die Ausnahme, die beim Aufruf eines fehlerhaften Kommunikationsobjekts ausgelöst wird. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />-Klasse unter Verwendung der angegebenen Meldung.</summary>
      <param name="message">Die Meldung, in der die Ausnahme beschrieben wird</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />-Klasse unter Verwendung der angegebenen Meldung und der angegebenen internen Ausnahme.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="innerException">Die innere Ausnahme.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>Definiert die Zustände, in denen sich ein <see cref="T:System.ServiceModel.ICommunicationObject" /> befinden kann. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>Gibt an, dass das Kommunikationsobjekt zwar instanziiert wurde und konfigurierbar ist, aber noch nicht geöffnet oder bereit für die Verwendung ist.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>Gibt an, dass das Kommunikationsobjekt vom <see cref="F:System.ServiceModel.CommunicationState.Created" />-Zustand in den <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand übergeht. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>Gibt an, dass das Kommunikationsobjekt jetzt geöffnet und verwendungsbereit ist. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>Gibt an, dass das Kommunikationsobjekt in den <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand übergeht. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>Gibt an, dass das Kommunikationsobjekt geschlossen wurde und nicht mehr verwendet werden kann. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>Gibt an, dass das Kommunikationsobjekt auf einen nicht behebbaren Fehler gestoßen ist, durch den es nicht mehr verwendet werden kann. </summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>Weist die Windows Phone-Infrastruktur an, den <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> zu verwenden.</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.DataContractFormatAttribute" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>Ruft den SOAP-Stil der serialisierten Daten ab oder legt ihn fest.</summary>
      <returns>Einer der <see cref="T:System.ServiceModel.OperationFormatStyle" />-Werte. Der Standardwert ist <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>Stellt eine eindeutige Netzwerkadresse bereit, über die der Client mit einem Dienstendpunkt kommuniziert.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.EndpointAddress" />-Klasse mit einer angegebenen URI-Zeichenfolge.</summary>
      <param name="uri">Der URI, der den Endpunkt bezeichnet.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.EndpointAddress" />-Klasse mit einem angegebenen URI und Headern.</summary>
      <param name="uri">Der <see cref="T:System.Uri" />, der die Position des Endpunkts bezeichnet.</param>
      <param name="addressHeaders">Das <see cref="T:System.Array" /> vom Typ <see cref="T:System.ServiceModel.Channels.AddressHeader" />, das Adressinformationen für die Interaktion mit dem Endpunkt enthält.</param>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>Ruft eine versionsneutrale Darstellung des anonymen URI ab.</summary>
      <returns>Ein <see cref="T:System.Uri" /> mit dem Wert http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>Weist den Werten der Header einer angegebenen Nachricht den URI und die Eigenschaften der Endpunktadresse zu.</summary>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, deren Headerwerte zugewiesen werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebenes Objekt der aktuellen Endpunktadresse entspricht.</summary>
      <returns>true, wenn das angegebene Objekt dem aktuellen Objekt entspricht, andernfalls false.</returns>
      <param name="obj">Das <see cref="T:System.Object" />, das mit der aktuellen Endpunktadresse verglichen werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>Stellt einen eindeutigen Hashcode für die aktuelle Endpunktadresse bereit. </summary>
      <returns>Ein eindeutiger Hashcode für die aktuelle Endpunktadresse.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>Ruft die Auflistung von Adressheadern für die Endpunkte ab, die der Generator erstellen kann.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />, die Adressinformationen für den Endpunkt enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>Ruft einen Wert ab, der angibt, ob der Endpunkt anonym ist.</summary>
      <returns>true, wenn der Endpunkt <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" /> ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>Ruft einen Wert ab, der angibt, ob der URI für den Endpunkt der <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" /> ist.</summary>
      <returns>true, wenn der URI des Endpunkts <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" /> ist, andernfalls false. </returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>Ruft einen versionsneutralen URI ab, der für die Adresse eines Endpunkts verwendet wird, an den eine Nachricht nicht gesendet werden darf.</summary>
      <returns>Ein <see cref="T:System.Uri" /> mit dem Wert http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Gibt einen Wert zurück, der angibt, ob angegebene Endpunktadressen nicht gleich sind.</summary>
      <returns>true, wenn die Endpunktadressen gleich sind, andernfalls false.</returns>
      <param name="address1">Eines der <see cref="T:System.ServiceModel.EndpointAddress" />-Objekte, die verglichen werden.</param>
      <param name="address2">Eines der <see cref="T:System.ServiceModel.EndpointAddress" />-Objekte, die verglichen werden.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Gibt einen Wert zurück, der angibt, ob angegebene Endpunktadressen nicht gleich sind.</summary>
      <returns>true, wenn die Endpunktadressen nicht gleich sind, andernfalls false.</returns>
      <param name="address1">Eines der <see cref="T:System.ServiceModel.EndpointAddress" />-Objekte, die verglichen werden.</param>
      <param name="address2">Eines der <see cref="T:System.ServiceModel.EndpointAddress" />-Objekte, die verglichen werden.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>Liest eine Endpunktadresse für eine angegebene Adressversion aus einem angegebenen XML-Wörterbuchreader.</summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointAddress" /> der angegebenen Version, die aus dem XML-Reader gelesen wurde.</returns>
      <param name="addressingVersion">Die <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> der aktuellen Endpunktadresse.</param>
      <param name="reader">Der <see cref="T:System.Xml.XmlDictionaryReader" />, aus dem die Endpunktadresse abgerufen wird.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>Gibt eine kanonische Zeichenfolgendarstellung des URI zurück, der in der Endpunktadresse enthalten ist.</summary>
      <returns>Der URI, der den Endpunkt bezeichnet.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>Ruft den URI für den Endpunkt ab.</summary>
      <returns>Der <see cref="T:System.Uri" /> für den Endpunkt.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Speichert alle untergeordneten Knoten des Knotens im angegebenen XML-Wörterbuchwriter.</summary>
      <param name="addressingVersion">Die <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> der aktuellen Endpunktadresse.</param>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, in dem die Endpunktadresse gespeichert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> oder <paramref name="addressingVersion" /> ist NULL.</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>Eine Factory zum Erstellen neuer (unveränderlicher) Endpunktadressen mit bestimmten Eigenschaftswerten.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.EndpointAddressBuilder" />-Klasse.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.EndpointAddressBuilder" />-Klasse aus den Werten einer vorhandenen Endpunktadresse.</summary>
      <param name="address">Die <see cref="T:System.ServiceModel.EndpointAddress" />, mit deren Eigenschaftswerten die Eigenschaftswerte dieser Instanz initialisiert werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>Ruft die Auflistung von Adressheadern für die Endpunkte ab, die der Generator erstellen kann.</summary>
      <returns>Die <see cref="T:System.Collections.ObjectModel.Collection`1" /> vom Typ <see cref="T:System.ServiceModel.Channels.AddressHeader" /> mit den Adressheadern für die Endpunkte, die der Generator erstellen kann.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>Erstellt eine neue Endpunktadresse, die mit den Eigenschaftswerten des aktuellen Endpunktadress-Generators initialisiert wird.</summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointAddress" />, deren Eigenschaft mit den Werten des aktuellen Endpunktadress-Generators initialisiert wird.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>Ruft den URI für die Endpunkte ab, die der Generator erstellen kann, oder legt den URI fest.</summary>
      <returns>Der <see cref="T:System.Uri" />, der die Endpunktadresse angibt.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Remoteendpunkt nicht gefunden oder erreicht wurde.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.EndpointNotFoundException" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.EndpointNotFoundException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.EndpointNotFoundException" />-Klasse mit einer angegebenen Fehlermeldung und einer inneren Ausnahme, die die aktuelle Ausnahme verursacht hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die die aktuelle Ausnahme ausgelöst hat.</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>Enthält Informationen über die SOAP-Version, die einer Nachricht und deren Austausch zugeordnet ist.</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>Ruft eine Zeichenfolge mit dem URI-Namen für die SOAP-Rolle ab, die der aktuellen Nachrichtenversion für das Endziel zugeordnet ist.</summary>
      <returns>Eine leere Zeichenfolge, wenn SOAP 1.1 verwendet wird; eine Zeichenfolge, die http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver enthält, wenn SOAP 1.2 verwendet wird.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>Ruft eine Zeichenfolge mit dem URI-Namen für die SOAP-Rolle ab, die der aktuellen Nachrichtenversion für das nächste Ziel zugeordnet ist.</summary>
      <returns>Eine Zeichenfolge, die http://schemas.xmlsoap.org/soap/actor/next enthält, wenn <see cref="P:System.ServiceModel.EnvelopeVersion.Soap11" /> verwendet wird; eine Zeichenfolge, die http://www.w3.org/2003/05/soap-envelope/role/next enthält, wenn <see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" /> verwendet wird; und eine leere Zeichenfolge, wenn <see cref="T:System.ServiceModel.EnvelopeVersion" /> den Wert <see cref="P:System.ServiceModel.EnvelopeVersion.None" /> aufweist.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>Ruft die Umschlagversion ohne SOAP-Version ab.</summary>
      <returns>Die Umschlagversion ohne SOAP-Formatierung.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>Ruft die SOAP 1,1-Umschlagversion ab.</summary>
      <returns>Die SOAP 1.1-<see cref="T:System.ServiceModel.EnvelopeVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>Ruft die SOAP 1.2-Umschlagversion ab.</summary>
      <returns>Die SOAP 1.2-<see cref="T:System.ServiceModel.EnvelopeVersion" />.</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>Ruft eine Zeichenfolge ab, die die aktuelle Umschlagversion darstellt.</summary>
      <returns>Die aktuelle Umschlagversion.</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>Stellt die Fehlerdetailinformationen dar.</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ExceptionDetail" />-Klasse aus der Ausnahme. </summary>
      <param name="exception">Die Ausnahme, die als <see cref="T:System.ServiceModel.ExceptionDetail" />-Objekt serialisiert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="exception" />-Parameter ist NULL.</exception>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>Ruft das <see cref="T:System.ServiceModel.ExceptionDetail" />-Objekt ab, das die innere Ausnahme darstellt, oder legt es fest.</summary>
      <returns>Die Informationen zur inneren Ausnahme.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>Ruft die Meldung aus der Ausnahme ab, die an den Konstruktor übergeben wurde, oder legt diese fest.</summary>
      <returns>Die Ausnahmemeldung.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>Ruft die Stapelüberwachungsinformationen aus der Ausnahme ab, die an den Konstruktor übergeben wird, oder legt sie fest.</summary>
      <returns>Die Stapelüberwachung der Ausnahme.</returns>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>Gibt die Ausnahmedetailinformationen für die Ausnahme zurück, die an den Konstruktor übergeben wird.</summary>
      <returns>Die Meldung und Stapelüberwachung der Ausnahme.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>Ruft die Typzeichenfolge für die Ausnahme ab, die an den Konstruktor übergeben wird, oder legt diese fest.</summary>
      <returns>Die Typzeichenfolge für die Ausnahme, die an den Konstruktor übergeben wird.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>Stellt einen SOAP-Fehlercode dar. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultCode" />-Klasse. </summary>
      <param name="name">Der Name des Fehlercodes.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultCode" />-Klasse.</summary>
      <param name="name">Der Name des Fehlercodes.</param>
      <param name="subCode">Der Fehlersubcode.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultCode" />-Klasse mit dem angegebenen Namen und Namespace. </summary>
      <param name="name">Der lokale Name des Fehlercodes. </param>
      <param name="ns">Der Namespacename des Fehlercodes. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> oder <paramref name="ns" /> ist NULL. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> ist eine leere Zeichenfolge. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultCode" />-Klasse mit dem angegebenen Namen, Namespace und Fehlersubcode.</summary>
      <param name="name">Der lokale Name des Fehlercodes. </param>
      <param name="ns">Der Namespacename des Fehlercodes. </param>
      <param name="subCode">Ein <see cref="T:System.ServiceModel.FaultCode" />-Objekt, das den Fehlersubcode darstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> oder <paramref name="ns" /> ist NULL. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> ist eine leere Zeichenfolge. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>Erstellt einen Absenderfehlercode mit dem angegebenen Subcode. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.FaultCode" />-Objekt mit dem erstellten SOAP-Fehlersubcode in der <see cref="P:System.ServiceModel.FaultCode.SubCode" />-Eigenschaft. </returns>
      <param name="subCode">Ein <see cref="T:System.ServiceModel.FaultCode" />-Objekt, das den Fehlersubcode darstellt. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> ist null. </exception>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>Ruft einen Wert ab, der angibt, ob es sich bei dem Fehler um einen SOAP 1.1- oder einen SOAP 1.2-Fehler handelt.</summary>
      <returns>true, wenn der Fehler ein SOAP 1.1- oder SOAP 1.2-Fehler ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>Ruft einen Wert ab, der angibt, ob es sich bei dem Fehler um einen SOAP 1.1-Serverfehler oder einen SOAP 1.2-Empfängerfehler handelt.</summary>
      <returns>true, wenn der Fehler ein SOAP 1.1-Serverfehler oder ein SOAP 1.2-Empfängerfehler ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>Ruft einen Wert ab, der angibt, ob es sich bei dem Fehler um einen SOAP 1.1-Clientfehler oder einen SOAP 1.2-Absenderfehler handelt.</summary>
      <returns>true, wenn der Fehler ein SOAP 1.1-Clientfehler oder ein SOAP 1.2-Absenderfehler ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>Ruft den lokalen Namen des Fehlercodes ab. </summary>
      <returns>Der lokale Name des Fehlercodes. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>Ruft den Namespace für den Fehlercode ab. </summary>
      <returns>Ein URI (Uniform Resource Identifier) für den Namespacenamen. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>Ruft den Fehlersubcode ab. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.FaultCode" />-Objekt, das den Fehlersubcode darstellt. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>Gibt einen oder mehrere SOAP-Fehler an, die zurückgegeben werden, wenn bei einem Dienstvorgang Verarbeitungsfehler auftreten.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultContractAttribute" />-Klasse. </summary>
      <param name="detailType">Der serialisierbare Typ, der Fehlerinformationen für den Aufrufer enthält.</param>
      <exception cref="T:System.ArgumentNullException">Das <paramref name="detailType" />-Argument ist NULL.</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>Ruft die Aktion der SOAP-Fehlermeldung ab, die als Bestandteil des Vorgangsvertrags angegeben wurde, oder legt die Aktion fest.</summary>
      <returns>Der Wert der Aktion für die SOAP-Fehlermeldung.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>Ruft den Typ eines serialisierbaren Objekts ab, das Fehlerinformationen enthält.</summary>
      <returns>Der Typ, der die serialisierbare Fehlerklasse darstellt.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>Ruft den Namen der Fehlermeldung in WSDL (Web Services Description Language) ab oder legt ihn fest.</summary>
      <returns>Der Name der Fehlermeldung. Standardmäßig wird der Name des Typs verwendet, der als Fehlerdetail benutzt wird.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>Ruft den Namespace des SOAP-Fehlers ab oder legt ihn fest.</summary>
      <returns>Der Namespace des SOAP-Fehlers.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>Stellt einen SOAP-Fehler dar.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultException" />-Klasse.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultException" />-Klasse unter Verwendung der angegebenen Nachrichtenfehlerwerte und der bereitgestellten Aktionszeichenfolge.</summary>
      <param name="fault">Der Nachrichtenfehler mit den SOAP-Standardfehlerwerten, die verwendet werden sollen.</param>
      <param name="action">Die Aktion des SOAP-Fehlers.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultException" />-Klasse unter Verwendung des angegebenen Grunds, Fehlercodes und Aktionswerts.</summary>
      <param name="reason">Die Ursache für den SOAP-Fehler.</param>
      <param name="code">Der Fehlercode für den SOAP-Fehler.</param>
      <param name="action">Der Aktionswert für den SOAP-Fehler.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>Ruft den Wert der SOAP-Aktion für die Fehlermeldung ab.</summary>
      <returns>Der Wert der SOAP-Aktion für die Fehlermeldung.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>Ruft den Fehlercode für den SOAP-Fehler ab.</summary>
      <returns>Der Fehlercode für den SOAP-Fehler.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>Gibt ein <see cref="T:System.ServiceModel.FaultException" />-Objekt aus dem angegebenen Nachrichtenfehler, der Aktion und einem Array mit Detailtypen zurück.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.FaultException" />-Objekt, das Sie auslösen können, um anzugeben, dass eine SOAP-Fehlermeldung empfangen wurde.</returns>
      <param name="messageFault">Der Nachrichtenfehler, der die SOAP-Standardfehlerinformationen enthält.</param>
      <param name="action">Der Wert der Fehleraktion.</param>
      <param name="faultDetailTypes">Ein Array mit Typen, das Fehlerdetails enthält.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>Gibt ein <see cref="T:System.ServiceModel.FaultException" />-Objekt aus dem angegebenen Nachrichtenfehler und einem Array mit Detailtypen zurück.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.FaultException" />-Objekt, das Sie auslösen können, um anzugeben, dass eine SOAP-Fehlermeldung empfangen wurde.</returns>
      <param name="messageFault">Der Nachrichtenfehler, der die SOAP-Standardfehlerinformationen enthält.</param>
      <param name="faultDetailTypes">Ein Array mit Typen, das Fehlerdetails enthält.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>Gibt ein speicherinternes <see cref="T:System.ServiceModel.Channels.MessageFault" />-Objekt zurück.</summary>
      <returns>Das <see cref="T:System.ServiceModel.Channels.MessageFault" />-Objekt, das an <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> übergeben wird, um eine Meldung mit einem Fehler zu erstellen.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>Ruft die Meldung für die Ausnahme ab.</summary>
      <returns>Die Ausnahmemeldung.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>Ruft die <see cref="T:System.ServiceModel.FaultReason" /> für den SOAP-Fehler ab.</summary>
      <returns>Die Ursache für den SOAP-Fehler.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>Wird in einer Clientanwendung verwendet, um vertraglich angegebene SOAP-Fehler abzufangen.</summary>
      <typeparam name="TDetail">Der serialisierbare Fehlerdetailtyp.</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultException`1" />-Klasse, die ein angegebenes Detailobjekt sowie die SOAP-Fehlerursache, den Code und die Aktionswerte verwendet. </summary>
      <param name="detail">Das Objekt, das als SOAP-Fehlerdetail verwendet wird.</param>
      <param name="reason">Die Ursache für den SOAP-Fehler.</param>
      <param name="code">Der Fehlercode für den SOAP-Fehler.</param>
      <param name="action">Die Aktion des SOAP-Fehlers.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>Ruft das Objekt ab, das die Detailinformationen der Fehlerbedingung enthält.</summary>
      <returns>Das Detailobjekt, das der Typparameter des <see cref="T:System.ServiceModel.FaultException`1" />-Objekts ist.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>Gibt eine Zeichenfolge für das <see cref="T:System.ServiceModel.FaultException`1" />-Objekt zurück.</summary>
      <returns>Die Zeichenfolge für den SOAP-Fehler.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>Stellt eine Textbeschreibung eines SOAP-Fehlers bereit. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultReason" />-Klasse unter Verwendung der angegebenen Liste mit Fehlerübersetzungen. </summary>
      <param name="translations">Eine Liste mit <see cref="T:System.ServiceModel.FaultReasonText" />-Objekten; jedes Objekt beschreibt den Fehler in einer bestimmten Sprache. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translations" /> ist null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="translations" /> ist leer, oder ein oder mehrere Elemente sind NULL. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultReason" />-Klasse unter Verwendung des angegebenen Textelements, das den Fehler in einer bestimmten Sprache beschreibt. </summary>
      <param name="translation">Ein Array mit <see cref="T:System.ServiceModel.FaultReasonText" />-Objekten, die Fehlerbeschreibungen in verschiedenen Sprachen entsprechen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translation" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultReason" />-Klasse unter Verwendung des angegebenen Texts.</summary>
      <param name="text">Eine Beschreibung der Fehlerursache.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>Ruft die Fehlerbeschreibung in der Sprache ab, die vom aktuellen Thread verwendet wird.</summary>
      <returns>Der Fehlertext in der angegebenen Sprache.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>Ruft die Fehlerbeschreibung in der angegebenen Sprache ab.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.FaultReasonText" />-Objekt, das die übersetzte Fehlerbeschreibung enthält.</returns>
      <param name="cultureInfo">Ein <see cref="T:System.Globalization.CultureInfo" />-Objekt, das die Sprache der Fehlerbeschreibung angibt.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>Gibt die Fehlerursache als Zeichenfolge zurück.</summary>
      <returns>Die Ursache des SOAP-Fehlers.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReason.Translations">
      <summary>Ruft eine Auflistung von Fehlerbeschreibungen in verschiedenen Sprachen ab.</summary>
      <returns>Eine <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> mit <see cref="T:System.ServiceModel.FaultReasonText" />-Objekten, wobei jedes Objekt den Fehler in einer anderen Sprache beschreibt.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>Stellt den Text für die Ursache eines SOAP-Fehlers dar.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultReasonText" />-Klasse, die einen angegebenen Fehlertext verwendet.</summary>
      <param name="text">Der Text für die SOAP-Fehlerursache.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.FaultReasonText" />-Klasse, die den angegebenen Fehlertext verwendet.</summary>
      <param name="text">Der Text für die SOAP-Fehlerursache.</param>
      <param name="xmlLang">Die Sprache, die für den Fehler verwendet wird.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>Gibt einen Wert zurück, der angibt, ob die Sprache der Beschreibung mit dem bereitgestellten <see cref="T:System.Globalization.CultureInfo" />-Objekt übereinstimmt.</summary>
      <returns>true, wenn die angegebene <see cref="T:System.Globalization.CultureInfo" /> übereinstimmt, andernfalls false.</returns>
      <param name="cultureInfo">Das <see cref="T:System.Globalization.CultureInfo" />-Objekt, das mit der Sprache der Beschreibung verglichen werden soll.</param>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>Ruft den Text der SOAP-Fehlerursache ab.</summary>
      <returns>Der Text der SOAP-Fehlerursache.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>Ruft die Sprache der SOAP-Fehlerursache ab.</summary>
      <returns>Die Sprache der SOAP-Fehlerursache.</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>Definiert das Verhalten von Kanälen für ausgehende Anforderungen sowie von Anforderungs-/Antwortkanälen, die von Clientanwendungen verwendet werden.</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> versucht, die <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />-Objekte in der <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" />-Eigenschaft aufzurufen, oder löst eine Ausnahme aus, wenn diese Auflistung nicht leer ist. </summary>
      <returns>true, wenn Windows Communication Foundation (WCF) interaktive Kanalinitialisierer aufrufen darf, andernfalls false. </returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>Ein asynchroner Aufruf, um mit der Verwendung einer Benutzeroberfläche zum Abrufen der Anmeldeinformationen zu beginnen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das nach Abschluss der Verarbeitung für den Rückruf verwendet werden soll.</returns>
      <param name="callback">Die Methode, die beim Abschluss dieser Methode aufgerufen wird.</param>
      <param name="state">Informationen über den Zustand des Kanals.</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>Ruft einen Wert ab, der angibt, ob ein Aufruf für eine Benutzeroberfläche erfolgt ist, um Anmeldeinformationen abzurufen. </summary>
      <returns>true, wenn die <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" />-Methode aufgerufen wurde (oder die <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" />-Methode und die <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" />-Methode), andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>Ein Aufruf für eine Benutzeroberfläche, um Anmeldeinformationen zu erhalten.</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Wird aufgerufen, wenn der Aufruf von <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> beendet wurde.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>Dies ist ein reserviertes Ereignis. </summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>Ruft den URI mit der Transportadresse ab, an die Nachrichten über den Clientkanal gesendet werden.</summary>
      <returns>Der <see cref="T:System.Uri" /> mit der Transportadresse, an die Nachrichten über den Kanal gesendet werden.</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>Definiert den Vertrag für den Basiszustandsautomaten für alle kommunikationsorientierten Objekte im System, einschließlich Kanäle, Kanal-Manager, Factorys, Listener, Verteiler und Diensthosts.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>Bewirkt, dass ein Kommunikationsobjekt sofort von seinem aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu schließen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Schließvorgang verweist. </returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Schließvorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> wurde für ein Objekt im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand aufgerufen.</exception>
      <exception cref="T:System.TimeoutException">Das Standardtimeout ist verstrichen, bevor das <see cref="T:System.ServiceModel.ICommunicationObject" /> ordnungsgemäß geschlossen werden konnte.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt mit einem angegebenen Timeout zu schließen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Schließvorgang verweist.</returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Schließvorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> wurde für ein Objekt im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand aufgerufen.</exception>
      <exception cref="T:System.TimeoutException">Das angegebene Timeout ist verstrichen, bevor das <see cref="T:System.ServiceModel.ICommunicationObject" /> ordnungsgemäß geschlossen werden konnte.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu öffnen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Öffnungsvorgang verweist. </returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Öffnungsvorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Öffnungsvorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Das <see cref="T:System.ServiceModel.ICommunicationObject" /> konnte nicht geöffnet werden und ist in den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand übergegangen.</exception>
      <exception cref="T:System.TimeoutException">Das Standardtimeout für einen Öffnungsvorgang ist verstrichen, bevor das <see cref="T:System.ServiceModel.ICommunicationObject" /> in den <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand übergehen konnte; es ist in den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand übergegangen.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt innerhalb eines angegebenen Zeitintervalls zu öffnen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Öffnungsvorgang verweist. </returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Öffnungsvorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Öffnungsvorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Das <see cref="T:System.ServiceModel.ICommunicationObject" /> konnte nicht geöffnet werden und ist in den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand übergegangen.</exception>
      <exception cref="T:System.TimeoutException">Das angegebene Timeout ist verstrichen, bevor das <see cref="T:System.ServiceModel.ICommunicationObject" /> in den <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand übergehen konnte; es ist in den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand übergegangen.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>Bewirkt, dass ein Kommunikationsobjekt von seinem aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> wurde für ein Objekt im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand aufgerufen.</exception>
      <exception cref="T:System.TimeoutException">Das Standardtimeout für einen Schließvorgang ist verstrichen, bevor das <see cref="T:System.ServiceModel.ICommunicationObject" /> ordnungsgemäß geschlossen werden konnte.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>Bewirkt, dass ein Kommunikationsobjekt von seinem aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> wurde für ein Objekt im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand aufgerufen.</exception>
      <exception cref="T:System.TimeoutException">Das Timeout ist verstrichen, bevor das <see cref="T:System.ServiceModel.ICommunicationObject" /> ordnungsgemäß geschlossen werden konnte.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>Tritt ein, wenn das Kommunikationsobjekt vom Zustand "Schließen" in den Zustand "Geschlossen" übergegangen ist.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>Tritt ein, wenn das Kommunikationsobjekt in den Zustand "Schließen" übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu schließen.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" />-Methode zurückgegeben wird.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> wurde für ein Objekt im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand aufgerufen.</exception>
      <exception cref="T:System.TimeoutException">Das Timeout ist verstrichen, bevor das <see cref="T:System.ServiceModel.ICommunicationObject" /> ordnungsgemäß geschlossen werden konnte.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu öffnen.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen" />-Methode zurückgegeben wird.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Das <see cref="T:System.ServiceModel.ICommunicationObject" /> konnte nicht geöffnet werden und ist in den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand übergegangen.</exception>
      <exception cref="T:System.TimeoutException">Das Timeout ist verstrichen, bevor das <see cref="T:System.ServiceModel.ICommunicationObject" /> in den <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand übergehen konnte; es ist in den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand übergegangen.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>Tritt ein, wenn das Kommunikationsobjekt in den Fehlerzustand übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>Bewirkt, dass ein Kommunikationsobjekt vom Zustand "Erstellt" in den geöffneten Zustand übergeht.</summary>
      <exception cref="T:System.ServiceModel.CommunicationException">Das <see cref="T:System.ServiceModel.ICommunicationObject" /> konnte nicht geöffnet werden und ist in den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand übergegangen.</exception>
      <exception cref="T:System.TimeoutException">Das Standardtimeout für einen Öffnungsvorgang ist verstrichen, bevor das <see cref="T:System.ServiceModel.ICommunicationObject" /> in den <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand übergehen konnte; es ist in den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand übergegangen.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>Bewirkt, dass ein Kommunikationsobjekt innerhalb eines angegebenen Zeitintervalls vom Zustand "Erstellt" in den geöffneten Zustand übergeht.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">Das <see cref="T:System.ServiceModel.ICommunicationObject" /> konnte nicht geöffnet werden und ist in den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand übergegangen.</exception>
      <exception cref="T:System.TimeoutException">Das angegebene Timeout ist verstrichen, bevor das <see cref="T:System.ServiceModel.ICommunicationObject" /> in den <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand übergehen konnte; es ist in den <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand übergegangen.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>Tritt ein, wenn das Kommunikationsobjekt vom Zustand "Öffnen" in den Zustand "Geöffnet" übergegangen ist.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>Tritt ein, wenn das Kommunikationsobjekt in den Zustand "Öffnen" übergeht.</summary>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>Ruft den aktuellen Zustand des kommunikationsorientierten Objekts ab.</summary>
      <returns>Der <see cref="T:System.ServiceModel.CommunicationState" />-Wert des Objekts.</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>Definiert die Schnittstelle für das Kontextsteuerelement eines Kanals.</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der Windows Phone anweist, einen Nachrichtensatz zu speichern, bevor die Nachrichten zum Transport weitergeleitet werden.</summary>
      <returns>true, wenn die Batchverarbeitung von ausgehenden Nachrichten zulässig ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>Ruft die Eingabesitzung für den Kanal ab.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.IInputSession" /> für den Kanal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>Ruft den lokalen Endpunkt für den Kanal ab.</summary>
      <returns>Die lokale <see cref="T:System.ServiceModel.EndpointAddress" /> für den Kanal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>Ruft den Zeitraum ab oder legt ihn fest, in dem ein Vorgang abgeschlossen werden muss, andernfalls wird eine Ausnahme ausgelöst.</summary>
      <returns>Die <see cref="T:System.TimeSpan" />, die den Zeitraum angibt, in dem ein Vorgang abgeschlossen sein muss.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>Ruft die Ausgabesitzung ab, die dem Kanal zugeordnet ist (falls vorhanden).</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.IOutputSession" />-Implementierung, wenn eine Eingabesitzung vorhanden ist, andernfalls NULL.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>Ruft die Remoteadresse ab, die dem Kanal zugeordnet ist.</summary>
      <returns>Die Remote-<see cref="T:System.ServiceModel.EndpointAddress" /> für den Kanal.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>Gibt einen Bezeichner für die aktuelle Sitzung zurück (falls vorhanden).</summary>
      <returns>Die aktuelle Sitzungs-ID (falls vorhanden).</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>Definiert die Schnittstelle zur Angabe der Kommunikationstimeouts, die von Kanälen und Kanal-Managern, z. B. Kanalfactorys, verwendet werden.</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Schließmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Schließmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Öffnungsmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Öffnungsmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Empfangsmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Empfangsmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Sendemethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Sendemethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>Ermöglicht es einem Objekt, an benutzerdefiniertem Verhalten, z. B. dem Registrieren für Ereignisse oder dem Überwachen von Zustandsübergängen, teilzunehmen.</summary>
      <typeparam name="T">Der Typ der Erweiterungsklasse.</typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>Ruft eine Auflistung mit Erweiterungsobjekten für dieses erweiterbare Objekt ab.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.IExtensionCollection`1" /> von Erweiterungsobjekten.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>Ermöglicht es einem Objekt, ein anderes Objekt durch Aggregation zu erweitern.</summary>
      <typeparam name="T">Das Objekt, das am benutzerdefinierten Verhalten teilnimmt.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>Ermöglicht es einem Erweiterungsobjekt, festzustellen, wann es aggregiert wurde. Wird aufgerufen, wenn die Erweiterung der <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />-Eigenschaft hinzugefügt wird.</summary>
      <param name="owner">Das erweiterbare Objekt, das diese Erweiterung aggregiert.</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>Ermöglicht es einem Objekt, festzustellen, wenn es nicht mehr aggregiert wird. Wird aufgerufen, wenn eine Erweiterung aus der <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" />-Eigenschaft entfernt wird.</summary>
      <param name="owner">Das erweiterbare Objekt, das diese Erweiterung aggregiert.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>Eine Auflistung der <see cref="T:System.ServiceModel.IExtension`1" />-Objekte, die das Abrufen der <see cref="T:System.ServiceModel.IExtension`1" />-Objekte nach ihrem Typ ermöglichen.</summary>
      <typeparam name="T">Der Typ der Erweiterungsobjekte.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>Sucht das angegebene Erweiterungsobjekt in der Auflistung.</summary>
      <returns>Das gefundene Erweiterungsobjekt.</returns>
      <typeparam name="E">Der Typ des Erweiterungsobjekts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>Sucht alle Erweiterungsobjekte in der Auflistung, die durch <paramref name="E" /> angegeben werden.</summary>
      <returns>Eine Auflistung aller Erweiterungsobjekte in der Auflistung, die den angegebenen Typ implementiert.</returns>
      <typeparam name="E">Der Typ des Erweiterungsobjekts.</typeparam>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>Stellt einen ungültigen Nachrichtenvertrag dar.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.InvalidMessageContractException" />-Klasse.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.InvalidMessageContractException" />-Klasse unter Verwendung der angegebenen Meldung.</summary>
      <param name="message">Die Meldung für die Ausnahme.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.InvalidMessageContractException" />-Klasse, die die angegebenen Meldung und eine innere Ausnahme verwendet.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="innerException">Die innere Ausnahme.</param>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>Gibt an, dass ein Member innerhalb des SOAP-Bodys als Element serialisiert wird.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>Ruft einen Wert ab, der die Position angibt, in der der Member im SOAP-Body serialisiert wird, oder legt diesen Wert fest.</summary>
      <returns>Die Position des Elements im SOAP-Body.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der an den Eigenschaftensetter übergebene Wert ist eine negative ganze Zahl.</exception>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>Definiert eine stark typisierte Klasse, die einer SOAP-Nachricht entspricht.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageContractAttribute" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>Ruft einen Wert ab, der angibt, ob der Nachrichtentext über ein Wrapperelement verfügt, oder legt diesen Wert fest.</summary>
      <returns>true, wenn der Nachrichtentext über ein Wrapperelement verfügt, andernfalls false. Der Standardwert ist true.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>Ruft den Namen für das Wrapperelement des Nachrichtentexts ab, oder legt den Namen fest.</summary>
      <returns>Der Name des Wrapperelements im Nachrichtentext.</returns>
      <exception cref="T:System.ArgumentNullException">Der Wert ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist eine leere Zeichenfolge.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>Ruft den Namespace für das Wrapperelement des Nachrichtentexts ab, oder legt ihn fest.</summary>
      <returns>Der Namespace des Wrapperelements.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>Deklariert die Basismember für <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageContractMemberAttribute" />-Klasse.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>Gibt den Namen des Elements an, das diesem Member entspricht. </summary>
      <returns>Der Name des Elements, das diesem Member entspricht. Diese Zeichenfolge muss ein gültiger XML-Elementname sein. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>Gibt den Namespace des Elements an, das diesem Member entspricht. </summary>
      <returns>Ein Namespace-URI des Elements, das diesem Member entspricht. </returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn die Erwartungen hinsichtlich der Header einer SOAP-Nachricht beim Verarbeiten der Nachricht nicht erfüllt werden.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeaderException" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeaderException" />-Klasse mit der angegebenen Meldung.</summary>
      <param name="message">Die Meldung, die in der Ausnahme enthalten ist.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeaderException" />-Klasse unter Verwendung der angegebenen Nachricht und eines Werts, der angibt, ob es sich beim Nachrichtenheader um ein Duplikat handelt oder ob er fehlt.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="isDuplicate">true, wenn der Header für mehrere Nachrichten ein Duplikat ist; false, wenn keine Nachrichtenheader vorhanden sind.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeaderException" />-Klasse unter Verwendung der angegebenen Nachricht und der inneren Ausnahme, die die Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="innerException">Die <see cref="T:System.Exception" /> mit der inneren Ausnahme, die die Ausnahme ausgelöst hat.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeaderException" />-Klasse unter Verwendung der angegebenen Nachricht, des Headernamens und des Namespace.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="headerName">Der Name des Nachrichtenheaders.</param>
      <param name="ns">Der Namespace des Nachrichtenheaders.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeaderException" />-Klasse unter Verwendung der angegebenen Nachricht, des Headernamens und des Namespace sowie eines Werts, der angibt, ob es sich beim Nachrichtenheader um ein Duplikat handelt oder ob er fehlt.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="headerName">Der Name des Nachrichtenheaders.</param>
      <param name="ns">Der Namespace des Nachrichtenheaders.</param>
      <param name="isDuplicate">true, wenn der Header für mehrere Nachrichten ein Duplikat ist; false, wenn keine Nachrichtenheader vorhanden sind.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeaderException" />-Klasse unter Verwendung der angegebenen Nachricht, des Headernamens und des Namespace, eines Werts, der angibt, ob es sich beim Nachrichtenheader um ein Duplikat handelt oder ob er fehlt, und der inneren Ausnahme, die die Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="headerName">Der Name des Nachrichtenheaders.</param>
      <param name="ns">Der Namespace des Nachrichtenheaders.</param>
      <param name="isDuplicate">true, wenn der Header für mehrere Nachrichten ein Duplikat ist; false, wenn keine Nachrichtenheader vorhanden sind.</param>
      <param name="innerException">Die <see cref="T:System.Exception" /> mit der inneren Ausnahme, die die Ausnahme ausgelöst hat.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageHeaderException" />-Klasse unter Verwendung der angegebenen Nachricht, des Headernamens, des Namespace sowie der inneren Ausnahme, die die Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Ausnahmemeldung.</param>
      <param name="headerName">Der Name des Nachrichtenheaders.</param>
      <param name="ns">Der Namespace des Nachrichtenheaders.</param>
      <param name="innerException">Die <see cref="T:System.Exception" /> mit der inneren Ausnahme, die die Ausnahme ausgelöst hat.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>Ruft den Namen des SOAP-Headers ab, der die Ausnahme ausgelöst hat.</summary>
      <returns>Der Name des SOAP-Headers.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>Ruft den Namespace des SOAP-Headers ab, der die Ausnahme ausgelöst hat.</summary>
      <returns>Der Namespace des SOAP-Headers.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>Ruft einen Wert ab, der angibt, ob Header für mehrere Nachrichten oder keine Nachrichtenheader vorhanden sind.</summary>
      <returns>true, wenn der Header für mehrere Nachrichten ein Duplikat ist; false, wenn keine Nachrichtenheader vorhanden sind.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>Steuert den Namen der Anforderungen und die Namen der Antwortparameter. Kann nicht mit <see cref="T:System.ServiceModel.Channels.Message" /> oder Nachrichtenverträgen verwendet werden.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.MessageParameterAttribute" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>Ruft das Namensattribut des Parameters im XML-Schema (XSD) ab, oder legt es fest.</summary>
      <returns>Das Namenattribut des Parameters in XSD.</returns>
      <exception cref="T:System.ArgumentNullException">Der Wert ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist eine leere Zeichenfolge.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>Stellt Zugriff auf den Ausführungskontext einer Dienstmethode bereit.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.OperationContext" />-Klasse, die den angegebenen <see cref="T:System.ServiceModel.IContextChannel" /> in einer Clientanwendung verwendet. </summary>
      <param name="channel">Der <see cref="T:System.ServiceModel.IContextChannel" />, mit dem ein neuer Client-<see cref="T:System.ServiceModel.OperationContext" /> erstellt wird.</param>
      <exception cref="T:System.ArgumentNullException">Der Kanal ist NULL.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>Ruft den Ausführungskontext für den aktuellen Thread ab oder legt diesen fest.</summary>
      <returns>Der <see cref="T:System.ServiceModel.OperationContext" />, der den Messaging- und Ausführungskontext der aktuellen Methode darstellt.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>Ruft die Header der eingehenden Nachrichten für den <see cref="T:System.ServiceModel.OperationContext" /> ab.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageHeaders" />-Objekt, das die Header der eingehenden Nachrichten enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>Ruft die Nachrichteneigenschaften für die eingehende Nachricht im <see cref="T:System.ServiceModel.OperationContext" /> ab.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageProperties" />-Objekt, das die Nachrichteneigenschaften für die eingehende Nachricht enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>Ruft die Version der eingehenden SOAP-Nachricht für den <see cref="T:System.ServiceModel.OperationContext" /> ab.</summary>
      <returns>Die SOAP-Version der eingehenden Nachricht.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>Diese Eigenschaft ist zur Verwendung durch das System bestimmt und sollte nicht von Benutzern aufgerufen werden.</summary>
      <returns>true.</returns>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>Tritt nach dem Abschluss eines Vorgangs ein.</summary>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>Ruft die Header der ausgehenden Nachrichten für den <see cref="T:System.ServiceModel.OperationContext" /> ab.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageHeaders" />-Objekt, das die Header der ausgehenden Nachrichten für den aktiven <see cref="T:System.ServiceModel.OperationContext" /> enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>Ruft die Nachrichteneigenschaften für die ausgehende Nachricht im aktiven <see cref="T:System.ServiceModel.OperationContext" /> ab.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageProperties" />-Objekt, das die Nachrichteneigenschaften für die ausgehende Nachricht enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>Ruft die Implementierung des Anforderungskontexts für diese Methode ab oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.RequestContext" />-Implementierung oder NULL, wenn kein Anforderungskontext vorhanden ist.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>Erstellt einen Block, in dessen Bereich sich ein <see cref="T:System.ServiceModel.OperationContext" />-Objekt befindet.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.OperationContextScope" />-Klasse, die mit dem angegebenen <see cref="T:System.ServiceModel.IContextChannel" /> einen neuen <see cref="T:System.ServiceModel.OperationContext" /> für den Bereich erstellt.</summary>
      <param name="channel">Der Kanal, der beim Erstellen des Bereichs für einen neuen <see cref="T:System.ServiceModel.OperationContext" /> verwendet werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.OperationContextScope" />-Klasse, um einen Bereich für das angegebene <see cref="T:System.ServiceModel.OperationContext" />-Objekt zu erstellen.</summary>
      <param name="context">Der aktive <see cref="T:System.ServiceModel.OperationContext" /> im erstellten Bereich.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>Stellt den ursprünglichen <see cref="T:System.ServiceModel.OperationContext" /> als aktiven Kontext wieder her und verwendet das <see cref="T:System.ServiceModel.OperationContextScope" />-Objekt wieder.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>Gibt an, dass eine Methode einen Vorgang definiert, der Teil eines Dienstvertrags in einer Windows Phone-Anwendung ist. </summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.OperationContractAttribute" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>Ruft die WS-Adressierungsaktion der Anforderungsnachricht ab oder legt sie fest. </summary>
      <returns>Die Aktion, die zum Generieren des WS-Adressierungsaktionsheaders verwendet werden soll.</returns>
      <exception cref="T:System.ArgumentNullException">Der Wert ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>Gibt an, dass ein Vorgang mit einem Begin&lt;methodName&gt;- und End&lt;methodName&gt;-Methodenpaar asynchron in einem Dienstvertrag implementiert ist. </summary>
      <returns>true, wenn die Begin&lt;methodName&gt;-Methode mit einer End&lt;methodName&gt;-Methode übereinstimmt und von der Infrastruktur als ein Vorgang behandelt werden kann, der als asynchrones Methodenpaar in der Dienstschnittstelle implementiert wird, andernfalls false. Der Standardwert ist false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>Ruft einen Wert ab, der angibt, ob ein Vorgang eine Antwortnachricht zurückgibt, oder legt den Wert fest.</summary>
      <returns>true, wenn ein Vorgang keine Antwortnachricht zurückgibt, false, wenn eine Nachricht zurückgegeben wird.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>Ruft den Namen des Vorgangs ab oder legt diesen fest.</summary>
      <returns>Der Name des Vorgangs.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist eine leere Zeichenfolge.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>Ruft den Wert der SOAP-Aktion für die Antwortnachricht des Vorgangs ab oder legt den Wert fest.</summary>
      <returns>Der Wert der SOAP-Aktion für die Antwortnachricht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> ist null.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>Stellt den SOAP-Stil dar, der bestimmt, wie die WSDL-Metadaten für den Dienst formatiert werden.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>Veranlasst, dass die WSDL-Darstellung ein einzelnes Element enthält, das das gegen den Vorgang ausgetauschte Dokument darstellt.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>Veranlasst die WSDL-Darstellung von Nachrichten, die gegen einen Vorgang ausgetauscht wurden, und enthält Parameter entsprechend eines Remoteprozeduraufrufs.</summary>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>Die auf dem Client angezeigte Ausnahme, die ausgelöst wird, wenn eine Kommunikation mit dem Remoteteilnehmer aufgrund nicht übereinstimmender Datenübertragungsprotokolle nicht möglich ist.</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ProtocolException" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ProtocolException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ProtocolException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die die aktuelle Ausnahme ausgelöst hat. </param>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Nachrichtenkontingent überschritten wurde.</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.QuotaExceededException" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.QuotaExceededException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.QuotaExceededException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die die aktuelle Ausnahme ausgelöst hat.</param>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Server zu stark ausgelastet ist, um eine Nachricht übernehmen zu können.</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServerTooBusyException" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServerTooBusyException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServerTooBusyException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die die aktuelle Ausnahme ausgelöst hat.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein Dienst nicht aktiviert werden kann.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServiceActivationException" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServiceActivationException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServiceActivationException" />-Klasse mit einer angegebenen Fehlermeldung und der bereitgestellten inneren Ausnahme.  </summary>
      <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die die aktuelle Ausnahme ausgelöst hat. </param>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>Gibt an, dass eine Schnittstelle oder eine Klasse einen Dienstvertrag in einer Windows Phone-Clientanwendung definiert. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServiceContractAttribute" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>Ruft den Typ des Rückrufvertrags ab oder legt ihn fest, wenn es sich bei dem Vertrag um einen Duplexvertrag handelt.</summary>
      <returns>Ein <see cref="T:System.Type" />, der den Rückrufvertrag angibt. Der Standardwert ist null.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>Ruft den Namen ab, mit dem der Dienst in einer Anwendungskonfigurationsdatei gesucht wird, oder legt ihn fest.</summary>
      <returns>Der Name, mit dem das Dienstelement in einer Anwendungskonfigurationsdatei gesucht wird. Der Standardwert ist der Name der Dienstimplementierungsklasse.</returns>
      <exception cref="T:System.ArgumentNullException">Der Wert ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist eine leere Zeichenfolge.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>Ruft den Namen für das &lt;portType&gt;-Element in WSDL (Web Services Description Language) ab oder legt ihn fest. </summary>
      <returns>Der Standardwert ist der Name der Klasse oder Schnittstelle, auf die das <see cref="T:System.ServiceModel.ServiceContractAttribute" /> angewendet wird. </returns>
      <exception cref="T:System.ArgumentNullException">Der Wert ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist eine leere Zeichenfolge.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>Ruft den Namespace für das &lt;portType&gt;-Element in WSDL (Web Services Description Language) ab oder legt ihn fest.</summary>
      <returns>Der WSDL-Namespace des &lt;portType&gt;-Elements. Der Standardwert ist "http://tempuri.org". </returns>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>Gibt die bekannten Typen an, die beim Serialisieren oder Deserialisieren von einem Dienst verwendet werden sollen.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" />-Klasse und gibt den Namen einer Methode an, die die bekannten Typen zurückgibt.</summary>
      <param name="methodName">Der Name der Methode, die die bekannten Typen zurückgibt.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" />-Klasse mit dem Namen einer Methode, die die bekannten Typen zurückgibt, und dem Typ, der die Methoden enthält, die die bekannten Typen zurückgeben.</summary>
      <param name="methodName">Der Name der Methode, die die bekannten Typen zurückgibt.</param>
      <param name="declaringType">Der Typ, der die bekannten Typen in seinem Objektdiagramm verwenden kann.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" />-Klasse mit dem angegebenen bekannten Typ.</summary>
      <param name="type">Gibt einen bekannten Typ an, der in einem Parameter oder Rückgabewert, der vom Dienst definiert ist, verwendet werden kann.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>Ruft den Typ ab, der die Methoden enthält, die die bekannten Typen zurückgeben.</summary>
      <returns>Die Methoden, die die bekannten Typen zurückgeben.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>Ruft den Namen einer Methode ab, die die Auflistung bekannter Typen zurückgibt.</summary>
      <returns>Der Name der Methode, die die bekannten Typen zurückgibt.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>Der bekannte Typ, der in ein Objektdiagramm aufgenommen werden kann.</summary>
      <returns>Der <see cref="T:System.Type" /> des bekannten Typs.</returns>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>Enthält die Nachricht, die von einem Kanal empfangen wurde und keiner ausstehenden Anforderung zugeordnet werden kann.</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>Ruft die unbekannte Nachricht ab, die das Ereignis verursacht hat.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.Message" />, die das Ereignis verursacht hat.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>Stellt einen Header dar, der ein Adressinformationselement kapselt, um einen Endpunkt zu identifizieren oder mit diesem zu interagieren.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.AddressHeader" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.ServiceModel.Channels.AddressHeader" />-Klasse mit dem angegebenen Wert, Namen und Namespace.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.AddressHeader" /> mit dem angegebenen <paramref name="name" /> und <paramref name="ns" />, der das durch <paramref name="value" /> angegebene Informationselement enthält.</returns>
      <param name="name">Der Name des Adressheaders.</param>
      <param name="ns">Der Namespace des Adressheaders.</param>
      <param name="value">Das Informationselement für den Adressheader.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" /> ist NULL oder <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.ServiceModel.Channels.AddressHeader" />-Klasse mit einem angegebenen Namen und Namespace, der einen festgelegten Formatierer verwendet, um das Informationselement eines angegebenen Objekts zu serialisieren.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.AddressHeader" /> mit dem angegebenen <paramref name="name" /> und <paramref name="ns" />, der das durch <paramref name="value" /> angegebene Informationselement enthält.</returns>
      <param name="name">Der Name des Adressheaders.</param>
      <param name="ns">Der Namespace des Adressheaders.</param>
      <param name="value">Das Informationselement für den Adressheader.</param>
      <param name="serializer">Der <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> zum Serialisieren des angegebenen Objekts im <paramref name="value" />-Parameter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> oder <paramref name="serializer" /> ist null oder <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>Bestimmt, ob das Informationselement in einem festgelegten Objekt mit dem im aktuellen Adressheader enthaltenen Objekt übereinstimmt.</summary>
      <returns>true, wenn das Informationselement in einem angegebenen <paramref name="obj" /> mit dem Informationselement im aktuellen Adressheader übereinstimmt, andernfalls false. Gibt insbesondere false zurück, wenn <paramref name="obj" />NULL ist.</returns>
      <param name="obj">Das <see cref="T:System.Object" />, das mit dem im aktuellen Adressheader enthaltenen Objekt verglichen werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>Gibt einen XML-Reader zurück, der das aktuelle Adressheaderobjekt serialisieren kann.</summary>
      <returns>Eine Instanz von <see cref="T:System.Xml.XmlDictionaryReader" />, der das aktuelle Adressheaderobjekt serialisieren kann.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>Stellt einen eindeutigen Hashcode für einen Adressheader bereit. </summary>
      <returns>Ein eindeutiger Hashcode für den aktuellen Adressheader.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>Deserialisiert das Informationselement des aktuellen Adressheaders zu einem Objekt eines angegebenen Typs.</summary>
      <returns>Eine Instanz einer Klasse vom Typ <paramref name="T" />, deren Felder und Eigenschaften auf die Werte gesetzt sind, die vom aktuellen Adressheaderobjekt bereitgestellt werden.</returns>
      <typeparam name="T">Eine Klasse vom Typ <paramref name="T" />, deren Felder und Eigenschaften auf die Werte gesetzt sind, die vom aktuellen Adressheaderobjekt bereitgestellt werden.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Deserialisiert das Informationselement des aktuellen Adressheaders zu einem Objekt eines angegebenen Typs, das einen angegebenen Formatierer zur Serialisierung dieser Informationen nutzt.</summary>
      <returns>Eine Instanz einer Klasse vom Typ <paramref name="T" />, deren Felder und Eigenschaften auf die Werte gesetzt sind, die vom aktuellen Adressheaderobjekt bereitgestellt werden.</returns>
      <param name="serializer">Der <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> zum Deserialisieren des Informationselements aus dem aktuellen Adressheaderobjekt.</param>
      <typeparam name="T">Eine Klasse vom Typ <paramref name="T" />, deren Felder und Eigenschaften auf die Werte gesetzt sind, die vom aktuellen Adressheaderobjekt bereitgestellt werden.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>Ruft bei Implementierung den Namen des Adressheaders ab.</summary>
      <returns>Der Name des Adressheaders.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>Ruft bei Implementierung den Namespace des Adressheaders ab.</summary>
      <returns>Der Namespace des Adressheaders.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Wird beim Überschreiben in einer abgeleiteten Klasse aufgerufen, wenn die Inhalte des Adressheaders in einen Stream oder eine Datei geschrieben werden.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, mit dem die Inhalte des Adressheaders in einen Stream oder eine Datei geschrieben werden.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Wird beim Überschreiben in einer abgeleiteten Klasse aufgerufen, wenn damit begonnen wird, die Inhalte des Adressheaders in einen Stream oder eine Datei zu schreiben.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, mit dem der Adressheader in einen Stream oder eine Datei geschrieben wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>Umschließt den Adressheader als Nachrichtenheader.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.MessageHeader" />, der den aktuellen Adressheader umschließt.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Schreibt den Adressheader mit einem angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" /> in einen Stream oder in eine Datei.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, mit dem der Adressheader in einen Stream oder eine Datei geschrieben wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>Schreibt den Adressheader mit einem angegebenen <see cref="T:System.Xml.XmlWriter" /> in einen Stream oder in eine Datei.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlWriter" />, mit dem der Adressheader in einen Stream oder eine Datei geschrieben wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Schreibt die Inhalte des Adressheaders in einen Stream oder eine Datei.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, mit dem die Inhalte des Adressheaders in einen Stream oder eine Datei geschrieben werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Beginnt damit, die Inhalte des Adressheaders in einen Stream oder eine Datei zu schreiben.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, mit dem der Adressheader in einen Stream oder eine Datei geschrieben wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>Stellt eine threadsichere, schreibgeschützte Auflistung von Adressheadern dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />-Klasse aus einem auflistbaren Satz von Adressheadern.</summary>
      <param name="addressHeaders">Der <see cref="T:System.Collections.Generic.IEnumerable`1" />-Satz aus <see cref="T:System.ServiceModel.Channels.AddressHeader" />-Objekten, mit denen die Auflistung initialisiert wird.</param>
      <exception cref="T:System.ArgumentException">Einer der Adressheader im <paramref name="addressHeaders" />-Parameter ist NULL.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>Fügt den Headern einer angegebenen Nachricht die Header in der Auflistung hinzu.</summary>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, der die Header hinzugefügt werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>Sucht alle Adressheader in der Auflistung mit dem angegebenen Namen und dem angegebenen Namespace.</summary>
      <returns>Das <see cref="T:System.Array" /> vom <see cref="T:System.ServiceModel.Channels.AddressHeader" />, das alle Header in der Auflistung mit dem angegebenen Namen und dem angegebenen Namespace enthält.</returns>
      <param name="name">Der Name des Adressheaders, der gesucht werden soll.</param>
      <param name="ns">Der Namespace des Adressheaders, der gesucht werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> oder <paramref name="ns" /> ist NULL.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>Sucht den ersten Adressheader in der Auflistung mit dem angegebenen Namen und dem angegebenen Namespace.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.AddressHeader" /> in der Auflistung mit dem angegebenen Namen und dem angegebenen Namespace.</returns>
      <param name="name">Der Name des Adressheaders, der gesucht werden soll.</param>
      <param name="ns">Der Namespace des Adressheaders, der gesucht werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> oder <paramref name="ns" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentException">Es gibt mehrere Header mit dem angegebenen <paramref name="name" /> und <paramref name="ns" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>Die WS-Adressierungsversion, die einer SOAP-Nachricht zugeordnet ist oder von einem Endpunkt verstanden wird.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>Ruft die Adressierungsversion ab, die angibt, dass keine Version der WS-Adressierung verwendet wird.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, die keine Version der WS-Adressierung verwendet.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>Eine Zeichenfolge, die die aktuelle Adressierungsversion darstellt.</summary>
      <returns>Die aktuelle Adressierungsversion.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>Ruft einen Bezeichner für die Adressversion ab, die der WS-Adressierung, Version 1.0, zugeordnet ist.</summary>
      <returns>Eine Singletoninstanz, die die <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> bezeichnet, die der WS-Adressierung, Version 1.0, zugeordnet ist.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>Das Bindungselement, das das .NET Binary-Format für XML angibt, mit dem Nachrichten codiert werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Erstellt den Kanalfactorystapel auf dem Client, der einen angegebenen Kanaltyp für einen angegebenen Kontext erstellt.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> vom Typ <paramref name="TChannel" /> für den angegebenen Kontext.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> für den Kanal.</param>
      <typeparam name="TChannel">Der Typ des Kanals, der von der Kanalfactory erzeugt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>Erstellt ein neues, aus dem aktuellen Objekt initialisiertes <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />-Objekt.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" />-Objekt mit Eigenschaftswerten, die denen des aktuellen Elements entsprechen.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Erstellt eine Factory für binäre Nachrichtenencoder, die die SOAP- und WS-Adressierungsversionen sowie die Zeichencodierung verwenden, die vom aktuellen Codierungsbindungselement festgelegt wurden.</summary>
      <returns>Die von diesem Bildungselement erstellte <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>Ruft die verwendeten oder erwarteten SOAP-Nachrichten- und WS-Adressierungsversionen ab oder liegt sie fest.</summary>
      <returns>Die verwendete oder erwartete <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
      <exception cref="T:System.ArgumentNullException">Der festgelegte Wert ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der festgelegte Wert ist eine nicht unterstützte Umschlagversion.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>Enthält die Bindungselemente, die die verwendeten Protokolle, Transporte und Nachrichtenencoder angeben, die für die Kommunikation zwischen Clients und Servern verwendet werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.Binding" />-Klasse mit einem Standardnamen und -namespace. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.Binding" />-Klasse aus einer angegebenen Bindung des Diensts.</summary>
      <param name="name">Der <see cref="P:System.ServiceModel.Channels.Binding.Name" /> der Bindung.</param>
      <param name="ns">Der <see cref="P:System.ServiceModel.Channels.Binding.Namespace" /> der Bindung.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> ist NULL oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ns" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>Erstellt den Kanalfactorystapel auf dem Client, der einen angegebenen Kanaltyp erstellt und der die von einem Objektarray festgelegten Funktionen erfüllt.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> vom Typ <paramref name="TChannel" />, die die von der Auflistung festgelegten Funktionen erfüllt.</returns>
      <param name="parameters">Das Objektarray, das Anforderungen für die zu erstellende Kanalfactory festlegt.</param>
      <typeparam name="TChannel">Der von der Kanalfactory erzeugte Kanaltyp.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transportelement fehlt oder ist falsch, Schema ist ungültig oder die Nachrichtenversion ist nicht angegeben.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Erstellt den Kanalfactorystapel auf dem Client, der einen angegebenen Kanaltyp erstellt und der die Funktionen erfüllt, die von einer Auflistung von Bindungsparametern festgelegt wird.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> vom Typ <paramref name="TChannel" />, die die von der Auflistung festgelegten Funktionen erfüllt.</returns>
      <param name="parameters">Die <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, die Anforderungen für die erstellte Kanalfactory festlegt.</param>
      <typeparam name="TChannel">Der von der Kanalfactory erzeugte Kanaltyp.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transportelement fehlt oder ist falsch, Schema ist ungültig oder die Nachrichtenversion ist nicht angegeben.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>Gibt einen Wert zurück, der angibt, ob die aktuelle Bindung einen Kanalfactorystapel auf dem Client erstellen kann, der die von einem Objektarray festgelegten Anforderungen erfüllt.</summary>
      <returns>true, wenn der angegebene Kanalfactorystapel auf dem Client erstellt werden kann, andernfalls false.</returns>
      <param name="parameters">Das Objektarray, das Anforderungen für die zu erstellende Kanalfactory festlegt.</param>
      <typeparam name="TChannel">Der Kanaltyp, für den die Factory getestet wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Gibt einen Wert zurück, der angibt, ob die aktuelle Bindung einen Kanalfactorystapel auf dem Client erstellen kann, der die angegebene Auflistung mit Bindungsparametern erfüllt.</summary>
      <returns>true, wenn der angegebene Kanalfactorystapel auf dem Client erstellt werden kann, andernfalls false.</returns>
      <param name="parameters">Die <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, die Anforderungen für die zu erstellende Kanalfactory festlegt.</param>
      <typeparam name="TChannel">Der Kanaltyp, für den die Factory getestet wird.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>Ruft das Zeitintervall ab, das zum Trennen einer Verbindung zur Verfügung steht, bevor der Transport eine Ausnahme auslöst, oder legt dieses Zeitintervall fest.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Schließvorgang bleibt, bevor ein Timeout eintritt. Der Standardwert beträgt 1 Minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist kleiner als Null (0) oder zu groß.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>Erstellt beim Überschreiben in einer abgeleiteten Klasse eine Auflistung mit den Bindungselementen, die Teil der aktuellen Bindung sind. </summary>
      <returns>Ein <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt vom Typ <see cref="T:System.ServiceModel.Channels.BindingElement" />, das die Bindungselemente aus dem aktuellen Bindungsobjekt in der richtigen Reihenfolge enthält.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Gibt ein angefordertes typisiertes Objekt von der entsprechenden Ebene im Bindungsstapel zurück, wenn es vorhanden ist.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, falls vorhanden, oder NULL, falls nicht vorhanden.</returns>
      <param name="parameters">Die <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />, die Anforderungen für den zu erstellenden Kanal festlegt.</param>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>Ruft die Nachrichtenversion ab, die von mit der Bindung konfigurierten Clients und Diensten verwendet wird.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die von mit der Bindung konfigurierten Clients und Diensten verwendet wird.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>Ruft den Namen der Bindung ab oder legt diesen fest.</summary>
      <returns>Der Name der Bindung. Der Standardname ist NULL.</returns>
      <exception cref="T:System.ArgumentException">Der festgelegte Wert darf nicht NULL oder eine leere Zeichenfolge sein.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>Ruft den Namen des XML-Namespace der Bindung ab oder legt diesen fest.</summary>
      <returns>Der XML-Namespace der Bindung. Der Standardwert ist "http://tempuri.org/".</returns>
      <exception cref="T:System.ArgumentNullException">Der Wert darf nicht NULL sein.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>Ruft das Zeitintervall ab, das zum Öffnen einer Verbindung zur Verfügung steht, bevor der Transport eine Ausnahme auslöst, oder legt dieses Zeitintervall fest.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Öffnungsvorgang bleibt, bevor ein Timeout eintritt. Der Standardwert beträgt 1 Minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist kleiner als Null (0) oder zu groß.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>Ruft das Zeitintervall ab oder legt das Zeitintervall fest, in dem eine Verbindung inaktiv bleiben darf und in dem keine Anwendungsnachrichten empfangen werden, bevor die Verbindung getrennt wird.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit die Anwendung für den Empfang einer Nachricht hat, bevor ein Timeout eintritt. Der Standardwert beträgt 10 Minuten.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist kleiner als Null (0) oder zu groß.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>Bei Implementierung in einer abgeleiteten Klasse wird das URI-Schema festgelegt, das den Transport angibt, der von den über die Bindungen erstellten Kanalfactorys verwendet wird.</summary>
      <returns>Das URI-Schema, das von den Kanälen verwendet wird, die von den durch die aktuelle Bindung erzeugten Factorys erstellt werden.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>Ruft das Zeitintervall ab oder legt das Zeitintervall fest, das einem Schreibvorgang zur Verfügung steht, bevor der Transport eine Ausnahme auslöst.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Schreibvorgang bleibt, bevor ein Timeout eintritt. Der Standardwert beträgt 1 Minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist kleiner als Null (0) oder zu groß.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>Stellt Informationen über die Adressen, Bindungen, Bindungselemente und Bindungsparameter bereit, die zum Erstellen der Kanalfactorys auf einem Client unter Windows Phone erforderlich sind.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BindingContext" />-Klasse für eine angegebene Bindung und Auflistung mit Bindungsparametern.</summary>
      <param name="binding">Die <see cref="T:System.ServiceModel.Channels.CustomBinding" /> für den Kanal.</param>
      <param name="parameters">Die <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> für den Kanal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>Ruft die Bindung für den Kanal ab, der im aktuellen Kontext erstellt wird.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.CustomBinding" /> für den Kanal, der im aktuellen Kontext erstellt wird.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>Ruft die Auflistung der Bindungsparameter für den Kanal ab, der im aktuellen Kontext erstellt wird.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> für den Kanal, der im aktuellen Kontext erstellt wird.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>Erstellt die innere Kanalfactory für Kanäle eines festgelegten Typs unter der aktuellen Kanalfactory.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> vom Typ <see cref="T:System.ServiceModel.Channels.IChannel" />, die die innere Kanalfactory der aktuellen Kanalfactory darstellt.</returns>
      <typeparam name="TChannel">Der Typ des <see cref="T:System.ServiceModel.Channels.IChannel" />-Objekts, das von der inneren Kanalfactory erzeugt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>Gibt einen Wert zurück, der angibt, ob die innere Kanalfactory einen angegebenen Kanaltyp erzeugen kann.</summary>
      <returns>true, wenn die innere Kanalfactory den angegebenen <paramref name="TChannel" /> erzeugen kann, andernfalls false.</returns>
      <typeparam name="TChannel">Der Typ des <see cref="T:System.ServiceModel.Channels.IChannel" />-Objekts, das von der inneren Kanalfactory erzeugt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>Gibt eine Kopie des aktuellen Kontexts für die Kanalerstellung zurück.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.BindingContext" />-Objekt, das eine Kopie des aktuellen Kontext für die Kanalerstellung ist.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>Gibt ein angefordertes typisiertes Objekt von der entsprechenden Ebene im Bindungsstapel zurück, wenn es vorhanden ist.</summary>
      <returns>Das von <paramref name="T " /> angeforderte typisierte Objekt, falls vorhanden, oder NULL, falls nicht vorhanden.</returns>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>Ruft die Bindungselemente ab, die von anderen Bindungselementen zum Erstellen des Kanalstapels verwendet werden.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> mit den Bindungselementen, die von anderen Bindungselementen zum Erstellen des Kanalstapels verwendet werden.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>Die Elemente der Bindungen, die die Kanalfactorys für verschiedene Kanaltypen erstellen, die zum Verarbeiten ausgehender Nachrichten auf einem Windows Phone-Client verwendet werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BindingElement" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BindingElement" />-Klasse aus einem angegebenen Bindungselement.</summary>
      <param name="elementToBeCloned">Das <see cref="T:System.ServiceModel.Channels.BindingElement" />, das geklont werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initialisiert eine Kanalfactory zum Erzeugen von Kanälen eines festgelegten Typs aus dem Bindungskontext.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> vom Typ <paramref name="TChannel" />, die aus dem <paramref name="context" /> initialisiert wird.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" />, der den Kontext für das Bindungselement bereitstellt. </param>
      <typeparam name="TChannel">Der Typ des Kanals, der von der Factory erstellt wird.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gibt einen Wert zurück, der angibt, ob das Bindungselement eine Kanalfactory für einen bestimmten Kanaltyp erstellen kann.</summary>
      <returns>true, wenn die <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> vom Typ <paramref name="TChannel" /> vom Bindungselement erstellt werden kann, andernfalls false.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" />, der den Kontext für das Bindungselement bereitstellt. </param>
      <typeparam name="TChannel">Der von der Kanalfactory erzeugte Kanaltyp.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse eine Kopie des Objekts für das Bindungselement zurück.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.BindingElement" />-Objekt, bei dem es sich um einen tiefen Klon des Originals handelt.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse ein angefordertes typisiertes Objekt von der entsprechenden Ebene im Bindungsstapel zurück, wenn es vorhanden ist.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, falls vorhanden, oder NULL, falls nicht vorhanden.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> für das Bindungselement.</param>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>Stellt die Auflistung der Bindungselemente dar, die in einer Bindung verwendet werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />-Klasse aus einem auflistbaren Satz von Bindungselementen.</summary>
      <param name="elements">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> vom generischen Typ <see cref="T:System.ServiceModel.Channels.BindingElement" />, mit dem die Auflistung initialisiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />-Klasse aus einem Array von Bindungselementen.</summary>
      <param name="elements">Das <see cref="T:System.Array" /> vom Typ <see cref="T:System.ServiceModel.Channels.BindingElement" />, mit dem die Auflistung initialisiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>Fügt Bindungselemente aus einem Array in die Auflistung mit Bindungselementen ein.</summary>
      <param name="elements">Das <see cref="T:System.Array" /> vom Typ <see cref="T:System.ServiceModel.Channels.BindingElement" />, das der Auflistung hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>Erstellt eine Kopie der Auflistung von Bindungselementen.</summary>
      <returns>Eine Kopie des <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />-Elements.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebener Bindungselementtyp zur Auflistung mit Bindungselementen gehört.</summary>
      <returns>true, wenn der angegebene Bindungselementtyp in der Auflistung enthalten ist, andernfalls false.</returns>
      <param name="bindingElementType">Der Bindungselementtyp, der zur Aufnahme in die Auflistung getestet wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementType" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>Gibt das erste Element eines angegebenen Typs aus der Auflistung mit Bindungselementen zurück.</summary>
      <returns>Das Element vom Typ <see cref="T:System.Type" />, sofern gefunden; falls nicht gefunden, 0, wenn <paramref name="T" /> ein Werttyp ist, und NULL, wenn <paramref name="T" /> ein Verweistyp ist.</returns>
      <typeparam name="T">Der <see cref="T:System.Type" /> des zu suchenden Elements.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>Gibt alle Elemente eines angegebenen Typs aus der Auflistung mit Bindungselementen zurück.</summary>
      <returns>Eine <see cref="T:System.Collections.ObjectModel.Collection`1" /> mit allen Elementen vom Typ <see cref="T:System.Type" />, sofern gefunden; wenn keine Elemente gefunden werden, 0 (null), falls <paramref name="T" /> ein Werttyp ist, und NULL, falls <paramref name="T" /> ein Verweistyp ist.</returns>
      <typeparam name="T">Der <see cref="T:System.Type" /> des zu suchenden Elements.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Fügt ein Bindungselement an einer bestimmten Position innerhalb einer Auflistung mit Bindungselementen ein.</summary>
      <param name="index">Die Position, an der das Bindungselement in der Auflistung eingefügt werden soll.</param>
      <param name="item">Das einzufügende <see cref="T:System.ServiceModel.Channels.BindingElement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>Entfernt ein Bindungselement eines angegebenen Typs aus der Auflistung mit Bindungselementen.</summary>
      <returns>Das Element vom Typ <see cref="T:System.Type" />, das entfernt werden soll.</returns>
      <typeparam name="T">Der <see cref="T:System.Type" /> des zu suchenden Elements.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>Entfernt alle Bindungselemente eines angegebenen Typs aus der Auflistung mit Bindungselementen.</summary>
      <returns>Eine <see cref="T:System.Collections.ObjectModel.Collection`1" /> mit allen gefundenen Elementen vom Typ <see cref="T:System.Type" />.</returns>
      <typeparam name="T">Der <see cref="T:System.Type" /> des zu suchenden Elements.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Ersetzt ein Bindungselement am angegebenen Index in der Auflistung mit Bindungselementen.</summary>
      <param name="index">Der nullbasierte Index des zu ersetzenden Elements.</param>
      <param name="item">Der neue Wert für das <see cref="T:System.ServiceModel.Channels.BindingElement" />-Element am angegebenen <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> ist null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>Stellt eine Auflistung von Bindungsparametern mit Informationen dar, die von Bindungselementen zum Erstellen von Factorys verwendet werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />-Klasse. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>Stellt den Writer des Nachrichtentexts dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BodyWriter" />-Klasse, die explizit angibt, ob eine Pufferung erfolgen soll.</summary>
      <param name="isBuffered">true, wenn der Body Writer mehrfach aufgerufen werden kann, andernfalls false.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>Ruft einen Wert ab, der angibt, ob die Schreibmethode mehrfach aufgerufen werden kann.</summary>
      <returns>true, wenn der Body Writer mehrfach aufgerufen werden kann, andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Stellt bei Implementierung einen Erweiterungspunkt bereit, wenn der Textinhalt geschrieben wird.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, mit dem der Nachrichtentext geschrieben wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Schreibt den Inhalt des Nachrichtentexts.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, mit dem der Nachrichtentext geschrieben wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>Bei Implementierung in einer abgeleiteten Klasse können Sie die <see cref="T:System.ServiceModel.Channels.BufferManager" />-Klasse zum Verwalten eines Pufferpools verwenden. Der Pool und die zugehörigen Puffer werden beim Instanziieren dieser Klasse erstellt und nach der Freigabe von der Garbage Collection wieder gelöscht. Wenn Sie einen Puffer verwenden müssen, können Sie einen aus dem Pool nehmen und nach Abschluss der Arbeit wieder im Pool ablegen. Dies geht wesentlich schneller und beansprucht weniger Ressourcen, als jeden benötigten Puffer jeweils neu zu erstellen und zu entfernen.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.BufferManager" />-Klasse.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>Gibt die derzeit im Manager zwischengespeicherten Puffer frei.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>Erstellt einen neuen BufferManager mit einer angegebenen maximalen Pufferpoolgröße und einer maximalen Größe für jeden einzelnen Puffer im Pool.</summary>
      <returns>Gibt ein <see cref="T:System.ServiceModel.Channels.BufferManager" />-Objekt mit den angegebenen Parametern zurück.</returns>
      <param name="maxBufferPoolSize">Die maximale Größe des Pools.</param>
      <param name="maxBufferSize">Die maximale Größe eines einzelnen Puffers.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferPoolSize" /> oder <paramref name="maxBufferSize" /> war kleiner als Null (0).</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>Gibt einen Puffer an den Pool zurück.</summary>
      <param name="buffer">Ein Verweis auf den zurückgegebenen Puffer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />-Verweis darf nicht NULL sein.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" />-Länge entspricht nicht der Pufferlängeneigenschaft des Pools.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>Ruft einen Puffer mit mindestens der angegebenen Größe vom Pool ab. </summary>
      <returns>Ein Bytearray mit der angeforderten Größe des Puffers.</returns>
      <param name="bufferSize">Die Größe (in Bytes) des angeforderten Puffers.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> darf nicht kleiner 0 (null) sein.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>Stellt die Basisimplementierung für benutzerdefinierte Kanäle bereit.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelBase" />-Klasse. </summary>
      <param name="channelManager">Die <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />, die Standardtimeouts für die Kanalvorgänge (Senden, Empfangen, Öffnen und Schließen) bereitstellt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="channelManager" /> ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Schließvorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Schließen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Öffnungsvorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Öffnen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Empfangsvorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Schließen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Sendevorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Senden bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>Gibt ggf. das angeforderte typisierte Objekt von der entsprechenden Schicht im Kanalstapel zurück.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, falls vorhanden, oder NULL, falls nicht vorhanden.</returns>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>Ruft den Kanal-Manager ab, der dem aktuellen Kanal zugeordnet ist.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />, die dem aktuellen Kanal zugeordnet ist.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>Wird beim Übergang eines Kommunikationsobjekts in den Zustand "Schließen" aufgerufen.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Schließmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Schließmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Öffnungsmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Öffnungsmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Empfangsmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Empfangsmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Sendemethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Sendemethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>Stellt eine allgemeine Basisimplementierung für alle benutzerdefinierten Kanalfactorys bereit.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" />-Klasse mit festgelegten Standardtimeouts für die Kommunikation.</summary>
      <param name="timeouts">Die <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />, die die Standardtimeouts für Öffnungs-, Sende-, Empfangs- und Schließvorgänge beim Austausch von Nachrichten festlegen. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Schließvorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Schließen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Öffnungsvorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Öffnen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Empfangsvorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Schließen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>Ruft das Standardzeitintervall ab, das für den Abschluss eines Sendevorgangs bereitgestellt wird.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Senden bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>Gibt ggf. das angeforderte typisierte Objekt von der entsprechenden Schicht im Kanalstapel zurück.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, falls vorhanden, oder NULL, falls nicht vorhanden.</returns>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>Setzt die Verarbeitung für ein Kommunikationsobjekt ein, nachdem es aufgrund des Aufrufs eines synchronen Abbruchvorgangs in den Zustand "Schließen" übergegangen ist.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um alle von der Factory erstellten Kanäle zu schließen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen OnClose-Vorgang verweist. </returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den OnClose-Vorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen OnClose-Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen OnClose-Vorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>Setzt die Verarbeitung für ein Kommunikationsobjekt ein, nachdem es in den Zustand "Öffnen" übergegangen ist, der innerhalb eines angegebenen Zeitintervalls abgeschlossen sein muss.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den OnClose-Vorgang bleibt, bevor ein Timeout eintritt.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>Startet eine asynchronen Vorgang zum Schließen von Kanälen, die von der Factory geöffnet wurden.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wurde.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>Stellt eine allgemeine Basisimplementierung für Kanalfactorys auf dem Client bereit, um Kanäle eines angegebenen Typs zu erstellen, die mit einer festgelegten Adresse verbunden sind.</summary>
      <typeparam name="TChannel">Der Typ des Kanals, der von der Factory erzeugt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" />-Klasse mit den festgelegten Standardtimeouts für die Kommunikation.</summary>
      <param name="timeouts">Die <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />, die die Standardtimeouts für Öffnungs-, Sende-, Empfangs- und Schließvorgänge beim Austausch von Nachrichten festlegen.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Erstellt einen bestimmten Kanaltyp mit einer angegebenen Endpunktadresse.</summary>
      <returns>Ein Kanal vom Typ <paramref name="TChannel" /> mit der angegebenen <paramref name="address" />.</returns>
      <param name="address">Die <see cref="T:System.ServiceModel.EndpointAddress" /> des Remoteendpunkts, an den der Kanal Nachrichten sendet.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Erstellt einen bestimmten Kanaltyp mit einer angegebenen Transport- und Endpunktadresse.</summary>
      <returns>Ein Kanal vom Typ <paramref name="TChannel" /> mit der angegebenen Remote- und Transportadresse.</returns>
      <param name="address">Die <see cref="T:System.ServiceModel.EndpointAddress" /> des Remoteendpunkts, an den der Kanal Nachrichten sendet.</param>
      <param name="via">Der <see cref="T:System.Uri" /> mit der Transportadresse, an die Nachrichten über den Ausgabekanal gesendet werden.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> oder <paramref name="via" /> ist NULL.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>Bricht alle Kanäle ab, die von der Kanalfactory verwaltet werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um alle der Kanalfactory zugeordneten Kanäle innerhalb eines angegebenen Zeitintervalls zu schließen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen OnClose-Vorgang verweist. </returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den OnClose-Vorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den asynchronen Abschluss des OnClose-Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen OnClose-Vorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>Schließt alle der Kanalfactory zugeordneten Kanäle innerhalb eines angegebenen Zeitintervalls.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den OnClose-Vorgang bleibt, bevor ein Timeout eintritt.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Stellt bei der Implementierung in einer abgeleiteten Klasse einen Erweiterungspunkt bereit, wenn Kanäle erstellt werden.</summary>
      <returns>Ein Kanal vom Typ <paramref name="TChannel" /> mit den angegebenen Adressen.</returns>
      <param name="address">Die <see cref="T:System.ServiceModel.EndpointAddress" /> des Remoteendpunkts, an den der Kanal Nachrichten sendet.</param>
      <param name="via">Der <see cref="T:System.Uri" /> mit der Transportadresse, an die Nachrichten über den Ausgabekanal gesendet werden.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um alle der Kanalfactory zugeordneten Kanäle innerhalb eines angegebenen Zeitintervalls zu schließen.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wurde.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>Bestätigt, dass die Kanalfactory geöffnet wurde und zum Erstellen von Kanälen bereit ist.</summary>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Closing" />- oder im <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand.</exception>
      <exception cref="T:System.InvalidOperationException">Die aktuelle Kanalfactory befindet sich nicht im <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>Stellt eine Basisimplementierung zum Verwalten der Standardtimeouts bereit, die Kanal- und Listenerfactorys zugeordnet sind.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse das Standardzeitintervall ab, in dem der Empfang einer Nachricht durch einen Kanal beendet sein muss.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit dem Kanal nach dem Aufruf der Empfangsmethode für den Empfang einer Nachricht bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse das Standardzeitintervall ab, in dem das Senden einer Nachricht durch einen Kanal beendet sein muss.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit dem Kanal nach dem Aufruf der Sendemethode für das Senden einer Nachricht bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Schließmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Schließmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Öffnungsmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Öffnungsmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Empfangsmethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Empfangsmethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Ruft das Zeitintervall ab, nach dem die von einem Kommunikationsobjekt aufgerufene Sendemethode das Zeitlimit überschreitet.</summary>
      <returns>Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, bis die Sendemethode das Zeitlimit überschreitet.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>Stellt eine Auflistung von Kanalparametern dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />-Klasse. </summary>
      <param name="channel">Der Kanal, dessen Parameter in dieser Auflistung enthalten sind.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>Ruft den Kanal ab, dessen Parameter in dieser Auflistung enthalten sind. </summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.IChannel" />, dessen Parameter in dieser Auflistung enthalten sind.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>Löscht die Auflistung von Parametern.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Fügt das angegebene Element unter Verwendung des angegebenen Index in die Auflistung ein.</summary>
      <param name="index">Der Index des Elements in der Auflistung.</param>
      <param name="item">Das Element, das der Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>Fügt der <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> eines angegebenen Kanals die Parameter in der aktuellen Auflistung hinzu.</summary>
      <param name="innerChannel">Der Kanal, der die Parameter der aktuellen Auflistung empfängt.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>Entfernt einen Parameter aus der Auflistung.</summary>
      <param name="index">Index des zu entfernenden Parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Ersetzt ein Element in der Auflistung an einem angegebenen Index.</summary>
      <param name="index">Index des zu ersetzenden Elements.</param>
      <param name="item">Wert des Ersetzungselements.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>Stellt eine allgemeine Basisimplementierung für den Basiszustandsautomaten bereit, der allen kommunikationsorientierten Objekten im System, einschließlich Kanälen und Kanalfactorys, gemein ist.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.CommunicationObject" />-Klasse.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.CommunicationObject" />-Klasse mit der gegenseitig exklusiven Sperre zum Schutz der angegebenen Zustandsübergänge.</summary>
      <param name="mutex">Die gegenseitig exklusive Sperre, die die Klasseninstanz während eines Zustandsübergangs schützt.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>Bewirkt, dass ein Kommunikationsobjekt sofort von seinem aktuellen Zustand in den Zustand "Schließen" übergeht.</summary>
      <exception cref="T:System.InvalidOperationException">Entweder die <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />-Methode der Basisklasse oder die <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />-Methode der Basisklasse wird nicht aufgerufen.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu schließen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Schließvorgang verweist. </returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Schließvorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> wurde für ein Objekt im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand aufgerufen.</exception>
      <exception cref="T:System.TimeoutException">Das dem Vorgang zugewiesene Standardzeitintervall wurde überschritten, bevor der Vorgang abgeschlossen war.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt mit einem angegebenen Timeout zu schließen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Schließvorgang verweist.</returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Schließvorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Schließvorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Schließvorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> wurde für ein Objekt im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand aufgerufen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.TimeoutException">Das dem Vorgang über <paramref name="timeout" /> zugewiesene Zeitintervall wurde überschritten, bevor der Vorgang abgeschlossen war.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu schließen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Öffnungsvorgang verweist. </returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Öffnungsvorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Öffnungsvorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht im <see cref="F:System.ServiceModel.CommunicationState.Opened" />- oder im <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Closing" />- oder im <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das dem Vorgang zugewiesene Standardzeitintervall wurde überschritten, bevor der Vorgang abgeschlossen war.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um ein Kommunikationsobjekt innerhalb eines angegebenen Zeitintervalls zu schließen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Öffnungsvorgang verweist. </returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Öffnungsvorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Öffnungsvorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht im <see cref="F:System.ServiceModel.CommunicationState.Opened" />- oder im <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Closing" />- oder im <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das dem Vorgang über <paramref name="timeout" /> zugewiesene Zeitintervall wurde überschritten, bevor der Vorgang abgeschlossen war.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>Bewirkt, dass ein Kommunikationsobjekt von seinem aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> wurde für ein Objekt im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand aufgerufen.</exception>
      <exception cref="T:System.TimeoutException">Das dem Vorgang zugewiesene Standardzeitintervall wurde überschritten, bevor der Vorgang abgeschlossen war.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>Bewirkt, dass ein Kommunikationsobjekt innerhalb eines angegebenen Zeitintervalls vom aktuellen Zustand in den geschlossenen Zustand übergeht.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Schließvorgang bleibt, bevor ein Timeout eintritt.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> wurde für ein Objekt im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand aufgerufen.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.TimeoutException">Das dem Vorgang über <paramref name="timeout" /> zugewiesene Zeitintervall wurde überschritten, bevor der Vorgang abgeschlossen war.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>Tritt ein, wenn ein Kommunikationsobjekt in den geschlossenen Zustand übergeht.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>Tritt ein, wenn ein Kommunikationsobjekt in den Zustand "Schließen" übergeht.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse das Standardzeitintervall zum Ausführen eines Schließvorgangs ab.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Schließen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse das Standardzeitintervall zum Ausführen eines Öffnungsvorgangs ab.</summary>
      <returns>Die Standard-<see cref="T:System.Timespan" />, die angibt, wie viel Zeit für das Öffnen bleibt, bevor ein Timeout eintritt.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu schließen.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />-Methode zurückgegeben wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um ein Kommunikationsobjekt zu öffnen.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" />-Methode zurückgegeben wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>Bewirkt, dass ein Kommunikationsobjekt von seinem aktuellen Zustand in den Fehlerzustand übergeht.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>Tritt ein, wenn ein Kommunikationsobjekt in den Fehlerzustand übergeht.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>Ruft den Typ des Kommunikationsobjekts ab.</summary>
      <returns>Der Typ des Kommunikationsobjekts.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>Ruft einen Wert ab, der angibt, ob das Kommunikationsobjekt freigegeben wurde.</summary>
      <returns>true, wenn sich das Kommunikationsobjekt im geschlossenen Zustand befindet, andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>Bei Implementierung in einer abgeleiteten Klasse wird die Verarbeitung für ein Kommunikationsobjekt eingesetzt, nachdem es aufgrund des Aufrufs eines synchronen Abbruchvorgangs in den Zustand "Schließen" übergegangen ist.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Bei Implementierung in einer abgeleiteten Klasse wird die Verarbeitung eingesetzt, nachdem ein Kommunikationsobjekt aufgrund des Aufrufs eines asynchronen Schließvorgangs in den Zustand "Schließen" übergegangen ist.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen OnClose-Vorgang verweist. </returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den OnClose-Vorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen OnClose-Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen OnClose-Vorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> ist kleiner als 0 (null).</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Bei Implementierung in einer abgeleiteten Klasse wird die Verarbeitung für ein Kommunikationsobjekt eingesetzt, nachdem es aufgrund des Aufrufs eines asynchronen Öffnungsvorgangs in den Zustand "Öffnen" übergegangen ist.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen OnOpen-Vorgang verweist. </returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den OnOpen-Vorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen OnOpen-Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen OnOpen-Vorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> ist kleiner als 0 (null).</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>Bei Implementierung in einer abgeleiteten Klasse wird die Verarbeitung für ein Kommunikationsobjekt eingesetzt, nachdem es aufgrund des Aufrufs eines synchronen Schließvorgangs in den Zustand "Schließen" übergegangen ist.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den OnClose-Vorgang bleibt, bevor ein Timeout eintritt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> ist kleiner als 0 (null).</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>Wird beim Übergang eines Kommunikationsobjekts in den Zustand "Schließen" aufgerufen.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>Wird beim Übergang eines Kommunikationsobjekts in den Zustand "Schließen" aufgerufen.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>Führt bei der Implementierung in einer abgeleiteten Klasse einen asynchronen Vorgang beim Schließen eines Kommunikationsobjekts aus.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />-Methode zurückgegeben wird.</param>
      <exception cref="T:System.TimeoutException">Das dem Vorgang über <paramref name="timeout" /> zugewiesene Zeitintervall wurde überschritten, bevor der Vorgang abgeschlossen war.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>Führt bei der Implementierung in einer abgeleiteten Klasse einen asynchronen Vorgang beim Öffnen eines Kommunikationsobjekts aus.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />-Methode zurückgegeben wird.</param>
      <exception cref="T:System.TimeoutException">Das dem Vorgang über <paramref name="timeout" /> zugewiesene Zeitintervall wurde überschritten, bevor der Vorgang abgeschlossen war.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>Setzt die Verarbeitung für ein Kommunikationsobjekt ein, nachdem es aufgrund des Aufrufs eines synchronen Fehlervorgangs in den Fehlerzustand übergegangen ist.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>Bei Implementierung in einer abgeleiteten Klasse wird die Verarbeitung für ein Kommunikationsobjekt eingesetzt, nachdem es in den Zustand "Öffnen" übergegangen ist, der innerhalb eines angegebenen Zeitintervalls abgeschlossen sein muss.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den OnOpen-Vorgang bleibt, bevor ein Timeout eintritt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.TimeoutException">Das dem Vorgang über <paramref name="timeout" /> zugewiesene Zeitintervall wurde überschritten, bevor der Vorgang abgeschlossen war.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>Wird beim Übergang eines Kommunikationsobjekts in den geöffneten Zustand aufgerufen.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>Wird beim Übergang eines Kommunikationsobjekts in den Zustand "Öffnen" aufgerufen.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>Bewirkt, dass ein Kommunikationsobjekt vom Zustand "Erstellt" in den geöffneten Zustand übergeht.</summary>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht im <see cref="F:System.ServiceModel.CommunicationState.Opened" />- oder im <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Closing" />- oder im <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das dem Vorgang zugewiesene Standardzeitintervall wurde überschritten, bevor der Vorgang abgeschlossen war.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>Bewirkt, dass ein Kommunikationsobjekt innerhalb eines angegebenen Zeitintervalls vom Zustand "Erstellt" in den geöffneten Zustand übergeht.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Öffnungsvorgang bleibt, bevor ein Timeout eintritt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht im <see cref="F:System.ServiceModel.CommunicationState.Opened" />- oder im <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Closing" />- oder im <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.TimeoutException">Das dem Vorgang über <paramref name="timeout" /> zugewiesene Zeitintervall wurde überschritten, bevor der Vorgang abgeschlossen war.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>Tritt ein, wenn ein Kommunikationsobjekt in den geöffneten Zustand übergeht.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>Tritt ein, wenn ein Kommunikationsobjekt in den Zustand "Öffnen" übergeht.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>Ruft einen Wert ab, der den aktuellen Zustand des Kommunikationsobjekts angibt.</summary>
      <returns>Ein Wert aus der <see cref="T:System.ServiceModel.CommunicationState" />-Enumeration, die den aktuellen Zustand des Objekts angibt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>Ruft die gegenseitig exklusive Sperre ab, die die Klasseninstanz während eines Zustandsübergangs schützt.</summary>
      <returns>Die gegenseitig exklusive Sperre, die die Klasseninstanz während eines Zustandsübergangs schützt.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
      <summary>Löst eine Ausnahme aus, wenn das Kommunikationsobjekt freigegeben wird.</summary>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Closing" />- oder im <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
      <summary>Löst eine Ausnahme aus, wenn die <see cref="P:System.ServiceModel.Channels.CommunicationObject.State" />-Eigenschaft des Kommunikationsobjekts nicht auf den <see cref="F:System.ServiceModel.CommunicationState.Created" />-Zustand gesetzt wurde.</summary>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Opening" />- oder im <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Closing" />- oder im <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
      <summary>Löst eine Ausnahme aus, wenn sich das Kommunikationsobjekt nicht im <see cref="F:System.ServiceModel.CommunicationState.Opened" />-Zustand befindet.</summary>
      <exception cref="T:System.InvalidOperationException">Das Kommunikationsobjekt befindet sich nicht im <see cref="F:System.ServiceModel.CommunicationState.Created" />- oder im <see cref="F:System.ServiceModel.CommunicationState.Opening" />-Zustand und kann nicht verwendet werden.</exception>
      <exception cref="T:System.ObjectDisposedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Closing" />- oder im <see cref="F:System.ServiceModel.CommunicationState.Closed" />-Zustand und kann nicht geändert werden.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">Das Kommunikationsobjekt befindet sich im <see cref="F:System.ServiceModel.CommunicationState.Faulted" />-Zustand und kann nicht geändert werden.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CustomBinding">
      <summary>Definiert eine Bindung aus einer Liste mit Bindungselementen. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.CustomBinding" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.CustomBinding" />-Klasse mit den Bindungselementen aus einem vollständigen Kanalstapel.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" /> vom Typ <see cref="T:System.ServiceModel.Channels.BindingElement" />, das die Bindungselemente des Kanalstapels in der Reihenfolge von oben nach unten enthält.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.CustomBinding" />-Klasse aus den Werten einer angegebenen Bindung.</summary>
      <param name="binding">Die <see cref="T:System.ServiceModel.Channels.Binding" />, mit der die benutzerdefinierte Bindung initialisiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.CustomBinding" />-Klasse aus einem Array von Bindungselementen.</summary>
      <param name="bindingElementsInTopDownChannelStackOrder">Das <see cref="T:System.Array" /> vom Typ <see cref="T:System.ServiceModel.Channels.BindingElement" />, mit dem die benutzerdefinierte Bindung initialisiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.#ctor(System.String,System.String,System.ServiceModel.Channels.BindingElement[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.CustomBinding" />-Klasse aus einem Array von Bindungselementen mit einem angegebenen Namen und Namespace.</summary>
      <param name="name">Der Name der Bindung.</param>
      <param name="ns">Der Namespace der Bindung.</param>
      <param name="bindingElementsInTopDownChannelStackOrder">Das <see cref="T:System.Array" /> vom Typ <see cref="T:System.ServiceModel.Channels.BindingElement" />, mit dem die benutzerdefinierte Bindung initialisiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementsInTopDownChannelStackOrder" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CustomBinding.CreateBindingElements">
      <summary>Gibt eine generische Auflistung der Bindungselemente aus der benutzerdefinierten Bindung zurück.</summary>
      <returns>Ein <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt vom Typ <see cref="T:System.ServiceModel.Channels.BindingElement" />, das die Bindungselemente aus der benutzerdefinierten Bindung enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Elements">
      <summary>Ruft die Bindungselemente aus der benutzerdefinierten Bindung ab.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />, die die Bindungselemente aus der benutzerdefinierten Bindung enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CustomBinding.Scheme">
      <summary>Ruft das URI-Schema für den Transport ab, der von der benutzerdefinierten Bindung verwendet wird.</summary>
      <returns>Das URI-Schema für den Transport, der von der benutzerdefinierten Bindung verwendet wird, oder eine leere Zeichenfolge, wenn es keinen Transport gibt (<see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> ist NULL).</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.FaultConverter">
      <summary>Konvertiert von einem Kanal ausgelöste Ausnahmen in SOAP-Fehlermeldungen, die dem Protokoll des Kanals entsprechen.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.FaultConverter" />-Klasse.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
      <summary>Ruft den Standardfehlerkonverter ab.</summary>
      <returns>Eine Instanz des <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</returns>
      <param name="version">Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Versucht bei der Implementierung in einer abgeleiteten Klasse, die Ausnahme zu erstellen.</summary>
      <returns>true, wenn der Fehler erfolgreich konvertiert wurde, andernfalls false. Der Standardwert ist false.</returns>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" /> für den Fehler.</param>
      <param name="fault">Der Fehler.</param>
      <param name="exception">Bei erfolgreicher Konvertierung die SOAP-<see cref="T:System.Exception" />, die als out-Parameter zurückgegeben wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
      <summary>Versucht bei der Implementierung in einer abgeleiteten Klasse, die Fehlermeldung zu erstellen, nachdem der Fehler in eine SOAP-Ausnahme konvertiert wurde.</summary>
      <returns>true, wenn die Fehlermeldung erfolgreich erstellt wurde, andernfalls false. Der Standardwert ist false.</returns>
      <param name="exception">Die SOAP-Ausnahme.</param>
      <param name="message">Die Fehlermeldung, die als out-Parameter zurückgegeben wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> gab true zurück, aber <paramref name="message" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
      <summary>Umschließt <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> mit der Fehlerüberprüfung.</summary>
      <returns>true, wenn der Fehler erfolgreich konvertiert wurde, andernfalls false. Der Standardwert ist false.</returns>
      <param name="message">Die Fehlermeldung.</param>
      <param name="fault">Der Fehler.</param>
      <param name="exception">Bei erfolgreicher Konvertierung die SOAP-Ausnahme, die als out-Parameter zurückgegeben wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> oder <paramref name="fault" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> gab true zurück, aber <paramref name="exception" /> ist null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> gab false zurück, aber <paramref name="exception" /> ist nicht null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement">
      <summary>Ermöglicht die Verwaltung der Art und Weise, in der HTTP-Cookies in HTTP-Anforderungen und -Antworten behandelt werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />-Klasse.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.#ctor(System.ServiceModel.Channels.HttpCookieContainerBindingElement)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.HttpCookieContainerBindingElement" />-Klasse aus einem angegebenen Bindungselement.</summary>
      <param name="elementToBeCloned">Das <see cref="T:System.ServiceModel.Channels.BindingElement" />, das geklont werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initialisiert eine Kanalfactory zum Erzeugen von Kanälen eines festgelegten Typs aus dem Bindungskontext.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> vom Typ <paramref name="TChannel" />, die aus dem <paramref name="context" /> initialisiert wird.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" />, der den Kontext für das Bindungselement bereitstellt.</param>
      <typeparam name="TChannel">Der Typ des Kanals, der von der Factory erstellt wird.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.Clone">
      <summary>Gibt eine Kopie des aktuellen Objekts für das Bindungselement zurück.</summary>
      <returns>Das <see cref="T:System.ServiceModel.Channels.BindingElement" />-Objekt, bei dem es sich um einen tiefen Klon des Originals handelt.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpCookieContainerBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gibt ein angefordertes typisiertes Objekt von der entsprechenden Ebene im Bindungsstapel zurück, wenn es vorhanden ist.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, falls vorhanden, oder NULL, falls nicht vorhanden.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> für das Bindungselement.</param>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ist null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpRequestMessageProperty">
      <summary>Stellt Zugriff auf die HTTP-Anforderung bereit, um auf die zusätzlichen Informationen zuzugreifen und zu antworten, die für Anforderungen über das HTTP-Protokoll verfügbar gemacht werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpRequestMessageProperty.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />-Klasse.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Headers">
      <summary>Ruft die HTTP-Header aus der HTTP-Anforderung ab.</summary>
      <returns>Eine <see cref="T:System.Net.WebHeaderCollection" />, die die HTTP-Header in der HTTP-Anforderung enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Method">
      <summary>Ruft das HTTP-Verb für die HTTP-Anforderung ab oder legt es fest.</summary>
      <returns>Das HTTP-Verb für die HTTP-Anforderung.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist NULL.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Name">
      <summary>Ruft den Namen der Nachrichteneigenschaft ab, die der <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />-Klasse zugeordnet ist.</summary>
      <returns>Der Wert "httpRequest".</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString">
      <summary>Ruft die Abfragezeichenfolge für die HTTP-Anforderung ab oder legt sie fest.</summary>
      <returns>Die Abfragezeichenfolge aus der HTTP-Anforderung.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist NULL.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der Nachrichtentext ignoriert wird und nur die Header gesendet werden.</summary>
      <returns>true, wenn der Nachrichtentext unterdrückt wird, andernfalls false. Der Standardwert ist false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpResponseMessageProperty">
      <summary>Stellt Zugriff auf die HTTP-Antwort bereit, um auf die zusätzlichen Informationen zuzugreifen oder zu antworten, die für Anforderungen über das HTTP-Protokoll verfügbar gemacht werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpResponseMessageProperty.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" />-Klasse.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Headers">
      <summary>Ruft die HTTP-Header aus der HTTP-Antwort ab.</summary>
      <returns>Gibt eine <see cref="T:System.Net.WebHeaderCollection" /> zurück, die die HTTP-Header in der HTTP-Antwort enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.Name">
      <summary>Ruft den Namen der Nachrichteneigenschaft ab, die der <see cref="T:System.ServiceModel.Channels.HttpResponseMessageProperty" />-Klasse zugeordnet ist.</summary>
      <returns>Gibt “httpResponse” zurück.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusCode">
      <summary>Ruft den Statuscode der aktuellen HTTP-Antwort ab, mit der diese Eigenschaft verknüpft ist, oder legt den Statuscode fest.</summary>
      <returns>Der <see cref="T:System.Net.HttpStatusCode" /> für die HTTP-Antwort.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist auf einen Wert kleiner als 100 oder größer als 599 festgelegt.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpResponseMessageProperty.StatusDescription">
      <summary>Ruft die Beschreibung für den Statuscode der aktuellen HTTP-Antwort ab, mit der diese Eigenschaft verknüpft ist, oder legt die Beschreibung fest.</summary>
      <returns>Die Statusbeschreibung, die für die HTTP-Antwort gesendet werden soll.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpsTransportBindingElement">
      <summary>Stellt das Bindungselement dar, mit dem ein HTTPS-Transport zur Übertragung von Nachrichten angegeben wird. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpsTransportBindingElement)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />-Klasse.</summary>
      <param name="elementToBeCloned">Eine Instanz der <see cref="T:System.ServiceModel.Channels.HttpsTransportBindingElement" />-Klasse.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Erstellt eine Kanalfactory eines festgelegten Typs zum Erstellen eines Kanals.</summary>
      <returns>Eine Kanalfactory des angegebenen Typs, die auf der Grundlage der im Transportbindungselement festgelegten Werte konfiguriert ist.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />-Member, die Bindungen, Verhaltensweisen, Verträge und andere Informationen beschreiben, die zum Erstellen der Kanalfactory erforderlich sind.</param>
      <typeparam name="TChannel">Kanaltyp.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> darf nicht NULL sein.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.Clone">
      <summary>Erstellt eine Kopie des aktuellen Bindungselements.</summary>
      <returns>Eine Kopie des aktuellen Bindungselements.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpsTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Ruft ein angegebenes Objekt aus dem <see cref="T:System.ServiceModel.Channels.BindingContext" /> ab. Diese Methode ruft das angegebene Objekt aus der Basisklasse oder einem der Vorgänger dieser Klasse ab.</summary>
      <param name="context">Ein <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpsTransportBindingElement.Scheme">
      <summary>Gibt das URI-Schema für den Transport zurück.</summary>
      <returns>Das URI-Schema für den Transport, nämlich "HTTPS".</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.HttpTransportBindingElement">
      <summary>Stellt das Bindungselement dar, mit dem ein HTTP-Transport zur Übertragung von Nachrichten angegeben wird. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.#ctor(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />-Klasse. </summary>
      <param name="elementToBeCloned">Eine Instanz der <see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />-Klasse.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Erstellt eine Kanalfactory, mit der ein Kanal erstellt werden kann.</summary>
      <returns>Eine Kanalfactory vom angegebenen Typ.</returns>
      <param name="context">
        <see cref="T:System.ServiceModel.Channels.BindingContext" />-Member, die Bindungen, Verhaltensweisen, Verträge und andere Informationen beschreiben, die zum Erstellen der Kanalfactory erforderlich sind.</param>
      <typeparam name="TChannel">Typ der Kanalfactory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> darf nicht NULL sein.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Bestimmt, ob eine Kanalfactory des angegebenen Typs erstellt werden kann.</summary>
      <returns>true, wenn eine Kanalfactory erstellt werden kann, andernfalls false.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> für den zu erstellenden Kanal.</param>
      <typeparam name="TChannel">Der Typ des Kanals, der überprüft werden soll.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.Clone">
      <summary>Erstellt eine Kopie des aktuellen Bindungselements.</summary>
      <returns>Eine Kopie des aktuellen Bindungselements.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.HttpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Ruft eine Eigenschaft aus dem angegebenen <see cref="T:System.ServiceModel.Channels.BindingContext" /> ab.</summary>
      <returns>Die Eigenschaft aus dem angegebenen <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
      <param name="context">Ein <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Die abzurufende Eigenschaft.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.MaxBufferSize">
      <summary>Ruft die maximale Größe des zu verwendenden Puffers ab oder legt diese fest. Für gepufferte Nachrichten ist dieser Wert mit <see cref="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize" /> identisch. Für gestreamte Nachrichten ist dieser Wert die maximale Größe der SOAP-Header, die im gepufferten Modus gelesen werden müssen.</summary>
      <returns>Die maximale Größe (in Bytes) des Puffers. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.HttpTransportBindingElement.Scheme">
      <summary>Ruft das URI-Schema für den Transport ab.</summary>
      <returns>Gibt <see cref="F:System.Uri.UriSchemeHttp" /> zurück.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannel">
      <summary>Definiert die Basisschnittstelle, die alle Kanalobjekte implementieren müssen. Dabei ist es erforderlich, dass sie die Schnittstelle des Zustandsautomaten implementieren, die von allen Kommunikationsobjekten gemeinsam genutzt wird, und dass sie eine Methode implementieren, um Objekte aus dem Kanalstapel abzurufen. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
      <summary>Gibt ggf. ein angefordertes typisiertes Objekt von der entsprechenden Schicht im Kanalstapel zurück.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, falls vorhanden, oder NULL, falls nicht vorhanden.</returns>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory">
      <summary>Definiert die Schnittstelle, die von einer Kanalfactory implementiert werden muss, um Kanäle erzeugen zu können.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1">
      <summary>Gibt ggf. ein angefordertes typisiertes Objekt von der entsprechenden Schicht im Kanalstapel zurück.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, falls vorhanden, oder NULL, falls nicht vorhanden.</returns>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.IChannelFactory`1">
      <summary>Definiert die Schnittstelle, die von Kanalfactorys, die typspezifische Kanäle erstellen, implementiert werden muss.</summary>
      <typeparam name="TChannel">Der Typ des Kanals, der von der Kanalfactory erstellt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Erstellt einen Kanal eines angegebenen Typs für eine festgelegte Endpunktadresse.</summary>
      <returns>Ein Kanal vom Typ <paramref name="TChannel" /> für die angegebene Endpunktadresse.</returns>
      <param name="to">Die <see cref="T:System.ServiceModel.EndpointAddress" />, die den Speicherort des Diensts bereitstellt.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Erstellt einen Kanal eines angegebenen Typs für eine festgelegte Endpunkt- und Transportadresse, an die Nachrichten gesendet werden.</summary>
      <returns>Ein Kanal vom Typ <paramref name="TChannel" /> für die angegebene Endpunkt- und Transportadresse.</returns>
      <param name="to">Die <see cref="T:System.ServiceModel.EndpointAddress" />, die den Speicherort des Diensts bereitstellt.</param>
      <param name="via">Der <see cref="T:System.Uri" /> mit der Transportadresse, an die die Nachricht gesendet wird.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexChannel">
      <summary>Definiert die Schnittstelle, die ein Kanal zum Senden und Empfangen von Nachrichten implementieren muss.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSession">
      <summary>Definiert die Schnittstelle für die Sitzung, die auf beiden Seiten einer bidirektionalen Kommunikation zwischen Messagingendpunkten implementiert ist.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang zum Beenden der ausgehenden Sitzung.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf das asynchrone Beenden der ausgehenden Sitzung verweist.</returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat. </param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang zum Beenden der ausgehenden Sitzung mit einem angegebenen Timeout, in dem der Vorgang abgeschlossen sein muss.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf das asynchrone Beenden der ausgehenden Sitzung verweist.</returns>
      <param name="timeout">Die <see cref="T:System.TimeSpan" />, die das Zeitintervall angibt, in dem der Vorgang abgeschlossen sein muss.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat. </param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession">
      <summary>Beendet die ausgehende Sitzung, die angibt, dass von diesem Endpunkt keine weiteren Nachrichten über den Kanal gesendet werden, der dieser Sitzung zugeordnet ist. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)">
      <summary>Beendet die ausgehende Sitzung, die angibt, dass von diesem Endpunkt keine weiteren Nachrichten über den dieser Sitzung zugeordneten Kanal gesendet werden, innerhalb eines angegebenen Zeitintervalls.</summary>
      <param name="timeout">Die <see cref="T:System.TimeSpan" />, die das Zeitintervall angibt, in dem der Vorgang abgeschlossen sein muss.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)">
      <summary>Führt einen asynchronen Vorgang zum Beenden der ausgehenden Sitzung aus, die angibt, dass von diesem Endpunkt keine weiteren Nachrichten über den Kanal gesendet werden, der dieser Sitzung zugeordnet ist. </summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf einer der <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />-Methoden zurückgegeben wurde.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.IDuplexSessionChannel">
      <summary>Definiert die Schnittstelle, die einen Duplexkanal mit einer Sitzung verknüpft.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IHttpCookieContainerManager">
      <summary>Definiert die Schnittstelle, die den Zugriff auf eine optionale <see cref="T:System.Net.CookieContainer" />-Instanz bereitstellt, mit der eine Cookieauflistung verwaltet werden kann.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.IHttpCookieContainerManager.CookieContainer">
      <summary>Ruft das zu verwendende <see cref="T:System.Net.CookieContainer" />-Objekt ab oder legt es fest, falls ein Objekt verwendet werden soll.</summary>
      <returns>Der zu verwendende <see cref="T:System.Net.CookieContainer" />, wenn ein Container verwendet werden soll, oder NULL, wenn kein Container verwendet werden soll.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputChannel">
      <summary>Definiert die Schnittstelle, die ein Kanal zum Empfangen einer Nachricht implementieren muss. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang zum Empfangen einer Nachricht, der ein Zustandsobjekt zugeordnet ist. </summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Nachrichtenempfang verweist. </returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang zum Empfangen einer Nachricht, der ein angegebenes Timeout und ein Zustandsobjekt zugeordnet sind. </summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Empfangsvorgang verweist.</returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie lange darauf gewartet werden soll, dass eine Nachricht verfügbar wird.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.TimeoutException">Das angegebene <paramref name="timeout" /> wird überschritten, bevor der Vorgang beendet ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Das angegebene Timeout ist kleiner als Null (0).</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang zum Empfangen einer Nachricht, der ein angegebenes Timeout und ein Zustandsobjekt zugeordnet sind. </summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Empfangsvorgang verweist.</returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie lange darauf gewartet werden soll, dass eine Nachricht verfügbar wird.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.TimeoutException">Das angegebene <paramref name="timeout" /> wird überschritten, bevor der Vorgang beendet ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Das angegebene Timeout ist kleiner als Null (0).</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang zum Warten auf den Nachrichtenempfang, dem ein angegebenes Timeout und ein Zustandsobjekt zugeordnet sind. </summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Vorgang zum Warten auf den Nachrichtenempfang verweist.</returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie lange darauf gewartet werden soll, dass eine Nachricht verfügbar wird.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Zustandsinformationen enthält.</param>
      <exception cref="T:System.TimeoutException">Das angegebene <paramref name="timeout" /> wird überschritten, bevor der Vorgang beendet ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Das angegebene Timeout ist kleiner als Null (0).</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang zum Empfangen einer Nachricht. </summary>
      <returns>Die empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf einer der <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />-Methoden zurückgegeben wurde.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
      <summary>Beendet den angegebenen asynchronen Vorgang zum Empfangen einer Nachricht.</summary>
      <returns>true, wenn eine Nachricht vor Ende des angegebenen Zeitintervalls empfangen wird, andernfalls false.</returns>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" />-Methode zurückgegeben wurde.</param>
      <param name="message">Die empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
      <summary>Beendet den angegebenen asynchronen Vorgang zum Warten auf eine Nachricht.</summary>
      <returns>true, wenn eine Nachricht vor Überschreiten von <paramref name="timeout" /> empfangen wurde, andernfalls false.</returns>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das den abzuschließenden <see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" />-Vorgang kennzeichnet und von dem ein Endergebnis abgerufen werden soll.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
      <summary>Ruft die Adresse ab, über die der Eingabekanal Nachrichten empfängt. </summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointAddress" />, über die der Eingabekanal Nachrichten empfängt. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive">
      <summary>Gibt die empfangene Nachricht zurück, sofern eine verfügbar ist. Ist keine Nachricht verfügbar, erfolgt eine Blockade für die Dauer des Standardzeitintervalls.</summary>
      <returns>Die empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
      <summary>Gibt die empfangene Nachricht zurück, sofern eine verfügbar ist. Ist keine Nachricht verfügbar, erfolgt eine Blockade für die Dauer des angegebenen Zeitintervalls.</summary>
      <returns>Die empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Empfangsvorgang bleibt, bevor ein Timeout eintritt und eine <see cref="T:System.TimeoutException" /> ausgelöst wird.</param>
      <exception cref="T:System.TimeoutException">Das angegebene <paramref name="timeout" /> wird überschritten, bevor der Vorgang beendet ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Das angegebene Timeout ist kleiner als Null (0).</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
      <summary>Versucht, eine Nachricht innerhalb eines angegebenen Zeitintervalls zu empfangen. </summary>
      <returns>true, wenn eine Nachricht vor Überschreiten von <paramref name="timeout" /> empfangen wurde, andernfalls false.</returns>
      <param name="timeout">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf einer der <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />-Methoden zurückgegeben wurde.</param>
      <param name="message">Die empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </param>
      <exception cref="T:System.TimeoutException">Das angegebene <paramref name="timeout" /> wird überschritten, bevor der Vorgang beendet ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Das angegebene Timeout ist kleiner als Null (0).</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
      <summary>Gibt einen Wert zurück, der angibt, ob eine Nachricht innerhalb eines angegebenen Zeitintervalls empfangen wurde.</summary>
      <returns>true, wenn eine Nachricht vor Überschreiten von <paramref name="timeout" /> empfangen wurde, andernfalls false.</returns>
      <param name="timeout">Die <see cref="T:System.Timespan" /> gibt die maximale Wartezeit für den Nachrichtenempfang an, bevor ein Timeout eintritt.</param>
      <exception cref="T:System.TimeoutException">Das angegebene <paramref name="timeout" /> wird überschritten, bevor der Vorgang beendet ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Das angegebene Timeout ist kleiner als Null (0).</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSession">
      <summary>Definiert die Schnittstelle für die Sitzung, die auf der Empfangsseite einer unidirektionalen Kommunikation zwischen Messagingendpunkten implementiert ist. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IInputSessionChannel">
      <summary>Definiert die Schnittstelle, die einen Eingabekanal mit einer Sitzung verknüpft.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IMessageProperty">
      <summary>Definiert eine Schnittstelle, die Sie implementieren können, um eine Gruppe von Eigenschaften für eine Nachricht zu beschreiben.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <summary>Erstellt eine Kopie der aktuellen Instanz.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.IMessageProperty" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputChannel">
      <summary>Definiert die Schnittstelle, die ein Kanal zum Senden einer Nachricht implementieren muss. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Nachricht an das Ziel des Ausgabekanals zu übertragen. </summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf die asynchrone Nachrichtenübertragung verweist. </returns>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, die über den Ausgabekanal gesendet wird. </param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat. </param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Sendevorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Nachricht innerhalb eines angegebenen Zeitintervalls an das Ziel des Ausgabekanals zu übertragen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</returns>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, die über den Ausgabekanal gesendet wird.</param>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Sendevorgangs erhält.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Sendevorgang zugeordnete Zustandsinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um eine Nachricht an das Ziel des Ausgabekanals zu übertragen. </summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" />-Methode zurückgegeben wurde. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress">
      <summary>Ruft das Ziel des Diensts ab, an den über den Ausgabekanal Nachrichten gesendet werden. </summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointAddress" /> des Dienst, an den der Ausgabekanal Nachrichten sendet. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)">
      <summary>Überträgt eine Nachricht an das Ziel des Ausgabekanals. </summary>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, die über den Ausgabekanal gesendet wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Sendet eine Nachricht innerhalb eines angegebenen Zeitintervalls über den aktuellen Ausgabekanal.</summary>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, die über den Ausgabekanal gesendet wird.</param>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die angibt, wie viel Zeit für den Sendevorgang bleibt, bevor ein Timeout eintritt.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IOutputChannel.Via">
      <summary>Ruft den URI mit der Transportadresse ab, an die Nachrichten über den Ausgabekanal gesendet werden.</summary>
      <returns>Der <see cref="T:System.Uri" /> mit der Transportadresse, an die Nachrichten über den Ausgabekanal gesendet werden.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSession">
      <summary>Definiert die Schnittstelle für die Sitzung, die auf der Sendeseite einer unidirektionalen Kommunikation zwischen Messagingendpunkten implementiert ist. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IOutputSessionChannel">
      <summary>Definiert die Schnittstelle, die einen Ausgabekanal mit einer Sitzung verknüpft.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestChannel">
      <summary>Definiert den Vertrag, den ein Kanal implementieren muss, um sich auf der Anforderungsseite einer Anforderung-Antwort-Kommunikation zwischen Messagingendpunkten zu befinden. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Anforderungsnachricht an die Antwortseite eines Anforderung-Antwort-Nachrichtenaustausches zu übertragen. </summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf die asynchrone Nachrichtenübertragung verweist. </returns>
      <param name="message">Die zu übertragende Anforderungsnachricht (<see cref="T:System.ServiceModel.Channels.Message" />).</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs zur Übertragung einer Anforderungsnachricht empfängt.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt mit Zustandsinformationen, die dem asynchronen Vorgang zur Übertragung einer Anforderungsnachricht zugeordnet sind.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet einen asynchronen Vorgang, um eine Anforderungsnachricht innerhalb eines angegebenen Zeitintervalls an die Antwortseite eines Anforderung-Antwort-Nachrichtenaustausches zu übertragen.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf die asynchrone Nachrichtenübertragung verweist. </returns>
      <param name="message">Die zu übertragende Anforderungsnachricht (<see cref="T:System.ServiceModel.Channels.Message" />).</param>
      <param name="timeout">Die <see cref="T:System.TimeSpan" />, die das Zeitintervall angibt, in der eine Antwort empfangen werden muss. (Informationen über die Standardwerte finden Sie in den Hinweisen.)</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs zur Übertragung einer Anforderungsnachricht empfängt.</param>
      <param name="state">Ein durch die Anwendung festgelegtes Objekt mit Zustandsinformationen, die dem asynchronen Vorgang zur Übertragung einer Anforderungsnachricht zugeordnet sind.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)">
      <summary>Beendet einen asynchronen Vorgang, um eine nachrichtenbasierte Antwort auf eine übertragene Anforderung zurückzugeben. </summary>
      <returns>Die als Antwort auf die Anforderung empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf der <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />-Methode zurückgegeben wurde. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress">
      <summary>Ruft die Remoteadresse ab, an die der Anforderungskanal Nachrichten sendet. </summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointAddress" />, an die der Anforderungskanal Nachrichten sendet. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)">
      <summary>Sendet eine nachrichtenbasierte Anforderung und gibt die korrelierte nachrichtenbasierte Antwort zurück. </summary>
      <returns>Die als Antwort auf die Anforderung empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="message">Die zu übertragende Anforderungsnachricht (<see cref="T:System.ServiceModel.Channels.Message" />).</param>
    </member>
    <member name="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Sendet eine nachrichtenbasierte Anforderung und gibt die korrelierte nachrichtenbasierte Antwort innerhalb eines angegebenen Zeitintervalls zurück.</summary>
      <returns>Die als Antwort auf die Anforderung empfangene <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <param name="message">Die zu übertragende Anforderungsnachricht (<see cref="T:System.ServiceModel.Channels.Message" />).</param>
      <param name="timeout">Die <see cref="T:System.TimeSpan" />, die das Zeitintervall angibt, in der eine Antwort empfangen werden muss.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.IRequestChannel.Via">
      <summary>Ruft die Transportadresse ab, an die die Anforderung gesendet wird.</summary>
      <returns>Der <see cref="T:System.Uri" /> mit der Transportadresse, an die die Nachricht gesendet wird.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.IRequestSessionChannel">
      <summary>Definiert die Schnittstelle, um einen Anforderungskanal mit einer Sitzung zu verknüpfen.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.ISession">
      <summary>Definiert die Schnittstelle für einen gemeinsamen Kontext zwischen Teilnehmern, die Nachrichten austauschen, indem eine ID für die Kommunikationssitzung bereitgestellt wird. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ISession.Id">
      <summary>Ruft die ID ab, die die Sitzung eindeutig kennzeichnet. </summary>
      <returns>Die ID, die die Sitzung eindeutig kennzeichnet. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ISessionChannel`1">
      <summary>Definiert die Schnittstelle, die einen Kanal mit einem bestimmten Sitzungstyp verknüpft.</summary>
      <typeparam name="TSession">Der <see cref="T:System.ServiceModel.Channels.ISession" />-Typ, der dem Kanal zugeordnet ist.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ISessionChannel`1.Session">
      <summary>Ruft den Sitzungstyp ab, der dem Kanal zugeordnet ist.</summary>
      <returns>Der generische Parameter <paramref name="TSession" />, der die mit dem Kanal verknüpfte Sitzung definiert.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.LocalClientSecuritySettings">
      <summary>Gibt die lokalen Clientsicherheitseinstellungen an.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.LocalClientSecuritySettings.Clone">
      <summary>Erstellt eine neue Instanz dieser Klasse, die eine Kopie der aktuellen Instanz ist.</summary>
      <returns>Eine neue geklonte Instanz von <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.MaxClockSkew">
      <summary>Ruft die maximal zulässige Zeitdifferenz zwischen den Systemuhren der beiden kommunizierenden Teilnehmer ab oder legt sie fest. </summary>
      <returns>Eine <see cref="T:System.TimeSpan" />, die die maximal zulässige Zeitdifferenz zwischen den Systemuhren der beiden kommunizierenden Teilnehmer darstellt. Der Standardwert beträgt 5 Minuten.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Eigenschaftswert ist kleiner als 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow">
      <summary>Ruft die maximale Gültigkeitsdauer einer Nachrichtennonce ab oder legt sie fest.</summary>
      <returns>Eine <see cref="T:System.TimeSpan" />, die die maximale Gültigkeitsdauer einer Nachrichtennonce darstellt. Der Standardwert ist fünf Minuten.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Eigenschaftswert ist kleiner als 0.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.LocalClientSecuritySettings.TimestampValidityDuration">
      <summary>Ruft die maximale Gültigkeitsdauer der Nachrichten ab, wenn sie vom Client gesendet wurden, oder legt sie fest. Wenn eine Nachricht nach dieser Zeitspanne vom Dienst empfangen wird, sollte die Nachricht verworfen werden.</summary>
      <returns>Eine <see cref="T:System.TimeSpan" />, die die maximale Gültigkeitsdauer der Nachrichten darstellt, wenn sie vom Client gesendet wurden. Der Standardwert ist fünf Minuten.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Eigenschaftswert ist kleiner als 0.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Message">
      <summary>Stellt die Kommunikationseinheit zwischen Endpunkten in einer verteilten Umgebung dar. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.Message" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.Close">
      <summary>Schließt die <see cref="T:System.ServiceModel.Channels.Message" /> und gibt alle Ressourcen frei. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)">
      <summary>Erstellt eine Nachricht, die eine Version und eine Aktion enthält.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.Message" />-Objekt für die erstellte Nachricht. </returns>
      <param name="version">Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt, das die für die Nachricht zu verwendende SOAP-Version angibt.</param>
      <param name="action">Eine Beschreibung, wie die Nachricht zu verarbeiten ist.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> oder <paramref name="action" /> ist NULL. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)">
      <summary>Erstellt eine Nachricht mit der angegebenen Version, Aktion und dem angegebenen Text. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.Message" />-Objekt für die erstellte Nachricht. </returns>
      <param name="version">Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt, das die für die Nachricht zu verwendende SOAP-Version angibt. </param>
      <param name="action">Eine Beschreibung, wie die Nachricht zu verarbeiten ist. </param>
      <param name="body">Der Text der Nachricht.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> oder <paramref name="body" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Erstellt eine Nachricht unter Verwendung der angegebenen Version, der Aktion, des Nachrichtentextes und des Serialisierungsprogramms.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.Message" />-Objekt für die erstellte Nachricht. </returns>
      <param name="version">Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt, das die für die Nachricht zu verwendende SOAP-Version angibt. </param>
      <param name="action">Eine Beschreibung, wie die Nachricht zu verarbeiten ist. </param>
      <param name="body">Der Text der Nachricht. </param>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="fault" /> oder <paramref name="action" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)">
      <summary>Erstellt eine Nachricht mit einem Text, der aus einem Array von Bytes besteht. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.Message" />-Objekt für die erstellte Nachricht. </returns>
      <param name="version">Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt, das die für die Nachricht zu verwendende SOAP-Version angibt. </param>
      <param name="action">Eine Beschreibung, wie die Nachricht zu verarbeiten ist. </param>
      <param name="body">Ein <see cref="T:System.ServiceModel.Channels.BodyWriter" /> vom Typ Byte. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> oder <paramref name="body" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)">
      <summary>Erstellt eine Nachricht mit der angegebenen Version, Aktion und dem angegebenen Text. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.Message" />-Objekt für die erstellte Nachricht. </returns>
      <param name="version">Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt, das die für die Nachricht zu verwendende SOAP-Version angibt. </param>
      <param name="action">Eine Beschreibung, wie die Nachricht zu verarbeiten ist. </param>
      <param name="body">Der Text der Nachricht.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> oder <paramref name="body" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)">
      <summary>Erstellt eine Nachricht mit dem angegebenen Reader, der angegebenen Aktion und Version. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.Message" />-Objekt für die erstellte Nachricht. </returns>
      <param name="version">Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt, das die für die Nachricht zu verwendende SOAP-Version angibt. </param>
      <param name="action">Eine Beschreibung, wie die Nachricht zu verarbeiten ist. </param>
      <param name="body">Das <see cref="T:System.Xml.XmlReader" />-Objekt, das zum Lesen der SOAP-Nachricht verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" />, <paramref name="action" /> oder <paramref name="body" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1">
      <summary>Ruft den Text dieser <see cref="T:System.ServiceModel.Channels.Message" />-Instanz ab.</summary>
      <returns>Ein Objekt des Typs <paramref name="T" />, das den Text dieser Nachricht enthält.</returns>
      <typeparam name="T">Der Text der Nachricht.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Ruft den Text dieser <see cref="T:System.ServiceModel.Channels.Message" /> mit dem angegebenen Serialisierungsprogramm ab.</summary>
      <returns>Ein Objekt des Typs <paramref name="T" />, das den Text dieser Nachricht enthält.</returns>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">Der Text der Nachricht.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializer" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)">
      <summary>Ruft die Attribute des Nachrichtentexts ab.</summary>
      <returns>Die Attribute des Nachrichtentexts.</returns>
      <param name="localName">Der lokale Name des XML-Knotens.Der Name des Elements, das diesem Member entspricht. Diese Zeichenfolge muss ein gültiger XML-Elementname sein.</param>
      <param name="ns">Der Namespace, zu dem dieses XML-Element gehört.Der Namespace-URI des Elements, das diesem Member entspricht. Das System überprüft keine URIs außer den Transportadressen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> oder <paramref name="ns" /> ist NULL. </exception>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht ist geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Nachricht wurde kopiert, gelesen oder geschrieben.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents">
      <summary>Ruft den XML-Wörterbuchreader ab, der auf den Textinhalt dieser Nachricht zugreift.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht ist geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Nachricht ist leer oder wurde kopiert, gelesen oder geschrieben.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Headers">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Header der Nachricht ab. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageHeaders" />-Objekt, das die Header der Nachricht darstellt. </returns>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht wurde freigegeben.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsDisposed">
      <summary>Gibt einen Wert zurück, der angibt, ob die <see cref="T:System.ServiceModel.Channels.Message" /> freigegeben ist. </summary>
      <returns>true, wenn die Nachricht freigegeben ist, andernfalls false. </returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsEmpty">
      <summary>Gibt einen Wert zurück, der angibt, ob die <see cref="T:System.ServiceModel.Channels.Message" /> leer ist. </summary>
      <returns>true, wenn die Nachricht leer ist, andernfalls false. </returns>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht wurde freigegeben.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.IsFault">
      <summary>Ruft einen Wert ab, der angibt, ob diese Nachricht SOAP-Fehler generiert.</summary>
      <returns>true, wenn diese Nachricht SOAP-Fehler generiert, andernfalls false.</returns>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht wurde freigegeben.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)">
      <summary>Wird aufgerufen, wenn der Nachrichtentext in eine Zeichenfolge konvertiert wird.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, mit dem der Nachrichtentext in eine Zeichenfolge konvertiert wird. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnClose">
      <summary>Wird aufgerufen, wenn die Nachricht geschlossen wird.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)">
      <summary>Wird aufgerufen, wenn die Attribute des Nachrichtentexts abgerufen werden.</summary>
      <returns>Die Attribute des Nachrichtentexts.</returns>
      <param name="localName">Der lokale Name des XML-Knotens.Der Name des Elements, das diesem Member entspricht. Diese Zeichenfolge muss ein gültiger XML-Elementname sein.</param>
      <param name="ns">Der Namespace, zu dem dieses XML-Element gehört.Der Namespace-URI des Elements, das diesem Member entspricht. Das System überprüft keine URIs außer den Transportadressen.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents">
      <summary>Wird aufgerufen, wenn ein XML-Wörterbuchreader, der auf den Textinhalt dieser Nachricht zugreifen kann, abgerufen werden kann.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Wird aufgerufen, wenn der Nachrichtentext in eine XML-Datei geschrieben wird.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, mit dem dieser Nachrichtentext in eine XML-Datei geschrieben wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Wird aufgerufen, wenn die gesamte Nachricht in eine XML-Datei geschrieben wird.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, mit dem diese Nachricht in eine XML-Datei geschrieben wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Wird aufgerufen, wenn der Starttext in eine XML-Datei geschrieben wird.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, mit dem der Starttext in eine XML-Datei geschrieben wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Wird aufgerufen, wenn der Startumschlag in eine XML-Datei geschrieben wird.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, mit dem der Startumschlag in eine XML-Datei geschrieben wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)">
      <summary>Wird aufgerufen, wenn der Startheader in eine XML-Datei geschrieben wird.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />, mit dem der Startheader in eine XML-Datei geschrieben wird.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Properties">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Satz von Anmerkungen auf Verarbeitungsebene für die Nachricht ab. </summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.MessageProperties" /> mit einem Satz von Anmerkungen auf Verarbeitungsebene für die Nachricht.</returns>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht wurde freigegeben.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.State">
      <summary>Ruft den aktuellen Status dieser <see cref="T:System.ServiceModel.Channels.Message" /> ab.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageState" /> mit dem aktuellen Status dieser <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose">
      <summary>Schließt alle Ressourcen, die von dieser Nachricht verwendet werden. Diese Methode kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die die aktuelle <see cref="T:System.ServiceModel.Channels.Message" /> darstellt. </summary>
      <returns>Die aktuelle <see cref="T:System.ServiceModel.Channels.Message" />. </returns>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht wurde freigegeben.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Message.Version">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die SOAP- und WS-Adressierungsversionen der Nachricht ab. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt, das die von der Nachricht verwendeten SOAP- und WS-Adressierungsversionen darstellt. </returns>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht wurde freigegeben.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)">
      <summary>Schreibt das Textelement mit dem angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, mit dem das Textelement geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)">
      <summary>Serialisiert den Nachrichtentext mit dem angegebenen <see cref="T:System.Xml.XmlWriter" />. </summary>
      <param name="writer">Das <see cref="T:System.Xml.XmlWriter" />-Objekt, mit dem der Nachrichtentext geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null. </exception>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht ist freigegeben. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Serialisiert den Textinhalt mit dem angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, mit dem das Textelement geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " /> ist null.</exception>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht ist geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Nachricht wurde kopiert, gelesen oder geschrieben.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)">
      <summary>Serialisiert die gesamte Nachricht mit dem angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das verwendet werden soll, um die Nachricht zu schreiben.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null. </exception>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht ist geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Nachricht wurde kopiert, gelesen oder geschrieben.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)">
      <summary>Serialisiert die gesamte Nachricht mit dem angegebenen <see cref="T:System.Xml.XmlWriter" />. </summary>
      <param name="writer">Das <see cref="T:System.Xml.XmlWriter" />-Objekt, mit dem der Nachrichtentext geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null. </exception>
      <exception cref="T:System.ObjectDisposedException">Die Nachricht ist geschlossen.</exception>
      <exception cref="T:System.InvalidOperationException">Die Nachricht wurde kopiert, gelesen oder geschrieben.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)">
      <summary>Serialisiert den Starttext mit dem angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, mit dem der Starttext geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)">
      <summary>Serialisiert den Starttext mit dem angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Das <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, mit dem der Starttext der Nachricht geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> ist null. </exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)">
      <summary>Serialisiert den Startumschlag mit dem angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" />. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, mit dem der Startumschlag geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer " /> ist null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageBuffer">
      <summary>Stellt einen Speicherpuffer dar, in dem eine ganze Nachricht zum späteren Gebrauch gespeichert werden kann.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageBuffer" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
      <summary>Ruft die ungefähre Anzahl von Byte ab, die von diesem <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> verwendet wird. </summary>
      <returns>Ruft die ungefähre Anzahl von Byte ab, die von diesem <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> verwendet wird. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.Close">
      <summary>Beendet die Arbeit mit dem Puffer.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
      <summary>Gibt eine Kopie der ursprünglichen Nachricht zurück.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
      <summary>Ruft den Typ des in diesem Puffer gespeicherten Meldungsinhalts ab.</summary>
      <returns>Der Typ des in diesem Puffer gespeicherten Meldungsinhalts.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
      <summary>Gibt die vom <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei. Diese Methode kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
      <summary>Schreibt den gesamten Inhalt dieses Puffers in den angegebenen E/A-Stream.</summary>
      <param name="stream">Ein E/A-Stream, in den der gesamte Inhalt dieses Puffers geschrieben wird.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoder">
      <summary>Der Encoder ist die Komponente, die zum Schreiben von Nachrichten in einen Stream und zum Lesen von Nachrichten aus einem Stream verwendet wird.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageEncoder" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den vom Encoder verwendeten MIME-Inhaltstyp ab.</summary>
      <returns>Der Inhaltstyp, der vom Nachrichtenencoder unterstützt wird.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
      <summary>Gibt ggf. ein angefordertes typisiertes Objekt von der entsprechenden Schicht im Kanalstapel zurück.</summary>
      <returns>Das von <paramref name="T " /> angeforderte typisierte Objekt, falls vorhanden, oder NULL, falls nicht vorhanden.</returns>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein angegebener Content-Type-Wert auf Nachrichtenebene vom Nachrichtenencoder unterstützt wird.</summary>
      <returns>true, wenn der angegebene Content-Type auf Nachrichtenebene unterstützt wird, andernfalls false.</returns>
      <param name="contentType">Der Content-Type auf Nachrichtenebene, der getestet wird.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den vom Encoder verwendeten Medientypwert ab.</summary>
      <returns>Der Medientyp, der vom Nachrichten-Encoder unterstützt wird.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den vom Encoder verwendeten Nachrichtenversionswert ab.</summary>
      <returns>Die vom Encoder verwendete <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
      <summary>Liest beim Überschreiben in einer abgeleiteten Klasse eine Nachricht aus einem angegebenen Puffer.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.Message" />, die aus dem angegebenen Puffer gelesen wird.</returns>
      <param name="buffer">Ein <see cref="T:System.ArraySegment`1" /> des Typs <see cref="T:System.Byte" />, das den Puffer bereitstellt, aus dem die Nachricht deserialisiert wird.</param>
      <param name="bufferManager">Der <see cref="T:System.ServiceModel.Channels.BufferManager" />, der den Puffer verwaltet, aus dem die Nachricht deserialisiert wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
      <summary>Liest beim Überschreiben in einer abgeleiteten Klasse eine Nachricht aus einem angegebenen Stream.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.Message" />, die aus dem angegebenen Stream gelesen wird.</returns>
      <param name="buffer">Ein <see cref="T:System.ArraySegment`1" /> des Typs <see cref="T:System.Byte" />, das den Puffer bereitstellt, aus dem die Nachricht deserialisiert wird.</param>
      <param name="bufferManager">Der <see cref="T:System.ServiceModel.Channels.BufferManager" />, der den Puffer verwaltet, aus dem die Nachricht deserialisiert wird.</param>
      <param name="contentType">Der MIME (Multipurpose Internet Mail Extensions)-Content-Type auf Nachrichtenebene.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
      <summary>Liest beim Überschreiben in einer abgeleiteten Klasse eine Nachricht aus einem angegebenen Stream.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.Message" />, die aus dem angegebenen Stream gelesen wird.</returns>
      <param name="stream">Das <see cref="T:System.IO.Stream" />-Objekt, aus dem die Nachricht gelesen wird.</param>
      <param name="maxSizeOfHeaders">Die maximal zulässige Headergröße, die aus der Nachricht gelesen werden kann.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
      <summary>Liest beim Überschreiben in einer abgeleiteten Klasse eine Nachricht aus einem angegebenen Stream.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.Message" />, die aus dem angegebenen Stream gelesen wird.</returns>
      <param name="stream">Das <see cref="T:System.IO.Stream" />-Objekt, aus dem die Nachricht gelesen wird.</param>
      <param name="maxSizeOfHeaders">Die maximal zulässige Headergröße, die aus der Nachricht gelesen werden kann.</param>
      <param name="contentType">Der MIME (Multipurpose Internet Mail Extensions)-Content-Type auf Nachrichtenebene.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.ToString">
      <summary>Gibt den vom Nachrichtenencoder verwendeten Inhaltstyp zurück.</summary>
      <returns>Der vom Nachrichtenencoder verwendete Inhaltstyp.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
      <summary>Schreibt eine Nachricht, die kleiner als eine angegebene Größe ist, in einen Bytearraypuffer.</summary>
      <returns>Ein <see cref="T:System.ArraySegment`1" /> vom Typ byte, das den Puffer bereitstellt, in dem die Nachricht serialisiert wird.</returns>
      <param name="message">Die in den Nachrichtenpuffer zu schreibende <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="maxMessageSize">Die maximal zulässige Nachrichtengröße, die geschrieben werden kann.</param>
      <param name="bufferManager">Der <see cref="T:System.ServiceModel.Channels.BufferManager" />, der den Puffer verwaltet, in den die Nachricht geschrieben wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse eine Nachricht, die kleiner als eine angegebene Größe ist, am angegebenen Offset in einen Bytearraypuffer.</summary>
      <returns>Ein <see cref="T:System.ArraySegment`1" /> vom Typ byte, das den Puffer bereitstellt, in dem die Nachricht serialisiert wird.</returns>
      <param name="message">Die in den Nachrichtenpuffer zu schreibende <see cref="T:System.ServiceModel.Channels.Message" />.</param>
      <param name="maxMessageSize">Die maximal zulässige Nachrichtengröße, die geschrieben werden kann.</param>
      <param name="bufferManager">Der <see cref="T:System.ServiceModel.Channels.BufferManager" />, der den Puffer verwaltet, in den die Nachricht geschrieben wird.</param>
      <param name="messageOffset">Der Offset des Segments, der am Start des Bytearrays beginnt, das den Puffer bereitstellt.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse eine Nachricht in einen angegebenen Stream.</summary>
      <param name="message">Die <see cref="T:System.ServiceModel.Channels.Message" />, die in den <paramref name="stream" /> geschrieben werden soll.</param>
      <param name="stream">Das <see cref="T:System.IO.Stream" />-Objekt, in das die <paramref name="message" /> geschrieben wird.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncoderFactory">
      <summary>Eine abstrakte Basisklasse, die die Factory zum Erzeugen von Nachrichtenencodern darstellt, die Nachrichten mit unterschiedlichen Codierungen aus einem Stream lesen und in einen Stream schreiben können.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder">
      <summary>Gibt einen Nachrichtenencoder zurück, mit dem Nachrichten in sitzungsbasierten Austauschprozessen korreliert werden können.</summary>
      <returns>Der <see cref="T:System.ServiceModel.Channels.MessageEncoder" />, der in sitzungsbasierten Austauschprozessen von Nachrichten verwendet wird.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den von der Factory erzeugten Nachrichtenencoder ab.</summary>
      <returns>Die von der Factory verwendete <see cref="T:System.ServiceModel.Channels.MessageEncoder" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Nachrichtenversion ab, die von den Encodern verwendet wird, die die Factory zum Codieren von Nachrichten erzeugt.</summary>
      <returns>Die von der Factory verwendete <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
      <summary>Das Bindungselement, das die Nachrichtenversion angibt, die zum Codieren von Nachrichten verwendet wird.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />-Klasse, die aus einem vorhandenen Element initialisiert wird.</summary>
      <param name="elementToBeCloned">Das <see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" />, das geklont werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Erstellt beim Überschreiben in einer abgeleiteten Klasse eine Factory zum Erzeugen von Nachrichtenencodern.</summary>
      <returns>Die zum Erzeugen von Nachrichtenencodern verwendete <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gibt ggf. das angeforderte typisierte Objekt von der entsprechenden Schicht im Kanalstapel zurück.</summary>
      <returns>Das von <paramref name="T" /> angeforderte typisierte Objekt, falls vorhanden, oder NULL, falls nicht vorhanden.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> für das aktuelle Bindungselement.</param>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
      <summary>Beim Überschreiben in einer abgeleiteten Klasse wird die Nachrichtenversion abgerufen oder festgelegt, die durch die Nachrichtenencoder verarbeitet werden kann, die von der Factory erzeugt wurden.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die von den durch die Factory erzeugten Encodern verwendet wird.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageFault">
      <summary>Stellt eine speicherinterne Darstellung eines SOAP-Fehlers dar, die an <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> weitergegeben werden kann, um eine Nachricht zu erstellen, die einen Fehler enthält. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.#ctor">
      <summary>Initialisiert beim Aufruf in einer abgeleiteten Klasse eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageFault" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Actor">
      <summary>Ruft den Wert das Aktors ab bzw. legt diesen fest.</summary>
      <returns>Der Wert des Aktors.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Code">
      <summary>Ruft den SOAP-Fehlercode ab. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.FaultCode" /> mit dem SOAP-Fehlercode.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.CreateFault(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Gibt ein neues <see cref="T:System.ServiceModel.Channels.MessageFault" />-Objekt zurück, das die angegebene <see cref="T:System.ServiceModel.Channels.Message" /> und die angegebene maximale Puffergröße für den Nachrichtenpuffer verwendet.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageFault" />-Objekt.</returns>
      <param name="message">Die angegebene <see cref="T:System.ServiceModel.Channels.Message" />, die zum Erstellen des <see cref="T:System.ServiceModel.Channels.MessageFault" />-Objekts verwendet werden soll.</param>
      <param name="maxBufferSize">Die angegebene maximale Puffergröße für den Nachrichtenpuffer.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1">
      <summary>Gibt das Detailobjekt des Nachrichtenfehlers zurück.</summary>
      <returns>Das Detailobjekt des Nachrichtenfehlers.</returns>
      <typeparam name="T">Typ des Detailobjekts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetDetail``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Gibt das Detailobjekt zurück, das den angegebenen <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> verwendet.</summary>
      <returns>Das im <see cref="T:System.ServiceModel.Channels.MessageFault" /> enthaltene Detailobjekt.</returns>
      <param name="serializer">Der <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, der für die Deserialisierung des Detailobjekts verwendet werden soll. </param>
      <typeparam name="T">Der Typ des Detailobjekts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.GetReaderAtDetailContents">
      <summary>Gibt ein <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt zurück, das sich auf dem Detailobjekt des <see cref="T:System.ServiceModel.Channels.MessageFault" /> befindet.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt, das sich auf dem Detailobjekt des <see cref="T:System.ServiceModel.Channels.MessageFault" /> befindet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.HasDetail">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.ServiceModel.Channels.MessageFault" /> über ein Detailobjekt verfügt.</summary>
      <returns>true, wenn <see cref="T:System.ServiceModel.Channels.MessageFault" /> über ein Detailobjekt verfügt, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Node">
      <summary>Ruft den SOAP-Knoten ab.</summary>
      <returns>Der SOAP-Knoten, der Informationen darüber enthält, welcher SOAP-Knoten in einem Nachrichtenpfad den Fehler verursacht hat.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnGetReaderAtDetailContents">
      <summary>Gibt bei Aufruf in einer abgeleiteten Klasse ein <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt zurück, das sich auf dem Detailobjekt des <see cref="T:System.ServiceModel.Channels.MessageFault" /> befindet.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt, das sich auf dem Detailobjekt des <see cref="T:System.ServiceModel.Channels.MessageFault" /> befindet.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Wird vor dem Schreiben der Detailinhalte aufgerufen.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um das Detailelement zu schreiben.</param>
      <param name="version">Die Version des zu schreibenden SOAP-Umschlags.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteDetailContents(System.Xml.XmlDictionaryWriter)">
      <summary>Schreibt bei Überschreibung in einer nicht abstrakten abgeleiteten Klasse die Inhalte des Detailelements. </summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um das Detailelement zu schreiben.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageFault.OnWriteStartDetail(System.Xml.XmlDictionaryWriter,System.ServiceModel.EnvelopeVersion)">
      <summary>Schreibt das Startelement mithilfe des angegebenen <see cref="T:System.Xml.XmlDictionaryWriter" /> und der SOAP-Umschlagversion.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, der verwendet wird, um das Detailelement zu schreiben.</param>
      <param name="version">Die Version des zu schreibenden SOAP-Umschlags.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageFault.Reason">
      <summary>Ruft eine Textbeschreibung eines SOAP-Fehlers ab. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.FaultReason" />, der eine Textbeschreibung eines SOAP-Fehlers enthält.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeader">
      <summary>Stellt den Inhalt eines SOAP-Headers dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageHeader" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Actor">
      <summary>Ruft den gewünschten Empfänger des Nachrichtenheaders ab oder legt diesen fest.</summary>
      <returns>Der gewünschte Empfänger des Nachrichtenheaders. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object)">
      <summary>Erstellt einen neuen Nachrichtenheader mit den angegebenen Daten.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des Headers, der erstellt werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean)">
      <summary>Erstellt einen neuen Nachrichtenheader mit den angegebenen Daten.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des Headers, der erstellt werden soll.</param>
      <param name="mustUnderstand">Ein Wert, der angibt, ob der Header verstanden werden muss.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String)">
      <summary>Erstellt einen neuen Nachrichtenheader mit den angegebenen Daten.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des Headers, der erstellt werden soll.</param>
      <param name="mustUnderstand">Ein Wert, der angibt, ob der Header verstanden werden muss.</param>
      <param name="actor">Der gewünschte Empfänger des Nachrichtenheaders.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Boolean,System.String,System.Boolean)">
      <summary>Erstellt einen neuen Nachrichtenheader mit den angegebenen Daten.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des Headers, der erstellt werden soll.</param>
      <param name="mustUnderstand">Ein Wert, der angibt, ob der Header verstanden werden muss.</param>
      <param name="actor">Der gewünschte Empfänger des Nachrichtenheaders.</param>
      <param name="relay">Ein Wert, der angibt, ob der Header weitergegeben werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Erstellt einen Header aus einem Objekt, das mit dem XmlFormatter serialisiert werden soll. </summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des Headers, der erstellt werden soll.</param>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean)">
      <summary>Erstellt einen neuen Nachrichtenheader mit den angegebenen Daten.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des Headers, der erstellt werden soll.</param>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Ein Wert, der angibt, ob der Header verstanden werden muss.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String)">
      <summary>Erstellt einen neuen Nachrichtenheader mit den angegebenen Daten.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des Headers, der erstellt werden soll.</param>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Ein Wert, der angibt, ob der Header verstanden werden muss.</param>
      <param name="actor">Der gewünschte Empfänger des Nachrichtenheaders.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.CreateHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer,System.Boolean,System.String,System.Boolean)">
      <summary>Erstellt einen neuen Nachrichtenheader mit den angegebenen Daten.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageHeader" />.</returns>
      <param name="name">Der lokale Name des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="value">Der Inhalt des Headers, der erstellt werden soll.</param>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <param name="mustUnderstand">Ein Wert, der angibt, ob der Header verstanden werden muss.</param>
      <param name="actor">Der gewünschte Empfänger des Nachrichtenheaders.</param>
      <param name="relay">Ein Wert, der angibt, ob der Header weitergegeben werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.IsMessageVersionSupported(System.ServiceModel.Channels.MessageVersion)">
      <summary>Überprüft, ob die angegebene Nachrichtenversion unterstützt wird.</summary>
      <returns>true, wenn die angegebene Nachrichtenversion unterstützt wird, andernfalls false.</returns>
      <param name="messageVersion">Enthält Informationen über die SOAP-Version, die einer Nachricht und deren Austausch zugeordnet ist.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.IsReferenceParameter">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Nachrichtenheader Verweisparameter eines Endpunktverweises enthält.</summary>
      <returns>true, wenn dieser Nachrichtenheader Verweisparameter eines Endpunktverweises enthält, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.MustUnderstand">
      <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob der Header gemäß der SOAP 1.1/1.2-Spezifikation verstanden werden muss. </summary>
      <returns>true, wenn der Header verstanden werden muss, andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Wird aufgerufen, wenn der Headerinhalt mit dem angegebenen XML-Writer serialisiert wird. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Enthält Informationen über die SOAP-Version, die einer Nachricht und deren Austausch zugeordnet ist.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.OnWriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Wird aufgerufen, wenn der Startheader mit dem angegebenen XML-Writer serialisiert wird. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Enthält Informationen über die SOAP-Version, die einer Nachricht und deren Austausch zugeordnet ist.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeader.Relay">
      <summary>Ruft einen Wert ab, der angibt, ob der Header weitergegeben werden soll.</summary>
      <returns>true, wenn der Header weitergegeben werden soll, andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.ToString">
      <summary>Konvertiert diesen Nachrichtenheader in eine Zeichenfolge.</summary>
      <returns>Der Nachrichtenheader.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serialisiert den Header mit dem angegebenen XML-Writer. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Enthält Informationen über die SOAP-Version, die einer Nachricht und deren Austausch zugeordnet ist.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeader(System.Xml.XmlWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serialisiert den Header mit dem angegebenen XML-Writer. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="messageVersion">Enthält Informationen über die SOAP-Version, die einer Nachricht und deren Austausch zugeordnet ist.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderAttributes(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serialisiert den Headerinhalt mit dem angegebenen XML-Writer. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Enthält Informationen über die SOAP-Version, die einer Nachricht und deren Austausch zugeordnet ist.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteHeaderContents(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serialisiert den Headerinhalt mit dem angegebenen XML-Writer. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="messageVersion">Enthält Informationen über die SOAP-Version, die einer Nachricht und deren Austausch zugeordnet ist.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeader.WriteStartHeader(System.Xml.XmlDictionaryWriter,System.ServiceModel.Channels.MessageVersion)">
      <summary>Serialisiert den Startheader mit dem angegebenen XML-Writer. </summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
      <param name="messageVersion">Enthält Informationen über die SOAP-Version, die einer Nachricht und deren Austausch zugeordnet ist.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaderInfo">
      <summary>Stellt Systeminformationen hinsichtlich eines SOAP-Nachrichtenheaders dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaderInfo.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Actor">
      <summary>Ruft den gewünschten Empfänger des Nachrichtenheaders ab bzw. legt diesen fest.</summary>
      <returns>Ein URI, der den gewünschten Empfänger des Nachrichtenheaders angibt.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.IsReferenceParameter">
      <summary>Ruft einen Wert ab, der angibt, ob der Nachrichtenheader Verweisparameter eines Endpunktverweises darstellt.</summary>
      <returns>true, wenn der Nachrichtenheader Verweisparameter eines Endpunktverweises darstellt, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.MustUnderstand">
      <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob die Verarbeitung des Nachrichtenheaders obligatorisch oder optional ist.</summary>
      <returns>true, wenn die Verarbeitung des Nachrichtenheaders obligatorisch ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Name">
      <summary>Ruft den Namen des Nachrichtenheaders ab.</summary>
      <returns>Der Name des Nachrichtenheaders.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Namespace">
      <summary>Ruft den Namespace des Nachrichtenheaders ab.</summary>
      <returns>Der Namespace des Nachrichtenheaders.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaderInfo.Relay">
      <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob der Nachrichtenheader weitergeleitet werden kann.</summary>
      <returns>true, wenn der Nachrichtenheader weitergeleitet werden kann, andernfalls false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageHeaders">
      <summary>Stellt eine Auflistung von Nachrichtenheadern für eine Nachricht dar. Die Klasse kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageHeaders" />-Klasse mit der angegebenen Auflistung von Nachrichtenheadern.</summary>
      <param name="collection">Eine Auflistung von Nachrichtenheadern.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageHeaders" />-Klasse mit der angegebenen Nachrichtenversion.</summary>
      <param name="version">Die SOAP-Version der Nachricht.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.#ctor(System.ServiceModel.Channels.MessageVersion,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageHeaders" />-Klasse mit der angegebenen Nachrichtenversion und -größe.</summary>
      <param name="version">Die SOAP-Version der Nachricht.</param>
      <param name="initialSize">Die Größe des Headers.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Action">
      <summary>Ruft eine Beschreibung ab bzw. legt fest, wie die Nachricht verarbeitet werden sollte.</summary>
      <returns>Eine Beschreibung, wie die Nachricht zu verarbeiten ist.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Add(System.ServiceModel.Channels.MessageHeader)">
      <summary>Fügt den angegebenen Nachrichtenheader der Auflistung hinzu.</summary>
      <param name="header">Ein Nachrichtenheader, der hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Clear">
      <summary>Entfernt alle Header aus der Auflistung.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.Message,System.Int32)">
      <summary>Kopiert den Headerinhalt am angegebenen Index aus der angegebenen Nachricht in diese Instanz.</summary>
      <param name="message">Eine Nachricht.</param>
      <param name="headerIndex">Der Speicherort des ursprünglichen Nachrichtenheaders, aus dem der Inhalt kopiert wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeaderFrom(System.ServiceModel.Channels.MessageHeaders,System.Int32)">
      <summary>Kopiert den Headerinhalt am angegebenen Index aus der angegebenen Nachrichtenheaderauflistung in diese Instanz.</summary>
      <param name="collection">Ein <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
      <param name="headerIndex">Der Speicherort des ursprünglichen Nachrichtenheaders, aus dem der Inhalt kopiert wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.Message)">
      <summary>Kopiert den Inhalt aller Header aus der angegebenen Nachricht in diese Instanz.</summary>
      <param name="message">Eine Nachricht.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyHeadersFrom(System.ServiceModel.Channels.MessageHeaders)">
      <summary>Kopiert den Inhalt aus der angegebenen Headerauflistung in diese Instanz.</summary>
      <param name="collection">Ein <see cref="T:System.ServiceModel.Channels.MessageHeaders" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.CopyTo(System.ServiceModel.Channels.MessageHeaderInfo[],System.Int32)">
      <summary>Kopiert die Header aus dieser Auflistung in ein Array, wobei an einem bestimmten Index des Arrays begonnen wird. </summary>
      <param name="array">Das eindimensionale Array, das das Ziel der aus dieser Instanz kopierten Nachrichtenheaderobjekte ist. Für das Array muss eine nullbasierte Indizierung verwendet werden. </param>
      <param name="index">Der nullbasierte Index im Array, an dem der Kopiervorgang beginnt. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Count">
      <summary>Ruft die Anzahl der Nachrichtenheader in dieser Auflistung ab.</summary>
      <returns>Die Anzahl der Nachrichtenheader in dieser Auflistung.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.FaultTo">
      <summary>Ruft die Adresse des Knotens ab, an den Fehler gesendet werden sollten, oder legt sie fest.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.EndpointAddress" /> des Knotens, an den Fehler gesendet werden sollten.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String)">
      <summary>Sucht einen Nachrichtenheader in dieser Auflistung anhand des angegebenen LocalName und Namespace-URI des Headerelements.</summary>
      <returns>Der Index des Nachrichtenheaders in dieser Auflistung.</returns>
      <param name="name">Der LocalName des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.FindHeader(System.String,System.String,System.String[])">
      <summary>Sucht einen Nachrichtenheader in dieser Auflistung anhand des angegebenen LocalName, des Namespace-URI und von Aktoren des Headerelements.</summary>
      <returns>Der Index des Nachrichtenheaders in dieser Auflistung.</returns>
      <param name="name">Der LocalName des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="actors">Der gewünschte Empfänger des Nachrichtenheaders.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.From">
      <summary>Ruft die Adresse des Knotens ab, der die Nachricht gesendet hat, oder legt sie fest.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.EndpointAddress" /> des Knotens, der die Nachricht gesendet hat.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchlaufen kann. Diese Methode kann nicht geerbt werden.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32)">
      <summary>Ruft einen Nachrichtenheader an einer bestimmten Position in dieser Auflistung ab.</summary>
      <returns>Ein Nachrichtenheader.</returns>
      <param name="index">Der nullbasierte Index des abzurufenden Headers.</param>
      <typeparam name="T">Der Nachrichtenheader.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.Int32,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Ruft einen Nachrichtenheader an einer bestimmten Position in dieser Auflistung ab.</summary>
      <returns>Ein Nachrichtenheader.</returns>
      <param name="index">Der nullbasierte Index des abzurufenden Headers.</param>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</param>
      <typeparam name="T">Der Nachrichtenheader.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String)">
      <summary>Sucht einen Nachrichtenheader in dieser Auflistung anhand des angegebenen LocalName und Namespace-URI des Headerelements.</summary>
      <returns>Ein Nachrichtenheader.</returns>
      <param name="name">Der LocalName des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <typeparam name="T">Der Nachrichtenheader.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Ruft einen Nachrichtenheader in dieser Auflistung anhand des angegebenen LocalName, des Namespace URI und des Serialisierungsprogramms ab.</summary>
      <returns>Ein Nachrichtenheader.</returns>
      <param name="name">Der LocalName des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="serializer">Ein <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />,</param>
      <typeparam name="T">Der Nachrichtenheader.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetHeader``1(System.String,System.String,System.String[])">
      <summary>Ruft einen Nachrichtenheader in dieser Auflistung anhand des angegebenen LocalName, des Namespace-URI und von Aktoren des Headerelements ab.</summary>
      <returns>Ein Nachrichtenheader.</returns>
      <param name="name">Der LocalName des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
      <param name="actors">Der gewünschte Empfänger des Nachrichtenheaders.</param>
      <typeparam name="T">Der Nachrichtenheader.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.GetReaderAtHeader(System.Int32)">
      <summary>Ruft einen XML-Wörterbuchreader ab, der den Nachrichtenheader am angegebenen Speicherort der Auflistung verwendet.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
      <param name="headerIndex">Der nullbasierte Index des abzurufenden Headers.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood">
      <summary>Überprüft, ob alle mit MustUnderstand markierten Nachrichtenheader ordnungsgemäß interpretiert und verarbeitet werden. </summary>
      <returns>true, wenn die von <paramref name="actors" /> angegebenen Empfänger alle mit MustUnderstand markierten Nachrichtenheader ordnungsgemäß interpretiert und verarbeitet haben, andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.HaveMandatoryHeadersBeenUnderstood(System.String[])">
      <summary>Überprüft, ob die angegebenen Empfänger alle mit MustUnderstand markierten Nachrichtenheader ordnungsgemäß interpretiert und verarbeitet haben. </summary>
      <returns>true, wenn die von <paramref name="actors" /> angegebenen Empfänger alle mit MustUnderstand markierten Nachrichtenheader ordnungsgemäß interpretiert und verarbeitet haben, andernfalls false.</returns>
      <param name="actors">Der gewünschte Empfänger des Nachrichtenheaders.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.Insert(System.Int32,System.ServiceModel.Channels.MessageHeader)">
      <summary>Fügt einen Nachrichtenheader am angegebenen Index in die Auflistung ein.</summary>
      <param name="headerIndex">Der nullbasierte Index, an dem <paramref name="header" /> eingefügt werden soll.</param>
      <param name="header">Ein einzufügender Nachrichtenheader.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.Item(System.Int32)">
      <summary>Ruft einen Header am angegebenen Index ab.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageHeaderInfo" /> in der Auflistung. Wenn <paramref name="index" /> größer oder gleich der Anzahl der Header in der Liste ist, wird null zurückgegeben.</returns>
      <param name="index">Nullbasierter Index der Headerliste.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageId">
      <summary>Ruft die eindeutige ID der Nachricht ab, oder legt diese fest.</summary>
      <returns>Die eindeutige ID der Nachricht.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.MessageVersion">
      <summary>Ruft die SOAP-Version der Nachricht ab.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.RelatesTo">
      <summary>Ruft die IDs von Nachrichten ab, die mit dieser Nachricht verbunden sind.</summary>
      <returns>Die IDs von Nachrichten, die mit dieser Nachricht verbunden sind.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAll(System.String,System.String)">
      <summary>Entfernt alle Header mit dem angegebenen Namen und Namespace aus der Auflistung.</summary>
      <param name="name">Der LocalName des Header-XML-Elements.</param>
      <param name="ns">Der Namespace-URI des Header-XML-Elements.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.RemoveAt(System.Int32)">
      <summary>Entfernt den Nachrichtenheader am angegebenen Index aus der Auflistung.</summary>
      <param name="headerIndex">Der nullbasierte Index des zu entfernenden Headers.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.ReplyTo">
      <summary>Ruft die Adresse des Knotens ab, an den für eine Anforderung eine Antwort gesendet werden soll, oder legt diese Adresse fest.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.EndpointAddress" /> des Knotens, an den für eine Anforderung eine Antwort gesendet werden soll.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.SetAction(System.Xml.XmlDictionaryString)">
      <summary>Legt das Aktionselement des Headers fest.</summary>
      <param name="action">Eine Beschreibung, wie die Nachricht zu verarbeiten ist.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchlaufen kann. Diese Methode kann nicht geerbt werden.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageHeaders.To">
      <summary>Ruft den Zielendpunkt einer Nachricht ab, oder legt ihn fest.</summary>
      <returns>Ein URI, der den Zielendpunkt einer Nachricht enthält.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serialisiert den Header aus dem angegebenen Speicherort mit dem angegebenen XML-Writer. </summary>
      <param name="headerIndex">Der nullbasierte Index des zu serialisierenden Headers.</param>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serialisiert den Header aus dem angegebenen Speicherort mit dem angegebenen XML-Writer. </summary>
      <param name="headerIndex">Der nullbasierte Index des zu serialisierenden Headers.</param>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serialisiert den angegebenen Headerinhalt mit dem angegebenen XML-Writer. </summary>
      <param name="headerIndex">Der nullbasierte Index des zu serialisierenden Headers.</param>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteHeaderContents(System.Int32,System.Xml.XmlWriter)">
      <summary>Serialisiert den angegebenen Headerinhalt mit dem angegebenen XML-Writer. </summary>
      <param name="headerIndex">Der nullbasierte Index des zu serialisierenden Headers.</param>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlDictionaryWriter)">
      <summary>Serialisiert den Startheader mit dem angegebenen XML-Writer. </summary>
      <param name="headerIndex">Der nullbasierte Index des zu serialisierenden Headers.</param>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageHeaders.WriteStartHeader(System.Int32,System.Xml.XmlWriter)">
      <summary>Serialisiert den Startheader mit dem angegebenen XML-Writer. </summary>
      <param name="headerIndex">Der nullbasierte Index des zu serialisierenden Headers.</param>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageProperties">
      <summary>Stellt eine Gruppe von Eigenschaften für eine Nachricht dar. Die Klasse kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageProperties" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.#ctor(System.ServiceModel.Channels.MessageProperties)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.MessageProperties" />-Klasse mit voreingestellten Eigenschaften.</summary>
      <param name="properties">Eine <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Add(System.String,System.Object)">
      <summary>Fügt den <see cref="T:System.ServiceModel.Channels.MessageProperties" /> ein Element mit dem angegebenen Namen und der angegebenen Eigenschaft hinzu. Diese Methode kann nicht geerbt werden.</summary>
      <param name="name">Der Name des hinzuzufügenden Elements.</param>
      <param name="property">Der Wert des hinzuzufügenden Elements. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.AllowOutputBatching">
      <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob diese Nachricht gespeichert werden soll, bevor sie an den Transport übergeben wird. </summary>
      <returns>true, wenn die Stapelung von ausgehenden Nachrichten zulässig ist, andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Clear">
      <summary>Entfernt alle Elemente aus <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Diese Methode kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.ContainsKey(System.String)">
      <summary>Bestimmt, ob die <see cref="T:System.ServiceModel.Channels.MessageProperties" /> einen bestimmten Namen enthalten. Diese Methode kann nicht geerbt werden.</summary>
      <returns>true, wenn <see cref="T:System.ServiceModel.Channels.MessageProperties" /> ein Element mit dem angegebenen <paramref name="name" /> enthält, andernfalls false.</returns>
      <param name="name">Der Name, der in den <see cref="T:System.ServiceModel.Channels.MessageProperties" /> gesucht werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.CopyProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>Kopiert den Inhalt der angegebenen <see cref="T:System.ServiceModel.Channels.MessageProperties" /> in diese Instanz.</summary>
      <param name="properties">Eine <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Count">
      <summary>Ruft die Gesamtanzahl der Eigenschaften in den <see cref="T:System.ServiceModel.Channels.MessageProperties" /> ab.</summary>
      <returns>Die Gesamtanzahl der Eigenschaften in den <see cref="T:System.ServiceModel.Channels.MessageProperties" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Dispose">
      <summary>Gibt sämtliche von <see cref="T:System.ServiceModel.Channels.MessageProperties" /> verwendeten Ressourcen frei. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Encoder">
      <summary>Ruft den Encoder ab, der zum Schreiben von Nachrichten in einen Stream und zum Lesen von Nachrichten aus einem Stream verwendet wird.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.MessageEncoder" />, der zum Schreiben von Nachrichten in einen Stream und zum Lesen von Nachrichten aus einem Stream verwendet wird.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsFixedSize">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.ServiceModel.Channels.MessageProperties" /> eine feste Größe hat.</summary>
      <returns>true, wenn die <see cref="T:System.ServiceModel.Channels.MessageProperties" /> eine feste Größe aufweist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Satz Eigenschaften schreibgeschützt ist.</summary>
      <returns>true, wenn dieser Satz Eigenschaften schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Item(System.String)">
      <summary>Ruft eine Eigenschaft am angegebenen Index ab.</summary>
      <returns>Die Eigenschaft mit dem angegebenen <paramref name="name" />, oder null, falls die Eigenschaft nicht existiert.</returns>
      <param name="name">Der Name der Eigenschaft, die aus der Auflistung abgerufen werden soll.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Keys">
      <summary>Ruft eine <see cref="T:System.Collections.ICollection" /> ab, die die Schlüssel im <see cref="T:System.ServiceModel.Channels.MessageProperties" /> enthält.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Schlüssel im <see cref="T:System.ServiceModel.Channels.MessageProperties" /> enthält.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.Remove(System.String)">
      <summary>Entfernt das Element mit dem angegebenen Namen aus den <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Diese Methode kann nicht geerbt werden.</summary>
      <returns>true, wenn <see cref="T:System.ServiceModel.Channels.MessageProperties" /> ein Element mit dem angegebenen <paramref name="name" /> enthält, andernfalls false.</returns>
      <param name="name">Der Name des zu entfernenden Elements.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Fügt den <see cref="T:System.ServiceModel.Channels.MessageProperties" /> ein Element mit dem angegebenen Namen und der angegebenen Eigenschaft hinzu. Diese Methode kann nicht geerbt werden.</summary>
      <param name="pair">Ein Schlüssel-Wert-Paar, das den Namen und den Wert des hinzuzufügenden Elements enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Bestimmt, ob die <see cref="T:System.ServiceModel.Channels.MessageProperties" /> einen bestimmten Namen enthalten. Diese Methode kann nicht geerbt werden.</summary>
      <returns>true, wenn <see cref="T:System.ServiceModel.Channels.MessageProperties" /> ein Element mit dem Namen und dem Wert im angegebenen <paramref name="pair" /> enthält, andernfalls false.</returns>
      <param name="pair">Ein Schlüssel-Wert-Paar mit dem Namen und dem Wert des Elements, das in den <see cref="T:System.ServiceModel.Channels.MessageProperties" /> gesucht werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Kopiert den Inhalt der angegebenen <see cref="T:System.ServiceModel.Channels.MessageProperties" /> in ein Array und beginnt am angegebenen Index. Diese Methode kann nicht geerbt werden.</summary>
      <param name="array">Die <see cref="T:System.Array" />-Klasse, in die die Auflistung kopiert werden soll.</param>
      <param name="index">Der Index, ab dem begonnen wird.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Entfernt das Element mit dem angegebenen Namen aus den <see cref="T:System.ServiceModel.Channels.MessageProperties" />. Diese Methode kann nicht geerbt werden.</summary>
      <returns>true, wenn <see cref="T:System.ServiceModel.Channels.MessageProperties" /> ein Element mit dem angegebenen Namen und Wert im <paramref name="pair" />-Parameter enthält und entfernt werden kann, andernfalls false.</returns>
      <param name="pair">Ein Schlüssel-Wert-Paar, das den Namen und den Wert des zu entfernenden Elements enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchlaufen kann. Diese Methode kann nicht geerbt werden.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der eine Auflistung durchlaufen kann. Diese Methode kann nicht geerbt werden.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageProperties.TryGetValue(System.String,System.Object@)">
      <summary>Bestimmt, ob die <see cref="T:System.ServiceModel.Channels.MessageProperties" /> einen bestimmten Namen enthalten, und ruft seinen Wert ab. Diese Methode kann nicht geerbt werden.</summary>
      <returns>true, wenn <see cref="T:System.ServiceModel.Channels.MessageProperties" /> ein Element mit dem angegebenen <paramref name="name" /> enthält, andernfalls false.</returns>
      <param name="name">Der Name des zu suchenden Elements.</param>
      <param name="value">Der Wert des gefundenen Elements.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Values">
      <summary>Ruft die Werte in den <see cref="T:System.ServiceModel.Channels.MessageProperties" /> ab.</summary>
      <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Werte aus <see cref="T:System.ServiceModel.Channels.MessageProperties" /> enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageProperties.Via">
      <summary>Ruft die Transportadresse ab, die verwendet wird, um Nachrichten zu senden, oder legt diese Transportadresse fest.</summary>
      <returns>Ein URI, der die Transportadresse enthält, die verwendet wird, um Nachrichten zu senden.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageState">
      <summary>Gibt den Status einer Nachricht an. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Created">
      <summary>Die Nachricht wurde erstellt. </summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Read">
      <summary>Die Nachricht wird gelesen.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Written">
      <summary>Die Nachricht wurde geschrieben.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Copied">
      <summary>Die Nachricht wurde kopiert.</summary>
    </member>
    <member name="F:System.ServiceModel.Channels.MessageState.Closed">
      <summary>Die Nachricht wurde geschlossen, und es kann nicht mehr darauf zugegriffen werden.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.MessageVersion">
      <summary>Gibt die SOAP-Version und die Version der WS-Adressierung an, die einer Nachricht und ihrem Austausch zugeordnet sind.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Addressing">
      <summary>Ruft die Version der WS-Adressierung ab, die der aktuellen Nachrichtenversion zugeordnet ist.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, die der aktuellen Nachrichtenversion zugeordnet ist. </returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion)">
      <summary>Erstellt ein Nachrichtenversionsobjekt mit der WS-Adressierung Version 1.0 und mit einer angegebenen SOAP-Version.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" /> mit angegebener Umschlagversion.</returns>
      <param name="envelopeVersion">Die <see cref="T:System.ServiceModel.EnvelopeVersion" />, die die SOAP-Version angibt.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion,System.ServiceModel.Channels.AddressingVersion)">
      <summary>Erstellt ein Nachrichtenversionsobjekt mit der angegebenen Version der WS-Adressierung und der angegebenen SOAP-Version.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die die angegebene Version der WS-Adressierung und die angegebene SOAP-Version verwendet.</returns>
      <param name="envelopeVersion">Die <see cref="T:System.ServiceModel.EnvelopeVersion" />, die die SOAP-Version angibt.</param>
      <param name="addressingVersion">Die <see cref="T:System.ServiceModel.Channels.AddressingVersion" />, die die Version der WS-Adressierung angibt.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Default">
      <summary>Ruft die Standardnachrichtenversion ab, die von Windows Phone verwendet wird.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die SOAP 1.2 und WS-Adressierung Version 1.0 verwendet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Envelope">
      <summary>Ruft die SOAP-Version ab, die mit der aktuellen Nachrichtenversion verknüpft ist.</summary>
      <returns>Die <see cref="T:System.ServiceModel.EnvelopeVersion" />, die dem Nachrichtenversionsobjekt zugeordnet ist.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.Equals(System.Object)">
      <summary>Gibt einen Wert zurück, der angibt, ob die aktuelle Nachrichtenversion gleich einem angegebenen Objekt ist.</summary>
      <returns>true, wenn das angegebene Objekt gleich dem aktuellen <see cref="T:System.ServiceModel.Channels.MessageVersion" />-Objekt ist, andernfalls false.</returns>
      <param name="obj">Das <see cref="T:System.Object" />, das mit der aktuellen Nachrichtenversion verglichen werden soll.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.GetHashCode">
      <summary>Ruft einen Hashcode für die aktuelle Nachrichtenversion ab.</summary>
      <returns>Ein eindeutiger Hashcode für die aktuelle <see cref="T:System.ServiceModel.Channels.MessageVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.None">
      <summary>Ruft die Nachrichtenversion ab, die nicht SOAP oder WS-Adressierung verwendet.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die nicht SOAP oder WS-Adressierung verwendet.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap11">
      <summary>Ruft die Nachrichtenversion ab, die SOAP 1.1 verwendet.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die SOAP 1.1 verwendet, aber keine Version der WS-Adressierung.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10">
      <summary>Ruft die Nachrichtenversion mit der WS-Adressierung 1.0 und SOAP 1.2 ab.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die die WS-Adressierung Version 1.0 und SOAP 1.2 verwendet.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.MessageVersion.ToString">
      <summary>Die aktuelle Nachrichtenversion.</summary>
      <returns>Die aktuelle <see cref="T:System.ServiceModel.Channels.MessageVersion" />. </returns>
    </member>
    <member name="T:System.ServiceModel.Channels.RequestContext">
      <summary>Stellt eine Antwort bereit, die mit einer eingehenden Anforderungen korreliert ist.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.RequestContext" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Abort">
      <summary>Bricht beim Überschreiben in einer abgeleiteten Klasse die Verarbeitung der Anforderung ab, die mit dem Kontext verknüpft ist. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <summary>Startet beim Überschreiben in einer abgeleiteten Klasse einen asynchronen Vorgang, um auf die Anforderung zu antworten, die mit dem aktuellen Kontext verknüpft ist.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Antwortvorgang verweist.</returns>
      <param name="message">Die eingehende <see cref="T:System.ServiceModel.Channels.Message" />, die die Anforderung enthält.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Antwortvorgangs empfängt.</param>
      <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Antwortvorgang zugeordnete Statusinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Startet beim Überschreiben in einer abgeleiteten Klasse einen asynchronen Vorgang innerhalb eines bestimmten Zeitintervalls, um auf die Anforderung zu antworten, die mit dem aktuellen Kontext verknüpft ist.</summary>
      <returns>Das <see cref="T:System.IAsyncResult" />, das auf den asynchronen Antwortvorgang verweist.</returns>
      <param name="message">Die eingehende <see cref="T:System.ServiceModel.Channels.Message" />, die die Anforderung enthält.</param>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die das Zeitintervall für das Warten auf die Antwort auf eine verfügbare Anforderung angibt.</param>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Antwortvorgangs empfängt.</param>
      <param name="state">Ein von der Anwendung angegebenes Objekt, das dem asynchronen Antwortvorgang zugeordnete Statusinformationen enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close">
      <summary>Beendet beim Überschreiben in einer abgeleiteten Klasse den Vorgang, der auf den mit dem aktuellen Kontext verknüpften Anforderungskontext antwortet.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
      <summary>Beendet beim Überschreiben in einer abgeleiteten Klasse innerhalb eines angegebenen Zeitintervalls den Vorgang, der auf den mit dem aktuellen Kontext verknüpften Anforderungskontext antwortet.</summary>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die das Zeitintervall angibt, in dem der mit dem aktuellen Kontext verknüpfte Antwortvorgang beendet werden muss.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
      <summary>Gibt Ressourcen frei, die dem Kontext zugeordnet sind.</summary>
      <param name="disposing">true, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. false, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
      <summary>Beendet beim Überschreiben in einer abgeleiteten Klasse einen asynchronen Vorgang, um auf eine Anforderungsnachricht zu antworten.</summary>
      <param name="result">Das <see cref="T:System.IAsyncResult" />, das durch einen Aufruf einer der <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" />-Methoden zurückgegeben wurde.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
      <summary>Antwortet beim Überschreiben in einer abgeleiteten Klasse auf eine Anforderungsnachricht.</summary>
      <param name="message">Die eingehende <see cref="T:System.ServiceModel.Channels.Message" />, die die Anforderung enthält.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
      <summary>Antwortet beim Überschreiben in einer abgeleiteten Klasse innerhalb eines angegebenen Zeitintervalls auf eine Anforderungsnachricht.</summary>
      <param name="message">Die eingehende <see cref="T:System.ServiceModel.Channels.Message" />, die die Anforderung enthält.</param>
      <param name="timeout">Die <see cref="T:System.Timespan" />, die das Zeitintervall für das Warten auf die Antwort auf eine Anforderung angibt.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Nachricht ab, die die Anforderung enthält.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.Message" />, die die Anforderung enthält.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
      <summary>Gibt die verwalteten und nicht verwalteten Ressourcen frei, die dem Kontext zugeordnet sind.</summary>
    </member>
    <member name="T:System.ServiceModel.Channels.SecurityBindingElement">
      <summary>Eine abstrakte Klasse, die bei Implementierung ein Bindungselement darstellt, das Sicherheit für Kanal-SOAP-Nachrichten unterstützt.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Erstellt eine Kanalfactory anhand der <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />-Einstellungen und des übergebenen Bindungskontexts. Die erstellte Kanalfactory ist eine Kanalfactory für SOAP-Nachrichtensicherheit, die über einen internen Verweis auf die Kanalfactory verfügt, die dem Bindungskontext entspricht (der die Transportkanalfactory umfasst).</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.IChannelFactory" />.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="TChannel">Typ der Kanalfactory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Ein Kanal vom Typ <paramref name="TChannel" /> wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Erstellt bei Implementierung in einer abgeleiteten Klasse eine Kanalfactory eines angegebenen Typs.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.IChannelFactory" />, die Kanäle vom Typ <paramref name="TChannel" /> erstellt.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> für die Kanalfactory.</param>
      <typeparam name="TChannel">Typ der Kanalfactory.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Ein Kanal vom Typ <paramref name="TChannel" /> wird nicht unterstützt.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Ruft einen Wert ab, der angibt, ob eine Kanalfactory des angegebenen Typs erstellt werden kann.</summary>
      <returns>true, wenn eine Kanalfactory des Typs <paramref name="TChannel" /> erstellt werden kann, andernfalls false.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> für die Kanalfactory.</param>
      <typeparam name="TChannel">Der Typ der Kanalfactory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.CreateUserNameOverTransportBindingElement">
      <summary>Erstellt ein Sicherheitsbindungselement, das für die Clientauthentifizierung anhand eines Benutzernamens und eines Kennworts, die als Teil der SOAP-Nachricht gesendet werden, konfiguriert ist. Das Bindungselement erfordert vom Transport die Durchführung der Serverauthentifizierung sowie die Bereitstellung des Nachrichtenschutzes (z. B. HTTPS).</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.SecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Ruft ein angegebenes Objekt mit dem angegebenen <see cref="T:System.ServiceModel.Channels.BindingContext" /> ab.</summary>
      <returns>Das angegebene Objekt aus dem <see cref="T:System.ServiceModel.Channels.BindingContext" /> oder null, wenn das Objekt nicht gefunden wurde.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Die abzurufende Eigenschaft.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.IncludeTimestamp">
      <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob jede Nachricht Zeitstempel enthält.</summary>
      <returns>true, wenn in jeder Nachricht Zeitstempel enthalten sind, andernfalls false. Der Standardwert ist true.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.SecurityBindingElement.LocalClientSettings">
      <summary>Ruft die für lokale Sicherheitseinstellungen, die vom Client verwendet werden, spezifischen Bindungseigenschaften ab.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.LocalClientSecuritySettings" />, die lokale Clientsicherheitseinstellungen enthalten.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement">
      <summary>Das Bindungselement, das die Zeichencodierung und Nachrichtenversion für textbasierte SOAP-Nachrichten angibt.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageVersion,System.Text.Encoding)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />-Klasse mit einer angegebenen Nachrichtenversion und -codierung.</summary>
      <param name="messageVersion">Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die für die Nachrichtenversion verwendet wird.</param>
      <param name="writeEncoding">Die <see cref="T:System.Text.Encoding" />, die verwendet wird, um Nachrichtenzeichen zu formatieren.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="messageVersion" /> oder <paramref name="writeEncoding" /> ist NULL.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="writeEncoding" />-Wert ist ungültig.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Erstellt den Kanalfactorystapel auf dem Client, der einen angegebenen Kanaltyp für einen angegebenen Kontext erstellt.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> vom Typ <paramref name="TChannel" /> für den angegebenen Kontext.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> für den Kanal.</param>
      <typeparam name="TChannel">Der von der Kanalfactory erzeugte Kanaltyp.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.Clone">
      <summary>Erstellt ein neues, aus dem aktuellen Objekt initialisiertes <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />-Objekt.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.TextMessageEncodingBindingElement" />-Objekt mit Eigenschaftswerten, die denen des aktuellen Elements entsprechen.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Erstellt eine Factory für Textnachrichtenencoder, die die Nachrichtenversion und Zeichencodierung verwendet, die vom aktuellen Codierungsbindungselement angegeben wurden.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" />, die diese Factory erstellt.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.TextMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gibt ggf. ein angefordertes typisiertes Objekt von der entsprechenden Schicht im Stapel mit Bindungselementen zurück.</summary>
      <returns>Das angeforderte typisierte Objekt, falls vorhanden, oder ein Nullverweis (Nothing in Visual Basic), falls das Objekt nicht vorhanden ist.</returns>
      <param name="context">Der <see cref="T:System.ServiceModel.Channels.BindingContext" /> für das Bindungselement.</param>
      <typeparam name="T">Das typisierte Objekt, das von der Methode abgefragt wird.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.MessageVersion">
      <summary>Ruft die Versionen von SOAP und der WS-Adressierung ab, die zum Formatieren der Textnachricht verwendet werden, oder legt diese fest.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.MessageVersion" />, die verwendet wird, um Nachrichten zu formatieren. Der Standardwert ist <see cref="P:System.ServiceModel.Channels.MessageVersion.Soap12WSAddressing10" />.</returns>
      <exception cref="T:System.ArgumentNullException">Der Wert ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TextMessageEncodingBindingElement.WriteEncoding">
      <summary>Ruft die Codierung ab bzw. legt die Codierung fest, die verwendet wird, um die Zeichen in der Textnachricht zu formatieren.</summary>
      <returns>Die <see cref="T:System.Text.Encoding" />, die verwendet wird, um die Zeichen in der Textnachricht zu formatieren. Die Standardtextcodierung ist das UTF-8-Format.</returns>
      <exception cref="T:System.ArgumentNullException">Der Wert ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="writeEncoding" />-Wert ist ungültig.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportBindingElement">
      <summary>Eine abstrakte Basisklasse, die ein Transportbindungselement darstellt.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor">
      <summary>Erstellt eine neue Instanz dieser Klasse.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.#ctor(System.ServiceModel.Channels.TransportBindingElement)">
      <summary>Erstellt eine neue Instanz dieser Klasse aus einer vorhandenen Instanz.</summary>
      <param name="elementToBeCloned">Das <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />, das geklont werden soll. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Ruft eine Eigenschaft aus dem angegebenen <see cref="T:System.ServiceModel.Channels.BindingContext" /> ab.</summary>
      <returns>Die Eigenschaft aus dem angegebenen <see cref="T:System.ServiceModel.Channels.BindingContext" />.</returns>
      <param name="context">Ein <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">Die abzurufende Eigenschaft.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> darf nicht NULL sein.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing">
      <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob eine manuelle Adressierung der Nachricht erforderlich ist.</summary>
      <returns>true, wenn eine manuelle Adressierung der Nachricht erforderlich ist, andernfalls false. Der Standardwert ist false.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize">
      <summary>Ruft die maximal zulässige Nachrichtengröße ab, die empfangen werden kann, oder legt diese Größe fest.</summary>
      <returns>Die maximal zulässige Nachrichtengröße, die empfangen werden kann. Der Standardwert ist 65.536 Bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der festgelegte <paramref name="value" /> kann nicht negativ sein.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.TransportBindingElement.Scheme">
      <summary>Ruft das URI-Schema für den Transport ab.</summary>
      <returns>Gibt das URI-Schema für den Transport zurück, das sich je nach der zur Implementierung verwendeten abgeleiteten Klasse unterscheidet.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
      <summary>Stellt ein benutzerdefiniertes Bindungselement dar, das Sicherheit im gemischten Modus unterstützt (wie zum Beispiel optimierte Nachrichtensicherheit über einen sicheren Transport).</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.#ctor">
      <summary>Erstellt eine Instanz der <see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" />-Klasse.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
      <summary>Erstellt ein neues, von der aktuellen Klasse initialisiertes <see cref="T:System.ServiceModel.Channels.BindingElement" />-Objekt.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Channels.BindingElement" />-Objekt mit Eigenschaftswerten, die denen der aktuellen Instanz entsprechen.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ClientCredentials">
      <summary>Ermöglicht dem Benutzer, Clientanmeldeinformationen zu konfigurieren, die verwendet werden, um den Client gegenüber einem Dienst zu authentifizieren.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Klasse. </summary>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>Erstellt eine Kopie von vorhandenen <see cref="T:System.ServiceModel.Description.ClientCredentials" />. </summary>
      <param name="other">Die zu kopierende <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Instanz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.Clone">
      <summary>Erstellt eine neue Kopie dieser <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Instanz.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Instanz.</returns>
      <exception cref="T:System.NotImplementedException">Die aktuellen Anmeldeinformationen sind null oder wurden nicht korrekt eingegeben.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ClientCredentials.CloneCore">
      <summary>Erstellt eine neue Kopie dieser <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Instanz.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Description.ClientCredentials" />-Instanz.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ClientCredentials.UserName">
      <summary>Ruft ein Anmeldeinformationsobjekt ab, mit dem Sie den Benutzernamen und das Kennwort festlegen können, die der Client verwendet, um sich dem Dienst gegenüber zu authentifizieren. </summary>
      <returns>Eine <see cref="T:System.ServiceModel.Security.UserNamePasswordClientCredential" />, die den aktuellen Benutzernamen und das Kennwort der Clientanmeldeinformation darstellt.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.ContractDescription">
      <summary>Beschreibt einen Vertrag, der angibt, was ein Endpunkt an die Außenwelt kommuniziert.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.ContractDescription" />-Klasse mit einem angegebenen Namen.</summary>
      <param name="name">Der Name des Vertrags.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> ist leer.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.ContractDescription.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.ContractDescription" />-Klasse mit einem angegebenen, durch Namespace gekennzeichneten Namen.</summary>
      <param name="name">Der Name des Vertrags.</param>
      <param name="ns">Der Namespace, der den Namen des Vertrags enthält.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> ist leer.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.CallbackContractType">
      <summary>Ruft den Typ des Rückrufvertrags ab, der in der Vertragsbeschreibung angegeben ist, oder legt diesen Typ fest.</summary>
      <returns>Der <see cref="T:System.Type" /> des Rückrufvertrags, der in der Vertragsbeschreibung angegeben ist.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ConfigurationName">
      <summary>Ruft den Konfigurationsnamen für die Vertragsbeschreibung ab, oder legt diesen fest.</summary>
      <returns>Der Konfigurationsname für den Vertrag.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.ContractType">
      <summary>Ruft den Vertragstyp ab, den die Vertragsbeschreibung angibt, oder legt diesen Typ fest.</summary>
      <returns>Der <see cref="T:System.Type" /> des Vertrags, der in der Vertragsbeschreibung angegeben ist.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Name">
      <summary>Ruft den Namen des Vertrags ab, oder legt diesen fest.</summary>
      <returns>Der Name der Vertragsbeschreibung.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Namespace">
      <summary>Ruft den Namespace für den Vertrag ab, oder legt diesen fest.</summary>
      <returns>Der Namespace des Vertrags.</returns>
      <exception cref="T:System.ArgumentNullException">Der festgelegte Wert ist null.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.ContractDescription.Operations">
      <summary>Ruft die Auflistung der Vorgangsbeschreibungen ab, die diesem Vertrag zugeordnet sind.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Description.OperationDescriptionCollection" />, die die Vorgangsbeschreibungen enthält, die dieser Vertragsbeschreibung zugeordnet sind.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescription">
      <summary>Stellt einen SOAP-Fehler dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.FaultDescription.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.FaultDescription" />-Klasse unter Verwendung des angegebenen Aktionswerts.</summary>
      <param name="action">Die Aktion der SOAP-Fehlermeldung.</param>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Action">
      <summary>Ruft den Wert der Aktion in der SOAP-Fehlermeldung ab.</summary>
      <returns>Die Aktion des SOAP-Fehlers.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.DetailType">
      <summary>Ruft den Typ des SOAP-Fehlerdetails ab, oder legt diesen fest.</summary>
      <returns>Der Typ des serialisierbaren Detailobjekts.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Name">
      <summary>Ruft den Namen des SOAP-Fehlers ab, oder legt ihn fest.</summary>
      <returns>Der Name des SOAP-Fehlers.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.FaultDescription.Namespace">
      <summary>Ruft den Namespace des SOAP-Fehlers ab oder legt ihn fest.</summary>
      <returns>Der Namespace des SOAP-Fehlers.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.FaultDescriptionCollection">
      <summary>Eine Auflistung von <see cref="T:System.ServiceModel.Description.FaultDescription" />-Objekten, die Sie zum Abrufen von Informationen zu SOAP-Fehlern in einem Vertrag verwenden können.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessageBodyDescription">
      <summary>Stellt den Textkörper einer SOAP-Nachricht dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageBodyDescription.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.MessageBodyDescription" />-Klasse. </summary>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.Parts">
      <summary>Ruft die Teile für den Textkörper der SOAP-Nachricht ab.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" />, die die Textkörperteile der SOAP-Nachricht enthält, die Sie überprüfen oder ändern können.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.ReturnValue">
      <summary>Ruft den Teil der SOAP-Nachricht ab, die den Rückgabewert enthält, oder legt diesen fest.</summary>
      <returns>Der Rückgabewert, falls vorhanden.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperName">
      <summary>Ruft den Namen des Wrapperelements im SOAP-Textkörperelement ab, falls vorhanden, oder legt diesen fest.</summary>
      <returns>Der Name des Wrapperelements, falls vorhanden, andernfalls null.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageBodyDescription.WrapperNamespace">
      <summary>Ruft den Namespace des Wrapperelements im SOAP-Textkörperelement ab, falls vorhanden, oder legt diesen fest.</summary>
      <returns>Der Namespace des Wrapperelements, falls vorhanden.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescription">
      <summary>Stellt die Beschreibung einer Nachricht dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescription.#ctor(System.String,System.ServiceModel.Description.MessageDirection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.MessageDescription" />-Klasse mit einer angegebenen Aktion und Richtung.</summary>
      <param name="action">Der Aktionsparameter der SOAP-Nachricht, der die Absicht der Nachricht identifiziert.</param>
      <param name="direction">
        <see cref="F:System.ServiceModel.Description.MessageDirection.Input" />, wenn es sich um eine eingehende Nachricht handelt, oder <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />, wenn es sich um eine  ausgehende Nachricht handelt.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Die <paramref name="direction" /> ist weder <see cref="F:System.ServiceModel.Description.MessageDirection.Input" /> noch <see cref="F:System.ServiceModel.Description.MessageDirection.Output" />.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Action">
      <summary>Ruft den Aktionsparameter der SOAP-Nachricht ab, der die Absicht der Nachricht identifiziert.</summary>
      <returns>Der Aktions-URI.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Body">
      <summary>Ruft den Textkörper der SOAP-Nachricht ab.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Description.MessagePartDescriptionCollection" />, die den Textkörper der Nachricht enthält.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.Direction">
      <summary>Ruft die Richtung ab, die angibt, ob die Nachricht eingehend oder ausgehend ist.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Description.MessageDirection" />, die angibt, ob die Nachricht in den Dienst eingeht oder von dem Dienst ausgeht.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessageDescription.MessageType">
      <summary>Ruft einen Typ ab, der den Typ des Nachrichtenvertrags identifiziert, oder legt diesen fest.</summary>
      <returns>Der Typ des Nachrichtenvertrags.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDescriptionCollection">
      <summary>Stellt eine Auflistung bereit, die zum Speichern von Beschreibungen der Meldungen verwendet wird, aus denen ein zu einem Vertrag gehörender Vorgang besteht.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.Find(System.String)">
      <summary>Sucht die erste Meldungsbeschreibung in einer Auflistung für eine Meldung mit einer angegebenen Aktion und gibt diese zurück.</summary>
      <returns>Die erste <see cref="T:System.ServiceModel.Description.MessageDescription" /> in der Auflistung, deren Meldung die angegebene <paramref name="action" /> enthält, und null, wenn keine entsprechende <paramref name="action" /> gefunden wurde.</returns>
      <param name="action">Die gefundene Aktion der Nachricht.</param>
    </member>
    <member name="M:System.ServiceModel.Description.MessageDescriptionCollection.FindAll(System.String)">
      <summary>Sucht alle Meldungsbeschreibungen in einer Auflistung, deren Meldungen eine angegebene Aktion enthalten, und gibt diese zurück.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" />, die die Auflistungsmeldungsbeschreibungen der aktuellen Auflistung enthält, deren Meldungen über den angegebenen <paramref name="action" /> verfügen. Wenn keine entsprechenden <see cref="T:System.ServiceModel.Description.MessageDescription" />-Objekte gefunden wurden, wird eine leere Auflistung zurückgegeben.</returns>
      <param name="action">Die Aktion der gefundenen Nachrichten.</param>
    </member>
    <member name="T:System.ServiceModel.Description.MessageDirection">
      <summary>Gibt die Richtung der Nachricht an.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Input">
      <summary>Die Nachricht ist eingehend.</summary>
    </member>
    <member name="F:System.ServiceModel.Description.MessageDirection.Output">
      <summary>Die Nachricht ist ausgehend.</summary>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescription">
      <summary>Stellt eine Beschreibung eines SOAP-Nachrichtenteils dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescription.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.MessagePartDescription" />-Klasse. </summary>
      <param name="name">Der XML-Name des Nachrichtenteils.</param>
      <param name="ns">Der XML-Namespace des Nachrichtenteils.</param>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Index">
      <summary>Ruft den Index des Nachrichtenteils ab, oder legt ihn fest.</summary>
      <returns>Der Index des Nachrichtenteils.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.MemberInfo">
      <summary>Ruft die Memberinformationen für den Nachrichtenteil ab, oder legt sie fest.</summary>
      <returns>Die Memberinformationen für diesen Nachrichtenteil.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Name">
      <summary>Ruft den Namen des Nachrichtenteils ab.</summary>
      <returns>Der Name des Nachrichtenteils.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Namespace">
      <summary>Ruft den Namespace des Nachrichtenteils ab.</summary>
      <returns>Der Namespace des Nachrichtenteils.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.MessagePartDescription.Type">
      <summary>Ruft den Typ des Nachrichtenteils ab, oder legt diesen fest.</summary>
      <returns>Der Typ des Nachrichtenteils.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.MessagePartDescriptionCollection">
      <summary>Stellt eine Auflistung von <see cref="T:System.ServiceModel.Description.MessagePartDescription" />-Objekten dar.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.MessagePartDescriptionCollection.GetKeyForItem(System.ServiceModel.Description.MessagePartDescription)">
      <summary>Gibt beim Aufruf in einer abgeleiteten Klasse den <see cref="T:System.Xml.XmlQualifiedName" /> der <see cref="T:System.ServiceModel.Description.MessagePartDescription" /> zurück.</summary>
      <returns>Der <see cref="T:System.Xml.XmlQualifiedName" /> der <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</returns>
      <param name="item">Die zu suchende <see cref="T:System.ServiceModel.Description.MessagePartDescription" />.</param>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescription">
      <summary>Ein Vertrag, der einen Vorgang hinsichtlich der ausgetauschten Nachrichten charakterisiert.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.OperationDescription" />-Klasse mit einem angegeben Namen und einer angegebenen Vertragsbeschreibung.</summary>
      <param name="name">Der Name der Vorgangsbeschreibung.</param>
      <param name="declaringContract">Die <see cref="T:System.ServiceModel.Description.ContractDescription" />, die verwendet wird, um die Vorgangsbeschreibung zu initialisieren.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> oder <paramref name="declaringContract" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> ist leer.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.BeginMethod">
      <summary>Ruft die Begin-Methode des Vorgangs ab bzw. legt diese fest.</summary>
      <returns>Die <see cref="T:System.Reflection.MethodInfo" />, die Zugriff auf die Attribute und Metadaten der Methode bietet.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.DeclaringContract">
      <summary>Ruft den Vertrag ab bzw. legt den Vertrag fest, dem der Vorgang zugeordnet ist.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Description.ContractDescription" /> für den Vorgang.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist NULL.</exception>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.EndMethod">
      <summary>Ruft die End-Methode des Vorgangs ab bzw. legt diese fest.</summary>
      <returns>Die <see cref="T:System.Reflection.MethodInfo" />, die Zugriff auf die Attribute und Metadaten der Methode bietet.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Faults">
      <summary>Ruft eine Auflistung der Beschreibungen der Fehler ab, die der Vorgangsbeschreibung zugeordnet sind.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Description.FaultDescriptionCollection" />, die Details zu den Fehlern enthält, die der Vorgangsbeschreibung zugeordnet sind.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.IsOneWay">
      <summary>Ruft einen Wert ab, der angibt, ob ein Vorgang eine Antwortnachricht zurückgibt.</summary>
      <returns>true, wenn diese Methode eine Anforderungsnachricht empfängt und keine Antwortnachricht zurückgibt, andernfalls false. Der Standardwert ist false.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.KnownTypes">
      <summary>Ruft die bekannten Typen ab, die der Vorgangsbeschreibung zugeordnet sind.</summary>
      <returns>Ruft die Auflistung bekannter Typen ab, die der Vorgangsbeschreibung zugeordnet sind.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Messages">
      <summary>Ruft die Beschreibungen der Nachrichten ab, aus denen der Vorgang besteht, oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection" />, die Beschreibungen der Nachrichten enthält, aus denen der Vorgang besteht.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.Name">
      <summary>Ruft den Namen der Vorgangsbeschreibung ab, oder legt ihn fest.</summary>
      <returns>Der Name der Vorgangsbeschreibung.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.OperationDescription.SyncMethod">
      <summary>Ruft die Dienstsynchronisierungsmethode der Vorgangsbeschreibung ab bzw. legt sie fest.</summary>
      <returns>Die <see cref="T:System.Reflection.MethodInfo" />, die Zugriff auf die Attribute und Metadaten der Methode bietet.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.OperationDescriptionCollection">
      <summary>Stellt eine Auflistung dar, die Vorgangsbeschreibungen enthält.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.Find(System.String)">
      <summary>Gibt das erste Vorkommen einer Vorgangsbeschreibung mit einem angegebenen Namen aus der Auflistung der Vorgangsbeschreibungen zurück.</summary>
      <returns>Das erste Vorkommen einer <see cref="T:System.ServiceModel.Description.OperationDescription" /> mit dem angegebenen Namen, oder null, wenn kein Vorgang mit dem angegebenen Namen vorhanden ist.</returns>
      <param name="name">Der Name des Vorgangs.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.FindAll(System.String)">
      <summary>Gibt eine Auflistung aller Vorgangsbeschreibungen aus der Auflistung zurück, die den angegebenen Namen haben.</summary>
      <returns>Die <see cref="T:System.Collections.ObjectModel.Collection`1" /> vom Typ <see cref="T:System.ServiceModel.Description.OperationDescription" />, die alle Vorgangsbeschreibungen mit dem angegebenen Namen enthält.</returns>
      <param name="name">Der Name des Vorgangs.</param>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.InsertItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Fügt ein Element am angegebenen Index in die Vorgangsbeschreibungsauflistung ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</param>
      <param name="item">Das einzufügende <see cref="T:System.ServiceModel.Description.OperationDescription" />-Objekt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> ist null.</exception>
    </member>
    <member name="M:System.ServiceModel.Description.OperationDescriptionCollection.SetItem(System.Int32,System.ServiceModel.Description.OperationDescription)">
      <summary>Ersetzt das Vorgangsbeschreibungselement am angegebenen Index in der Auflistung.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</param>
      <param name="item">Das einzufügende <see cref="T:System.ServiceModel.Description.OperationDescription" />-Objekt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> ist null.</exception>
    </member>
    <member name="T:System.ServiceModel.Description.ServiceEndpoint">
      <summary>Stellt den Endpunkt für einen Dienst dar, der es Clients dieses Dienstes ermöglicht, ihn zu finden und mit ihm zu kommunizieren.</summary>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />-Klasse für einen angegebenen Vertrag.</summary>
      <param name="contract">Die <see cref="T:System.ServiceModel.Description.ContractDescription" /> für den Dienstendpunkt.</param>
    </member>
    <member name="M:System.ServiceModel.Description.ServiceEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />-Klasse mit einem angegebenen Vertrag und einer angegebenen Bindung und Adresse.</summary>
      <param name="contract">Die <see cref="T:System.ServiceModel.Description.ContractDescription" /> für den Dienstendpunkt.</param>
      <param name="binding">Das <see cref="T:System.ServiceModel.Channels.Binding" />, das angibt, wie der Dienstendpunkt mit der Welt kommuniziert.</param>
      <param name="address">Die <see cref="T:System.ServiceModel.EndpointAddress" /> für den Dienstendpunkt.</param>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Address">
      <summary>Ruft die Endpunktadresse für den Dienstendpunkt ab, oder legt sie fest.</summary>
      <returns>Die <see cref="T:System.ServiceModel.EndpointAddress" />, die den Speicherort des Dienstendpunktes angibt.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Binding">
      <summary>Ruft die Bindung für den Dienstendpunkt ab, oder legt sie fest.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Channels.Binding" /> für den Dienstendpunkt.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Contract">
      <summary>Ruft den Vertrag für den Dienstendpunkt ab.</summary>
      <returns>Die <see cref="T:System.ServiceModel.Description.ContractDescription" />, die den Vertrag für den Dienstendpunkt angibt.</returns>
    </member>
    <member name="P:System.ServiceModel.Description.ServiceEndpoint.Name">
      <summary>Ruft den Namen des Dienstendpunkts ab, oder legt ihn fest.</summary>
      <returns>Der Name des Dienstendpunkts. Der Standardwert ist die Verkettung des Bindungsnamens und des Vertragsbeschreibungsnamens. Beispiel: <see cref="P:System.ServiceModel.Channels.Binding.Name" /> + '_' + <see cref="P:System.ServiceModel.Description.ContractDescription.Name" />.</returns>
    </member>
    <member name="T:System.ServiceModel.Description.XmlSerializerOperationBehavior">
      <summary>Steuert das mit einem Vorgang verknüpfte Laufzeitverhalten von <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientOperation">
      <summary>Wird verwendet, um das Ausführungsverhalten eines bestimmten Vertragsvorgangs in einem Clientobjekt oder einem Clientkanalobjekt zu ändern oder zu erweitern. Die Klasse kann nicht geerbt werden. </summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />-Klasse unter Verwendung der angegebenen <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, des angegebenen Namens und der Aktionswerte. </summary>
      <param name="parent">Das enthaltene <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />-Objekt.</param>
      <param name="name">Der Name des Vorgangs.</param>
      <param name="action">Die Aktion des Vorgangs.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />-Klasse unter Verwendung der angegebenen <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />, des Namens, der Aktion und der Antwortaktionswerte. </summary>
      <param name="parent">Das enthaltene <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />-Objekt.</param>
      <param name="name">Der Name des Vorgangs.</param>
      <param name="action">Die Aktion des Vorgangs.</param>
      <param name="replyAction">Die Aktion der Antwortnachricht.</param>
      <exception cref="T:::System.ArgumentNullException">
        <paramref name="Parent" /> oder <paramref name="name" /> ist NULL.</exception>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <summary>Ruft die Aktion des Vorgangs ab.</summary>
      <returns>Die Aktion des Vorgangs.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod">
      <summary>Ruft die Methode ab, die einem asynchronen Vorgang zugeordnet ist.</summary>
      <returns>Ein <see cref="T:System.Reflection.MethodInfo" />-Objekt, das die Methode für die Verarbeitung des Begin-Teils eines asynchronen Methodenpaars darstellt, oder null, wenn der Vorgang nicht Teil eines asynchronen Methodenpaars ist.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob der Wert der<see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" />-Eigenschaft verwendet wird, um die Antwortnachricht zu deserialisieren.</summary>
      <returns>true, wenn der Rückgabetyp keine <see cref="T:System.ServiceModel.Channels.Message" /> ist, andernfalls false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod">
      <summary>Ruft die Methode ab, die die asynchrone End-Methode für den Vorgang implementiert, oder legt diese Methode fest.</summary>
      <returns>Eine <see cref="T:System.Reflection.MethodInfo" />, die die End-Methode für den Vorgang darstellt, oder null, falls der Vorgang nicht asynchron ist.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <summary>Ruft den Formatierer ab bzw. legt den Formatierer fest, der Objekte in Nachrichten serialisiert und Nachrichten in Objekte deserialisiert.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />-Implementierung.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating">
      <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob eine Sitzung durch eine Nachricht an diesen Vorgang gestartet werden kann.</summary>
      <returns>true, wenn eine Nachricht an diesen Vorgang eine Sitzung initiieren kann, andernfalls false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob der Vorgang ein unidirektionaler Vorgang ist.</summary>
      <returns>true, wenn der WCF-Client keine Antwort erwarten soll, andernfalls false. Der Standardwert ist false.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating">
      <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob dieser Vorgang der letzte in einer Sitzung ist.</summary>
      <returns>true, wenn die zugeordnete Sitzung geschlossen wird, nachdem der Vorgang aufgerufen wurde, andernfalls false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <summary>Ruft den Namen des Vorgangs ab.</summary>
      <returns>Der Name des Vorgangs.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <summary>Ruft das enthaltene <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />-Objekt ab.</summary>
      <returns>Das enthaltene <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" />-Objekt.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <summary>Ruft die Aktion der Antwortnachricht für diesen Vorgang ab.</summary>
      <returns>Die Aktion der Antwort.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob das <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" />-Objekt eine ausgehende Nachricht serialisiert.</summary>
      <returns>true, wenn die <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" />-Eigenschaft die Rückgabewerte in eine Antwortnachricht serialisiert, andernfalls false. Der Standardwert ist true.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod">
      <summary>Ruft die Methode ab, die diesem Vorgang zugeordnet ist, oder legt sie fest.</summary>
      <returns>Eine <see cref="T:System.Reflection.MethodInfo" />, die die Methode darstellt, die den Vorgang implementiert. Wenn der Vorgang asynchron ist, ist dieser Wert null, und die Implementierungsmethoden werden in der <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod" />-Eigenschaft und der <see cref="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod" />-Eigenschaft gespeichert.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <summary>Die Einfügemarke für Klassen, die den Funktionsumfang von Windows Phone-Clientobjekten für alle durch eine Clientanwendung verarbeiteten Nachrichten erweitern.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <summary>Ruft den Typ des Vertrags ab, der dem Client zugeordnet ist.</summary>
      <returns>Das <see cref="T:System.Type" />-Objekt, das den diesem Client zugeordneten Vertrag darstellt.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <summary>Ruft den Namen des Vertrags ab, der dem Client zugeordnet ist.</summary>
      <returns>Der für diesen Client verwendete Vertragsname.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <summary>Ruft den Namespace des Vertrags ab, der dem Client zugeordnet ist.</summary>
      <returns>Der Namespace des Vertrags, der diesem Client zugeordnet ist.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob der Client Adressierungsheader zu Anforderung-Antwort-Nachrichten hinzufügt.</summary>
      <returns>true, wenn der Client keine Adressierungsheader hinzufügt, andernfalls false. Der Standardwert ist false. </returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <summary>Ruft die maximale Größe von Fehlermeldungen ab bzw. legt sie fest. </summary>
      <returns>Die maximale Fehlergröße. Der Standardwert ist 64 KB.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <summary>Ruft eine <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />-Implementierung ab, die verwendet werden kann, um einen <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> auszuwählen, oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />-Objekt, das einen <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> auswählt.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <summary>Ruft den Clientvorgang für Methoden ab, die nicht über eine entsprechende<see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> in der <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />-Auflistung verfügen.</summary>
      <returns>Eine <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />, die die Methode darstellt, an die der aktuelle Nachrichteninhalt weitergeleitet wird, wenn die Vorgangsauswahl keinen zu der Nachricht passenden Vorgang finden kann.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <summary>Ruft die Transportadresse ab, die verwendet wird, um Nachrichten durch den Client zu senden, oder legt diese Transportadresse fest.</summary>
      <returns>Eine <see cref="T:System.Uri" />, die die Zieladresse für den Transport ist. Der Standardwert ist der <see cref="P:System.ServiceModel.EndpointAddress.Uri" />-Wert des Client.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <summary>Diese Klasse wird in der aktuellen Windows Phone-Version nicht unterstützt. Sie ist aus Kompatibilitätsgründen vorhanden.</summary>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.FaultContractInfo">
      <summary>Stellt Informationen zu einem SOAP-Fehler dar, der in einem <see cref="T:System.ServiceModel.FaultContractAttribute" />-Attribut angegeben wird.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.FaultContractInfo.#ctor(System.String,System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Dispatcher.FaultContractInfo" />-Klasse, die die angegebene Aktion und den angegebenen Detailtyp verwendet.</summary>
      <param name="action">Die Aktion des SOAP-Fehlers.</param>
      <param name="detail">Der Detailtyp, der als SOAP-Fehlerdetail serialisiert wird.</param>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Action">
      <summary>Ruft den Wert der SOAP-Aktion für die Fehlermeldung ab.</summary>
      <returns>Der Wert der SOAP-Aktion für die Fehlermeldung.</returns>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.FaultContractInfo.Detail">
      <summary>Der Typ des Objekts, das als SOAP-Fehlerdetail serialisiert wird.</summary>
      <returns>Der <see cref="T:System.Type" />, der das serialisierte SOAP-Fehlerdetail darstellt.</returns>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <summary>Definiert die Methoden, die verwendet werden, um die Umwandlung von Nachrichten in Objekte und von Objekten in Nachrichten bei Clientanwendungen zu steuern.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Wandelt eine Nachricht in einen Rückgabewert und in <paramref name="out" />-Parameter um, die an den Aufrufvorgang zurückgegeben werden.</summary>
      <returns>Der Rückgabewert des Vorgangs.</returns>
      <param name="message">Die eingehende Nachricht.</param>
      <param name="parameters">Alle <paramref name="out" />-Werte.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <summary>Wandelt ein <see cref="T:System.Object" />-Array in eine ausgehende <see cref="T:System.ServiceModel.Channels.Message" /> um. </summary>
      <returns>Die SOAP-Nachricht, die an den Dienstvorgang gesendet wurde.</returns>
      <param name="messageVersion">Die Version der SOAP-Nachricht, die verwendet werden soll.</param>
      <param name="parameters">Die Parameter, die dem XAML-Clientvorgang übergeben wurden.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <summary>Definiert den Vertrag für eine Vorgangsauswahl.</summary>
    </member>
    <member name="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <summary>Ruft einen Wert ab, der angibt, ob Parameter erforderlich sind, um die Auswahl zu bestimmen.</summary>
      <returns>true, wenn Parameter erforderlich sind, andernfalls false.</returns>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <summary>Gibt den ausgewählten Vorgang zurück.</summary>
      <returns>Der von der benutzerdefinierten Vorgangsauswahl ausgewählte Vorgang.</returns>
      <param name="method">Die aufgerufene Methode.</param>
      <param name="parameters">Die Parameter, die an die Methode übergeben werden.</param>
    </member>
    <member name="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter">
      <summary>Definiert Methoden, die in einer Anwendung Anforderungsnachrichten deserialisieren und Antwortnachrichten serialisieren.</summary>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])">
      <summary>Deserialisiert eine Nachricht in einen Parameterarray.</summary>
      <param name="message">Die eingehende Nachricht.</param>
      <param name="parameters">Das Array von Objekten, die als Parameter an den Vorgang übergeben werden.</param>
    </member>
    <member name="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)">
      <summary>Serialisiert eine Antwortnachricht von einer angegebenen Nachrichtenversion, einem angegebenen Parameterarray und einem angegebenen Rückgabewert.</summary>
      <returns>Die serialisierte Antwort <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
      <param name="messageVersion">Die Version der SOAP-Nachricht.</param>
      <param name="parameters">Das Array von out-Parametern.</param>
      <param name="result">Der Rückgabewert.</param>
    </member>
    <member name="T:System.ServiceModel.Security.MessageSecurityException">
      <summary>Stellt eine Ausnahme dar, die auftritt, wenn Probleme mit den auf eine Nachricht angewendeten Sicherheitsfunktionen bestehen.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Security.MessageSecurityException" />-Klasse.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Security.MessageSecurityException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlermeldung.</param>
    </member>
    <member name="M:System.ServiceModel.Security.MessageSecurityException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Security.MessageSecurityException" />-Klasse mit einer Fehlermeldung und einem Verweis auf die innere Ausnahme, die die Ursache dieser Ausnahme ist.</summary>
      <param name="message">Die Fehlermeldung.</param>
      <param name="innerException">Der Verweis auf die innere Ausnahme.</param>
    </member>
    <member name="T:System.ServiceModel.Security.SecurityAccessDeniedException">
      <summary>Stellt die Sicherheitsausnahme dar, die ausgelöst wird, wenn eine Sicherheitsautorisierungsanforderung fehlschlägt.</summary>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" />-Klasse unter Verwendung einer angegebenen Nachricht.</summary>
      <param name="message">Eine Beschreibung des Fehlerzustands.</param>
    </member>
    <member name="M:System.ServiceModel.Security.SecurityAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Security.SecurityAccessDeniedException" />-Klasse unter Verwendung einer angegebenen Nachricht und der inneren Ausnahme.</summary>
      <param name="message">Eine Beschreibung des Fehlerzustands.</param>
      <param name="innerException">Die innere Ausnahme, die verwendet werden soll.</param>
    </member>
    <member name="T:System.ServiceModel.Security.UserNamePasswordClientCredential">
      <summary>Stellt eine Clientanmeldeinformation auf der Grundlage von Benutzername und Kennwort dar.</summary>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password">
      <summary>Ruft das Kennwort ab oder legt es fest.</summary>
      <returns>Das Kennwort.</returns>
    </member>
    <member name="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName">
      <summary>Ruft den Benutzernamen ab oder legt diesen fest.</summary>
      <returns>Der Benutzername.</returns>
    </member>
  </members>
</doc>