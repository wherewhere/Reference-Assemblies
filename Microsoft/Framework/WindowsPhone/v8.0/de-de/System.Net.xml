<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net</name>
  </assembly>
  <members>
    <member name="T:System.Net.Cookie">
      <summary>Stellt ein Objekt zur Verwendung mit HTTP-Anforderungen bereit, um Zustandsinformationen für eine Windows Phone-basierte Anwendung beizubehalten.</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Cookie" />-Klasse. </summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Cookie" />-Klasse mit dem angegebenen Namen und Wert.</summary>
      <param name="name">Der Name der <see cref="T:System.Net.Cookie" />. Die <paramref name="name" />-Parameter dürfen folgenden Zeichen nicht enthalten: Gleichheitszeichen (=), Semikolon (;), Komma (,), Zeilenumbruch (\n), Wagenrücklauf (\r), Tabstopp (\t) und Leerzeichen. Das Dollarzeichen ($) darf nicht als erstes Zeichen verwendet werden.</param>
      <param name="value">Der Wert für <see cref="T:System.Net.Cookie" />. Der <paramref name="value" />-Parameter darf nur ein Semikolon (;) oder Komma () enthalten, wenn es in doppelten Anführungszeichen mit Escapezeichen enthalten ist.</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> ist null oder eine leere Zeichenfolge (""). - oder -<paramref name="name" /> enthält ein nicht autorisiertes Zeichen. Die Verwendung eines der folgenden Zeichen verursacht eine Ausnahme: Gleichheitszeichen (=)Semikolon (;) Komma (,)Zeilenumbruch (\n)Wagenrücklauf (\r) Tabstopp (\t) Leerzeichen Dollarzeichen ($) als erstes Zeichen- oder -<paramref name="value" /> ist null oder enthält ein Semikolon (;) oder ein Komma (), das nicht in doppelten Anführungszeichen mit Escapezeichen enthalten ist.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Cookie" />-Klasse mit dem angegebenen Namen, Wert und Pfad.</summary>
      <param name="name">Der Name der <see cref="T:System.Net.Cookie" />. Die <paramref name="name" />-Parameter dürfen folgenden Zeichen nicht enthalten: Gleichheitszeichen (=), Semikolon (;), Komma (,), Zeilenumbruch (\n), Wagenrücklauf (\r), Tabstopp (\t) und Leerzeichen. Das Dollarzeichen ($) darf nicht als erstes Zeichen verwendet werden.</param>
      <param name="value">Der Wert für <see cref="T:System.Net.Cookie" />. Der <paramref name="value" />-Parameter darf nur ein Semikolon (;) oder Komma () enthalten, wenn es in doppelten Anführungszeichen mit Escapezeichen enthalten ist.</param>
      <param name="path">Der Pfadteil eines URI, für den dieses Cookie gilt.</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> ist null oder eine leere Zeichenfolge (""). - oder -<paramref name="name" /> enthält ein nicht autorisiertes Zeichen. Die Verwendung eines der folgenden Zeichen verursacht eine Ausnahme: Gleichheitszeichen (=)Semikolon (;) Komma (,)Zeilenumbruch (\n)Wagenrücklauf (\r) Tabstopp (\t) Leerzeichen Dollarzeichen ($) als erstes Zeichen- oder -<paramref name="value" /> ist null oder enthält ein Semikolon (;) oder ein Komma (), das nicht in doppelten Anführungszeichen mit Escapezeichen enthalten ist.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Cookie" />-Klasse mit dem angegebenen Namen, Wert und Pfad und der angegebenen Domäne.</summary>
      <param name="name">Der Name der <see cref="T:System.Net.Cookie" />. Die <paramref name="name" />-Parameter dürfen folgenden Zeichen nicht enthalten: Gleichheitszeichen (=), Semikolon (;), Komma (,), Zeilenumbruch (\n), Wagenrücklauf (\r), Tabstopp (\t) und Leerzeichen. Das Dollarzeichen ($) darf nicht als erstes Zeichen verwendet werden.</param>
      <param name="value">Der Wert für <see cref="T:System.Net.Cookie" />. Der <paramref name="value" />-Parameter darf nur ein Semikolon (;) oder Komma () enthalten, wenn es in doppelten Anführungszeichen mit Escapezeichen enthalten ist.</param>
      <param name="path">Der Pfadteil eines URI, für den dieses Cookie gilt.</param>
      <param name="domain">Der Domänenteil eines URIs, für den dieses Cookie gilt.</param>
      <exception cref="T:System.Net.CookieException">
        <paramref name="name" /> ist null oder eine leere Zeichenfolge (""). - oder -<paramref name="name" /> enthält ein nicht autorisiertes Zeichen. Die Verwendung eines der folgenden Zeichen verursacht eine Ausnahme: Gleichheitszeichen (=)Semikolon (;) Komma (,)Zeilenumbruch (\n)Wagenrücklauf (\r) Tabstopp (\t) Leerzeichen Dollarzeichen ($) als erstes Zeichen- oder -<paramref name="value" /> ist null oder enthält ein Semikolon (;) oder ein Komma (), das nicht in doppelten Anführungszeichen mit Escapezeichen enthalten ist.</exception>
    </member>
    <member name="P:System.Net.Cookie.Comment">
      <summary>Ruft einen optionalen Kommentar ab, der die vorgesehene Verwendung des Cookies bereitstellt, oder legt ihn fest. </summary>
      <returns>Die vorgesehene Verwendung des Cookies.</returns>
    </member>
    <member name="P:System.Net.Cookie.CommentUri">
      <summary>Ruft einen Uniform Resource Identifier (URI)-Kommentar ab, den der Server für dieses <see cref="T:System.Net.Cookie" /> bereitstellt.</summary>
      <returns>Der URI-Kommentar, den der Server für dieses <see cref="T:System.Net.Cookie" /> bereitstellt</returns>
    </member>
    <member name="P:System.Net.Cookie.Discard">
      <summary>Ruft ein Wert ab, der angibt, ob der Client am Ende der aktuellen Sitzung den <see cref="T:System.Net.Cookie" /> verwerfen soll, oder legt diesen fest.</summary>
      <returns>true, wenn der Client das <see cref="T:System.Net.Cookie" /> am Ende der Sitzung verwerfen soll, andernfalls false. Der Standardwert ist false.</returns>
    </member>
    <member name="P:System.Net.Cookie.Domain">
      <summary>Ruft die Domäne eines Uniform Resource Identifiers (URI) ab, für die das Cookie gültig ist, oder legt diese fest.</summary>
      <returns>Die Domäne eines URIs, für die das Cookie gültig ist. Der Standardwert ist eine leere Zeichenfolge ("").</returns>
    </member>
    <member name="M:System.Net.Cookie.Equals(System.Object)">
      <summary>Bestimmt, ob zwei <see cref="T:System.Net.Cookie" />-Objekte gleich sind.</summary>
      <returns>true, wenn die beiden Cookie-Objekte gleich sind, andernfalls false.</returns>
      <param name="comparand">Das mit diesem <see cref="T:System.Net.Cookie" /> auf Gleichheit zu vergleichende <see cref="T:System.Net.Cookie" />.</param>
    </member>
    <member name="P:System.Net.Cookie.Expired">
      <summary>Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Net.Cookie" /> nicht mehr gültig ist, oder legt diesen fest.</summary>
      <returns>true, wenn das Cookie nicht mehr gültig ist, andernfalls false. Der Standardwert ist false.</returns>
    </member>
    <member name="P:System.Net.Cookie.Expires">
      <summary>Ruft das Ablaufdatum und die Ablaufzeit für das <see cref="T:System.Net.Cookie" /> ab, oder legt diese fest.</summary>
      <returns>Das Ablaufdatum und die Ablaufzeit für das <see cref="T:System.Net.Cookie" />. Der Standardwert ist <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="M:System.Net.Cookie.GetHashCode">
      <summary>Ruft den Hashcode für dieses <see cref="T:System.Net.Cookie" /> ab.</summary>
      <returns>Der Hashcode für diese <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.HttpOnly">
      <summary>Ruft einen Wert ab, der angibt, ob ein Seitenskript oder anderer aktiver Inhalt auf dieses Cookie zugreifen kann, oder legt diesen fest. </summary>
      <returns>true, um anzugeben, dass ein Seitenskript oder anderer aktiver Inhalt nicht auf dieses <see cref="T:System.Net.Cookie" /> zugreifen kann, andernfalls false. Der Standardwert ist false.</returns>
    </member>
    <member name="P:System.Net.Cookie.Name">
      <summary>Ruft den Namen dieses Cookies ab oder legt diesen fest.</summary>
      <returns>Der Name des Cookies.</returns>
      <exception cref="T:System.Net.CookieException">Der für einen Set-Vorgang angegebene Wert ist null oder eine leere Zeichenfolge (""). - oder -Der für einen Set-Vorgang angegebene Wert enthält ein nicht autorisiertes Zeichen. Die Verwendung eines der folgenden Zeichen verursacht eine Ausnahme: Gleichheitszeichen (=)Semikolon (;) Komma (,)Zeilenumbruch (\n)Wagenrücklauf (\r) Tabstopp (\t) Leerzeichen Dollarzeichen ($) als erstes Zeichen </exception>
    </member>
    <member name="P:System.Net.Cookie.Path">
      <summary>Ruft den Pfadteil eines Uniform Resource Identifiers (URI) ab, für den dieses Cookie gilt, oder legt diesen fest.</summary>
      <returns>Der Pfadteil eines URI, für den dieses Cookie gilt.</returns>
    </member>
    <member name="P:System.Net.Cookie.Port">
      <summary>Ruft eine Liste von Transmission Control Protocol (TCP)-Anschlüssen ab, für die dieses Cookie gilt, oder legt diese fest.</summary>
      <returns>Eine durch Trennzeichen getrennte Liste von TCP-Anschlussnummern, für die dieses Cookie gilt.</returns>
      <exception cref="T:System.Net.CookieException">
        <see cref="P:System.Net.Cookie.Port" /> ist auf ein falsches Format festgelegt.</exception>
    </member>
    <member name="P:System.Net.Cookie.Secure">
      <summary>Ruft einen Wert ab, der angibt, ob die Anforderung mit Secure Hypertext Transport Protocol (HTTPS) gesendet werden muss, damit das Cookie bei nachfolgenden Clientanforderungen enthalten ist.</summary>
      <returns>true, wenn die Anforderung mit HTTPS gesendet werden muss, damit das Cookie bei nachfolgenden Clientanforderungen enthalten ist, andernfalls false. Der Standardwert ist false.</returns>
    </member>
    <member name="P:System.Net.Cookie.TimeStamp">
      <summary>Ruft Datum und Uhrzeit der Erstellung dieses <see cref="T:System.Net.Cookie" /> ab.</summary>
      <returns>Datum und Uhrzeit der Erstellung des Cookies.</returns>
    </member>
    <member name="M:System.Net.Cookie.ToString">
      <summary>Gibt eine Zeichenfolgendarstellung des <see cref="T:System.Net.Cookie" /> zurück, das in einer HTTP-Cookieanforderung enthalten sein kann.</summary>
      <returns>Eine Zeichenfolgendarstellung des <see cref="T:System.Net.Cookie" />, das in einer HTTP-Cookieanforderung enthalten sein kann.</returns>
    </member>
    <member name="P:System.Net.Cookie.Value">
      <summary>Ruft den Wert der <see cref="T:System.Net.Cookie" /> ab oder legt diesen fest.</summary>
      <returns>Der Wert von <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Version">
      <summary>Ruft eine einzelne Ziffer ab, die die Version der HTTP-Zustandswartung angibt, der das Cookie entspricht, oder legt diese fest.</summary>
      <returns>Eine einzelne Ziffer, die die Version der HTTP-Zustandswartung angibt, der das Cookie entspricht. Der Standardwert ist 0. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kleiner als 0 (null).</exception>
    </member>
    <member name="T:System.Net.CookieCollection">
      <summary>Stellt eine Auflistung von <see cref="T:System.Net.Cookie" />-Objekten dar.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.CookieCollection" />-Klasse. </summary>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
      <summary>Fügt der Auflistung das angegebene <see cref="T:System.Net.Cookie" /> hinzu.</summary>
      <param name="cookie">Das der Auflistung hinzuzufügende <see cref="T:System.Net.Cookie" />.</param>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
      <summary>Fügt den Inhalt der angegebenen <see cref="T:System.Net.CookieCollection" /> dieser Auflistung hinzu.</summary>
      <param name="cookies">Die <see cref="T:System.Net.CookieCollection" />, die dieser Auflistung hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookies" /> ist null.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Array,System.Int32)">
      <summary>Kopiert den Inhalt dieser <see cref="T:System.Net.CookieCollection" /> ab dem angegebenen Index in das angegebene Array.</summary>
      <param name="array">Das Array, in das der Inhalt der Auflistung kopiert werden soll.</param>
      <param name="index">Der nullbasierte Index im Zielarray, an dem der Kopiervorgang startet.</param>
    </member>
    <member name="P:System.Net.CookieCollection.Count">
      <summary>Ruft die Anzahl von Cookies ab, die in der <see cref="T:System.Net.CookieCollection" /> enthalten sind.</summary>
      <returns>Die Anzahl von Cookies, die in der <see cref="T:System.Net.CookieCollection" /> enthalten sind.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.GetEnumerator">
      <summary>Ruft einen Enumerator ab, der die <see cref="T:System.Net.CookieCollection" /> durchläuft.  </summary>
      <returns>Ein Enumerator, der die <see cref="T:System.Net.CookieCollection" /> durchläuft.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Net.CookieCollection" /> schreibgeschützt ist.</summary>
      <returns>true, um anzugeben, dass die Auflistung schreibgeschützt ist, andernfalls false. Der Standardwert ist true.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsSynchronized">
      <summary>Ruft einen Wert ab, der angibt, ob der Zugriff auf die <see cref="T:System.Net.CookieCollection" /> threadsicher ist.</summary>
      <returns>true, wenn der Zugriff auf die <see cref="T:System.Net.CookieCollection" /> threadsicher ist, andernfalls false. Der Standardwert ist false.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.String)">
      <summary>Ruft das Cookie mit dem angegebenen Namen aus der Auflistung ab.</summary>
      <returns>Das Cookie mit dem angegebenen Namen.</returns>
      <param name="name">Der Name des Cookies, das aus der Auflistung abgerufen werden soll.</param>
    </member>
    <member name="P:System.Net.CookieCollection.SyncRoot">
      <summary>Ruft ein Objekt ab, mit dem der Zugriff auf die <see cref="T:System.Net.CookieCollection" /> synchronisiert werden kann.</summary>
      <returns>Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Net.CookieCollection" /> synchronisiert werden kann.</returns>
    </member>
    <member name="T:System.Net.CookieContainer">
      <summary>Stellt einen Container für eine Auflistung von <see cref="T:System.Net.CookieCollection" />-Objekten bereit. </summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.CookieContainer" />-Klasse. </summary>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
      <summary>Fügt das angegebene <see cref="T:System.Net.Cookie" /> mit dem angegebenen Uniform Resource Identifier (URI) zu diesem <see cref="T:System.Net.CookieContainer" /> hinzu.</summary>
      <param name="uri">Der URI des Cookies, das diesem <see cref="T:System.Net.CookieContainer" /> hinzugefügt werden soll.</param>
      <param name="cookie">Das <see cref="T:System.Net.Cookie" />, das diesem <see cref="T:System.Net.CookieContainer" /> hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> ist NULL. </exception>
      <exception cref="T:System.ArgumentException">Die Domäne für <paramref name="cookie" /> ist null. </exception>
      <exception cref="T:System.Net.CookieException">
        <paramref name="cookie" /> ist größer als <see cref="P:System.Net.CookieContainer.MaxCookieSize" />. - oder - die Domäne für <paramref name="cookie" /> ist kein gültiger URI. </exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
      <summary>Fügt den Inhalt der angegebenen <see cref="T:System.Net.CookieCollection" /> mit dem angegebenen Uniform Resource Identifier (URI) zu diesem <see cref="T:System.Net.CookieContainer" /> hinzu.</summary>
      <param name="uri">Der URI der <see cref="T:System.Net.CookieCollection" />, die diesem <see cref="T:System.Net.CookieContainer" /> hinzugefügt werden soll.</param>
      <param name="cookies">Die <see cref="T:System.Net.CookieCollection" />, die die Cookies enthält, die diesem <see cref="T:System.Net.CookieContainer" /> hinzugefügt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookies" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Die Domäne für eines der Cookieobjekte in <paramref name="cookies" /> ist null. </exception>
      <exception cref="T:System.Net.CookieException">Eines der Cookieobjekte in <paramref name="cookies" /> enthält eine ungültige Domäne. </exception>
    </member>
    <member name="P:System.Net.CookieContainer.Capacity">
      <summary>Ruft die Anzahl von <see cref="T:System.Net.Cookie" />-Objekten ab, die dieser <see cref="T:System.Net.CookieContainer" /> enthalten kann.</summary>
      <returns>Die Anzahl von <see cref="T:System.Net.Cookie" />-Objekten, die dieser <see cref="T:System.Net.CookieContainer" /> enthalten kann. Der Standardwert ist 300.</returns>
    </member>
    <member name="P:System.Net.CookieContainer.Count">
      <summary>Ruft die Anzahl von <see cref="T:System.Net.Cookie" />-Objekten ab, die dieser <see cref="T:System.Net.CookieContainer" /> enthält.</summary>
      <returns>Die Anzahl von <see cref="T:System.Net.Cookie" />-Objekten, die dieser <see cref="T:System.Net.CookieContainer" /> enthält.</returns>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLengthLimit">
      <summary>Stellt den Standardwert für die maximale Größe der <see cref="T:System.Net.Cookie" />-Objekte, die der <see cref="T:System.Net.CookieContainer" /> enthalten kann, in Bytes dar. Dieses Feld ist konstant.</summary>
      <returns>Gibt immer 4096 zurück.</returns>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLimit">
      <summary>Stellt den Standardwert für die maximale Anzahl von <see cref="T:System.Net.Cookie" />-Objekten dar, die der <see cref="T:System.Net.CookieContainer" /> enthalten kann. Dieses Feld ist konstant. </summary>
      <returns>Gibt immer 300 zurück.</returns>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit">
      <summary>Stellt den Standardwert für die maximale Anzahl von <see cref="T:System.Net.Cookie" />-Objekten dar, auf die der <see cref="T:System.Net.CookieContainer" /> pro Domäne verweisen kann. Dieses Feld ist konstant.</summary>
      <returns>Gibt immer 20 zurück.</returns>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
      <summary>Ruft den HTTP-Cookieheader ab, der Cookies enthält, die den angegebenen Uniform Resource Identifier (URI) betreffen.</summary>
      <returns>Eine Zeichenfolge, die den Cookieheader darstellt, der dem angegebenen URI zugeordnet ist.</returns>
      <param name="uri">Der URI, für den Cookies abgerufen werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ist null.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookies(System.Uri)">
      <summary>Ruft die <see cref="T:System.Net.CookieCollection" /> ab, die dem angegebenen Uniform Resource Identifier (URI) zugeordnet ist.</summary>
      <returns>Die Cookieauflistung, die dem angegebenen URI zugeordnet ist.</returns>
      <param name="uri">Der URI, für den die <see cref="T:System.Net.CookieCollection" /> abgerufen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ist null.</exception>
    </member>
    <member name="P:System.Net.CookieContainer.MaxCookieSize">
      <summary>Ruft die maximale Cookielänge für Cookies im <see cref="T:System.Net.CookieContainer" /> ab.</summary>
      <returns>Die maximale Cookielänge für Cookies im <see cref="T:System.Net.CookieContainer" />. Der Standardwert ist 4096.</returns>
    </member>
    <member name="P:System.Net.CookieContainer.PerDomainCapacity">
      <summary>Ruft die Anzahl von <see cref="T:System.Net.Cookie" />-Instanzen ab, die ein <see cref="T:System.Net.CookieContainer" /> pro Domäne enthalten kann, oder legt diese fest.</summary>
      <returns>Die Anzahl von <see cref="T:System.Net.Cookie" />-Instanzen, die ein <see cref="T:System.Net.CookieContainer" /> pro Domäne enthalten kann. Der Standardwert ist 20.</returns>
    </member>
    <member name="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
      <summary>Erstellt Cookieinstanzen für die Cookies, die im HTTP-Cookieheader angegeben sind, und fügt diese dem <see cref="T:System.Net.CookieContainer" /> hinzu, der dem angegebenen Uniform Resource Identifier (URI) zugeordnet ist.</summary>
      <param name="uri">Der URI, der dem Cookiecontainer zugeordnet ist.</param>
      <param name="cookieHeader">Der HTTP-Header, der Cookies enthält, die dem <see cref="T:System.Net.CookieContainer" /> hinzugefügt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ist null.- oder -<paramref name="cookieHeader" /> ist null.</exception>
      <exception cref="T:System.Net.CookieException">Eines der Cookies ist ungültig. - oder - Beim Hinzufügen eines der Cookies zum Container ist ein Fehler aufgetreten. </exception>
    </member>
    <member name="T:System.Net.CookieException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn ein <see cref="T:System.Net.Cookie" /> zu einer <see cref="T:System.Net.CookieCollection" /> hinzugefügt wird.</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.CookieException" />-Klasse. </summary>
    </member>
    <member name="T:System.Net.DnsEndPoint">
      <summary>Stellt einen Netzwerkendpunkt als Hostnamen oder eine Zeichenfolgendarstellung einer IP-Adresse und einer Anschlussnummer dar.</summary>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.DnsEndPoint" />-Klasse mit dem Hostnamen oder der Zeichenfolgendarstellung einer IP-Adresse und einer Anschlussnummer.</summary>
      <param name="host">Der Hostname oder eine Zeichenfolgendarstellung der IP-Adresse.</param>
      <param name="port">Die der <paramref name="address" /> zugeordnete Anschlussnummer oder 0, um einen beliebigen verfügbaren Anschluss anzugeben. <paramref name="port" /> wird in der Reihenfolge der Hosts angegeben.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="host" />-Parameter ist eine leere Zeichenfolge.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="host" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> ist kleiner als 0. - oder - <paramref name="port" /> ist größer als 0xffff. </exception>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.DnsEndPoint" />-Klasse mit dem Hostnamen oder der Zeichenfolgendarstellung einer IP-Adresse, einer Anschlussnummer und der Adressfamilie.</summary>
      <param name="host">Der Hostname oder eine Zeichenfolgendarstellung der IP-Adresse.</param>
      <param name="port">Die der <paramref name="address" /> zugeordnete Anschlussnummer oder 0, um einen beliebigen verfügbaren Anschluss anzugeben. <paramref name="port" /> wird in der Reihenfolge der Hosts angegeben.</param>
      <param name="addressFamily">Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="host" />-Parameter ist eine leere Zeichenfolge. - oder - Der angegebene <paramref name="addressFamily" />-Parameter ist als <see cref="F:System.Net.Sockets.AddressFamily.Unknown" /> angegeben.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="host" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> ist kleiner als 0. - oder - <paramref name="port" /> ist größer als 0xffff. </exception>
    </member>
    <member name="P:System.Net.DnsEndPoint.AddressFamily">
      <summary>Ruft die IP-Adressfamilie ab.</summary>
      <returns>Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.Equals(System.Object)">
      <summary>Vergleicht zwei <see cref="T:System.Net.DnsEndPoint" />-Objekte.</summary>
      <returns>true, wenn die beiden <see cref="T:System.Net.DnsEndPoint" />-Instanzen gleich sind, andernfalls false.</returns>
      <param name="comparand">Eine <see cref="T:System.Net.DnsEndPoint" />-Instanz, die mit der aktuellen Instanz verglichen werden soll.</param>
    </member>
    <member name="M:System.Net.DnsEndPoint.GetHashCode">
      <summary>Gibt einen Hashwert für einen <see cref="T:System.Net.DnsEndPoint" /> zurück.</summary>
      <returns>Ein ganzzahliger Hashwert für den <see cref="T:System.Net.DnsEndPoint" />.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Host">
      <summary>Ruft den Hostnamen oder die Zeichenfolgendarstellung der IP-Adresse des Hosts ab.</summary>
      <returns>Ein Hostname oder eine Zeichenfolgendarstellung der IP-Adresse.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Port">
      <summary>Ruft die Anschlussnummer des <see cref="T:System.Net.DnsEndPoint" /> ab.</summary>
      <returns>Ein Ganzzahlwert im Bereich von 0 bis 0xffff, der die Anschlussnummer des <see cref="T:System.Net.DnsEndPoint" /> angibt.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.ToString">
      <summary>Gibt den Hostnamen oder die Zeichenfolgendarstellung der IP-Adresse und der Anschlussnummer des <see cref="T:System.Net.DnsEndPoint" /> zurück.</summary>
      <returns>Eine Zeichenfolge mit der Adressfamilie, dem Hostnamen oder der IP-Adresszeichenfolge und der Anschlussnummer des angegebenen <see cref="T:System.Net.DnsEndPoint" />.</returns>
    </member>
    <member name="T:System.Net.DownloadProgressChangedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Net.WebClient.DownloadProgressChanged" />-Ereignis einer <see cref="T:System.Net.WebClient" /> bereit.</summary>
    </member>
    <member name="P:System.Net.DownloadProgressChangedEventArgs.BytesReceived">
      <summary>Ruft die Anzahl empfangener Bytes ab.</summary>
      <returns>Ein <see cref="T:System.Int64" />-Wert, der die Anzahl empfangener Bytes angibt.</returns>
    </member>
    <member name="P:System.Net.DownloadProgressChangedEventArgs.TotalBytesToReceive">
      <summary>Ruft die Gesamtzahl der Bytes ab, die bei einem Download von <see cref="T:System.Net.WebClient" />-Daten übertragen werden.</summary>
      <returns>Ein <see cref="T:System.Int64" />-Wert, der die Anzahl von Bytes angibt, die empfangen werden.</returns>
    </member>
    <member name="T:System.Net.DownloadProgressChangedEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.Net.WebClient.DownloadProgressChanged" />-Ereignisses eines <see cref="T:System.Net.WebClient" />-Objekts dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Eine Instanz von <see cref="T:System.Net.DownloadProgressChangedEventArgs" />, die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Net.DownloadStringCompletedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Net.WebClient.DownloadStringCompleted" />-Ereignis bereit. </summary>
    </member>
    <member name="P:System.Net.DownloadStringCompletedEventArgs.Result">
      <summary>Ruft die von einer <see cref="Overload:System.Net.WebClient.DownloadStringAsync" />-Methode heruntergeladenen Daten ab.</summary>
      <returns>Eine <see cref="T:System.String" />, die die heruntergeladenen Daten enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Die asynchrone Anforderung wurde abgebrochen. </exception>
    </member>
    <member name="T:System.Net.DownloadStringCompletedEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.Net.WebClient.DownloadStringCompleted" />-Ereignisses eines <see cref="T:System.Net.WebClient" />-Objekts dar. </summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Eine Instanz der <see cref="T:System.Net.DownloadStringCompletedEventArgs" />-Klasse, die die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Net.EndPoint">
      <summary>Gibt eine Netzwerkadresse an. Dies ist eine abstract-Klasse.</summary>
    </member>
    <member name="M:System.Net.EndPoint.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.EndPoint" />-Klasse.</summary>
    </member>
    <member name="P:System.Net.EndPoint.AddressFamily">
      <summary>Ruft die Adressfamilie ab, der der Endpunkt angehört.</summary>
      <returns>Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte.</returns>
      <exception cref="T:System.NotImplementedException">Wenn die Methode nicht in einer abhängigen Klasse überschrieben wird, werden alle Versuche unternommen, die Eigenschaft abzurufen oder festzulegen. </exception>
    </member>
    <member name="M:System.Net.EndPoint.Create(System.Net.SocketAddress)">
      <summary>Erstellt eine <see cref="T:System.Net.EndPoint" />-Instanz aus einer <see cref="T:System.Net.SocketAddress" />-Instanz.</summary>
      <returns>Eine neue <see cref="T:System.Net.EndPoint" />-Instanz, die aus der angegebenen <see cref="T:System.Net.SocketAddress" />-Instanz initialisiert wird.</returns>
      <param name="socketAddress">Die Socketadresse, die als Endpunkt für eine Verbindung verwendet wird.</param>
      <exception cref="T:System.NotImplementedException">Wenn die Methode nicht in einer Nachfolgerklasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen. </exception>
    </member>
    <member name="M:System.Net.EndPoint.Serialize">
      <summary>Serialisiert Endpunktinformationen in eine <see cref="T:System.Net.SocketAddress" />-Instanz.</summary>
      <returns>Eine <see cref="T:System.Net.SocketAddress" />-Instanz, die die Endpunktinformationen enthält.</returns>
      <exception cref="T:System.NotImplementedException">Wenn die Methode nicht in einer Nachfolgerklasse überschrieben wird, werden alle Versuche unternommen, auf diese Methode zuzugreifen. </exception>
    </member>
    <member name="T:System.Net.HttpRequestHeader">
      <summary>Die HTTP-Header, die in einer Clientanforderung angegeben werden können.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.CacheControl">
      <summary>Der Cache-Control-Header gibt Direktiven an, die von allen Cachesteuerungsmechanismen in der Anforderungs-/Antwortkette befolgt werden müssen.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Connection">
      <summary>Der Connection-Header gibt Optionen an, die für eine bestimmte Verbindung gewünscht werden.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Date">
      <summary>Der Date-Header gibt das Datum und die Uhrzeit der Anforderungserstellung an.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.KeepAlive">
      <summary>Der Keep-Alive-Header gibt einen Parameter an, der zum Beibehalten einer permanenten Verbindung verwendet wird.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Pragma">
      <summary>Der Pragma-Header gibt implementierungsspezifische Direktiven an, die auf jeden Agenten in der Anforderungs-/Antwortkette angewendet werden können.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Trailer">
      <summary>Der Trailer-Header gibt die Headerfelder an, die im Nachspann einer mit segmentierter Übertragungscodierung codierten Meldung vorhanden sind.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.TransferEncoding">
      <summary>Der Transfer-Encoding-Header gibt ggf. den Typ der Transformation an, der auf den Meldungstext angewendet wurde.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Upgrade">
      <summary>Der Upgrade-Header gibt zusätzliche Kommunikationsprotokolle an, die der Client unterstützt.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Via">
      <summary>Der Via-Header gibt Zwischenprotokolle an, die von Gateway- und Proxy-Agenten verwendet werden müssen.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Warning">
      <summary>Der Warning-Header gibt zusätzliche Informationen über den Status oder die Transformation einer Meldung an, die möglicherweise nicht in der Meldung wiedergegeben werden.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Allow">
      <summary>Der Allow-Header gibt den Satz unterstützter HTTP-Methoden an.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentLength">
      <summary>Der Content-Length-Header gibt die Länge der zugehörigen Textdaten in Bytes an.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentType">
      <summary>Der Content-Type-Header gibt den MIME-Typ der zugehörigen Textdaten an.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentEncoding">
      <summary>Der Content-Encoding-Header gibt die Codierungen an, die auf die zugehörigen Textdaten angewendet wurden.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentLanguage">
      <summary>Der Content-Language-Header gibt die natürlichen Sprachen der zugehörigen Textdaten an.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentLocation">
      <summary>Der Content-Location-Header gibt einen URI an, von dem der zugehörige Text abgerufen werden kann.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentMd5">
      <summary>Der Content-MD5-Header gibt den MD5-Digest der zugehörigen Textdaten an, um eine umfassende Integritätsprüfung von Meldungen zu ermöglichen.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ContentRange">
      <summary>Der Content-Range-Header gibt den Bereich im gesamten Text an, auf den die zugehörigen Teiltextdaten angewendet werden sollen.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Expires">
      <summary>Der Expires-Header gibt Datum und Uhrzeit des Zeitpunkts an, nach dem die zugehörigen Textdaten als veraltet angesehen werden müssen.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.LastModified">
      <summary>Der Last-Modified-Header gibt das Datum und die Uhrzeit des Zeitpunkts an, zu dem die Textdaten zuletzt geändert wurden.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Accept">
      <summary>Der Accept-Header gibt die MIME-Typen an, die für die Antwort zulässig sind.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.AcceptCharset">
      <summary>Der Accept-Charset-Header gibt die Zeichensätze an, die für die Antwort zulässig sind.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.AcceptEncoding">
      <summary>Der Accept-Encoding-Header gibt die Inhaltscodierungen an, die für die Antwort zulässig sind.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.AcceptLanguage">
      <summary>Der Accept-Language-Header gibt die natürlichen Sprachen an, die für die Antwort bevorzugt werden.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Authorization">
      <summary>Der Authorization-Header gibt die Anmeldeinformationen an, die der Client bereitstellt, um sich beim Server zu authentifizieren.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Cookie">
      <summary>Der Cookie-Hader gibt die für den Server bereitgestellten Cookiedaten an.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Expect">
      <summary>Der Expect-Header gibt bestimmtes Serververhalten an, das für den Client erforderlich ist.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.From">
      <summary>Der From-Header gibt eine Internet-E-Mail-Adresse für den Benutzer an, der den anfordernden Benutzer-Agent steuert.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Host">
      <summary>Der Host-Header gibt den Hostnamen und die Anschlussnummer der angeforderten Ressource an.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfMatch">
      <summary>Der If-Match-Header gibt an, dass der angeforderte Vorgang nur ausgeführt werden soll, wenn die auf dem Client zwischengespeicherte Kopie der angegebenen Ressource aktuell ist.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfModifiedSince">
      <summary>Der If-Modified-Header gibt an, dass der angeforderte Vorgang nur ausgeführt werden soll, wenn die angeforderte Ressource seit dem angegebenen Datum und der angegebenen Uhrzeit geändert wurde.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfNoneMatch">
      <summary>Der If-None-Match-Header gibt an, dass der angeforderte Vorgang nur ausgeführt werden soll, wenn keine der auf dem Client zwischengespeicherten Kopien der angegebenen Ressource aktuell ist.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfRange">
      <summary>Der If-Range-Header gibt an, dass nur der angegebene Bereich der angeforderten Ressource gesendet werden soll, wenn die auf dem Client zwischengespeicherte Kopie aktuell ist.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.IfUnmodifiedSince">
      <summary>Der If-Unmodified-Since-Header gibt an, dass der angeforderte Vorgang nur ausgeführt werden soll, wenn die angeforderte Ressource seit dem angegebenen Datum und der angegebenen Uhrzeit nicht geändert wurde.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.MaxForwards">
      <summary>Der Max-Forwards-Header gibt eine ganze Zahl an, die die restliche Anzahl möglicher Weiterleitungen dieser Anforderung darstellt.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.ProxyAuthorization">
      <summary>Der Proxy-Authorization-Header gibt die Anmeldeinformationen an, die der Client bereitstellt, um sich als Proxy zu authentifizieren.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Referer">
      <summary>Der Referer-Header gibt den URI der Ressource an, von der der Anforderungs-URI abgerufen wurde.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Range">
      <summary>Der Range-Header gibt die Teilbereiche der Antwort an, die für den Client statt der gesamten Antwort zurückgegeben werden müssen.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Te">
      <summary>Der TE-Header gibt die Übertragungscodierungen an, die für die Antwort zulässig sind.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.Translate">
      <summary>Der Translate-Header ist eine Microsoft-Erweiterung der HTTP-Spezifikation, die in Verbindung mit der WebDAV-Funktionalität verwendet wird.</summary>
    </member>
    <member name="F:System.Net.HttpRequestHeader.UserAgent">
      <summary>Der User-Agent-Header gibt Informationen über den Client-Agent an.</summary>
    </member>
    <member name="T:System.Net.HttpStatusCode">
      <summary>Enthält die Werte von Statuscodes, die für HTTP definiert sind.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Continue">
      <summary>Äquivalent zu HTTP-Status 100. <see cref="F:System.Net.HttpStatusCode.Continue" /> gibt an, dass der Client mit der Anforderung fortfahren kann.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SwitchingProtocols">
      <summary>Äquivalent zu HTTP-Status 101. <see cref="F:System.Net.HttpStatusCode.SwitchingProtocols" /> gibt an, dass die Protokollversion bzw. das Protokoll geändert wird.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.OK">
      <summary>Äquivalent zu HTTP-Status 200. <see cref="F:System.Net.HttpStatusCode.OK" /> gibt an, dass die Anforderung erfolgreich war und die angeforderten Informationen in der Antwort enthalten sind. Dieser Statuscode wird am häufigsten empfangen.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Created">
      <summary>Äquivalent zu HTTP-Status 201. <see cref="F:System.Net.HttpStatusCode.Created" /> gibt an, dass durch die Anforderung eine neue Ressource vor dem Senden der Antwort erstellt wurde.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Accepted">
      <summary>Äquivalent zu HTTP-Status 202. <see cref="F:System.Net.HttpStatusCode.Accepted" /> gibt an, dass die Anforderung akzeptiert wurde und weiter verarbeitet werden kann.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NonAuthoritativeInformation">
      <summary>Äquivalent zu HTTP-Status 203. <see cref="F:System.Net.HttpStatusCode.NonAuthoritativeInformation" /> gibt an, dass die zurückgegebenen Metadateninformationen statt vom Ausgangsserver aus einer zwischengespeicherten Kopie stammen und deshalb fehlerhaft sein können.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NoContent">
      <summary>Äquivalent zu HTTP-Status 204. <see cref="F:System.Net.HttpStatusCode.NoContent" /> gibt an, dass die Anforderung erfolgreich verarbeitet wurde und eine leere Antwort ergeben hat.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ResetContent">
      <summary>Äquivalent zu HTTP-Status 205. <see cref="F:System.Net.HttpStatusCode.ResetContent" /> gibt an, dass der Client die aktuelle Ressource zurücksetzen (nicht erneut laden) muss.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PartialContent">
      <summary>Äquivalent zu HTTP-Status 206. <see cref="F:System.Net.HttpStatusCode.PartialContent" /> gibt an, dass entsprechend der Anforderung über eine GET-Methode, die einen Bytebereich enthält, ein unvollständiger Inhalt in der Antwort zurückgegeben wurde.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultipleChoices">
      <summary>Äquivalent zu HTTP-Status 300. <see cref="F:System.Net.HttpStatusCode.MultipleChoices" /> gibt an, dass für die angeforderten Informationen mehrere Darstellungen vorhanden sind. Üblicherweise wird dieser Status als Umleitung behandelt und der Inhalt des Location-Headers befolgt, der dieser Antwort zugeordnet ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Ambiguous">
      <summary>Äquivalent zu HTTP-Status 300. <see cref="F:System.Net.HttpStatusCode.Ambiguous" /> gibt an, dass für die angeforderten Informationen mehrere Darstellungen vorhanden sind. Üblicherweise wird dieser Status als Umleitung behandelt und der Inhalt des Location-Headers befolgt, der dieser Antwort zugeordnet ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MovedPermanently">
      <summary>Äquivalent zu HTTP-Status 301. <see cref="F:System.Net.HttpStatusCode.MovedPermanently" /> gibt an, dass die angeforderten Informationen zu dem URI verschoben wurden, der im Location-Header angegeben ist. Als Standardaktion wird beim Erhalt dieses Status der Location-Header befolgt, der der Antwort zugeordnet ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Moved">
      <summary>Äquivalent zu HTTP-Status 301. <see cref="F:System.Net.HttpStatusCode.Moved" /> gibt an, dass die angeforderten Informationen zu dem URI verschoben wurden, der im Location-Header angegeben ist. Als Standardaktion wird beim Erhalt dieses Status der Location-Header befolgt, der der Antwort zugeordnet ist. Wenn die ursprüngliche Anforderungsmethode POST war, wird für die umgeleitete Anforderung die GET-Methode verwendet.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Found">
      <summary>Äquivalent zu HTTP-Status 302. <see cref="F:System.Net.HttpStatusCode.Found" /> gibt an, dass sich die angeforderten Informationen unter dem im Location-Header angegebenen URI befinden. Als Standardaktion wird beim Erhalt dieses Status der Location-Header befolgt, der der Antwort zugeordnet ist. Wenn die ursprüngliche Anforderungsmethode POST war, wird für die umgeleitete Anforderung die GET-Methode verwendet.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Redirect">
      <summary>Äquivalent zu HTTP-Status 302. <see cref="F:System.Net.HttpStatusCode.Redirect" /> gibt an, dass sich die angeforderten Informationen unter dem im Location-Header angegebenen URI befinden. Als Standardaktion wird beim Erhalt dieses Status der Location-Header befolgt, der der Antwort zugeordnet ist. Wenn die ursprüngliche Anforderungsmethode POST war, wird für die umgeleitete Anforderung die GET-Methode verwendet.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SeeOther">
      <summary>Äquivalent zu HTTP-Status 303. <see cref="F:System.Net.HttpStatusCode.SeeOther" /> leitet den Client als Ergebnis eines POST-Vorgangs automatisch zum im Location-Header angegebenen URI um. Die Anforderung an die vom Location-Header angegebene Ressource wird mit GET ausgeführt.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectMethod">
      <summary>Äquivalent zu HTTP-Status 303. <see cref="F:System.Net.HttpStatusCode.RedirectMethod" /> leitet den Client als Ergebnis eines POST-Vorgangs automatisch zum im Location-Header angegebenen URI um. Die Anforderung an die vom Location-Header angegebene Ressource wird mit GET ausgeführt.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotModified">
      <summary>Äquivalent zu HTTP-Status 304. <see cref="F:System.Net.HttpStatusCode.NotModified" /> gibt an, dass die zwischengespeicherte Kopie des Clients aktuell ist. Der Inhalt der Ressource wird nicht übertragen.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UseProxy">
      <summary>Äquivalent zu HTTP-Status 305. <see cref="F:System.Net.HttpStatusCode.UseProxy" /> gibt an, dass für die Anforderung der Proxyserver an dem im Location-Header angegebenen URI zu verwenden ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unused">
      <summary>Äquivalent zu HTTP-Status 306. <see cref="F:System.Net.HttpStatusCode.Unused" /> ist eine vorgeschlagene Erweiterung der HTTP/1.1-Spezifikation, die nicht vollständig spezifiziert ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TemporaryRedirect">
      <summary>Äquivalent zu HTTP-Status 307. <see cref="F:System.Net.HttpStatusCode.TemporaryRedirect" /> gibt an, dass sich die Anforderungsinformationen unter dem im Location-Header angegebenen URI befinden. Als Standardaktion wird beim Erhalt dieses Status der Location-Header befolgt, der der Antwort zugeordnet ist. Wenn die ursprüngliche Anforderungsmethode POST war, wird für die umgeleitete Anforderung ebenfalls die POST-Methode verwendet.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectKeepVerb">
      <summary>Äquivalent zu HTTP-Status 307. <see cref="F:System.Net.HttpStatusCode.RedirectKeepVerb" /> gibt an, dass sich die Anforderungsinformationen unter dem im Location-Header angegebenen URI befinden. Als Standardaktion wird beim Erhalt dieses Status der Location-Header befolgt, der der Antwort zugeordnet ist. Wenn die ursprüngliche Anforderungsmethode POST war, wird für die umgeleitete Anforderung ebenfalls die POST-Methode verwendet.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadRequest">
      <summary>Äquivalent zu HTTP-Status 400. <see cref="F:System.Net.HttpStatusCode.BadRequest" /> gibt an, dass die Anforderung vom Server nicht interpretiert werden konnte. <see cref="F:System.Net.HttpStatusCode.BadRequest" /> wird gesendet, wenn kein anderer Fehler zutrifft oder der genaue Fehler nicht bekannt bzw. für diesen kein Fehlercode definiert ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unauthorized">
      <summary>Äquivalent zu HTTP-Status 401. <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> gibt an, dass die angeforderte Ressource eine Authentifizierung erfordert. Der WWW-Authenticate-Header enthält die Details zum Durchführen der Authentifizierung.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PaymentRequired">
      <summary>Äquivalent zu HTTP-Status 402. <see cref="F:System.Net.HttpStatusCode.PaymentRequired" /> ist für eine zukünftige Verwendung reserviert.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Forbidden">
      <summary>Äquivalent zu HTTP-Status 403. <see cref="F:System.Net.HttpStatusCode.Forbidden" /> gibt an, dass der Server das Erfüllen der Anforderung verweigert.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotFound">
      <summary>Äquivalent zu HTTP-Status 404. <see cref="F:System.Net.HttpStatusCode.NotFound" /> gibt an, dass die angeforderte Ressource auf dem Server nicht vorhanden ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MethodNotAllowed">
      <summary>Äquivalent zu HTTP-Status 405. <see cref="F:System.Net.HttpStatusCode.MethodNotAllowed" /> gibt an, dass die Anforderungsmethode (POST oder GET) für die angeforderte Ressource nicht zulässig ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotAcceptable">
      <summary>Äquivalent zu HTTP-Status 406. <see cref="F:System.Net.HttpStatusCode.NotAcceptable" /> gibt an, dass der Client mit Accept-Headern angegeben hat, dass er keine der verfügbaren Darstellungen der Ressource akzeptiert.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired">
      <summary>Äquivalent zu HTTP-Status 407. <see cref="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired" /> gibt an, dass der angeforderte Proxy eine Authentifizierung erfordert. Der Proxy-Authenticate-Header enthält die Details zum Durchführen der Authentifizierung.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestTimeout">
      <summary>Äquivalent zu HTTP-Status 408. <see cref="F:System.Net.HttpStatusCode.RequestTimeout" /> gibt an, dass der Client keine Anforderung in dem Zeitraum gesendet hat, in dem der Server diese erwartet hat.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Conflict">
      <summary>Äquivalent zu HTTP-Status 409. <see cref="F:System.Net.HttpStatusCode.Conflict" /> gibt an, dass die Anforderung wegen eines Konflikts auf dem Server nicht ausgeführt werden konnte.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Gone">
      <summary>Äquivalent zu HTTP-Status 410. <see cref="F:System.Net.HttpStatusCode.Gone" /> gibt an, dass die angeforderte Ressource nicht mehr verfügbar ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LengthRequired">
      <summary>Äquivalent zu HTTP-Status 411. <see cref="F:System.Net.HttpStatusCode.LengthRequired" /> gibt an, dass der angeforderte Content-Length-Header fehlt.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionFailed">
      <summary>Äquivalent zu HTTP-Status 412. <see cref="F:System.Net.HttpStatusCode.PreconditionFailed" /> gibt an, dass eine für diese Anforderung festgelegte Bedingung nicht erfüllt wurde und die Anforderung nicht ausgeführt werden kann. Bedingungen werden über Header für bedingte Anforderungen festgelegt (z. B. If-Match, If-None-Match oder If-Unmodified-Since).</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestEntityTooLarge">
      <summary>Äquivalent zu HTTP-Status 413. <see cref="F:System.Net.HttpStatusCode.RequestEntityTooLarge" /> gibt an, dass die Anforderung zu umfangreich ist und vom Server nicht verarbeitet werden kann.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestUriTooLong">
      <summary>Äquivalent zu HTTP-Status 414. <see cref="F:System.Net.HttpStatusCode.RequestUriTooLong" /> gibt an, dass der URI zu lang ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnsupportedMediaType">
      <summary>Äquivalent zu HTTP-Status 415. <see cref="F:System.Net.HttpStatusCode.UnsupportedMediaType" /> gibt an, dass es sich bei der Anforderung um einen nicht unterstützten Typ handelt.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
      <summary>Äquivalent zu HTTP-Status 416. <see cref="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable" /> gibt an, dass der von der Ressource angeforderte Datenbereich nicht zurückgegeben werden kann, da der Bereichsanfang vor dem Anfang der Ressource oder das Bereichsende hinter dem Ende der Ressource liegt.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ExpectationFailed">
      <summary>Äquivalent zu HTTP-Status 417. <see cref="F:System.Net.HttpStatusCode.ExpectationFailed" /> gibt an, dass eine im Expect-Header angegebene Erwartung nicht vom Server erfüllt werden konnte.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InternalServerError">
      <summary>Äquivalent zu HTTP-Status 500. <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> gibt an, dass auf dem Server ein allgemeiner Fehler aufgetreten ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotImplemented">
      <summary>Äquivalent zu HTTP-Status 501. <see cref="F:System.Net.HttpStatusCode.NotImplemented" /> gibt an, dass der Server die angeforderte Funktion nicht unterstützt.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadGateway">
      <summary>Äquivalent zu HTTP-Status 502. <see cref="F:System.Net.HttpStatusCode.BadGateway" /> gibt an, dass ein zwischengeschalteter Proxyserver eine fehlerhafte Antwort von einem anderen Proxyserver oder dem Ausgangsserver erhalten hat.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ServiceUnavailable">
      <summary>Äquivalent zu HTTP-Status 503. <see cref="F:System.Net.HttpStatusCode.ServiceUnavailable" /> gibt an, dass der Server vorübergehend nicht verfügbar ist, i. d. R. aufgrund einer zu großen Serverlast oder aus Wartungsgründen.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.GatewayTimeout">
      <summary>Äquivalent zu HTTP-Status 504. <see cref="F:System.Net.HttpStatusCode.GatewayTimeout" /> gibt an, dass auf einem zwischengeschalteten Proxyserver beim Warten auf die Antwort von einem anderen Proxyserver oder dem Ausgangsserver ein Zeitlimit aufgetreten ist.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.HttpVersionNotSupported">
      <summary>Äquivalent zu HTTP-Status 505. <see cref="F:System.Net.HttpStatusCode.HttpVersionNotSupported" /> gibt an, dass die angeforderte HTTP-Version vom Server nicht unterstützt wird.</summary>
    </member>
    <member name="T:System.Net.HttpWebRequest">
      <summary>Stellt eine HTTP-spezifische Implementierung der <see cref="T:System.Net.WebRequest" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Net.HttpWebRequest.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.HttpWebRequest" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.HttpWebRequest.Abort">
      <summary>Bricht eine Anforderung an eine Internetressource ab.</summary>
      <exception cref="T:System.NotImplementedException">Diese Methode ist nicht implementiert. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Accept">
      <summary>Ruft den Wert des Accept-HTTP-Headers ab oder legt diesen fest.</summary>
      <returns>Der Wert des Accept-HTTP-Headers. Der Standardwert ist NULL.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowAutoRedirect">
      <summary>Ruft einen Wert ab, der angibt, ob die Anforderung Umleitungsantworten folgen soll, oder legt diesen fest.</summary>
      <returns>true, wenn die Anforderung Umleitungsantworten der Internetressource automatisch folgen soll, andernfalls false. Der Standardwert ist true.</returns>
      <exception cref="T:System.NotImplementedException">Diese Eigenschaft ist nicht implementiert. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowReadStreamBuffering">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob die aus der Internetressource gelesenen Daten gepuffert werden sollen.</summary>
      <returns>true aktiviert das Puffern der aus der Internetressource empfangenen Daten, false deaktiviert das Puffern. Der Standardwert ist true.</returns>
      <exception cref="T:System.NotImplementedException">Diese Eigenschaft ist nicht implementiert. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering"></member>
    <member name="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>Startet eine asynchrone Anforderung eines <see cref="T:System.IO.Stream" />-Objekts, das zum Schreiben von Daten verwendet werden soll.</summary>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Anforderung verweist.</returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat. </param>
      <param name="state">Das Zustandsobjekt für diese Anforderung. </param>
      <exception cref="T:System.Net.ProtocolViolationException">Die <see cref="P:System.Net.HttpWebRequest.Method" />-Eigenschaft ist GET- oder - Die <see cref="P:System.Net.WebRequest.ContentLength" />-Eigenschaft wurde auf einen Wert festgelegt, der nicht der Größe des bereitgestellten Anforderungstexts entspricht.</exception>
      <exception cref="T:System.InvalidOperationException">Der Stream wird von einem vorherigen Aufruf von <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> verwendet.- oder - Es sind nur noch wenige Threads im Threadpool verfügbar. </exception>
      <exception cref="T:System.NotImplementedException">Diese Methode ist nicht implementiert. </exception>
      <exception cref="T:System.NotSupportedException">Die Cachebestätigung der Anforderung hat angegeben, dass die Antwort für diese Anforderung vom Cache bereitgestellt werden kann. Anforderungen, die Daten schreiben, dürfen jedoch den Cache nicht verwenden. Diese Ausnahme kann auftreten, wenn Sie eine benutzerdefinierte Cachebestätigung verwenden, die nicht ordnungsgemäß implementiert wurde. </exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> wurde bereits zuvor aufgerufen. </exception>
      <exception cref="T:System.ObjectDisposedException">In einer .NET Framework-Anwendung wurde ein Anforderungsstream, dessen Inhalt die Länge 0 (null) hat, nicht korrekt abgerufen und geschlossen.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>Startet eine asynchrone Anforderung an eine Internetressource.</summary>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Anforderung einer Antwort verweist.</returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat. </param>
      <param name="state">Das Zustandsobjekt für diese Anforderung. </param>
      <exception cref="T:System.InvalidOperationException">Der Stream wird bereits von einem vorherigen Aufruf von <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> verwendet.- oder - Es sind nur noch wenige Threads im Threadpool verfügbar. </exception>
      <exception cref="T:System.NotImplementedException">Diese Methode ist nicht implementiert. </exception>
      <exception cref="T:System.NotSupportedException">Der <paramref name="callback" />-Parameter ist null. </exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" /> ist GET. </exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> wurde bereits zuvor aufgerufen. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContentLength"></member>
    <member name="P:System.Net.HttpWebRequest.ContentType">
      <summary>Ruft den Wert des Content-type-HTTP-Headers ab oder legt diesen fest.</summary>
      <returns>Der Wert des Content-type-HTTP-Headers. Der Standardwert ist NULL.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.CookieContainer">
      <summary>Gibt die Auflistung von <see cref="T:System.Net.CookieCollection" />-Objekten an, die der angegebenen HTTP-Anforderung zugeordnet sind.</summary>
      <returns>Ein <see cref="T:System.Net.CookieContainer" /> mit einer Auflistung von <see cref="T:System.Net.CookieCollection" />-Objekten, die der HTTP-Anforderung zugeordnet sind.</returns>
      <exception cref="T:System.NotImplementedException">Diese Eigenschaft ist nicht implementiert. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Credentials">
      <summary>Ruft Authentifizierungsinformationen für die Anforderung ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Net.ICredentials" />-Element mit den der Anforderung zugeordneten Anmeldeinformationen für die Authentifizierung. Die Standard ist NULL.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>Beendet eine asynchrone Anforderung eines <see cref="T:System.IO.Stream" />-Objekts, das zum Schreiben von Daten verwendet werden soll.</summary>
      <returns>Ein <see cref="T:System.IO.Stream" />, der zum Schreiben von Anforderungsdaten verwendet werden soll.</returns>
      <param name="asyncResult">Die ausstehende Anforderung für einen Stream. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist null. </exception>
      <exception cref="T:System.IO.IOException">Die Anforderung wurde nicht abgeschlossen, und es ist kein Stream verfügbar. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch die aktuelle Instanz von einem Anruf von <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> zurückgegeben. </exception>
      <exception cref="T:System.InvalidOperationException">Diese Methode wurde zuvor unter Verwendung von <paramref name="asyncResult" /> aufgerufen. </exception>
      <exception cref="T:System.NotImplementedException">Diese Methode ist nicht implementiert. </exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> wurde bereits zuvor aufgerufen.- oder - Fehler bei der Verarbeitung der Anforderung. </exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Beendet eine asynchrone Anforderung an eine Internetressource.</summary>
      <returns>Eine <see cref="T:System.Net.WebResponse" /> mit der Antwort von der Internetressource.</returns>
      <param name="asyncResult">Die ausstehende Anforderung einer Antwort. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist null. </exception>
      <exception cref="T:System.InvalidOperationException">Diese Methode wurde zuvor unter Verwendung von <paramref name="asyncResult." /> aufgerufen.</exception>
      <exception cref="T:System.NotImplementedException">Diese Methode ist nicht implementiert. </exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> wurde bereits zuvor aufgerufen.- oder - Fehler bei der Verarbeitung der Anforderung. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch die aktuelle Instanz von einem Anruf von <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> zurückgegeben. </exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.Finalize">
      <summary>Gibt die von der aktuellen <see cref="T:System.Net.HttpWebRequest" />-Instanz reservierten Ressourcen frei.</summary>
    </member>
    <member name="P:System.Net.HttpWebRequest.HaveResponse">
      <summary>Ruft einen Wert ab, der angibt, ob eine Antwort von einer Internetressource empfangen wurde.</summary>
      <returns>true, wenn eine Antwort empfangen wurde, andernfalls false.</returns>
      <exception cref="T:System.NotImplementedException">Diese Eigenschaft ist nicht implementiert. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Headers">
      <summary>Gibt eine Auflistung der Name-Wert-Paare an, aus denen sich die HTTP-Header zusammensetzen.</summary>
      <returns>Eine <see cref="T:System.Net.WebHeaderCollection" /> mit den Name-Wert-Paaren, aus denen sich die Header für die HTTP-Anforderung zusammensetzen.</returns>
      <exception cref="T:System.InvalidOperationException">Die Anforderung wurde durch Aufrufen der <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />-Methode oder der <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />-Methode gestartet. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Method">
      <summary>Ruft die Methode für die Anforderung ab oder legt diese fest.</summary>
      <returns>Die Anforderungsmethode zum Herstellen der Verbindung mit der Internetressource. Der Standardwert ist GET.</returns>
      <exception cref="T:System.ArgumentException">Es wurde keine Methode angegeben.- oder - Die Zeichenfolge der Methode enthält ungültige Zeichen. </exception>
      <exception cref="T:System.NotImplementedException">Diese Eigenschaft ist nicht implementiert. </exception>
      <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Net.HttpWebRequest.Method" />-Eigenschaft ist nicht GET oder POST. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.RequestUri">
      <summary>Ruft den ursprünglichen URI (Uniform Resource Identifier) der Anforderung ab.</summary>
      <returns>Ein <see cref="T:System.Uri" /> mit dem URI der Internetressource, der an die <see cref="M:System.Net.WebRequest.Create(System.Uri)" />-Methode übergeben wurde.</returns>
      <exception cref="T:System.NotImplementedException">Diese Eigenschaft ist nicht implementiert. </exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.SupportsCookieContainer">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Net.HttpWebRequest.CookieContainer" />-Eigenschaft von der <see cref="T:System.Net.HttpWebRequest" />-Instanz unterstützt wird.</summary>
      <returns>true, wenn die <see cref="P:System.Net.HttpWebRequest.CookieContainer" />-Eigenschaft von der <see cref="T:System.Net.HttpWebRequest" />-Instanz unterstützt wird, andernfalls false.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.UserAgent">
      <summary>Ruft den Wert des User-Agent-HTTP-Headers ab oder legt diesen fest.</summary>
      <returns>Der Wert des User-Agent-HTTP-Headers. Der Standardwert ist NULL.Note:Der Wert für diese Eigenschaft wird in der <see cref="T:System.Net.WebHeaderCollection" /> gespeichert. Wenn WebHeaderCollection festgelegt wird, geht der Eigenschaftswert verloren.</returns>
    </member>
    <member name="T:System.Net.HttpWebResponse">
      <summary>Stellt eine HTTP-spezifische Implementierung der <see cref="T:System.Net.WebResponse" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebResponse" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.Close">
      <summary>Schließt den Antwortstream.</summary>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentLength">
      <summary>Ruft die Länge des von der Anforderung zurückgegebenen Inhalts ab.</summary>
      <returns>Die Anzahl von Bytes, die von der Anforderung zurückgegeben werden. Die Inhaltslänge schließt nicht die Headerinformationen ein.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentType">
      <summary>Ruft den Inhaltstyp der Antwort ab.</summary>
      <returns>Eine Zeichenfolge, die den Inhaltstyp der Antwort enthält.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.Cookies">
      <summary>Ruft die Cookies ab, mit denen Zustandsinformationen für die HTTP-Antwort beibehalten wurden.</summary>
      <returns>Das <see cref="T:System.Net.CookieCollection" />-Objekt, das der HTTP-Antwort zugeordnet ist.</returns>
      <exception cref="T:System.NotImplementedException">Diese Eigenschaft ist nicht implementiert. </exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.Dispose(System.Boolean)">
      <summary>Gibt die vom <see cref="T:System.Net.HttpWebResponse" /> verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">Der boolesche Wert, der angibt, ob die verwalteten Ressourcen auch freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetResponseStream">
      <summary>Ruft den Stream ab, der zum Lesen des Textkörpers der Serverantwort verwendet wird.</summary>
      <returns>Ein <see cref="T:System.IO.Stream" /> mit dem Textkörper der Antwort.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.Headers">
      <summary>Ruft die Header ab, die dieser Antwort vom Server zugeordnet sind.</summary>
      <returns>Eine <see cref="T:System.Net.WebHeaderCollection" /> mit den mit der Antwort zurückgegebenen Headerinformationen.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.Method">
      <summary>Ruft die zum Zurückgeben der Antwort verwendete Methode ab.</summary>
      <returns>Eine Zeichenfolge mit der zum Zurückgeben der Antwort verwendeten HTTP-Methode.</returns>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde bereits verworfen. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ResponseUri">
      <summary>Ruft den URI der Internetressource ab, die die Anforderung beantwortet hat.</summary>
      <returns>Ein <see cref="T:System.Uri" />-Objekt, das den URI der Internetressource enthält, die die Anforderung beantwortet hat.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusCode">
      <summary>Ruft den Status der Antwort ab.</summary>
      <returns>Einer der <see cref="T:System.Net.HttpStatusCode" />-Werte.</returns>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde bereits verworfen. </exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusDescription">
      <summary>Ruft die mit der Antwort zurückgegebene Statusbeschreibung ab.</summary>
      <returns>Eine Zeichenfolge, die den Status der Antwort beschreibt.</returns>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde bereits verworfen. </exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.System#IDisposable#Dispose">
      <summary>Gibt sämtliche vom <see cref="T:System.Net.HttpWebResponse" /> verwendeten Ressourcen frei.</summary>
    </member>
    <member name="T:System.Net.ICredentials">
      <summary>Stellt die Basisauthentifizierungsschnittstelle zum Abrufen von Anmeldeinformationen für die Webclientauthentifizierung bereit.</summary>
    </member>
    <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <summary>Gibt ein <see cref="T:System.Net.NetworkCredential" />-Objekt zurück, das dem angegebenen URI und Authentifizierungstyp zugeordnet ist.</summary>
      <returns>Die dem angegebenen URI und dem Authentifizierungstyp zugeordneten <see cref="T:System.Net.NetworkCredential" /> oder null, wenn keine Anmeldeinformationen verfügbar sind.</returns>
      <param name="uri">Der <see cref="T:System.Uri" />, für den der Client die Authentifizierung bereitstellt.</param>
      <param name="authType">Eine Zeichenfolge, die den Authentifizierungstyp angibt.</param>
    </member>
    <member name="T:System.Net.IPAddress">
      <summary>Stellt eine Internetprotokolladresse (IP) bereit.</summary>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.IPAddress" />-Klasse mit der Adresse, die als <see cref="T:System.Byte" />-Array angegeben ist.</summary>
      <param name="address">Das Bytearray, das die IP-Adresse enthält.</param>
      <exception cref="T:System.ArgumentException">Die Länge des <paramref name="address" />-Parameters entspricht nicht den erforderlichen 4 Byte für eine IPv4-Adresse bzw. nicht 16 Byte für eine IPv6-Adresse.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist null. </exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.IPAddress" />-Klasse mit einer als <see cref="T:System.Byte" />-Array angegebenen IPv6-Adresse und dem angegebenen Bezeichner für den Gültigkeitsbereich.</summary>
      <param name="address">Der Bytearraywert der IPv6-Adresse.</param>
      <param name="scopeid">Der Long-Wert des Bezeichners für den Gültigkeitsbereich.</param>
      <exception cref="T:System.ArgumentException">Die Länge des <paramref name="address" />-Parameters entspricht nicht den erforderlichen 16 Byte für eine IPv6-Adresse.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="scopeid" />-Parameter ist kleiner als 0, oder <paramref name="scopeid" /> ist größer als 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Int64)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.IPAddress" />-Klasse mit der Adresse, die als <see cref="T:System.Int64" /> angegeben ist.</summary>
      <param name="newAddress">Der Long-Wert der IP-Adresse. Der Wert 0x2414188f weist z. B. im Big-Endian-Format die IP-Adresse "143.24.20.36" auf.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="newAddress" />-Parameter liegt außerhalb des gültigen Bereichs für eine IPv4-Adresse. </exception>
    </member>
    <member name="P:System.Net.IPAddress.Address">
      <summary>Ruft eine IPv4-Adresse ab oder legt diese fest.</summary>
      <returns>Eine als Ganzzahl dargestellte IPv4-Adresse.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Die <see cref="P:System.Net.IPAddress.AddressFamily" />-Eigenschaft ist <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
    </member>
    <member name="P:System.Net.IPAddress.AddressFamily">
      <summary>Ruft die Adressfamilie der IP-Adresse ab.</summary>
      <returns>Gibt <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> für IPv4 oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> für IPv6 zurück.</returns>
    </member>
    <member name="F:System.Net.IPAddress.Any">
      <summary>Stellt eine IPv4-Adresse bereit, die angibt, dass ein Server die Clientaktivität an allen Netzwerkschnittstellen für IPv4 überwachen soll. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Net.IPAddress.Broadcast">
      <summary>Stellt die IPv4-Broadcastadresse bereit. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.Net.IPAddress.Equals(System.Object)">
      <summary>Vergleicht zwei IP-Adressen.</summary>
      <returns>true, wenn die beiden Adressen gleich sind, andernfalls false.</returns>
      <param name="comparand">Eine <see cref="T:System.Net.IPAddress" />-Instanz, die mit der aktuellen Instanz verglichen werden soll.</param>
    </member>
    <member name="M:System.Net.IPAddress.GetAddressBytes">
      <summary>Stellt eine Kopie der <see cref="T:System.Net.IPAddress" /> als Bytearray zur Verfügung.</summary>
      <returns>Ein Bytearray, das die <see cref="T:System.Net.IPAddress" />-Instanz darstellt.</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetHashCode">
      <summary>Gibt einen Hashwert für eine IP-Adresse zurück.</summary>
      <returns>Ein ganzzahliger Hashwert für die IP-Adresse.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
      <summary>Konvertiert einen kurzen Wert vom Typ Short aus der Host-Bytereihenfolge in die Netzwerk-Bytereihenfolge.</summary>
      <returns>Ein Wert vom Typ Short, der in der Netzwerk-Bytereihenfolge ausgedrückt ist.</returns>
      <param name="host">Die zu konvertierende Zahl in Host-Bytereihenfolge.</param>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
      <summary>Konvertiert einen ganzzahligen Wert aus der Host-Bytereihenfolge in die Netzwerk-Bytereihenfolge.</summary>
      <returns>Ein ganzzahliger Wert, der in der Netzwerk-Bytereihenfolge ausgedrückt ist.</returns>
      <param name="host">Die zu konvertierende Zahl in Host-Bytereihenfolge.</param>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
      <summary>Konvertiert einen Wert vom Typ Long aus der Host-Bytereihenfolge in die Netzwerk-Bytereihenfolge.</summary>
      <returns>Ein Wert vom Typ Long, der in Netzwerk-Bytereihenfolge ausgedrückt ist.</returns>
      <param name="host">Die zu konvertierende Zahl in Host-Bytereihenfolge.</param>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Any">
      <summary>Stellt eine IPv6-Adresse bereit, die angibt, dass ein Server die Clientaktivität an allen Netzwerkschnittstellen für IPv6 überwachen soll. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Loopback">
      <summary>Stellt die IP-Loopback-Adresse bereit. Diese Eigenschaft ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6None">
      <summary>Stellt eine IPv6-Adresse bereit, die angibt, dass keine Netzwerkschnittstelle verwendet werden soll. Diese Eigenschaft ist schreibgeschützt.</summary>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6LinkLocal">
      <summary>Ruft ab, ob die Adresse eine IPv6-Link-Local-Adresse ist.</summary>
      <returns>true, wenn die IP-Adresse eine IPv6-Link-Local-Adresse ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Multicast">
      <summary>Ruft ab, ob die Adresse eine globale IPv6-Multicastadresse ist.</summary>
      <returns>true, wenn die IP-Adresse eine globale IPv6-Multicastadresse ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6SiteLocal">
      <summary>Ruft ab, ob die Adresse eine IPv6-Site-Local-Adresse ist.</summary>
      <returns>true, wenn die IP-Adresse eine IPv6-Site-Local-Adresse ist, andernfalls false.</returns>
    </member>
    <member name="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
      <summary>Gibt an, ob es sich bei der angegebenen IP-Adresse um die Loopback-Adresse handelt.</summary>
      <returns>true, wenn <paramref name="address" /> die Loopback-Adresse ist, andernfalls false.</returns>
      <param name="address">Eine IP-Adresse.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist null. </exception>
    </member>
    <member name="F:System.Net.IPAddress.Loopback">
      <summary>Stellt die IPv4-Loopback-Adresse bereit. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
      <summary>Konvertiert einen Wert vom Typ Short aus der Netzwerk-Bytereihenfolge in die Host-Bytereihenfolge.</summary>
      <returns>Ein Wert vom Typ Short, der in der Host-Bytereihenfolge ausgedrückt ist.</returns>
      <param name="network">Die zu konvertierende Zahl in der Netzwerk-Bytereihenfolge.</param>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
      <summary>Konvertiert einen ganzzahligen Wert aus der Netzwerk-Bytereihenfolge in die Host-Bytereihenfolge.</summary>
      <returns>Ein ganzzahliger Wert, der in der Host-Bytereihenfolge ausgedrückt ist.</returns>
      <param name="network">Die zu konvertierende Zahl in der Netzwerk-Bytereihenfolge.</param>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
      <summary>Konvertiert einen Wert vom Typ Long aus der Netzwerk-Bytereihenfolge in die Host-Bytereihenfolge.</summary>
      <returns>Ein Wert vom Typ Long, der in der Host-Bytereihenfolge ausgedrückt ist.</returns>
      <param name="network">Die zu konvertierende Zahl in der Netzwerk-Bytereihenfolge.</param>
    </member>
    <member name="F:System.Net.IPAddress.None">
      <summary>Stellt eine IP-Adresse bereit, die angibt, dass keine Netzwerkschnittstelle verwendet werden soll. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.String)">
      <summary>Konvertiert eine IP-Adresszeichenfolge in eine <see cref="T:System.Net.IPAddress" />-Instanz.</summary>
      <returns>Eine <see cref="T:System.Net.IPAddress" />-Instanz.</returns>
      <param name="ipString">Eine Zeichenfolge, die eine IP-Adresse in Punktnotation für IPv4 oder in durch Doppelpunkt getrennter Hexadezimalnotation für IPv6 enthält.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="ipString" />-Parameter ist null. </exception>
      <exception cref="T:System.FormatException">Der <paramref name="ipString" />-Parameter ist keine gültige IP-Adresse. </exception>
    </member>
    <member name="P:System.Net.IPAddress.ScopeId">
      <summary>Ruft den Bezeichner für den Gültigkeitsbereich der IPv6-Adresse ab oder legt diesen fest.</summary>
      <returns>Ein lange ganze Zahl, die den Gültigkeitsbereich der Adresse angibt.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist beim Festlegen der ScopeId kleiner als 0, oder der Wert ist größer als 0x00000000FFFFFFFF.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Die <see cref="P:System.Net.IPAddress.AddressFamily" />-Eigenschaft ist als <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> angegeben. </exception>
    </member>
    <member name="M:System.Net.IPAddress.ToString">
      <summary>Konvertiert Internetadressen in die jeweilige Standardnotation.</summary>
      <returns>Eine Zeichenfolge mit einer IP-Adresse im Punktformat für IPv4 oder im durch Doppelpunkt getrennten Hexadezimalformat für IPv6.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Ein Fehler hat verhindert, dass die IPv6-Adresse in eine Zeichenfolge konvertiert werden konnte. </exception>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
      <summary>Bestimmt, ob eine Zeichenfolge eine gültige IP-Adresse ist.</summary>
      <returns>true, wenn <paramref name="ipString" /> eine gültige IP-Adresse ist, andernfalls false.</returns>
      <param name="ipString">Die zu validierende Zeichenfolge.</param>
      <param name="address">Die <see cref="T:System.Net.IPAddress" />-Version der Zeichenfolge.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ipString" /> konnte nicht als IP-Adresse analysiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ipString" /> ist null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="ipString" /> ist keine gültige IP-Adresse. </exception>
    </member>
    <member name="T:System.Net.IPEndPoint">
      <summary>Stellt einen Netzwerkendpunkt als eine IP-Adresse und eine Anschlussnummer dar.</summary>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.IPEndPoint" />-Klasse mit der angegebenen IP-Adresse und der angegebenen Anschlussnummer.</summary>
      <param name="address">Der Long-Wert der IP-Adresse für den Internethost. Der Wert 0x2414188f weist z. B. im Big-Endian-Format die IP-Adresse "143.24.20.36" auf.</param>
      <param name="port">Die der <paramref name="address" /> zugeordnete Anschlussnummer oder 0, um einen beliebigen verfügbaren Anschluss anzugeben. <paramref name="port" /> wird in der Reihenfolge der Hosts angegeben.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> ist kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" />.- oder - <paramref name="port" /> ist größer als <see cref="F:System.Net.IPEndPoint.MaxPort" />.- oder - <paramref name="address" /> liegt außerhalb des Bereichs für eine IPv4-Adresse.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.IPEndPoint" />-Klasse mit der angegebenen Adresse und der angegebenen Anschlussnummer.</summary>
      <param name="address">Die IP-Adresse des durch <see cref="T:System.Net.IPAddress" /> dargestellten Internethosts.</param>
      <param name="port">Die der <paramref name="address" /> zugeordnete Anschlussnummer oder 0, um einen beliebigen verfügbaren Anschluss anzugeben. <paramref name="port" /> wird in der Reihenfolge der Hosts angegeben.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> ist kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" />.- oder - <paramref name="port" /> ist größer als <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
    </member>
    <member name="P:System.Net.IPEndPoint.Address">
      <summary>Ruft die IP-Adresse des Endpunktes ab oder legt diese fest.</summary>
      <returns>Die IP-Adresse des Endpunkts.</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.AddressFamily">
      <summary>Ruft die IP-Adressfamilie ab.</summary>
      <returns>Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)">
      <summary>Erstellt einen Endpunkt aus einer Socketadresse.</summary>
      <returns>Eine <see cref="T:System.Net.EndPoint" />-Instanz, die die angegebene Socketadresse verwendet.</returns>
      <param name="socketAddress">Die <see cref="T:System.Net.SocketAddress" />, die für den Endpunkt verwendet werden soll.</param>
      <exception cref="T:System.ArgumentException">Die AddressFamily von <paramref name="socketAddress" /> entspricht nicht der AddressFamily der aktuellen Instanz.- oder - <paramref name="socketAddress" />.Size &lt; 8. </exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="socketAddress" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und die aktuelle <see cref="T:System.Net.IPEndPoint" />-Instanz gleich sind.</summary>
      <returns>true, wenn die beiden IP-Endpunkte gleich sind, andernfalls false.</returns>
      <param name="comparand">Das angegebene <see cref="T:System.Object" />, bei dem überprüft werden soll, ob es mit der aktuellen <see cref="T:System.Net.IPEndPoint" />-Instanz identisch ist.</param>
    </member>
    <member name="M:System.Net.IPEndPoint.GetHashCode">
      <summary>Gibt einen Hashwert für einen IP-Endpunkt zurück.</summary>
      <returns>Ein ganzzahliger Hashwert für den IP-Endpunkt.</returns>
    </member>
    <member name="F:System.Net.IPEndPoint.MaxPort">
      <summary>Gibt den Höchstwert an, der der <see cref="P:System.Net.IPEndPoint.Port" />-Eigenschaft zugeordnet werden kann. Der MaxPort-Wert ist auf 0x0000FFFF festgelegt. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MinPort">
      <summary>Gibt den Mindestwert an, der der <see cref="P:System.Net.IPEndPoint.Port" />-Eigenschaft zugeordnet werden kann. Dieses Feld ist schreibgeschützt.</summary>
    </member>
    <member name="P:System.Net.IPEndPoint.Port">
      <summary>Ruft die Anschlussnummer des Endpunkts ab oder legt diese fest.</summary>
      <returns>Ein ganzzahliger Wert im Bereich von <see cref="F:System.Net.IPEndPoint.MinPort" /> bis <see cref="F:System.Net.IPEndPoint.MaxPort" />, der die Anschlussnummer des Endpunkts angibt.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der für einen set-Vorgang angegebene Wert ist kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" /> oder größer als <see cref="F:System.Net.IPEndPoint.MaxPort" />. </exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Serialize">
      <summary>Serialisiert Endpunktinformationen in eine <see cref="T:System.Net.SocketAddress" />-Instanz.</summary>
      <returns>Eine <see cref="T:System.Net.SocketAddress" />-Instanz mit der Socketadresse für den Endpunkt.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.ToString">
      <summary>Gibt die IP-Adresse und die Anschlussnummer des angegebenen Endpunkts zurück.</summary>
      <returns>Eine Zeichenfolge mit der IP-Adresse und der Anschlussnummer des angegebenen Endpunkts.</returns>
    </member>
    <member name="T:System.Net.IWebRequestCreate">
      <summary>Stellt die Basisschnittstelle zum Erstellen von <see cref="T:System.Net.WebRequest" />-Instanzen bereit.</summary>
    </member>
    <member name="M:System.Net.IWebRequestCreate.Create(System.Uri)">
      <summary>Erstellt eine <see cref="T:System.Net.WebRequest" />-Instanz.</summary>
      <returns>Eine <see cref="T:System.Net.WebRequest" />-Instanz.</returns>
      <param name="uri">Der URI (Uniform Resource Identifier) der Webressource.</param>
      <exception cref="T:System.NotSupportedException">Das in <paramref name="uri" /> angegebene Anforderungsschema wird von dieser <see cref="T:System.Net.IWebRequestCreate" />-Instanz nicht unterstützt. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ist null. </exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die Berechtigung zum Herstellen einer Verbindung mit dem angeforderten URI bzw. einem URI, an den die Anforderung umgeleitet wurde. </exception>
      <exception cref="T:System.UriFormatException">Der in <paramref name="uri" /> angegebene URI ist kein gültiger URI. </exception>
    </member>
    <member name="T:System.Net.NetworkCredential">
      <summary>Stellt Anmeldeinformationen für kennwortbasierte Authentifizierungsschemas bereit, z. B. für Standard-, Digest-, NTLM- oder Kerberos-Authentifizierungen.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.NetworkCredential" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.NetworkCredential" />-Klasse mit dem angegebenen Benutzernamen und Kennwort.</summary>
      <param name="userName">Der den Anmeldeinformationen zugeordnete Benutzername.</param>
      <param name="password">Das Kennwort für den Benutzernamen, der den Anmeldeinformationen zugeordnet ist.</param>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.NetworkCredential" />-Klasse mit dem angegebenen Benutzernamen und Kennwort sowie der angegebenen Domäne.</summary>
      <param name="userName">Der den Anmeldeinformationen zugeordnete Benutzername.</param>
      <param name="password">Das Kennwort für den Benutzernamen, der den Anmeldeinformationen zugeordnet ist.</param>
      <param name="domain">Die diesen Anmeldeinformationen zugeordnete Domäne.</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Domain">
      <summary>Ruft den Namen der Domäne bzw. des Computers ab, in der bzw. auf dem die Anmeldeinformationen geprüft werden, oder legt diesen fest.</summary>
      <returns>Der Name der Domäne, die diesen Anmeldeinformationen zugeordnet ist.</returns>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <summary>Gibt eine Instanz der <see cref="T:System.Net.NetworkCredential" />-Klasse für den angegebenen URI (Uniform Resource Identifier) und den angegebenen Authentifizierungstyp zurück.</summary>
      <returns>Ein <see cref="T:System.Net.NetworkCredential" />-Objekt.</returns>
      <param name="uri">Der URI, für den der Client die Authentifizierung bereitstellt.</param>
      <param name="authType">Eine Zeichenfolge, die den angeforderten Authentifizierungstyp angibt.</param>
    </member>
    <member name="P:System.Net.NetworkCredential.Password">
      <summary>Ruft das Kennwort für den Benutzernamen ab, der den Anmeldeinformationen zugeordnet ist, oder legt dieses fest.</summary>
      <returns>Das den Anmeldeinformationen zugeordnete Kennwort.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.UserName">
      <summary>Ruft den Benutzernamen ab, der den Anmeldeinformationen zugeordnet ist, oder legt diesen fest.</summary>
      <returns>Der den Anmeldeinformationen zugeordnete Benutzername.</returns>
    </member>
    <member name="T:System.Net.OpenReadCompletedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Net.WebClient.OpenReadCompleted" />-Ereignis bereit. </summary>
    </member>
    <member name="P:System.Net.OpenReadCompletedEventArgs.Result">
      <summary>Ruft einen lesbaren Stream ab, der die Ergebnisse der <see cref="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" />-Methode enthält.</summary>
      <returns>Ein <see cref="T:System.IO.Stream" />, der die Ergebnisse der <see cref="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)" />-Methode enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Die asynchrone Anforderung wurde abgebrochen. </exception>
    </member>
    <member name="T:System.Net.OpenReadCompletedEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="M:System.Net.WebClient.OpenReadAsync(System.Uri)" />-Ereignisses eines <see cref="T:System.Net.WebClient" />-Objekts dar. </summary>
      <param name="sender">Die Quelle des Ereignisses. </param>
      <param name="e">Ein <see cref="T:System.Net.OpenReadCompletedEventArgs" /> mit den Ereignisdaten. </param>
    </member>
    <member name="T:System.Net.OpenWriteCompletedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Net.WebClient.OpenWriteCompleted" />-Ereignis bereit.</summary>
    </member>
    <member name="P:System.Net.OpenWriteCompletedEventArgs.Result">
      <summary>Ruft einen nicht schreibgeschützten Stream ab, der zum Senden von Daten an einen Server verwendet wird.</summary>
      <returns>Ein <see cref="T:System.IO.Stream" />, in den Sie Daten schreiben können, die hochgeladen werden sollen.</returns>
      <exception cref="T:System.InvalidOperationException">Die asynchrone Anforderung wurde abgebrochen. </exception>
    </member>
    <member name="T:System.Net.OpenWriteCompletedEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.Net.WebClient.OpenWriteCompleted" />-Ereignisses eines <see cref="T:System.Net.WebClient" />-Objekts dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Eine Instanz von <see cref="T:System.Net.OpenWriteCompletedEventArgs" />, die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Net.ProtocolViolationException">
      <summary>Diese Ausnahme wird ausgelöst, wenn beim Verwenden eines Netzwerkprotokolls ein Fehler auftritt.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.ProtocolViolationException" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.ProtocolViolationException" />-Klasse mit der angegebenen Meldung.</summary>
      <param name="message">Die Zeichenfolge der Fehlermeldung.</param>
    </member>
    <member name="T:System.Net.SocketAddress">
      <summary>Speichert serialisierte Informationen von Klassen, die von <see cref="T:System.Net.EndPoint" /> abgeleitet sind.</summary>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.SocketAddress" />-Klasse für die angegebene Adressfamilie.</summary>
      <param name="family">Ein <see cref="T:System.Net.Sockets.AddressFamily" />-Enumerationswert.</param>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.SocketAddress" />-Klasse, wobei die angegebene Adressfamilie und die angegebene Puffergröße verwendet werden.</summary>
      <param name="family">Ein <see cref="T:System.Net.Sockets.AddressFamily" />-Enumerationswert.</param>
      <param name="size">Der Wert, der für die <see cref="P:System.Net.SocketAddress.Size" />-Eigenschaft festgelegt werden soll und der sich auf die Anzahl der Bytes auswirkt, die für den zugrunde liegenden Puffer reserviert werden.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> ist kleiner als 2. Diese 2 Bytes werden zum Speichern von <paramref name="family" /> benötigt. </exception>
    </member>
    <member name="M:System.Net.SocketAddress.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Object" /> und die aktuelle <see cref="T:System.Net.SocketAddress" />-Instanz gleich sind. </summary>
      <returns>true, wenn die beiden <see cref="T:System.Net.SocketAddress" />-Instanzen gleich sind, andernfalls false.</returns>
      <param name="comparand">Das angegebene <see cref="T:System.Object" />, das mit der aktuellen <see cref="T:System.Net.SocketAddress" />-Instanz verglichen werden soll.</param>
    </member>
    <member name="P:System.Net.SocketAddress.Family">
      <summary>Ruft den <see cref="T:System.Net.Sockets.AddressFamily" />-Enumerationswert der aktuellen <see cref="T:System.Net.SocketAddress" /> ab.</summary>
      <returns>Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Enumerationswerte.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.GetHashCode">
      <summary>Gibt einen Hashwert für die <see cref="T:System.Net.SocketAddress" /> zurück. </summary>
      <returns>Ein ganzzahliger Hashwert für die Socketadresse.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Item(System.Int32)">
      <summary>Ruft das angegebene Indexelement im zugrunde liegenden Puffer ab oder legt dieses fest.</summary>
      <returns>Der Wert des angegebenen Indexelements im zugrunde liegenden Puffer.</returns>
      <param name="offset">Das Arrayindexelement für die gewünschten Informationen.</param>
      <exception cref="T:System.IndexOutOfRangeException">Der angegebene Index ist im Puffer nicht vorhanden. (Der <paramref name="offset" /> ist kleiner als 0 oder größer als bzw. gleich dem Wert der <see cref="P:System.Net.SocketAddress.Size" />-Eigenschaft.)</exception>
    </member>
    <member name="P:System.Net.SocketAddress.Size">
      <summary>Ruft die verfügbare Puffergröße ab, die für die <see cref="T:System.Net.SocketAddress" /> verwendet werden kann.</summary>
      <returns>Die verfügbare Puffergröße in Byte für die <see cref="T:System.Net.SocketAddress" />.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.ToString">
      <summary>Gibt eine Zeichenfolge zurück, die Informationen über die Socketadresse darstellt.</summary>
      <returns>Eine Zeichenfolge mit Informationen über die <see cref="T:System.Net.SocketAddress" />.</returns>
    </member>
    <member name="T:System.Net.UploadProgressChangedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Net.WebClient.UploadProgressChanged" />-Ereignis einer <see cref="T:System.Net.WebClient" /> bereit.</summary>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.BytesReceived">
      <summary>Ruft die Anzahl empfangener Bytes ab.</summary>
      <returns>Ein <see cref="T:System.Int64" />-Wert, der die Anzahl empfangener Bytes angibt.</returns>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.BytesSent">
      <summary>Ruft die Anzahl gesendeter Bytes ab.</summary>
      <returns>Ein <see cref="T:System.Int64" />-Wert, der die Anzahl gesendeter Bytes angibt.</returns>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.TotalBytesToReceive">
      <summary>Ruft die Gesamtzahl der Bytes ab, die bei einem Upload von <see cref="T:System.Net.WebClient" />-Daten übertragen werden.</summary>
      <returns>Ein <see cref="T:System.Int64" />-Wert, der die Anzahl von Bytes angibt, die empfangen werden.</returns>
    </member>
    <member name="P:System.Net.UploadProgressChangedEventArgs.TotalBytesToSend">
      <summary>Ruft die Gesamtzahl der zu sendenden Bytes ab.</summary>
      <returns>Ein <see cref="T:System.Int64" />-Wert, der die Anzahl von Bytes angibt, die gesendet werden.</returns>
    </member>
    <member name="T:System.Net.UploadProgressChangedEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.Net.WebClient.UploadProgressChanged" />-Ereignisses eines <see cref="T:System.Net.WebClient" />-Objekts dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Eine Instanz von <see cref="T:System.Net.UploadProgressChangedEventArgs" />, die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Net.UploadStringCompletedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Net.WebClient.UploadStringCompleted" />-Ereignis bereit.</summary>
    </member>
    <member name="P:System.Net.UploadStringCompletedEventArgs.Result">
      <summary>Ruft die Serverantwort an einen Zeichenfolgen-Uploadvorgang ab, der durch den Aufruf einer <see cref="Overload:System.Net.WebClient.UploadStringAsync" />-Methode gestartet wurde.</summary>
      <returns>Ein <see cref="T:System.Byte" />-Array, das die Serverantwort enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Die asynchrone Anforderung wurde abgebrochen. </exception>
    </member>
    <member name="T:System.Net.UploadStringCompletedEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.Net.WebClient.UploadStringCompleted" />-Ereignisses eines <see cref="T:System.Net.WebClient" />-Objekts dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Eine Instanz von <see cref="T:System.Net.UploadStringCompletedEventArgs" />, die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Net.WebClient">
      <summary>Stellt allgemeine Methoden zum Senden und Empfangen von Daten von einer mit einem URI gekennzeichneten Ressource bereit.</summary>
    </member>
    <member name="M:System.Net.WebClient.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebClient" />-Klasse. </summary>
    </member>
    <member name="P:System.Net.WebClient.AllowReadStreamBuffering">
      <summary>Ruft einen Wert ab, der angibt, ob die aus der Internetressource gelesenen Daten für eine <see cref="T:System.Net.WebClient" />-Instanz gepuffert werden sollen, oder legt diesen Wert fest.</summary>
      <returns>true aktiviert das Puffern der aus der Internetressource empfangenen Daten, false deaktiviert das Puffern. Der Standardwert ist true.</returns>
    </member>
    <member name="P:System.Net.WebClient.AllowWriteStreamBuffering">
      <summary>Ruft einen Wert ab, der angibt, ob die in die Internetressource geschriebenen Daten für eine <see cref="T:System.Net.WebClient" />-Instanz gepuffert werden sollen, oder legt diesen Wert fest.</summary>
      <returns>true aktiviert das Puffern der in die Internetressource geschriebenen Daten, false deaktiviert das Puffern. Der Standardwert ist true.</returns>
    </member>
    <member name="P:System.Net.WebClient.BaseAddress">
      <summary>Ruft den Basis-URI für Anforderungen eines <see cref="T:System.Net.WebClient" /> ab oder legt diesen fest.</summary>
      <returns>Der Basis-URI für von einem <see cref="T:System.Net.WebClient" /> gestellte Anforderungen. Wenn keine Basisadresse angegeben wurde, wird die <see cref="P:System.Net.WebClient.BaseAddress" />-Eigenschaft mit dem Ursprung der Anwendung (dem absoluten URI der Windows Phone-XAP) initialisiert...</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.WebClient.BaseAddress" /> ist auf einen ungültigen URI festgelegt. Die innere Ausnahme enthält möglicherweise Informationen, die Sie bei der Fehlersuche unterstützen.</exception>
    </member>
    <member name="M:System.Net.WebClient.CancelAsync">
      <summary>Bricht einen ausstehenden asynchronen Vorgang ab. </summary>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Ausführung des Programms fortzusetzen.</exception>
      <exception cref="T:System.StackOverflowException">Der Ausführungsstapel ist übergelaufen, weil er zu viele geschachtelte Methodenaufrufe enthält.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Die <see cref="M:System.Threading.Thread.Abort" />-Methode wurde aufgerufen, um einen Thread zu zerstören.</exception>
    </member>
    <member name="P:System.Net.WebClient.Credentials">
      <summary>Ruft die Netzwerkanmeldeinformationen ab, die an den Host gesendet und für die Authentifizierung der Anforderung verwendet werden, oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Net.ICredentials" />-Schnittstelle mit den Anmeldeinformationen für die Authentifizierung der Anforderung. Die Standard ist NULL.</returns>
    </member>
    <member name="E:System.Net.WebClient.DownloadProgressChanged">
      <summary>Tritt ein, wenn Daten teilweise oder vollständig erfolgreich über einen asynchronen Download übertragen werden.</summary>
    </member>
    <member name="M:System.Net.WebClient.DownloadStringAsync(System.Uri)">
      <summary>Lädt die Ressource beim angegebenen <see cref="T:System.Uri" /> als Zeichenfolge herunter.</summary>
      <param name="address">Der Ort der herunterzuladenden Ressource.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist null.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Ausführung des Programms fortzusetzen.</exception>
      <exception cref="T:System.StackOverflowException">Der Ausführungsstapel ist übergelaufen, weil er zu viele geschachtelte Methodenaufrufe enthält.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Die <see cref="M:System.Threading.Thread.Abort" />-Methode wurde aufgerufen, um einen Thread zu zerstören.</exception>
    </member>
    <member name="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)">
      <summary>Lädt die Ressource beim angegebenen <see cref="T:System.Uri" /> als Zeichenfolge herunter.</summary>
      <param name="address">Der Ort der herunterzuladenden Ressource.</param>
      <param name="userToken">Stellt einen vom Benutzer angegebenen Bezeichner für die asynchrone Aufgabe bereit. </param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist null.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Ausführung des Programms fortzusetzen.</exception>
      <exception cref="T:System.StackOverflowException">Der Ausführungsstapel ist übergelaufen, weil er zu viele geschachtelte Methodenaufrufe enthält.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Die <see cref="M:System.Threading.Thread.Abort" />-Methode wurde aufgerufen, um einen Thread zu zerstören.</exception>
    </member>
    <member name="E:System.Net.WebClient.DownloadStringCompleted">
      <summary>Tritt ein, wenn ein asynchroner Ressourcendownload abgeschlossen ist. </summary>
    </member>
    <member name="P:System.Net.WebClient.Encoding">
      <summary>Ruft die <see cref="T:System.Text.Encoding" /> für den Up- und Download von Zeichenfolgen ab, oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Text.Encoding" /> zum Codieren von Zeichenfolgen. Der Standardwert dieser Eigenschaft ist <see cref="P:System.Text.Encoding.UTF8" />.</returns>
      <exception cref="T:System.ArgumentNullException">Ein null-Wert wurde übergeben, um diese Eigenschaft festzulegen.</exception>
    </member>
    <member name="M:System.Net.WebClient.GetWebRequest(System.Uri)">
      <summary>Gibt ein <see cref="T:System.Net.WebRequest" />-Objekt für die angegebene Ressource zurück.</summary>
      <returns>Ein neues <see cref="T:System.Net.WebRequest" />-Objekt für die angegebene Ressource.</returns>
      <param name="address">Ein <see cref="T:System.Uri" />, der die anzufordernde Ressource identifiziert.</param>
    </member>
    <member name="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
      <summary>Gibt die <see cref="T:System.Net.WebResponse" /> für die angegebene <see cref="T:System.Net.WebRequest" /> mit dem angegebenen <see cref="T:System.IAsyncResult" /> zurück.</summary>
      <returns>Eine <see cref="T:System.Net.WebResponse" /> mit der Antwort auf die angegebene <see cref="T:System.Net.WebRequest" />.</returns>
      <param name="request">Eine <see cref="T:System.Net.WebRequest" />, mit der die Antwort abgerufen wird.</param>
      <param name="result">Ein <see cref="T:System.IAsyncResult" />-Objekt, das durch einen vorherigen Aufruf von <see cref="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> abgerufen wurde.</param>
    </member>
    <member name="P:System.Net.WebClient.Headers">
      <summary>Ruft eine Auflistung der Name-Wert-Paare für Header auf, die der Anforderung zugeordnet sind, oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Net.WebHeaderCollection" /> mit den dieser Anforderung zugeordneten Name-Wert-Paaren für Header.</returns>
    </member>
    <member name="P:System.Net.WebClient.IsBusy">
      <summary>Ruft einen Wert ab, der angibt, ob gerade eine Webanforderung ausgeführt wird.</summary>
      <returns>true gibt an, dass gerade eine Webanforderung ausgeführt wird, andernfalls lautet der Wert false.</returns>
    </member>
    <member name="M:System.Net.WebClient.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)">
      <summary>Löst das <see cref="E:System.Net.WebClient.DownloadProgressChanged" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Net.DownloadProgressChangedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Net.WebClient.OnDownloadStringCompleted(System.Net.DownloadStringCompletedEventArgs)">
      <summary>Löst das <see cref="E:System.Net.WebClient.DownloadStringCompleted" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Net.DownloadStringCompletedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Net.WebClient.OnOpenReadCompleted(System.Net.OpenReadCompletedEventArgs)">
      <summary>Löst das <see cref="E:System.Net.WebClient.OpenReadCompleted" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Net.OpenReadCompletedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Net.WebClient.OnOpenWriteCompleted(System.Net.OpenWriteCompletedEventArgs)">
      <summary>Löst das <see cref="E:System.Net.WebClient.OpenWriteCompleted" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Net.OpenWriteCompletedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Net.WebClient.OnUploadProgressChanged(System.Net.UploadProgressChangedEventArgs)">
      <summary>Löst das <see cref="E:System.Net.WebClient.UploadProgressChanged" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Net.UploadProgressChangedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Net.WebClient.OnUploadStringCompleted(System.Net.UploadStringCompletedEventArgs)">
      <summary>Löst das <see cref="E:System.Net.WebClient.UploadStringCompleted" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Net.UploadStringCompletedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Net.WebClient.OnWriteStreamClosed(System.Net.WriteStreamClosedEventArgs)">
      <summary>Löst das <see cref="E:System.Net.WebClient.WriteStreamClosed" />-Ereignis aus.</summary>
      <param name="e">Ein <see cref="T:System.Net.WriteStreamClosedEventArgs" />-Objekt, das Ereignisdaten enthält.</param>
    </member>
    <member name="M:System.Net.WebClient.OpenReadAsync(System.Uri)">
      <summary>Öffnet einen lesbaren Stream zu der angegebenen Ressource.</summary>
      <param name="address">Der Ort der herunterzuladenden Ressource.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist null.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Ausführung des Programms fortzusetzen.</exception>
      <exception cref="T:System.StackOverflowException">Der Ausführungsstapel ist übergelaufen, weil er zu viele geschachtelte Methodenaufrufe enthält.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Die <see cref="M:System.Threading.Thread.Abort" />-Methode wurde aufgerufen, um einen Thread zu zerstören.</exception>
    </member>
    <member name="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)">
      <summary>Öffnet einen lesbaren Stream zu der angegebenen Ressource.</summary>
      <param name="address">Der Ort der herunterzuladenden Ressource.</param>
      <param name="userToken">Stellt einen vom Benutzer angegebenen Bezeichner für die asynchrone Aufgabe bereit. </param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist null.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Ausführung des Programms fortzusetzen.</exception>
      <exception cref="T:System.StackOverflowException">Der Ausführungsstapel ist übergelaufen, weil er zu viele geschachtelte Methodenaufrufe enthält.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Die <see cref="M:System.Threading.Thread.Abort" />-Methode wurde aufgerufen, um einen Thread zu zerstören.</exception>
    </member>
    <member name="E:System.Net.WebClient.OpenReadCompleted">
      <summary>Tritt ein, wenn ein asynchroner Ressourcenlesevorgang abgeschlossen ist.</summary>
    </member>
    <member name="M:System.Net.WebClient.OpenWriteAsync(System.Uri)">
      <summary>Öffnet einen Stream, um Daten in die angegebene Ressource zu schreiben. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
      <param name="address">Der URI der Ressource, die die Daten empfangen soll. </param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist null.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Ausführung des Programms fortzusetzen.</exception>
      <exception cref="T:System.StackOverflowException">Der Ausführungsstapel ist übergelaufen, weil er zu viele geschachtelte Methodenaufrufe enthält.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Die <see cref="M:System.Threading.Thread.Abort" />-Methode wurde aufgerufen, um einen Thread zu zerstören.</exception>
    </member>
    <member name="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)">
      <summary>Öffnet einen Stream, um Daten in die angegebene Ressource zu schreiben. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
      <param name="address">Der URI der Ressource, die die Daten empfangen soll. </param>
      <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Bei NULL ist POST der Standard für HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist null.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Ausführung des Programms fortzusetzen.</exception>
      <exception cref="T:System.StackOverflowException">Der Ausführungsstapel ist übergelaufen, weil er zu viele geschachtelte Methodenaufrufe enthält.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Die <see cref="M:System.Threading.Thread.Abort" />-Methode wurde aufgerufen, um einen Thread zu zerstören.</exception>
    </member>
    <member name="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)">
      <summary>Öffnet mithilfe der angegebenen Methode einen Stream zum Schreiben von Daten in die angegebene Ressource. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
      <param name="address">Der URI der Ressource, die die Daten empfangen soll.</param>
      <param name="method">Die Methode, die zum Senden der Daten an die Ressource verwendet wird. Bei NULL ist POST der Standard für HTTP.</param>
      <param name="userToken">Ein benutzerdefiniertes Objekt, das bei Abschluss des asynchronen Vorgangs an die aufgerufene Methode übergeben wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist null.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Ausführung des Programms fortzusetzen.</exception>
      <exception cref="T:System.StackOverflowException">Der Ausführungsstapel ist übergelaufen, weil er zu viele geschachtelte Methodenaufrufe enthält.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Die <see cref="M:System.Threading.Thread.Abort" />-Methode wurde aufgerufen, um einen Thread zu zerstören.</exception>
      <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.- oder - Fehler beim Öffnen des Streams. </exception>
    </member>
    <member name="E:System.Net.WebClient.OpenWriteCompleted">
      <summary>Tritt ein, wenn ein asynchroner Vorgang zum Öffnen eines Streams, der Daten in eine Ressource schreibt, abgeschlossen wird.</summary>
    </member>
    <member name="P:System.Net.WebClient.ResponseHeaders">
      <summary>Ruft eine Auflistung der Name-Wert-Paare für Header auf, die der Antwort zugeordnet sind.</summary>
      <returns>Eine <see cref="T:System.Net.WebHeaderCollection" /> mit der Antwort zugeordneten Name-Wert-Paaren eines Headers, oder null, wenn keine Antwort empfangen wurde.</returns>
    </member>
    <member name="E:System.Net.WebClient.UploadProgressChanged">
      <summary>Tritt ein, wenn Daten teilweise oder vollständig erfolgreich über einen asynchronen Upload übertragen werden.</summary>
    </member>
    <member name="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)">
      <summary>Lädt die angegebene Zeichenfolge in die angegebene Ressource hoch. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
      <param name="address">Der URI der Ressource, die die Datei empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite. </param>
      <param name="data">Die Uploadzeichenfolge.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist null.- oder - <paramref name="data" /> ist null.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Ausführung des Programms fortzusetzen.</exception>
      <exception cref="T:System.StackOverflowException">Der Ausführungsstapel ist übergelaufen, weil er zu viele geschachtelte Methodenaufrufe enthält.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Die <see cref="M:System.Threading.Thread.Abort" />-Methode wurde aufgerufen, um einen Thread zu zerstören.</exception>
      <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.- oder - Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
    </member>
    <member name="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)">
      <summary>Lädt die angegebene Zeichenfolge in die angegebene Ressource hoch. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
      <param name="address">Der URI der Ressource, die die Datei empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
      <param name="method">Die HTTP-Methode zum Senden der Datei an die Ressource. Bei NULL ist POST der Standard für HTTP.</param>
      <param name="data">Die Uploadzeichenfolge.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist null.- oder - <paramref name="data" /> ist null.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Ausführung des Programms fortzusetzen.</exception>
      <exception cref="T:System.StackOverflowException">Der Ausführungsstapel ist übergelaufen, weil er zu viele geschachtelte Methodenaufrufe enthält.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Die <see cref="M:System.Threading.Thread.Abort" />-Methode wurde aufgerufen, um einen Thread zu zerstören.</exception>
      <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.- oder - Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
    </member>
    <member name="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)">
      <summary>Lädt die angegebene Zeichenfolge in die angegebene Ressource hoch. Durch diese Methode wird der aufrufende Thread nicht blockiert.</summary>
      <param name="address">Der URI der Ressource, die die Datei empfangen soll. Für HTTP-Ressourcen muss dieser URI eine Ressource identifizieren, die eine mit der POST-Methode gesendete Anforderung annehmen kann, z. B. ein Skript oder eine ASP-Seite.</param>
      <param name="method">Die HTTP-Methode zum Senden der Datei an die Ressource. Bei NULL ist POST der Standard für HTTP.</param>
      <param name="data">Die Uploadzeichenfolge.</param>
      <param name="userToken">Ein benutzerdefiniertes Objekt, das bei Abschluss des asynchronen Vorgangs an die aufgerufene Methode übergeben wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="address" />-Parameter ist null.- oder - <paramref name="data" /> ist null.</exception>
      <exception cref="T:System.OutOfMemoryException">Es ist nicht genügend Arbeitsspeicher vorhanden, um die Ausführung des Programms fortzusetzen.</exception>
      <exception cref="T:System.StackOverflowException">Der Ausführungsstapel ist übergelaufen, weil er zu viele geschachtelte Methodenaufrufe enthält.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Die <see cref="M:System.Threading.Thread.Abort" />-Methode wurde aufgerufen, um einen Thread zu zerstören.</exception>
      <exception cref="T:System.Net.WebException">Der durch Kombinieren von <see cref="P:System.Net.WebClient.BaseAddress" /> und <paramref name="address" /> gebildete URI ist ungültig.- oder - Der Server, der Host dieser Ressource ist, hat nicht geantwortet.</exception>
    </member>
    <member name="E:System.Net.WebClient.UploadStringCompleted">
      <summary>Tritt ein, wenn ein asynchroner Zeichenfolgenupload abgeschlossen wird.</summary>
    </member>
    <member name="P:System.Net.WebClient.UseDefaultCredentials">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der steuert, ob mit den Anforderungen Standardanmeldeinformationen gesendet werden, oder legt diesen fest.</summary>
      <returns>true, wenn die Standardanmeldeinformationen verwendet werden, andernfalls false. Der Standardwert ist true.</returns>
    </member>
    <member name="E:System.Net.WebClient.WriteStreamClosed">
      <summary>Tritt ein, wenn ein asynchroner Vorgang zum Schreiben eines Streams abgeschlossen wird.</summary>
    </member>
    <member name="T:System.Net.WebException">
      <summary>Diese Ausnahme wird ausgelöst, wenn während des Netzwerkzugriffes über ein austauschbares Protokoll ein Fehler auftritt.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebException" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebException" />-Klasse mit der angegebenen Fehlermeldung.</summary>
      <param name="message">Der Text der Fehlermeldung. </param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebException" />-Klasse mit der angegebenen Fehlermeldung und der angegebenen geschachtelten Ausnahme.</summary>
      <param name="message">Der Text der Fehlermeldung. </param>
      <param name="innerException">Eine geschachtelte Ausnahme. </param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebException" />-Klasse mit der angegebenen Fehlermeldung, der geschachtelten Ausnahme, dem Status und der Antwort.</summary>
      <param name="message">Der Text der Fehlermeldung.</param>
      <param name="status">Einer der <see cref="T:System.Net.WebExceptionStatus" />-Werte.</param>
      <param name="response">Eine <see cref="T:System.Net.WebResponse" />-Instanz, die die Antwort des Remotehosts enthält.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebException" />-Klasse mit der angegebenen Fehlermeldung und dem angegebenen Status.</summary>
      <param name="message">Der Text der Fehlermeldung. </param>
      <param name="status">Einer der <see cref="T:System.Net.WebExceptionStatus" />-Werte. </param>
    </member>
    <member name="P:System.Net.WebException.Response">
      <summary>Ruft die vom Remotehost zurückgegebene Antwort ab.</summary>
      <returns>Wenn eine Antwort der Internetressource verfügbar ist, eine <see cref="T:System.Net.WebResponse" />-Instanz mit der Fehlerantwort einer Internetressource, andernfalls null.</returns>
    </member>
    <member name="P:System.Net.WebException.Status">
      <summary>Ruft den Status der Antwort ab.</summary>
      <returns>Einer der <see cref="T:System.Net.WebExceptionStatus" />-Werte.</returns>
    </member>
    <member name="T:System.Net.WebExceptionStatus">
      <summary>Definiert Statuscodes für die <see cref="T:System.Net.WebException" />-Klasse.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Success">
      <summary>Es ist kein Fehler aufgetreten.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.NameResolutionFailure">
      <summary>Der Namensauflösungsdienst konnte den Hostnamen nicht auflösen. Wird nicht unterstützt. Vorhanden im Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectFailure">
      <summary>Auf der Transportebene konnte keine Verbindung mit dem remoten Dienstpunkt hergestellt werden.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ReceiveFailure">
      <summary>Es wurde keine vollständige Antwort vom Remoteserver empfangen. Wird nicht unterstützt. Vorhanden im Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SendFailure">
      <summary>Es konnte keine vollständige Anforderung an den Remoteserver gesendet werden.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.PipelineFailure">
      <summary>Die Anforderung wurde über eine Pipeline gesendet, und die Verbindung wurde beendet, bevor die Antwort empfangen wurde. Wird nicht unterstützt. Vorhanden im Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestCanceled">
      <summary>Die Anforderung wurde abgebrochen. Es wurde die <see cref="M:System.Net.WebRequest.Abort" />-Methode aufgerufen, oder ein nicht klassifizierbarer Fehler ist aufgetreten. Dies ist der Standardwert für <see cref="P:System.Net.WebException.Status" />.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProtocolError">
      <summary>Die vom Server empfangene Antwort war vollständig, deutete jedoch auf einen Fehler auf Protokollebene hin. In einem HTTP-Protokollfehler, wie 401 Zugriff verweigert, wird z. B. dieser Status verwendet. Wird nicht unterstützt. Vorhanden im Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectionClosed">
      <summary>Die Verbindung wurde vorzeitig getrennt. Wird nicht unterstützt. Vorhanden im Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.TrustFailure">
      <summary>Ein Serverzertifikat konnte nicht überprüft werden. Wird nicht unterstützt. Vorhanden im Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SecureChannelFailure">
      <summary>Beim Einrichten einer Verbindung über SSL ist ein Fehler aufgetreten. Wird nicht unterstützt. Vorhanden im Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ServerProtocolViolation">
      <summary>Die Antwort vom Server war keine gültige HTTP-Antwort. Wird nicht unterstützt. Vorhanden im Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.KeepAliveFailure">
      <summary>Die Verbindung für eine Anforderung, die angibt, dass der Keep-Alive-Header unerwartet geschlossen wurde. Wird nicht unterstützt. Vorhanden im Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Pending">
      <summary>Eine interne asynchrone Anforderung steht aus.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Timeout">
      <summary>Währen des Zeitlimits für eine Anforderung wurde keine Antwort empfangen. Wird nicht unterstützt. Vorhanden im Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProxyNameResolutionFailure">
      <summary>Der Namensauflösungsdienst konnte den Proxyhostnamen nicht auflösen. Wird nicht unterstützt. Vorhanden im Windows Phone.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.UnknownError">
      <summary>Eine Ausnahme unbekannten Typs ist aufgetreten.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.MessageLengthLimitExceeded">
      <summary>Es wurde eine Meldung empfangen, bei der die festgelegte Größe für das Senden einer Anforderung bzw. das Empfangen einer Antwort vom Server überschritten wurde.</summary>
    </member>
    <member name="T:System.Net.WebHeaderCollection">
      <summary>Enthält die einer Anforderung oder einer Antwort zugewiesenen Protokollheader.</summary>
    </member>
    <member name="M:System.Net.WebHeaderCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebHeaderCollection" />-Klasse.</summary>
    </member>
    <member name="P:System.Net.WebHeaderCollection.AllKeys">
      <summary>Ruft die Auflistung der Name-Wert-Paare für Header ab, die der Anforderung zugeordnet sind.</summary>
      <returns>Eine <see cref="T:System.Net.WebHeaderCollection" /> mit den dieser Anforderung zugeordneten Name-Wert-Paaren für Header.</returns>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Count">
      <summary>Ruft die Anzahl der Header in der Auflistung ab.</summary>
      <returns>Ein <see cref="T:System.Int32" />, der die Anzahl der Header in der einer Anforderung zugeordneten <see cref="T:System.Net.WebHeaderCollection" /> angibt.</returns>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Item(System.Net.HttpRequestHeader)">
      <summary>Ruft den angegebenen Anforderungsheader ab oder legt diesen fest.</summary>
      <returns>Eine <see cref="T:System.String" />-Instanz, die den angegebenen Headerwert enthält.</returns>
      <param name="header">Der Wert des Anforderungsheaders.</param>
      <exception cref="T:System.InvalidOperationException">Bei einem Get- oder Set-Vorgang ist der im <paramref name="header" />-Parameter angegebene Anforderungsheader ein eingeschränkter Header. Mit der <see cref="T:System.Net.WebHeaderCollection" />-Klasse kann ein Benutzer keine Instanzen dieses eingeschränkten Headers in dieser <see cref="T:System.Net.WebHeaderCollection" />-Instanz abrufen oder festlegen. </exception>
    </member>
    <member name="P:System.Net.WebHeaderCollection.Item(System.String)">
      <summary>Ruft den angegebenen Anforderungsheader ab oder legt diesen fest.</summary>
      <returns>Eine <see cref="T:System.String" />-Instanz, die den angegebenen Headerwert enthält.</returns>
      <param name="name">Der Name des angeforderten Headers.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter enthält ungültige Zeichen - oder -Es wurde versucht, einen eingeschränkten Header in einem <see cref="T:System.Net.WebHeaderCollection" />-Objekt festzulegen, das einem <see cref="T:System.Net.HttpWebRequest" />-Objekt zugeordnet ist.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter war null.</exception>
      <exception cref="T:System.InvalidOperationException">Bei einem Get- oder Set-Vorgang ist der im <paramref name="name" />-Parameter angegebene Anforderungsheader ein eingeschränkter Header. Mit der <see cref="T:System.Net.WebHeaderCollection" />-Klasse kann ein Benutzer keine Instanzen dieses eingeschränkten Headers in dieser <see cref="T:System.Net.WebHeaderCollection" />-Instanz abrufen oder festlegen. </exception>
    </member>
    <member name="M:System.Net.WebHeaderCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die <see cref="T:System.Net.WebHeaderCollection" />-Instanz durchlaufen kann. </summary>
      <returns>Eine <see cref="T:System.Collections.IEnumerator" />-Schnittstelle für die <see cref="T:System.Net.WebHeaderCollection" />-Schnittstelle.</returns>
    </member>
    <member name="M:System.Net.WebHeaderCollection.ToString">
      <summary>Gibt einen <see cref="T:System.String" /> zurück, der das aktuelle <see cref="T:System.Net.WebHeaderCollection" /> darstellt.</summary>
      <returns>Ein <see cref="T:System.String" />, der das aktuelle <see cref="T:System.Net.WebHeaderCollection" /> darstellt.</returns>
    </member>
    <member name="T:System.Net.WebRequest">
      <summary>Fordert einen URI (Uniform Resource Identifier) an. Dies ist eine abstract-Klasse.</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebRequest" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.WebRequest.Abort">
      <summary>Bricht die Anforderung ab.</summary>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde. </exception>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>Stellt beim Überschreiben in einer Nachfolgerklasse eine asynchrone Methode zum Anfordern eines Streams bereit.</summary>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Anforderung verweist.</returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese asynchrone Anforderung.</param>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde. </exception>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>Startet beim Überschreiben in einer Nachfolgerklasse eine asynchrone Anforderung einer Internetressource.</summary>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Anforderung verweist.</returns>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese asynchrone Anforderung.</param>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde. </exception>
    </member>
    <member name="P:System.Net.WebRequest.ContentLength">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse die Inhaltslänge der zu sendenden Anforderungsdaten ab oder legt diese fest.</summary>
      <returns>Die Anzahl der Bytes der gesendeten Anforderungsdaten.</returns>
    </member>
    <member name="P:System.Net.WebRequest.ContentType">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse den Inhaltstyp der zu sendenden Anforderungsdaten ab oder legt diese fest.</summary>
      <returns>Der Inhaltstyp der Anforderungsdaten.</returns>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde. </exception>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.String)">
      <summary>Initialisiert eine neue <see cref="T:System.Net.WebRequest" />-Instanz für das angegebene URI-Schema.</summary>
      <returns>Ein <see cref="T:System.Net.WebRequest" />-Nachfolger für ein bestimmtes URI-Schema.</returns>
      <param name="requestUriString">Die URI-Zeichenfolge, mit der die Internetressource bezeichnet wird.</param>
      <exception cref="T:System.NotSupportedException">Das in <paramref name="requestUriString" /> angegebene Anforderungsschema wurde nicht registriert. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" /> ist null. </exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die Berechtigung zum Herstellen einer Verbindung mit dem angeforderten URI bzw. einem URI, an den die Anforderung umgeleitet wurde. </exception>
      <exception cref="T:System.UriFormatException">Der in <paramref name="requestUriString" /> angegebene URI ist kein gültiger URI. </exception>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.Uri)">
      <summary>Initialisiert eine neue <see cref="T:System.Net.WebRequest" />-Instanz für das angegebene URI-Schema.</summary>
      <returns>Ein <see cref="T:System.Net.WebRequest" />-Nachfolger für ein bestimmtes URI-Schema.</returns>
      <param name="requestUri">Ein <see cref="T:System.Uri" /> mit dem URI der angeforderten Ressource.</param>
      <exception cref="T:System.NotSupportedException">Das in <paramref name="requestUri" /> angegebene Anforderungsschema wurde nicht registriert. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist null. </exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die Berechtigung zum Herstellen einer Verbindung mit dem angeforderten URI bzw. einem URI, an den die Anforderung umgeleitet wurde. </exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.String)">
      <summary>Initialisiert eine neue <see cref="T:System.Net.HttpWebRequest" />-Instanz für die angegebene URI-Zeichenfolge.</summary>
      <returns>Eine <see cref="T:System.Net.HttpWebRequest" />-Instanz für die spezifische URI-Zeichenfolge.</returns>
      <param name="requestUriString">Eine URI-Zeichenfolge, mit der die Internetressource bezeichnet wird. </param>
      <exception cref="T:System.NotSupportedException">Das in <paramref name="requestUriString" /> angegebene Anforderungsschema ist das http- oder das https-Schema. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" /> ist null. </exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die Berechtigung zum Herstellen einer Verbindung mit dem angeforderten URI bzw. einem URI, an den die Anforderung umgeleitet wurde. </exception>
      <exception cref="T:System.UriFormatException">Der in <paramref name="requestUriString" /> angegebene URI ist kein gültiger URI. </exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.Uri)">
      <summary>Initialisiert eine neue <see cref="T:System.Net.HttpWebRequest" />-Instanz für den angegebenen URI.</summary>
      <returns>Eine <see cref="T:System.Net.HttpWebRequest" />-Instanz für die spezifische URI-Zeichenfolge.</returns>
      <param name="requestUri">Ein URI, mit dem die Internetressource bezeichnet wird.</param>
      <exception cref="T:System.NotSupportedException">Das in <paramref name="requestUri" /> angegebene Anforderungsschema ist das http- oder das https-Schema. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist null. </exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die Berechtigung zum Herstellen einer Verbindung mit dem angeforderten URI bzw. einem URI, an den die Anforderung umgeleitet wurde. </exception>
      <exception cref="T:System.UriFormatException">Der in <paramref name="requestUri" /> angegebene URI ist kein gültiger URI. </exception>
    </member>
    <member name="P:System.Net.WebRequest.CreatorInstance">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse das von der <see cref="T:System.Net.IWebRequestCreate" />-Klasse abgeleitete Factoryobjekt ab. Mit dieser Klasse wird die <see cref="T:System.Net.WebRequest" /> erstellt, die instanziiert wird, um die Anforderung an den angegebenen URI zu stellen.</summary>
      <returns>Der abgeleitete <see cref="T:System.Net.WebRequest" />-Typ, der von der <see cref="M:System.Net.IWebRequestCreate.Create(System.Uri)" />-Methode zurückgegeben wird.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Credentials">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse die Netzwerkanmeldeinformationen, die für die Authentifizierung der Anforderung der Internetressource verwendet werden, ab oder legt diese fest.</summary>
      <returns>
        <see cref="T:System.Net.ICredentials" /> mit den mit der Anforderung verknüpften Authentifizierungsanmeldeinformationen. Die Standard ist NULL.</returns>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde. </exception>
    </member>
    <member name="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>Gibt beim Überschreiben in einer Nachfolgerklasse einen <see cref="T:System.IO.Stream" /> zum Schreiben von Daten in die Internetressource zurück.</summary>
      <returns>Ein <see cref="T:System.IO.Stream" />, in den Daten geschrieben werden können.</returns>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das auf eine ausstehende Anforderung eines Streams verweist.</param>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde. </exception>
    </member>
    <member name="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Gibt beim Überschreiben in einer Nachfolgerklasse eine <see cref="T:System.Net.WebResponse" /> zurück.</summary>
      <returns>Eine <see cref="T:System.Net.WebResponse" /> mit einer Antwort auf die Internetanforderung.</returns>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das auf eine ausstehende Anforderung einer Antwort verweist.</param>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde. </exception>
    </member>
    <member name="P:System.Net.WebRequest.Headers">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse eine Auflistung von Name-Wert-Paaren für Header ab, die mit der Anforderung verknüpft sind, oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Net.WebHeaderCollection" /> mit den dieser Anforderung zugeordneten Name-Wert-Paaren für Header.</returns>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde. </exception>
    </member>
    <member name="P:System.Net.WebRequest.Method">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse die in dieser Anforderung zu verwendende Protokollmethode ab oder legt diese fest.</summary>
      <returns>Die in dieser Anforderung zu verwendende Protokollmethode.</returns>
      <exception cref="T:System.NotImplementedException">Wenn die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wird, wird auf die unterschiedlichste Art versucht, diese Eigenschaft abzurufen oder festzulegen. </exception>
    </member>
    <member name="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
      <summary>Registriert einen <see cref="T:System.Net.WebRequest" />-Nachfolger für den angegebenen URI.</summary>
      <returns>true bei erfolgreicher Registrierung; andernfalls false.</returns>
      <param name="prefix">Der vollständige URI oder das URI-Präfix, der bzw. das den <see cref="T:System.Net.WebRequest" />-Nachfolger bearbeitet.</param>
      <param name="creator">Die Erstellungsmethode, die die <see cref="T:System.Net.WebRequest" /> zum Erstellen des <see cref="T:System.Net.WebRequest" />-Nachfolgers aufruft.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> ist null.- oder - <paramref name="creator" /> ist null. </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="prefix" /> ist unbekannt oder wird nicht unterstützt.</exception>
    </member>
    <member name="P:System.Net.WebRequest.RequestUri">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse den mit der Anforderung verknüpften URI der Internetressource ab.</summary>
      <returns>Ein <see cref="T:System.Uri" />, der die der Anforderung zugeordnete Ressource darstellt.</returns>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde. </exception>
    </member>
    <member name="P:System.Net.WebRequest.UseDefaultCredentials">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse einen <see cref="T:System.Boolean" />-Wert ab, der steuert, ob mit den Anforderungen Standardanmeldeinformationen gesendet werden, oder legt diesen fest.</summary>
      <returns>true, wenn die Standardanmeldeinformationen verwendet werden, andernfalls false. Für Anforderungen, die mit dem <see cref="P:System.Net.Browser.WebRequestCreator.ClientHttp" />-Stapel erstellt wurden, ist false der Standardwert.</returns>
      <exception cref="T:System.NotImplementedException">Diese Eigenschaft ist nicht implementiert.</exception>
    </member>
    <member name="T:System.Net.WebResponse">
      <summary>Stellt eine Antwort eines URIs (Uniform Resource Identifier) bereit. Dies ist eine abstract-Klasse.</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebResponse" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.WebResponse.Close">
      <summary>Schließt beim Überschreiben durch eine Nachfolgerklasse den Antwortstream.</summary>
      <exception cref="T:System.NotSupportedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde. </exception>
    </member>
    <member name="P:System.Net.WebResponse.ContentLength">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse die Inhaltslänge der empfangenen Daten ab oder legt diese fest.</summary>
      <returns>Die Anzahl der von der Internetressource zurückgegebenen Bytes.</returns>
      <exception cref="T:System.NotSupportedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde. </exception>
    </member>
    <member name="P:System.Net.WebResponse.ContentType">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse den Inhaltstyp der empfangenen Daten ab oder legt diesen fest.</summary>
      <returns>Eine Zeichenfolge, die den Inhaltstyp der Antwort enthält.</returns>
      <exception cref="T:System.NotSupportedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde. </exception>
    </member>
    <member name="M:System.Net.WebResponse.Dispose">
      <summary>Gibt die von der aktuellen Instanz der <see cref="T:System.Net.WebResponse" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Net.WebResponse.GetResponseStream">
      <summary>Gibt beim Überschreiben in einer Nachfolgerklasse den Datenstream von der Internetressource zurück.</summary>
      <returns>Eine Instanz der <see cref="T:System.IO.Stream" />-Klasse zum Lesen von Daten aus der Internetressource.</returns>
      <exception cref="T:System.NotSupportedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde. </exception>
    </member>
    <member name="P:System.Net.WebResponse.Headers">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse eine Auflistung von Name-Wert-Paaren für Header ab, die dieser Anforderung zugeordnet sind.</summary>
      <returns>Eine Instanz der <see cref="T:System.Net.WebHeaderCollection" />-Klasse, die Headerwerte enthält, die dieser Antwort zugeordnet sind.</returns>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde. </exception>
    </member>
    <member name="P:System.Net.WebResponse.ResponseUri">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse den URI der Internetressource ab, die letztlich auf die Anforderung geantwortet hat.</summary>
      <returns>Eine Instanz der <see cref="T:System.Uri" />-Klasse, die den URI der Internetressource enthält, die letztlich auf die Anforderung geantwortet hat.</returns>
      <exception cref="T:System.NotSupportedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde. </exception>
    </member>
    <member name="P:System.Net.WebResponse.SupportsHeaders">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Net.WebResponse.Headers" />-Eigenschaft von der Nachfolgerklasse für die <see cref="T:System.Net.WebResponse" />-Instanz unterstützt wird.</summary>
      <returns>true, wenn die <see cref="P:System.Net.WebResponse.Headers" />-Eigenschaft von der <see cref="T:System.Net.HttpWebRequest" />-Instanz in der Nachfolgerklasse unterstützt wird, andernfalls false.</returns>
    </member>
    <member name="T:System.Net.WriteStreamClosedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Net.WebClient.WriteStreamClosed" />-Ereignis bereit.</summary>
    </member>
    <member name="P:System.Net.WriteStreamClosedEventArgs.Error">
      <summary>Ruft den Fehler ab, der einem <see cref="E:System.Net.WebClient.WriteStreamClosed" />-Ereignis zugeordnet ist.</summary>
      <returns>Die einem <see cref="E:System.Net.WebClient.WriteStreamClosed" />-Ereignis zugeordnete Ausnahme, wenn ein Fehler auftritt.</returns>
    </member>
    <member name="T:System.Net.WriteStreamClosedEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.Net.WebClient.WriteStreamClosed" />-Ereignisses eines <see cref="T:System.Net.WebClient" />-Objekts dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Eine Instanz von <see cref="T:System.Net.WriteStreamClosedEventArgs" />, die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkAddressChangedEventHandler">
      <summary>Verweist auf eine oder mehrere Methoden, die aufgerufen werden, wenn sich die Adresse einer Netzwerkschnittstelle ändert.</summary>
      <param name="sender">Die Quelle des Ereignisses. </param>
      <param name="e">Ein <see cref="T:System.EventArgs" />-Objekt, das Daten über das Ereignis enthält. </param>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkChange">
      <summary>Ermöglicht Anwendungen das Empfangen einer Benachrichtigung, wenn sich die IP (Internet Protocol)-Adresse einer Netzwerkschnittstelle, auch als Netzwerkkarte oder -adapter bezeichnet, ändert.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkChange.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.NetworkInformation.NetworkChange" />-Klasse.</summary>
    </member>
    <member name="E:System.Net.NetworkInformation.NetworkChange.NetworkAddressChanged">
      <summary>Tritt ein, wenn sich die IP-Adresse einer Netzwerkschnittstelle ändert.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInterface">
      <summary>Stellt Verfügbarkeitsinformationen für eine Netzwerkschnittstelle bereit.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInterface.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.NetworkInformation.NetworkInterface" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable">
      <summary>Gibt an, ob eine Netzwerkverbindung verfügbar ist.</summary>
      <returns>true, wenn eine Netzwerkverbindung verfügbar ist, andernfalls false.</returns>
    </member>
    <member name="T:System.Net.Sockets.AddressFamily">
      <summary>Gibt das Adressierschema an, das durch eine Instanz der <see cref="T:System.Net.Sockets.Socket" />-Klasse verwendet werden kann.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unknown">
      <summary>Eine unbekannte Adressfamilie.Wird für die Verwendung in einer Windows Phone-Anwendung nicht unterstützt.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unspecified">
      <summary>Eine Adressfamilie wurde nicht angegeben.Wird für die Verwendung in einer Windows Phone-Anwendung nicht unterstützt.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetwork">
      <summary>Eine Adresse für IP Version 4. </summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetworkV6">
      <summary>Eine Adresse für IP Version 6.Wird für die Verwendung in einer Windows Phone-Anwendung nicht unterstützt.</summary>
    </member>
    <member name="T:System.Net.Sockets.ProtocolType">
      <summary>Gibt da Protokoll an, das von der <see cref="T:System.Net.Sockets.Socket" />-Klasse unterstützt wird.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Tcp">
      <summary>Das Transmission Control Protocol (TCP).</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Udp">
      <summary>Das User Datagram Protocol (UDP). Diese Protokolltyp wird unter Windows Phone nicht unterstützt. </summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unspecified">
      <summary>Der Protokolltyp wurde nicht angegeben.</summary>
    </member>
    <member name="F:System.Net.Sockets.ProtocolType.Unknown">
      <summary>Ein unbekannter Protokolltyp. </summary>
    </member>
    <member name="T:System.Net.Sockets.Socket">
      <summary>Implementiert die Berkeley-Sockets-Schnittstelle.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.Socket" />-Klasse unter Verwendung der angegebenen Adressfamilie sowie des angegebenen Sockettyps und Protokolls.</summary>
      <param name="addressFamily">Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte.</param>
      <param name="socketType">Einer der <see cref="T:System.Net.Sockets.SocketType" />-Werte.</param>
      <param name="protocolType">Einer der <see cref="T:System.Net.Sockets.ProtocolType" />-Werte.</param>
      <exception cref="T:System.ArgumentException">Ein Parameter war ungültig. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Die Kombination von <paramref name="addressFamily" />, <paramref name="socketType" /> und <paramref name="protocolType" /> führt zu einem ungültigen Socket. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Beginnt einen asynchronen Vorgang, um eine eingehende Verbindung anzunehmen.</summary>
      <returns>Gibt true zurück, wenn der Vorgang aussteht. Das SocketAsyncEventArgs.Completed-Ereignis für den e-Parameter wird nach dem Abschluss des Vorgangs ausgelöst. Gibt false zurück, wenn der Vorgang synchron abgeschlossen wurde. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den e-Parameter wird nicht ausgelöst, und das als Parameter übergebene e-Objekt kann direkt nach der Rückgabe des Methodenaufrufs untersucht werden, um die Ergebnisse des Vorgangs abzurufen.</returns>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
    </member>
    <member name="P:System.Net.Sockets.Socket.AddressFamily">
      <summary>Ruft die Adressfamilie des <see cref="T:System.Net.Sockets.Socket" /> ab.</summary>
      <returns>Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)">
      <summary>Ordnet einem Socket einen festgelegten lokalen Endpunkt zu. Vor der Verwendung der <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />-Methode müssen Sie die Bind-Methode nur dann aufrufen, wenn ein bestimmter lokaler Endpunkt verwendet werden muss.</summary>
      <param name="localEP">Der lokale <see cref="T:System.Net.EndPoint" />, der dem <see cref="T:System.Net.Sockets.Socket" /> zugeordnet werden soll.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Bricht einen ausstehenden asynchronen Socketvorgang für eine Remotehostverbindung ab.</summary>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt für den asynchronen Socketvorgang, der abgebrochen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="e" />-Parameter ist null. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close">
      <summary>Schließt die <see cref="T:System.Net.Sockets.Socket" />-Verbindung und gibt alle zugeordneten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Close(System.Int32)">
      <summary>Schließt die <see cref="T:System.Net.Sockets.Socket" />-Verbindung und gibt alle zugeordneten Ressourcen mit einem angegebenen Timeout frei, damit Daten in der Warteschlange gesendet werden können.</summary>
      <param name="timeout">Die maximale Zeit in Sekunden, die gewartet wird, um verbleibende Daten zu senden und den <see cref="T:System.Net.Sockets.Socket" /> dann zu schließen.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="timeout" /> ist kleiner als 0. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Beginnt eine asynchrone Anforderung einer Remotehostverbindung.</summary>
      <returns>Gibt true zurück, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für das im <paramref name="e" />-Parameter übergebene <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt wird nach dem Abschluss des Vorgangs ausgelöst. Gibt false zurück, wenn der E/A-Vorgang synchron abgeschlossen wurde. In diesem Fall wird das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für das im <paramref name="e" />-Parameter übergebene <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt nicht ausgelöst. Das im <paramref name="e" />-Parameter übergebene <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt kann sofort nach Rückgabe des Methodenaufrufs untersucht werden, um das Ergebnis des Vorgangs abzurufen.</returns>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <exception cref="T:System.ArgumentException">Ein Argument ist ungültig. Diese Ausnahme tritt auf, wenn mehrere Puffer angegeben werden und die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />-Eigenschaft nicht NULL ist. </exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> darf nicht NULL sein.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.Socket" /> führt eine Überwachung durch, oder ein Socketvorgang wird bereits mit dem im <paramref name="e" />-Parameter übergebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt ausgeführt.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows XP oder höher erforderlich. Diese Ausnahme tritt auch auf, wenn <see cref="T:System.Net.Sockets.Socket" /> und <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> nicht die gleiche Adressfamilie aufweisen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen. </exception>
      <exception cref="T:System.Security.SecurityException">Ein in der Aufrufliste übergeordneter Aufrufer hat keine Berechtigung für den angeforderten Vorgang.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Beginnt eine asynchrone Anforderung einer Remotehostverbindung.</summary>
      <returns>Gibt true zurück, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für das im <paramref name="e" />-Parameter übergebene <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt wird nach dem Abschluss des Vorgangs ausgelöst. Gibt false zurück, wenn der E/A-Vorgang synchron abgeschlossen wurde. In diesem Fall wird das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für das im <paramref name="e" />-Parameter übergebene <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt nicht ausgelöst. Das im <paramref name="e" />-Parameter übergebene <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt kann sofort nach Rückgabe des Methodenaufrufs untersucht werden, um das Ergebnis des Vorgangs abzurufen.</returns>
      <param name="socketType">Der Sockettyp, mit dem die Verbindung hergestellt werden soll.</param>
      <param name="protocolType">Der Protokolltyp, mit dem die Verbindung hergestellt werden soll.</param>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <exception cref="T:System.ArgumentException">Ein Argument ist ungültig. Diese Ausnahme tritt auf, wenn mehrere Puffer angegeben werden und die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />-Eigenschaft nicht NULL ist. </exception>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> darf nicht NULL sein.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Net.Sockets.Socket" /> führt eine Überwachung durch, oder ein Socketvorgang wird bereits mit dem im <paramref name="e" />-Parameter übergebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt ausgeführt.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows XP oder höher erforderlich. Diese Ausnahme tritt auch auf, wenn <see cref="T:System.Net.Sockets.Socket" /> und <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> nicht die gleiche Adressfamilie aufweisen.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen. </exception>
      <exception cref="T:System.Security.SecurityException">Ein in der Aufrufliste übergeordneter Aufrufer hat keine Berechtigung für den angeforderten Vorgang.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Connected">
      <summary>Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Net.Sockets.Socket" /> mit dem Remotehost des letzten Vorgangs verbunden ist.</summary>
      <returns>true, wenn <see cref="T:System.Net.Sockets.Socket" /> beim letzten Vorgang mit einer Remoteressource verbunden war, andernfalls false.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose">
      <summary>Gibt die vom <see cref="T:System.Net.Sockets.Socket" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Dispose(System.Boolean)">
      <summary>Gibt die vom <see cref="T:System.Net.Sockets.Socket" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing">true, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. false, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.Sockets.Socket.Finalize">
      <summary>Gibt von der <see cref="T:System.Net.Sockets.Socket" />-Klasse verwendete Ressourcen frei.</summary>
    </member>
    <member name="M:System.Net.Sockets.Socket.Listen(System.Int32)">
      <summary>Überwacht eingehende Verbindungsversuche.</summary>
      <param name="backlog">Die maximale Länge der Warteschlange für ausstehende Verbindungen.</param>
    </member>
    <member name="P:System.Net.Sockets.Socket.LocalEndPoint">
      <summary>Ruft den lokalen Endpunkt ab, der die lokale IP-Adresse und Anschlussnummer enthält, an die der Socket gebunden ist. Dies ist der Endpunkt, den der Socket für die Kommunikation verwendet.</summary>
      <returns>Der <see cref="T:System.Net.EndPoint" />, den der <see cref="T:System.Net.Sockets.Socket" /> für die Kommunikation verwendet.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.NoDelay">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.Socket" /> den Nagle-Algorithmus verwendet, oder legt diesen fest.</summary>
      <returns>false, wenn der <see cref="T:System.Net.Sockets.Socket" /> den Nagle-Algorithmus verwendet, andernfalls true. Der Standardwert ist false.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" />. Weitere Informationen finden Sie im Abschnitt "Hinweise". </exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv4">
      <summary>Ruft einen Wert ab, der angibt, ob IPv4-Unterstützung verfügbar und auf dem aktuellen Host aktiviert ist.</summary>
      <returns>true, wenn der aktuelle Host das Protokoll IPv4 unterstützt, andernfalls false.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.OSSupportsIPv6">
      <summary>Ruft einen Wert ab, der angibt, ob IPv6-Unterstützung verfügbar und auf dem aktuellen Host aktiviert ist.</summary>
      <returns>true, wenn der aktuelle Host das Protokoll IPv4 unterstützt, andernfalls false.</returns>
    </member>
    <member name="P:System.Net.Sockets.Socket.ProtocolType">
      <summary>Ruft den Protokolltyp des <see cref="T:System.Net.Sockets.Socket" /> ab.</summary>
      <returns>Einer der <see cref="T:System.Net.Sockets.ProtocolType" />-Werte.</returns>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Startet eine asynchrone Anforderung, um Daten von einem verbundenen <see cref="T:System.Net.Sockets.Socket" />-Objekt zu empfangen.</summary>
      <returns>Gibt true zurück, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für das im <paramref name="e" />-Parameter übergebene <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt wird nach dem Abschluss des Vorgangs ausgelöst. Gibt false zurück, wenn der E/A-Vorgang synchron abgeschlossen wurde. In diesem Fall wird das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für das im <paramref name="e" />-Parameter übergebene <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt nicht ausgelöst. Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt im <paramref name="e" />-Parameter kann sofort nach Rückgabe des Methodenaufrufs untersucht werden, um das Ergebnis des Vorgangs abzurufen.</returns>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <exception cref="T:System.ArgumentException">Ein Argument war ungültig. Die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft oder <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />-Eigenschaft des im <paramref name="e" />-Parameter übergebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekts muss auf gültige Puffer verweisen. Eine dieser Eigenschaften kann festgelegt werden, nicht jedoch beide gleichzeitig.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für eine interne Socketoption, die <see cref="T:System.Net.Sockets.Socket" /> zugeordnet ist, war falsch.</exception>
      <exception cref="T:System.InvalidOperationException">Es wird bereits ein Socketvorgang mit dem im <paramref name="e" />-Parameter übergebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt ausgeführt.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows XP oder höher erforderlich.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise". </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.ReceiveBufferSize">
      <summary>Ruft einen Wert ab, der die Größe des Empfangspuffers des <see cref="T:System.Net.Sockets.Socket" /> angibt, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Int32" />, das die Größe des Empfangspuffer in Bytes enthält. Der Standardwert ist 8192.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der für einen set-Vorgang angegebene Wert ist kleiner als 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Startet eine asynchrone Anforderung, um Daten von einem festgelegten Remotehost zu empfangen.</summary>
      <returns>Gibt true zurück, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter wird nach dem Abschluss des Vorgangs ausgelöst.Gibt false zurück, wenn der E/A-Vorgang synchron abgeschlossen wurde. In diesem Fall wird das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter nicht ausgelöst, und das als Parameter übergebene <paramref name="e" />-Objekt kann direkt nach der Rückgabe des Methodenaufrufs untersucht werden, um die Ergebnisse des Vorgangs abzurufen.</returns>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> darf nicht NULL sein.</exception>
      <exception cref="T:System.InvalidOperationException">Es wird bereits ein Socketvorgang mit dem im <paramref name="e" />-Parameter angegebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt ausgeführt.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.RemoteEndPoint">
      <summary>Ruft den Remoteendpunkt ab.</summary>
      <returns>Der <see cref="T:System.Net.EndPoint" />, mit dem der <see cref="T:System.Net.Sockets.Socket" /> kommuniziert.</returns>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise". </exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Sendet Daten asynchron an ein verbundenes <see cref="T:System.Net.Sockets.Socket" />-Objekt.</summary>
      <returns>Gibt true zurück, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für das im <paramref name="e" />-Parameter übergebene <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt wird nach dem Abschluss des Vorgangs ausgelöst. Gibt false zurück, wenn der E/A-Vorgang synchron abgeschlossen wurde. In diesem Fall wird das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für das im <paramref name="e" />-Parameter übergebene <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt nicht ausgelöst. Das im <paramref name="e" />-Parameter übergebene <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt kann sofort nach Rückgabe des Methodenaufrufs untersucht werden, um das Ergebnis des Vorgangs abzurufen.</returns>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft oder <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />-Eigenschaft des im <paramref name="e" />-Parameter übergebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekts muss auf gültige Puffer verweisen. Eine dieser Eigenschaften kann festgelegt werden, nicht jedoch beide gleichzeitig.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert für eine interne Socketoption, die <see cref="T:System.Net.Sockets.Socket" /> zugeordnet ist, war falsch.</exception>
      <exception cref="T:System.InvalidOperationException">Es wird bereits ein Socketvorgang mit dem im <paramref name="e" />-Parameter übergebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt ausgeführt.</exception>
      <exception cref="T:System.NotSupportedException">Für diese Methode ist Windows XP oder höher erforderlich.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Der <see cref="T:System.Net.Sockets.Socket" /> ist noch nicht verbunden.</exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.SendBufferSize">
      <summary>Ruft einen Wert ab, der die Größe des Sendepuffers für den <see cref="T:System.Net.Sockets.Socket" /> angibt, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Int32" />, das die Größe des Sendepuffer in Bytes enthält. Der Standardwert ist 8192.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der für einen set-Vorgang angegebene Wert ist kleiner als 0.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen. </exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Sendet Daten asynchron an einen bestimmten Remotehost.</summary>
      <returns>Gibt true zurück, wenn der E/A-Vorgang aussteht. Das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter wird nach dem Abschluss des Vorgangs ausgelöst.Gibt false zurück, wenn der E/A-Vorgang synchron abgeschlossen wurde. In diesem Fall wird das <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />-Ereignis für den <paramref name="e" />-Parameter nicht ausgelöst, und das als Parameter übergebene <paramref name="e" />-Objekt kann direkt nach der Rückgabe des Methodenaufrufs untersucht werden, um die Ergebnisse des Vorgangs abzurufen.</returns>
      <param name="e">Das <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt, das für diesen asynchronen Socketvorgang verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> darf nicht NULL sein.</exception>
      <exception cref="T:System.InvalidOperationException">Es wird bereits ein Socketvorgang mit dem im <paramref name="e" />-Parameter angegebenen <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt ausgeführt.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Dieser Fehler kann auftreten, wenn der angegebene Socket vom Typ <see cref="F:System.Net.Sockets.SocketType.Stream" /> verbindungsorientiert ist, der <see cref="T:System.Net.Sockets.Socket" /> aber noch nicht verbunden ist.</exception>
    </member>
    <member name="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)">
      <summary>Deaktiviert Senden und Empfangen für einen <see cref="T:System.Net.Sockets.Socket" />.</summary>
      <param name="how">Einer der <see cref="T:System.Net.Sockets.SocketShutdown" />-Werte, der den Vorgang angibt, der nicht mehr zulässig ist.</param>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise". </exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen. </exception>
    </member>
    <member name="P:System.Net.Sockets.Socket.Ttl">
      <summary>Ruft einen Wert ab, der die Gültigkeitsdauer (TTL) von IP (Internet Protocol)-Paketen angibt, die vom <see cref="T:System.Net.Sockets.Socket" /> gesendet werden.</summary>
      <returns>Der TTL-Wert.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der TTL-Wert kann nicht auf einen Wert festgelegt werden, der kleiner als 0 ist.</exception>
      <exception cref="T:System.NotSupportedException">Diese Eigenschaft kann nur für Sockets in der <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />-Familie oder der <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />-Familie festgelegt werden.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket.</exception>
      <exception cref="T:System.ObjectDisposedException">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen. </exception>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncEventArgs">
      <summary>Stellt einen asynchronen Socketvorgang dar.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor">
      <summary>Erstellt eine leere <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Instanz.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket">
      <summary>Ruft den Socket ab, der zum Akzeptieren einer Verbindung mit einer asynchronen Socketmethode erstellt wird, oder legt ihn fest.</summary>
      <returns>Der zu verwendende <see cref="T:System.Net.Sockets.Socket" /> oder der Socket, der zum Akzeptieren einer Verbindung mit einer asynchronen Socketmethode erstellt wird.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer">
      <summary>Ruft den Datenpuffer ab, der mit einer asynchronen Socketmethode verwendet werden soll.</summary>
      <returns>Ein <see cref="T:System.Byte" />-Array, das den Datenpuffer darstellt, der mit einer asynchronen Socketmethode verwendet werden soll.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList">
      <summary>Ruft ein Array von Datenpuffern ab, die mit einer asynchronen Socketmethode verwendet werden sollen, oder legt es fest.</summary>
      <returns>Ein Array von Datenpuffern, die mit einer asynchronen Socketmethode verwendet werden sollen.</returns>
      <exception cref="T:System.ArgumentException">Für einen set-Vorgang wurden mehrdeutige Puffer angegeben. Diese Ausnahme tritt auf, wenn ein anderer Wert als NULL übergeben wird und die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft ebenfalls nicht NULL ist.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred">
      <summary>Ruft die Anzahl der im Socketvorgang übertragenen Bytes ab.</summary>
      <returns>Die Anzahl der im Socketvorgang übertragenen Bytes.</returns>
    </member>
    <member name="E:System.Net.Sockets.SocketAsyncEventArgs.Completed">
      <summary>Ein Ereignis, das angibt, dass ein asynchroner Vorgang abgeschlossen wurde.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError">
      <summary>Ruft die Ausnahme im Fall eines Verbindungsfehlers ab, wenn <see cref="T:System.Net.DnsEndPoint" /> verwendet wurde.</summary>
      <returns>Eine <see cref="T:System.Exception" />, die die Ursache des Verbindungsfehlers angibt, wenn <see cref="T:System.Net.DnsEndPoint" /> für die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />-Eigenschaft angegeben wurde.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket">
      <summary>Das erstellte und verbundene <see cref="T:System.Net.Sockets.Socket" />-Objekt nach dem erfolgreichen Beenden der <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" />-Methode.</summary>
      <returns>Das verbundene <see cref="T:System.Net.Sockets.Socket" />-Objekt. </returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Count">
      <summary>Ruft die maximale Datenmenge in Bytes ab, die in einem asynchronen Vorgang gesendet oder empfangen wird.</summary>
      <returns>Die maximale Datenmenge in Bytes, die gesendet oder empfangen werden soll.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose">
      <summary>Gibt die von der <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Instanz verwendeten nicht verwalteten Ressourcen zurück und verwirft optional die verwalteten Ressourcen.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize">
      <summary>Gibt von der <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Klasse verwendete Ressourcen frei.</summary>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation">
      <summary>Ruft den Typ des Socketvorgangs ab, der zuletzt mit diesem Objekt ausgeführt wurde.</summary>
      <returns>Der Typ des Socketvorgangs, der zuletzt mit diesem <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" />-Objekt ausgeführt wurde.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.Offset">
      <summary>Ruft den Offset in Bytes im Datenpuffer ab, auf den von der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft verwiesen wird.</summary>
      <returns>Der Offset in Bytes im Datenpuffer, auf den von der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft verwiesen wird.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
      <summary>Stellt eine Methode dar, die beim Abschluss eines asynchronen Vorgangs aufgerufen wird.</summary>
      <param name="e">Das signalisierte Ereignis.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint">
      <summary>Ruft den Remote-IP- oder DNS-Endpunkt für einen asynchronen Vorgang ab oder legt diesen fest.</summary>
      <returns>Der Remote-IP-Endpunkt für einen asynchronen Vorgang.</returns>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)">
      <summary>Legt den Datenpuffer fest, der mit einer asynchronen Socketmethode verwendet werden soll.</summary>
      <param name="buffer">Der Datenpuffer, der mit einer asynchronen Socketmethode verwendet werden soll.</param>
      <param name="offset">Der Offset (in Bytes) im Datenpuffer, in dem der Vorgang beginnt.</param>
      <param name="count">Die maximale Datenmenge in Bytes, die im Puffer gesendet oder empfangen werden soll.</param>
      <exception cref="T:System.ArgumentException">Es wurden mehrdeutige Puffer angegeben. Diese Ausnahme tritt auf, wenn die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft nicht NULL ist und die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />-Eigenschaft ebenfalls nicht NULL ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Argument lag außerhalb des gültigen Bereichs. Diese Ausnahme tritt auf, wenn der <paramref name="offset" />-Parameter kleiner als 0 (null) oder größer als die Länge des Arrays in der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft ist. Diese Ausnahme tritt außerdem auf, wenn der <paramref name="count" />-Parameter kleiner als 0 (null) oder größer als die Länge des Arrays in der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft abzüglich des <paramref name="offset" />-Parameters ist.</exception>
    </member>
    <member name="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)">
      <summary>Legt den Datenpuffer fest, der mit einer asynchronen Socketmethode verwendet werden soll.</summary>
      <param name="offset">Der Offset (in Bytes) im Datenpuffer, in dem der Vorgang beginnt.</param>
      <param name="count">Die maximale Datenmenge in Bytes, die im Puffer gesendet oder empfangen werden soll.</param>
      <exception cref="T:System.ArgumentException">Es wurden mehrdeutige Puffer angegeben. Diese Ausnahme tritt auf, wenn die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft nicht NULL ist und die <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />-Eigenschaft ebenfalls nicht NULL ist.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Ein Argument lag außerhalb des gültigen Bereichs. Diese Ausnahme tritt auf, wenn der <paramref name="offset" />-Parameter kleiner als 0 (null) oder größer als die Länge des Arrays in der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft ist. Diese Ausnahme tritt außerdem auf, wenn der <paramref name="count" />-Parameter kleiner als 0 (null) oder größer als die Länge des Arrays in der <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />-Eigenschaft abzüglich des <paramref name="offset" />-Parameters ist.</exception>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError">
      <summary>Ruft das Ergebnis des asynchronen Socketvorgangs ab oder legt dieses fest.</summary>
      <returns>Das Ergebnis des asynchronen Socketvorgangs.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken">
      <summary>Ruft ein Benutzer- oder Anwendungsobjekt ab, das diesem asynchronen Socketvorgang zugeordnet ist, oder legt es fest.</summary>
      <returns>Ein Objekt, das das Benutzer- oder Anwendungsobjekt darstellt, das diesem asynchronen Socketvorgang zugeordnet ist.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketAsyncOperation">
      <summary>Der Typ des asynchronen Socketvorgangs, der zuletzt mit diesem Objekt ausgeführt wurde.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.None">
      <summary>Keiner der Socketvorgänge.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Accept">
      <summary>Ein Accept-Socketvorgang.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Connect">
      <summary>Ein Connect-Socketvorgang.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Receive">
      <summary>Ein Receive-Socketvorgang.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.ReceiveFrom">
      <summary>Ein ReceiveFrom-Socketvorgang.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.Send">
      <summary>Ein Send-Socketvorgang.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketAsyncOperation.SendTo">
      <summary>Ein SendTo-Socketvorgang.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketError">
      <summary>Definiert Fehlercodes für die <see cref="T:System.Net.Sockets.Socket" />-Klasse.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Success">
      <summary>Der <see cref="T:System.Net.Sockets.Socket" />-Vorgang war erfolgreich.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketError">
      <summary>Ein unbekannter <see cref="T:System.Net.Sockets.Socket" />-Fehler ist aufgetreten.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Interrupted">
      <summary>Ein blockierender <see cref="T:System.Net.Sockets.Socket" />-Aufruf wurde abgebrochen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AccessDenied">
      <summary>Es wurde versucht, auf eine Weise auf einen <see cref="T:System.Net.Sockets.Socket" /> zuzugreifen, die durch seine Zugriffsberechtigungen ausgeschlossen wird.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Fault">
      <summary>Vom zugrunde liegenden Socketanbieter wurde eine ungültige Zeigeradresse erkannt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InvalidArgument">
      <summary>Für einen <see cref="T:System.Net.Sockets.Socket" />-Member wurde ein ungültiges Argument angegeben.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TooManyOpenSockets">
      <summary>Im zugrunde liegenden Socketanbieter sind zu viele offene Sockets vorhanden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.WouldBlock">
      <summary>Ein Vorgang für ein nicht blockierendes Socket kann nicht sofort abgeschlossen werden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InProgress">
      <summary>Ein blockierender Vorgang wird ausgeführt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AlreadyInProgress">
      <summary>Für den nicht blockierenden <see cref="T:System.Net.Sockets.Socket" /> wird bereits ein Vorgang ausgeführt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotSocket">
      <summary>Es wurde versucht, einen <see cref="T:System.Net.Sockets.Socket" />-Vorgang für ein Element auszuführen, das keinen Socket darstellt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.DestinationAddressRequired">
      <summary>Eine erforderliche Adresse wurde von einem Vorgang für einen <see cref="T:System.Net.Sockets.Socket" /> ausgelassen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.MessageSize">
      <summary>Das Datagramm ist zu lang.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolType">
      <summary>Der Protokolltyp ist für diesen <see cref="T:System.Net.Sockets.Socket" /> falsch.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolOption">
      <summary>Eine unbekannte, ungültige, oder nicht unterstützte Option oder Ebene wurde mit einem <see cref="T:System.Net.Sockets.Socket" /> verwendet.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolNotSupported">
      <summary>Das Protokoll wurde nicht implementiert oder konfiguriert.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketNotSupported">
      <summary>In dieser Adressfamilie ist die Unterstützung für den angegebenen Sockettyp nicht vorhanden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationNotSupported">
      <summary>Die Adressfamilie wird nicht von der Protokollfamilie unterstützt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolFamilyNotSupported">
      <summary>Die Protokollfamilie wurde nicht implementiert oder konfiguriert.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressFamilyNotSupported">
      <summary>Die angegebene Adressfamilie wird nicht unterstützt. Dieser Fehler wird zurückgegeben, wenn die IPv6-Adressfamilie angegeben wurde und der IPv6-Stapel nicht auf dem lokalen Computer installiert ist. Dieser Fehler wird zurückgegeben, wenn die IPv4-Adressfamilie angegeben wurde und der IPv4-Stapel nicht auf dem lokalen Computer installiert ist.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressAlreadyInUse">
      <summary>Normalerweise ist nur das einmalige Verwenden einer Adresse zulässig.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressNotAvailable">
      <summary>Die ausgewählte IP-Adresse ist in diesem Kontext ungültig.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkDown">
      <summary>Das Netzwerk ist nicht verfügbar.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkUnreachable">
      <summary>Es ist keine Route zum Remotehost vorhanden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkReset">
      <summary>Die Anwendung hat versucht, eine Option für eine Verbindung festzulegen, deren Zeitlimit bereits überschritten ist.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionAborted">
      <summary>Die Verbindung wurde von .NET Framework oder dem zugrunde liegenden Socketanbieter abgebrochen.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionReset">
      <summary>Die Verbindung wurde vom Remotepeer zurückgesetzt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoBufferSpaceAvailable">
      <summary>Für einen <see cref="T:System.Net.Sockets.Socket" />-Vorgang ist kein freier Pufferspeicher verfügbar.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IsConnected">
      <summary>Es ist bereits eine Verbindung mit dem <see cref="T:System.Net.Sockets.Socket" /> vorhanden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotConnected">
      <summary>Die Anwendung hat versucht, Daten zu senden oder zu empfangen, und es ist keine Verbindung mit dem <see cref="T:System.Net.Sockets.Socket" /> vorhanden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Shutdown">
      <summary>Eine Anforderung zum Senden oder Empfangen von Daten wurde nicht zugelassen, da der <see cref="T:System.Net.Sockets.Socket" /> bereits geschlossen wurde.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TimedOut">
      <summary>Das Zeitlimit für das Herstellen der Verbindung wurde überschritten, oder der verbundene Host reagiert nicht.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionRefused">
      <summary>Der Remotehost lehnt eine Verbindung aktiv ab.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostDown">
      <summary>Beim Vorgang ist ein Fehler aufgetreten, da der Remotehost ausgefallen ist.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostUnreachable">
      <summary>Es ist keine Netzwerkroute zum angegebenen Host vorhanden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProcessLimit">
      <summary>Der zugrunde liegende Socketanbieter wird von zu vielen Prozessen verwendet.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SystemNotReady">
      <summary>Das Netzwerksubsystem ist nicht verfügbar.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.VersionNotSupported">
      <summary>Die Version des zugrunde liegenden Socketanbieters liegt außerhalb des gültigen Bereichs.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotInitialized">
      <summary>Der zugrunde liegende Socketanbieter wurde nicht initialisiert.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Disconnecting">
      <summary>Ein ordnungsgemäßes Herunterfahren wird ausgeführt.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TypeNotFound">
      <summary>Die angegebene Klasse wurde nicht gefunden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostNotFound">
      <summary>Ein solcher Host ist nicht bekannt. Der Name ist kein offizieller Hostname oder Alias.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TryAgain">
      <summary>Der Name des Hosts konnte nicht aufgelöst werden. Führen Sie den Vorgang später noch einmal aus.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoRecovery">
      <summary>Der Fehler kann nicht behoben werden, oder die angeforderte Datenbank kann nicht gefunden werden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoData">
      <summary>Der angeforderte Name oder die angeforderte IP-Adresse wurde auf dem Namenserver nicht gefunden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IOPending">
      <summary>Die Anwendung hat einen überlappenden Vorgang initiiert, der nicht sofort abgeschlossen werden kann.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationAborted">
      <summary>Der überlappende Vorgang wurde abgebrochen, weil der <see cref="T:System.Net.Sockets.Socket" /> geschlossen wurde.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketException">
      <summary>Die beim Auftreten eines Socketfehlers ausgelöste Ausnahme.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SocketException" />-Klasse mit dem zuletzt aufgetretenen Fehlercode des Betriebssystems.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.SocketException" />-Klasse mit dem angegebenen Fehlercode.</summary>
      <param name="errorCode">Der Fehlercode, der den aufgetretenen Fehler angibt.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketException.ErrorCode">
      <summary>Ruft den dieser Ausnahme zugeordneten Fehlercode ab.</summary>
      <returns>Der dieser Ausnahme zugeordnete ganzzahlige Fehlercode.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.SocketErrorCode">
      <summary>Ruft den dieser Ausnahme zugeordneten Fehlercode ab.</summary>
      <returns>Der <see cref="T:System.Net.Sockets.SocketError" />, der dieser Ausnahme zugeordnet ist.</returns>
    </member>
    <member name="T:System.Net.Sockets.SocketShutdown">
      <summary>Definiert Konstanten, die von der <see cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />-Methode verwendet werden.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Receive">
      <summary>Deaktiviert das Empfangen für einen <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Send">
      <summary>Deaktiviert das Senden für einen <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketShutdown.Both">
      <summary>Deaktiviert das Senden und Empfangen für einen <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketType">
      <summary>Gibt den Sockettyp an, der von einer Instanz der <see cref="T:System.Net.Sockets.Socket" />-Klasse dargestellt wird.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Stream">
      <summary>Ein Sockettyp, der zuverlässige, bidirektionale, verbindungsbasierte Bytestreams unterstützt, bei denen keine Daten dupliziert und die Begrenzungen nicht beibehalten werden. Ein <see cref="T:System.Net.Sockets.Socket" /> dieses Typs kommuniziert mit einem einzigen Peer und benötigt vor dem Beginn der Kommunikation eine Verbindung mit einem Remotehost. Dieser Sockettyp verwendet das Transmission Control Protocol (<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />), und die <see cref="T:System.Net.Sockets.AddressFamily" /> kann <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> sein.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Dgram">
      <summary>Unterstützt Datagramme, die verbindungslose, unzuverlässige Meldungen mit einer festen (i. d. R. kleinen) maximalen Länge sind. Meldungen können verloren gehen, dupliziert oder in der falschen Reihenfolge empfangen werden. Ein Socket vom Typ <see cref="F:System.Net.Sockets.SocketType.Dgram" /> benötigt vor dem Senden und Empfangen von Daten keine Verbindung und kann mit mehreren Peers kommunizieren. <see cref="F:System.Net.Sockets.SocketType.Dgram" /> verwendet das Datagram Protocol (<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) und <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /><see cref="T:System.Net.Sockets.AddressFamily" />. Nicht unterstützter Wert für Windows Phone.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketType.Unknown">
      <summary>Ein unbekannter Socket-Typ.</summary>
    </member>
    <member name="T:System.Net.Sockets.UdpAnySourceMulticastClient">
      <summary>Ein Clientempfänger für Multicastdatenverkehr von einer beliebigen Quelle, wird auch als Any Source Multicast (ASM) oder Internet Standard Multicast (ISM) bezeichnet.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Erstellt einen neuen <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />-UDP-Client, der eine Gruppenadresse abonnieren und Datagramme von einer beliebigen Quelle empfangen kann.</summary>
      <param name="groupAddress">Die zu abonnierende Multicastgruppenadresse für diesen Empfänger.</param>
      <param name="localPort">Der lokale Anschluss, an den dieser Empfänger gebunden werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groupAddress" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="localPort" /> ist kleiner als 0.- oder -<paramref name="localPort" /> ist größer als 65.535.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="localPort" /> ist kleiner als 1.024.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
      <summary>Bindet den Socket und beginnt einen Beitrittsvorgang für die Multicastgruppe, um das Empfangen von Datagrammen von einem beliebigen Gruppenteilnehmer zu ermöglichen.</summary>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf diesen Vorgang verweist.</returns>
      <param name="callback">Eine beim Abschluss der Vorgangs aufzurufende Rückrufmethode.</param>
      <param name="state">An die <paramref name="callback" />-Methode für diesen Vorgang zu übergebende optionale Zustandsinformationen.</param>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde bereits beigetreten, oder ein Beitrittsvorgang wird gerade ausgeführt.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt den Vorgang zum Empfangen eines Pakets von der beigetretenen Multicastgruppe und ruft den angegebenen Rückruf auf, wenn für die Gruppe ein Paket von einem beliebigen Absender empfangen wurde.</summary>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf diesen Vorgang verweist.</returns>
      <param name="buffer">Der Puffer zum Speichern der empfangenen Daten.</param>
      <param name="offset">Der Offset (in Bytes) vom Anfang des <paramref name="buffer" />, in dem die Daten gespeichert werden sollen.</param>
      <param name="count">Die maximale Anzahl von Bytes, die im <paramref name="buffer" /> empfangen und gespeichert werden sollen. </param>
      <param name="callback">Die beim Abschluss der Vorgangs aufzurufende Rückrufmethode.</param>
      <param name="state">An die <paramref name="callback" />-Methode für diesen Vorgang zu übergebende optionale Zustandsinformationen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.- oder -<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.- oder -<paramref name="count" /> ist kleiner als 0.- oder - Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Länge von <paramref name="buffer" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket zum Senden. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
      <summary>Beginnt den Vorgang zum Senden eines Unicastpakets an das angegebene Ziel.</summary>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf diesen Vorgang verweist.</returns>
      <param name="buffer">Der Puffer, der die zu sendenden Daten enthält.</param>
      <param name="offset">Der Offset (in Bytes) vom Anfang des <paramref name="buffer" /> zum Lesen der zu sendenden Daten.</param>
      <param name="count">Die Anzahl der aus dem <paramref name="buffer" /> zu sendenden Bytes.</param>
      <param name="remoteEndPoint">Der Remoteendpunkt, an den das Paket gesendet werden soll.</param>
      <param name="callback">Die beim Abschluss der Vorgangs aufzurufende Rückrufmethode.</param>
      <param name="state">An die <paramref name="callback" />-Methode für diesen Vorgang zu übergebende optionale Zustandsinformationen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.- oder -<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.- oder -<paramref name="count" /> ist kleiner als 0.- oder - Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Länge von <paramref name="buffer" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket zum Senden. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt den Vorgang zum Senden eines Pakets an eine beigetretene Multicastgruppe und ruft den angegebenen Rückruf auf, wenn ein Paket an die Gruppe gesendet wurde.</summary>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf diesen Vorgang verweist.</returns>
      <param name="buffer">Der Puffer, der die zu sendenden Daten enthält.</param>
      <param name="offset">Der Offset (in Bytes) vom Anfang des <paramref name="buffer" /> zum Lesen der zu sendenden Daten.</param>
      <param name="count">Die Anzahl der aus dem <paramref name="buffer" /> zu sendenden Bytes.</param>
      <param name="callback">Die beim Abschluss der Vorgangs aufzurufende Rückrufmethode.</param>
      <param name="state">An die <paramref name="callback" />-Methode für diesen Vorgang zu übergebende optionale Zustandsinformationen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.- oder -<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.- oder -<paramref name="count" /> ist kleiner als 0.- oder - Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Länge von <paramref name="buffer" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket zum Senden. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
      <summary>Blockiert eine Quelle, sodass von dort stammende Multicastpakete nicht mehr empfangen werden.</summary>
      <param name="sourceAddress">Die Adresse der zu blockierenden Quelle.</param>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose">
      <summary>Verlässt die Multicastgruppe und gibt alle Ressourcen frei, die von der aktuellen Instanz der <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />-Klasse und dem zugrunde liegenden <see cref="T:System.Net.Sockets.Socket" /> verwendet werden.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
      <summary>Beendet den asynchronen Beitrittsvorgang für eine Multicastgruppe.</summary>
      <param name="result">Das Ergebnis des asynchronen Beitrittsvorgangs.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> ist null.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
      <summary>Beendet den asynchronen Vorgang zum Empfangen eines Pakets von der beigetretenen Multicastgruppe und stellt die empfangenen Informationen bereit.</summary>
      <returns>Die Länge (in Bytes) der im <paramref name="buffer" />-Parameter gespeicherten Meldung, die an die <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />-Methode übergeben wurde.</returns>
      <param name="result">Das Ergebnis des asynchronen Empfangsvorgangs.</param>
      <param name="source">Der Quellendpunkt, von dem das Paket empfangen wurde.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)">
      <summary>Beendet den Vorgang zum Senden eines Unicastpakets an das angegebene Ziel.</summary>
      <param name="result">Das Ergebnis des asynchronen Sendevorgangs.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)">
      <summary>Beendet den Vorgang zum Senden eines Pakets an eine Multicastgruppe.</summary>
      <param name="result">Das Ergebnis des asynchronen Sendevorgangs.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.Finalize">
      <summary>Gibt die von der aktuellen <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />-Klasse reservierten Ressourcen frei.</summary>
    </member>
    <member name="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback">
      <summary>Ruft einen Wert ab, der angibt, ob ausgehende Multicastpakete an die sendende Anwendung übermittelt werden, oder legt diesen fest.</summary>
      <returns>Ein Wert, der angibt, ob ausgehende Pakete an eine Multicastgruppe an die sendende Anwendung übermittelt werden.</returns>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen. </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
      <summary>Ruft die Größe (in Bytes) des Empfangspuffers des <see cref="T:System.Net.Sockets.Socket" /> ab, der für Multicastempfangsvorgänge für diese <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />-Instanz verwendet wurde, oder legt diese fest. </summary>
      <returns>Die Größe (in Bytes) des Empfangspuffers.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Puffergröße ist kleiner als 0.</exception>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen. </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize">
      <summary>Ruft die Größe (in Bytes) des Sendepuffers des <see cref="T:System.Net.Sockets.Socket" /> ab, der für Multicastsendevorgänge für diese <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />-Instanz verwendet wurde, oder legt diese fest.</summary>
      <returns>Die Größe (in Bytes) des Sendepuffers.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Puffergröße ist kleiner als 0.</exception>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen. </exception>
    </member>
    <member name="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
      <summary>Hebt die Blockierung einer zuvor durch einen Aufruf der <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" />-Methode blockierten Quelle, sodass von dort stammende Multicastpakete empfangen werden können.</summary>
      <param name="sourceAddress">Die Adresse der Quelle, deren Blockierung aufgehoben werden soll.</param>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
      <summary>Ein Clientempfänger für Multicastdatenverkehr von einer einzelnen Quelle, wird auch als Source Specific Multicast (SSM) bezeichnet.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
      <summary>Erstellt einen neuen <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />-UDP-Client, der eine Gruppenadresse abonnieren und Datagramme von einer einzelnen Quelle empfangen kann.</summary>
      <param name="sourceAddress">Die zu abonnierende Absenderquelladresse für diesen Empfänger.</param>
      <param name="groupAddress">Die zu abonnierende Multicastgruppenadresse für diesen Empfänger.</param>
      <param name="localPort">Der lokale Anschluss, an den dieser Empfänger gebunden werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceAddress" /> und <paramref name="groupAddress" /> müssen die gleiche Adressfamilie sein.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceAddress" /> ist null.- oder -<paramref name="groupAddress" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="localPort" /> ist kleiner als 0.- oder -<paramref name="localPort" /> ist größer als 65.535.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">
        <paramref name="localPort" /> ist kleiner als 1.024.</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
      <summary>Bindet den Socket und beginnt einen Beitrittsvorgang für die Multicastgruppe, um das Empfangen von Datagrammen von einer einzelnen Quelladresse zu ermöglichen.</summary>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf diesen Vorgang verweist.</returns>
      <param name="callback">Eine beim Abschluss der Vorgangs aufzurufende Rückrufmethode.</param>
      <param name="state">An die <paramref name="callback" />-Methode für diesen Vorgang zu übergebende optionale Zustandsinformationen.</param>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde bereits beigetreten, oder ein Beitrittsvorgang wird gerade ausgeführt.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde verworfen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt den Vorgang zum Empfangen eines Pakets von der beigetretenen Multicastgruppe und ruft den angegebenen Rückruf auf, wenn für die Gruppe ein Paket von einem angegebenen Absender empfangen wurde.</summary>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf diesen Vorgang verweist.</returns>
      <param name="buffer">Der Puffer zum Speichern der empfangenen Daten.</param>
      <param name="offset">Der Offset (in Bytes) vom Anfang des <paramref name="buffer" />, in dem die Daten gespeichert werden sollen.</param>
      <param name="count">Die maximale Anzahl von Bytes, die im <paramref name="buffer" /> empfangen und gespeichert werden sollen. </param>
      <param name="callback">Die beim Abschluss der Vorgangs aufzurufende Rückrufmethode.</param>
      <param name="state">An die <paramref name="callback" />-Methode für diesen Vorgang zu übergebende optionale Zustandsinformationen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.- oder -<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.- oder -<paramref name="count" /> ist kleiner als 0.- oder - Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Länge von <paramref name="buffer" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde verworfen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket für den Empfang. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Beginnt den Vorgang zum Senden eines Unicastpakets an die zuvor angegebene Quelle.</summary>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf diesen Vorgang verweist.</returns>
      <param name="buffer">Der Puffer, der die zu sendenden Daten enthält.</param>
      <param name="offset">Der Offset (in Bytes) vom Anfang des <paramref name="buffer" /> zum Lesen der zu sendenden Daten.</param>
      <param name="count">Die Anzahl der aus dem <paramref name="buffer" /> zu sendenden Bytes.</param>
      <param name="remotePort">Der Remoteanschluss, an den das Paket gesendet werden soll. Die Remoteadresse wird durch den <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />-Konstruktor angegeben.</param>
      <param name="callback">Die beim Abschluss der Vorgangs aufzurufende Rückrufmethode.</param>
      <param name="state">An die <paramref name="callback" />-Methode für diesen Vorgang zu übergebende optionale Zustandsinformationen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ist kleiner als 0.- oder -<paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.- oder -<paramref name="count" /> ist kleiner als 0.- oder - Die Summe von <paramref name="offset" /> und <paramref name="count" /> ist größer als die Länge von <paramref name="buffer" />.<paramref name="remotePort" /> ist kleiner als 0.- oder -<paramref name="remotePort" /> ist größer als 65.535.</exception>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde verworfen.</exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket zum Senden. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
      <summary>Verlässt die Multicastgruppe und gibt alle Ressourcen frei, die von der aktuellen Instanz der <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />-Klasse und dem zugrunde liegenden <see cref="T:System.Net.Sockets.Socket" /> verwendet werden.</summary>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
      <summary>Beendet den asynchronen Beitrittsvorgang für eine Multicastgruppe.</summary>
      <param name="result">Das Ergebnis des asynchronen Beitrittsvorgangs.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> ist null.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde verworfen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
      <summary>Beendet den asynchronen Vorgang zum Empfangen eines Pakets von der beigetretenen Multicastgruppe und stellt die von einem angegebenen Absender empfangenen Informationen bereit.</summary>
      <returns>Die Länge (in Bytes) der im <paramref name="buffer" />-Parameter gespeicherten Meldung, die an die <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />-Methode übergeben wurde.</returns>
      <param name="result">Das Ergebnis des asynchronen Empfangsvorgangs.</param>
      <param name="sourcePort">Der Quellanschluss, von dem das Paket empfangen wurde.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde verworfen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
      <summary>Beendet den Vorgang zum Senden eines Unicastpakets an eine einzelne Quelle.</summary>
      <param name="result">Das Ergebnis des asynchronen Sendevorgangs.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="result" /> ist null.</exception>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde verworfen. </exception>
      <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Zugriff auf den Socket. Weitere Informationen finden Sie im Abschnitt "Hinweise".</exception>
    </member>
    <member name="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Finalize">
      <summary>Gibt die von der aktuellen <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />-Klasse reservierten Ressourcen frei.</summary>
    </member>
    <member name="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
      <summary>Ruft die Größe (in Bytes) des Empfangspuffers des <see cref="T:System.Net.Sockets.Socket" /> ab, der für Multicastempfangsvorgänge für diese <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />-Instanz verwendet wurde, oder legt diese fest.</summary>
      <returns>Die Größe (in Bytes) des Empfangspuffers.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Puffergröße ist kleiner als 0.</exception>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde verworfen. </exception>
    </member>
    <member name="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
      <summary>Ruft die Größe (in Bytes) des Sendepuffers des <see cref="T:System.Net.Sockets.Socket" /> ab, der für Multicastsendevorgänge für diese <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />-Instanz verwendet wurde, oder legt diese fest.</summary>
      <returns>Die Größe (in Bytes) des Sendepuffers.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Puffergröße ist kleiner als 0.</exception>
      <exception cref="T:System.InvalidOperationException">Der Multicastgruppe wurde noch nicht beigetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde verworfen. </exception>
    </member>
  </members>
</doc>