<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Xml.ConformanceLevel">
      <summary>Spécifie l'ampleur des contrôles d'entrée ou de sortie que les objets <see cref="T:System.Xml.XmlReader" /> et <see cref="T:System.Xml.XmlWriter" /> créés effectuent.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Auto">
      <summary>L'objet <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.Xml.XmlWriter" /> détecte automatiquement si le document ou le fragment doit être vérifié et effectue le contrôle approprié.Si vous encapsulez un autre objet <see cref="T:System.Xml.XmlReader" /> ou <see cref="T:System.Xml.XmlWriter" />, l'objet externe n'effectue aucun contrôle de conformité supplémentaire.Le contrôle de conformité doit être fait par l'objet sous-jacent.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Document">
      <summary>Les données XML sont conformes aux règles définissant un document XML 1.0 de forme correcte.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Fragment">
      <summary>Les données XML sont un fragment de XML bien formé.</summary>
    </member>
    <member name="T:System.Xml.DtdProcessing">
      <summary>Spécifie les options de traitement des DTD.L'énumération <see cref="T:System.Xml.DtdProcessing" /> est utilisée par <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Ignore">
      <summary>Entraîne le fait que l'élément DOCTYPE est ignoré.Aucun traitement de DTD n'est effectué.Avertissement : DTD/DOCTYPE est omise dans la sortie.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Parse">
      <summary>Est utilisé pour l'analyse des DTD.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Prohibit">
      <summary>Spécifie que lorsqu'une DTD est rencontrée, une <see cref="T:System.Xml.XmlException" /> est levée avec un message signalant que les DTD sont interdites.Il s'agit du comportement par défaut.</summary>
    </member>
    <member name="T:System.Xml.IXmlLineInfo">
      <summary>Fournit une interface pour permettre à une classe de renvoyer des informations de ligne et de position.</summary>
    </member>
    <member name="M:System.Xml.IXmlLineInfo.HasLineInfo">
      <summary>Obtient une valeur indiquant si la classe peut renvoyer des informations de ligne. </summary>
      <returns>La valeur est true si <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> et <see cref="P:System.Xml.IXmlLineInfo.LinePosition" /> peuvent être fournis, sinon false.</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LineNumber">
      <summary>Obtient le numéro de la ligne active.</summary>
      <returns>Numéro de la ligne active, ou 0 si aucune information de ligne n'est disponible (par exemple, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> renvoie la valeur false).</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LinePosition">
      <summary>Obtient la position de la ligne active.</summary>
      <returns>Position de la ligne active, ou 0 si aucune information de ligne n'est disponible (par exemple, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> renvoie la valeur false).</returns>
    </member>
    <member name="T:System.Xml.IXmlNamespaceResolver">
      <summary>Fournit un accès en lecture seule à un jeu de mappages de préfixes et d'espaces de noms. </summary>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Obtient une collection de mappages de préfixes sur des espaces de noms définis, actuellement à portée.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> contenant les espaces de noms actuellement à portée.</returns>
      <param name="scope">Valeur <see cref="T:System.Xml.XmlNamespaceScope" /> spécifiant le type de nœuds d'espace de noms à renvoyer.</param>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)">
      <summary>Obtient l'URI d'espace de noms mappé sur le préfixe spécifié.</summary>
      <returns>URI d'espace de noms mappé sur le préfixe, ou null si le préfixe n'est pas mappé sur un URI d'espace de noms.</returns>
      <param name="prefix">Préfixe dont vous recherchez l'URI d'espace de noms.</param>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)">
      <summary>Obtient le préfixe mappé sur l'URI d'espace de noms spécifié.</summary>
      <returns>Préfixe mappé sur l'URI d'espace de noms, ou null si l'URI d'espace de noms n'est pas mappé sur un préfixe.</returns>
      <param name="namespaceName">URI d'espace de noms dont vous recherchez le préfixe.</param>
    </member>
    <member name="T:System.Xml.NamespaceHandling">
      <summary>Spécifie s'il faut supprimer les déclarations d'espace de noms en double dans le <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.Default">
      <summary>Le comportement par défaut ne supprime pas les déclarations d'espace de noms en double. </summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.OmitDuplicates">
      <summary>Supprimez les déclarations d'espace de noms en double.Pour l'espace de noms en double à supprimer, le préfixe et l'espace de noms doivent correspondre.</summary>
    </member>
    <member name="T:System.Xml.NameTable">
      <summary>Implémente un <see cref="T:System.Xml.XmlNameTable" /> à thread unique.</summary>
    </member>
    <member name="M:System.Xml.NameTable.#ctor">
      <summary>Initialise une nouvelle instance de la classe NameTable.</summary>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>Atomise la chaîne spécifiée et l'ajoute à NameTable.</summary>
      <returns>Chaîne atomisée ou, le cas échéant, chaîne existante dans NameTable.Si <paramref name="len" /> a la valeur zéro, String.Empty est renvoyé.</returns>
      <param name="key">Tableau de caractères contenant les chaînes à ajouter. </param>
      <param name="start">Index de base zéro dans le tableau spécifiant le premier caractère de la chaîne. </param>
      <param name="len">Nombre de caractères dans la chaîne. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />– ou – <paramref name="start" /> &gt;= <paramref name="key" />.Length– ou – <paramref name="len" /> &gt;= <paramref name="key" />.LengthLes conditions ci-dessus n’entraînent pas la levée d’une exception si <paramref name="len" /> =0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0. </exception>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.String)">
      <summary>Atomise la chaîne spécifiée et l'ajoute à NameTable.</summary>
      <returns>Chaîne atomisée ou, le cas échéant, chaîne existante dans NameTable.</returns>
      <param name="key">Chaîne à ajouter. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="key" /> est null. </exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>Obtient la chaîne atomisée contenant les mêmes caractères que la plage de caractères spécifiée dans le tableau donné.</summary>
      <returns>Chaîne atomisée ou valeur null si la chaîne n'a pas encore été atomisée.Si <paramref name="len" /> a la valeur zéro, String.Empty est renvoyé.</returns>
      <param name="key">Tableau de caractères contenant le nom à rechercher. </param>
      <param name="start">Index de base zéro dans le tableau spécifiant le premier caractère du nom. </param>
      <param name="len">Nombre de caractères dans le nom. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />– ou – <paramref name="start" /> &gt;= <paramref name="key" />.Length– ou – <paramref name="len" /> &gt;= <paramref name="key" />.LengthLes conditions ci-dessus n’entraînent pas la levée d’une exception si <paramref name="len" /> =0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0. </exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.String)">
      <summary>Obtient la chaîne atomisée de valeur spécifiée.</summary>
      <returns>L'objet de chaîne atomisée ou valeur null si la chaîne n'a pas encore été atomisée.</returns>
      <param name="value">Nom à rechercher. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Xml.NewLineHandling">
      <summary>Spécifie comment gérer les sauts de ligne.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Entitize">
      <summary>Les caractères de nouvelle ligne sont décomposés en entités.Ce paramètre conserve tous les caractères lorsque la sortie est lue par un <see cref="T:System.Xml.XmlReader" /> normalisant.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.None">
      <summary>Les caractères de nouvelle ligne restent inchangés.La sortie est identique à l'entrée.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Replace">
      <summary>Les caractères de nouvelle ligne sont remplacés pour correspondre au caractère spécifié dans la propriété <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" />.</summary>
    </member>
    <member name="T:System.Xml.ReadState">
      <summary>Spécifie l'état du lecteur.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Closed">
      <summary>La méthode <see cref="M:System.Xml.XmlReader.Close" /> a été appelée.</summary>
    </member>
    <member name="F:System.Xml.ReadState.EndOfFile">
      <summary>La fin du fichier a été atteinte avec succès.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Error">
      <summary>Une erreur s'est produite et empêche l'opération de lecture de se poursuivre.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Initial">
      <summary>La méthode Read n'a pas été appelée.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Interactive">
      <summary>La méthode Read a été appelée.Des méthodes supplémentaires peuvent être appelées sur le lecteur.</summary>
    </member>
    <member name="T:System.Xml.WriteState">
      <summary>Spécifie l'état du <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Attribute">
      <summary>Une valeur d'attribut est en cours d'écriture. </summary>
    </member>
    <member name="F:System.Xml.WriteState.Closed">
      <summary>La méthode <see cref="M:System.Xml.XmlWriter.Close" /> a été appelée.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Content">
      <summary>Le contenu de l'élément est en cours d'écriture.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Element">
      <summary>Une balise de début d'élément est en cours d'écriture.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Error">
      <summary>Une exception a été levée et a laissé le <see cref="T:System.Xml.XmlWriter" /> dans un état non valide.Vous pouvez appeler la méthode <see cref="M:System.Xml.XmlWriter.Close" /> pour mettre le <see cref="T:System.Xml.XmlWriter" /> à l'état <see cref="F:System.Xml.WriteState.Closed" />.Toute autre méthode <see cref="T:System.Xml.XmlWriter" /> appelée entraînera un <see cref="T:System.InvalidOperationException" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Prolog">
      <summary>Le prologue est en cours d'écriture.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Start">
      <summary>Une méthode Write n'a pas été appelée.</summary>
    </member>
    <member name="T:System.Xml.XmlConvert">
      <summary>Encode et décode les noms XML et fournit des méthodes pour la conversion entre les types Common Language Runtime.Lors de la conversion de types de données, les valeurs renvoyées sont indépendantes des paramètres régionaux.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlConvert" />. </summary>
    </member>
    <member name="M:System.Xml.XmlConvert.DecodeName(System.String)">
      <summary>Décode un nom.Cette méthode effectue l'opération inverse des méthodes <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> et <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />.</summary>
      <returns>Nom décodé.</returns>
      <param name="name">Nom à transformer. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
      <summary>Convertit le nom en un nom local XML valide.</summary>
      <returns>Nom encodé.</returns>
      <param name="name">Nom à encoder. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeName(System.String)">
      <summary>Convertit le nom en un nom XML valide.</summary>
      <returns>Renvoie le nom avec des caractères non valides remplacés par une chaîne d'échappement.</returns>
      <param name="name">Nom à traduire. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
      <summary>Vérifie que le nom est valide, conformément aux spécifications XML.</summary>
      <returns>Nom encodé.</returns>
      <param name="name">Nom à encoder. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)">
      <summary>Vérifie si le caractère passé est un type de caractère de nom valide.</summary>
      <returns>La valeur est true si le caractère est un type de caractère de nom valide, sinon false.</returns>
      <param name="ch">Caractère à valider.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)">
      <summary>Vérifie si le caractère passé est un caractère d'ID PUBLIC valide.</summary>
      <returns>La valeur est true si le caractère passé est un caractère d'ID PUBLIC valide, sinon false.</returns>
      <param name="ch">Caractère à valider.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
      <summary>Vérifie si le caractère passé est un type de caractère de nom de démarrage valide.</summary>
      <returns>La valeur est true si le caractère est un type de caractère de nom de démarrage valide, sinon false.</returns>
      <param name="ch">Caractère à valider.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
      <summary>Vérifie si le caractère passé est un espace XML valide.</summary>
      <returns>La valeur est true si le caractère passé est un espace XML valide, sinon false.</returns>
      <param name="ch">Caractère à valider.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
      <summary>Vérifie si le caractère passé est un caractère XML valide.</summary>
      <returns>La valeur est true si le caractère passé est un caractère XML valide, sinon false.</returns>
      <param name="ch">Caractère à valider.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
      <summary>Vérifie si la paire de caractères de substitution passée est un caractère XML valide.</summary>
      <returns>La valeur est true si la paire de caractères de substitution passée est un caractère XML valide, sinon false.</returns>
      <param name="lowChar">Caractère de substitution à valider.</param>
      <param name="highChar">Caractère de substitution à valider.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToBoolean(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.Boolean" />.</summary>
      <returns>Valeur Boolean, c'est-à-dire, true ou false.</returns>
      <param name="s">Chaîne à convertir. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ne représente pas une valeur Boolean. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToByte(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.Byte" />.</summary>
      <returns>Équivalent Byte de la chaîne.</returns>
      <param name="s">Chaîne à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Byte.MinValue" /> ou supérieur à <see cref="F:System.Byte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToChar(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.Char" />.</summary>
      <returns>Char représentant le caractère unique.</returns>
      <param name="s">Chaîne contenant un caractère unique à convertir. </param>
      <exception cref="T:System.ArgumentNullException">La valeur du paramètre <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">Le paramètre <paramref name="s" /> contient plusieurs caractères. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.DateTime" />.</summary>
      <returns>Équivalent DateTime de la chaîne.</returns>
      <param name="s">Chaîne à convertir. </param>
      <param name="format">Structure du format à appliquer au DateTime converti.Les formats valides incluent « yyyy-MM-ddTHH:mm:sszzzzzz » et ses sous-ensembles.La chaîne est validée en fonction de ce format.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ou <paramref name="format" /> est String.Empty.– ou – <paramref name="s" /> ne contient aucune date ou heure correspondant à <paramref name="format" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.DateTime" />.</summary>
      <returns>Équivalent DateTime de la chaîne.</returns>
      <param name="s">Chaîne à convertir. </param>
      <param name="formats">Tableau contenant les structures du format à appliquer au DateTime converti.Les formats valides incluent « yyyy-MM-ddTHH:mm:sszzzzzz » et ses sous-ensembles.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ou un élément de <paramref name="formats" /> est String.Empty.– ou – <paramref name="s" /> ne contient aucune date ou heure correspondant à un élément de <paramref name="formats" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Convertit le <see cref="T:System.String" /> en un <see cref="T:System.DateTime" /> à l'aide du <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> spécifié</summary>
      <returns>Équivalent <see cref="T:System.DateTime" /> de <see cref="T:System.String" />.</returns>
      <param name="s">Valeur <see cref="T:System.String" /> à convertir.</param>
      <param name="dateTimeOption">L'une des valeurs de <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> indiquant si la date doit être convertie en heure locale ou conservée en temps universel coordonné (UTC, Coordinated Universal Time), le cas échéant.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="dateTimeOption" /> a la valeur null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> est une chaîne vide ou n’est pas dans un format valide.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> fourni en équivalent <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Équivalent <see cref="T:System.DateTimeOffset" /> de la chaîne fournie.</returns>
      <param name="s">Chaîne à convertir.Remarque   La chaîne doit se conformer à un sous-ensemble de recommandations du W3C sur le type XML dateTime.Pour plus d'informations, voir XML Schema Part 2: Datatypes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'argument passé à cette méthode se trouve en dehors de la plage de valeurs autorisées.Pour plus d’informations sur les valeurs autorisées, consultez <see cref="T:System.DateTimeOffset" />.</exception>
      <exception cref="T:System.FormatException">L'argument passé à cette méthode n'est pas conforme à un sous-ensemble de recommandations du W3C sur le type XML dateTime.Pour plus d’informations, consultez Schéma XML Partie 2 : Types de données.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
      <summary>Convertit le <see cref="T:System.String" /> fourni en équivalent <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Équivalent <see cref="T:System.DateTimeOffset" /> de la chaîne fournie.</returns>
      <param name="s">Chaîne à convertir.</param>
      <param name="format">Format à partir duquel <paramref name="s" /> est converti.Le paramètre de format peut correspondre à un sous-ensemble de recommandations du W3C sur le type XML dateTime.Pour plus d'informations, voir XML Schema Part 2: Datatypes.La chaîne <paramref name="s" /> est validée en fonction de ce format.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ou <paramref name="format" /> est une chaîne vide et n’est pas dans le format spécifié.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
      <summary>Convertit le <see cref="T:System.String" /> fourni en équivalent <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Équivalent <see cref="T:System.DateTimeOffset" /> de la chaîne fournie.</returns>
      <param name="s">Chaîne à convertir.</param>
      <param name="formats">Tableau de formats à partir duquel <paramref name="s" /> peut être converti.Chaque format figurant dans <paramref name="formats" /> peut correspondre à un sous-ensemble de recommandations du W3C sur le type XML dateTime.Pour plus d'informations, voir XML Schema Part 2: Datatypes.La chaîne <paramref name="s" /> est validée en fonction de l'un de ces formats.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDecimal(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.Decimal" />.</summary>
      <returns>Équivalent Decimal de la chaîne.</returns>
      <param name="s">Chaîne à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Decimal.MinValue" /> ou supérieur à <see cref="F:System.Decimal.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDouble(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.Double" />.</summary>
      <returns>Équivalent Double de la chaîne.</returns>
      <param name="s">Chaîne à convertir. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Double.MinValue" /> ou supérieur à <see cref="F:System.Double.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToGuid(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.Guid" />.</summary>
      <returns>Équivalent Guid de la chaîne.</returns>
      <param name="s">Chaîne à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt16(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.Int16" />.</summary>
      <returns>Équivalent Int16 de la chaîne.</returns>
      <param name="s">Chaîne à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Int16.MinValue" /> ou supérieur à <see cref="F:System.Int16.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt32(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.Int32" />.</summary>
      <returns>Équivalent Int32 de la chaîne.</returns>
      <param name="s">Chaîne à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Int32.MinValue" /> ou supérieur à <see cref="F:System.Int32.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt64(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.Int64" />.</summary>
      <returns>Équivalent Int64 de la chaîne.</returns>
      <param name="s">Chaîne à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Int64.MinValue" /> ou supérieur à <see cref="F:System.Int64.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSByte(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.SByte" />.</summary>
      <returns>Équivalent SByte de la chaîne.</returns>
      <param name="s">Chaîne à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.SByte.MinValue" /> ou supérieur à <see cref="F:System.SByte.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSingle(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.Single" />.</summary>
      <returns>Équivalent Single de la chaîne.</returns>
      <param name="s">Chaîne à convertir. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.Single.MinValue" /> ou supérieur à <see cref="F:System.Single.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Boolean)">
      <summary>Convertit <see cref="T:System.Boolean" /> en <see cref="T:System.String" />.</summary>
      <returns>Représentation sous forme de chaîne de Boolean, c'est-à-dire, « true » ou « false ».</returns>
      <param name="value">Valeur à convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Char)">
      <summary>Convertit <see cref="T:System.Char" /> en <see cref="T:System.String" />.</summary>
      <returns>Représentation sous forme de chaîne de Char.</returns>
      <param name="value">Valeur à convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Convertit le <see cref="T:System.DateTime" /> en un <see cref="T:System.String" /> à l'aide du <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> spécifié.</summary>
      <returns>Équivalent <see cref="T:System.String" /> de <see cref="T:System.DateTime" />.</returns>
      <param name="value">Valeur <see cref="T:System.DateTime" /> à convertir.</param>
      <param name="dateTimeOption">Une des valeurs de <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> indiquant comment traiter la valeur <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.ArgumentException">La valeur <paramref name="dateTimeOption" /> n’est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">La <paramref name="value" /> ou <paramref name="dateTimeOption" /> est null.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
      <summary>Convertit le <see cref="T:System.DateTimeOffset" /> fourni en <see cref="T:System.String" />.</summary>
      <returns>Représentation <see cref="T:System.String" /> du <see cref="T:System.DateTimeOffset" /> fourni.</returns>
      <param name="value">
        <see cref="T:System.DateTimeOffset" /> à convertir.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
      <summary>Convertit le <see cref="T:System.DateTimeOffset" /> fourni en <see cref="T:System.String" /> dans le format spécifié.</summary>
      <returns>Représentation <see cref="T:System.String" /> dans le format spécifié du <see cref="T:System.DateTimeOffset" /> fourni.</returns>
      <param name="value">
        <see cref="T:System.DateTimeOffset" /> à convertir.</param>
      <param name="format">Format vers lequel <paramref name="s" /> est converti.Le paramètre de format peut correspondre à un sous-ensemble de recommandations du W3C sur le type XML dateTime.Pour plus d'informations, voir XML Schema Part 2: Datatypes.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Decimal)">
      <summary>Convertit <see cref="T:System.Decimal" /> en <see cref="T:System.String" />.</summary>
      <returns>Représentation sous forme de chaîne de Decimal.</returns>
      <param name="value">Valeur à convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Double)">
      <summary>Convertit <see cref="T:System.Double" /> en <see cref="T:System.String" />.</summary>
      <returns>Représentation sous forme de chaîne de Double.</returns>
      <param name="value">Valeur à convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Guid)">
      <summary>Convertit <see cref="T:System.Guid" /> en <see cref="T:System.String" />.</summary>
      <returns>Représentation sous forme de chaîne de Guid.</returns>
      <param name="value">Valeur à convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int16)">
      <summary>Convertit <see cref="T:System.Int16" /> en <see cref="T:System.String" />.</summary>
      <returns>Représentation sous forme de chaîne de Int16.</returns>
      <param name="value">Valeur à convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int32)">
      <summary>Convertit <see cref="T:System.Int32" /> en <see cref="T:System.String" />.</summary>
      <returns>Représentation sous forme de chaîne de Int32.</returns>
      <param name="value">Valeur à convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int64)">
      <summary>Convertit <see cref="T:System.Int64" /> en <see cref="T:System.String" />.</summary>
      <returns>Représentation sous forme de chaîne de Int64.</returns>
      <param name="value">Valeur à convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.SByte)">
      <summary>Convertit <see cref="T:System.SByte" /> en <see cref="T:System.String" />.</summary>
      <returns>Représentation sous forme de chaîne de SByte.</returns>
      <param name="value">Valeur à convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Single)">
      <summary>Convertit <see cref="T:System.Single" /> en <see cref="T:System.String" />.</summary>
      <returns>Représentation sous forme de chaîne de Single.</returns>
      <param name="value">Valeur à convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
      <summary>Convertit <see cref="T:System.TimeSpan" /> en <see cref="T:System.String" />.</summary>
      <returns>Représentation sous forme de chaîne de TimeSpan.</returns>
      <param name="value">Valeur à convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt32)">
      <summary>Convertit <see cref="T:System.UInt32" /> en <see cref="T:System.String" />.</summary>
      <returns>Représentation sous forme de chaîne de UInt32.</returns>
      <param name="value">Valeur à convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt64)">
      <summary>Convertit <see cref="T:System.UInt64" /> en <see cref="T:System.String" />.</summary>
      <returns>Représentation sous forme de chaîne de UInt64.</returns>
      <param name="value">Valeur à convertir. </param>
    </member>
    <member name="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.TimeSpan" />.</summary>
      <returns>Équivalent TimeSpan de la chaîne.</returns>
      <param name="s">Chaîne à convertir.Le format de chaîne doit se conformer à la recommandation W3C XML Schema Part 2: Datatypes pour la durée.</param>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect pour représenter une valeur TimeSpan. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt16(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.UInt16" />.</summary>
      <returns>Équivalent UInt16 de la chaîne.</returns>
      <param name="s">Chaîne à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.UInt16.MinValue" /> ou supérieur à <see cref="F:System.UInt16.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt32(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.UInt32" />.</summary>
      <returns>Équivalent UInt32 de la chaîne.</returns>
      <param name="s">Chaîne à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.UInt32.MinValue" /> ou supérieur à <see cref="F:System.UInt32.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt64(System.String)">
      <summary>Convertit le <see cref="T:System.String" /> en équivalent <see cref="T:System.UInt64" />.</summary>
      <returns>Équivalent UInt64 de la chaîne.</returns>
      <param name="s">Chaîne à convertir. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> est null. </exception>
      <exception cref="T:System.FormatException">Le format de <paramref name="s" /> est incorrect. </exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> représente un nombre inférieur à <see cref="F:System.UInt64.MinValue" /> ou supérieur à <see cref="F:System.UInt64.MaxValue" />. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyName(System.String)">
      <summary>Vérifie que le nom est un nom valide, conformément à la recommandation W3C XML (Extended Markup Language).</summary>
      <returns>Le nom, s'il s'agit d'un nom XML valide.</returns>
      <param name="name">Nom à vérifier. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> n'est pas un nom XML valide. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> est null ou String.Empty.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
      <summary>Vérifie que le nom est un NCName valide, conformément à la recommandation W3C XML (Extended Markup Language).</summary>
      <returns>Le nom, s'il s'agit d'un NCName valide.</returns>
      <param name="name">Nom à vérifier. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> est null ou String.Empty.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> n'est pas un NCName valide. </exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
      <summary>Vérifie que la chaîne est un NMTOKEN valide, conformément à la recommandation W3C XML Schema Part2: Datatypes</summary>
      <returns>Jeton de nom, s'il s'agit d'un NMTOKEN valide.</returns>
      <param name="name">Chaîne à vérifier.</param>
      <exception cref="T:System.Xml.XmlException">La chaîne n'est pas un jeton de nom valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
      <summary>Vérifie si tous les caractères contenus dans l'argument de chaîne sont des caractères d'ID PUBLIC valides.</summary>
      <returns>Instance de chaîne passée si tous les caractères contenus dans l'argument de chaîne sont des caractères d'ID PUBLIC valides.</returns>
      <param name="publicId">Chaîne à valider.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
      <summary>Vérifie si tous les caractères contenus dans l'argument de chaîne sont des espaces valides. </summary>
      <returns>Instance de chaîne passée si tous les caractères contenus dans l'argument de chaîne sont des espaces valides.</returns>
      <param name="content">Chaîne à valider.</param>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
      <summary>Vérifie si tous les caractères et caractères de paire de substitution contenus dans la chaîne passée sont des caractères XML valides.</summary>
      <returns>Instance de chaîne passée si tous les caractères et caractères de paire de substitution contenus dans l'argument de chaîne sont des caractères XML valides.</returns>
      <param name="content">Chaîne à valider.</param>
    </member>
    <member name="T:System.Xml.XmlDateTimeSerializationMode">
      <summary>Spécifie la façon de traiter la valeur d'heure lors de la conversion entre chaîne et <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Local">
      <summary>Traiter en tant qu'heure locale.Si l'objet <see cref="T:System.DateTime" /> représente une heure UTC (Universal Time Coordinates), il est converti en heure locale.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.RoundtripKind">
      <summary>Les informations relatives au fuseau horaire doivent être conservées lors de la conversion.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Unspecified">
      <summary>Traiter en tant qu'heure locale si un <see cref="T:System.DateTime" /> est converti en chaîne.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Utc">
      <summary>Traiter en tant qu'heure UTC.Si l'objet <see cref="T:System.DateTime" /> représente une heure locale, il est converti en UTC.</summary>
    </member>
    <member name="T:System.Xml.XmlException">
      <summary>Renvoie des informations détaillées sur la dernière exception. </summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor">
      <summary>Initialise une nouvelle instance de la classe XmlException.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe XmlException avec un message d'erreur spécifié.</summary>
      <param name="message">Description de l'erreur. </param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe XmlException.</summary>
      <param name="message">Description de la condition d'erreur. </param>
      <param name="innerException">
        <see cref="T:System.Exception" /> ayant levé l'XmlException, le cas échéant.Cette valeur peut être null.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe XmlException avec le message, l'exception interne, le numéro de ligne et la position de ligne spécifiés.</summary>
      <param name="message">Description de l'erreur. </param>
      <param name="innerException">Exception qui est la cause de l'exception actuelle.Cette valeur peut être null.</param>
      <param name="lineNumber">Numéro de la ligne indiquant l'endroit où l'erreur s'est produite. </param>
      <param name="linePosition">Position de la ligne indiquant l'endroit où l'erreur s'est produite. </param>
    </member>
    <member name="P:System.Xml.XmlException.LineNumber">
      <summary>Obtient le numéro de la ligne indiquant l'endroit où l'erreur s'est produite.</summary>
      <returns>Numéro de la ligne indiquant l'endroit où l'erreur s'est produite.</returns>
    </member>
    <member name="P:System.Xml.XmlException.LinePosition">
      <summary>Obtient la position de la ligne indiquant l'endroit où l'erreur s'est produite.</summary>
      <returns>Position de la ligne indiquant l'endroit où l'erreur s'est produite.</returns>
    </member>
    <member name="P:System.Xml.XmlException.Message">
      <summary>Obtient un message décrivant l'exception actuelle.</summary>
      <returns>Message d'erreur expliquant la raison de l'exception.</returns>
    </member>
    <member name="P:System.Xml.XmlException.SourceUri">
      <summary>Obtient l'emplacement du fichier XML.</summary>
      <returns>URI source des données XML.S'il n'y a aucun URI source, cette propriété renvoie null.</returns>
    </member>
    <member name="T:System.Xml.XmlNamespaceManager">
      <summary>Résout, ajoute et supprime des espaces de noms d'une collection et fournit la gestion d'étendue pour ceux-ci. </summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlNamespaceManager" /> avec la <see cref="T:System.Xml.XmlNameTable" /> spécifiée.</summary>
      <param name="nameTable">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="nameTable" /> est null. </exception>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
      <summary>Ajoute l'espace de noms donné à la collection.</summary>
      <param name="prefix">Préfixe à associer à l'espace de noms ajouté.Utilisez String.Empty pour ajouter un espace de noms par défaut.</param>
      <param name="uri">Espace de noms à ajouter. </param>
      <exception cref="T:System.ArgumentException">La valeur de <paramref name="prefix" /> est « xml » ou « xmlns ». </exception>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="prefix" /> ou <paramref name="uri" /> est null. </exception>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.DefaultNamespace">
      <summary>Obtient l'URI d'espace de noms pour l'espace de noms par défaut.</summary>
      <returns>Renvoie l'URI d'espace de noms pour l'espace de noms par défaut, ou String.Empty s'il n'y a pas d'espace de noms par défaut.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetEnumerator">
      <summary>Renvoie un énumérateur à utiliser pour parcourir l'espace de noms dans le <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> contenant les préfixes enregistrés par le <see cref="T:System.Xml.XmlNamespaceManager" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Obtient une collection de noms d'espaces de noms indexés par préfixe pouvant être utilisés pour énumérer les espaces de noms actuellement dans l'étendue.</summary>
      <returns>Collection de noms d'espaces de noms indexés par préfixe pouvant être utilisée pour énumérer les espaces de noms actuellement dans l'étendue.</returns>
      <param name="scope">Valeur de <see cref="T:System.Xml.XmlNamespaceScope" /> spécifiant le type de nœuds d'espaces de noms à renvoyer.</param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)">
      <summary>Obtient une valeur indiquant si le préfixe fourni possède un espace de noms défini pour l'étendue actuelle ayant fait l'objet d'un push.</summary>
      <returns>La valeur est true s'il existe un espace de noms défini, sinon false.</returns>
      <param name="prefix">Préfixe ou espace de noms que vous souhaitez rechercher. </param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)">
      <summary>Obtient l'URI d'espace de noms pour le préfixe spécifié.</summary>
      <returns>Renvoie l'URI d'espace de noms pour <paramref name="prefix" /> ou la valeur null s'il n'y a aucun espace de noms mappé.La chaîne renvoyée est atomisée.Pour plus d'informations sur les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</returns>
      <param name="prefix">Préfixe dont vous souhaitez résoudre l'URI d'espace de noms.Pour correspondre à l'espace de noms par défaut, passer String.Empty.</param>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)">
      <summary>Recherche le préfixe déclaré pour l'URI d'espace de noms donné.</summary>
      <returns>Préfixe correspondant.S'il n'y a pas de préfixe mappé, la méthode renvoie String.Empty.Si une valeur null est fournie, la valeur null est renvoyée.</returns>
      <param name="uri">Espace de noms à résoudre pour le préfixe. </param>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.NameTable">
      <summary>Obtient la <see cref="T:System.Xml.XmlNameTable" /> associée à cet objet.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNameTable" /> utilisée par cet objet.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PopScope">
      <summary>Dépile une étendue d'espace de noms de la pile.</summary>
      <returns>La valeur est true s'il reste des espaces de noms dans la pile ; false s'il n'y a plus d'espaces de noms à dépiler.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PushScope">
      <summary>Exécute un push sur un espace de noms sur la pile.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
      <summary>Supprime l'espace de noms donné pour le préfixe donné.</summary>
      <param name="prefix">Préfixe pour l'espace de noms. </param>
      <param name="uri">Espace de noms à supprimer pour le préfixe donné.L'espace de noms supprimé provient de l'étendue d'espace de noms actuelle.Les espaces de noms situés en dehors de l'étendue actuelle sont ignorés.</param>
      <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="prefix" /> ou <paramref name="uri" /> est null. </exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceScope">
      <summary>Définit la portée de l'espace de noms. </summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.All">
      <summary>Tous les espaces de noms définis dans la portée du nœud actuel.Ceci inclut l'espace de noms xmlns:xml, qui est toujours déclaré implicitement.L'ordre des espaces de noms renvoyés n'est pas défini.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.ExcludeXml">
      <summary>Tous les espaces de noms définis dans la portée du nœud actuel, à l'exception de l'espace de noms xmlns:xml, qui est toujours déclaré implicitement.L'ordre des espaces de noms renvoyés n'est pas défini.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.Local">
      <summary>Tous les espaces de noms définis localement sur le nœud actuel.</summary>
    </member>
    <member name="T:System.Xml.XmlNameTable">
      <summary>Table d'objets de chaînes atomisées.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlNameTable" />. </summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, atomise la chaîne spécifiée et l'ajoute à XmlNameTable.</summary>
      <returns>Nouvelle chaîne atomisée ou, le cas échéant, la chaîne existante.Si la longueur a la valeur zéro, String.Empty est renvoyé.</returns>
      <param name="array">Tableau de caractères contenant le nom à ajouter. </param>
      <param name="offset">Index de base zéro dans le tableau spécifiant le premier caractère du nom. </param>
      <param name="length">Nombre de caractères dans le nom. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />– ou – <paramref name="offset" /> &gt;= <paramref name="array" />.Length– ou – <paramref name="length" /> &gt; <paramref name="array" />.LengthLes conditions ci-dessus n’entraînent pas la levée d’une exception si <paramref name="length" /> =0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> &lt; 0. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> est null. </exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.String)">
      <summary>En cas de substitution dans une classe dérivée, atomise la chaîne spécifiée et l'ajoute à XmlNameTable.</summary>
      <returns>Nouvelle chaîne atomisée ou, le cas échéant, la chaîne existante.</returns>
      <param name="array">Nom à ajouter. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> est null. </exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la chaîne atomisée contenant les mêmes caractères que la plage de caractères spécifiée dans le tableau donné.</summary>
      <returns>Chaîne atomisée ou valeur null si la chaîne n'a pas encore été atomisée.Si <paramref name="length" /> a la valeur zéro, String.Empty est renvoyé.</returns>
      <param name="array">Tableau de caractères contenant le nom à rechercher. </param>
      <param name="offset">Index de base zéro dans le tableau spécifiant le premier caractère du nom. </param>
      <param name="length">Nombre de caractères dans le nom. </param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />– ou – <paramref name="offset" /> &gt;= <paramref name="array" />.Length– ou – <paramref name="length" /> &gt; <paramref name="array" />.LengthLes conditions ci-dessus n’entraînent pas la levée d’une exception si <paramref name="length" /> =0.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> est null. </exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.String)">
      <summary>En cas de substitution dans une classe dérivée, obtient la chaîne atomisée contenant la même valeur que la chaîne spécifiée.</summary>
      <returns>Chaîne atomisée ou valeur null si la chaîne n'a pas encore été atomisée.</returns>
      <param name="array">Nom à rechercher. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> est null. </exception>
    </member>
    <member name="T:System.Xml.XmlNodeType">
      <summary>Spécifie le type de nœud.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Attribute">
      <summary>Attribut (par exemple, id='123').</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.CDATA">
      <summary>Section CDATA (par exemple, &lt;![CDATA[my escaped text]]&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Comment">
      <summary>Commentaire (par exemple, &lt;!-- my comment --&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Document">
      <summary>Un objet document qui, en tant que racine de l'arborescence de documents, permet d'accéder à l'intégralité du document XML.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentFragment">
      <summary>Fragment de document.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentType">
      <summary>Déclaration de type du document, indiquée par la balise suivante (par exemple, &lt;!DOCTYPE...&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Element">
      <summary>Élément (par exemple, &lt;item&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndElement">
      <summary>Balise d'élément de fin (par exemple, &lt;/item&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndEntity">
      <summary>Renvoyé lorsque XmlReader atteint la fin du remplacement d'entité, suite à un appel à <see cref="M:System.Xml.XmlReader.ResolveEntity" />.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Entity">
      <summary>Déclaration d'entité (par exemple, &lt;!ENTITY...&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EntityReference">
      <summary>Référence à une entité (par exemple, &amp;num;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.None">
      <summary>Ceci est renvoyé par <see cref="T:System.Xml.XmlReader" /> si aucune méthode Read n'a été appelée.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Notation">
      <summary>Notation dans la déclaration de type du document (par exemple, &lt;!NOTATION...&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.ProcessingInstruction">
      <summary>Instruction de traitement (par exemple, &lt;?pi test?&gt;).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.SignificantWhitespace">
      <summary>Espace blanc entre le balisage dans un modèle de contenu mixte, ou espace blanc dans la portée xml:space="preserve".</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Text">
      <summary>Texte d'un nœud.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Whitespace">
      <summary>Espace blanc entre le balisage.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.XmlDeclaration">
      <summary>Déclaration XML (par exemple, &lt;?xml version='1.0'?&gt;).</summary>
    </member>
    <member name="T:System.Xml.XmlParserContext">
      <summary>Fournit toutes les informations de contexte requises par le <see cref="T:System.Xml.XmlReader" /> pour analyser un fragment XML.</summary>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
      <summary>Initialise une nouvelle instance de la classe XmlParserContext avec les <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI de base, xml:lang, xml:space et valeurs de type de document spécifiés.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour atomiser les chaînes.Si la valeur est null, la table de noms servant à construire <paramref name="nsMgr" /> est utilisée à la place.Pour plus d'informations sur les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la recherche d'informations d'espace de noms, ou null. </param>
      <param name="docTypeName">Nom de la déclaration de type du document. </param>
      <param name="pubId">Identificateur public. </param>
      <param name="sysId">Identificateur système. </param>
      <param name="internalSubset">Sous-ensemble interne DTD. </param>
      <param name="baseURI">URI de base du fragment XML (emplacement à partir duquel le fragment a été chargé). </param>
      <param name="xmlLang">Portée xml:lang. </param>
      <param name="xmlSpace">Valeur <see cref="T:System.Xml.XmlSpace" /> indiquant la portée xml:space. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> n’est pas le même XmlNameTable utilisé pour construire <paramref name="nsMgr" />. </exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Initialise une nouvelle instance de la classe XmlParserContext avec les <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI de base, xml:lang, xml:space, encodage et valeurs de type de document spécifiés.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour atomiser les chaînes.Si la valeur est null, la table de noms servant à construire <paramref name="nsMgr" /> est utilisée à la place.Pour plus d'informations sur les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la recherche d'informations d'espace de noms, ou null. </param>
      <param name="docTypeName">Nom de la déclaration de type du document. </param>
      <param name="pubId">Identificateur public. </param>
      <param name="sysId">Identificateur système. </param>
      <param name="internalSubset">Sous-ensemble interne DTD. </param>
      <param name="baseURI">URI de base du fragment XML (emplacement à partir duquel le fragment a été chargé). </param>
      <param name="xmlLang">Portée xml:lang. </param>
      <param name="xmlSpace">Valeur <see cref="T:System.Xml.XmlSpace" /> indiquant la portée xml:space. </param>
      <param name="enc">Objet <see cref="T:System.Text.Encoding" /> indiquant le paramètre d'encodage. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> n’est pas le même XmlNameTable utilisé pour construire <paramref name="nsMgr" />. </exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
      <summary>Initialise une nouvelle instance de la classe XmlParserContext avec les <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, xml:lang et valeurs xml:space spécifiés.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour atomiser les chaînes.Si la valeur est null, la table de noms servant à construire <paramref name="nsMgr" /> est utilisée à la place.Pour plus d'informations sur les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la recherche d'informations d'espace de noms, ou null. </param>
      <param name="xmlLang">Portée xml:lang. </param>
      <param name="xmlSpace">Valeur <see cref="T:System.Xml.XmlSpace" /> indiquant la portée xml:space. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> n’est pas le même XmlNameTable utilisé pour construire <paramref name="nsMgr" />. </exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Initialise une nouvelle instance de la classe XmlParserContext avec les <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, xml:lang, xml:space et encodage spécifiés.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> à utiliser pour atomiser les chaînes.Si la valeur est null, la table de noms servant à construire <paramref name="nsMgr" /> est utilisée à la place.Pour plus d'informations sur les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> à utiliser pour la recherche d'informations d'espace de noms, ou null. </param>
      <param name="xmlLang">Portée xml:lang. </param>
      <param name="xmlSpace">Valeur <see cref="T:System.Xml.XmlSpace" /> indiquant la portée xml:space. </param>
      <param name="enc">Objet <see cref="T:System.Text.Encoding" /> indiquant le paramètre d'encodage. </param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> n’est pas le même XmlNameTable utilisé pour construire <paramref name="nsMgr" />. </exception>
    </member>
    <member name="P:System.Xml.XmlParserContext.BaseURI">
      <summary>Obtient ou définit l'URI de base.</summary>
      <returns>URI de base à utiliser pour résoudre le fichier DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.DocTypeName">
      <summary>Obtient ou définit le nom de la déclaration de type du document.</summary>
      <returns>Nom de la déclaration de type du document.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.Encoding">
      <summary>Obtient ou définit le type d'encodage.</summary>
      <returns>Objet <see cref="T:System.Text.Encoding" /> indiquant le type d'encodage.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.InternalSubset">
      <summary>Obtient ou définit le sous-ensemble interne DTD.</summary>
      <returns>Sous-ensemble interne DTD.Par exemple, cette propriété renvoie tout ce qui est contenu entre crochets &lt;!DOCTYPE doc [...]&gt;.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NamespaceManager">
      <summary>Obtient ou définit le <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>XmlNamespaceManager.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NameTable">
      <summary>Obtient le <see cref="T:System.Xml.XmlNameTable" /> utilisé pour atomiser les chaînes.Pour plus d'informations sur les chaînes atomisées, consultez <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <returns>XmlNameTable.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.PublicId">
      <summary>Obtient ou définit l'identificateur public.</summary>
      <returns>Identificateur public.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.SystemId">
      <summary>Obtient ou définit l'identificateur système.</summary>
      <returns>Identificateur système.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlLang">
      <summary>Obtient ou définit la portée xml:lang actuelle.</summary>
      <returns>Portée xml:lang actuelle.S'il n'existe aucun xml:lang dans la portée, String.Empty est renvoyé.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlSpace">
      <summary>Obtient ou définit la portée xml:lang actuelle.</summary>
      <returns>Valeur <see cref="T:System.Xml.XmlSpace" /> indiquant la portée xml:space.</returns>
    </member>
    <member name="T:System.Xml.XmlQualifiedName">
      <summary>Représente un nom qualifié XML.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlQualifiedName" /> dont le nom est spécifié.</summary>
      <param name="name">Nom local à utiliser comme nom de l'objet <see cref="T:System.Xml.XmlQualifiedName" />. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlQualifiedName" /> avec le nom et l'espace de noms spécifiés.</summary>
      <param name="name">Nom local à utiliser comme nom de l'objet <see cref="T:System.Xml.XmlQualifiedName" />. </param>
      <param name="ns">Espace de noms pour l'objet <see cref="T:System.Xml.XmlQualifiedName" />. </param>
    </member>
    <member name="F:System.Xml.XmlQualifiedName.Empty">
      <summary>Fournit un <see cref="T:System.Xml.XmlQualifiedName" /> vide.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.Equals(System.Object)">
      <summary>Détermine si l'objet <see cref="T:System.Xml.XmlQualifiedName" /> spécifié est égal à l'objet <see cref="T:System.Xml.XmlQualifiedName" /> actuel. </summary>
      <returns>La valeur est true si les deux sont le même objet d'instance, sinon false.</returns>
      <param name="other">
        <see cref="T:System.Xml.XmlQualifiedName" /> à comparer. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.GetHashCode">
      <summary>Renvoie le code de hachage pour le <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Code de hachage de cet objet.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.IsEmpty">
      <summary>Obtient une valeur indiquant si le <see cref="T:System.Xml.XmlQualifiedName" /> est vide.</summary>
      <returns>La valeur est true si le nom et l'espace de noms sont des chaînes vides, sinon false.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Name">
      <summary>Obtient une représentation de chaîne du nom complet de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Représentation du nom complet ou String.Empty si un nom n'est pas défini pour l'objet.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Namespace">
      <summary>Obtient une représentation d'espace de noms de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Représentation de l'espace de noms ou String.Empty si un espace de noms n'est pas défini pour l'objet.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Equality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Compare deux objets <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>La valeur est true si les deux objets ont le même nom et les mêmes valeurs d'espace de noms, sinon false.</returns>
      <param name="a">
        <see cref="T:System.Xml.XmlQualifiedName" /> à comparer. </param>
      <param name="b">
        <see cref="T:System.Xml.XmlQualifiedName" /> à comparer. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Inequality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Compare deux objets <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>La valeur est true si les valeurs de nom et d'espace de noms diffèrent pour les deux objets, sinon false.</returns>
      <param name="a">
        <see cref="T:System.Xml.XmlQualifiedName" /> à comparer. </param>
      <param name="b">
        <see cref="T:System.Xml.XmlQualifiedName" /> à comparer. </param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString">
      <summary>Renvoie la valeur de chaîne de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Valeur de chaîne de <see cref="T:System.Xml.XmlQualifiedName" /> au format namespace:localname.Si l'objet n'a pas un espace de noms défini, cette méthode renvoie uniquement le nom local.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString(System.String,System.String)">
      <summary>Renvoie la valeur de chaîne de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Valeur de chaîne de <see cref="T:System.Xml.XmlQualifiedName" /> au format namespace:localname.Si l'objet n'a pas un espace de noms défini, cette méthode renvoie uniquement le nom local.</returns>
      <param name="name">Nom de l'objet . </param>
      <param name="ns">Espace de noms de l'objet. </param>
    </member>
    <member name="T:System.Xml.XmlReader">
      <summary>Représente un lecteur fournissant un accès rapide, non mis en cache et en avant uniquement vers les données XML.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.#ctor">
      <summary>Initialise une nouvelle instance de la classe XmlReader.</summary>
    </member>
    <member name="P:System.Xml.XmlReader.AttributeCount">
      <summary>En cas de substitution dans une classe dérivée, obtient le nombre d'attributs du nœud actuel.</summary>
      <returns>Nombre d'attributs du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.BaseURI">
      <summary>En cas de substitution dans une classe dérivée, obtient l'URI de base du nœud actuel.</summary>
      <returns>URI de base du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadBinaryContent">
      <summary>Obtient une valeur indiquant si le <see cref="T:System.Xml.XmlReader" /> implémente les méthodes de lecture de contenu binaire.</summary>
      <returns>La valeur est true si les méthodes de lecture de contenu binaire sont implémentées, sinon false.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadValueChunk">
      <summary>Obtient une valeur indiquant si le <see cref="T:System.Xml.XmlReader" /> implémente la méthode <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />. </summary>
      <returns>La valeur est true si le <see cref="T:System.Xml.XmlReader" /> implémente la méthode <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />, sinon false.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanResolveEntity">
      <summary>Obtient une valeur indiquant si ce lecteur peut analyser et résoudre les entités.</summary>
      <returns>La valeur est true si le lecteur peut analyser et résoudre les entités, sinon false.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Close">
      <summary>En cas de substitution dans une classe dérivée, modifie le <see cref="P:System.Xml.XmlReader.ReadState" /> en Closed.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l'aide du flux spécifié.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReader" /> utilisé pour lire les données contenues dans le flux. </returns>
      <param name="input">Flux contenant les données XML. Le <see cref="T:System.Xml.XmlReader" /> analyse les premiers octets du flux à la recherche d'une marque d'ordre d'octet ou d'un autre signe d'encodage.Lorsque l'encodage est déterminé, il est utilisé pour continuer à lire le flux, et le traitement continue à analyser l'entrée en tant que flux de caractères (Unicode).</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="input" /> a la valeur null.</exception>
      <exception cref="T:System.Security.SecurityException">Le <see cref="T:System.Xml.XmlReader" /> n’a pas les autorisations nécessaires pour accéder à l’emplacement des données XML.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> avec le flux et l'objet <see cref="T:System.Xml.XmlReaderSettings" /> spécifiés.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReader" /> destiné à la lecture des données XML.</returns>
      <param name="input">Flux contenant les données XML. Le <see cref="T:System.Xml.XmlReader" /> analyse les premiers octets du flux à la recherche d'une marque d'ordre d'octet ou d'un autre signe d'encodage.Lorsque l'encodage est déterminé, il est utilisé pour continuer à lire le flux, et le traitement continue à analyser l'entrée en tant que flux de caractères (Unicode).</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlReaderSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlReader" />.Cette valeur peut être null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l'aide du flux, de l'URI de base et de l'objet <see cref="T:System.Xml.XmlReaderSettings" /> spécifiés.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReader" /> destiné à la lecture de données XML.</returns>
      <param name="input">Flux contenant les données XML. Le <see cref="T:System.Xml.XmlReader" /> analyse les premiers octets du flux à la recherche d'une marque d'ordre d'octet ou d'un autre signe d'encodage.Lorsque l'encodage est déterminé, il est utilisé pour continuer à lire le flux, et le traitement continue à analyser l'entrée en tant que flux de caractères (Unicode).</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlReaderSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlReader" />.Cette valeur peut être null.</param>
      <param name="baseUri">URI de base pour l'entité ou le document en cours de lecture.Cette valeur peut être null.Note de sécurité   L'URI de base est utilisé pour résoudre l'URI relatif du document XML.N'utilisez pas un URI de base provenant d'une source non fiable.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="input" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l'aide du flux, de <see cref="T:System.Xml.XmlReaderSettings" /> et des objets <see cref="T:System.Xml.XmlParserContext" /> spécifiés.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReader" /> destiné à la lecture de données XML.</returns>
      <param name="input">Flux contenant les données XML. Le <see cref="T:System.Xml.XmlReader" /> analyse les premiers octets du flux à la recherche d'une marque d'ordre d'octet ou d'un autre signe d'encodage.Lorsque l'encodage est déterminé, il est utilisé pour continuer à lire le flux, et le traitement continue à analyser l'entrée en tant que flux de caractères (Unicode).</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlReaderSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlReader" />.Cette valeur peut être null.</param>
      <param name="inputContext">Objet <see cref="T:System.Xml.XmlParserContext" /> fournissant les informations de contexte nécessaires à l'analyse du fragment XML.Les informations de contexte peuvent inclure la <see cref="T:System.Xml.XmlNameTable" /> à utiliser, l'encodage, la portée espace de noms, les portées xml:lang et xml:space actuelles, l'URI de base et la définition de type de document.Cette valeur peut être null.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="input" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> avec le <see cref="T:System.IO.TextReader" /> spécifié.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReader" /> destiné à la lecture des données XML.</returns>
      <param name="input">
        <see cref="T:System.IO.TextReader" /> à partir duquel lire les données XML.Parce que <see cref="T:System.IO.TextReader" /> renvoie un flux de caractères Unicode, l'encodage spécifié dans la déclaration XML n'est pas utilisé par le <see cref="T:System.Xml.XmlReader" /> pour décoder le flux de données.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="input" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l'aide des objets <see cref="T:System.IO.TextReader" /> et <see cref="T:System.Xml.XmlReaderSettings" /> spécifiés.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReader" /> destiné à la lecture de données XML.</returns>
      <param name="input">
        <see cref="T:System.IO.TextReader" /> à partir duquel lire les données XML.Parce qu'un <see cref="T:System.IO.TextReader" /> renvoie un flux de caractères Unicode, l'encodage spécifié dans la déclaration XML n'est pas utilisé par le <see cref="T:System.Xml.XmlReader" /> pour décoder le flux de données.</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlReaderSettings" /> permettant de configurer le nouveau <see cref="T:System.Xml.XmlReader" />.Cette valeur peut être null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l'aide de <see cref="T:System.IO.TextReader" />, de <see cref="T:System.Xml.XmlReaderSettings" /> et de l'URI de base spécifiés.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReader" /> destiné à la lecture de données XML.</returns>
      <param name="input">
        <see cref="T:System.IO.TextReader" /> à partir duquel lire les données XML.Parce que <see cref="T:System.IO.TextReader" /> renvoie un flux de caractères Unicode, l'encodage spécifié dans la déclaration XML n'est pas utilisé par le <see cref="T:System.Xml.XmlReader" /> pour décoder le flux de données.</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlReaderSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlReader" />.Cette valeur peut être null.</param>
      <param name="baseUri">URI de base pour l'entité ou le document en cours de lecture.Cette valeur peut être null.Note de sécurité   L'URI de base est utilisé pour résoudre l'URI relatif du document XML.N'utilisez pas un URI de base provenant d'une source non fiable.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="input" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l'aide de <see cref="T:System.IO.TextReader" />, de <see cref="T:System.Xml.XmlReaderSettings" /> et des objets <see cref="T:System.Xml.XmlParserContext" /> spécifiés.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReader" /> destiné à la lecture de données XML.</returns>
      <param name="input">
        <see cref="T:System.IO.TextReader" /> à partir duquel lire les données XML.Parce que <see cref="T:System.IO.TextReader" /> renvoie un flux de caractères Unicode, l'encodage spécifié dans la déclaration XML n'est pas utilisé par le <see cref="T:System.Xml.XmlReader" /> pour décoder le flux de données.</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlReaderSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlReader" />.Cette valeur peut être null.</param>
      <param name="inputContext">Objet <see cref="T:System.Xml.XmlParserContext" /> fournissant les informations de contexte nécessaires à l'analyse du fragment XML.Les informations de contexte peuvent inclure la <see cref="T:System.Xml.XmlNameTable" /> à utiliser, l'encodage, la portée espace de noms, les portées xml:lang et xml:space actuelles, l'URI de base et la définition de type de document.Cette valeur peut être null.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="input" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Les propriétés <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> et <see cref="P:System.Xml.XmlParserContext.NameTable" /> contiennent toutes deux des valeurs.(Seule une de ces propriétés NameTable peut être définie et utilisée).</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> avec l'URI spécifié.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReader" /> destiné à la lecture des données XML. </returns>
      <param name="inputUri">URI du fichier contenant les données XML.La classe <see cref="T:System.Xml.XmlXapResolver" /> permet de convertir un chemin d'accès en représentation de données canonique.Pour plus d'informations, consultez la section Notes ci-après.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="inputUri" /> a la valeur null.</exception>
      <exception cref="T:System.Security.SecurityException">Le <see cref="T:System.Xml.XmlReader" /> n’a pas les autorisations nécessaires pour accéder à l’emplacement des données XML.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier identifié par l'URI n'existe pas.</exception>
      <exception cref="T:System.UriFormatException">Le format d'URI n'est pas correct.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
      <summary>Crée une instance avec l'URI spécifié et <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReader" /> destiné à la lecture de données XML.</returns>
      <param name="inputUri">URI du fichier contenant les données XML.L'objet <see cref="T:System.Xml.XmlResolver" /> sur l'objet <see cref="T:System.Xml.XmlReaderSettings" /> permet de convertir un chemin d'accès en représentation de données canonique.Si <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> a la valeur null, un nouvel objet <see cref="T:System.Xml.XmlXapResolver" /> est utilisé.Pour plus d'informations, consultez la section Notes ci-après.</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlReaderSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlReader" />.Cette valeur peut être null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inputUri" /> a la valeur null.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Impossible de trouver le fichier spécifié par l'URI.</exception>
      <exception cref="T:System.UriFormatException">Le format d'URI n'est pas correct.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> à l'aide de l'URI, de <see cref="T:System.Xml.XmlReaderSettings" /> et des objets <see cref="T:System.Xml.XmlParserContext" /> spécifiés.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReader" /> destiné à la lecture de données XML.</returns>
      <param name="inputUri">URI du fichier contenant les données XML.L'objet <see cref="T:System.Xml.XmlResolver" /> sur l'objet <see cref="T:System.Xml.XmlReaderSettings" /> permet de convertir un chemin d'accès en représentation de données canonique.Si <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> a la valeur null, un nouvel objet <see cref="T:System.Xml.XmlXapResolver" /> est utilisé.Pour plus d'informations, consultez la section Notes ci-après.</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlReaderSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlReader" />.Cette valeur peut être null.</param>
      <param name="inputContext">Objet <see cref="T:System.Xml.XmlParserContext" /> fournissant les informations de contexte nécessaires à l'analyse du fragment XML.Les informations de contexte peuvent inclure la <see cref="T:System.Xml.XmlNameTable" /> à utiliser, l'encodage, la portée espace de noms, les portées xml:lang et xml:space actuelles, l'URI de base et la définition de type de document.Cette valeur peut être null.</param>
      <exception cref="T:System.NullReferenceException">inputUri a la valeur null.</exception>
      <exception cref="T:System.Security.SecurityException">Le <see cref="T:System.Xml.XmlReader" /> n’a pas les autorisations nécessaires pour accéder à l’emplacement des données XML.</exception>
      <exception cref="T:System.ArgumentException">Les propriétés <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> et <see cref="P:System.Xml.XmlParserContext.NameTable" /> contiennent toutes deux des valeurs.(Seule une de ces propriétés NameTable peut être définie et utilisée).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Impossible de trouver le fichier spécifié par l'URI.</exception>
      <exception cref="T:System.UriFormatException">Le format d'URI n'est pas correct.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlReader" /> avec le <see cref="T:System.Xml.XmlReader" /> et le <see cref="T:System.Xml.XmlReaderSettings" /> spécifiés.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReader" /> encapsulé autour de l'objet <see cref="T:System.Xml.XmlReader" /> spécifié.</returns>
      <param name="reader">Objet <see cref="T:System.Xml.XmlReader" /> à utiliser comme lecteur sous-jacent.</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlReaderSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlReader" />.Le niveau de conformité de l'objet <see cref="T:System.Xml.XmlReaderSettings" /> doit soit correspondre au niveau de conformité du lecteur sous-jacent, soit avoir la valeur <see cref="F:System.Xml.ConformanceLevel.Auto" />.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="reader" /> a la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">Si l’objet <see cref="T:System.Xml.XmlReaderSettings" /> spécifie un niveau de conformité qui n’est pas cohérent avec le niveau de conformité du lecteur sous-jacent.– ou –Le paramètre <see cref="T:System.Xml.XmlReader" /> sous-jacent est dans l’état <see cref="F:System.Xml.ReadState.Error" /> ou <see cref="F:System.Xml.ReadState.Closed" />.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Depth">
      <summary>En cas de substitution dans une classe dérivée, obtient la profondeur du nœud actuel dans le document XML.</summary>
      <returns>Profondeur du nœud actuel dans le document XML.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose">
      <summary>Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Xml.XmlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par le <see cref="T:System.Xml.XmlReader" /> et libère éventuellement les ressources managées. </summary>
      <param name="disposing">true pour libérer les ressources managées et non managées, ou false pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="P:System.Xml.XmlReader.EOF">
      <summary>En cas de substitution dans une classe dérivée, obtient une valeur indiquant si le lecteur est placé à la fin du flux.</summary>
      <returns>La valeur est true si le lecteur est placé à la fin du flux, sinon false.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec l'index spécifié.</summary>
      <returns>Valeur de l'attribut spécifié.Cette méthode ne déplace pas le lecteur.</returns>
      <param name="i">Index de l'attribut.L'index est de base zéro.Le premier attribut possède l'index 0.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> est hors limites.Doit être non négatif et inférieur à la taille de la collection d'attributs.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec le <see cref="P:System.Xml.XmlReader.Name" /> spécifié.</summary>
      <returns>Valeur de l'attribut spécifié.Si l'attribut est introuvable ou si la valeur est String.Empty, la valeur null est renvoyée.</returns>
      <param name="name">Nom qualifié de l'attribut. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec le <see cref="P:System.Xml.XmlReader.LocalName" /> et le <see cref="P:System.Xml.XmlReader.NamespaceURI" /> spécifiés.</summary>
      <returns>Valeur de l'attribut spécifié.Si l'attribut est introuvable ou si la valeur est String.Empty, la valeur null est renvoyée.Cette méthode ne déplace pas le lecteur.</returns>
      <param name="name">Nom local de l'attribut. </param>
      <param name="namespaceURI">URI de l'espace de noms de l'attribut. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetValueAsync">
      <summary>Obtient de manière asynchrone la valeur du nœud actuel.</summary>
      <returns>Valeur du nœud actuel.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasAttributes">
      <summary>Obtient une valeur indiquant si le nœud actuel possède des attributs.</summary>
      <returns>La valeur est true si le nœud actuel possède des attributs, sinon false.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.HasValue">
      <summary>En cas de substitution dans une classe dérivée, obtient une valeur indiquant si le nœud actuel peut posséder <see cref="P:System.Xml.XmlReader.Value" />.</summary>
      <returns>La valeur est true si le nœud sur lequel le lecteur est placé actuellement peut posséder Value, sinon false.Si la valeur est false, le nœud a une valeur de String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.IsDefault">
      <summary>En cas de substitution dans une classe dérivée, obtient une valeur indiquant si le nœud actuel est un attribut généré à partir de la valeur par défaut définie dans la DTD.</summary>
      <returns>La valeur est true si le nœud actuel est un attribut dont la valeur a été générée à partir de la valeur par défaut définie dans la DTD, sinon false si la valeur d'attribut a été définie explicitement.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.IsEmptyElement">
      <summary>En cas de substitution dans une classe dérivée, obtient une valeur indiquant si le nœud actuel est un élément vide (par exemple, &lt;MyElement/&gt;).</summary>
      <returns>La valeur est true si le nœud actuel est un élément (<see cref="P:System.Xml.XmlReader.NodeType" /> est égal à XmlNodeType.Element) se terminant par /&gt;, sinon false.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsName(System.String)">
      <summary>Obtient une valeur indiquant si l'argument de chaîne est un nom XML valide.</summary>
      <returns>La valeur est true si le nom est valide, sinon false.</returns>
      <param name="str">Nom à valider. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="str" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsNameToken(System.String)">
      <summary>Obtient une valeur indiquant si l'argument de chaîne est un jeton de nom XML valide.</summary>
      <returns>La valeur est true si le jeton de nom est valide, sinon false.</returns>
      <param name="str">Jeton de nom à valider. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="str" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement">
      <summary>Appelle <see cref="M:System.Xml.XmlReader.MoveToContent" /> et vérifie si le nœud de contenu actuel est une balise de début ou une balise d'élément vide.</summary>
      <returns>La valeur est true si <see cref="M:System.Xml.XmlReader.MoveToContent" /> trouve une balise de début ou une balise d'élément vide, ou false si un type de nœud autre que XmlNodeType.Element est trouvé.</returns>
      <exception cref="T:System.Xml.XmlException">Code XML incorrect dans le flux d’entrée. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String)">
      <summary>Appelle <see cref="M:System.Xml.XmlReader.MoveToContent" /> et vérifie si le nœud de contenu actuel est une balise de début ou une balise d'élément vide, puis vérifie également si la propriété <see cref="P:System.Xml.XmlReader.Name" /> de l'élément trouvé correspond à l'argument spécifié.</summary>
      <returns>La valeur est true si le nœud résultant est un élément et si la propriété Name correspond à la chaîne spécifiée.La valeur est false si un type de nœud autre que XmlNodeType.Element a été trouvé ou si la propriété Name de l'élément ne correspond pas à la chaîne spécifiée.</returns>
      <param name="name">Chaîne comparée à la propriété Name de l'élément trouvé. </param>
      <exception cref="T:System.Xml.XmlException">Code XML incorrect dans le flux d’entrée. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
      <summary>Appelle <see cref="M:System.Xml.XmlReader.MoveToContent" /> et vérifie si le nœud de contenu actuel est une balise de début ou une balise d'élément vide, puis vérifie également si les propriétés <see cref="P:System.Xml.XmlReader.LocalName" /> et <see cref="P:System.Xml.XmlReader.NamespaceURI" /> de l'élément trouvé correspondent aux chaînes spécifiées.</summary>
      <returns>La valeur est true si le nœud résultant est un élément.La valeur est false si un type de nœud autre que XmlNodeType.Element a été trouvé ou si les propriétés LocalName et NamespaceURI de l'élément ne correspondent pas aux chaînes spécifiées.</returns>
      <param name="localname">Chaîne à comparer à la propriété LocalName de l'élément trouvé. </param>
      <param name="ns">Chaîne à comparer à la propriété NamespaceURI de l'élément trouvé. </param>
      <exception cref="T:System.Xml.XmlException">Code XML incorrect dans le flux d’entrée. </exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec l'index spécifié.</summary>
      <returns>Valeur de l'attribut spécifié.</returns>
      <param name="i">Index de l'attribut. </param>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec le <see cref="P:System.Xml.XmlReader.Name" /> spécifié.</summary>
      <returns>Valeur de l'attribut spécifié.Si l'attribut est introuvable, la valeur null est renvoyée.</returns>
      <param name="name">Nom qualifié de l'attribut. </param>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur de l'attribut avec le <see cref="P:System.Xml.XmlReader.LocalName" /> et le <see cref="P:System.Xml.XmlReader.NamespaceURI" /> spécifiés.</summary>
      <returns>Valeur de l'attribut spécifié.Si l'attribut est introuvable, la valeur null est renvoyée.</returns>
      <param name="name">Nom local de l'attribut. </param>
      <param name="namespaceURI">URI de l'espace de noms de l'attribut. </param>
    </member>
    <member name="P:System.Xml.XmlReader.LocalName">
      <summary>En cas de substitution dans une classe dérivée, obtient le nom local du nœud actuel.</summary>
      <returns>Nom du nœud actuel dont le préfixe est supprimé.Par exemple, LocalName est book pour l'élément &lt;bk:book&gt;.Pour les types de nœuds ne possédant pas de nom (par exemple, Text, Comment, etc.), cette propriété renvoie String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.LookupNamespace(System.String)">
      <summary>En cas de substitution dans une classe dérivée, résout un préfixe de l'espace de noms dans la portée de l'élément actuel.</summary>
      <returns>URI de l'espace de noms vers lequel le préfixe est mappé, ou null si aucun préfixe correspondant n'est trouvé.</returns>
      <param name="prefix">Préfixe dont vous souhaitez résoudre l'URI d'espace de noms.Pour établir une correspondance avec l'espace de noms par défaut, passez une chaîne vide.</param>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, se déplace vers l'attribut avec l'index spécifié.</summary>
      <param name="i">Index de l'attribut. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="i" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
      <summary>En cas de substitution dans une classe dérivée, se déplace vers l'attribut avec le <see cref="P:System.Xml.XmlReader.Name" /> spécifié.</summary>
      <returns>La valeur est true si l'attribut est trouvé, sinon false.Si la valeur est false, la position du lecteur ne change pas.</returns>
      <param name="name">Nom qualifié de l'attribut. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="name" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, se déplace vers l'attribut avec le <see cref="P:System.Xml.XmlReader.LocalName" /> et le <see cref="P:System.Xml.XmlReader.NamespaceURI" /> spécifiés.</summary>
      <returns>La valeur est true si l'attribut est trouvé, sinon false.Si la valeur est false, la position du lecteur ne change pas.</returns>
      <param name="name">Nom local de l'attribut. </param>
      <param name="ns">URI de l'espace de noms de l'attribut. </param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="name" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContent">
      <summary>Vérifie si le nœud actuel est un nœud de contenu (texte non constitué d'espaces blancs, CDATA, Element, EndElement, EntityReference ou EndEntity).Si le nœud n'est pas un nœud de contenu, le lecteur avance jusqu'au nœud de contenu suivant ou jusqu'à la fin du fichier.Il ignore les nœuds possédant les types suivants : ProcessingInstruction, DocumentType, Comment, Whitespace ou SignificantWhitespace.</summary>
      <returns>
        <see cref="P:System.Xml.XmlReader.NodeType" /> du nœud actuel trouvé par la méthode ou XmlNodeType.None si le lecteur a atteint la fin du flux d'entrée.</returns>
      <exception cref="T:System.Xml.XmlException">Code XML incorrect dans le flux d’entrée. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContentAsync">
      <summary>Vérifie de manière asynchrone si le nœud actuel est un nœud de contenu.Si le nœud n'est pas un nœud de contenu, le lecteur avance jusqu'au nœud de contenu suivant ou jusqu'à la fin du fichier.</summary>
      <returns>
        <see cref="P:System.Xml.XmlReader.NodeType" /> du nœud actuel trouvé par la méthode ou XmlNodeType.None si le lecteur a atteint la fin du flux d'entrée.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToElement">
      <summary>En cas de substitution dans une classe dérivée, se déplace vers l'élément contenant le nœud d'attribut actuel.</summary>
      <returns>La valeur est true si le lecteur est placé sur un attribut (le lecteur se déplace vers l'élément possédant l'attribut), sinon false si le lecteur n'est pas placé sur un attribut (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToFirstAttribute">
      <summary>En cas de substitution dans une classe dérivée, se déplace vers le premier attribut.</summary>
      <returns>La valeur est true si un attribut existe (le lecteur se déplace vers le premier attribut), sinon false (la position du lecteur ne change pas).</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToNextAttribute">
      <summary>En cas de substitution dans une classe dérivée, se déplace vers l'attribut suivant.</summary>
      <returns>La valeur est true s'il existe un attribut suivant, sinon false s'il n'existe plus d'attributs.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Name">
      <summary>En cas de substitution dans une classe dérivée, obtient le nom qualifié du nœud actuel.</summary>
      <returns>Nom qualifié du nœud actuel.Par exemple, Name est bk:book pour l'élément &lt;bk:book&gt;.Le nom renvoyé dépend du <see cref="P:System.Xml.XmlReader.NodeType" /> du nœud.Les types de nœuds suivants renvoient les valeurs répertoriées.Tous les autres types de nœuds renvoient une chaîne vide.Type de nœud Nom AttributeNom de l'attribut. DocumentTypeNom du type de document. ElementNom de la balise. EntityReferenceNom de l'entité référencée. ProcessingInstructionCible de l'instruction de traitement. XmlDeclarationChaîne littérale xml. </returns>
    </member>
    <member name="P:System.Xml.XmlReader.NamespaceURI">
      <summary>En cas de substitution dans une classe dérivée, obtient l'URI de l'espace de noms (tel qu'il est défini dans la spécification relative aux espaces de noms du W3C) du nœud sur lequel le lecteur est placé.</summary>
      <returns>URI de l'espace de noms du nœud actuel, sinon une chaîne vide.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.NameTable">
      <summary>En cas de substitution dans une classe dérivée, obtient le <see cref="T:System.Xml.XmlNameTable" /> associé à cette implémentation.</summary>
      <returns>XmlNameTable vous permettant d'obtenir la version atomisée d'une chaîne du nœud.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.NodeType">
      <summary>En cas de substitution dans une classe dérivée, obtient le type du nœud actuel.</summary>
      <returns>Une des valeurs de <see cref="T:System.Xml.XmlNodeType" /> représentant le type du nœud actuel.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Prefix">
      <summary>En cas de substitution dans une classe dérivée, obtient le préfixe de l'espace de noms associé au nœud actuel.</summary>
      <returns>Préfixe de l'espace de noms associé au nœud actuel.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Read">
      <summary>En cas de substitution dans une classe dérivée, lit le nœud suivant à partir du flux.</summary>
      <returns>La valeur est true si le nœud suivant a été lu correctement, sinon false s'il n'existe plus de nœuds à lire.</returns>
      <exception cref="T:System.Xml.XmlException">Une erreur s’est produite lors de l’analyse XML. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAsync">
      <summary>Lit de manière asynchrone le nœud suivant du flux.</summary>
      <returns>La valeur est true si le nœud suivant a été lu correctement, sinon false s'il n'existe plus de nœuds à lire.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAttributeValue">
      <summary>En cas de substitution dans une classe dérivée, analyse la valeur d'attribut dans un ou plusieurs nœuds Text, EntityReference ou EndEntity.</summary>
      <returns>La valeur est true s'il existe des nœuds à renvoyer.La valeur est false si le lecteur n'est pas placé sur un nœud d'attribut lorsque l'appel initial est effectué ou si toutes les valeurs d'attributs ont été lues.Un attribut vide, par exemple misc="", renvoie la valeur true avec un nœud unique et la valeur String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lit le contenu en tant qu'objet du type spécifié.</summary>
      <returns>Texte concaténé ou valeur d'attribut converti(e) en type demandé.</returns>
      <param name="returnType">Type de la valeur à renvoyer.Remarque   Avec .NET Framework version 3.5, la valeur du paramètre <paramref name="returnType" /> peut maintenant être le type <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type.Par exemple, il peut être utilisé lors de la conversion d'un objet <see cref="T:System.Xml.XmlQualifiedName" /> en xs:string.Cette valeur peut être null.</param>
      <exception cref="T:System.FormatException">Le format du contenu n'est pas correct pour le type cible.</exception>
      <exception cref="T:System.InvalidCastException">La tentative de cast n’est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="returnType" /> a la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel n'est pas un type de nœud pris en charge.Voir le tableau ci-dessous pour plus d'informations.</exception>
      <exception cref="T:System.OverflowException">Lire Decimal.MaxValue..</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lit de manière asynchrone le contenu sous la forme d'un objet du type spécifié.</summary>
      <returns>Texte concaténé ou valeur d'attribut converti(e) en type demandé.</returns>
      <param name="returnType">Type de la valeur à renvoyer.</param>
      <param name="namespaceResolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit le contenu et renvoie les octets binaires décodés au format Base64.</summary>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu.Cette valeur ne peut pas être null.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon.Le nombre réel d'octets copiés est renvoyé à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />  n’est pas pris en charge sur le nœud actuel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L’implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit de manière asynchrone le contenu et renvoie les octets binaires décodés au format Base64.</summary>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu.Cette valeur ne peut pas être null.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon.Le nombre réel d'octets copiés est renvoyé à partir de cette méthode.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit le contenu et renvoie les octets binaires décodés au format BinHex.</summary>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu.Cette valeur ne peut pas être null.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon.Le nombre réel d'octets copiés est renvoyé à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> n’est pas pris en charge sur le nœud actuel.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L’implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit de manière asynchrone le contenu et renvoie les octets binaires décodés au format BinHex.</summary>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu.Cette valeur ne peut pas être null.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon.Le nombre réel d'octets copiés est renvoyé à partir de cette méthode.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBoolean">
      <summary>Lit le texte à la position actuelle sous la forme d'un Boolean.</summary>
      <returns>Texte sous la forme d'un objet <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n’est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTime">
      <summary>Lit le texte à la position actuelle sous la forme d'un objet <see cref="T:System.DateTime" />.</summary>
      <returns>Texte sous la forme d'un objet <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n’est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
      <summary>Lit le texte à la position actuelle sous la forme d'un objet <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Texte sous la forme d'un objet <see cref="T:System.DateTimeOffset" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDecimal">
      <summary>Lit le texte à la position actuelle sous la forme d'un objet <see cref="T:System.Decimal" />.</summary>
      <returns>Texte à la position actuelle sous la forme d'un objet <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n’est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDouble">
      <summary>Lit le texte à la position actuelle sous la forme d'un nombre à virgule flottante double précision.</summary>
      <returns>Texte sous la forme d'un nombre à virgule flottante double précision.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n’est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsFloat">
      <summary>Lit le texte à la position actuelle sous la forme d'un nombre à virgule flottante simple précision.</summary>
      <returns>Texte à la position actuelle sous la forme d'un nombre à virgule flottante simple précision.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n’est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsInt">
      <summary>Lit le texte à la position actuelle sous la forme d'un entier signé 32 bits.</summary>
      <returns>Texte sous la forme d'un entier signé 32 bits.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n’est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsLong">
      <summary>Lit le texte à la position actuelle sous la forme d'un entier signé 64 bits.</summary>
      <returns>Texte sous la forme d'un entier signé 64 bits.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n’est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObject">
      <summary>Lit le texte à la position actuelle sous la forme d'un <see cref="T:System.Object" />.</summary>
      <returns>Texte sous la forme de l'objet CLR (Common Language Runtime) le plus approprié.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n’est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
      <summary>Lit de manière asynchrone le texte à la position actuelle sous la forme d'un <see cref="T:System.Object" />.</summary>
      <returns>Texte sous la forme de l'objet CLR (Common Language Runtime) le plus approprié.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsString">
      <summary>Lit le texte à la position actuelle sous la forme d'un objet <see cref="T:System.String" />.</summary>
      <returns>Texte sous la forme d'un objet <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidCastException">La tentative de cast n’est pas valide.</exception>
      <exception cref="T:System.FormatException">Le format de chaîne n'est pas valide.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsStringAsync">
      <summary>Lit de manière asynchrone le texte à la position actuelle sous la forme d'un objet <see cref="T:System.String" />.</summary>
      <returns>Texte sous la forme d'un objet <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lit le contenu de l'élément en tant que type demandé.</summary>
      <returns>Contenu d'élément converti en l'objet typé demandé.</returns>
      <param name="returnType">Type de la valeur à renvoyer.Remarque   Avec .NET Framework version 3.5, la valeur du paramètre <paramref name="returnType" /> peut maintenant être le type <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
      <exception cref="T:System.OverflowException">Lire Decimal.MaxValue..</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
      <summary>Vérifie que le nom local spécifié et l'URI de l'espace de noms correspondent à ceux de l'élément actuel, puis lit le contenu d'élément en tant que type demandé.</summary>
      <returns>Contenu d'élément converti en l'objet typé demandé.</returns>
      <param name="returnType">Type de la valeur à renvoyer.Remarque   Avec .NET Framework version 3.5, la valeur du paramètre <paramref name="returnType" /> peut maintenant être le type <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type.</param>
      <param name="localName">Nom local de l'élément.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
      <exception cref="T:System.OverflowException">Lire Decimal.MaxValue..</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lit de manière asynchrone le contenu d'élément en tant que type demandé.</summary>
      <returns>Contenu d'élément converti en l'objet typé demandé.</returns>
      <param name="returnType">Type de la valeur à renvoyer.</param>
      <param name="namespaceResolver">Objet <see cref="T:System.Xml.IXmlNamespaceResolver" /> permettant de résoudre tous les préfixes d'espaces de noms liés à la conversion de type.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit l'élément et décode le contenu au format Base64.</summary>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu.Cette valeur ne peut pas être null.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon.Le nombre réel d'octets copiés est renvoyé à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel n'est pas un nœud d'élément.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L’implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément contient un contenu mixte.</exception>
      <exception cref="T:System.FormatException">Impossible de convertir le contenu en type demandé.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit de manière asynchrone l'élément et décode le contenu au format Base64.</summary>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu.Cette valeur ne peut pas être null.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon.Le nombre réel d'octets copiés est renvoyé à partir de cette méthode.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit l'élément et décode le contenu au format BinHex.</summary>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu.Cette valeur ne peut pas être null.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon.Le nombre réel d'octets copiés est renvoyé à partir de cette méthode.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur null.</exception>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel n'est pas un nœud d'élément.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon (ou l'index augmenté de la valeur du paramètre count) est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L’implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément contient un contenu mixte.</exception>
      <exception cref="T:System.FormatException">Impossible de convertir le contenu en type demandé.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit de manière asynchrone l'élément et décode le contenu au format BinHex.</summary>
      <returns>Nombre d'octets écrits dans la mémoire tampon.</returns>
      <param name="buffer">Mémoire tampon dans laquelle copier le texte obtenu.Cette valeur ne peut pas être null.</param>
      <param name="index">Offset de la mémoire tampon où commence la copie du résultat.</param>
      <param name="count">Nombre maximal d'octets à copier dans la mémoire tampon.Le nombre réel d'octets copiés est renvoyé à partir de cette méthode.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
      <summary>Lit l'élément actuel et renvoie le contenu sous la forme d'un objet <see cref="T:System.Boolean" />.</summary>
      <returns>Contenu d'élément sous la forme d'un objet <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Le contenu de l’élément ne peut pas être converti en objet <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
      <summary>Vérifie que le nom local et l'URI de l'espace de noms spécifiés correspondent à ceux de l'élément actuel, puis lit l'élément actuel et renvoie le contenu sous la forme d'un objet <see cref="T:System.Boolean" />.</summary>
      <returns>Contenu d'élément sous la forme d'un objet <see cref="T:System.Boolean" />.</returns>
      <param name="localName">Nom local de l'élément.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
      <summary>Lit l'élément actuel et renvoie le contenu sous la forme d'un objet <see cref="T:System.DateTime" />.</summary>
      <returns>Contenu d'élément sous la forme d'un objet <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Le contenu de l’élément ne peut pas être converti en objet <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
      <summary>Vérifie que le nom local et l'URI de l'espace de noms spécifiés correspondent à ceux de l'élément actuel, puis lit l'élément actuel et renvoie le contenu sous la forme d'un objet <see cref="T:System.DateTime" />.</summary>
      <returns>Contenu d'élément sous la forme d'un objet <see cref="T:System.DateTime" />.</returns>
      <param name="localName">Nom local de l'élément.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
      <summary>Lit l'élément actuel et renvoie le contenu sous la forme d'un objet <see cref="T:System.Decimal" />.</summary>
      <returns>Contenu d'élément sous la forme d'un objet <see cref="T:System.Decimal" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Le contenu de l’élément ne peut pas être converti en objet <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
      <summary>Vérifie que le nom local et l'URI de l'espace de noms spécifiés correspondent à ceux de l'élément actuel, puis lit l'élément actuel et renvoie le contenu sous la forme d'un objet <see cref="T:System.Decimal" />.</summary>
      <returns>Contenu d'élément sous la forme d'un objet <see cref="T:System.Decimal" />.</returns>
      <param name="localName">Nom local de l'élément.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Le contenu de l’élément ne peut pas être converti en objet <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble">
      <summary>Lit l'élément actuel et renvoie le contenu sous la forme d'un nombre à virgule flottante double précision.</summary>
      <returns>Contenu d'élément sous la forme d'un nombre à virgule flottante double précision.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Le contenu de l'élément ne peut pas être converti en nombre à virgule flottante double précision.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
      <summary>Vérifie que le nom local et l'URI de l'espace de noms spécifiés correspondent à ceux de l'élément actuel, puis lit l'élément actuel et renvoie le contenu sous la forme d'un nombre à virgule flottante double précision.</summary>
      <returns>Contenu d'élément sous la forme d'un nombre à virgule flottante double précision.</returns>
      <param name="localName">Nom local de l'élément.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat">
      <summary>Lit l'élément actuel et renvoie le contenu sous la forme d'un nombre à virgule flottante simple précision.</summary>
      <returns>Contenu d'élément sous la forme d'un nombre à virgule flottante simple précision.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Le contenu de l'élément ne peut pas être converti en nombre à virgule flottante simple précision.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
      <summary>Vérifie que le nom local et l'URI de l'espace de noms spécifiés correspondent à ceux de l'élément actuel, puis lit l'élément actuel et renvoie le contenu sous la forme d'un nombre à virgule flottante simple précision.</summary>
      <returns>Contenu d'élément sous la forme d'un nombre à virgule flottante simple précision.</returns>
      <param name="localName">Nom local de l'élément.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Le contenu de l'élément ne peut pas être converti en nombre à virgule flottante simple précision.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt">
      <summary>Lit l'élément actuel et renvoie le contenu sous la forme d'un entier signé 32 bits.</summary>
      <returns>Contenu d'élément sous la forme d'un entier signé 32 bits.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Le contenu de l'élément ne peut pas être converti en un entier signé de 32 bits.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
      <summary>Vérifie que le nom local et l'URI de l'espace de noms spécifiés correspondent à ceux de l'élément actuel, puis lit l'élément actuel et renvoie le contenu sous la forme d'un entier signé 32 bits.</summary>
      <returns>Contenu d'élément sous la forme d'un entier signé 32 bits.</returns>
      <param name="localName">Nom local de l'élément.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Le contenu de l'élément ne peut pas être converti en un entier signé de 32 bits.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong">
      <summary>Lit l'élément actuel et renvoie le contenu sous la forme d'un entier signé 64 bits.</summary>
      <returns>Contenu d'élément sous la forme d'un entier signé 64 bits.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Le contenu de l'élément ne peut pas être converti en un entier signé de 64 bits.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
      <summary>Vérifie que le nom local et l'URI de l'espace de noms spécifiés correspondent à ceux de l'élément actuel, puis lit l'élément actuel et renvoie le contenu sous la forme d'un entier signé 64 bits.</summary>
      <returns>Contenu d'élément sous la forme d'un entier signé 64 bits.</returns>
      <param name="localName">Nom local de l'élément.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Le contenu de l'élément ne peut pas être converti en un entier signé de 64 bits.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject">
      <summary>Lit l'élément actuel et renvoie le contenu sous la forme d'un <see cref="T:System.Object" />.</summary>
      <returns>Objet CLR (Common Language Runtime) converti du type le plus approprié.La propriété <see cref="P:System.Xml.XmlReader.ValueType" /> détermine le type CLR approprié.Si le contenu est de type liste, cette méthode renvoie un tableau d'objets convertis du type approprié.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Impossible de convertir le contenu de l'élément en type demandé</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
      <summary>Vérifie que le nom local et l'URI de l'espace de noms spécifiés correspondent à ceux de l'élément actuel, puis lit l'élément actuel et renvoie le contenu sous la forme d'un <see cref="T:System.Object" />.</summary>
      <returns>Objet CLR (Common Language Runtime) converti du type le plus approprié.La propriété <see cref="P:System.Xml.XmlReader.ValueType" /> détermine le type CLR approprié.Si le contenu est de type liste, cette méthode renvoie un tableau d'objets convertis du type approprié.</returns>
      <param name="localName">Nom local de l'élément.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Impossible de convertir le contenu de l'élément en type demandé.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
      <summary>Lit de manière asynchrone l'élément actuel et renvoie le contenu sous la forme d'un <see cref="T:System.Object" />.</summary>
      <returns>Objet CLR (Common Language Runtime) converti du type le plus approprié.La propriété <see cref="P:System.Xml.XmlReader.ValueType" /> détermine le type CLR approprié.Si le contenu est de type liste, cette méthode renvoie un tableau d'objets convertis du type approprié.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString">
      <summary>Lit l'élément actuel et renvoie le contenu sous la forme d'un objet <see cref="T:System.String" />.</summary>
      <returns>Contenu d'élément sous la forme d'un objet <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Le contenu de l’élément ne peut pas être converti en objet <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
      <summary>Vérifie que le nom local et l'URI de l'espace de noms spécifiés correspondent à ceux de l'élément actuel, puis lit l'élément actuel et renvoie le contenu sous la forme d'un objet <see cref="T:System.String" />.</summary>
      <returns>Contenu d'élément sous la forme d'un objet <see cref="T:System.String" />.</returns>
      <param name="localName">Nom local de l'élément.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'élément.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XmlReader" /> n’est pas placé sur un élément.</exception>
      <exception cref="T:System.Xml.XmlException">L'élément en cours contient des éléments enfants.– ou –Le contenu de l’élément ne peut pas être converti en objet <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">La méthode est appelée avec des arguments null.</exception>
      <exception cref="T:System.ArgumentException">Le nom local et l'URI de l'espace de noms spécifiés ne correspondent pas à l'élément actuel lu.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
      <summary>Lit de manière asynchrone l'élément actuel et renvoie le contenu sous la forme d'un objet <see cref="T:System.String" />.</summary>
      <returns>Contenu d'élément sous la forme d'un objet <see cref="T:System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadEndElement">
      <summary>Vérifie que le nœud de contenu actuel est une balise de fin et avance le lecteur jusqu'au nœud suivant.</summary>
      <exception cref="T:System.Xml.XmlException">Le nœud actuel n’est pas une balise de fin ou un code XML incorrect est trouvé dans le flux d’entrée. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXml">
      <summary>En cas de substitution dans une classe dérivée, lit tout le contenu, y compris le balisage, sous forme de chaîne.</summary>
      <returns>Tout le contenu XML, y compris le balisage, du nœud actuel.Si le nœud actuel n'a pas d'enfants, une chaîne vide est renvoyée.Si le nœud actuel n'est ni un élément ni un attribut, une chaîne vide est renvoyée.</returns>
      <exception cref="T:System.Xml.XmlException">Le code XML était incorrect ou une erreur s’est produite lors de l’analyse XML. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXmlAsync">
      <summary>Lit de manière asynchrone l'ensemble du contenu, y compris le balisage, sous la forme d'une chaîne.</summary>
      <returns>Tout le contenu XML, y compris le balisage, du nœud actuel.Si le nœud actuel n'a pas d'enfants, une chaîne vide est renvoyée.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXml">
      <summary>En cas de substitution dans une classe dérivée, lit le contenu, y compris le balisage, représentant ce nœud et tous ses enfants.</summary>
      <returns>Si le lecteur est placé sur un nœud d'élément ou d'attribut, cette méthode renvoie tout le contenu XML, y compris le balisage, du nœud actuel et de tous ses enfants, sinon, il renvoie une chaîne vide.</returns>
      <exception cref="T:System.Xml.XmlException">Le code XML était incorrect ou une erreur s’est produite lors de l’analyse XML. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXmlAsync">
      <summary>Lit de manière asynchrone le contenu, y compris le balisage, représentant ce nœud tous ses enfants.</summary>
      <returns>Si le lecteur est placé sur un nœud d'élément ou d'attribut, cette méthode renvoie tout le contenu XML, y compris le balisage, du nœud actuel et de tous ses enfants, sinon, il renvoie une chaîne vide.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement">
      <summary>Vérifie que le nœud actuel est un élément et avance le lecteur jusqu'au nœud suivant.</summary>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlReader.IsStartElement" /> retourne false. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String)">
      <summary>Vérifie que le nœud de contenu actuel est un élément avec le <see cref="P:System.Xml.XmlReader.Name" /> spécifié, puis avance le lecteur jusqu'au nœud suivant.</summary>
      <param name="name">Nom qualifié de l'élément. </param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlReader.IsStartElement" /> retourne false ou si le <see cref="P:System.Xml.XmlReader.Name" /> de l’élément ne correspond pas au <paramref name="name" /> spécifié. </exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
      <summary>Vérifie que le nœud de contenu actuel est un élément avec le <see cref="P:System.Xml.XmlReader.LocalName" /> et le <see cref="P:System.Xml.XmlReader.NamespaceURI" /> spécifiés, puis avance le lecteur jusqu'au nœud suivant.</summary>
      <param name="localname">Nom local de l'élément. </param>
      <param name="ns">URI de l'espace de noms de l'élément. </param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlReader.IsStartElement" /> retourne false ou les propriétés <see cref="P:System.Xml.XmlReader.LocalName" /> et <see cref="P:System.Xml.XmlReader.NamespaceURI" /> de l’élément trouvé ne correspondent pas aux arguments spécifiés. </exception>
    </member>
    <member name="P:System.Xml.XmlReader.ReadState">
      <summary>En cas de substitution dans une classe dérivée, obtient l'état du lecteur.</summary>
      <returns>Une des valeurs <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadSubtree">
      <summary>Renvoie une nouvelle instance de XmlReader permettant de lire le nœud actuel, ainsi que tous ses descendants.</summary>
      <returns>Nouvelle instance de XmlReader ayant la valeur ReadState.Initial.Un appel à la méthode <see cref="M:System.Xml.XmlReader.Read" /> place le nouveau XmlReader sur le nœud qui était actuel avant l'appel à la méthode ReadSubtree.</returns>
      <exception cref="T:System.InvalidOperationException">XmlReader n’est pas placé sur un élément lorsque cette méthode est appelée.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
      <summary>Avance le <see cref="T:System.Xml.XmlReader" /> vers l'élément descendant suivant qui porte le nom qualifié spécifié.</summary>
      <returns>La valeur est true si un élément descendant correspondant est trouvé, sinon false.Si aucun élément enfant correspondant n'est trouvé, le <see cref="T:System.Xml.XmlReader" /> est placé sur la balise de fin (<see cref="P:System.Xml.XmlReader.NodeType" /> est XmlNodeType.EndElement) de l'élément.Si le <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément lorsque <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /> est appelé, cette méthode renvoie la valeur false et la position du <see cref="T:System.Xml.XmlReader" /> ne change pas.</returns>
      <param name="name">Nom qualifié de l'élément vers lequel se déplacer.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
      <summary>Avance le <see cref="T:System.Xml.XmlReader" /> vers le nœud descendant suivant doté du nom local et de l'URI de l'espace de noms spécifiés.</summary>
      <returns>La valeur est true si un élément descendant correspondant est trouvé, sinon false.Si aucun élément enfant correspondant n'est trouvé, le <see cref="T:System.Xml.XmlReader" /> est placé sur la balise de fin (<see cref="P:System.Xml.XmlReader.NodeType" /> est XmlNodeType.EndElement) de l'élément.Si le <see cref="T:System.Xml.XmlReader" /> n'est pas placé sur un élément lorsque <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /> est appelé, cette méthode renvoie la valeur false et la position du <see cref="T:System.Xml.XmlReader" /> ne change pas.</returns>
      <param name="localName">Nom local de l'élément vers lequel se déplacer.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'élément vers lequel se déplacer.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
      <summary>Lit jusqu'à trouver un élément avec le nom qualifié spécifié.</summary>
      <returns>La valeur est true si un élément correspondant est trouvé, sinon false et le <see cref="T:System.Xml.XmlReader" /> est dans un état de fin de fichier.</returns>
      <param name="name">Nom qualifié de l'élément.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
      <summary>Lit jusqu'à trouver un élément avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <returns>La valeur est true si un élément correspondant est trouvé, sinon false et le <see cref="T:System.Xml.XmlReader" /> est dans un état de fin de fichier.</returns>
      <param name="localName">Nom local de l'élément.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'élément.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
      <summary>Avance le XmlReader vers l'élément frère suivant portant le nom qualifié spécifié.</summary>
      <returns>La valeur est true si un élément frère correspondant est trouvé, sinon false.Si aucun élément frère correspondant n'est trouvé, le XmlReader est placé sur la balise de fin (<see cref="P:System.Xml.XmlReader.NodeType" /> est XmlNodeType.EndElement) de l'élément parent.</returns>
      <param name="name">Nom qualifié de l'élément frère vers lequel se déplacer.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
      <summary>Avance le XmlReader vers l'élément frère suivant doté du nom local et de l'URI de l'espace de noms spécifiés.</summary>
      <returns>La valeur est true si un élément frère correspondant est trouvé, sinon false.Si aucun élément frère correspondant n'est trouvé, le XmlReader est placé sur la balise de fin (<see cref="P:System.Xml.XmlReader.NodeType" /> est XmlNodeType.EndElement) de l'élément parent.</returns>
      <param name="localName">Nom local de l'élément frère vers lequel se déplacer.</param>
      <param name="namespaceURI">URI de l'espace de noms de l'élément frère vers lequel se déplacer.</param>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
      <summary>Lit des flux de texte volumineux incorporés dans un document XML.</summary>
      <returns>Nombre total de caractères lus dans la mémoire tampon.La valeur zéro est renvoyée lorsqu'il n'y a plus de texte.</returns>
      <param name="buffer">Tableau de caractères servant de mémoire tampon dans laquelle le texte est écrit.Cette valeur ne peut pas être null.</param>
      <param name="index">Offset dans la mémoire tampon où le <see cref="T:System.Xml.XmlReader" /> peut commencer à copier les résultats.</param>
      <param name="count">Nombre maximal de caractères à copier dans la mémoire tampon.Le nombre réel de caractères copiés est renvoyé à partir de cette méthode.</param>
      <exception cref="T:System.InvalidOperationException">Le nœud actuel n’a pas de valeur (<see cref="P:System.Xml.XmlReader.HasValue" /> est false).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">L'index de la mémoire tampon, ou l'index augmenté de la valeur du paramètre count, est supérieur à la taille de la mémoire tampon allouée.</exception>
      <exception cref="T:System.NotSupportedException">L’implémentation de <see cref="T:System.Xml.XmlReader" /> ne prend pas en charge cette méthode.</exception>
      <exception cref="T:System.Xml.XmlException">La forme des données XML n'est pas correcte.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Lit de manière asynchrone des flux de texte volumineux incorporés dans un document XML.</summary>
      <returns>Nombre total de caractères lus dans la mémoire tampon.La valeur zéro est renvoyée lorsqu'il n'y a plus de texte.</returns>
      <param name="buffer">Tableau de caractères servant de mémoire tampon dans laquelle le texte est écrit.Cette valeur ne peut pas être null.</param>
      <param name="index">Offset dans la mémoire tampon où le <see cref="T:System.Xml.XmlReader" /> peut commencer à copier les résultats.</param>
      <param name="count">Nombre maximal de caractères à copier dans la mémoire tampon.Le nombre réel de caractères copiés est renvoyé à partir de cette méthode.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ResolveEntity">
      <summary>En cas de substitution dans une classe dérivée, résout la référence d'entité des nœuds EntityReference.</summary>
      <exception cref="T:System.InvalidOperationException">Le lecteur n’est pas placé sur un nœud EntityReference ; cette implémentation du lecteur ne permet pas de résoudre les entités (<see cref="P:System.Xml.XmlReader.CanResolveEntity" /> retourne false). </exception>
    </member>
    <member name="P:System.Xml.XmlReader.Settings">
      <summary>Obtient l'objet <see cref="T:System.Xml.XmlReaderSettings" /> permettant de créer cette instance de <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReaderSettings" /> permettant de créer cette instance de lecteur.Si ce lecteur n'a pas été créé à l'aide de la méthode <see cref="Overload:System.Xml.XmlReader.Create" />, cette propriété renvoie la valeur null.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Skip">
      <summary>Ignore les enfants du nœud actuel.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.SkipAsync">
      <summary>Ignore de manière asynchrone les enfants du nœud actuel.</summary>
      <returns>Nœud actuel.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlReader" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlReader" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlReaderSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlReaderSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Value">
      <summary>En cas de substitution dans une classe dérivée, obtient la valeur texte du nœud actuel.</summary>
      <returns>La valeur renvoyée dépend du <see cref="P:System.Xml.XmlReader.NodeType" /> du nœud.Le tableau suivant répertorie les types de nœuds possédant une valeur de renvoi.Tous les autres types de nœuds renvoient String.Empty.Type de nœud Valeur AttributeValeur de l'attribut. CDATAContenu de la section CDATA. CommentContenu du commentaire. DocumentTypeSous-ensemble interne. ProcessingInstructionContenu entier, à l'exclusion de la cible. SignificantWhitespaceEspace blanc entre les balisages dans un modèle de contenu mixte. TextContenu du nœud de texte. WhitespaceEspace blanc entre les balisages. XmlDeclarationContenu de la déclaration. </returns>
    </member>
    <member name="P:System.Xml.XmlReader.ValueType">
      <summary>Obtient le type CLR (Common Language Runtime) du nœud actuel.</summary>
      <returns>Type CLR correspondant à la valeur typée du nœud.La valeur par défaut est System.String.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.XmlLang">
      <summary>En cas de substitution dans une classe dérivée, obtient la portée xml:lang actuelle.</summary>
      <returns>Portée xml:lang actuelle.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.XmlSpace">
      <summary>En cas de substitution dans une classe dérivée, obtient la portée xml:space actuelle.</summary>
      <returns>Une des valeurs <see cref="T:System.Xml.XmlSpace" />.S'il n'existe pas de portée xml:space, cette propriété prend la valeur par défaut XmlSpace.None.</returns>
    </member>
    <member name="T:System.Xml.XmlReaderSettings">
      <summary>Spécifie un ensemble de fonctionnalités à prendre en charge sur l'objet <see cref="T:System.Xml.XmlReader" /> créé par la méthode <see cref="Overload:System.Xml.XmlReader.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor(System.Xml.XmlResolver)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlReaderSettings" /> avec un objet <see cref="T:System.Xml.XmlResolver" />.</summary>
      <param name="resolver">Objet <see cref="T:System.Xml.XmlResolver" /> permettant de résoudre des documents externes.</param>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Async">
      <summary>Obtient ou définit une valeur indiquant si les méthodes <see cref="T:System.Xml.XmlReader" /> asynchrones peuvent être utilisées sur une instance <see cref="T:System.Xml.XmlReader" /> particulière.</summary>
      <returns>La valeur est true si les méthodes asynchrones peuvent être utilisées, sinon false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CheckCharacters">
      <summary>Obtient ou définit une valeur indiquant si la vérification des caractères doit être effectuée.</summary>
      <returns>La valeur est true pour effectuer la vérification des caractères, sinon false.La valeur par défaut est true.Note:Si le <see cref="T:System.Xml.XmlReader" /> traite des données de texte, il vérifie toujours que les noms XML et le contenu de texte sont valides, indépendamment du paramètre de propriété.L'attribution à <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> de la valeur false désactive la vérification de caractères pour la recherche de références d'entité de caractère.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Clone">
      <summary>Crée une copie de l'instance de <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlReaderSettings" /> cloné.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CloseInput">
      <summary>Obtient ou définit une valeur indiquant si le flux sous-jacent ou <see cref="T:System.IO.TextReader" /> doit être fermé à la fermeture du lecteur.</summary>
      <returns>La valeur est true pour fermer le flux sous-jacent ou <see cref="T:System.IO.TextReader" /> à la fermeture du lecteur, sinon false.La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ConformanceLevel">
      <summary>Obtient ou définit le niveau de conformité que le <see cref="T:System.Xml.XmlReader" /> respecte.</summary>
      <returns>Une des valeurs <see cref="T:System.Xml.ConformanceLevel" />.La valeur par défaut est ConformanceLevel.Document.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.DtdProcessing">
      <summary>Obtient ou définit l'énumération <see cref="T:System.Xml.DtdProcessing" />.</summary>
      <returns>Énumération <see cref="T:System.Xml.DtdProcessing" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreComments">
      <summary>Obtient ou définit une valeur indiquant si les commentaires doivent être ignorés.</summary>
      <returns>La valeur est true pour ignorer les commentaires, sinon false.La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions">
      <summary>Obtient ou définit une valeur indiquant si les instructions de traitement doivent être ignorées.</summary>
      <returns>La valeur est true pour ignorer les instructions de traitement, sinon false.La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreWhitespace">
      <summary>Obtient ou définit une valeur indiquant si les espaces blancs non significatifs doivent être ignorés.</summary>
      <returns>La valeur est true pour ignorer les espaces blancs, sinon false.La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LineNumberOffset">
      <summary>Obtient ou définit l'offset du numéro de ligne de l'objet <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Offset de numéro de ligne.La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LinePositionOffset">
      <summary>Obtient ou définit l'offset de la position de ligne de l'objet <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Offset de numéro de ligne.La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities">
      <summary>Obtient ou définit une valeur correspondant au nombre maximal autorisé de caractères dans un document, qui résultent du développement des entités.</summary>
      <returns>Nombre maximal autorisé de caractères résultant du développement des entités.La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument">
      <summary>Obtient ou définit une valeur correspondant au nombre maximal autorisé de caractères dans un document XML.Zéro (0) signifie que la taille du document XML n'est pas limitée.Une valeur non nulle spécifie la taille maximale, en caractères.</summary>
      <returns>Nombre maximal autorisé de caractères dans un document XML.La valeur par défaut est 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.NameTable">
      <summary>Obtient ou définit la <see cref="T:System.Xml.XmlNameTable" /> servant aux comparaisons de chaînes atomisées.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNameTable" /> qui stocke toutes les chaînes atomisées utilisées par toutes les instances <see cref="T:System.Xml.XmlReader" /> créées à l'aide de cet objet <see cref="T:System.Xml.XmlReaderSettings" />.La valeur par défaut null.L'instance de <see cref="T:System.Xml.XmlReader" /> créée utilisera une nouvelle <see cref="T:System.Xml.NameTable" /> vide si cette valeur est null.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Reset">
      <summary>Réinitialise les membres de la classe de paramètres à leurs valeurs par défaut.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.XmlResolver">
      <summary>Définit le <see cref="T:System.Xml.XmlResolver" /> permettant d'accéder aux documents externes.</summary>
      <returns>
        <see cref="T:System.Xml.XmlResolver" /> permettant d'accéder aux documents externes.Si sa valeur est null, une <see cref="T:System.Xml.XmlException" /> est levée lorsque le <see cref="T:System.Xml.XmlReader" /> tente d'accéder à une ressource externe.</returns>
    </member>
    <member name="T:System.Xml.XmlResolver">
      <summary>Résout les ressources XML externes nommées par un URI (Uniform Resource Identifier). </summary>
    </member>
    <member name="M:System.Xml.XmlResolver.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlResolver" />.</summary>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>En cas de substitution dans une classe dérivée, mappe un URI vers un objet contenant la ressource réelle.</summary>
      <returns>Objet <see cref="T:System.IO.Stream" /> ou null si un type autre que stream est spécifié.</returns>
      <param name="absoluteUri">URI renvoyé par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />. </param>
      <param name="role">La version actuelle n'utilise pas ce paramètre lors de la résolution des URI.Ceci est fourni pour des extensibilités futures.Par exemple, ceci peut être mappé vers xlink:role et utilisé comme remarques propres à l'implémentation dans d'autres scénarios.</param>
      <param name="ofObjectToReturn">Type d'objet à renvoyer.La version actuelle ne renvoie que les objets <see cref="T:System.IO.Stream" />.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> n’est pas un type Stream. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> est null. </exception>
      <exception cref="T:System.Exception">Une erreur d’exécution se produit (par exemple, une interruption de la connexion au serveur). </exception>
    </member>
    <member name="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
      <summary>En cas de substitution dans une classe dérivée, résout l'URI absolu à partir de l'URI de base et de l'URI relatif.</summary>
      <returns>
        <see cref="T:System.Uri" /> représentant l'URI absolu ou null si l'URI relatif ne peut pas être résolu.</returns>
      <param name="baseUri">URI de base utilisé pour résoudre l'URI relatif </param>
      <param name="relativeUri">URI à résoudre.L'URI peut être absolu ou relatif.S'il est absolu, cette valeur remplace effectivement la valeur de <paramref name="baseUri" />.S'il est relatif, il se combine à <paramref name="baseUri" /> pour produire un URI absolu.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="relativeUri" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
      <summary>Cette méthode ajoute la possibilité pour le programme de résolution de renvoyer d'autres types que simplement <see cref="T:System.IO.Stream" />.</summary>
      <returns>La valeur est true si le paramètre est un <see cref="T:System.IO.Stream" />, sinon false.</returns>
      <param name="absoluteUri">URI.</param>
      <param name="type">Type à renvoyer.</param>
    </member>
    <member name="T:System.Xml.XmlSpace">
      <summary>Spécifie la portée xml:space actuelle.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Default">
      <summary>La portée xml:space est default.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.None">
      <summary>Pas de portée xml:space.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Preserve">
      <summary>La portée xml:space est preserve.</summary>
    </member>
    <member name="T:System.Xml.XmlTokenizedType">
      <summary>Représente le type XML de la chaîne.Cela permet ainsi de lire la chaîne selon un type XML particulier, par exemple un type de section CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.CDATA">
      <summary>Type CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITIES">
      <summary>Type ENTITIES.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITY">
      <summary>Type ENTITY.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENUMERATION">
      <summary>Type ENUMERATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ID">
      <summary>Type ID.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREF">
      <summary>Type IDREF.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREFS">
      <summary>Type IDREFS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NCName">
      <summary>Type NCName.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKEN">
      <summary>Type NMTOKEN.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKENS">
      <summary>Type NMTOKENS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.None">
      <summary>Pas de type.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NOTATION">
      <summary>Type NOTATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.QName">
      <summary>Type QName.</summary>
    </member>
    <member name="T:System.Xml.XmlWriter">
      <summary>Représente un writer fournissant un moyen rapide, sans mémoire cache, en avant uniquement de générer des flux de données ou des fichiers contenant des données XML.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.Close">
      <summary>En cas de substitution dans une classe dérivée, ferme ce flux et le flux sous-jacent.</summary>
      <exception cref="T:System.InvalidOperationException">Un appel est effectué pour écrire un complément de code en sortie après l’appel de Close ou lorsque le résultat de cet appel est un document XML non valide. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du flux spécifié.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Flux dans lequel vous voulez écrire.<see cref="T:System.Xml.XmlWriter" /> écrit la syntaxe du texte XML 1.0 et l'ajoute au flux spécifié.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du flux et de l'objet <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">Flux dans lequel vous voulez écrire.Le <see cref="T:System.Xml.XmlWriter" /> écrit la syntaxe du texte XML 1.0 et l'ajoute au flux spécifié.</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlWriter" />.S'il est null, un <see cref="T:System.Xml.XmlWriterSettings" /> avec des paramètres par défaut est utilisé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">
        <see cref="T:System.IO.TextWriter" /> dans lequel vous voulez écrire.<see cref="T:System.Xml.XmlWriter" /> écrit la syntaxe du texte XML 1.0 et l'ajoute au <see cref="T:System.IO.TextWriter" /> spécifié.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide des objets <see cref="T:System.IO.TextWriter" /> et <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">
        <see cref="T:System.IO.TextWriter" /> dans lequel vous voulez écrire.<see cref="T:System.Xml.XmlWriter" /> écrit la syntaxe du texte XML 1.0 et l'ajoute au <see cref="T:System.IO.TextWriter" /> spécifié.</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlWriter" />.S'il est null, un <see cref="T:System.Xml.XmlWriterSettings" /> avec des paramètres par défaut est utilisé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide du <see cref="T:System.Text.StringBuilder" /> spécifié.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">
        <see cref="T:System.Text.StringBuilder" /> dans lequel écrire.Le contenu écrit par le <see cref="T:System.Xml.XmlWriter" /> est ajouté au <see cref="T:System.Text.StringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="builder" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide des objets <see cref="T:System.Text.StringBuilder" /> et <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" />.</returns>
      <param name="output">
        <see cref="T:System.Text.StringBuilder" /> dans lequel écrire.Le contenu écrit par le <see cref="T:System.Xml.XmlWriter" /> est ajouté au <see cref="T:System.Text.StringBuilder" />.</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlWriter" />.S'il est null, un <see cref="T:System.Xml.XmlWriterSettings" /> avec des paramètres par défaut est utilisé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="builder" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide de l'objet <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" /> encapsulé autour de l'objet <see cref="T:System.Xml.XmlWriter" /> spécifié.</returns>
      <param name="output">Objet <see cref="T:System.Xml.XmlWriter" /> à utiliser comme writer sous-jacent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
      <summary>Crée une instance de <see cref="T:System.Xml.XmlWriter" /> à l'aide des objets <see cref="T:System.Xml.XmlWriter" /> et <see cref="T:System.Xml.XmlWriterSettings" /> spécifiés.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriter" /> encapsulé autour de l'objet <see cref="T:System.Xml.XmlWriter" /> spécifié.</returns>
      <param name="output">Objet <see cref="T:System.Xml.XmlWriter" /> à utiliser comme writer sous-jacent.</param>
      <param name="settings">Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de configurer la nouvelle instance de <see cref="T:System.Xml.XmlWriter" />.S'il est null, un <see cref="T:System.Xml.XmlWriterSettings" /> avec des paramètres par défaut est utilisé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose">
      <summary>Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par le <see cref="T:System.Xml.XmlWriter" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">La valeur true pour libérer les ressources gérées et non gérées, false pour libérer uniquement les ressources non gérées.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.Flush">
      <summary>En cas de substitution dans une classe dérivée, vide le contenu de la mémoire tampon dans les flux sous-jacents, puis vide le flux sous-jacent.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.FlushAsync">
      <summary>Vide de manière asynchrone le contenu de la mémoire tampon dans les flux sous-jacents, puis vide le flux sous-jacent.</summary>
      <returns>Tâche représentant l'opération Flush asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
      <summary>En cas de substitution dans une classe dérivée, renvoie le préfixe le plus proche défini dans la portée espace de noms en cours pour l'URI de l'espace de noms.</summary>
      <returns>Le préfixe correspondant ou null, s'il n'existe aucun URI d'espace de noms correspondant dans la portée actuelle.</returns>
      <param name="ns">URI de l'espace de noms dont vous recherchez le préfixe. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ns" /> est null ou String.Empty. </exception>
    </member>
    <member name="P:System.Xml.XmlWriter.Settings">
      <summary>Obtient l'objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de créer cette instance de <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriterSettings" /> permettant de créer cette instance de writer.Si ce writer n'a pas été créé à l'aide de la méthode <see cref="Overload:System.Xml.XmlWriter.Create" />, cette propriété renvoie la valeur null.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
      <summary>En cas de substitution dans une classe dérivée, écrit tous les attributs trouvés à l'emplacement actuel dans <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">XmlReader à partir duquel les attributs doivent être copiés. </param>
      <param name="defattr">La valeur est true pour copier les attributs par défaut à partir du XmlReader, sinon false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> est null. </exception>
      <exception cref="T:System.Xml.XmlException">Le lecteur n’est pas placé sur un nœud element, attribute ou XmlDeclaration. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>Écrit de manière asynchrone tous les attributs se trouvant à l'emplacement actuel dans le <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Tâche représentant l'opération WriteAttributes asynchrone.</returns>
      <param name="reader">XmlReader à partir duquel les attributs doivent être copiés.</param>
      <param name="defattr">La valeur est true pour copier les attributs par défaut à partir du XmlReader, sinon false.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit l'attribut avec le nom local et la valeur spécifiés.</summary>
      <param name="localName">Nom local de l'attribut. </param>
      <param name="value">Valeur de l'attribut. </param>
      <exception cref="T:System.InvalidOperationException">L’état du writer n’est pas WriteState.Element ou le writer est fermé. </exception>
      <exception cref="T:System.ArgumentException">La valeur d’attribut xml:space ou xml:lang n’est pas valide. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un attribut avec le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="localName">Nom local de l'attribut. </param>
      <param name="ns">URI de l'espace de noms à associer à l'attribut. </param>
      <param name="value">Valeur de l'attribut. </param>
      <exception cref="T:System.InvalidOperationException">L’état du writer n’est pas WriteState.Element ou le writer est fermé. </exception>
      <exception cref="T:System.ArgumentException">La valeur d’attribut xml:space ou xml:lang n’est pas valide. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit l'attribut avec le préfixe, le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="prefix">Préfixe de l'espace de noms de cet attribut. </param>
      <param name="localName">Nom local de l'attribut. </param>
      <param name="ns">URI de l'espace de noms de l'attribut. </param>
      <param name="value">Valeur de l'attribut. </param>
      <exception cref="T:System.InvalidOperationException">L’état du writer n’est pas WriteState.Element ou le writer est fermé. </exception>
      <exception cref="T:System.ArgumentException">La valeur d’attribut xml:space ou xml:lang n’est pas valide. </exception>
      <exception cref="T:System.Xml.XmlException">Le <paramref name="localName" /> ou <paramref name="ns" /> est null. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Écrit de manière asynchrone l'attribut avec le préfixe, le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <returns>Tâche représentant l'opération WriteAttributeString asynchrone.</returns>
      <param name="prefix">Préfixe de l'espace de noms de cet attribut.</param>
      <param name="localName">Nom local de l'attribut.</param>
      <param name="ns">URI de l'espace de noms de l'attribut.</param>
      <param name="value">Valeur de l'attribut.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, code les octets binaires spécifiés au format Base64 et écrit le texte obtenu.</summary>
      <param name="buffer">Tableau d'octets à encoder. </param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début des octets à écrire. </param>
      <param name="count">Nombre d'octets à écrire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> est null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro. – ou –La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Encode de manière asynchrone les octets binaires spécifiés au format Base64 et écrit le texte résultant.</summary>
      <returns>Tâche représentant l'opération WriteBase64 asynchrone.</returns>
      <param name="buffer">Tableau d'octets à encoder.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</param>
      <param name="count">Nombre d'octets à écrire.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, code les octets binaires spécifiés au format BinHex et écrit le texte obtenu.</summary>
      <param name="buffer">Tableau d'octets à encoder. </param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début des octets à écrire. </param>
      <param name="count">Nombre d'octets à écrire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> est null. </exception>
      <exception cref="T:System.InvalidOperationException">Le Writer est fermé ou a l'état d'erreur.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro. – ou –La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Encode de manière asynchrone les octets binaires spécifiés au format BinHex et écrit le texte résultant.</summary>
      <returns>Tâche représentant l'opération WriteBinHex asynchrone.</returns>
      <param name="buffer">Tableau d'octets à encoder.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début des octets à écrire.</param>
      <param name="count">Nombre d'octets à écrire.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCData(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un bloc &lt;![CDATA[...]]&gt; contenant le texte spécifié.</summary>
      <param name="text">Texte à placer dans le bloc CDATA. </param>
      <exception cref="T:System.ArgumentException">Le texte est à l’origine d’un document XML incorrect. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
      <summary>Écrit de manière asynchrone un bloc &lt;![CDATA[...]]&gt; contenant le texte spécifié.</summary>
      <returns>Tâche représentant l'opération WriteCData asynchrone.</returns>
      <param name="text">Texte à placer dans le bloc CDATA.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
      <summary>En cas de substitution dans une classe dérivée, force la génération d'une entité de caractère pour la valeur du caractère Unicode spécifiée.</summary>
      <param name="ch">Caractère Unicode pour lequel une entité de caractère doit être générée. </param>
      <exception cref="T:System.ArgumentException">Le caractère se trouve dans la plage de caractères de paire de substitution, 0xd800 - 0xdfff. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
      <summary>Force de manière asynchrone la génération d'une entité de caractère pour la valeur du caractère Unicode spécifiée.</summary>
      <returns>Tâche représentant l'opération WriteCharEntity asynchrone.</returns>
      <param name="ch">Caractère Unicode pour lequel une entité de caractère doit être générée.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, écrit du texte mémoire tampon par mémoire tampon.</summary>
      <param name="buffer">Tableau de caractères contenant le texte à écrire. </param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début du texte à écrire. </param>
      <param name="count">Nombre de caractères à écrire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> est null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro. – ou –La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" /> ; par conséquent, l’appel entraîne une séparation des caractères de paire de substitution ou l’écriture d’une paire de substitution non valide.</exception>
      <exception cref="T:System.ArgumentException">La valeur de paramètre <paramref name="buffer" /> n’est pas valide.</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> est en dehors des limites du <paramref name="buffer" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Écrit du texte de manière asynchrone, mémoire tampon par mémoire tampon.</summary>
      <returns>Tâche représentant l'opération WriteChars asynchrone.</returns>
      <param name="buffer">Tableau de caractères contenant le texte à écrire.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</param>
      <param name="count">Nombre de caractères à écrire.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteComment(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un commentaire &lt;!--...--&gt; contenant le texte spécifié.</summary>
      <param name="text">Texte à placer dans le commentaire. </param>
      <exception cref="T:System.ArgumentException">Le texte est à l’origine d’un document XML incorrect. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
      <summary>Écrit de manière asynchrone un commentaire &lt;!--...--&gt; contenant le texte spécifié.</summary>
      <returns>Tâche représentant l'opération WriteComment asynchrone.</returns>
      <param name="text">Texte à placer dans le commentaire.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit la déclaration DOCTYPE avec le nom et les attributs facultatifs spécifiés.</summary>
      <param name="name">Nom de DOCTYPE.Ne doit pas être vide.</param>
      <param name="pubid">Si la valeur est non null, elle écrit également PUBLIC « pubid » « sysid », <paramref name="pubid" /> et <paramref name="sysid" /> étant remplacés par la valeur des arguments donnés. </param>
      <param name="sysid">Si <paramref name="pubid" /> est null et que <paramref name="sysid" /> est non null, elle écrit SYSTEM « sysid », <paramref name="sysid" /> étant remplacé par la valeur de cet argument. </param>
      <param name="subset">Si la valeur est non null, elle écrit [subset] où subset est remplacé par la valeur de cet argument. </param>
      <exception cref="T:System.InvalidOperationException">Cette méthode a été appelée en dehors du prologue (après l’élément racine). </exception>
      <exception cref="T:System.ArgumentException">La valeur de <paramref name="name" /> produit un contenu XML non valide. </exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> n’est pas valide. </exception>
      <exception cref="T:System.NullReferenceException">Le paramètre <paramref name=" name" />, <paramref name=" pubid" />, <paramref name=" sysid" /> ou <paramref name="subset" /> est null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
      <summary>Écrit de manière asynchrone la déclaration DOCTYPE avec le nom et les attributs facultatifs spécifiés.</summary>
      <returns>Tâche représentant l'opération WriteDocType asynchrone.</returns>
      <param name="name">Nom de DOCTYPE.Ne doit pas être vide.</param>
      <param name="pubid">Si la valeur est non null, elle écrit également PUBLIC « pubid » « sysid », <paramref name="pubid" /> et <paramref name="sysid" /> étant remplacés par la valeur des arguments donnés.</param>
      <param name="sysid">Si <paramref name="pubid" /> est null et que <paramref name="sysid" /> est non null, elle écrit SYSTEM « sysid », <paramref name="sysid" /> étant remplacé par la valeur de cet argument.</param>
      <param name="subset">Si la valeur est non null, elle écrit [subset], où subset est remplacé par la valeur de cet argument.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un élément avec le nom local et la valeur spécifiés.</summary>
      <param name="localName">Nom local de l'élément. </param>
      <param name="value">Valeur de l'élément. </param>
      <exception cref="T:System.ArgumentException">La valeur <paramref name="localName" /> est une chaîne vide ou est null.– ou –Les valeurs du paramètre ne sont pas valides.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit un élément avec le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="localName">Nom local de l'élément. </param>
      <param name="ns">URI de l'espace de noms à associer à l'élément. </param>
      <param name="value">Valeur de l'élément. </param>
      <exception cref="T:System.ArgumentException">La valeur <paramref name="localName" /> est une chaîne vide ou est null.– ou –Les valeurs du paramètre ne sont pas valides. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
      <summary>Écrit un élément avec le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <param name="prefix">Préfixe de l'élément.</param>
      <param name="localName">Nom local de l'élément.</param>
      <param name="ns">URI de l'espace de noms de l'élément.</param>
      <param name="value">Valeur de l'élément.</param>
      <exception cref="T:System.ArgumentException">La valeur <paramref name="localName" /> est une chaîne vide ou est null.– ou –Les valeurs du paramètre ne sont pas valides.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Écrit de manière asynchrone un élément avec le préfixe, le nom local, l'URI de l'espace de noms et la valeur spécifiés.</summary>
      <returns>Tâche représentant l'opération WriteElementString asynchrone.</returns>
      <param name="prefix">Préfixe de l'élément.</param>
      <param name="localName">Nom local de l'élément.</param>
      <param name="ns">URI de l'espace de noms de l'élément.</param>
      <param name="value">Valeur de l'élément.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttribute">
      <summary>En cas de substitution dans une classe dérivée, ferme le précédent appel de <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
      <summary>Ferme de manière asynchrone l'appel de <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> précédent.</summary>
      <returns>Tâche représentant l'opération WriteEndAttribute asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocument">
      <summary>En cas de substitution dans une classe dérivée, ferme les éléments ou attributs ouverts, et replace le writer à l'état Start.</summary>
      <exception cref="T:System.ArgumentException">Le document XML n’est pas valide. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
      <summary>Ferme de manière asynchrone les éléments ou attributs ouverts, et replace le writer à l'état Start.</summary>
      <returns>Tâche représentant l'opération WriteEndDocument asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElement">
      <summary>En cas de substitution dans une classe dérivée, ferme un élément et dépile la portée espace de noms correspondante.</summary>
      <exception cref="T:System.InvalidOperationException">Il en résulte un document XML non valide. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElementAsync">
      <summary>Ferme un élément de manière asynchrone et dépile la portée de l'espace de noms correspondante.</summary>
      <returns>Tâche représentant l'opération WriteEndElement asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit une référence d'entité comme suit : &amp;name;.</summary>
      <param name="name">Nom de la référence d'entité. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> est null ou String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
      <summary>Écrit de manière asynchrone une référence d'entité sous la forme : &amp;name;.</summary>
      <returns>Tâche représentant l'opération WriteEntityRef asynchrone.</returns>
      <param name="name">Nom de la référence d'entité.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElement">
      <summary>En cas de substitution dans une classe dérivée, ferme un élément et dépile la portée espace de noms correspondante.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
      <summary>Ferme un élément de manière asynchrone et dépile la portée de l'espace de noms correspondante.</summary>
      <returns>Tâche représentant l'opération WriteFullEndElement asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteName(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit le nom spécifié, en vérifiant qu'il s'agit d'un nom valide conformément à la recommandation du W3C intitulée Extensible Markup Language (XML) 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Nom à écrire. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> n’est pas un nom XML valide ; ou <paramref name="name" /> est soit null, soit String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
      <summary>Écrit le nom spécifié de manière asynchrone, en vérifiant qu'il s'agit d'un nom valide conformément à la recommandation du W3C intitulée Extensible Markup Language (XML) 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <returns>Tâche représentant l'opération WriteName asynchrone.</returns>
      <param name="name">Nom à écrire.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit le nom spécifié, en vérifiant qu'il s'agit d'un NmToken valide conformément à la recommandation du W3C intitulée Extensible Markup Language (XML) 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Nom à écrire. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> n’est pas un NmToken valide ; ou <paramref name="name" /> est soit null, soit String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
      <summary>Écrit le nom spécifié de manière asynchrone, en vérifiant qu'il s'agit d'un NmToken valide conformément à la recommandation du W3C intitulée Extensible Markup Language (XML) 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <returns>Tâche représentant l'opération WriteNmToken asynchrone.</returns>
      <param name="name">Nom à écrire.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>En cas de substitution dans une classe dérivée, copie tout le contenu du lecteur vers le writer, puis déplace le lecteur vers le début du frère suivant.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> à partir duquel lire. </param>
      <param name="defattr">La valeur est true pour copier les attributs par défaut à partir du XmlReader, sinon false. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="reader" /> contient des caractères non valides. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> est null. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>Copie de manière asynchrone tout le contenu du lecteur vers le writer, puis déplace le lecteur vers le début du frère suivant.</summary>
      <returns>Tâche représentant l'opération WriteNode asynchrone.</returns>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> à partir duquel lire.</param>
      <param name="defattr">La valeur est true pour copier les attributs par défaut à partir du XmlReader, sinon false.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit une instruction de traitement avec un espace entre le nom et le texte, comme suit : &lt;?nom texte?&gt;.</summary>
      <param name="name">Nom de l'instruction de traitement. </param>
      <param name="text">Texte à inclure dans l'instruction de traitement. </param>
      <exception cref="T:System.ArgumentException">Le texte est à l'origine d'un document XML incorrect.<paramref name="name" /> est null ou String.Empty.Cette méthode permet de créer une déclaration XML après l’appel de <see cref="M:System.Xml.XmlWriter.WriteStartDocument" />. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
      <summary>Écrit de manière asynchrone une instruction de traitement avec un espace entre le nom et le texte, comme suit : &lt;?nom texte?&gt;.</summary>
      <returns>Tâche représentant l'opération WriteProcessingInstruction asynchrone.</returns>
      <param name="name">Nom de l'instruction de traitement.</param>
      <param name="text">Texte à inclure dans l'instruction de traitement.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit le nom qualifié de l'espace de noms.Cette méthode recherche le préfixe situé dans la portée de l'espace de noms spécifié.</summary>
      <param name="localName">Nom local à écrire. </param>
      <param name="ns">URI d'espace de noms de ce nom. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> est String.Empty ou n’est pas un nom valide. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="localName" /> ou <paramref name="ns" /> est null.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
      <summary>Écrit de manière asynchrone le nom qualifié de l'espace de noms.Cette méthode recherche le préfixe situé dans la portée de l'espace de noms spécifié.</summary>
      <returns>Tâche représentant l'opération WriteQualifiedName asynchrone.</returns>
      <param name="localName">Nom local à écrire.</param>
      <param name="ns">URI d'espace de noms de ce nom.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>En cas de substitution dans une classe dérivée, écrit manuellement un balisage brut à partir d'une mémoire tampon de caractères.</summary>
      <param name="buffer">Tableau de caractères contenant le texte à écrire. </param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début du texte à écrire. </param>
      <param name="count">Nombre de caractères à écrire. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> est null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> est inférieur à zéro. – ou –La longueur de la mémoire tampon moins <paramref name="index" /> est inférieure à <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit manuellement un balisage brut à partir d'une chaîne.</summary>
      <param name="data">Chaîne contenant le texte à écrire. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> est null ou String.Empty. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Écrit manuellement de manière asynchrone un balisage brut à partir d'une mémoire tampon de caractères.</summary>
      <returns>Tâche représentant l'opération WriteRaw asynchrone.</returns>
      <param name="buffer">Tableau de caractères contenant le texte à écrire.</param>
      <param name="index">Emplacement dans la mémoire tampon indiquant le début du texte à écrire.</param>
      <param name="count">Nombre de caractères à écrire.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
      <summary>Écrit manuellement de manière asynchrone un balisage brut à partir d'une chaîne.</summary>
      <returns>Tâche représentant l'opération WriteRaw asynchrone.</returns>
      <param name="data">Chaîne contenant le texte à écrire.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
      <summary>Écrit le début d'un attribut avec le nom local spécifié.</summary>
      <param name="localName">Nom local de l'attribut.</param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
      <summary>Écrit le début d'un attribut avec le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="localName">Nom local de l'attribut. </param>
      <param name="ns">URI de l'espace de noms de l'attribut. </param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit le début d'un attribut avec le préfixe, le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <param name="prefix">Préfixe de l'espace de noms de cet attribut. </param>
      <param name="localName">Nom local de l'attribut. </param>
      <param name="ns">URI d'espace de noms de cet attribut. </param>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
      <summary>Écrit de manière asynchrone le début d'un attribut avec le préfixe, le nom local et l'URI de l'espace de noms spécifiés.</summary>
      <returns>Tâche représentant l'opération WriteStartAttribute asynchrone.</returns>
      <param name="prefix">Préfixe de l'espace de noms de cet attribut.</param>
      <param name="localName">Nom local de l'attribut.</param>
      <param name="ns">URI d'espace de noms de cet attribut.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument">
      <summary>En cas de substitution dans une classe dérivée, écrit la déclaration XML avec la version « 1.0 ».</summary>
      <exception cref="T:System.InvalidOperationException">Il ne s’agit pas de la première méthode d’écriture appelée à la suite du constructeur. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
      <summary>En cas de substitution dans une classe dérivée, écrit la déclaration XML avec la version « 1.0 » et l'attribut autonome.</summary>
      <param name="standalone">Si la valeur est true, elle écrit « standalone=yes » ; si la valeur est false, elle écrit « standalone=no ». </param>
      <exception cref="T:System.InvalidOperationException">Il ne s’agit pas de la première méthode d’écriture appelée à la suite du constructeur. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
      <summary>Écrit de manière asynchrone la déclaration XML avec la version « 1.0 ».</summary>
      <returns>Tâche représentant l'opération WriteStartDocument asynchrone.</returns>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
      <summary>Écrit de manière asynchrone la déclaration XML avec la version « 1.0 » et l'attribut autonome.</summary>
      <returns>Tâche représentant l'opération WriteStartDocument asynchrone.</returns>
      <param name="standalone">Si la valeur est true, elle écrit « standalone=yes » ; si la valeur est false, elle écrit « standalone=no ».</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit une balise de début avec le nom local spécifié.</summary>
      <param name="localName">Nom local de l'élément. </param>
      <exception cref="T:System.InvalidOperationException">Le writer est fermé. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit la balise de début spécifiée et l'associe à l'espace de noms indiqué.</summary>
      <param name="localName">Nom local de l'élément. </param>
      <param name="ns">URI de l'espace de noms à associer à l'élément.Si cet espace de noms est déjà dans la portée et qu'il possède un préfixe associé, le writer écrit automatiquement ce préfixe également.</param>
      <exception cref="T:System.InvalidOperationException">Le writer est fermé. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit la balise de début spécifiée, puis l'associe à l'espace de noms et au préfixe indiqués.</summary>
      <param name="prefix">Préfixe d'espace de noms de cet élément. </param>
      <param name="localName">Nom local de l'élément. </param>
      <param name="ns">URI de l'espace de noms à associer à l'élément. </param>
      <exception cref="T:System.InvalidOperationException">Le writer est fermé. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
      <summary>Écrit de manière asynchrone la balise de début indiquée et l'associe à l'espace de noms et au préfixe spécifiés.</summary>
      <returns>Tâche représentant l'opération WriteStartElement asynchrone.</returns>
      <param name="prefix">Préfixe d'espace de noms de cet élément.</param>
      <param name="localName">Nom local de l'élément.</param>
      <param name="ns">URI de l'espace de noms à associer à l'élément.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.WriteState">
      <summary>En cas de substitution dans une classe dérivée, obtient l'état du writer.</summary>
      <returns>Une des valeurs <see cref="T:System.Xml.WriteState" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteString(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit le texte spécifié.</summary>
      <param name="text">Texte à écrire. </param>
      <exception cref="T:System.ArgumentException">La chaîne de texte contient une paire de substitution non valide. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
      <summary>Écrit de manière asynchrone le contenu de texte donné.</summary>
      <returns>Tâche représentant l'opération WriteString asynchrone.</returns>
      <param name="text">Texte à écrire.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>En cas de substitution dans une classe dérivée, génère et écrit l'entité de caractère de substitution correspondant à la paire de caractères de substitution.</summary>
      <param name="lowChar">Substitut faible.Il doit s'agir d'une valeur comprise entre 0xDC00 et 0xDFFF.</param>
      <param name="highChar">Substitut étendu.Il doit s'agir d'une valeur comprise entre 0xD800 et 0xDBFF.</param>
      <exception cref="T:System.ArgumentException">Une paire de caractères de substitution non valide est passée. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
      <summary>Génère et écrit de manière asynchrone l'entité de caractère de substitution correspondant à la paire de caractères de substitution.</summary>
      <returns>Tâche représentant l'opération WriteSurrogateCharEntity asynchrone.</returns>
      <param name="lowChar">Substitut faible.Il doit s'agir d'une valeur comprise entre 0xDC00 et 0xDFFF.</param>
      <param name="highChar">Substitut étendu.Il doit s'agir d'une valeur comprise entre 0xD800 et 0xDBFF.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
      <summary>Écrit une valeur <see cref="T:System.Boolean" />.</summary>
      <param name="value">Valeur <see cref="T:System.Boolean" /> à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
      <summary>Écrit une valeur <see cref="T:System.DateTime" />.</summary>
      <param name="value">Valeur <see cref="T:System.DateTime" /> à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
      <summary>Écrit une valeur <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="value">Valeur <see cref="T:System.DateTimeOffset" /> à écrire.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
      <summary>Écrit une valeur <see cref="T:System.Decimal" />.</summary>
      <param name="value">Valeur <see cref="T:System.Decimal" /> à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Double)">
      <summary>Écrit une valeur <see cref="T:System.Double" />.</summary>
      <param name="value">Valeur <see cref="T:System.Double" /> à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
      <summary>Écrit une valeur <see cref="T:System.Int32" />.</summary>
      <param name="value">Valeur <see cref="T:System.Int32" /> à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
      <summary>Écrit une valeur <see cref="T:System.Int64" />.</summary>
      <param name="value">Valeur <see cref="T:System.Int64" /> à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Object)">
      <summary>Écrit la valeur de l'objet.</summary>
      <param name="value">Valeur de l'objet à écrire. Remarque   Avec le .NET Framework version 3.5, cette méthode accepte <see cref="T:System.DateTimeOffset" /> en tant que paramètre.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> est null.</exception>
      <exception cref="T:System.InvalidOperationException">Le Writer est fermé ou a l'état d'erreur.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Single)">
      <summary>Écrit un nombre à virgule flottante simple précision.</summary>
      <param name="value">Nombre à virgule flottante simple précision à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.String)">
      <summary>Écrit une valeur <see cref="T:System.String" />.</summary>
      <param name="value">Valeur <see cref="T:System.String" /> à écrire.</param>
      <exception cref="T:System.ArgumentException">Une valeur non valide a été spécifiée.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
      <summary>En cas de substitution dans une classe dérivée, écrit l'espace blanc spécifié.</summary>
      <param name="ws">Chaîne d'espaces blancs. </param>
      <exception cref="T:System.ArgumentException">La chaîne contient des caractères qui ne sont pas des espaces blancs. </exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
      <summary>Écrit de manière asynchrone l'espace blanc spécifié.</summary>
      <returns>Tâche représentant l'opération WriteWhitespace asynchrone.</returns>
      <param name="ws">Chaîne d'espaces blancs.</param>
      <exception cref="T:System.InvalidOperationException">Une méthode <see cref="T:System.Xml.XmlWriter" /> a été appelée avant la fin d’une opération asynchrone précédente.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Une opération asynchrone est déjà en cours ».</exception>
      <exception cref="T:System.InvalidOperationException">Une méthode asynchrone <see cref="T:System.Xml.XmlWriter" /> a été appelée sans définir l’indicateur <see cref="P:System.Xml.XmlWriterSettings.Async" /> sur true.Dans ce cas, <see cref="T:System.InvalidOperationException" /> est levée avec le message « Définissez XmlWriterSettings.Async sur true si vous souhaitez utiliser les méthodes Async.”</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlLang">
      <summary>En cas de substitution dans une classe dérivée, obtient la portée xml:lang actuelle.</summary>
      <returns>Portée xml:lang actuelle.</returns>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlSpace">
      <summary>En cas de substitution dans une classe dérivée, obtient un <see cref="T:System.Xml.XmlSpace" /> représentant la portée xml:space actuelle.</summary>
      <returns>XmlSpace représentant la portée xml:space actuelle.Valeur Signification AucunValeur par défaut si aucune portée xml:space n'existe. DefaultLa portée actuelle est xml:space = « default ». PreserveLa portée actuelle est xml:space = « preserve ». </returns>
    </member>
    <member name="T:System.Xml.XmlWriterSettings">
      <summary>Spécifie un ensemble de fonctionnalités à prendre en charge sur l'objet <see cref="T:System.Xml.XmlWriter" /> créé par la méthode <see cref="Overload:System.Xml.XmlWriter.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Async">
      <summary>Obtient ou définit une valeur indiquant si les méthodes <see cref="T:System.Xml.XmlWriter" /> asynchrones peuvent être utilisées sur une instance <see cref="T:System.Xml.XmlWriter" /> particulière.</summary>
      <returns>La valeur est true si les méthodes asynchrones peuvent être utilisées, sinon false.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CheckCharacters">
      <summary>Obtient ou définit une valeur indiquant si la vérification des caractères doit être effectuée.</summary>
      <returns>La valeur est true pour effectuer la vérification des caractères, sinon false.La valeur par défaut est true.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Clone">
      <summary>Crée une copie de l'instance de <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlWriterSettings" /> cloné.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CloseOutput">
      <summary>Obtient ou définit une valeur indiquant si <see cref="T:System.Xml.XmlWriter" /> doit également fermer le flux ou le <see cref="T:System.IO.TextWriter" /> sous-jacent lorsque la méthode <see cref="M:System.Xml.XmlWriter.Close" /> est appelée.</summary>
      <returns>La valeur est true pour également fermer le flux ou le <see cref="T:System.IO.TextWriter" /> sous-jacent, sinon false.La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.ConformanceLevel">
      <summary>Obtient ou définit le niveau de conformité que le <see cref="T:System.Xml.XmlWriter" /> respecte.</summary>
      <returns>Une des valeurs <see cref="T:System.Xml.ConformanceLevel" />.La valeur par défaut est ConformanceLevel.Document.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Encoding">
      <summary>Obtient ou définit l'encodage de texte à utiliser.</summary>
      <returns>Encodage de texte à utiliser.La valeur par défaut est Encoding.UTF8.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Indent">
      <summary>Obtient ou définit une valeur indiquant si les éléments doivent être mis en retrait.</summary>
      <returns>La valeur est true pour écrire des éléments individuels sur de nouvelles lignes et les mettre en retrait, sinon false.La valeur par défaut est false.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.IndentChars">
      <summary>Obtient ou définit la chaîne de caractères à utiliser lors de la mise en retrait.Ce paramètre est utilisé lorsque la propriété <see cref="P:System.Xml.XmlWriterSettings.Indent" /> a la valeur true.</summary>
      <returns>Chaîne de caractères à utiliser lors de la mise en retrait.Elle peut avoir n'importe quelle valeur de chaîne.Toutefois, pour garantir la validité du XML, vous devez spécifier uniquement des caractères d'espace blanc valides, tels que les espaces, les tabulations, les retours chariot ou les sauts de ligne.La valeur par défaut est deux espaces.</returns>
      <exception cref="T:System.ArgumentNullException">La valeur assignée à <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> est null. </exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NamespaceHandling">
      <summary>Obtient ou définit l'énumération <see cref="T:System.Xml.NamespaceHandling" /> utilisée pour spécifier s'il faut supprimer les déclarations d'espace de noms en double dans le <see cref="T:System.Xml.XmlWriter" />.Pour l'espace de noms en double à supprimer, le préfixe et l'espace de noms doivent correspondre.</summary>
      <returns>Énumération <see cref="T:System.Xml.NamespaceHandling" /> utilisée pour spécifier s'il faut supprimer les déclarations d'espace de noms en double dans le <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineChars">
      <summary>Obtient ou définit la chaîne de caractères à utiliser pour les sauts de ligne. </summary>
      <returns>Chaîne de caractères à utiliser pour les sauts de ligne.Elle peut avoir n'importe quelle valeur de chaîne.Toutefois, pour garantir la validité du XML, vous devez spécifier uniquement des caractères d'espace blanc valides, tels que les espaces, les tabulations, les retours chariot ou les sauts de ligne.La valeur par défaut est \r\n (retour chariot, nouvelle ligne).</returns>
      <exception cref="T:System.ArgumentNullException">La valeur assignée à <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> est null. </exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineHandling">
      <summary>Obtient ou définit une valeur indiquant s'il faut normaliser des sauts de ligne dans la sortie.</summary>
      <returns>Une des valeurs <see cref="T:System.Xml.NewLineHandling" />.La valeur par défaut est <see cref="F:System.Xml.NewLineHandling.Replace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineOnAttributes">
      <summary>Obtient ou définit une valeur indiquant s'il faut écrire des attributs sur une nouvelle ligne.</summary>
      <returns>La valeur est true pour écrire des attributs sur des lignes individuellement, sinon false.La valeur par défaut est false.Note:Ce paramètre n'a aucun effet si la propriété <see cref="P:System.Xml.XmlWriterSettings.Indent" /> a la valeur false.Lorsque <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> a la valeur true, chaque attribut est ajouté avec une nouvelle ligne et un niveau supplémentaire de mise en retrait.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration">
      <summary>Obtient ou définit une valeur indiquant si une déclaration XML doit être écrite.</summary>
      <returns>La valeur est true pour omettre la déclaration XML, sinon false.La valeur par défaut est false, une déclaration XML est écrite.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Reset">
      <summary>Réinitialise les membres de la classe de paramètres à leurs valeurs par défaut.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose">
      <summary>Obtient ou définit la valeur indiquant si le <see cref="T:System.Xml.XmlWriter" /> ajoute des balises de fermeture à toutes les balises d'élément non fermées lors de l'appel de la méthode <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
      <returns>La valeur est true si toutes les balises d'élément doivent être fermées, sinon false.La valeur par défaut est true.</returns>
    </member>
    <member name="T:System.Xml.XmlXapResolver">
      <summary>Le type <see cref="T:System.Xml.XmlXapResolver" /> est utilisé pour résoudre les ressources contenues dans le package XAP de l'application Windows Phone. </summary>
    </member>
    <member name="M:System.Xml.XmlXapResolver.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.XmlXapResolver" />. </summary>
    </member>
    <member name="M:System.Xml.XmlXapResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Mappe un URI vers un objet contenant la ressource réelle.</summary>
      <returns>Objet System.IO.Stream. Si le flux est introuvable, une exception est levée.</returns>
      <param name="absoluteUri">URI renvoyé par <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /></param>
      <param name="role">La version actuelle du .NET Framework pour Windows Phone n'utilise pas ce paramètre lors de la résolution des URI. Ceci est fourni pour des extensibilités futures. Par exemple, ceci peut être mappé vers xlink:role et utilisé comme remarques propres à l'implémentation dans d'autres scénarios.</param>
      <param name="ofObjectToReturn">Type d'objet à renvoyer. La version actuelle ne renvoie que les objets System.IO.Stream. </param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchema">
      <summary>Cette classe est fournie pour la compatibilité d'interfaces. Elle n'est pas destinée à être utilisée à partir de votre code Windows Phone.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaForm">
      <summary>Indique si les attributs ou les éléments doivent être qualifiés à l'aide d'un préfixe d'espace de noms.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.None">
      <summary>Aucune forme d'élément et d'attribut n'est spécifiée dans le schéma.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Qualified">
      <summary>Les éléments et les attributs doivent être qualifiés à l'aide d'un préfixe d'espace de noms.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Unqualified">
      <summary>Les éléments et les attributs ne doivent pas obligatoirement être qualifiés à l'aide d'un préfixe d'espace de noms.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObject">
      <summary>Cette classe est fournie pour la compatibilité d'interfaces. Elle n'est pas destinée à être utilisée à partir de votre code Windows Phone.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObject.#ctor">
      <summary>Cette classe est fournie pour la compatibilité d'interfaces. Elle n'est pas destinée à être utilisée à partir de votre code Windows Phone.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSet">
      <summary>Cette classe est fournie pour la compatibilité d'interfaces. Elle n'est pas destinée à être utilisée à partir de votre code Windows Phone.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSeverityType">
      <summary>Représente la sévérité de l'événement de validation.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Error">
      <summary>Indique qu'une erreur de validation est survenue lors de la validation du document d'instance.Ceci s'applique aux schémas de définition de type de document (DTD) et XSD (XML Schema definition language).Les contraintes de validité World Wide Web Consortium (W3C) sont considérées comme des erreurs.Si aucun gestionnaire d'événements de validation n'a été créé, les erreurs lèvent une exception.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Warning">
      <summary>Indique qu'un événement de validation qui n'est pas une erreur s'est produit.En règle générale, un avertissement est émis lorsqu'il n'y a pas de schéma DTD ou XML permettant de valider un élément ou un attribut particulier.Contrairement aux erreurs, les avertissements ne lèvent pas une exception s'il n'existe pas de gestionnaire d'événements de validation.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlTypeCode">
      <summary>Représente les types de schéma en langage de définition de schéma XML (XSD) du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyAtomicType">
      <summary>Toute valeur atomique d'une union.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyUri">
      <summary>Type xs:anyURI de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Attribute">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Base64Binary">
      <summary>Type xs:base64Binary de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Boolean">
      <summary>Type xs:boolean de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Byte">
      <summary>Type xs:byte de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Comment">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Date">
      <summary>Type xs:date de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DateTime">
      <summary>Type xs:dateTime de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DayTimeDuration">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Decimal">
      <summary>Type xs:decimal de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Document">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Double">
      <summary>Type xs:double de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Duration">
      <summary>Type xs:Duration de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Element">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Entity">
      <summary>Type xs:ENTITY de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Float">
      <summary>Type xs:float de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GDay">
      <summary>Type xs:gDay de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonth">
      <summary>Type xs:gMonth de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonthDay">
      <summary>Type xs:gMonthDay de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYear">
      <summary>Type xs:gYear de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYearMonth">
      <summary>Type xs:gYearMonth de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.HexBinary">
      <summary>Type xs:hexBinary de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Id">
      <summary>Type xs:ID de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Idref">
      <summary>Type xs:IDREF de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Int">
      <summary>Type xs:int de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Integer">
      <summary>Type xs:integer de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Item">
      <summary>Élément tel qu'un nœud ou une valeur atomique.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Language">
      <summary>Type xs:language de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Long">
      <summary>Type xs:long de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Name">
      <summary>Type xs:Name de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Namespace">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NCName">
      <summary>Type xs:NCName de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NegativeInteger">
      <summary>Type xs:negativeInteger de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NmToken">
      <summary>Type xs:NMTOKEN de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Node">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.None">
      <summary>Aucune information relative au type.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonNegativeInteger">
      <summary>Type xs:nonNegativeInteger de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonPositiveInteger">
      <summary>Type xs:nonPositiveInteger de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NormalizedString">
      <summary>Type xs:normalizedString de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Notation">
      <summary>Type xs:NOTATION de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.PositiveInteger">
      <summary>Type xs:positiveInteger de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.ProcessingInstruction">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.QName">
      <summary>Type xs:QName de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Short">
      <summary>Type xs:short de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.String">
      <summary>Type xs:string de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Text">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Time">
      <summary>Type xs:time de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Token">
      <summary>Type xs:token de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedByte">
      <summary>Type xs:unsignedByte de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedInt">
      <summary>Type xs:unsignedInt de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedLong">
      <summary>Type xs:unsignedLong de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedShort">
      <summary>Type xs:unsignedShort de schéma XML du W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UntypedAtomic">
      <summary>Valeur atomique non typée.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.YearMonthDuration">
      <summary>Cette valeur prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
    </member>
    <member name="T:System.Xml.Serialization.IXmlSerializable">
      <summary>Fournit une mise en forme personnalisée pour la sérialisation et la désérialisation XML afin de contrôler la manière dont l'objet est sérialisé ou désérialisé par le <see cref="T:System.Xml.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
      <summary>Cette méthode est réservée et ne doit pas être utilisée.Lors de l'implémentation de l'interface <see cref="T:System.Xml.Serialization.IXmlSerializable" />, vous devez renvoyer une référence null (Nothing en Visual Basic) à partir de cette méthode.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> décrivant la représentation XML de l'objet généré par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml" /> et utilisé par la méthode <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
      <summary>Génère un objet à partir de sa représentation XML.</summary>
      <param name="reader">Flux <see cref="T:System.Xml.XmlReader" /> à partir duquel l'objet est désérialisé.</param>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
      <summary>Convertit un objet en sa représentation XML.</summary>
      <param name="writer">Flux <see cref="T:System.Xml.XmlWriter" /> dans lequel l'objet est sérialisé.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <summary>Indique que le membre (un champ qui renvoie un tableau d'objets <see cref="T:System.Xml.Linq.XElement" /> ou <see cref="T:System.Xml.Linq.XNode" />) contient des objets représentant un élément XML qui n'a aucun membre correspondant dans l'objet en cours de sérialisation ou désérialisation.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> et spécifie le nom d'élément XML généré dans le document XML.</summary>
      <param name="name">Nom de l'élément XML généré par le <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> et spécifie le nom d'élément XML généré dans le document XML, ainsi que son espace de noms XML.</summary>
      <param name="name">Nom de l'élément XML généré par le <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
      <param name="ns">Espace de noms XML de l'élément XML. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <summary>Obtient ou définit le nom de l'élément XML.</summary>
      <returns>Nom de l'élément XML.</returns>
      <exception cref="T:System.InvalidOperationException">Le nom d’élément d’un membre du tableau ne correspond pas au nom d’élément spécifié par la propriété <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms XML généré dans le document XML.</summary>
      <returns>Espace de noms XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
      <summary>Obtient ou définit l'ordre explicite dans lequel les éléments sont sérialisés ou désérialisés.</summary>
      <returns>Ordre de la génération du code.</returns>
      <exception cref="T:System.ArgumentException">La <paramref name="value" /> définie est négative.</exception>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary>Spécifie que <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre de classe particulier en tant que tableau d'éléments XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> et spécifie le nom d'élément XML généré dans le document XML.</summary>
      <param name="elementName">Nom de l'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary>Obtient ou définit le nom d'élément XML donné au tableau sérialisé.</summary>
      <returns>Nom d'élément XML du tableau sérialisé.Par défaut, il s'agit du nom du membre auquel <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> est assigné.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary>Obtient ou définit une valeur indiquant si le nom d'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" /> est qualifié ou non.</summary>
      <returns>Une des valeurs <see cref="T:System.Xml.Schema.XmlSchemaForm" />.La valeur par défaut est XmlSchemaForm.None.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary>Obtient ou définit une valeur indiquant si <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre en tant qu'élément XML vide avec l'attribut xsi:nil défini sur true.</summary>
      <returns>La valeur est true si le <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère l'attribut xsi:nil, sinon false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms de l'élément XML.</summary>
      <returns>Espace de noms de l'élément XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary>Obtient ou définit l'ordre explicite dans lequel les éléments sont sérialisés ou désérialisés.</summary>
      <returns>Ordre de la génération de code.</returns>
      <exception cref="T:System.ArgumentException">La <paramref name="value" /> définie est négative.</exception>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary>Spécifie les types dérivés que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut placer dans un tableau sérialisé.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> et spécifie le nom de l'élément XML généré dans le document XML.</summary>
      <param name="elementName">Nom de l'élément XML. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> et spécifie le nom de l'élément XML généré dans le document XML et le <see cref="T:System.Type" /> pouvant être inséré dans le document XML généré.</summary>
      <param name="elementName">Nom de l'élément XML. </param>
      <param name="type">
        <see cref="T:System.Type" /> de l'objet à sérialiser. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> et spécifie le <see cref="T:System.Type" /> pouvant être inséré dans le tableau sérialisé.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de l'objet à sérialiser. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary>Obtient ou définit le type de données XML de l'élément XML généré.</summary>
      <returns>Type de données XSD (XML Schema Definition), comme défini par le document World Wide Web Consortium (www.w3.org), intitulé Schéma XML Partie 2 : Types de données (en anglais).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary>Obtient ou définit le nom de l'élément XML généré.</summary>
      <returns>Nom de l'élément XML généré.La valeur par défaut est l'identificateur du membre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary>Obtient ou définit une valeur indiquant si le nom de l'élément XML généré est qualifié.</summary>
      <returns>Une des valeurs <see cref="T:System.Xml.Schema.XmlSchemaForm" />.La valeur par défaut est XmlSchemaForm.None.</returns>
      <exception cref="T:System.Exception">La propriété <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> est définie sur XmlSchemaForm.Unqualified et une valeur <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> est spécifiée. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary>Obtient ou définit une valeur indiquant si <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre en tant que balise XML vide avec l'attribut xsi:nil défini sur true.</summary>
      <returns>La valeur est true si le <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère l'attribut xsi:nil, sinon false et aucune instance n'est générée.La valeur par défaut est true.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms de l'élément XML généré.</summary>
      <returns>Espace de noms de l'élément XML généré.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary>Obtient ou définit le niveau dans une hiérarchie d'éléments XML affectés par <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
      <returns>Index de base zéro d'un ensemble d'index dans un tableau de tableaux.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary>Obtient ou définit le type autorisé dans un tableau.</summary>
      <returns>
        <see cref="T:System.Type" /> autorisé dans le tableau.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
      <summary>Indique que <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser le membre de classe comme un attribut XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> et spécifie le nom de l'attribut XML généré.</summary>
      <param name="attributeName">Nom de l'attribut XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="attributeName">Nom de l'attribut XML généré. </param>
      <param name="type">
        <see cref="T:System.Type" /> utilisé pour stocker l'attribut. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> utilisé pour stocker l'attribut. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <summary>Obtient ou définit le nom de l'attribut XML.</summary>
      <returns>Nom de l'attribut XML.La valeur par défaut est le nom du membre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <summary>Obtient ou définit le type de données XSD de l'attribut XML généré par le <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Type de données XSD (XML Schema Definition), comme défini par le document World Wide Web Consortium (www.w3.org), intitulé Schéma XML Partie 2 : Types de données (en anglais).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <summary>Obtient ou définit une valeur indiquant si le nom d'attribut XML généré par le <see cref="T:System.Xml.Serialization.XmlSerializer" /> est qualifié.</summary>
      <returns>Une des valeurs <see cref="T:System.Xml.Schema.XmlSchemaForm" />.La valeur par défaut est XmlForm.None.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms XML de l'attribut XML.</summary>
      <returns>Espace de noms XML de l'attribut XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Type">
      <summary>Obtient ou définit le type complexe de l'attribut XML.</summary>
      <returns>Type de l'attribut XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary>Spécifie qu'il est possible d'utiliser une énumération pour détecter le membre.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> spécifiant le nom du membre qui renvoie l'énumération utilisée pour détecter un choix.</summary>
      <param name="name">Nom du membre qui renvoie l'énumération utilisée pour détecter un choix. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary>Obtient ou définit le nom du champ qui renvoie l'énumération à utiliser lors de la détection des types.</summary>
      <returns>Nom d'un champ qui renvoie une énumération.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttribute">
      <summary>Indique qu'un champ public ou une propriété publique représente un élément XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise ou désérialise l'objet qui le contient.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> et spécifie le nom de l'élément XML.</summary>
      <param name="elementName">Nom de l'élément XML du membre sérialisé. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> et spécifie le nom de l'élément XML et un type dérivé pour le membre auquel <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> est appliqué.Ce type de membre est utilisé lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise l'objet qui le contient.</summary>
      <param name="elementName">Nom de l'élément XML du membre sérialisé. </param>
      <param name="type">
        <see cref="T:System.Type" /> d'un objet dérivé du type du membre. </param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> et spécifie un type pour le membre auquel <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> est appliqué.Ce type est utilisé par <see cref="T:System.Xml.Serialization.XmlSerializer" /> lors de la sérialisation ou la désérialisation de l'objet qui le contient.</summary>
      <param name="type">
        <see cref="T:System.Type" /> d'un objet dérivé du type du membre. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <summary>Obtient ou définit le type de données XSD (XML Schema Definition) de l'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Type de données de schéma XML, comme défini par le document World Wide Web Consortium (www.w3.org), intitulé Schéma XML Partie 2 : Types de données (en anglais).</returns>
      <exception cref="T:System.Exception">Le type de données de schéma XML spécifié ne peut pas être mappé au type de données .NET. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <summary>Obtient ou définit le nom de l'élément XML généré.</summary>
      <returns>Nom de l'élément XML généré.Par défaut, il s'agit de l'identificateur du membre.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <summary>Obtient ou définit une valeur indiquant si l'élément est qualifié.</summary>
      <returns>Une des valeurs <see cref="T:System.Xml.Schema.XmlSchemaForm" />.La valeur par défaut est <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <summary>Obtient ou définit une valeur indiquant si le <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre défini sur null en tant que balise vide avec l'attribut xsi:nil défini sur true.</summary>
      <returns>La valeur est true si le <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère l'attribut xsi:nil, sinon false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms assigné à l'élément XML obtenu lorsque la classe est sérialisée.</summary>
      <returns>Espace de noms de l'élément XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Order">
      <summary>Obtient ou définit l'ordre explicite dans lequel les éléments sont sérialisés ou désérialisés.</summary>
      <returns>Ordre de la génération du code.</returns>
      <exception cref="T:System.ArgumentException">La <paramref name="value" /> définie est négative.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <summary>Obtient ou définit le type d'objet utilisé pour représenter l'élément XML.</summary>
      <returns>
        <see cref="T:System.Type" /> du membre.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlEnumAttribute">
      <summary>Contrôle la manière dont le <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un membre d'énumération.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> et spécifie la valeur XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère ou reconnaît (selon qu'il sérialise ou désérialise l'énumération, respectivement).</summary>
      <param name="name">Nom de remplacement du membre d'énumération. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <summary>Obtient ou définit la valeur générée dans une instance de document XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise une énumération ou la valeur reconnue lors de la désérialisation du membre de l'énumération.</summary>
      <returns>Valeur générée dans une instance de document XML lorsque le <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise l'énumération ou valeur reconnue lorsqu'il désérialise le membre d'énumération.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <summary>Indique à la méthode <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> de ne pas sérialiser la valeur du champ public ou de la propriété en lecture/écriture publique.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary>Permet à <see cref="T:System.Xml.Serialization.XmlSerializer" /> de reconnaître un type lorsqu'il sérialise ou désérialise un objet.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de l'objet à inclure. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary>Obtient ou définit le type de l'objet à inclure.</summary>
      <returns>
        <see cref="T:System.Type" /> de l'objet à inclure.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <summary>Spécifie que la propriété, le paramètre, la valeur de retour ou le membre de classe cible contient des préfixes associés aux espaces de noms utilisés dans un document XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlRootAttribute">
      <summary>Contrôle la sérialisation XML de la cible d'attribut en tant qu'élément racine XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlRootAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> et spécifie le nom de l'élément racine XML.</summary>
      <param name="elementName">Nom de l'élément racine XML. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <summary>Obtient ou définit le type de données XSD de l'élément racine XML.</summary>
      <returns>Type de données XSD (XML Schema Definition), comme défini par le document World Wide Web Consortium (www.w3.org), intitulé Schéma XML Partie 2 : Types de données (en anglais).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <summary>Obtient ou définit le nom de l'élément XML qui est généré et reconnu, respectivement, par les méthodes <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> et <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" /> de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Nom de l'élément racine XML qui est généré et reconnu dans une instance de document XML.Par défaut, il s'agit du nom de la classe sérialisée.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <summary>Obtient ou définit une valeur indiquant si <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre défini sur null en attribut xsi:nil défini sur true.</summary>
      <returns>La valeur est true si le <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère l'attribut xsi:nil, sinon false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms de l'élément racine XML.</summary>
      <returns>Espace de noms de l'élément XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <summary>En cas d'application à un type qui implémente l'interface <see cref="T:System.Xml.Serialization.IXmlSerializable" />, stocke le nom d'une méthode statique du type qui renvoie un schéma XML et un <see cref="T:System.Xml.XmlQualifiedName" /> (ou <see cref="T:System.Xml.Schema.XmlSchemaType" /> pour les types anonymes) qui contrôle la sérialisation du type.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> pour une méthode statique spécifiée dans le type cible.</summary>
      <param name="methodName">Nom de la méthode statique qui doit être implémentée.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
      <summary>Obtient ou définit une valeur qui détermine si la classe cible est un caractère générique, ou que le schéma de la classe contient uniquement un élément xs:any.</summary>
      <returns>La valeur est true si la classe est un caractère générique ou si le schéma contient uniquement l'élément xs:any, sinon false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
      <summary>Obtient le nom de la méthode statique fournissant le schéma XML du type et le nom de son type de données de schéma XML.</summary>
      <returns>Nom de la méthode statique appelée par l'infrastructure XML pour renvoyer un schéma XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTextAttribute">
      <summary>Indique à <see cref="T:System.Xml.Serialization.XmlSerializer" /> que le membre doit être traité comme du texte XML lorsque la classe qui le contient est sérialisée ou désérialisée.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> du membre à sérialiser. </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <summary>Obtient ou définit le type de données XSD (XML Schema Definition) du texte généré par le <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Type de données XSD (XML Schema Definition), comme défini par le document World Wide Web Consortium (www.w3.org), intitulé Schéma XML Partie 2 : Types de données (en anglais).</returns>
      <exception cref="T:System.Exception">Le type de données de schéma XML spécifié ne peut pas être mappé au type de données .NET. </exception>
      <exception cref="T:System.InvalidOperationException">Le type de donnée de schéma XML que vous avez spécifié n’est pas valide pour la propriété et ne peut pas être converti dans le type du membre. </exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <summary>Obtient ou définit le type du membre.</summary>
      <returns>
        <see cref="T:System.Type" /> du membre.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary>Contrôle le schéma XML généré lorsque la cible de l'attribut est sérialisée par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> et spécifie le nom du type XML.</summary>
      <param name="typeName">Nom du type XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère lorsqu'il sérialise l'instance de classe (et reconnaît lorsqu'il désérialise l'instance de classe). </param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary>Obtient ou définit une valeur déterminant si le type de schéma résultant est un type anonyme XSD.</summary>
      <returns>La valeur est true si le type de schéma résultant est un type anonyme XSD, sinon false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary>Obtient ou définit une valeur indiquant si le type doit être inclus dans les documents du schéma XML.</summary>
      <returns>La valeur est true pour inclure le type dans les documents de schéma XML, sinon false.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary>Obtient ou définit l'espace de noms du type XML.</summary>
      <returns>Espace de noms du type XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary>Obtient ou définit le nom du type XML.</summary>
      <returns>Nom du type XML.</returns>
    </member>
  </members>
</doc>